{"version":3,"sources":["webpack:///./packages/fusioncharts/zoomline/index.js","webpack:///./packages/fusioncharts/viz/zoomline.js","webpack:///./packages/fc-charts/src/chart/zoomline/index.js","webpack:///./packages/fc-charts/src/dataset/zoomline/index.js","webpack:///./packages/fc-charts/src/dataset/zoomline/index.animation.js","webpack:///./packages/fc-charts/src/factories/zoomline-dataset.js","webpack:///./packages/fusioncharts/viz/zoomlinedy.js","webpack:///./packages/fc-charts/src/chart/zoomlinedy/index.js","webpack:///./packages/fc-charts/src/factories/zoomline-dual-y-dataset.js","webpack:///./packages/fc-features/src/crossline-zoomline/index.js"],"names":["name","type","requiresFusionCharts","extension","FusionCharts","addDep","ZoomlineCrossline","ZoomLine","ZoomLineDY","Zoomline","userAgent","window","navigator","Raphael","getDep","doc","TRACKER_FILL","test","opera","toFloat","parseFloat","toInt","parseInt","math","Math","mathMax","max","mathMin","min","mathCeil","ceil","mathFloor","floor","count","isWithinCanvas","e","chart","chartConfig","get","mousePos","getMouseCoordinate","chartX","chartY","minX","canvasLeft","minY","canvasTop","maxX","canvasWidth","maxY","canvasHeight","insideCanvas","originalEvent","addSymbol","symbolList","zoomX","hasScroll","eiMethods","zoomOut","callback","output","this","apiInstance","canvas","getChildren","inputManager","addJob","priorityList","postRender","zoomTo","startIndex","endIndex","UNDEF","resetChart","setZoomMode","yes","getViewStartIndex","axis","minValue","getVisibleConfig","getViewEndIndex","maxValue","scrollTo","registerFactory","datasetFactory","getName","includeInputOptions","__setDefaultConfig","config","friendlyName","defaultDatasetType","showValues","zeroplanethickness","zeroplanealpha","showzeroplaneontop","enablemousetracking","skipAttr","canvasborderthickness","showvalues","parseChartAttr","dataObj","chartAttrs","getFromEnv","useCrossline","Number","usecrossline","drawTrendRegion","getInputConfigurations","iapi","hookFn","dsi","dei","info","viewPortConfig","updateManager","prepareAttributes","configure","dragZoomIn","scaleX","scaleY","drawButton","boxStyle","stroke","zoomPaneStroke","fill","zoomPaneFill","catZoomLimit","skipGraphics","dragendFn","zoomResetButton","tooltext","btnResetChartTooltext","zoomOutButton","btnZoomOutTooltext","dragPin","orientation","attr","allowPinMode","pinAttr","pinPaneFill","strokeWidth","showToolBarButtonTooltext","btnSwitchToPinModeTooltext","_setCategories","tempArr","data","j","len","chartDef","xAxis","cdm","cdmchar","category","categories","pluckNumber","compactdatamode","pluck","dataseparator","split","length","push","label","setAxisPadding","setTickValues","call","highlightPoint","showHover","cx","cy","point","index","toolText","tracker","eventName","domElement","eventInit","event","mouseEventInit","animationManager","chartComponents","components","chartGraphics","graphics","isHover","trackerCheck","datasetObj","dataset","datasetConfig","radius","zoomedRadius","hoverCosmetics","borderColor","borderThickness","plotEventHandlerCallback","plotEventHandler","setAnimation","el","r","container","trackerGroup","component","on","hover","x","y","tooltip","link","lastHoveredPoint","enableToolTip","transform","node","lastMouseEvent","touches","dispatchEvent","MouseEvent","bubbles","cancelable","clientX","pageX","body","scrollLeft","documentElement","clientY","pageY","scrollTop","screenX","screenY","createEvent","initEvent","createEventObject","fireEvent","eventType","configureAttributes","style","colorManager","canvasBorderColor","getColor","bntTooltext","showtoolbarbuttontooltext","stepZoom","stepzoom","extend2","useRoundEdges","useroundedges","zoomType","canvasPadding","canvaspadding","scrollColor","getFirstColor","scrollcolor","scrollShowButtons","scrollshowbuttons","scrollHeight","scrollheight","scrollBarFlat","flatscrollbars","allowpinmode","skipOverlapPoints","skipoverlappoints","btnresetcharttooltext","btnzoomouttooltext","btnSwitchToZoomModeTooltext","btnswitchtozoommodetooltext","btnswitchtopinmodetooltext","convertColor","pinpanebgcolor","pinpanebgalpha","zoompanebgcolor","zoompanebgalpha","zoompanebordercolor","zoompaneborderalpha","showPeakData","showpeakdata","maxPeakDataLimit","maxpeakdatalimit","maxpeaklimit","minPeakDataLimit","minpeakdatalimit","minpeaklimit","crossline","enabled","showcrossline","line","crosslinethickness","crosslinecolor","crosslinealpha","labelEnabled","showcrosslinelabel","labelstyle","fontSize","crosslinelabelsize","outCanfontSize","fontSizeWithUnit","pluckFontSizeMaintainUnit","outCanfontSizeWithUnit","fontFamily","crosslinelabelfont","outCanfontFamily","valueEnabled","showcrosslinevalues","valuestyle","crosslinevaluesize","inCanfontSize","crosslinevaluefont","inCanvasStyle","tooltipSepChar","tooltipsepchar","showTerminalValidData","showterminalvaliddata","getValuePixel","px","ddsi","ppp","getDatasets","dataSetArr","iterateComponents","child","getType","__preDraw","seriesItemConf","ppl","iapiConfig","crossLineConfig","canvasConfig","canvasPaddingLeft","canvasPaddingRight","yAxis","clen","getTicksLen","start","displaystartindex","end","displayendindex","overFlowingMarkerWidth","computeFontSize","borderWidth","showborder","borderthickness","updateAnimDuration","status","maxZoomLimit","maxzoomlimit","viewPortHistory","pixelsperpoint","pixelsperlabel","xaxisminlabelwidth","getAxisConfig","rotation","amrd","anchorminrenderdistance","nvl","numvisiblelabels","oppp","oppl","vdl","offset","step","llen","alen","ddei","ppc","drawanchors","anchorradius","anchorborderthickness","_prezoomed","_visw","_visx","_visout","height","_yminValue","getLimit","_ymin","getPixel","setVisibleConfig","resetZoom","history","origInfo","fireChartInstanceEvent","_zoomargs","id","lastinfo","args","pop","zoomRangePixels","pxs","pxe","hasChartMessage","getValue","origpixel","getOriginalPositions","origX","origY","xaxisRange","axisRange","yaxisRange","xPVR","yPVR","x1","y1","x2","y2","oldScaleX","oldScaleY","oldX","oldY","xMin","xMax","yMin","yMax","i","labelStep","stepValue","lskip","norm","visibleExtremes","dataSets","visW","getPixelX","val","wrtVisible","cssLabel","legendClicked","draw","lineHeight","abs","round","setLabelConfig","getParsedLabel","xlabels","parsed","parseUnsafeString","_setAxisScale","setScrollType","getDSdef","ZoomLineDataset","MSLine","HTP","hasTouch","TOUCH_THRESHOLD_PIXELS","CLICK_THRESHOLD_PIXELS","zoomlineAnimation","skipIgnorerIndices","_plotConfigure","setData","newDataSetLen","conf","value","setValue","peakDataLowerBound","peakDataUpperBound","drawPlots","hideAllAnchors","_setConfigure","newDataset","newIndex","cdef","JSONData","showanchors","linethickness","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","datasetJSON","pgsw","pin","pinlinethicknessdelta","hashify","linecolor","alpha","animation","transposeanimduration","defaultPadding","left","right","drawLabel","isWithinShape","pointObj","pX","anchorProps","dataStore","dragTolerance","xPos","yPos","dx","dy","diff","hoverEffects","_xPos","_yPos","anchorRadius","sqrt","pow","pointIndex","hovered","ii","element","hide","_firePlotEvent","plotIndex","eventArgs","setLink","toolTipController","setElement","toolTip","currentToolTip","noCrossline","_decideTooltipType","_rolloverResponseSetter","cursor","_rolloutResponseSetter","calculateScrollRange","catLen","scrollMinVal","scrollMaxVal","scrollMinValForLabel","scrollMaxValForLabel","LineDataset","lineAnimation","dataSet","jsonData","datasetsJSON","datasetParent","setChartMessage","createPinElem","addEventListener","Zoomlinedy","ZoomLineDy","getSpecificxAxisConf","getSpecificyAxisConf","axisFactory","isdual","syncaxislimits","_feedAxesRawData","prototype","setAxisDimention","indices1","indices2","confArr1","confArr2","vCanvasArr","parentyaxis","toLowerCase","removeDataset","remove","scale","_top","plotOut","boxHeight","chartInclusionList","callbackLabel","callbackValue","createGroup","groupName","parentContainer","crossLine","state","nearestUndefined","pos","_scale","nearest","lowest","POSITIVE_INFINITY","NEG","POS","absValue","noScaleSide","CrossLine","_this","handlers","onMouseOut","position","onMouseMove","residue","xAxisVisible","bridgePixel","disabled","_mouseIsDown","getZoomInfo","getGraphicalElement","getDataIndexFromPixel","hidden","show","lineX","updateLabels","options","plot","plotColor","groupValue","positionLabel","groupLabel","attrObj","numberFormatter","plotX","plotY","top","plotH","plotO","plots","fetchedLine","labelStyle","valueStyle","pyaxis","pYAxisLimits","syaxis","sYAxisLimits","fetchedLabels","labels","fetchedPositionLabel","crosslineBottomGroup","getLinkedParent","getChildContainer","crosslineTopGroup","getState","width","group","getContainer","addContainer","insertBefore","css","doNotRemove","path","toBack","addGraphicalElement","direction","textDirection","text","ppixelRatio","axisDimention","axisLength","getVisibleLength","spixelRatio","yminValue","pyaxisminvalue","pyaxismaxvalue","syaxisminvalue","syaxismaxvalue","positionLabels","splice","getPositionLabel","getLabel","disable","visible","visw","flooredX","dummyText","pYAxisMinValue","pYAxisMaxValue","sYAxisMinValue","sYAxisMaxValue","verticalLimits","oMatrix","sections","_bottom","result","Object","defineProperty","enumerable","configurable","bottom","init","OccupancyMatrix","occupy","passedSections","attachShift","getVerticalLimits","getBBox","sortedLabels","forEach","labelYPos","parentYAxis","sort","a","b","sortedLabel","bBox","labelWidth","halfLabelWidth","adjustedHalfLabelWidth","calcY","valueGroup","dispose","key","hasOwnProperty","ComponentInterface","AttachableLabel","lRef","__shift","__index","applyShift","shiftApplied","applyDirectIndex","holes","repositionHoles","indexVal","nearestUndefIndex","attachedLabel","_index","calibratedIndex","nearestOffset","indexOf","apply","Fusioncharts","sender","crosslineOptions","crosslineCount","chartName","componentFactory","addExtEventListener","removeExtEventListener"],"mappings":"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","file":"fusioncharts.zoomline.js","sourcesContent":["import ZoomLine from '../viz/zoomline';\nimport ZoomLineDY from '../viz/zoomlinedy';\nimport ZoomlineCrossline from '@fusioncharts/features/src/crossline-zoomline';\n\nexport {\n  ZoomLine,\n  ZoomLineDY\n};\n\nexport default {\n  name: 'zoomline',\n  type: 'package',\n  requiresFusionCharts: true,\n  extension: FusionCharts => {\n    FusionCharts.addDep(ZoomlineCrossline);\n\n    FusionCharts.addDep(ZoomLine);\n    FusionCharts.addDep(ZoomLineDY);\n  }\n};\n","import Zoomline from '@fusioncharts/charts/src/chart/zoomline';\nexport default Zoomline;\n","import {\n  getMouseCoordinate,\n  extend2,\n  pluckNumber,\n  parseUnsafeString,\n  pluck,\n  UNDEF,\n  convertColor,\n  getFirstColor,\n  pluckFontSizeMaintainUnit\n} from '@fusioncharts/core/src/lib';\nimport MSLine from '../msline';\nimport ZoomLineDataset from '../../dataset/zoomline';\nimport datasetFactory from '../../factories/zoomline-dataset';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport { scrollTo } from '../_internal/utils/scroll-apis';\nimport { symbolList } from '../_internal/utils/iconsymbol';\nimport { getDep } from '@fusioncharts/core/src/dependency-manager';\n\nlet userAgent = window.navigator.userAgent,\n  Raphael = getDep('redraphael', 'plugin'),\n  doc = window.doc,\n  isIE = /msie/i.test(userAgent) && !window.opera,\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')', // invisible but clickable\n  toFloat = window.parseFloat,\n  PIPE = '|',\n  PX = 'px',\n  toInt = window.parseInt,\n  BLANK = '',\n  math = Math,\n  mathMax = math.max,\n  mathMin = math.min,\n  mathCeil = math.ceil,\n  mathFloor = math.floor,\n  CHART_STR = 'Zoomable and Panable Multi-series Line Chart',\n  ZOOMLINE_STR = 'zoomline',\n  ZOOM_STR = 'zoom',\n  count = 0,\n  fireMouseEvent = function (eventName, domElement, eventInit) {\n    var event,\n      mouseEventInit = eventInit;\n    if (!domElement || !eventName) {\n      return;\n    }\n\n    if (!mouseEventInit) {\n      mouseEventInit = {};\n    }\n    if (mouseEventInit.originalEvent) {\n      mouseEventInit = mouseEventInit.originalEvent;\n    }\n    // map touch event for touch devices\n    if (mouseEventInit.touches) {\n      mouseEventInit = mouseEventInit.touches[0];\n    }\n\n    if (domElement.dispatchEvent) {\n      if (MouseEvent) {\n        // for FireFox, chrome and opera. NOT confirmed in Safari\n        // Creates a MouseEvent object.\n        event = new MouseEvent(eventName, {\n          bubbles: !!mouseEventInit.bubbles,\n          cancelable: !!mouseEventInit.cancelable,\n          clientX: mouseEventInit.clientX || (mouseEventInit.pageX && (mouseEventInit.pageX -\n                          doc.body.scrollLeft - doc.documentElement.scrollLeft)) || 0,\n          clientY: mouseEventInit.clientY || (mouseEventInit.pageY && (mouseEventInit.pageY -\n                          doc.body.scrollTop - doc.documentElement.scrollTop)) || 0,\n          screenX: mouseEventInit.screenX || 0,\n          screenY: mouseEventInit.screenY || 0,\n          pageX: mouseEventInit.pageX || 0,\n          pageY: mouseEventInit.pageY || 0\n        });\n      } else if (doc.createEvent) {\n        // for IE support.\n        event = doc.createEvent('HTMLEvents');\n        event.initEvent(eventName, !!mouseEventInit.bubbles, !!mouseEventInit.cancelable);\n      }\n      event.eventName = eventName;\n      event && domElement.dispatchEvent(event);\n    } else if (doc.createEventObject && domElement.fireEvent) {\n      event = doc.createEventObject();\n      event.eventType = eventName;\n      event.eventName = eventName;\n      // trigger the event forcefully.\n      domElement.fireEvent('on' + eventName, event);\n    }\n  },\n  isWithinCanvas = function (e, chart) {\n    var chartConfig = chart.get('config'),\n      mousePos = getMouseCoordinate(chart.get('linkedItems', 'container'), e, chart),\n      /* converts the original mouse event toa Fusion Charts event( that has chartX, chartY, pageX and pageY as\n              its property) */\n      chartX = mousePos.chartX,\n      chartY = mousePos.chartY,\n      minX = chartConfig.canvasLeft,\n      minY = chartConfig.canvasTop,\n      maxX = chartConfig.canvasLeft + chartConfig.canvasWidth,\n      maxY = chartConfig.canvasHeight + chartConfig.canvasTop;\n    // default value of the flag.\n    mousePos.insideCanvas = false;\n\n    // store the original event as well\n    mousePos.originalEvent = e;\n    // return true if within the canvas\n    if (chartX > minX && chartX < maxX && chartY > minY && chartY < maxY) {\n      // set the flag to be TRUE if triggered within the canvas area.\n      mousePos.insideCanvas = true;\n    }\n    return mousePos;\n  };\nRaphael.addSymbol(symbolList);\n\nclass ZoomLine extends MSLine {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ZoomLine';\n  }\n\n  /**\n   * Function to state if inputOptions are to be used for this charts\n   * @return {Array} value\n   */\n  static includeInputOptions () {\n    return ['DragZoomIn', 'DragPin', 'ZoomResetButton', 'ZoomOutButton'];\n  }\n\n  constructor () {\n    super();\n    this.zoomX = true;\n    this.hasScroll = true;\n    this.eiMethods = {\n      /**\n       * Zooms ZoomLine chart one level out\n       * @group chart-zoomline:zoom-1\n       *\n       */\n      zoomOut: function (callback) {\n        var chart = this.apiInstance,\n          canvas = chart.getChildren && chart.getChildren('canvas')[0],\n          inputManager = canvas && canvas.getChildren('inputManager'),\n          output;\n\n        inputManager = inputManager && inputManager[0];\n        if (!chart || !inputManager) {\n          return;\n        }\n\n        chart.addJob(`zoomOut${count++}`, function () {\n          output = inputManager.zoomOut();\n          if (typeof callback === 'function') {\n            callback(output);\n          }\n        }, priorityList.postRender);\n      },\n\n      /**\n       * Zooms ZoomLine chart to a range of data.\n       *\n       * @group chart-zoomline:zoom-2\n       *\n       *\n       * @param {number} startIndex The index of the dataset from which it needs to be zoomed into.\n       * @param {number} endIndex the index of the dataset until which it needs to be zoomed into.\n       */\n      zoomTo: function (startIndex, endIndex, callback) {\n        var chartInstance = this,\n          chart = chartInstance.apiInstance,\n          canvas = chart.getChildren && chart.getChildren('canvas')[0],\n          inputManager = canvas && canvas.getChildren('inputManager'),\n          output;\n\n        if (startIndex === UNDEF || endIndex === UNDEF) {\n          return;\n        }\n        inputManager = inputManager && inputManager[0];\n\n        if (!chart || !inputManager) {\n          return;\n        }\n\n        if (callback) {\n          chart.addJob(`zoomTo${count++}`, function () {\n            output = inputManager.zoomTo(startIndex, endIndex);\n            if (typeof callback === 'function') {\n              callback(output);\n            }\n          }, priorityList.postRender);\n        } else {\n          return inputManager.zoomTo(startIndex, endIndex);\n        }\n      },\n\n      /**\n       * Reset all zoom, pan and pin actions that has been done on ZoomLine chart.\n       *\n       * @group chart-zoomline:zoom-3\n       *\n       */\n      resetChart: function () {\n        var chart = this.apiInstance,\n          canvas = chart.getChildren && chart.getChildren('canvas')[0],\n          inputManager = canvas && canvas.getChildren('inputManager'),\n          _helperFn = function () {\n            inputManager.resetChart();\n          };\n\n        inputManager = inputManager && inputManager[0];\n\n        if (!chart || !inputManager) {\n          return;\n        }\n\n        chart.addJob(`resetChart${count++}`, _helperFn, priorityList.postRender);\n      },\n\n      /**\n       * Switches between zoom and pin mode. This function does not work when `allowPinMode` is set to `0` in\n       * chart XML or JSON.\n       *\n       * Zoom Line charts can have either a zoom mode or a pin mode. Zoom mode lets you select a section of the\n       * chart by dragging mouse cursor across the canvas and the chart zooms in on the selected section. In pin\n       * mode, the selected portion can be dragged around to compare with the rest of the chart. Zoom mode and pin\n       * mode can be toggled by clicking a button on the top right corner of the chart. This function lets you\n       * switch between zoom mode and pin mode programmatically.\n       *\n       * @group chart-zoomline:zoom-4\n       *\n       * @fires FusionCharts#zoomModeChanged\n       *\n       * @param {boolean} yes Boolean value to be `true` if zoom mode needs to be activated, `false` to activate\n       * pin mode.\n       */\n      setZoomMode: function (yes) {\n        var chart = this.apiInstance,\n          canvas = chart.getChildren && chart.getChildren('canvas')[0],\n          inputManager = canvas && canvas.getChildren('inputManager');\n\n        inputManager = inputManager && inputManager[0];\n\n        if (!chart || !inputManager) {\n          return;\n        }\n\n        chart.addJob(`setZoomMode${count++}`, function () {\n          inputManager.setZoomMode(yes);\n        }, priorityList.postRender);\n      },\n\n      /**\n       * Returns the index of the first visible point on canvas of ZoomLine chart\n       * @group chart-zoomline:view-1\n       * @return {number}\n       */\n      getViewStartIndex: function (callback) {\n        var chart = this.apiInstance,\n          axis,\n          minValue,\n          startIndex;\n\n        if (callback) {\n          chart.addJob(`getViewStartIndex${count++}`, function () {\n            if (typeof callback === 'function') {\n              axis = chart.getChildren('xAxis')[0];\n              minValue = axis.getVisibleConfig().minValue;\n              startIndex = Math.ceil(minValue);\n              // Math.ceil(x) = -0, where -1<x<0 hence checking is done for 0\n              callback(startIndex === 0 ? 0 : startIndex);\n            }\n          }, priorityList.postRender);\n        } else {\n          axis = chart.getChildren('xAxis')[0];\n          minValue = axis.getVisibleConfig().minValue;\n          startIndex = Math.ceil(minValue);\n          // Math.ceil(x) = -0, where -1<x<0 hence checking is done for 0\n          return startIndex === 0 ? 0 : startIndex;\n        }\n      },\n\n      /**\n       * Returns the index of the last visible point on canvas of ZoomLine chart\n       * @group chart-zoomline:view-2\n       * @return {number}\n       */\n      getViewEndIndex: function (callback) {\n        var chart = this.apiInstance,\n          axis,\n          maxValue;\n\n        if (callback) {\n          chart.addJob(`getViewEndIndex${count++}`, function () {\n            if (typeof callback === 'function') {\n              axis = chart.getChildren('xAxis')[0];\n              maxValue = axis.getVisibleConfig().maxValue;\n              callback(Math.floor(maxValue));\n            }\n          }, priorityList.postRender);\n        } else {\n          axis = chart.getChildren('xAxis')[0];\n          maxValue = axis.getVisibleConfig().maxValue;\n          return Math.floor(maxValue);\n        }\n      }\n    };\n    this.eiMethods.scrollTo = scrollTo;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = ZOOMLINE_STR;\n    config.showValues = 0;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.skipAttr = true;\n    config.canvasborderthickness = 1;\n    config.showvalues = 0;\n    // config.animation = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ZoomLine';\n  }\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    let chart = this,\n      config = chart.config,\n      jsonData = dataObj || chart.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart;\n\n    config.useCrossline = Number(chartAttrs.usecrossline) || chartAttrs.usecrossline === UNDEF ? 1 : 0;\n    config.drawTrendRegion = 0;\n  }\n\n  getInputConfigurations () {\n    var iapi = this,\n      config = iapi.config,\n      hookFn = function (dsi, dei) {\n        iapi.addJob('inputZoom', () => {\n          var info = config.viewPortConfig;\n\n          info.dsi = dsi;\n          info.dei = dei;\n          iapi.updateManager();\n          iapi.getChildren('xAxis')[0].prepareAttributes();\n        }, priorityList.configure);\n      },\n      dragendFn = (...params) => hookFn(params[1], params[2]),\n      // Store all the input components and their properties in an array\n      inputComponents = {\n        dragZoomIn: {\n          scaleX: true,\n          scaleY: false,\n          drawButton: false,\n          boxStyle: {\n            stroke: config.zoomPaneStroke,\n            fill: config.zoomPaneFill,\n            'stroke-width': 0\n          },\n          catZoomLimit: 2,\n          skipGraphics: true,\n          dragendFn\n        },\n        zoomResetButton: {\n          hookFn,\n          tooltext: config.btnResetChartTooltext\n        },\n        zoomOutButton: {\n          hookFn,\n          tooltext: config.btnZoomOutTooltext\n        },\n        dragPin: {\n          orientation: 'horizontal',\n          attr: {\n            stroke: config.zoomPaneStroke,\n            fill: config.zoomPaneFill,\n            'stroke-width': 0\n          },\n          skipGraphics: !config.allowPinMode,\n          pinAttr: {\n            'stroke-width': 0,\n            stroke: 'none',\n            fill: config.pinPaneFill,\n            'shape-rendering': 'crisp'\n          },\n          strokeWidth: 0,\n          tooltext: (config.showToolBarButtonTooltext && config.btnSwitchToPinModeTooltext) || BLANK\n        }\n      };\n\n    return inputComponents;\n  }\n\n  _setCategories () {\n    var iapi = this,\n      config = iapi.config,\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartDef = dataObj.chart || {},\n      xAxis = iapi.getChildren('xAxis'),\n      tempArr,\n      data,\n      j,\n      len,\n      cdm = config.cdm,\n      cdmchar = config.cdmchar,\n      category = (dataObj.categories && dataObj.categories[0].category) || [];\n\n    config.cdm = cdm = pluckNumber(chartDef.compactdatamode, 0);\n    config.cdmchar = cdmchar = pluck(chartDef.dataseparator, PIPE);\n\n    if (cdm || typeof category === 'string') {\n      if (category.split) {\n        tempArr = category.split(cdmchar);\n        data = [];\n        for (j = 0, len = tempArr.length; j < len; j += 1) {\n          data.push({\n            label: tempArr[j]\n          });\n        }\n        iapi.config.categories = dataObj.categories[0].category = data;\n      }\n    }\n    xAxis[0].setAxisPadding(0, 0);\n    xAxis[0].setTickValues(data || category);\n  }\n\n  isWithinCanvas (e, chart) {\n    return isWithinCanvas.call(this, e, chart);\n  }\n\n  highlightPoint (showHover, cx, cy, point, index, toolText) {\n    var chart = this,\n      chartConfig = chart.config,\n      animationManager = chart.getFromEnv('animationManager'),\n      chartComponents = chart.components,\n      chartGraphics = chart.graphics,\n      isHover = Number(showHover),\n      trackerCheck = chartGraphics.tracker,\n      tracker,\n      datasetObj = chartComponents.dataset[index],\n      datasetConfig = datasetObj && datasetObj.config,\n      radius = (datasetObj && datasetConfig.zoomedRadius) || 0,\n      hoverCosmetics = datasetObj && datasetConfig.hoverCosmetics,\n      fill = hoverCosmetics && hoverCosmetics.fill,\n      borderColor = hoverCosmetics && hoverCosmetics.borderColor,\n      borderThickness = hoverCosmetics && hoverCosmetics.borderThickness,\n      // attach the callbacks for the click and hover interactions for the hovering element.\n      plotEventHandlerCallback = {\n        'click': function (e) {\n          chart.plotEventHandler(this, e);\n        },\n        'hoverIn': function (e) {\n          chart.plotEventHandler(this, e, 'dataplotRollover');\n        },\n        'hoverOut': function (e) {\n          chart.plotEventHandler(this, e, 'dataplotRollout');\n        }\n      };\n\n    if (!trackerCheck) {\n      // in case the tracker element is not created. Attach the callbacks for click and hovering effects.\n      tracker = chartGraphics.tracker = animationManager.setAnimation({\n        el: 'circle',\n        attr: {\n          cx: 0,\n          cy: 0,\n          r: radius,\n          fill: isHover ? fill : TRACKER_FILL,\n          stroke: isHover ? borderColor : TRACKER_FILL,\n          'stroke-width': isHover ? borderThickness : 0,\n          'clip-rect': chartConfig.canvasLeft + ',' + (chartConfig.canvasTop) + ',' +\n            chartConfig.canvasWidth + ',' + chartConfig.canvasHeight\n        },\n        container: chartGraphics.trackerGroup,\n        component: chart\n      })\n        .on('fc-click', plotEventHandlerCallback.click)\n        .hover(plotEventHandlerCallback.hoverIn, plotEventHandlerCallback.hoverOut);\n    }\n    // Attach the required information for the hovering element.\n    point && tracker.data('eventArgs', {\n      x: point.x,\n      y: point.y,\n      tooltip: point.tooltip,\n      link: point.link\n    });\n\n    /* store the hovered point as last visible point. This is required to avoid redaundant calls if the same\n          point is hovered. */\n    chartConfig.lastHoveredPoint = point;\n    chart.getFromEnv('toolTipController').enableToolTip(tracker, toolText);\n    tracker\n      .transform('t' + (cx + chartConfig.canvasLeft) + ',' + (cy + chartConfig.canvasTop));\n    /* on first mouse move the element is created and on the next mouse move the tooltip is shown.\n          In order give the effect of displaying the tooltip once hovered, another mouseMove event is\n          fired forcefully */\n    point && fireMouseEvent('mouseover', tracker && tracker.node, chartConfig.lastMouseEvent);\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    var style,\n      iapi = this,\n      jsonData = iapi.getFromEnv('dataSource'),\n      chartDef = jsonData.chart || {},\n      colorManager = iapi.getFromEnv('color-manager'),\n      canvasBorderColor = colorManager.getColor('canvasBorderColor'),\n      bntTooltext = pluckNumber(chartDef.showtoolbarbuttontooltext, 1),\n      config;\n    // The base configure fn above creates a dummy chart object if there is no chart object in json data.\n    config = iapi.config;\n    style = config.style;\n\n    config.stepZoom = 400 / (100 - pluckNumber(chartDef.stepzoom, 25));\n    if (config.stepZoom <= 2) {\n      config.stepZoom = 1.9;\n    }\n    // overwrite the existing chart configurations.\n    // Copy and prepare some configurations for zoom charts\n    extend2(config, {\n      useRoundEdges: pluckNumber(chartDef.useroundedges, 0),\n      // animation: false,\n      zoomType: 'x',\n      canvasPadding: pluckNumber(chartDef.canvaspadding, 0),\n      scrollColor: getFirstColor(pluck(chartDef.scrollcolor,\n        colorManager.getColor('altHGridColor'))),\n      scrollShowButtons: !!pluckNumber(chartDef.scrollshowbuttons, 1),\n      scrollHeight: pluckNumber(chartDef.scrollheight, 16) || 16,\n      scrollBarFlat: pluckNumber(chartDef.flatscrollbars, 0),\n      allowPinMode: pluckNumber(chartDef.allowpinmode, 1),\n      skipOverlapPoints: pluckNumber(chartDef.skipoverlappoints, 1),\n      showToolBarButtonTooltext: bntTooltext,\n      btnResetChartTooltext: bntTooltext ? (pluck(chartDef.btnresetcharttooltext, 'Reset Chart')) : '',\n      btnZoomOutTooltext: bntTooltext ? pluck(chartDef.btnzoomouttooltext, 'Zoom out one level') : '',\n      btnSwitchToZoomModeTooltext: bntTooltext ? pluck(chartDef.btnswitchtozoommodetooltext,\n        '<strong>Switch to Zoom Mode</strong><br/>Select a subset of data to zoom ' +\n                      'into it for detailed view') : '',\n      btnSwitchToPinModeTooltext: bntTooltext ? pluck(chartDef.btnswitchtopinmodetooltext,\n        '<strong>Switch to Pin Mode</strong><br/>Select a subset of data and compare ' +\n                      'with the rest of the view') : '',\n      /**\n               *  @note pinPaneStroke related attribute parsing is unused in\n               * present JS ZoomLine implementation.\n               pinPaneStrokeWidth: pluckNumber(chartDef.pinpaneborderthickness, 1),\n               pinPaneStroke: convertColor(pluck(chartDef.pinpanebordercolor,\n               canvasBorderColor), pluckNumber(chartDef.pinpaneborderalpha, 15)),\n               */\n      pinPaneFill: convertColor(pluck(chartDef.pinpanebgcolor,\n        canvasBorderColor), pluckNumber(chartDef.pinpanebgalpha, 15)),\n      zoomPaneFill: convertColor(pluck(chartDef.zoompanebgcolor,\n        '#b9d5f1'), pluckNumber(chartDef.zoompanebgalpha, 30)),\n      zoomPaneStroke: convertColor(pluck(chartDef.zoompanebordercolor,\n        '#3399ff'), pluckNumber(chartDef.zoompaneborderalpha, 80)),\n      showPeakData: pluckNumber(chartDef.showpeakdata, 0),\n      maxPeakDataLimit: pluckNumber(chartDef.maxpeakdatalimit, chartDef.maxpeaklimit, null),\n      minPeakDataLimit: pluckNumber(chartDef.minpeakdatalimit, chartDef.minpeaklimit, null),\n      crossline: {\n        enabled: pluckNumber(chartDef.showcrossline, 1),\n        line: {\n          'stroke-width': pluckNumber(chartDef.crosslinethickness, 1),\n          'stroke': getFirstColor(pluck(chartDef.crosslinecolor, '#000000')),\n          'stroke-opacity': pluckNumber(chartDef.crosslinealpha, 20) / 100\n        },\n        labelEnabled: pluckNumber(chartDef.showcrosslinelabel,\n          chartDef.showcrossline, 1),\n        labelstyle: {\n          fontSize: toFloat(chartDef.crosslinelabelsize)\n            ? toFloat(chartDef.crosslinelabelsize) + PX : style.outCanfontSize,\n          fontSizeWithUnit: pluckFontSizeMaintainUnit(chartDef.crosslinelabelsize, style.outCanfontSizeWithUnit),\n          fontFamily: pluck(chartDef.crosslinelabelfont,\n            style.outCanfontFamily)\n        },\n        valueEnabled: pluckNumber(chartDef.showcrosslinevalues,\n          chartDef.showcrossline, 1),\n        valuestyle: {\n          fontSize: toFloat(chartDef.crosslinevaluesize)\n            ? toFloat(chartDef.crosslinevaluesize) + PX : style.inCanfontSize,\n          fontSizeWithUnit: pluckFontSizeMaintainUnit(chartDef.crosslinevaluesize, style.outCanfontSizeWithUnit),\n          fontFamily: pluck(chartDef.crosslinevaluefont,\n            style.inCanvasStyle.fontFamily)\n        }\n      },\n      useCrossline: pluckNumber(chartDef.usecrossline, 1),\n      tooltipSepChar: pluck(chartDef.tooltipsepchar, ', '),\n      showTerminalValidData: pluckNumber(chartDef.showterminalvaliddata, 0)\n    });\n  }\n\n  getValuePixel (px) {\n    var chart = this,\n      chartConfig = chart.config,\n      info = chartConfig.viewPortConfig;\n    return info.ddsi + mathFloor(px / info.ppp);\n  }\n\n  /**\n   * Returns the dataset array\n   * @return {Array} array of dataset objects\n   */\n  getDatasets () {\n    var iapi = this,\n      dataSetArr = [];\n\n    iapi.iterateComponents((child) => {\n      if ((child.getType && child.getType() === 'dataset')) {\n        dataSetArr.push(child);\n      }\n    });\n    return dataSetArr;\n  }\n\n  __preDraw () {\n    var seriesItemConf,\n      ppp,\n      ppl,\n      iapi = this,\n      // todo: containerelement should be a part of graphics components.\n      // containerElem = iapiGraphics.container || iapi.container,\n      iapiConfig = iapi.config,\n      chartDef = iapi.getFromEnv('dataSource').chart,\n      cdm = iapiConfig.cdm,\n      xAxis = iapi.getChildren('xAxis')[0],\n      info = iapiConfig.viewPortConfig,\n      crossLineConfig = iapiConfig.crossline,\n      canvasConfig = iapi.getChildren('canvas')[0].config,\n      canvasPadding = mathMax(canvasConfig.canvasPadding, canvasConfig.canvasPaddingLeft,\n        canvasConfig.canvasPaddingRight),\n      yAxis = iapi.getChildren('yAxis')[0],\n      canvasHeight = iapiConfig.canvasHeight,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      clen = xAxis.getTicksLen(),\n      {minValue, maxValue} = xAxis.getVisibleConfig(),\n      start = pluckNumber(chartDef.displaystartindex, minValue, 1),\n      end = pluckNumber(chartDef.displayendindex, maxValue, clen || 2),\n      // Validate and parse the data display indices and also calculate\n      // initial pixels-per-point.\n      dsi = toInt(start, 10) - 1,\n      dei = toInt(end, 10) - 1,\n\n      overFlowingMarkerWidth = 0,\n      dataSetArr,\n      j;\n\n    // Resetting the font sizes for the cross line when chart is resized\n    crossLineConfig.labelstyle.fontSize = this.computeFontSize(\n      crossLineConfig.labelstyle.fontSizeWithUnit);\n    crossLineConfig.valuestyle.fontSize = this.computeFontSize(\n      crossLineConfig.valuestyle.fontSizeWithUnit);\n\n    dataSetArr = iapi.getDatasets();\n\n    j = dataSetArr.length;\n\n    iapiConfig.borderWidth = pluckNumber(chartAttrs.showborder,\n      1) ? pluckNumber(chartAttrs.borderthickness, 1) : 0;\n\n    iapiConfig.updateAnimDuration = 500; // default animation durations.\n    // the origin of the container element should coincide with the origin(top-left) of the canvas area.\n\n    iapiConfig.status = ZOOM_STR;\n    // set the maximum scaleX and scaleY.\n    iapiConfig.maxZoomLimit = pluckNumber(chartDef.maxzoomlimit, 1000);\n\n    // stores the different visual configurations for a historical reference.\n    iapiConfig.viewPortHistory = [];\n\n    ((ppp = pluckNumber(chartDef.pixelsperpoint, 15)) < 1) && (ppp = 1);\n    ((ppl = pluckNumber(chartDef.pixelsperlabel, chartDef.xaxisminlabelwidth,\n      xAxis.getAxisConfig('labels').rotation ? 20 : 60)) < ppp) && (ppl = ppp);\n    // start index must be positive and less than end. last index must\n    // not be greater than category count.\n    (dsi < 0 || dsi >= ((clen - 1) || 1)) && (dsi = 0);\n    (dei <= dsi || dei > ((clen - 1) || 1)) && (dei = (clen - 1) || 1);\n    // Set initial zoom information\n    info = (iapiConfig.viewPortConfig = extend2(iapiConfig.viewPortConfig, {\n      // cnd: pluckNumber(chartDef.connectnulldata, 0), // connectNullData\n      amrd: pluckNumber(chartDef.anchorminrenderdistance, 20), // anchor render distance\n      nvl: pluckNumber(chartDef.numvisiblelabels, 0), // num visible labels\n      cdm: cdm, // compact data mode\n      oppp: ppp, // original pixels per point\n      oppl: ppl, // original pixels per label\n      dsi: dsi, // dislay start index\n      dei: dei, // display end index\n      vdl: dei - dsi, // visible display length\n      // dmax: legacyYAxisConf.max = dmax, // max value of all data\n      // dmin: legacyYAxisConf.min = dmin, // min value of all data\n      // dsecondarymax : secondaryYAxisConf.max = dsecondarymax,\n      // dsecondarymin : secondaryYAxisConf.min = dsecondarymin,\n      clen: clen, // category length and data length\n\n      // Internal variables required for zoom state.\n      offset: 0, // (internal) drawing offset for smooth scroll,\n      step: 1, // (internal) default stepping or skipping,\n      llen: 0, // (internal) number of labels\n      alen: 0, // (internal) length of anchors already drawn\n      ddsi: dsi, // (internal) dynamic display start as per scroll\n      ddei: dei, // (internal) dynamic display end as per scroll\n      ppc: 0 // (internal) pixels per category\n    }));\n\n    if (!info.clen) {\n      return;\n    }\n    // calculate the overflowing markers width\n    while (j--) {\n      seriesItemConf = dataSetArr[j].config;\n      overFlowingMarkerWidth = mathMax(overFlowingMarkerWidth, ((seriesItemConf.drawanchors &&\n                  ((seriesItemConf.anchorradius || 0) + (Number(seriesItemConf.anchorborderthickness) || 0))) || 0));\n    }\n\n    iapiConfig.overFlowingMarkerWidth = overFlowingMarkerWidth;\n    canvasPadding = (iapiConfig.canvasPadding = mathMax(overFlowingMarkerWidth, canvasPadding));\n\n    // Do a check whether user has initially zoomed. That would\n    // mean to keep zoomOut button visible and also to create a\n    // fake first zoom level.\n    iapiConfig._prezoomed = (info.dei - info.dsi < info.clen - 1);\n    // Set the visual dimensions of plot inside canvas.\n    iapiConfig._visw = Math.max(1, iapiConfig.canvasWidth - canvasPadding * 2);\n    iapiConfig._visx = iapiConfig.canvasLeft + canvasPadding;\n    iapiConfig._visout = -(iapiConfig.height + canvasHeight + 1e3);\n\n    // Get the y-axis pixel value ratio, other y-axis related values and store for later use.\n    // iapiConfig._ypvr = (yAxis && yAxis.getPVR()) || 0;\n    iapiConfig._yminValue = yAxis.getLimit().min;\n    iapiConfig._ymin = yAxis.getPixel(iapiConfig._yminValue);\n\n    // Clip the dataset layer to required dimension. This layer will be\n    // scrolled by the scrollbar\n    // Increase the clipping region to acomodate overflowing anchors\n    // datalayer = datasetGroup.attr('clip-rect', [visx - overFlowingMarkerWidth,\n    //   canvasTop, visw + (overFlowingMarkerWidth * 2), canvasHeight]);\n\n    // if user has given the start and end index the chart will inform it to axis\n    if (pluckNumber(chartDef.displaystartindex, chartDef.displayendindex)) {\n      xAxis.setVisibleConfig(start, end);\n    }\n    iapi.updateManager();\n  }\n\n  resetZoom () {\n    var iapi = this,\n      iapiConfig = iapi.config,\n      history = iapiConfig.viewPortHistory,\n      origInfo = history[0];\n\n    // cannot reset twice!\n    if (!history.length) {\n      return false;\n    }\n\n    history.length = 0; // clear history\n    if (iapi.zoomTo(origInfo.dsi, origInfo.dei, origInfo)) {\n    /**\n     * This event is fired whenever the zoom history is cleared on a ZoomLine chart.\n     *\n     * @event FusionCharts#zoomReset\n     * @group chart-zoomline:zoom\n     */\n      iapi.fireChartInstanceEvent('zoomReset', iapi._zoomargs,\n        [iapi.getFromEnv('chartInstance').id]);\n    }\n\n    return true;\n  }\n\n  zoomOut () {\n    var lastinfo,\n      origInfo,\n      iapi = this,\n      iapiConfig = iapi.config,\n      history = iapiConfig.viewPortHistory,\n      dsi,\n      dei,\n      args;\n    lastinfo = history.pop(); // access the last history\n    origInfo = history[0] || iapiConfig.viewPortConfig;\n    if (lastinfo) {\n      dsi = lastinfo.dsi;\n      dei = lastinfo.dei;\n    } else {\n      // If zoom level is less than 1, it is equivalent to reset.\n      // But, in case chart was initially zoomed, we need to zoom out\n      // to full view.\n      if (iapiConfig._prezoomed) {\n        dsi = 0;\n        dei = origInfo.clen - 1;\n      }\n    }\n    /* info.lskip = lastinfo.lskip;\n          info.step = lastinfo.step;\n          iapi.components.xAxis[0].setAxisConfig({\n              'labelStep': info.lskip + 1\n          }); */\n    args = iapi.zoomTo(dsi, dei, lastinfo);\n    if (args) {\n      /**\n       * This event is fired when user zooms out on a ZoomLine chart.\n       *\n       * @event FusionCharts#zoomedOut\n       * @group chart-zoomline:zoom\n       *\n       * @param {number} level - Indicates to which zoom level the user has zoomed out to. `1` indicates that\n       * the chart has been completely zoomed out.\n       *\n       * @param {number} startIndex - The data start index that is in view for the zoomed out level\n       * @param {string} startLabel - The label of the data of the starting item in view.\n       * @param {number} endIndex - The data end index that is in view for the zoomed out level\n       * @param {string} endLabel - The label of the data of the last item in view.\n       */\n      iapi.fireChartInstanceEvent('zoomedout', args);\n    }\n\n    return true;\n  }\n\n  zoomRangePixels (pxs, pxe) {\n    var chart = this,\n      chartConfig = chart.config,\n      info = chartConfig.viewPortConfig,\n      ppp = info.ppp,\n      start = info.ddsi,\n      dsi,\n      dei;\n\n    dsi = start + mathFloor(pxs / ppp);\n    dei = start + mathFloor(pxe / ppp);\n    info.dsi = dsi;\n    info.dei = dei;\n    chart.updateManager();\n  }\n\n  prepareAttributes () {\n    // Don't prepare attributes if there is a chart message to be displayed\n    if (!this.config.hasChartMessage) {\n      this.__preDraw();\n      super.prepareAttributes();\n    }\n  }\n\n  getValue (point) {\n    var chart = this,\n      chartConfig = chart.config,\n      viewPortConfig = chartConfig.viewPortConfig,\n      // the pixel wrt original canvas size\n      origpixel = chart.getOriginalPositions(point.x, point.y, point.x, point.y),\n      origX = origpixel[0],\n      origY = origpixel[1],\n      xAxis = chart.getChildren('xAxis')[0],\n      yAxis = chart.getChildren('yAxis')[0],\n      xaxisRange = xAxis.config.axisRange,\n      yaxisRange = yAxis.config.axisRange,\n      minX = xaxisRange.min,\n      maxX = xaxisRange.max,\n      maxY = yaxisRange.max,\n      minY = yaxisRange.min,\n      // calcualte the Pixel to Value Ratios.\n      xPVR = chartConfig.canvasWidth * viewPortConfig.scaleX / (maxX - minX),\n      yPVR = chartConfig.canvasHeight * viewPortConfig.scaleY / (maxY - minY);\n\n    return {\n      x: minX + ((origX - chartConfig.canvasLeft) / xPVR),\n      y: maxY - ((origY - chartConfig.canvasTop) / yPVR)\n    };\n  }\n\n  getOriginalPositions (x1, y1, x2, y2) {\n    var newW,\n      newH,\n      newX,\n      newY,\n      chart = this,\n      chartConfig = chart.config,\n      viewPortConfig = chartConfig.viewPortConfig,\n      oldScaleX = viewPortConfig.scaleX,\n      oldScaleY = viewPortConfig.scaleY,\n      // coodinates of the visual canvas origin wrt to original canvas.\n      oldX = viewPortConfig.x,\n      oldY = viewPortConfig.y,\n\n      xMin = mathMin(x1, x2),\n      xMax = mathMax(x1, x2),\n      yMin = mathMin(y1, y2),\n      yMax = mathMax(y1, y2);\n\n    // Right Bottom limit boundary\n    xMax = xMax > chartConfig.canvasWidth ? chartConfig.canvasWidth : xMax;\n    yMax = yMax > chartConfig.canvasHeight ? chartConfig.canvasHeight : yMax;\n    // Left Top Limit Boundary\n    xMin = xMin < 0 ? 0 : xMin;\n    yMin = yMin < 0 ? 0 : yMin;\n    // update the dimensions wrt to initial viewPort configurations.\n    newW = (xMax - xMin) / oldScaleX;\n    newH = (yMax - yMin) / oldScaleY;\n    newX = oldX + (xMin / oldScaleX);\n    newY = oldY + (yMin / oldScaleY);\n    // converts to the coordinates wrt original image\n    return [newX, newY, newW, newH];\n  }\n\n  updateManager () {\n    var i,\n      labelStep,\n      stepValue,\n      chart = this,\n      scaleX,\n      dataSets = this.getDatasets(),\n      len = dataSets.length,\n      chartConfig = chart.config,\n      info = chartConfig.viewPortConfig,\n      // ypvr = chartConfig._ypvr,\n      visW = chartConfig._visw,\n      xAxis = chart.getChildren('xAxis')[0],\n      getPixelX = function (val) {\n        return xAxis.getPixel(val, {wrtVisible: true});\n      },\n      // labels = chart.xlabels,\n      cssLabel = xAxis.getAxisConfig('labels').style,\n      // labelGroup = labels.group,\n      // textDirection = chartConfig.textDirection,\n      oppp, // target pixels-per-point\n      vdl, // visible display length\n      ppl, // num visible labels\n      ppp, // current pixels-per-point\n      step, // stepping on vdl to reach target ppp\n      lskip,\n      norm, // normalizer of vdl to allow smooth scrolling\n      dsi, // display start index\n      dei, // display end index\n      ddsi, // dynamic dsi post normalization\n      ddei,\n      nvl,\n      visibleExtremes;\n\n    if (chartConfig.legendClicked) {\n      for (i = 0; i < len; i += 1) {\n        dataSets[i].draw();\n      }\n      return;\n    }\n    // Use default config if none has been provided else extend current\n    // state.\n    !info && (info = chartConfig.viewPortConfig);\n\n    // Calculate stepping values here. This is required so that the\n    // number of anchors can be recalculated prior to updating plot.\n    oppp = info.oppp;\n    nvl = ppl = info.nvl;\n    dsi = info.dsi;\n    dei = info.dei;\n    vdl = info.vdl = dei - dsi;\n    ppl = info.ppl = nvl ? visW / nvl : info.oppl;\n    // Calculate label and anchor stepping.\n    step = info.step = ((ppp = info.ppp = visW / vdl) < oppp) ? mathCeil(oppp / ppp) : 1;\n    lskip = info.lskip = mathCeil(mathMax(ppl, toFloat(cssLabel.lineHeight)) / ppp / step);\n\n    ddsi = info.dsi;\n    ddei = info.dei;\n    info.offset = 0;\n    norm = info.norm = ddsi % step;\n\n    // normalize the indices\n    info.ddsi = (ddsi = ddsi - norm);\n    info.ddei = (ddei = ddei + 2 * step - norm);\n    // info.pvr = ypvr;\n    info._ymin = chartConfig._ymin;\n    info._yminValue = chartConfig._yminValue;\n    info.x = ((getPixelX(ddsi) - getPixelX(xAxis.getVisibleConfig().minValue) + info.offset) / info.scaleX);\n    // once the visible labels are exceeding the category length.\n    if ((ddei - ddsi) > xAxis.getTicksLen()) {\n      info.scaleX = 1;\n    } else {\n      // info.scaleX = chartConfig.canvasWidth / (mathRound((ddei - ddsi + 1)/ (step)) * 0.5 * ppl);\n      info.scaleX = xAxis.getTicksLen() / Math.abs(ddei - ddsi - step - 0.9);\n    }\n    visibleExtremes = xAxis.getVisibleConfig();\n\n    stepValue = Math.ceil((visibleExtremes.maxValue - visibleExtremes.minValue + 1) / nvl);\n    scaleX = chartConfig.viewPortConfig && chartConfig.viewPortConfig.scaleX;\n    labelStep = Math.max(Math.round(xAxis.getAxisConfig('labelStep') / scaleX), nvl ? stepValue : lskip * step);\n    xAxis.setLabelConfig({\n      step: labelStep\n    });\n  }\n  getParsedLabel (index) {\n    var xlabels = this.xlabels;\n    return xlabels.parsed[index] ||\n              (xlabels.parsed[index] =\n                  parseUnsafeString(xlabels.data[index] || BLANK));\n  }\n\n  _setAxisScale () {\n    this.setScrollType('always');\n  }\n\n  getDSdef () {\n    return ZoomLineDataset;\n  }\n}\nexport default ZoomLine;\n","import {\n  pluckNumber,\n  hasTouch,\n  TOUCH_THRESHOLD_PIXELS,\n  CLICK_THRESHOLD_PIXELS,\n  hashify\n} from '@fusioncharts/core/src/lib';\nimport LineDataset from '../line';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport zoomlineAnimation from './index.animation';\nlet POINTER = 'pointer',\n  DEFAULT_CURSOR = 'default',\n  DATAPLOTCLICK = 'dataplotclick',\n  HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS : CLICK_THRESHOLD_PIXELS;\naddDep({\n  name: 'zoomlineAnimation',\n  type: 'animationRule',\n  extension: zoomlineAnimation\n});\nclass ZoomLineDataset extends LineDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'zoomLine';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    // Contains indices of data that may be skipped during data skipping but still need to be drawn.\n    // E.g. For zoomline charts, peak data and terminal data must be explicitly shown even if they\n    // are skipped according to the step calculation.\n    this.config.skipIgnorerIndices = [];\n    this.config.showPeakData = 0;\n    this.config.showTerminalValidData = 0;\n    this.config.minPeakDataLimit = null;\n    this.config.maxPeakDataLimit = null;\n  }\n\n  _plotConfigure (i, setData, newDataSetLen) {\n    super._plotConfigure(i, setData, newDataSetLen);\n\n    let dataset = this,\n      conf = dataset.config,\n      value = dataset.components.data[i].config.setValue,\n      len = newDataSetLen || dataset.getFromEnv('xAxis').getTicksLen(),\n      showTerminalValidData = conf.showTerminalValidData,\n      showPeakData = conf.showPeakData,\n      peakDataLowerBound = conf.maxPeakDataLimit,\n      peakDataUpperBound = conf.minPeakDataLimit,\n      selectDataAtIntersection = peakDataLowerBound < peakDataUpperBound,\n      selectDataAtUnion = peakDataLowerBound > peakDataUpperBound,\n      isValueWithinBounds = value > peakDataLowerBound && value < peakDataUpperBound,\n      isValueBeyondBounds = value > peakDataLowerBound || value < peakDataUpperBound;\n\n    if (showPeakData) {\n      if (selectDataAtIntersection && isValueWithinBounds) {\n        conf.skipIgnorerIndices.push(i);\n      } else if (selectDataAtUnion && isValueBeyondBounds) {\n        conf.skipIgnorerIndices.push(i);\n      }\n    }\n\n    if (showTerminalValidData && i === len - 1) conf.skipIgnorerIndices.push(i);\n  }\n\n  /**\n   * Function to draw the anchors if needed\n   */\n  drawPlots () {\n    var dataset = this,\n      xAxis = dataset.getFromEnv('xAxis'),\n      viewPortConfig = dataset.getFromEnv('chartConfig').viewPortConfig;\n    if (xAxis.getPixel(viewPortConfig.step) - xAxis.getPixel(0) >= viewPortConfig.amrd) {\n      super.drawPlots();\n    } else {\n      dataset.hideAllAnchors();\n    }\n  }\n\n  _setConfigure (newDataset, newIndex) {\n    var dataSet = this,\n      conf = dataSet.config,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      cdef = chart.getFromEnv('dataSource').chart,\n      JSONData = dataSet.config.JSONData;\n\n    conf.drawanchors = pluckNumber(cdef.drawanchors, cdef.showanchors, 1);\n    conf.anchorradius = pluckNumber(JSONData.anchorradius, cdef.anchorradius, conf.linethickness + 2);\n    conf.showTerminalValidData = pluckNumber(chartConfig.showTerminalValidData, 0);\n\n    conf.showPeakData = pluckNumber(chartConfig.showPeakData, 0);\n\n    // maxPeakDataLimit and minPeakData limit only have effect when showPeakData is enabled. No need\n    // to configure them if showPeakData is disabled.\n    if (conf.showPeakData && (chartConfig.maxPeakDataLimit || chartConfig.minPeakDataLimit)) {\n      conf.maxPeakDataLimit = pluckNumber(chartConfig.maxPeakDataLimit, Number.MIN_SAFE_INTEGER);\n      conf.minPeakDataLimit = pluckNumber(chartConfig.minPeakDataLimit, Number.MAX_SAFE_INTEGER);\n    }\n\n    super._setConfigure(newDataset, newIndex);\n  }\n\n  configureAttributes (datasetJSON) {\n    super.configureAttributes(datasetJSON);\n    var pgsw,\n      conf,\n      pin = {},\n      dataSet = this,\n      cdef = dataSet.getFromEnv('chart').getFromEnv('dataSource').chart;\n    // no animation is supported.\n    conf = dataSet.config;\n    // pin line graphics is same as main graphics except a few changes\n    pgsw = conf.linethickness + pluckNumber(cdef.pinlinethicknessdelta, 1);\n    pin['stroke-width'] = (pgsw > 0 && pgsw) || 0;\n    pin['stroke-dasharray'] = [3, 2];\n    pin.stroke = hashify(conf.linecolor);\n    pin['stroke-opacity'] = conf.alpha / 100;\n    pin['stroke-linejoin'] = (conf['stroke-linejoin'] = 'round');\n    pin['stroke-linecap'] = (conf['stroke-linecap'] = 'round');\n\n    conf.pin = pin;\n    // animation is disabled in zoomline charts.\n    conf.animation = false;\n    conf.transposeanimduration = 0;\n    conf.defaultPadding = {\n      left: 0,\n      right: 0\n    };\n  }\n\n  /**\n   * Function to skip label drawing of zoomline chart\n   * @return {Object} to avoid linting error\n   */\n  drawLabel () {\n    return this;\n  }\n\n  isWithinShape (pointObj, pX, x, y) {\n    var anchorProps,\n      config,\n      radius,\n      borderThickness,\n      dataset,\n      dataStore,\n      dragTolerance,\n      xPos,\n      yPos,\n      dx,\n      dy,\n      diff,\n      hoverEffects;\n\n    if (!pointObj) {\n      return;\n    }\n\n    anchorProps = pointObj.config.anchorProps;\n    config = pointObj.config;\n    borderThickness = anchorProps.borderThickness;\n    dataset = this;\n    dataStore = dataset.components.data;\n    dragTolerance = pluckNumber(config.dragTolerance, 0);\n\n    xPos = pointObj._xPos;\n    yPos = pointObj._yPos;\n\n    if (yPos !== null) {\n      hoverEffects = pointObj.config.hoverEffects;\n      radius = Math.max(anchorProps.radius, (hoverEffects && hoverEffects.anchorRadius) || 0, HTP) +\n                      borderThickness / 2;\n      dx = (x - xPos);\n      dy = (y - yPos);\n      diff = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n\n      if (diff <= radius || diff <= dragTolerance) {\n        return {\n          pointIndex: pX,\n          hovered: true,\n          pointObj: dataStore[pX]\n        };\n      }\n      return false;\n    }\n  }\n\n  /**\n   * Function to hide the anchors when chart is updated from a state when anchors were shown to when no more anchors are shown\n   * due to large data\n   */\n  hideAllAnchors () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      dsLen = dataStore.length,\n      dataObj,\n      i,\n      ii;\n\n    for (i = 0, ii = dsLen; i < ii; i++) {\n      dataObj = dataStore[i];\n      if (dataObj && dataObj.graphics) {\n        dataObj.graphics.element && dataObj.graphics.element.hide();\n      }\n    }\n  }\n\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      components = dataset.components,\n      dataStore = components.data,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      data = dataStore[plotIndex],\n      setElement = data.graphics.element,\n      toolTip = dataset.config.currentToolTip,\n      // originalEvent = e.originalEvent,\n      noCrossline = !chart.config.useCrossline,\n      config,\n      eventArgs,\n      setLink;\n\n    config = data.config;\n    setLink = config.setLink;\n    eventArgs = config.eventArgs;\n    switch (eventType) {\n      case 'fc-mouseover' :\n        noCrossline && dataset._decideTooltipType(plotIndex, e);\n        dataset._rolloverResponseSetter(chart, data, e);\n        setLink && (setElement.node.style.cursor = POINTER);\n        break;\n      case 'fc-mouseout' :\n        toolTipController.hide(toolTip);\n        dataset._rolloutResponseSetter(chart, data, e);\n        setLink && (setElement.node.style.cursor = DEFAULT_CURSOR);\n        break;\n      case 'fc-click' :\n        chart.plotEventHandler(setElement, e, DATAPLOTCLICK, eventArgs);\n        break;\n      case 'fc-mousemove' :\n        noCrossline && dataset._decideTooltipType(plotIndex, e);\n    }\n  }\n  /**\n   * calculate min and max position to scroll\n   */\n  calculateScrollRange () {\n    let dataSet = this,\n      conf = dataSet.config,\n      xAxis = dataSet.getFromEnv('xAxis'),\n      catLen = xAxis.getTicksLen(),\n      step = dataSet.getFromEnv('chartConfig').viewPortConfig.step || 1;\n\n    conf.scrollMinVal = Math.max(Math.round(xAxis.getVisibleConfig().minValue), 0) - step;\n    conf.scrollMaxVal = Math.min(Math.round(xAxis.getVisibleConfig().maxValue) + 1, catLen) + step;\n\n    conf.scrollMinValForLabel = Math.max(Math.round(xAxis.getVisibleConfig().minValue), 0) - step;\n    conf.scrollMaxValForLabel = Math.min(Math.round(xAxis.getVisibleConfig().maxValue) + 1, catLen) + step;\n\n    conf.scrollMinVal -= (conf.scrollMinVal % step);\n    conf.scrollMinValForLabel -= (conf.scrollMinValForLabel % step);\n  }\n}\nexport default ZoomLineDataset;\n","import lineAnimation from '../line/index.animation';\n\nexport default {\n  'initial.dataset.zoomLine': lineAnimation['initial.dataset.line']\n};\n","import { datasetFactory, pluckNumber, pluck } from '@fusioncharts/core/src/lib';\nlet PIPE = '|';\n/**\n * this is simple dataset factory. It instantiate multiseries\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let jsonData = chart.getFromEnv('dataSource'),\n    chartDef = jsonData.chart || {},\n    cdm,\n    cdmchar,\n    chartConfig = chart.config,\n    datasetsJSON = jsonData.dataset,\n    dataSet,\n    children = chart.getChildren(),\n    canvas = children.canvas[0],\n    i,\n    data,\n    j,\n    tempArr,\n    len,\n    datasetParent = canvas.getChildren('vCanvas')[0];\n\n  chartConfig.cdm = cdm = pluckNumber(chartDef.compactdatamode, 0);\n  chartConfig.cdmchar = cdmchar = pluck(chartDef.dataseparator, PIPE);\n\n  if (!datasetsJSON) {\n    chart.setChartMessage();\n  }\n\n  for (i = 0; i < datasetsJSON.length; i++) {\n    dataSet = datasetsJSON[i];\n    if (cdm) {\n      if (dataSet.data && dataSet.data.split) {\n        tempArr = dataSet.data.split(cdmchar);\n        data = [];\n        for (j = 0, len = tempArr.length; j < len; j++) {\n          data.push({\n            value: tempArr[j]\n          });\n        }\n        dataSet.data = data;\n      }\n    }\n  }\n  datasetFactory(datasetParent, chart.getDSdef(), 'dataset', datasetsJSON.length, datasetsJSON);\n\n  chart.iterateComponents((child) => {\n    if ((child.getType && child.getType() === 'dataset')) {\n      child.createPinElem && child.addEventListener('createpinelements', child.createPinElem);\n    }\n  });\n}\n","import Zoomlinedy from '@fusioncharts/charts/src/chart/zoomlinedy';\nexport default Zoomlinedy;\n","import ZoomLine from '../zoomline';\nimport { _feedAxesRawData, getSpecificxAxisConf, getSpecificyAxisConf,\n  setAxisDimention } from '../_internal/msdybasecartesian';\nimport axisFactory from '../../factories/cartesian-axis-dual-y';\nimport datasetFactory from '../../factories/zoomline-dual-y-dataset';\n\nconst CHART_STR = 'Zoomable and Panable Multi-series Dual-axis Line Chart',\n  ZOOMLINE_STR = 'zoomline';\nclass ZoomLineDy extends ZoomLine {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.getSpecificxAxisConf = getSpecificxAxisConf;\n    this.getSpecificyAxisConf = getSpecificyAxisConf;\n    this.registerFactory('axis', axisFactory, ['canvas']);\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ZoomLineDy';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ZoomLineDy';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = ZOOMLINE_STR;\n    config.isdual = true;\n    config.syncaxislimits = 0;\n  }\n\n  _feedAxesRawData () {\n    return _feedAxesRawData.call(this);\n  }\n}\nZoomLineDy.prototype.setAxisDimention = setAxisDimention;\nexport default ZoomLineDy;\n","import { datasetFactory, pluckNumber, pluck } from '@fusioncharts/core/src/lib';\nlet PIPE = '|',\n  /**\n   * function to remove component if name is matched with value in set\n   * @param  {Object} component from where it would iterate\n   * @param  {Array} set        criteria; if matched then remove\n   */\n  removeDataset = (component) => {\n    component && component.iterateComponents((child) => {\n      if (child.getType() === 'dataset') {\n        child.remove();\n      }\n    });\n  };\n/**\n * this is simple dataset factory. It instantiate multiseries\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let jsonData = chart.getFromEnv('dataSource'),\n    chartDef = jsonData.chart || {},\n    cdm,\n    cdmchar,\n    chartConfig = chart.config,\n    datasetsJSON = jsonData.dataset,\n    dataSet,\n    children = chart.getChildren(),\n    canvas = children.canvas[0],\n    i,\n    data,\n    j,\n    tempArr,\n    len,\n    datasetJSON,\n    parentyaxis,\n    indices1 = [],\n    indices2 = [],\n    confArr1 = [],\n    confArr2 = [],\n    vCanvasArr = canvas.getChildren('vCanvas');\n\n  chartConfig.cdm = cdm = pluckNumber(chartDef.compactdatamode, 0);\n  chartConfig.cdmchar = cdmchar = pluck(chartDef.dataseparator, PIPE);\n\n  if (!datasetsJSON) {\n    chart.setChartMessage();\n  }\n\n  for (i = 0; i < datasetsJSON.length; i++) {\n    dataSet = datasetsJSON[i];\n    if (cdm) {\n      if (dataSet.data && dataSet.data.split) {\n        tempArr = dataSet.data.split(cdmchar);\n        data = [];\n        for (j = 0, len = tempArr.length; j < len; j++) {\n          data.push({\n            value: tempArr[j]\n          });\n        }\n        dataSet.data = data;\n      }\n    }\n  }\n  for (i = 0; i < datasetsJSON.length; i++) {\n    datasetJSON = datasetsJSON[i];\n    parentyaxis = datasetJSON.parentyaxis || '';\n    if (parentyaxis.toLowerCase() === 's') {\n      confArr2.push(datasetJSON);\n      indices2.push(i);\n    } else {\n      confArr1.push(datasetJSON);\n      indices1.push(i);\n    }\n  }\n  if (confArr1.length) {\n    datasetFactory(vCanvasArr[0], chart.getDSdef(), 'dataset_line', confArr1.length, confArr1, indices1);\n  } else {\n    removeDataset(vCanvasArr[0]);\n  }\n  if (confArr2.length) {\n    datasetFactory(vCanvasArr[1], chart.getDSdef(), 'dataset_line', confArr2.length, confArr2, indices2);\n  } else {\n    removeDataset(vCanvasArr[1]);\n  }\n\n  chart.iterateComponents((child) => {\n    if ((child.getType && child.getType() === 'dataset')) {\n      child.createPinElem && child.addEventListener('createpinelements', child.createPinElem);\n    }\n  });\n}\n","import {\n  extend2,\n  hashify,\n  getMouseCoordinate,\n  componentFactory\n} from '@fusioncharts/core/src/lib';\n\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\n\nlet BLANK = '',\n  math = Math,\n  mathMax = math.max,\n  mathMin = math.min,\n  UNDEF,\n  scale,\n  boxHeight = 0, // Height of text\n  _top,\n  plotOut,\n  hasTouch = ('ontouchstart' in window),\n  CANVAS = 'canvas',\n  chartInclusionList = {\n    'zoomlinedy': true,\n    'zoomline': true\n  },\n  callbackLabel = function () {\n    this.remove();\n  },\n  callbackValue = function () {\n    this.remove();\n  },\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {string} groupName                Name of the group to be created.\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (groupName, parentContainer, crossLine) {\n    return crossLine.getFromEnv('animationManager').setAnimation({\n      el: 'group',\n      attr: { name: groupName },\n      container: parentContainer,\n      state: 'appearing',\n      component: crossLine,\n      label: 'group'\n    });\n  },\n  /*\n  * Calculates the position of nearest UNDEF (unoccupied) element.\n  * @param: pos { int} The position from where the reference to be calculated\n  * @return: { Object} { absValue: { int}, noScaleSide: { scale}}\n  */\n  nearestUndefined = function (pos) {\n    var i,\n      diff,\n      _scale,\n      nearest = {},\n      lowest = Number.POSITIVE_INFINITY; // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (i = 0; i < this.length; i++) {\n      diff = this[i] - pos;\n      diff < 0 ? (_scale = scale.NEG) : (_scale = scale.POS);\n      diff = Math.abs(diff);\n\n      if (diff <= lowest) {\n        lowest = diff;\n        nearest.absValue = diff;\n        nearest.noScaleSide = _scale;\n      }\n    }\n\n    return nearest;\n  },\n  /**\n   * returns event handlers\n   */\n  getHandler = function (_this) {\n    return {\n      onMouseOut () {\n        _this.hide();\n        _this.position = UNDEF;\n      },\n      onMouseMove (e) {\n        var residue,\n          info,\n          line,\n          // plotX,\n          step,\n          chart,\n          xAxis,\n          chartConfig,\n          canvasLeft,\n          // labelStep = xAxis.getAxisConfig('labelStep'),\n          x,\n          xAxisVisible,\n          // cdm = chart.config.cdm,\n          // bridge code.\n          /* bridgePixel = cdm ? (xAxis.getPixel(0) - xAxis.getPixel(axisMin)) / info.scaleX :\n              axisDimention.x - canvasLeft, */\n          bridgePixel,\n          pos;\n\n        if (_this.disabled || (_this._mouseIsDown && !hasTouch)) {\n          return;\n        }\n\n        info = _this.getZoomInfo();\n        line = _this.getGraphicalElement('line'); // eslint-disable-line good-practices/no-single-usage-variable\n        // plotX = _this.left;\n        step = info.step;\n        chart = _this.chart;\n        xAxis = chart.getChildren('xAxis')[0];\n        chartConfig = chart.get('config');\n        canvasLeft = chartConfig.canvasLeft;\n        // labelStep = xAxis.getAxisConfig('labelStep');\n        x = getMouseCoordinate(_this.getFromEnv('chart-container'), e, chart).chartX;\n        xAxisVisible = xAxis.getVisibleConfig();\n        // cdm = chart.config.cdm;\n        // bridge code.\n        /* bridgePixel = cdm ? (xAxis.getPixel(0) - xAxis.getPixel(axisMin)) / info.scaleX :\n            axisDimention.x - canvasLeft */\n        bridgePixel = xAxis.getAxisConfig('axisDimention').x - canvasLeft; // eslint-disable-line good-practices/no-single-usage-variable\n\n        // x = (x += (stepw / 2) + info.offset) - x % (stepw);\n        pos = (pos = _this.getDataIndexFromPixel(Math.round(x))) + ((((residue =\n          (pos % step)) > (step / 2)) ? step - residue : -residue));\n        x = (xAxis.getPixel(pos, {\n          wrtVisible: true\n        }) - bridgePixel) - canvasLeft;\n        x -= info.offset;\n        line.transform(['T', Math.round(x), 0]);\n        (_this.hidden && (chartConfig.crossline.enabled !== 0)) && _this.show();\n        // Donot show the crossline out of canvas area.\n        (pos < xAxisVisible.minValue || pos > xAxisVisible.maxValue) && (_this.hide());\n        if (pos !== _this.position || _this.hidden) {\n          _this.position = pos;\n          _this.lineX = x;\n          _this.updateLabels();\n        }\n      }\n    };\n  };\n\nclass CrossLine extends ComponentInterface {\n  constructor () {\n    super();\n    this.config.handlers = getHandler(this);\n  }\n  configureAttributes (options) {\n    this.config.options = options;\n  }\n  draw () {\n    // Create the tracker for cross-hair. This is needed for mouse\n    // tracking.\n    let i,\n      ii,\n      plot,\n      plotColor,\n      attrObj = {},\n      crossLine = this,\n      labelPadding = 2.5, // eslint-disable-line good-practices/no-single-usage-variable\n      chart = crossLine.getFromEnv('chart'),\n      numberFormatter = chart.getFromEnv()['number-formatter'], // eslint-disable-line good-practices/no-single-usage-variable\n      chartConfig = chart.config,\n      plotX = crossLine.left = chart.getChildren('xAxis')[0].getAxisConfig('axisDimention').x,\n      plotY = crossLine.top = chartConfig.canvasTop,\n      plotH = crossLine.height = chartConfig.canvasHeight,\n      plotO = crossLine._visout = chartConfig._visout,\n      plots = [],\n      animationManager = crossLine.getFromEnv('animationManager'),\n      groupValue,\n      fetchedLine = crossLine.getGraphicalElement('line'),\n      line,\n      options = crossLine.config.options,\n      labelStyle = options.labelstyle, // eslint-disable-line good-practices/no-single-usage-variable\n      valueStyle = options.valuestyle,\n      pyaxis = chart.getChildren('yAxis')[0],\n      pYAxisLimits = pyaxis.getLimit(),\n      syaxis = chart.getChildren('yAxis')[1],\n      sYAxisLimits = syaxis && syaxis.getLimit(),\n      fetchedLabels = crossLine.getGraphicalElement('labels'),\n      labels = [],\n      positionLabel,\n      groupLabel,\n      fetchedPositionLabel = crossLine.getGraphicalElement('positionLabel'),\n      crosslineBottomGroup = crossLine.getLinkedParent().getChildContainer('crosslineBottom'),\n      crosslineTopGroup = crossLine.getLinkedParent().getChildContainer('crosslineTop');\n\n    chart.iterateComponents((child) => {\n      if ((child.getType && child.getType() === 'dataset') && !child.getState('removed')) {\n        plots.push(child);\n      }\n    });\n    crossLine.plots = plots;\n\n    crossLine.width = chartConfig._visw;\n    // Create the Value inside data layer where the cross-line elements will play around.\n    groupValue = crossLine.group;\n    if (!(groupValue = crossLine.getContainer('valueGroup'))) {\n      groupValue = crossLine.addContainer('valueGroup', createGroup('crossline-value-group', crosslineTopGroup, crossLine)); // .insertAfter(chart.getChildContainer('plotGroup'));\n    }\n    if (!(groupLabel = crossLine.getContainer('labelGroup'))) {\n      groupLabel = crossLine.addContainer('labelGroup', createGroup('crossline-label-group', crosslineTopGroup, crossLine));\n      groupLabel.insertBefore(chart.getChildContainer('plotGroup'));\n    }\n    // Store chart's container to be use by mouseMove event\n    // to calculate the mouse coordinates.\n    crossLine.container = crosslineBottomGroup;\n\n    groupValue\n      .attr({\n        transform: ['T', plotX, chartConfig._ymin]\n      })\n      .css(valueStyle);\n\n    // Cross-line obviously needs a line.\n    line = animationManager.setAnimation({ // eslint-disable-line good-practices/no-single-usage-variable\n      el: fetchedLine || 'path',\n      container: crosslineBottomGroup,\n      doNotRemove: true,\n      attr: extend2({\n        path: ['M', plotX, plotY, 'l', 0, plotH]\n      }, options.line)\n    }).toBack();\n    if (!fetchedLine) {\n      crossLine.addGraphicalElement('line', line, false);\n    }\n\n    // add the category label\n    if (options.labelEnabled) {\n      attrObj.x = plotO;\n      attrObj.y = plotY + plotH + (chartConfig.scrollHeight || 0) + labelPadding;\n      attrObj['vertical-align'] = `top`;\n      attrObj.direction = chartConfig.textDirection;\n      attrObj.text = BLANK;\n    }\n    positionLabel = animationManager.setAnimation({ // eslint-disable-line good-practices/no-single-usage-variable\n      el: fetchedPositionLabel || 'text',\n      attr: options.labelEnabled && attrObj,\n      css: options.labelEnabled && labelStyle,\n      container: groupLabel,\n      doNotRemove: true,\n      callback: !options.labelEnabled && callbackLabel\n    });\n\n    if (!fetchedPositionLabel && options.labelEnabled) {\n      crossLine.addGraphicalElement('positionLabel', positionLabel, false);\n    }\n    // initially hidden\n    crossLine.hide();\n    crossLine.ppixelRatio = -(pyaxis.config.axisDimention.axisLength / pyaxis.getVisibleLength());\n    crossLine.spixelRatio = syaxis && (-(syaxis.config.axisDimention.axisLength / syaxis.getVisibleLength()));\n    crossLine.yminValue = chartConfig._yminValue;\n    crossLine.pyaxisminvalue = pYAxisLimits.min;\n    crossLine.pyaxismaxvalue = pYAxisLimits.max;\n    crossLine.syaxisminvalue = sYAxisLimits && sYAxisLimits.min;\n    crossLine.syaxismaxvalue = sYAxisLimits && sYAxisLimits.max;\n    crossLine.positionLabels = chartConfig.xlabels || {\n      data: [],\n      parsed: []\n    };\n    crossLine.chart = chart;\n    i = 0;\n    if (options.valueEnabled) {\n      for (ii = plots.length; i < ii; i += 1) {\n        plot = plots[i];\n        plotColor = hashify(plot.config.linecolor);\n\n        attrObj.x = 0;\n        attrObj.y = plotO;\n        attrObj.fill = plotColor;\n        attrObj.direction = chartConfig.textDirection;\n        attrObj.text = BLANK;\n        attrObj['text-bound'] = valueStyle['text-bound'];\n        attrObj.lineHeight = valueStyle.lineHeight;\n\n        labels[i] = animationManager.setAnimation({\n          el: (fetchedLabels && fetchedLabels[i]) || 'text',\n          container: groupValue,\n          doNotRemove: true,\n          attr: attrObj\n        });\n        !(fetchedLabels && fetchedLabels[i]) && crossLine.addGraphicalElement('labels', labels[i], true);\n      }\n      crossLine.numberFormatter = numberFormatter;\n    }\n    for (ii = fetchedLabels && fetchedLabels.length; i < ii; i++) {\n      animationManager.setAnimation({\n        el: fetchedLabels[i],\n        component: crossLine,\n        doNotRemove: true,\n        callback: callbackValue\n      });\n    }\n    fetchedLabels && fetchedLabels.splice(plots.length);\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'crossline';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'crossLine';\n  }\n\n  // Open closed function to access chart variables.\n  getZoomInfo () {\n    return this.getFromEnv('chartConfig').viewPortConfig;\n  }\n\n  getDataIndexFromPixel (px) {\n    return Math.round(this.getFromEnv('chart').getChildren('xAxis')[0].getValue(px, {\n      wrtVisible: true\n    }));\n  }\n\n  getPositionLabel (index) {\n    let text = this.getFromEnv('chart').getChildren('xAxis')[0].getLabel(index);\n    return (text && text.label) || BLANK;\n  }\n  disable (state) {\n    if (state !== UNDEF) {\n      this.disabled = !!state;\n      if (this.disabled && this.visible) {\n        this.hide();\n      }\n    }\n    return this.disabled;\n  }\n\n  updateLabels () {\n    var crossline = this,\n      labelPadding = 2.5,\n      animationManager = crossline.getFromEnv('animationManager'),\n      labels = crossline.getGraphicalElement('labels'),\n      positionLabel = crossline.getGraphicalElement('positionLabel'),\n      plots = crossline.plots,\n      visw = crossline.width,\n      position = crossline.position,\n      x = crossline.lineX,\n      flooredX = Math.floor(x), // eslint-disable-line good-practices/no-single-usage-variable\n      dummyText = crossline.dummyText,\n      numberFormatter = crossline.numberFormatter,\n      pYAxisMinValue = crossline.pyaxisminvalue,\n      pYAxisMaxValue = crossline.pyaxismaxvalue, // eslint-disable-line good-practices/no-single-usage-variable\n      sYAxisMinValue = crossline.syaxisminvalue,\n      sYAxisMaxValue = crossline.syaxismaxvalue, // eslint-disable-line good-practices/no-single-usage-variable\n      verticalLimits = getVerticalLimits(crossline);\n    plotOut = crossline._visout; // eslint-disable-line good-practices/no-single-usage-variable\n    if (labels) {\n      if (!dummyText) {\n        dummyText = crossline.dummyText = crossline.getFromEnv('paper').text().hide();\n      }\n\n      // First set text so that we get correct value of boundingBox\n      dummyText.attr({\n        text: numberFormatter.yAxis('0')\n      });\n      dummyText && verticalLimits.init(dummyText.getBBox().height, labels.length);\n\n      // RED-8930: Improve the crossline tooltip position for zoomline charts\n      let sortedLabels = [];\n\n      labels.forEach(function (label, i) {\n        if (plots[i].getState('removed')) {\n          return;\n        }\n        var plot = plots[i],\n          value = plot.components.data[position] && plot.components.data[position].config.setValue,\n          labelYPos,\n          yAxis = plot.config.parentYAxis;\n        if (value === UNDEF || !plot.getState('visible') ||\n          (yAxis ? (value > sYAxisMaxValue || value < sYAxisMinValue)\n            : (value > pYAxisMaxValue || value < pYAxisMinValue))) {\n          labelYPos = plotOut;\n        } else {\n          labelYPos = yAxis\n            ? (value - sYAxisMinValue) * crossline.spixelRatio\n            : (value - pYAxisMinValue) * crossline.ppixelRatio;\n        }\n        sortedLabels.push({value: value, labelYPos: labelYPos, label: label});\n      });\n\n      sortedLabels.sort(function (a, b) {\n        return b.value - a.value;\n      });\n\n      sortedLabels.forEach(function (sortedLabel) {\n        verticalLimits.occupy(sortedLabel.labelYPos, sortedLabel.label);\n      });\n    }\n\n    labels && labels.forEach(function (label, i) {\n      if (plots[i].getState('removed')) {\n        return;\n      }\n      var plot = plots[i],\n        // eslint-disable-next-line good-practices/no-single-usage-variable\n        value = plot.components.data[position] && plot.components.data[position].config.setValue,\n        bBox,\n        labelWidth,\n        halfLabelWidth,\n        adjustedHalfLabelWidth,\n        // labelHeight,\n        _xPos,\n        _yPos,\n        text = numberFormatter[plot.config.parentYAxis ? 'sYAxis' : 'yAxis'](value);\n\n      // Only defined and valid texts are shown on the labels.\n      if (text) {\n        label.attr({\n          text: text\n        });\n\n        // Now calculate boundingBox and label positions\n        bBox = label.getBBox();\n        labelWidth = bBox && bBox.width;\n        halfLabelWidth = labelWidth && labelWidth * 0.5;\n        adjustedHalfLabelWidth = halfLabelWidth && (halfLabelWidth + 10/* GUTTER */);\n        // labelHeight = bBox && bBox.height;\n        _yPos = label.calcY;\n        _xPos = mathMax(0, mathMin(flooredX, visw));\n        (_yPos !== UNDEF && _xPos !== UNDEF) && animationManager.setAnimation({\n          el: label,\n          attr: {\n            x: _xPos,\n            y: _yPos,\n            'text-anchor': ((x <= adjustedHalfLabelWidth) && 'start') ||\n              (((x + adjustedHalfLabelWidth) >= visw) && 'end') || 'middle',\n            'text-bound': ['rgba(255,255,255,0.8)', 'rgba(0,0,0,0.2)', 1, labelPadding]\n          },\n          doNotRemove: true,\n          component: crossline\n        });\n      } else {\n        // In case of UNDEF text labels, the label is transfered to out of visual. One way of hiding it.\n        label.attr({\n          x: -visw\n        });\n      }\n    });\n\n    positionLabel && animationManager.setAnimation({\n      el: positionLabel,\n      attr: {\n        x: x + crossline.left,\n        text: crossline.getPositionLabel(position),\n        'text-bound': ['rgba(255,255,255,1)', 'rgba(0,0,0,1)', 1, labelPadding]\n      },\n      component: crossline\n    });\n  }\n\n  show () {\n    if (!this.disabled) {\n      this.hidden = false;\n      let valueGroup = this.getContainer('valueGroup'),\n        positionLabel = this.getGraphicalElement('positionLabel'),\n        line = this.getGraphicalElement('line');\n      valueGroup && valueGroup.show();\n      positionLabel && positionLabel.show();\n      line && line.show();\n    }\n  }\n\n  hide () {\n    this.hidden = true;\n    let valueGroup = this.getContainer('valueGroup'),\n      positionLabel = this.getGraphicalElement('positionLabel'),\n      line = this.getGraphicalElement('line');\n    valueGroup && valueGroup.hide();\n    positionLabel && positionLabel.hide();\n    line && line.hide();\n  }\n\n  dispose () {\n    var crossline = this,\n      key;\n\n    // delete all the properties in crossline object\n    for (key in crossline) {\n      crossline.hasOwnProperty(key) && (delete crossline[key]);\n    }\n  }\n}\nfunction getVerticalLimits (crossline) {\n  /*\n   * This controls the overlapping of the crosshair labels if the plots are close.\n   * This calculates the space to display the labels at the before it is plotted in DOM.\n   * The buleprint of the alg`ori`thm is like:\n   * When the labels position is being calculated.\n   * a) Place the label if the position is not occupied\n   * b) If the position is occupied find the neares unoccupied space\n   * c) If the unoccupied space is downwards place it there\n   * d) If the unoccupied space is upwards move the whole system up and place it in the next available\n   * down position\n   */\n  let _bottom = crossline.getFromEnv('chart').getChildren('yAxis')[0].getPixel(crossline.yminValue),\n    margin = 2, // eslint-disable-line good-practices/no-single-usage-variable\n    oMatrix,\n    result = {},\n    sections;\n  scale = {};\n  _top = crossline.height * (-1);\n  /*\n   * An enum to determine whether the actions (shift / unoccupied position) is in the left side\n   * or right side.\n   * >----------------I----------------<\n   * I is the reference index from which the actions are calculated.\n   * Anypoint left to I is scale.NEG otherwise scale.POS\n   */\n  try {\n    Object.defineProperty(scale, 'POS', {\n      enumerable: false,\n      configurable: false,\n      get: function () {\n        return 1;\n      }\n    });\n\n    Object.defineProperty(scale, 'NEG', {\n      enumerable: false,\n      configurable: false,\n      get: function () {\n        return -1;\n      }\n    });\n  } catch (e) {\n    // For almighty IE8\n    scale.POS = 1;\n    scale.NEG = -1;\n  }\n\n  try {\n    Object.defineProperty(result, 'top', {\n      enumerable: false,\n      configurable: false,\n      get: function () {\n        return _top;\n      }\n    });\n\n    Object.defineProperty(result, 'bottom', {\n      enumerable: false,\n      configurable: false,\n      get: function () {\n        return _bottom;\n      }\n    });\n  } catch (e) {\n    // IE-8\n    result.top = _top;\n    result.bottom = _bottom;\n  }\n\n  /*\n   * Initialize the limiting system\n   * @param height { int} - label height\n   * @param labelCount { int} - total no of labels\n   */\n  result.init = function (height) {\n    var i,\n      defaultValue = 0; // eslint-disable-line good-practices/no-single-usage-variable\n\n    boxHeight = height + margin;\n    _top += (boxHeight / 2); // eslint-disable-line good-practices/no-single-usage-variable\n    sections = Math.floor(Math.abs(_top) / boxHeight);\n\n    // if (sections >= labelCount) {\n    //   isSpaceEnough = true;\n    // }\n    oMatrix = new OccupancyMatrix(sections); // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < sections; i++) {\n      oMatrix.pos.push(defaultValue);\n    }\n  };\n\n  /*\n   * Occupy one section in the vertical scale\n   * @param pos { int} - value from data config\n   * @param label { object} - label object\n   */\n  result.occupy = function (pos, label) {\n    var passedSections = Math.floor(Math.abs(_top - pos) / boxHeight); // eslint-disable-line good-practices/no-single-usage-variable\n    oMatrix && oMatrix.attachShift(pos, passedSections, label);\n  };\n\n  return result;\n}\n// Attachable label can be positioned / attached anywhere along the y axis.\n// If its position is changed via shifting or providing index it auto calculates the y.\nclass AttachableLabel {\n  constructor () {\n    this.y = 0; // Absolute position\n    this.lRef = UNDEF; // Label object itself\n    this.__shift = 0; // Inner properties to calculate y. Indicate relative shift.\n    this.__index = 0; // Inner properties to calculate y. Indicate absolute index.\n  }\n  applyShift (shiftApplied) {\n    this.__shift = shiftApplied;\n    // Shift applied, now calculate the y\n    this.lRef.calcY = (this.y += shiftApplied * boxHeight);\n  }\n  applyDirectIndex (newIndex) {\n    this.__index = newIndex;\n    // Index changed along the sections of y axis. now calculate the y\n    this.lRef.calcY = (this.y = _top - (newIndex * boxHeight * -1));\n  }\n}\n/**\n  * Keeps a matrix of lables plotted virtually alreday, (not actually in DOM) and\n  * controls the overlapping by shifting or suggesting indexes.\n  * This class when initialized, is itself an array containg the plotted labels.\n  * There is an holes array which is of same length and keeps track of the unoccupied position.\n  * These two are closely related and relate like\n  *  -------------------------\n  * |   |   | l1 |   |   | l2 |  Is the occupency matrix itself\n  *  -------------------------\n  *  ---------------\n  * | 0 | 1 | 3 | 4 | Would be the holes.\n  *  ---------------\n  * @param: count { int} - size of the matrix. Generally be the size of the sections\n  */\nclass OccupancyMatrix {\n  constructor (count) {\n    this.holes = [];\n    this.pos = [];\n\n    for (var i = 0; i < count; i++) {\n      this.holes.push(i);\n    }\n  }\n  /*\n  * Recalculate the state of unoccupied positions freshly.\n  * Removes the state before it was called\n  */\n  repositionHoles () {\n    var i,\n      index = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      pos = this.pos,\n      value;\n\n    this.holes.length = 0;\n    for (i = 0; i < pos.length; i++) {\n      value = pos[i];\n      !value && (this.holes[index++] = i);\n    }\n  }\n\n  /*\n  * Possition the labels and attach the shidt information along with calculeatedY on the labels.\n  * @param: value { int} - value of the labels, inthis case y position of the labels\n  * @param: index { int} - the section where it would fit normally, calculated based on his value only.\n  * @param: label { object} - the label object, which is to be attached. label.calcY is injected\n  *                          after calculating it correctly.\n  */\n  attachShift (value, index, label) {\n    var indexVal,\n      pos = this.pos,\n      length = pos.length,\n      nearestUndefIndex,\n      tempArr,\n      attachedLabel,\n      _index,\n      calibratedIndex,\n      nearestOffset;\n\n    if (value === plotOut) {\n      // Plot outside if label is not visible\n      label.calcY = plotOut;\n      return;\n    }\n    calibratedIndex = (index > (length - 1)) ? length - 1 : index; // If the plot value is too low\n    indexVal = pos[calibratedIndex];\n\n    attachedLabel = new AttachableLabel(); // Create a new label which is attachable\n    attachedLabel.y = value;\n    attachedLabel.lRef = label;\n\n    if (!indexVal) {\n      // If the position is unoccupied, go ahead and occupy it\n      attachedLabel.applyDirectIndex(calibratedIndex);\n      pos.splice(calibratedIndex, 1, attachedLabel);\n      this.holes.splice(this.holes.indexOf(calibratedIndex), 1); // Update the occupancy matrix.\n      return;\n    }\n\n    // If position is occupied, the label needs to be opsitioned down or up\n    nearestOffset = nearestUndefined.call(this.holes, calibratedIndex);\n    // Get the absolute nearest index\n    nearestUndefIndex = calibratedIndex + (nearestOffset.absValue * nearestOffset.noScaleSide);\n\n    if (nearestOffset.noScaleSide === scale.POS) {\n      // If labels to be attached down the y axis\n      attachedLabel.applyDirectIndex(nearestUndefIndex);\n      pos.splice(nearestUndefIndex, 1, attachedLabel);\n      this.holes.splice(this.holes.indexOf(nearestUndefIndex), 1);\n      return nearestUndefIndex;\n    }\n\n    if (nearestOffset.noScaleSide === scale.NEG) {\n      // If the labels to be aattached is up the y axis we need the shift of sections and\n      // then put it down\n      tempArr = pos.splice(nearestUndefIndex + 1, pos.length - 1); // Section to be shifted\n      pos.pop();\n      tempArr.forEach(function (element) {\n        // Shift the system of attachable lable\n        element && (element.applyShift(-1));\n      });\n      [].push.apply(pos, tempArr);\n      _index = nearestUndefIndex;\n      // Find the nearest  unoccupied position after shifting the index\n      while (true) {\n        if (!pos[_index]) {\n          break;\n        }\n        _index++;\n      }\n      // This is an dummy insert for recalculation of holes since the whole system has changed.\n      pos.push(0);\n      this.repositionHoles();\n      // After recalculation get the nearest unoocupied position again since there might be better\n      // place to push the new label\n      nearestOffset = nearestUndefined.call(this.holes, _index);\n      _index += (nearestOffset.absValue * nearestOffset.noScaleSide);\n      attachedLabel.applyDirectIndex(_index);\n      // Add the label where it was suggested\n      pos.splice(_index, 1, attachedLabel);\n      this.repositionHoles();\n      return pos.length - 1;\n    }\n  }\n}\n\nexport default {\n  extension: (Fusioncharts) => {\n    Fusioncharts.addEventListener('instantiated', function onFcInstantiated (event) {\n      if (event.sender.getName() === CANVAS) {\n        let canvas = event.sender,\n          handlers,\n          crosslineOptions,\n          crosslineCount;\n\n        canvas.registerFactory('crossLineManager-zoomline', function () {\n          let chart = event.sender.getFromEnv('chart'),\n            chartName = chart && chart.getName(),\n            crossline;\n          if (chartName && chartInclusionList[chartName.toLowerCase()]) {\n            crosslineOptions = chart.config.crossline;\n            if (crosslineOptions && crosslineOptions.enabled !== 0 && chart.config.useCrossline === 1) {\n              crosslineCount = 1;\n            } else {\n              crosslineOptions && (crosslineOptions.enabled = 0);\n              crosslineCount = 0;\n            }\n\n            componentFactory(canvas, CrossLine, 'crossLine', crosslineCount, [crosslineOptions]);\n            if (crosslineCount) {\n              crossline = canvas.getChildren('crossLine')[0];\n              handlers = crossline.config.handlers;\n\n              // attach mouse and touch event handlers\n              crossline.addExtEventListener('fc-mousemove', handlers.onMouseMove, canvas);\n              crossline.addExtEventListener('fc-mouseover', handlers.onMouseMove, canvas);\n\n              // Inorder to disable the drawing of crossline during drag the following event listeners\n              // are attached. During dragMove, the crossline drawing handler is removed and\n              // at dragEnd it is re-attached.\n              crossline.addExtEventListener('fc-dragstart', function (e) {\n                handlers.onMouseOut(e);\n                crossline.removeExtEventListener('fc-mousemove', handlers.onMouseMove, canvas);\n              }, canvas);\n\n              crossline.addExtEventListener('fc-dragend', function () {\n                crossline.addExtEventListener('fc-mousemove', handlers.onMouseMove, canvas);\n              }, canvas);\n\n              crossline.addExtEventListener('fc-mouseout', function (e) {\n                handlers.onMouseOut(e);\n              }, canvas);\n            }\n          }\n        });\n      }\n    });\n  },\n  name: 'crossline-manager',\n  type: 'extension',\n  requiresFusionCharts: true\n};\n"],"sourceRoot":""}