{"version":3,"sources":["webpack:///./packages/fusioncharts/gantt/index.js","webpack:///./packages/fusioncharts/viz/gantt.js","webpack:///./packages/fc-widgets/src/chart/gantt/index.js","webpack:///./packages/fc-widgets/src/factories/gantt-canvas.js","webpack:///./packages/fc-widgets/src/_internal/canvas-gantt.js","webpack:///./packages/fc-widgets/src/factories/gantt-axis.js","webpack:///./packages/fc-core/src/axis/gantt-process.js","webpack:///./packages/fc-core/src/axis/gantt-common.js","webpack:///./packages/fc-core/src/axis/gantt.js","webpack:///./packages/fc-core/src/axis/gantt-common.animation.js","webpack:///./packages/fc-core/src/axis/gantt-time.js","webpack:///./packages/fc-widgets/src/dataset/gantt/milestone.js","webpack:///./packages/fc-widgets/src/dataset/gantt/task.js","webpack:///./packages/fc-widgets/src/dataset/gantt/task.animation.js","webpack:///./packages/fc-widgets/src/dataset/gantt/milestone-gantt.animation.js","webpack:///./packages/fc-widgets/src/dataset/gantt/connector.js","webpack:///./packages/fc-widgets/src/dataset/gantt/connector-gantt.animation.js","webpack:///./packages/fc-widgets/src/factories/gantt-dataset.js"],"names":["name","type","requiresFusionCharts","extension","FusionCharts","addDep","Gantt","scrollItems","mathMax","Math","max","mathMin","min","_scrollBar","get","clear","length","add","options","callback","push","conf","handler","setAttribDefs","showpercentlabel","attrTypeBool","pAttr","fontsize","attrTypeNum","alpha","showborder","borderthickness","borderalpha","showHoverEffect","hoverFillAlpha","slackHoverFillColor","slackHoverFillAlpha","showlabels","slackfillcolor","showtasklabels","showtasknames","showconnectorhovereffect","connectorextension","tasklabelspadding","taskdatepadding","showstartdate","showenddate","showtaskhovereffect","useverticalscrolling","taskbarroundradius","showshadow","showslackasfill","components","fireGroupEvent","hasInteractiveLegend","defaultPaletteOptions","extend2","defaultGaugePaletteOptions","paletteColors","bgColor","bgAngle","bgRatio","bgAlpha","canvasBgColor","canvasBgAngle","canvasBgAlpha","canvasBgRatio","canvasBorderColor","canvasBorderAlpha","gridColor","gridResizeBarColor","categoryBgColor","dataTableBgColor","toolTipBgColor","toolTipBorderColor","baseFontColor","borderColor","borderAlpha","legendBgColor","legendBorderColor","plotBorderColor","plotFillColor","scrollBarColor","registerFactory","canvasFactory","ganttAxisFactory","datasetFactory","getName","draw","this","createScrollbarContainer","__setDefaultConfig","config","alignCaptionWithCanvas","defaultDatasetType","taskbarfillmix","taskbarfillratio","dateintooltip","tasklabelsalign","POSITION_CENTER","datepadding","showhovereffect","UNDEF","showtooltip","ganttpanedurationunit","ganttpaneduration","showtaskstartdate","showtaskenddate","ganttwidthpercent","taskhoverfillalpha","HUNDREDSTRING","enablemousetracking","_checkInvalidSpecificData","jsonData","getFromEnv","processes","process","zeroProcesslen","tasks","task","zeroTaskLen","categories","category","zeroCatlen","parseChartAttr","chartConfig","chartAttrs","chart","showBorder","pluckNumber","alignLegendWithCanvas","_feedAxesRawData","colorM","dataSource","is3d","palleteString","chartPaletteStr","chart3D","chart2D","outCanfontSizeWithUnit","pluckFontSizeMaintainUnit","outcnvbasefontsize","basefontsize","xAxisConf","isVertical","isReverse","isOpposit","outCanfontFamily","pluck","outcnvbasefont","basefont","outCanfontSize","computeFontSize","outCancolor","outcnvbasefontcolor","basefontcolor","getColor","replace","axisBreaks","xaxisbreaks","axisNamePadding","xaxisnamepadding","axisValuePadding","labelpadding","axisNameFont","xaxisnamefont","axisNameFontSize","xaxisnamefontsize","axisNameFontSizeWithUnit","axisNameFontColor","xaxisnamefontcolor","axisNameFontBold","xaxisnamefontbold","axisNameFontItalic","xaxisnamefontitalic","axisNameBgColor","xaxisnamebgcolor","axisNameBorderColor","xaxisnamebordercolor","axisNameAlpha","xaxisnamealpha","axisNameFontAlpha","xaxisnamefontalpha","axisNameBgAlpha","xaxisnamebgalpha","axisNameBorderAlpha","xaxisnameborderalpha","axisNameBorderPadding","xaxisnameborderpadding","axisNameBorderRadius","xaxisnameborderradius","axisNameBorderThickness","xaxisnameborderthickness","axisNameBorderDashed","xaxisnameborderdashed","axisNameBorderDashLen","xaxisnameborderdashlen","axisNameBorderDashGap","xaxisnameborderdashgap","useEllipsesWhenOverflow","useellipseswhenoverflow","divLineColor","vdivlinecolor","divLineAlpha","vdivlinealpha","divLineThickness","vdivlinethickness","divLineIsDashed","Boolean","vdivlinedashed","vdivlineisdashed","divLineDashLen","vdivlinedashlen","divLineDashGap","vdivlinedashgap","showAlternateGridColor","showalternatevgridcolor","alternateGridColor","alternatevgridcolor","alternateGridAlpha","alternatevgridalpha","numDivLines","numvdivlines","numVDivLines","labelFont","labelfont","labelFontSize","labelfontsize","labelFontSizeWithUnit","labelFontColor","labelfontcolor","labelFontAlpha","labelalpha","labelFontBold","labelfontbold","labelFontItalic","labelfontitalic","maxLabelHeight","maxlabelheight","axisName","xaxisname","axisMinValue","xaxisminvalue","axisMaxValue","xaxismaxvalue","setAdaptiveMin","setadaptivexmin","adjustDiv","adjustvdiv","labelDisplay","labeldisplay","showLabels","rotateLabels","rotatelabels","slantLabel","slantlabels","slantlabel","labelStep","labelstep","xaxisvaluesstep","showAxisValues","showxaxisvalues","showxaxisvalue","showLimits","showvlimits","showDivLineValues","showvdivlinevalues","zeroPlaneColor","vzeroplanecolor","zeroPlaneThickness","vzeroplanethickness","zeroPlaneAlpha","vzeroplanealpha","showZeroPlaneValue","showvzeroplanevalue","vTrendLines","trendlines","trendlineColor","trendlinecolor","trendlineToolText","trendlinetooltext","trendlineThickness","trendlinethickness","trendlineAlpha","trendlinealpha","showTrendlinesOnTop","showtrendlinesontop","showAxisLine","showxaxisline","showaxislines","drawAxisLines","axisLineThickness","xaxislinethickness","axislinethickness","axisLineAlpha","xaxislinealpha","axislinealpha","axisLineColor","xaxislinecolor","axislinecolor","yAxisConf","yaxisbreaks","yaxisnamepadding","yaxisvaluespadding","yaxisnamefont","yaxisnamefontsize","yaxisnamefontcolor","yaxisnamefontbold","yaxisnamefontitalic","yaxisnamebgcolor","yaxisnamebordercolor","yaxisnamealpha","yaxisnamefontalpha","yaxisnamebgalpha","yaxisnameborderalpha","yaxisnameborderpadding","yaxisnameborderradius","yaxisnameborderthickness","yaxisnameborderdashed","yaxisnameborderdashlen","yaxisnameborderdashgap","axisNameWidth","yaxisnamewidth","rotateAxisName","rotateyaxisname","yaxisname","divlinecolor","divlinealpha","divlinethickness","divlinedashed","divlineisdashed","divlinedashlen","divlinedashgap","showalternatehgridcolor","alternatehgridcolor","alternatehgridalpha","numdivlines","yaxisminvalue","yaxismaxvalue","setadaptiveymin","adjustdiv","yaxisvaluesstep","showyaxisvalues","showyaxisvalue","showlimits","showdivlinevalues","showdivlinevalue","zeroplanecolor","zeroplanethickness","zeroplanealpha","showzeroplanevalue","showyaxisline","yaxislinethickness","yaxislinealpha","yaxislinecolor","_resetViewPortConfig","viewPortConfig","scaleX","scaleY","x","y","_setCategories","xAxis","getChildren","yAxis","dataTable","datatable","setAxisPadding","setProcess","setDataTable","setCategory","getDSdef","dsType","Milestone","Connector","Task","_createLegendItems","i","strokeColor","color","fillColor","itemObj","prevLen","currLen","legendItemId","dataObj","legend","legendItems","dataLegendItems","item","legendItemIds","disposeItem","getId","splice","getItem","createItem","getLightColor","dropHash","FCcolor","ratio","angle","label","interactiveLegend","configure","setStateCosmetics","symbol","fill","toRaphaelColor","stroke","_spaceManager","availableHeight","availableWidth","legendPosition","allottedSpace","spaceUsed","processHeight","processWidthPercent","chartBorderWidth","borderWidth","totalWidth","totalHeight","_allocateSpace","top","bottom","left","right","_manageActionBarSpace","legendPos","split","POSITION_BOTTOM","POSITION_TOP","canvasHeight","canvasWidth","_manageChartMenuBar","showLegend","_manageLegendSpace","actualCanvasTop","canvasTop","actualCanvasLeft","canvasLeft","placeAxis","setProcessHeight","setAxisConfig","processTotalHeight","_postSpaceManagement","vScrollWidth","vScrollEnabled","hScrollEnabled","hProcessScrollEnabled","axisLength","limits","getLimit","getAxisConfig","xDepth","canvasConfig","canvasBorderWidth","canvasPadding","vScrollBar","canvasPaddingLeft","canvasPaddingRight","gPaneDuration","Number","gPaneDurationUnit","hProcessScrollBar","hScrollBar","hScrollBarHeight","height","hProcessScrollHeight","isNaN","multiplier","unit","startTime","endTime","timeYear","offset","timeMonth","timeDay","timeHour","timeMinute","timeSecond","_isOutofTimeRange","width","setAxisDimention","shift","opposite","currentCanvasWidth","canvasRight","_manageScrollbarPosition","postSpaceManager","setScrollDimensions","allocateDimensionOfChartMenuBar","childGraphics","getChildContainer","graphics","getContainer","scrollBarParentGroup","animationManager","setAnimation","el","attr","container","parentgroup","component","scrollbarContainer","insertBefore","datalabelsGroup","hScrollBarConfig","vScrollBarConfig","hProcessScrollBarConfig","vScrollRatio","windowedCanvasHeight","fullCanvasHeight","windowedCanvasWidth","fullCanvasWidth","totalProcessWidth","totalVisiblelProcessWidth","axisRange","scrollOptions","vxLength","horizontalVxLength","hScrollBarAnchorConfig","useVerticalScrollBar","scrollableLength","canvas","viewPortMin","viewPortMax","scrollRatio","getPixel","setDimension","scrollPosition","roundEdges","isRoundEdges","parentLayer","_setAxisScale","datems","datePixel","actualCanvasHeight","minDt","Date","numberFormatter","ms","scrollToDate","scrolltodate","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","getTime","units","getDateValue","scrollPos","xOffset","remove","floor","_createToolBoxGantt","prevPos","hScrollItem","hScrollItem1","vScrollItem","ref","iapi","_scrollB","chartMenuBar","actionBar","getScrollItems","addScrollItems","drawn","isHorizontal","scale","updateManagerH","arguments","fireChartInstanceEvent","scrollEnd","prevScrollPosition","updateManagerV","manageProcessScroll","attachChild","ScrollBar","attachEventHandlers","scrollDimensions","getLogicalSpace","hScrollHeight","padding","pos","transformAttr","lastXpos","datasetLayer","plotGroup","dataLabelContainer","dataLabelsLayer","trackerGroup","yOffset","ganttPlotLineContainer","translateAxis","lastTranslate","labelContainer","datatableContainer","ganttPlotHoverBandContainer","MSCartesian","componentFactory","CanvasGantt","len","createGroup","labelStyle","inCanStyle","style","inCanvasStyle","addChildContainer","milestoneLabelStyle","fontSize","milestonefontsize","fontSizeWithUnit","fontFamily","milestonefont","fontWeight","milestonefontbold","fontStyle","milestonefontitalic","setLineHeight","css","setClipping","taskGroup","connectorGroup","childContainer","trackerLayer","clipCanvas","clip","slice","state","clipSet","transform","drawCanvas","canvasBorderElement","canvasElement","canvasBorderElementDummy","getGraphicalElement","canvasElementDummy","actualCanvasWidth","canvasGroup","canvasBorderRadius","borderWHlf","canBGColor","shadow","showCanvasBg","showCanvasBG","showcanvasbg","shadowOnCanvasFill","r","showCanvasBorder","show","addGraphicalElement","hide","Canvas","zoomObj","zoomable","pannable","TimeAxis","ProcessAxis","setLinkedItem","attachAxis","zoomX","zoomY","rawAttr","axisConfig","chartData","lineColor","convertColor","gridbordercolor","gridborderalpha","lineThickness","gridborderthickness","lineDashStyle","gridborderdashed","getDashStyle","gridborderdashlen","gridborderdashgap","plotLineColor","ganttlinecolor","ganttlinealpha","plotLineThickness","ganttlinethickness","plotLineDashStyle","ganttlinedashed","ganttlinedashlen","ganttlinedashgap","gridresizebarcolor","gridresizebaralpha","gridResizeBarThickness","gridresizebarthickness","forceRowHeight","forcerowheight","rowHeight","rowheight","hoverColor","processhoverbandcolor","hoverbandcolor","hoverAlpha","processhoverbandalpha","hoverbandalpha","useHover","showprocesshoverband","showhoverband","usePlotHover","showganttpanehorizontalhoverband","showFullDataTable","showfulldatatable","forceGanttWidthPercent","forceganttwidthpercent","useVerticalScrolling","gridLineHeaderPath","gridLinePath","processesLen","processesFinal","index","ProcessIndex","processMap","startPad","endPad","hasProcess","extractAttribToEnd","processHeightMap","id","toLowerCase","catObj","setAxisRange","toPrecision","tickInterval","getProcessPositionByIndex","idx","getProcessPositionById","processId","_dataTables","dataTables","hasDataTables","processHeightFinal","processLength","processMaxHeight","adjustWidth","processVlineArr","attrib","getWidth","newLeft","prevProcessVlineArr","processOnRight","datacolumn","retW","match","positioningrid","_attrib","rightPos","leftPos","ind","xPos","leftLimit","hasOwnProperty","rightLimit","pop","maxWidth","text","smartLabelText","singleProcess","processStyle","processParent","singleProcessStyle","dataColumn","j","textStyle","singleTextStyle","maxTextDimention","smartLabel","labels","nameStyle","trendStyle","trend","maxProcessDimention","maxTextSize","spaceReturn","processSpaceUsed","preAlocateSpace","lineHeight","useEllipsesOnOverflow","setStyle","headertext","drawLabel","parseUnsafeString","headerfontfamily","headerfontsize","toString","headerisbold","headerisitalic","getOriSize","fontfamily","isbold","isitalic","totalVisiblelWidth","getProcessLen","_drawProcessAndDataTable","args","topBottom","translateX","labelContainerAttr","headerContainerAttr","ganttPlotHoverBandContainerParent","axisStartPosition","axisDimention","spaceTaken","gridArr","axisBottomGroup","elemIndex","dataTableCounter","headerContainer","headerBackContainer","headerLineContainer","headerTextContainer","labelBackContainer","labelLineContainer","labelTextContainer","hotContainer","addContainer","categorySpaceUsed","isDraged","hoverElemsArr","labelHoverEventName","click","rollOver","rollOut","elem","dimension","_drawProcessAndDataTableElement","drawFromProcessVlineDrag","resetTransletAxis","_drawGridLine","_disposeExtraProcessAndDataTableElement","_drawVerticalLineAndTracker","ln","path","hotElement","hoverLineStyle","lineHotElemStyle","vHoverLine","axis","plotLine","processVline","counter","dragStart","data","origX","lastX","trackerClicked","draged","dragMove","evt","vLineSetting","dx","substr","indexOf","startX","leftSideLimit","rightSideLimit","dragUp","vLineIndex","TRACKER_FILL","hasSVG","drag","_drawComponents","drawPlotlines","_drawPlotLine","GanttCommonAxis","obj","attribObj","ret","_getAttribAsObj","lastHoverEle","hoverTimeout","_hasElements","elemArr","ganttCommonAnimation","lineStyle","lineElement","axisPlotLineContainerBottom","canvasBottom","_drawTrendLine","markerObj","labelObj","axisDrawingAttrObj","axisTextAttrObj","startValuePixel","isTrendZone","endValuePixel","startValue","endValue","fixedTrendLabelPos","fixedTrendLabelPosRight","crispPath","axisTrendContainer","maxPx","minPx","showOnTop","valueOnRight","trendElems","trendTextElems","trendArr","getComponentInfo","tooltipController","axisPadding","labelPadding","drawTrendLabels","trendlabels","axisTrendContainerTop","axisTrendContainerBottom","checkForLimit","_isZoomed","getVisibleConfig","trendElemsArr","trendTextElemsArr","trendLines","vtrendlines","trendBottomPadding","minValue","wrtVisible","maxValue","marker","strokeWidth","strokeDashArray","shapeRendering","textAnchor","textBound","isZone","hasBreakPoints","_getRelativeBreakValue","getCrispPath","BLANKSTRING","visibility","is3D","toolText","enableToolTip","disableToolTip","_drawProcessAndDataTableStyleParser","attrs","yPos","retAttrib","smartText","vAlign","align","textDecoration","hoverC","hoverA","rollOverColor","link","lHeight","font","bgcolor","getFirstColor","bgalpha","fontcolor","isunderline","valign","headerfont","headerfontcolor","headerisunderline","headerbgcolor","headerbgalpha","headervalign","headeralign","headerlink","textAttr","getSmartText","cursor","rectAttr","eventArgs","isHeader","tooltext","oriText","showganttpanehoverband","dataArgs","hoverEle","groupId","attribs","rectElement","textElement","categoryElement","toolTipController","showTooltip","labelClickHandler","e","plotEventHandler","labelRollOver","clearTimeout","removed","_gridOutHandler","call","_gridHoverHandler","labelRollOut","setTimeout","rect","removeCSS","appendChild","hover","on","bgElem","gridLine","plotHoverElementAttr","hoverElems","plotHoverElement","isPlotHoverElement","hoverOutElem","heigth","GanttAxis","R","getDep","pInt","s","mag","parseInt","groupName","parentContainer","roundToMultiple","num","multiple","remainder","abs","_forceValidLowerLimit","value","limit","_drawLimitUpdater","limitUpdater","sanitiseComponentName","sanitisedName","TREND","CAT_VLINE","LABEL","LINE","BAND","CAT_BAND","_drawScrollBar","axisLineWidth","axisLineStartExtension","axisLineEndExtension","visibleConfig","visibleRange","totalRange","scrollBar","getLinkedItem","scrollNode","node","lineStartExtension","lineEndExtension","parentGroup","scrollEnabled","eve","setState","scrollBarDrawn","roundValue","isCrisped","oddWidth","round","getType","showZeroPlane","showZeroPlaneOnTop","tickLength","trendlinesAreDashed","trendlinesDashLen","trendlinesDashGap","showTrendlines","showTrendlineLabels","isActive","drawLabels","drawOnlyCategoryLine","drawLabelsOpposit","drawAxisLine","drawPlotBands","drawAxisName","drawAxisNameOpposit","axisNameAlignCanvas","drawAxisNameFromBottom","drawTrendLines","drawTick","drawTickMinor","animateAxis","drawAxisLineWRTCanvas","isRelativeAxisInverse","axisIndex","uniqueClassName","viewPortRatio","isConfigured","extremeLabels","firstLabel","lastLabel","_setRangeAgain","_defaultForceDecimal","_defaultDecimalPrecision","rangeChanged","dimensionChanged","apparentScrollPos","addToEnv","catVLine","lines","bands","catBand","axisAttr","fontBdrColor","trendFontBdrColor","labelFontBdrColor","axisAttrTrend","rawAttrTrend","FCChartObj","tempAxis","line","startvalue","endvalue","istrendzone","thickness","trendTextAlpha","parseConfiguration","maxLabelWidthPercent","minLabelWidthPercent","categoryNumDivLines","categoryDivLinesFromZero","getCleanValue","tickAlpha","tickColor","tickWidth","maxZoomLimit","maxzoomlimit","showVLines","showvlines","showVLinesOnTop","showvlinesontop","showVLineLabels","showvlinelabels","showVLineLabelBorder","showvlinelabelborder","rotateVLineLabels","rotatevlinelabels","vLineColor","vlinecolor","vLineLabelColor","vlinelabelcolor","vLineThickness","vlinethickness","vLineAlpha","vlinealpha","vLineLabelBgColor","vlinelabelbgcolor","vLineLabelBgAlpha","vlinelabelbgalpha","staggerLines","staggerlines","trendlineValuesOnOpp","_oriLabelStep","showUpperLimit","axisBreak","isBreak","_processAxisBreak","getFirstValue","border","borderThickness","borderPadding","borderRadius","backgroundColor","borderDash","trendvaluebordercolor","trendvalueborderalpha","trendvaluealpha","trendvaluefont","trendvaluefontcolor","pluckFontSize","trendvaluefontsize","trendvaluefontbold","trendvaluefontitalic","trendvaluebgcolor","trendvalueborderthickness","trendvalueborderpadding","trendvalueborderradius","trendvaluebgalpha","trendvalueborderdashed","trendvalueborderdashlen","trendvalueborderdashgap","band","labelbordercolor","labelborderalpha","labelLink","labellink","labelbgcolor","labelborderthickness","labelborderpadding","labelborderradius","labelbgalpha","labelborderdashed","labelborderdashlen","labelborderdashgap","numberFormatterFn","axisEndLabelDisplaySpace","setScrollType","scrollType","setVisibleConfig","getScrollType","breakPoints","count","start","end","sort","a","b","_validateBreakPoints","totalBreakAmount","valueDeletion","_getRealBreakValue","_value","_adjustNumberFormatter","interval","dec","numberFormatterSetting","defaultDecimalPrecision","defaultForceDecimal","beforeZero","Y","yAxisLabelConf","paramX","decimalprecision","forcedecimals","_getIntervalArr","visibleMin","visibleMax","axisLabelConfig","increment","step","returnArr","axisType","minPad","maxPad","drawNormalVal","drawLimitVal","_disposeScrollBar","addComponentInfo","clearComponentInfo","key","componentInfo","axisBandGroup","axisPlotLineGroup","axisPlotLineGroupTop","axisLineGroup","axisNameGroup","axisLabelGroup","axisLabelGroupTop","axisTrendGroupTop","axisTrendGroupBottom","dy","originY","originX","plotLineClipRect","limitUpdaters","axisContainer","axisLabelContainerTop","axisPlotLineContainer","axisPlotLineContainerTop","vlineLabelContainer","axisBandContainer","axisNameContainer","axisTrendLabelContainer","axisAxisLineContainer","axisAxisLineContainerBottom","plotLineWidth","childContainers","axisBottom","axisTop","axisTopGroup","animElems","animType","animConfig","syncWith","initial","addExtEventListener","forEach","visibleLength","getVisibleLength","axisOpposite","axisY","axisX","axisRangeMin","axisRangeMax","axisTickInterval","axisIsReverse","axisIsVertical","axisHasBreakPoints","viewPortScaleY","viewPortY","viewPortScaleX","viewPortX","chartHeight","chartWidth","chartLeft","chartRight","chartBottom","chartTop","pvr","refVal","refVisibleVal","getBreakPoints","getValue","pixel","refPx","_startPad","_endPad","oriCatLen","hasCategory","originalMax","originalMin","setDataLimit","prop","tempAxisRange","getPVR","_max","_min","setMinAsZero","stopMaxAtZero","axisLimits","lineMin","lineMax","AxisMaxValue","isPercent","AxisMinValue","lineArr","getAxisLimits","Max","Min","divGap","axisScroll","translationStr","zoom","range","minVisibleValue","maxVisibleValue","setScrollEnabled","isScrollEnabled","fireEvent","asyncDraw","getTranslation","join","visibleSpan","preValue","getOldPVR","bool","scroll","ganttLabelContainer","ganttHeaderContainer","translate","ComponentInterface","fadeIn","initialAttr","opacity","finalAttr","slot","startEnd","POSITION_START","preDefStr","POSITION_END","categoryhoverbandcolor","categoryhoverbandalpha","showcategoryhoverband","showganttpaneverticalhoverband","catLength","categoriesFinal","startMS","endMS","minTime","Infinity","maxTime","maxHeight","jLen","iLim","trendObj","axisSmartTrendValue","heightLeft","trendMaxHeight","trendSpaceUsed","maxTopSpaceAvailable","topPos","bottomPos","origText","displayvalue","valueToolText","_drawCategories","lastRightPos","labelClipHeight","startms","endms","trendLabelElement","comTrendLines","NFMethodName","chartAttr","trendLabelText","getValidValue","parseTooltext","startDataValue","endDataValue","valuealpha","dashed","ONESTRING","dashlen","dashgap","valueonright","showontop","prepareTrends","clickHandler","event","rollOverHandler","element","hoverFillColor","hoverBorderColor","hoverBorderAlpha","rollOutHandler","fillAlpha","milestoneAnimation","slackFillColor","bordercolor","configureAttributes","userConfig","milestones","_setConfigure","newDataset","taskConfigObj","dataConfig","processName","setData","sides","shape","depth","taskId","dateMs","milestoneDate","JSONData","setDataArr","milestone","setDataLen","dataStore","tasksMap","taskid","numsides","mapSymbolName","hovertext","milestonetooltext","date","getFormattedDate","taskStartDate","_startDate","taskEndDate","_endDate","taskLabel","taskPercentComplete","percentComplete","percentValue","extractLabelStyle","fontbold","fontitalic","textColor","milestonefontcolor","numSides","startAngle","startangle","radius","origDate","fillalpha","displayValue","hoverfillcolor","milestonehoverfillcolor","getDarkColor","hoverfillalpha","milestonehoverfillalpha","hoverbordercolor","milestonehoverbordercolor","hoverborderalpha","milestonehoverborderalpha","showmilestonehovereffect","visible","labelElementDummy","labelElement","labelAttrs","taskObj","_labelAttrs","hideFn","doNotRemove","setElementDummy","setElement","polypath","chartComponents","taskMap","getState","removeDataArr","removeDataArrLen","checkInvalidValue","direction","textDirection","addJob","bind","priorityList","_removeDataVisuals","center","xAlign","alignGutter","stylePropValues","defined","styleObj","str","test","val","ii","allValuesValid","taskAnimation","slackhoverfillalpha","eDate","sDate","arrColor","arrAlpha","arrRatio","dataLabel","tAlpha","tBorderAlpha","tBorderColor","fillAngle","showPercentLabel","slHovColor","slColor","tColorObj","tHovColor","tHovBorderColor","datasetLabelStyle","setLabelStyle","datasetConfig","taskMix","taskRatio","showSlackAsFill","dInt","alignVal","dataLabelStyle","showname","showTextOutline","textoutline","processid","percentcomplete","parseColorMix","parseAlphaList","parseRatioList","textFont","textFontSize","fontsizes","startMs","endMs","labelAlign","labelalign","showAsGroup","showasgroup","showlabel","taskhoverfillcolor","slackhoverfillcolor","rawTaskColor","rawTaskAlpha","slackColor","slackHoverColor","taskHeight","topPadding","toppadding","endDate","startDate","inverted","plottooltext","slackElemHandlers","slackElem","dataset","taskHoverHandler","taskHoverOutHandler","trimData","datasetJSON","diff","startIndex","context","prevCatlen","currCatLen","catDiff","prevData","prevDataLength","currDataLength","dataDiff","removeData","getAxisValuePadding","defaultPadding","valElemDummy","startValElemDummy","endValElemDummy","valElem","startValElem","endValElem","startLabelTextAttr","endLabelTextAttr","_labelTextAttr","outlineText","_startLabelTextAttr","_endLabelTextAttr","taskFill","dashedStyle","parsePlotAttributes","endX","setLink","pHeight","width2","taskBarElementAttrs","crispBox","halfH","txtAlign","borderFill","labelTextAttr","processDimention","incrementId","datePadding","proLen","taskBarRadius","parseFloat","crispBound","props","perComElem","Object","assign","sourceType","fontColor","inValidValue","allocatePosition","dsStore","ele","graphicsObj","taskBarElement","perComElemDummy","slackElemDummy","elemType","labelsGroup","isContextChanged","_contextChanged","shadowContainer","toBack","Column","input","inputPath","connectorClick","stTObj","fromTaskId","endTObj","toTaskId","hoverThickness","connector","slackGraphic","percentCompleteGraphic","connectorAnimation","isdashed","connectors","cnColor","cnAlpha","cnThickness","cnIsDashed","fromtaskid","totaskid","fromTaskConnectStart","fromtaskconnectstart","toTaskConnectStart","totaskconnectstart","hovercolor","connectorhovercolor","hoveralpha","connectorhoveralpha","hoverthickness","connectorhoverthickness","startTaskId","endTaskId","isStraightLine","stY","etY","stx1","stx2","etx1","etx2","cnCase","stTConfig","endTConfig","cPath","tH","connectorDummy","trackerElementDummy","trackerElement","cExt","hasNoTasks","_hasNoTasks","hasNoConnectors","_hasNoConnectors","hasNoMilestones","_hasNoMilestones","_hasNoDataToDisplay","setChartMessage","getDatasets"],"mappings":"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","file":"fusioncharts.gantt.js","sourcesContent":["import Gantt from '../viz/gantt';\n\nexport { Gantt };\n\nexport default {\n  name: 'gantt',\n  type: 'package',\n  requiresFusionCharts: true,\n  extension: FusionCharts => FusionCharts.addDep(Gantt)\n};\n","import Gantt from '@fusioncharts/widgets/src/chart/gantt';\nexport default Gantt;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport canvasFactory from '../../factories/gantt-canvas';\nimport ganttAxisFactory from '../../factories/gantt-axis';\nimport Milestone from '../../dataset/gantt/milestone';\nimport Task from '../../dataset/gantt/task';\nimport Connector from '../../dataset/gantt/connector';\nimport datasetFactory from '../../factories/gantt-dataset';\nimport { ScrollBar } from '@fusioncharts/core/src/toolbox';\nimport { timeYear, timeMonth, timeDay, timeMinute, timeSecond, timeHour } from '@fusioncharts/utils/src/time-intervals';\nimport { pluckNumber, defaultGaugePaletteOptions, pluck, extend2, chartPaletteStr,\n  POSITION_TOP, POSITION_BOTTOM, setAttribDefs, attrTypeBool, attrTypeNum,\n  dropHash, toRaphaelColor, getLightColor, POSITION_CENTER, HUNDREDSTRING, pluckFontSizeMaintainUnit } from '@fusioncharts/core/src/lib';\n\nlet UNDEF,\n  mathMax = Math.max,\n  mathMin = Math.min,\n  SLACK_FILL_COLOR = 'FF5E5E',\n  TASK = 'task',\n  _scrollBar = (function () {\n    var scrollItems = [];\n    return {\n      get: function () {\n        return scrollItems;\n      },\n\n      clear: function () {\n        scrollItems.length = 0;\n      },\n\n      add: function (options, callback) {\n        scrollItems.push({\n          conf: options,\n          handler: callback\n        });\n      }\n    };\n  })(),\n  /**\n   * Function that determines if horizontal scroll is needed based on the number of time units to be shown\n   * @param {Number} multiplier The multiplier of the time unit\n   * @param {Number} unit The time unit namely year, month, etc\n   * @param {Number} startTime The start time in the user given data\n   * @param {Number} endTime The end time in the user given data\n   * @return {Boolean} returns whether the given start and and end time can be accomodated in the given time bound\n   */\n  _isOutofTimeRange = function (multiplier, unit, startTime, endTime) {\n    if (multiplier > 0) {\n      switch (unit) {\n        case 'y': return +timeYear.offset(startTime, multiplier) < endTime;\n        case 'm': return +timeMonth.offset(startTime, multiplier) < endTime;\n        case 'd': return +timeDay.offset(startTime, multiplier) < endTime;\n        case 'h': return +timeHour.offset(startTime, multiplier) < endTime;\n        case 'mn': return +timeMinute.offset(startTime, multiplier) < endTime;\n        case 's': return +timeSecond.offset(startTime, multiplier) < endTime;\n      }\n    }\n  };\n\n// Map attribute definitions to their types\nsetAttribDefs && setAttribDefs({\n  showpercentlabel: {\n    type: attrTypeBool,\n    pAttr: 'showpercentlabel'\n  },\n  fontsize: {\n    type: attrTypeNum\n  },\n  alpha: {\n    type: attrTypeNum\n  },\n  showborder: {\n    type: attrTypeBool\n  },\n  borderthickness: {\n    type: attrTypeNum\n  },\n  borderalpha: {\n    type: attrTypeNum\n  },\n  showHoverEffect: {\n    type: attrTypeNum\n  },\n  hoverFillAlpha: {\n    type: attrTypeNum\n  },\n  slackHoverFillColor: {\n    type: attrTypeNum\n  },\n  slackHoverFillAlpha: {\n    type: attrTypeBool\n  },\n  showlabels: {\n    type: attrTypeBool,\n    pAttr: 'showtasknames'\n  },\n  slackfillcolor: {\n    pAttr: 'slackfillcolor'\n  },\n  showtasklabels: {\n    type: attrTypeBool,\n    pAttr: 'showtasknames'\n  },\n  showtasknames: {\n    type: attrTypeBool,\n    pAttr: 'showlabels'\n  },\n  showconnectorhovereffect: {\n    type: attrTypeNum,\n    pAttr: 'showhovereffect'\n  },\n  connectorextension: {\n    type: attrTypeNum\n  },\n  tasklabelspadding: {\n    type: attrTypeNum\n  },\n  taskdatepadding: {\n    type: attrTypeNum\n  },\n  showstartdate: {\n    type: attrTypeNum,\n    pAttr: 'showtaskstartdate'\n  },\n  showenddate: {\n    type: attrTypeNum,\n    pAttr: 'showtaskenddate'\n  },\n  showtaskhovereffect: {\n    type: attrTypeNum,\n    pAttr: 'showhovereffect'\n  },\n  useverticalscrolling: {\n    type: attrTypeNum\n  },\n  taskbarroundradius: {\n    type: attrTypeNum\n  },\n  showshadow: {\n    type: attrTypeNum\n  },\n  showslackasfill: {\n    type: attrTypeNum\n  }\n});\n\n/**\n * Definition of the Gantt Chart API.\n */\nclass Gantt extends MSCartesian {\n  /**\n   * Creates an instance of Gantt. Defines the default color palette of the chart.\n   */\n  constructor () {\n    super();\n    this._scrollBar = _scrollBar;\n    this.components = {};\n\n    this.fireGroupEvent = true;\n    this.hasInteractiveLegend = false;\n\n    this.defaultPaletteOptions = extend2(extend2({}, defaultGaugePaletteOptions), {\n      // Colors for gauge '339900', 'DD9B02', '943A0A',\n      paletteColors:\n        [['AFD8F8', 'F6BD0F', '8BBA00', 'FF8E46', '008E8E',\n          'D64646', '8E468E', '588526', 'B3AA00', '008ED6', '9D080D',\n          'A186BE', 'CC6600', 'FDC689', 'ABA000', 'F26D7D', 'FFF200',\n          '0054A6', 'F7941C', 'CC3300', '006600', '663300', '6DCFF6'],\n        ['AFD8F8', 'F6BD0F', '8BBA00', 'FF8E46', '008E8E',\n          'D64646', '8E468E', '588526', 'B3AA00', '008ED6', '9D080D',\n          'A186BE', 'CC6600', 'FDC689', 'ABA000', 'F26D7D', 'FFF200',\n          '0054A6', 'F7941C', 'CC3300', '006600', '663300', '6DCFF6'],\n        ['AFD8F8', 'F6BD0F', '8BBA00', 'FF8E46', '008E8E',\n          'D64646', '8E468E', '588526', 'B3AA00', '008ED6', '9D080D',\n          'A186BE', 'CC6600', 'FDC689', 'ABA000', 'F26D7D', 'FFF200',\n          '0054A6', 'F7941C', 'CC3300', '006600', '663300', '6DCFF6'],\n        ['AFD8F8', 'F6BD0F', '8BBA00', 'FF8E46', '008E8E',\n          'D64646', '8E468E', '588526', 'B3AA00', '008ED6', '9D080D',\n          'A186BE', 'CC6600', 'FDC689', 'ABA000', 'F26D7D', 'FFF200',\n          '0054A6', 'F7941C', 'CC3300', '006600', '663300', '6DCFF6'],\n        ['AFD8F8', 'F6BD0F', '8BBA00', 'FF8E46', '008E8E',\n          'D64646', '8E468E', '588526', 'B3AA00', '008ED6', '9D080D',\n          'A186BE', 'CC6600', 'FDC689', 'ABA000', 'F26D7D', 'FFF200',\n          '0054A6', 'F7941C', 'CC3300', '006600', '663300', '6DCFF6']],\n      // Store other colors\n      // ------------- For 2D Chart ---------------//\n      // We're storing 5 combinations, as we've 5 defined palettes.\n      bgColor: ['FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF'],\n      bgAngle: [270, 270, 270, 270, 270],\n      bgRatio: ['100', '100', '100', '100', '100'],\n      bgAlpha: ['100', '100', '100', '100', '100'],\n      canvasBgColor: ['FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF'],\n      canvasBgAngle: [0, 0, 0, 0, 0],\n      canvasBgAlpha: ['100', '100', '100', '100', '100'],\n      canvasBgRatio: ['', '', '', '', ''],\n      canvasBorderColor: ['545454', '545454', '415D6F', '845001', '68001B'],\n      canvasBorderAlpha: [100, 100, 100, 90, 100],\n      gridColor: ['DDDDDD', 'D8DCC5', '99C4CD', 'DEC49C', 'FEC1D0'],\n      gridResizeBarColor: ['999999', '545454', '415D6F', '845001', 'D55979'],\n      categoryBgColor: ['F1F1F1', 'EEF0E6', 'F2F8F9', 'F7F0E6', 'FFF4F8'],\n      dataTableBgColor: ['F1F1F1', 'EEF0E6', 'F2F8F9', 'F7F0E6', 'FFF4F8'],\n      toolTipBgColor: ['FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF'],\n      toolTipBorderColor: ['545454', '545454', '415D6F', '845001', '68001B'],\n      baseFontColor: ['555555', '60634E', '025B6A', 'A15E01', '68001B'],\n      borderColor: ['767575', '545454', '415D6F', '845001', '68001B'],\n      borderAlpha: [50, 50, 50, 50, 50],\n      legendBgColor: ['ffffff', 'ffffff', 'ffffff', 'ffffff', 'ffffff'],\n      legendBorderColor: ['666666', '545454', '415D6F', '845001', 'D55979'],\n      plotBorderColor: ['999999', '8A8A8A', '6BA9B6', 'C1934D', 'FC819F'],\n      plotFillColor: ['EEEEEE', 'D8DCC5', 'BCD8DE', 'E9D8BE', 'FEDAE3'],\n      scrollBarColor: ['EEEEEE', 'D8DCC5', '99C4CD', 'DEC49C', 'FEC1D0']\n    });\n\n    this.registerFactory('canvas', canvasFactory);\n    this.registerFactory('axis', ganttAxisFactory, ['canvas']);\n    this.registerFactory('dataset', datasetFactory, ['canvas']);\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Gantt';\n  }\n  /**\n   * draws the chart and the scroll bars\n   */\n  draw () {\n    super.draw();\n    this.createScrollbarContainer();\n  }\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Gantt';\n  }\n\n  /**\n   * Sets the default configurations of the Gantt chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n\n    let config = this.config;\n\n    config.alignCaptionWithCanvas = 0;\n    config.defaultDatasetType = TASK;\n    config.taskbarroundradius = 0;\n    config.taskbarfillmix = ` { light-10 }, { dark-20 }, { light-50 }, { light-85 }`;\n    config.taskbarfillratio = `0,8,84,8`;\n    config.showslackasfill = 1;\n    config.dateintooltip = 1;\n    config.tasklabelsalign = POSITION_CENTER;\n    config.datepadding = 3;\n    config.showtasknames = 0;\n    config.showpercentlabel = false;\n    config.showhovereffect = 1;\n    config.slackfillcolor = SLACK_FILL_COLOR;\n    config.connectorextension = 10;\n    config.tasklabelspadding = 2;\n    config.taskdatepadding = 3;\n    config.showlabels = UNDEF;\n    config.showtooltip = 1;\n    config.showtaskhovereffect = UNDEF;\n    config.useverticalscrolling = 1;\n    config.ganttpanedurationunit = UNDEF;\n    config.ganttpaneduration = UNDEF;\n    config.showtaskstartdate = UNDEF;\n    config.showtaskenddate = UNDEF;\n    config.ganttwidthpercent = UNDEF;\n    config.showshadow = 1;\n    config.taskhoverfillalpha = HUNDREDSTRING;\n    config.enablemousetracking = false;\n  }\n\n  /**\n   * Checks if the given data is applicable to the chart. If it is not, the chart shows the\n   * 'Invalid Data' message.\n   *\n   * @return {boolean} Indicates whether the data suplied to the chart is valid.\n   */\n  _checkInvalidSpecificData () {\n    let jsonData = this.getFromEnv('dataSource'),\n      processes = jsonData.processes,\n      process = processes && processes.process,\n      zeroProcesslen = process && process.length,\n      tasks = jsonData.tasks,\n      task = (tasks && tasks.task) || tasks,\n      zeroTaskLen = task && task.length,\n      categories = jsonData.categories,\n      category = categories && categories[0] && categories[0].category,\n      zeroCatlen = category && category.length;\n\n    return (!zeroProcesslen || !zeroTaskLen || !zeroCatlen);\n  }\n\n  /**\n   * Parses the data source configuration given by the user\n   *\n   * @param {Object} config The data source given by the user\n   */\n  parseChartAttr (config) {\n    let chartConfig = this.config,\n      chartAttrs = (config && config.chart) || this.getFromEnv('chart-attrib');\n\n    // Parsing of showborder and borderwidth must be done before calling\n    // configureAttributes of super class\n    super.parseChartAttr(config);\n    chartConfig.showBorder = pluckNumber(chartAttrs.showborder, 0);\n    chartConfig.alignLegendWithCanvas = 0;\n    chartConfig.taskhoverfillalpha = config.chart.taskhoverfillalpha;\n  }\n\n  /**\n   * Generates the configuration for the x and y axes of the chart\n   *\n   * @return {Object} Containing the axis configuration\n   */\n  _feedAxesRawData () {\n    let colorM = this.getFromEnv('color-manager'),\n      dataSource = this.getFromEnv('dataSource'),\n      chartAttrs = dataSource.chart,\n      is3d = this.is3d,\n      palleteString = is3d ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    return {\n      xAxisConf: [{\n        isVertical: false,\n        isReverse: false,\n        isOpposit: true,\n        outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, 'Verdana,sans'),\n        outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n        outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n        outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n          colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig, '#$1'),\n        axisBreaks: chartAttrs.xaxisbreaks,\n        axisNamePadding: chartAttrs.xaxisnamepadding,\n        axisValuePadding: chartAttrs.labelpadding,\n        axisNameFont: chartAttrs.xaxisnamefont,\n        axisNameFontSize: this.computeFontSize(chartAttrs.xaxisnamefontsize),\n        axisNameFontSizeWithUnit: chartAttrs.xaxisnamefontsize,\n        axisNameFontColor: chartAttrs.xaxisnamefontcolor,\n        axisNameFontBold: chartAttrs.xaxisnamefontbold,\n        axisNameFontItalic: chartAttrs.xaxisnamefontitalic,\n        axisNameBgColor: chartAttrs.xaxisnamebgcolor,\n        axisNameBorderColor: chartAttrs.xaxisnamebordercolor,\n        axisNameAlpha: chartAttrs.xaxisnamealpha,\n        axisNameFontAlpha: chartAttrs.xaxisnamefontalpha,\n        axisNameBgAlpha: chartAttrs.xaxisnamebgalpha,\n        axisNameBorderAlpha: chartAttrs.xaxisnameborderalpha,\n        axisNameBorderPadding: chartAttrs.xaxisnameborderpadding,\n        axisNameBorderRadius: chartAttrs.xaxisnameborderradius,\n        axisNameBorderThickness: chartAttrs.xaxisnameborderthickness,\n        axisNameBorderDashed: chartAttrs.xaxisnameborderdashed,\n        axisNameBorderDashLen: chartAttrs.xaxisnameborderdashlen,\n        axisNameBorderDashGap: chartAttrs.xaxisnameborderdashgap,\n        useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n        divLineColor: pluck(chartAttrs.vdivlinecolor, colorM.getColor(palleteString.divLineColor)),\n        divLineAlpha: pluck(chartAttrs.vdivlinealpha, is3d ? colorM.getColor('divLineAlpha3D')\n          : colorM.getColor('divLineAlpha')),\n        divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, 1),\n        divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed, 0)),\n        divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, 4),\n        divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, 2),\n        showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n        alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor('altVGridColor')),\n        alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor('altVGridAlpha')),\n        numDivLines: pluckNumber(chartAttrs.numvdivlines, this.config.numVDivLines),\n        labelFont: chartAttrs.labelfont,\n        labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n        labelFontSizeWithUnit: chartAttrs.labelfontsize,\n        labelFontColor: chartAttrs.labelfontcolor,\n        labelFontAlpha: chartAttrs.labelalpha,\n        labelFontBold: chartAttrs.labelfontbold,\n        labelFontItalic: chartAttrs.labelfontitalic,\n        maxLabelHeight: chartAttrs.maxlabelheight,\n        axisName: chartAttrs.xaxisname,\n        axisMinValue: chartAttrs.xaxisminvalue,\n        axisMaxValue: chartAttrs.xaxismaxvalue,\n        setAdaptiveMin: chartAttrs.setadaptivexmin,\n        adjustDiv: chartAttrs.adjustvdiv,\n        labelDisplay: chartAttrs.labeldisplay,\n        showLabels: chartAttrs.showlabels,\n        rotateLabels: chartAttrs.rotatelabels,\n        slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n        labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n        showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n        showLimits: pluckNumber(chartAttrs.showvlimits, this.config.showvlimits),\n        showDivLineValues: pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues),\n        // showZeroPlane: chartAttrs.showvzeroplane,\n        zeroPlaneColor: chartAttrs.vzeroplanecolor,\n        zeroPlaneThickness: chartAttrs.vzeroplanethickness || 2,\n        zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n        showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n        vTrendLines: dataSource.trendlines,\n        trendlineColor: chartAttrs.trendlinecolor,\n        trendlineToolText: chartAttrs.trendlinetooltext,\n        trendlineThickness: chartAttrs.trendlinethickness,\n        trendlineAlpha: chartAttrs.trendlinealpha,\n        showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n        showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n          chartAttrs.drawAxisLines, 0),\n        axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n        axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n        axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, '#000000')\n      }],\n      yAxisConf: [{\n        isVertical: true,\n        isReverse: true,\n        isOpposit: false,\n        outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, 'Verdana,sans'),\n        outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n        outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n        outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n          colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig, '#$1'),\n        axisBreaks: chartAttrs.yaxisbreaks,\n        axisNamePadding: chartAttrs.yaxisnamepadding,\n        axisValuePadding: chartAttrs.yaxisvaluespadding,\n        axisNameFont: chartAttrs.yaxisnamefont,\n        axisNameFontSize: this.computeFontSize(chartAttrs.yaxisnamefontsize),\n        axisNameFontSizeWithUnit: chartAttrs.yaxisnamefontsize,\n        axisNameFontColor: chartAttrs.yaxisnamefontcolor,\n        axisNameFontBold: chartAttrs.yaxisnamefontbold,\n        axisNameFontItalic: chartAttrs.yaxisnamefontitalic,\n        axisNameBgColor: chartAttrs.yaxisnamebgcolor,\n        axisNameBorderColor: chartAttrs.yaxisnamebordercolor,\n        axisNameAlpha: chartAttrs.yaxisnamealpha,\n        axisNameFontAlpha: chartAttrs.yaxisnamefontalpha,\n        axisNameBgAlpha: chartAttrs.yaxisnamebgalpha,\n        axisNameBorderAlpha: chartAttrs.yaxisnameborderalpha,\n        axisNameBorderPadding: chartAttrs.yaxisnameborderpadding,\n        axisNameBorderRadius: chartAttrs.yaxisnameborderradius,\n        axisNameBorderThickness: chartAttrs.yaxisnameborderthickness,\n        axisNameBorderDashed: chartAttrs.yaxisnameborderdashed,\n        axisNameBorderDashLen: chartAttrs.yaxisnameborderdashlen,\n        axisNameBorderDashGap: chartAttrs.yaxisnameborderdashgap,\n        axisNameWidth: chartAttrs.yaxisnamewidth,\n        useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n        rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n        axisName: chartAttrs.yaxisname,\n        divLineColor: pluck(chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n        divLineAlpha: pluck(chartAttrs.divlinealpha, is3d ? colorM.getColor('divLineAlpha3D')\n          : colorM.getColor('divLineAlpha')),\n        divLineThickness: pluckNumber(chartAttrs.divlinethickness, 1),\n        divLineIsDashed: Boolean(pluckNumber(chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n        divLineDashLen: pluckNumber(chartAttrs.divlinedashlen, 4),\n        divLineDashGap: pluckNumber(chartAttrs.divlinedashgap, 2),\n        showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n        alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor('altHGridColor')),\n        alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor('altHGridAlpha')),\n        numDivLines: pluckNumber(chartAttrs.numdivlines, this.numDivLines),\n        axisMinValue: chartAttrs.yaxisminvalue,\n        axisMaxValue: chartAttrs.yaxismaxvalue,\n        setAdaptiveMin: chartAttrs.setadaptiveymin,\n        adjustDiv: chartAttrs.adjustdiv,\n        labelStep: chartAttrs.yaxisvaluesstep,\n        showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n        showLimits: pluckNumber(chartAttrs.showlimits, this.showLimits),\n        showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n        // showZeroPlane: chartAttrs.showzeroplane,\n        zeroPlaneColor: chartAttrs.zeroplanecolor,\n        zeroPlaneThickness: chartAttrs.zeroplanethickness || 2,\n        zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n        showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n        trendlineColor: chartAttrs.trendlinecolor,\n        trendlineToolText: chartAttrs.trendlinetooltext,\n        trendlineThickness: chartAttrs.trendlinethickness,\n        trendlineAlpha: chartAttrs.trendlinealpha,\n        showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n        showAxisLine: pluckNumber(chartAttrs.showyaxisline, chartAttrs.showaxislines,\n          chartAttrs.drawAxisLines, 0),\n        axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n        axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n        axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, '#000000')\n      }]\n    };\n  }\n  /**\n   * Method that resets viewport config.\n   */\n  _resetViewPortConfig () {\n    var iapi = this;\n    iapi.config.viewPortConfig = {\n      scaleX: 1,\n      scaleY: 1,\n      x: 0,\n      y: 0\n    };\n  }\n  /**\n   * Prepares the chart's axes.\n   */\n  _setCategories () {\n    var jsonData = this.getFromEnv('dataSource'),\n      xAxis = this.getChildren('xAxis')[0],\n      yAxis = this.getChildren('yAxis')[0],\n      categories = jsonData.categories,\n      dataTable = jsonData.datatable,\n      processes = jsonData.processes;\n\n    yAxis.setAxisPadding(0.5, 0.5);\n    yAxis.setProcess(processes);\n    yAxis.setDataTable(dataTable);\n    xAxis.setCategory(categories);\n  }\n\n  /**\n   * Returns the class corresponding to the type of dataset requested\n   * @param {string} dsType the type of the dataset.\n   *\n   * @return {Class} The corresponding dataset class.\n   */\n  getDSdef (dsType) {\n    switch (dsType) {\n      case 'milestone':\n        return Milestone;\n      case 'connector':\n        return Connector;\n      case 'task':\n      default:\n        return Task;\n    }\n  }\n\n  /**\n   * Creates and configures all items in the legend.\n   */\n  _createLegendItems () {\n    let iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      legend = iapi.getFromEnv('legend'),\n      length,\n      i,\n      strokeColor,\n      lightColor,\n      color,\n      fillColor,\n      itemObj,\n      config,\n      prevLen,\n      currLen,\n      legendItemId,\n      legendItems = legend.getChildren('legendItem'),\n      dataLegendItems = (dataObj.legend && dataObj.legend.item) || [];\n\n    !this.config.legendItemIds && (this.config.legendItemIds = []);\n\n    prevLen = (legendItems && legendItems.length) || 0;\n    currLen = dataLegendItems.length;\n\n    if (prevLen > currLen) {\n      for (i = currLen; i < prevLen; i++) {\n        legend.disposeItem(legendItems[i].getId());\n      }\n      legendItems && legendItems.splice(currLen, prevLen - currLen);\n    }\n\n    for (i = 0, length = dataLegendItems.length; i < length; i++) {\n      itemObj = dataLegendItems[i];\n\n      if (legend.getItem(this.config.legendItemIds[i])) {\n        legendItemId = this.config.legendItemIds[i];\n      } else {\n        legendItemId = legend.createItem();\n        this.config.legendItemIds.push(legendItemId);\n      }\n\n      color = itemObj.color;\n      strokeColor = getLightColor(color, 60).replace(dropHash, '#');\n      lightColor = getLightColor(color, 40);\n\n      fillColor = {\n        FCcolor: {\n          color: color + ',' + color + ',' + lightColor + ',' + color + ',' + color,\n          ratio: '0,70,30',\n          angle: 270,\n          alpha: '100,100,100,100,100'\n        }\n      };\n\n      config = {\n        label: itemObj.label,\n        interactiveLegend: false\n      };\n\n      legend.getItem(legendItemId).configure(config);\n      legend.getItem(legendItemId).setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor(fillColor),\n          stroke: toRaphaelColor(strokeColor)\n        }\n      });\n    }\n  }\n\n  /**\n   * Manages and assigns space to Gantt chart components\n   */\n  _spaceManager () {\n    // todo marge _allocateSpace and _spacemanager\n    let availableHeight,\n      availableWidth,\n      config = this.config,\n      xAxis = this.getChildren('xAxis')[0],\n      yAxis = this.getChildren('yAxis')[0],\n      legend = this.getChildren('legend')[0],\n      legendPosition,\n      allottedSpace,\n      ganttWidthPercent = config.ganttwidthpercent,\n      processWidthPercent = 100 - (ganttWidthPercent || 67),\n      chartBorderWidth = config.borderWidth,\n      spaceUsed,\n      processHeight,\n      totalWidth = 0,\n      totalHeight = 0;\n\n    this._resetViewPortConfig();\n    this._allocateSpace({\n      top: chartBorderWidth,\n      bottom: chartBorderWidth,\n      left: chartBorderWidth,\n      right: chartBorderWidth\n    });\n\n    this._allocateSpace(\n      (this._manageActionBarSpace && this._manageActionBarSpace(config.availableHeight * 0.225)) ||\n      {}\n    );\n    if (legend) {\n      legendPosition = legend.config.legendPos ? legend.config.legendPos.split('-') : [];\n    }\n    availableHeight = (legendPosition[0] === POSITION_BOTTOM || legendPosition[0] === POSITION_TOP) ? config.canvasHeight * 0.6\n      : config.canvasWidth * 0.6;\n\n    // a space manager that manages the space for the tools as well as the captions.\n    this._manageChartMenuBar(availableHeight);\n\n    if (legendPosition[0] === 'right' || legendPosition[0] === 'left') {\n      allottedSpace = config.canvasWidth * 0.3;\n    } else {\n      allottedSpace = config.canvasHeight * 0.3;\n    }\n\n    // Manage space for legend\n    config.showLegend && this._manageLegendSpace(allottedSpace);\n\n    config.actualCanvasTop = config.canvasTop;\n    config.actualCanvasLeft = config.canvasLeft;\n\n    //* ***** Manage space for y axis here y axis is the process column\n    availableWidth = config.canvasWidth * (processWidthPercent / 100);\n\n    spaceUsed = yAxis.placeAxis(availableWidth);\n\n    totalWidth += (spaceUsed.left || 0) + (spaceUsed.right || 0);\n\n    yAxis && this._allocateSpace(spaceUsed);\n\n    availableHeight = (legendPosition[0] === POSITION_BOTTOM || legendPosition[0] === POSITION_TOP) ? config.canvasHeight * 0.6\n      : config.canvasWidth * 0.6;\n\n    availableHeight = config.canvasHeight * 0.6;\n\n    spaceUsed = xAxis.placeAxis(availableHeight);\n\n    totalHeight += (spaceUsed.top || 0);\n\n    config.totalWidth = totalWidth;\n    config.totalHeight = totalHeight;\n\n    xAxis && this._allocateSpace(spaceUsed);\n\n    processHeight = yAxis && yAxis.setProcessHeight();\n    yAxis.setAxisConfig({\n      processTotalHeight: processHeight\n    });\n  }\n\n  /**\n   * Final space management before the chart starts drawing itself.\n   */\n  _postSpaceManagement () {\n    var iapi = this,\n      config = iapi.config,\n      xAxis = this.getChildren('xAxis')[0],\n      yAxis = this.getChildren('yAxis')[0],\n      limits = xAxis.getLimit(),\n      processTotalHeight = yAxis.getAxisConfig('processTotalHeight'),\n      canvasHeight = config.canvasHeight,\n      legend = this.getChildren('legend')[0],\n      xDepth = config.xDepth,\n      canvasConfig = this.getChildren('canvas')[0].config,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      canvasPadding = canvasConfig.canvasPadding,\n      vScrollBar = iapi.getChildren('vScrollBar') && iapi.getChildren('vScrollBar')[0],\n      conf = vScrollBar && vScrollBar.config,\n      vScrollWidth,\n      vScrollEnabled,\n      canvasPaddingLeft = canvasConfig.canvasPaddingLeft,\n      canvasPaddingRight = canvasConfig.canvasPaddingRight,\n      gPaneDuration = Number(config.ganttpaneduration),\n      gPaneDurationUnit = config.ganttpanedurationunit,\n      hProcessScrollBar = iapi.getChildren('hProcessScrollBar') && iapi.getChildren('hProcessScrollBar')[0],\n      hScrollBar = iapi.getChildren('hScrollBar') && iapi.getChildren('hScrollBar')[0],\n      hScrollBarHeight = (hScrollBar && hScrollBar.config.height) || 0,\n      hProcessScrollHeight = (hProcessScrollBar && hProcessScrollBar.config.height) || 0,\n      totalProcessWidth,\n      totalVisiblelProcessWidth,\n      hScrollEnabled,\n      hProcessScrollEnabled,\n      maxHScrollBarHeight,\n      actualCanvasHeight,\n      axisLength;\n\n    config.hScrollEnabled = hScrollEnabled = !isNaN(gPaneDuration) && gPaneDurationUnit !== UNDEF &&\n      _isOutofTimeRange(gPaneDuration, gPaneDurationUnit, limits.min, limits.max);\n    totalProcessWidth = yAxis.getAxisConfig('totalWidth');\n    totalVisiblelProcessWidth = yAxis.getAxisConfig('totalVisiblelWidth');\n    if (totalProcessWidth > totalVisiblelProcessWidth) {\n      hProcessScrollEnabled = true;\n    } else {\n      hProcessScrollEnabled = false;\n    }\n\n    maxHScrollBarHeight = Math.max(hProcessScrollEnabled ? hProcessScrollHeight : 0,\n      hScrollEnabled ? hScrollBarHeight : 0);\n    actualCanvasHeight = canvasHeight - maxHScrollBarHeight;\n\n    // Need to call manageScrollbarPosition here for knowing whether vertical scroll bar is there\n    if (processTotalHeight > actualCanvasHeight) {\n      vScrollEnabled = true;\n    }\n\n    vScrollWidth = vScrollEnabled ? conf.width || 0 : 0;\n\n    axisLength = config.canvasWidth - (xDepth || 0) - Math.max(canvasPaddingLeft, canvasPadding) -\n      Math.max(canvasPaddingRight, canvasPadding) - vScrollWidth;\n    xAxis && xAxis.setAxisDimention({\n      x: canvasConfig.canvasLeft + (xDepth || 0) + Math.max(canvasPaddingLeft, canvasPadding),\n      y: canvasConfig.canvasTop - (config.shift || 0),\n      opposite: canvasConfig.canvasTop + canvasConfig.canvasHeight + canvasBorderWidth,\n      axisLength: axisLength\n    });\n\n    config.currentCanvasWidth = axisLength;\n\n    yAxis && yAxis.setAxisDimention({\n      x: canvasConfig.canvasLeft - (config.shift || 0),\n      y: canvasConfig.canvasTop,\n      opposite: canvasConfig.canvasRight + canvasBorderWidth,\n      axisLength: config.canvasHeight\n    });\n    iapi._manageScrollbarPosition();\n    config.showLegend && legend.postSpaceManager();\n    iapi.setScrollDimensions();\n    iapi.allocateDimensionOfChartMenuBar();\n  }\n  /**\n   * Function to create scrollbar container\n   */\n  createScrollbarContainer () {\n    let iapi = this,\n      childGraphics = iapi.getChildContainer(),\n      graphics = iapi.getContainer(),\n      scrollBarParentGroup = graphics.scrollBarParentGroup,\n      animationManager = iapi.getFromEnv('animationManager');\n    if (!scrollBarParentGroup) {\n      scrollBarParentGroup = graphics.scrollBarParentGroup = animationManager.setAnimation({\n        el: 'group',\n        attr: {\n          name: 'scrollBarParentGroup'\n        },\n        container: graphics.parentgroup,\n        component: iapi\n      });\n      iapi.config.scrollbarContainer = scrollBarParentGroup;\n      scrollBarParentGroup.insertBefore(childGraphics.datalabelsGroup);\n    }\n  }\n  /**\n   * Function to draw scrollbar\n   */\n  setScrollDimensions () {\n    var iapi = this,\n      config = iapi.config,\n      components = iapi.getChildren(),\n      xAxis = components.xAxis[0],\n      axisRange = xAxis.config.axisRange,\n      viewPortConfig = config.viewPortConfig,\n      scrollOptions = config.scrollOptions || (config.scrollOptions = {}),\n      max = axisRange.max,\n      min = axisRange.min,\n      vxLength = scrollOptions.horizontalVxLength,\n      hScrollBar = iapi.getChildren('hScrollBar')[0],\n      hScrollBarConfig,\n      hScrollBarAnchor = hScrollBar.getChildren('scrollAnchor')[0],\n      hScrollBarAnchorConfig = hScrollBarAnchor.config,\n      vScrollBar = iapi.getChildren('vScrollBar')[0],\n      vScrollBarConfig,\n      hProcessScrollBar = iapi.getChildren('hProcessScrollBar')[0],\n      hProcessScrollBarConfig,\n      useVerticalScrollBar = config.useverticalscrolling,\n      scrollableLength = max - min,\n      canvasRight = config.canvasRight,\n      scaleX = viewPortConfig.scaleX,\n      scaleY = viewPortConfig.scaleY,\n      canvasLeft,\n      canvasTop,\n      canvasHeight,\n      canvasWidth,\n      canvasConfig,\n      vScrollRatio,\n      windowedCanvasHeight,\n      fullCanvasHeight,\n      vScrollEnabled = config.vScrollEnabled,\n      yAxis = components.yAxis[0],\n      windowedCanvasWidth,\n      vScrollWidth = vScrollEnabled ? vScrollBar.config.conf.width : 0,\n      fullCanvasWidth,\n      totalProcessWidth,\n      totalVisiblelProcessWidth,\n      graphics = iapi.getContainer(),\n      scrollBarParentGroup;\n\n    canvasLeft = config.canvasLeft;\n    canvasTop = config.canvasTop;\n    canvasHeight = config.canvasHeight;\n    canvasWidth = config.canvasWidth;\n    canvasConfig = components.canvas[0].config;\n    scrollOptions.viewPortMin = min;\n    scrollOptions.viewPortMax = max;\n    scrollOptions.scrollRatio = (vxLength / scrollableLength);\n    windowedCanvasWidth = scrollOptions.windowedCanvasWidth = xAxis.getPixel(vxLength);\n    fullCanvasWidth = scrollOptions.fullCanvasWidth =\n        xAxis.getPixel(max - min) - windowedCanvasWidth;\n\n    fullCanvasHeight = scrollOptions.fullCanvasHeight = yAxis.getAxisConfig('processTotalHeight');\n    windowedCanvasHeight = scrollOptions.windowedCanvasHeight = canvasHeight;\n    totalProcessWidth = yAxis.getAxisConfig('totalWidth');\n    totalVisiblelProcessWidth = yAxis.getAxisConfig('totalVisiblelWidth');\n\n    vScrollRatio = 1 / scaleY;\n    scrollBarParentGroup = graphics.scrollBarParentGroup;\n\n    // draw the scrollbar element\n    // todo padding needs to be included.\n    if (config.hScrollEnabled !== false) {\n      hScrollBarConfig = hScrollBar.config;\n      hScrollBar.setDimension({\n        x: canvasLeft,\n        y: canvasTop + canvasHeight,\n        width: canvasWidth - vScrollWidth\n      });\n      hScrollBarConfig.scrollRatio = 1 / scaleX;\n      hScrollBarConfig.scrollPosition = hScrollBarAnchorConfig.scrollPosition = (viewPortConfig.x * scaleX) / (canvasWidth * (scaleX - 1));\n      hScrollBarConfig.roundEdges = canvasConfig.isRoundEdges;\n      hScrollBarConfig.fullCanvasWidth = fullCanvasWidth;\n      hScrollBarConfig.windowedCanvasWidth = windowedCanvasWidth;\n      hScrollBarConfig.parentLayer = scrollBarParentGroup;\n    }\n\n    if (vScrollEnabled !== false && useVerticalScrollBar) {\n      vScrollBarConfig = vScrollBar.config;\n      vScrollBar.setDimension({\n        x: canvasRight - vScrollWidth,\n        y: canvasTop,\n        height: canvasHeight\n      });\n      vScrollBarConfig.scrollRatio = vScrollRatio;\n      vScrollBarConfig.roundEdges = canvasConfig.isRoundEdges;\n      vScrollBarConfig.fullCanvasWidth = fullCanvasHeight;\n      vScrollBarConfig.windowedCanvasWidth = windowedCanvasHeight;\n      vScrollBarConfig.parentLayer = scrollBarParentGroup;\n    }\n\n    if (totalVisiblelProcessWidth < totalProcessWidth && totalVisiblelProcessWidth > 0) {\n      hProcessScrollBarConfig = hProcessScrollBar.config;\n      hProcessScrollBar.setDimension({\n        x: canvasLeft - totalVisiblelProcessWidth,\n        y: canvasTop + canvasHeight,\n        width: totalVisiblelProcessWidth\n      });\n      hProcessScrollBarConfig.scrollRatio = totalVisiblelProcessWidth / totalProcessWidth;\n      hProcessScrollBarConfig.roundEdges = canvasConfig.isRoundEdges;\n      hProcessScrollBarConfig.fullCanvasWidth = fullCanvasWidth;\n      hProcessScrollBarConfig.windowedCanvasWidth = windowedCanvasWidth;\n      hProcessScrollBarConfig.parentLayer = scrollBarParentGroup;\n    }\n  }\n  /**\n   * Function to set axis scale\n   */\n  _setAxisScale () {\n    var iapi = this,\n      components = iapi.getChildren(),\n      config = iapi.config,\n      xAxis = components.xAxis[0],\n      limits = xAxis.getLimit(),\n      max = limits.max,\n      min = limits.min,\n      minDt = new Date(min),\n      yAxis = components.yAxis[0],\n      numberFormatter = iapi.getFromEnv('number-formatter'),\n      gPaneDuration = Number(config.ganttpaneduration),\n      scrollOptions = config.scrollOptions || (config.scrollOptions = {}),\n      gPaneDurationUnit = config.ganttpanedurationunit,\n      scaleX,\n      ms = max - min,\n      canvasHeight = config.canvasHeight,\n      scrollToDate = config.scrolltodate,\n      canvasWidth = config.canvasWidth,\n      datems,\n      canvasLeft = config.canvasLeft,\n      hProcessScrollBar = iapi.getChildren('hProcessScrollBar')[0],\n      hScrollBar = iapi.getChildren('hScrollBar')[0],\n      vScrollBar = iapi.getChildren('vScrollBar')[0],\n      maxHScrollBarHeight,\n      hScrollBarHeight = (hScrollBar && hScrollBar.config && hScrollBar.config.height) || 0,\n      hProcessScrollHeight = (hProcessScrollBar && hProcessScrollBar.config && hProcessScrollBar.config.height) || 0,\n      datePixel,\n      totalWidth = xAxis.getPixel(max) - canvasLeft,\n      processTotalHeight = yAxis.getAxisConfig('processTotalHeight'),\n      totalVisiblelProcessWidth,\n      totalProcessWidth,\n      actualCanvasHeight,\n      width,\n      units;\n    if (!config.hScrollEnabled) {\n      hScrollBar.remove();\n    } else {\n      switch (gPaneDurationUnit) {\n        case 'y' :\n          minDt.setFullYear(minDt.getFullYear() + gPaneDuration);\n          break;\n        case 'm' :\n          minDt.setMonth(minDt.getMonth() + gPaneDuration);\n          break;\n        case 'd' :\n          minDt.setDate(minDt.getDate() + gPaneDuration);\n          break;\n        case 'h' :\n          minDt.setHours(minDt.getHours() + gPaneDuration);\n          break;\n        case 'mn' :\n          minDt.setMinutes(minDt.getMinutes() + gPaneDuration);\n          break;\n        default :\n          minDt.setSeconds(minDt.getSeconds() + gPaneDuration);\n          break;\n      }\n      minDt = minDt.getTime();\n      width = xAxis.getPixel(minDt) - canvasLeft;\n      config.hScrollEnabled = true;\n      // update the scaleX for the axis.\n      config.viewPortConfig.scaleX = scaleX = totalWidth / width;\n      // parse the scroll properties\n      scrollOptions.horizontalVxLength = (ms / units) * gPaneDuration;\n      if (scrollToDate) {\n        datems = numberFormatter.getDateValue(scrollToDate).ms;\n        datePixel = xAxis.getPixel(datems);\n        config.viewPortConfig.x = (mathMin(datePixel - canvasLeft, canvasWidth * (scaleX - 1)) / scaleX);\n      }\n      if (config.scrollPos >= 0) {\n        config.xOffset = (config.currentCanvasWidth * (scaleX - 1) * config.scrollPos);\n        config.viewPortConfig.x = config.xOffset / scaleX;\n      }\n    }\n\n    totalProcessWidth = yAxis.getAxisConfig('totalWidth');\n    totalVisiblelProcessWidth = yAxis.getAxisConfig('totalVisiblelWidth');\n    if (totalProcessWidth > totalVisiblelProcessWidth) {\n      config.hProcessScrollEnabled = true;\n    } else {\n      config.hProcessScrollEnabled = false;\n      hProcessScrollBar.remove();\n    }\n\n    maxHScrollBarHeight = mathMax(config.hProcessScrollEnabled ? hProcessScrollHeight : 0,\n      config.hScrollEnabled ? hScrollBarHeight : 0);\n    actualCanvasHeight = canvasHeight - maxHScrollBarHeight;\n    if (Math.floor(processTotalHeight) > actualCanvasHeight && config.useverticalscrolling) {\n      config.viewPortConfig.scaleY = processTotalHeight / actualCanvasHeight;\n      config.vScrollEnabled = true;\n    } else {\n      config.vScrollEnabled = false;\n      vScrollBar.remove();\n    }\n  }\n  /**\n   * Create toolbox of gantt\n   */\n  _createToolBoxGantt () {\n    var iapi = this,\n      hScrollBar = iapi.getChildren('hScrollBar') && iapi.getChildren('hScrollBar')[0],\n      vScrollBar = iapi.getChildren('vScrollBar') && iapi.getChildren('vScrollBar')[0],\n      hProcessScrollBar = iapi.getChildren('hProcessScrollBar') && iapi.getChildren('hProcessScrollBar')[0],\n      components = iapi.getChildren(),\n      yAxis = components.yAxis[0],\n      _scrollB = iapi._scrollBar,\n      chartMenuBar = components.chartMenuBar || {},\n      actionBar = components.actionBar,\n      getScrollItems = _scrollB.get,\n      addScrollItems = _scrollB.add,\n      prevPos,\n      // Scrollbar,\n      // ComponentGroup,\n      hScrollItem,\n      hScrollItem1,\n      vScrollItem;\n      // toolBoxAPI;\n      // chartId = iapi.getFromEnv('chartInstance').id;\n\n    if (chartMenuBar.drawn || (actionBar && actionBar.drawn)) {\n      return;\n    }\n\n    // toolBoxAPI = iapi.getFromEnv('toolBoxAPI');\n    // Scrollbar = toolBoxAPI.Scrollbar;\n    // ComponentGroup = toolBoxAPI.ComponentGroup;\n    // temp code: On update scroll items needs to be reused.\n    _scrollB.clear();\n    // Adding the scroll items in the scroll bar.\n    addScrollItems({\n      isHorizontal: true,\n      scale: 1,\n      scrollPosition: 0\n    }, {\n      // Attach the callback for scroll Interaction.\n      'scroll': (function (ref, isHorizontal) {\n        return function () {\n          ref.updateManagerH(arguments[0], isHorizontal);\n        };\n      })(iapi, true),\n      'scrollStart': function (scrollPosition) {\n        prevPos = scrollPosition;\n        iapi.fireChartInstanceEvent('scrollstart', {\n          scrollPosition\n        });\n      },\n      scrollEnd: function (scrollPosition) {\n        iapi.fireChartInstanceEvent('scrollend', {\n          scrollPosition,\n          prevScrollPosition: prevPos\n        });\n      }\n    });\n\n    addScrollItems({\n      isHorizontal: false,\n      scale: 1,\n      scrollPosition: 0\n    }, {\n      // Attach the callback for scroll Interaction.\n      'scroll': (function (ref, isHorizontal) {\n        return function () {\n          ref.updateManagerV(arguments[0], isHorizontal);\n        };\n      })(iapi, false),\n      'scrollStart': function (scrollPosition) {\n        prevPos = scrollPosition;\n        iapi.fireChartInstanceEvent('scrollstart', {\n          scrollPosition\n        });\n      },\n      scrollEnd: function (scrollPosition) {\n        iapi.fireChartInstanceEvent('scrollend', {\n          scrollPosition,\n          prevScrollPosition: prevPos\n        });\n      }\n    });\n\n    addScrollItems({\n      isHorizontal: true,\n      scale: 1,\n      scrollPosition: 0\n    }, {\n      // Attach the callback for scroll Interaction.\n      'scroll': (function () {\n        return function () {\n          yAxis.manageProcessScroll(arguments[0]);\n        };\n      })(iapi, true),\n      'scrollStart': function (scrollPosition) {\n        prevPos = scrollPosition;\n        iapi.fireChartInstanceEvent('scrollstart', {\n          scrollPosition\n        });\n      },\n      scrollEnd: function (scrollPosition) {\n        iapi.fireChartInstanceEvent('scrollend', {\n          scrollPosition,\n          prevScrollPosition: prevPos\n        });\n      }\n    });\n\n    // Fetching the scroll Items.\n    hScrollItem = getScrollItems()[0];\n\n    vScrollItem = getScrollItems()[1];\n\n    hScrollItem1 = getScrollItems()[2];\n\n    // adding the scrollbar. tb.pid is the component pool id\n    if (!hScrollBar) {\n      hScrollBar = iapi.attachChild(new ScrollBar(), 'hScrollBar');\n    }\n    hScrollBar.configure(hScrollItem.conf);\n    hScrollBar.attachEventHandlers(hScrollItem.handler);\n\n    if (!vScrollBar) {\n      vScrollBar = iapi.attachChild(new ScrollBar(), 'vScrollBar');\n    }\n    vScrollBar.configure(vScrollItem.conf);\n    vScrollBar.attachEventHandlers(vScrollItem.handler);\n\n    if (!hProcessScrollBar) {\n      hProcessScrollBar = iapi.attachChild(new ScrollBar(), 'hProcessScrollBar');\n    }\n    hProcessScrollBar.configure(hScrollItem1.conf);\n    hProcessScrollBar.attachEventHandlers(hScrollItem1.handler);\n  }\n  /**\n   * Function to manage scrollbar position\n   */\n  _manageScrollbarPosition () {\n    var iapi = this,\n      config = iapi.config,\n      hScrollEnabled,\n      vScrollEnabled,\n      hScrollBar = iapi.getChildren('hScrollBar')[0],\n      vScrollBar = iapi.getChildren('vScrollBar')[0],\n      hProcessScrollBar = iapi.getChildren('hProcessScrollBar')[0],\n      totalWidth = config.totalWidth || 0,\n      totalHeight = config.totalHeight || 0,\n      scrollDimensions;\n    iapi._setAxisScale && iapi._setAxisScale();\n    hScrollBar = iapi.getChildren('hScrollBar')[0];\n    vScrollBar = iapi.getChildren('vScrollBar')[0];\n    hProcessScrollBar = iapi.getChildren('hProcessScrollBar')[0];\n    vScrollEnabled = config.vScrollEnabled;\n    hScrollEnabled = config.hScrollEnabled;\n    scrollDimensions = hScrollBar.getLogicalSpace();\n    // allocate space for toolBox and set the chart configurations.\n    // shift denotes the amount of shift required by the x-axis\n    config.hScrollHeight = hScrollEnabled === false ? 0 : scrollDimensions.height + vScrollBar.config.padding;\n    scrollDimensions = vScrollBar.getLogicalSpace();\n\n    config.vScrollWidth = vScrollEnabled !== false\n      ? scrollDimensions.width + vScrollBar.config.conf.padding : 0;\n\n    scrollDimensions = hProcessScrollBar.getLogicalSpace();\n    config.hProcessScrollHeight = config.hProcessScrollEnabled\n      ? scrollDimensions.height + hProcessScrollBar.config.padding : 0;\n\n    totalHeight += mathMax(config.hProcessScrollHeight, config.hScrollHeight);\n\n    iapi._allocateSpace({\n      bottom: mathMax(config.hProcessScrollHeight, config.hScrollHeight)\n    });\n    config.totalWidth = totalWidth;\n    config.totalHeight = totalHeight;\n  }\n  /**\n   * Function is responsible for horizontal scroll of datatable\n   * @param {number} pos scroll position\n   */\n  updateManagerH (pos /*, isHorizontal */) {\n    var iapi = this,\n      config = iapi.config,\n      lastXpos = config.lastXpos || (config.lastXpos = { x: 0, y: 0 }),\n      viewPortConfig = iapi.config.viewPortConfig,\n      animationManager = iapi.getFromEnv('animationManager'),\n      scaleX = viewPortConfig.scaleX,\n      components = iapi.getChildren(),\n      xAxis = components.xAxis[0],\n      graphics = iapi.getChildContainer(),\n      datasetLayer = graphics.plotGroup,\n      dataLabelContainer = iapi.getChildContainer('datalabelsGroup'),\n      dataLabelsLayer = graphics.datalabelsGroup,\n      trackerGroup = graphics.trackerGroup,\n      xOffset = config.xOffset || 0,\n      yOffset = config.yOffset || 0,\n      currentCanvasWidth = config.currentCanvasWidth,\n      transformAttr,\n      ganttPlotLineContainer = xAxis.getContainer('ganttPlotLineContainer');\n    config.scrollPos = pos;\n    xOffset = config.xOffset = (currentCanvasWidth * (scaleX - 1) * pos);\n    viewPortConfig.x = xOffset / scaleX;\n    xAxis.translateAxis(-xOffset, UNDEF);\n    lastXpos.x = -xOffset;\n    transformAttr = 't' + -xOffset + ', ' + -yOffset;\n    animationManager.setAnimation({\n      el: datasetLayer,\n      attr: {\n        'transform': transformAttr\n      },\n      component: iapi\n    });\n    animationManager.setAnimation({\n      el: dataLabelsLayer,\n      attr: {\n        'transform': transformAttr\n      },\n      component: iapi\n    });\n    animationManager.setAnimation({\n      el: trackerGroup,\n      attr: {\n        'transform': transformAttr\n      },\n      component: iapi\n    });\n    animationManager.setAnimation({\n      el: dataLabelContainer,\n      attr: {\n        'transform': transformAttr\n      },\n      component: iapi\n    });\n    animationManager.setAnimation({\n      el: ganttPlotLineContainer,\n      attr: {\n        'transform': 't' + -xOffset + ', ' + 0\n      },\n      component: iapi\n    });\n  }\n  /**\n   * Function is responsible for vertical scrolling of datatable\n   * @param {number} pos scroll position\n   */\n  updateManagerV (pos /*, isHorizontal */) {\n    var iapi = this,\n      config = iapi.config,\n      animationManager = iapi.getFromEnv('animationManager'),\n      xOffset = config.xOffset,\n      viewPortConfig = iapi.config.viewPortConfig,\n      components = iapi.getChildren(),\n      yAxis = components.yAxis[0],\n      yOffset = config.yOffset || 0,\n      canvasHeight = config.canvasHeight,\n      scaleY = viewPortConfig.scaleY,\n      lastTranslate,\n      dataLabelContainer = iapi.getChildContainer('datalabelsGroup'),\n      labelContainer = yAxis.getContainer('labelContainer'),\n      datatableContainer = iapi.getChildContainer('plotGroup'),\n      ganttPlotHoverBandContainer = yAxis.getContainer('ganttPlotHoverBandContainer'),\n      ganttPlotLineContainer = yAxis.getContainer('ganttPlotLineContainer');\n\n    yOffset = config.yOffset = (canvasHeight * (scaleY - 1) * pos);\n    viewPortConfig.y = yOffset / scaleY;\n    lastTranslate = yAxis.config.lastTranslate || (yAxis.config.lastTranslate = { x: 0, y: 0 });\n\n    animationManager.setAnimation({\n      el: labelContainer,\n      attr: {\n        'transform': 't' + lastTranslate.x + ', ' + -yOffset\n      },\n      component: iapi\n    });\n    animationManager.setAnimation({\n      el: ganttPlotHoverBandContainer,\n      attr: {\n        'transform': 't' + 0 + ', ' + -yOffset\n      },\n      component: iapi\n    });\n    animationManager.setAnimation({\n      el: datatableContainer,\n      attr: {\n        'transform': 't' + -xOffset + ', ' + -yOffset\n      },\n      component: iapi\n    });\n    animationManager.setAnimation({\n      el: dataLabelContainer,\n      attr: {\n        'transform': 't' + -xOffset + ', ' + -yOffset\n      },\n      component: iapi\n    });\n    animationManager.setAnimation({\n      el: ganttPlotLineContainer,\n      attr: {\n        'transform': 't' + 0 + ', ' + -yOffset\n      },\n      component: iapi\n    });\n  }\n}\n\nexport default Gantt;\n","import CanvasGantt from '../_internal/canvas-gantt';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n\nexport default function (chart) {\n  let canvas;\n  componentFactory(chart, CanvasGantt, 'canvas', 1);\n  canvas = chart.getChildren('canvas');\n  for (let i = 0, len = canvas.length; i < len; i++) {\n    canvas[i].configure();\n  }\n}\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Canvas from '@fusioncharts/charts/src/_internal/components/canvases/canvas';\nimport { pluckNumber, pluck, setLineHeight, toRaphaelColor } from '@fusioncharts/core/src/lib';\n\nconst MAX_MITER_LINEJOIN = 2;\n\n/**\n * An extension of the regular chart canvas which defines Gantt specific groups and configures some\n * gantt specific attributes.\n */\nclass CanvasGantt extends Canvas {\n  /**\n   * Creates groups for Gantt datasets.\n   */\n  createGroup () {\n    super.createGroup();\n\n    let chart = this.getFromEnv('chart'),\n      chartConfig = chart.config,\n      inCanStyle = chartConfig.style.inCanvasStyle,\n      animationManager = this.getFromEnv('animationManager'),\n      canvas = this,\n      plotGroup = chart.getChildContainer('plotGroup'),\n      labelStyle;\n\n    !this.getChildContainer('taskGroup') &&\n      this.addChildContainer('taskGroup', animationManager.setAnimation({\n        el: 'group',\n        attr: {\n          name: 'task'\n        },\n        container: plotGroup,\n        component: canvas\n      }));\n\n    !this.getChildContainer('connectorGroup') &&\n      this.addChildContainer('connectorGroup', animationManager.setAnimation({\n        el: 'group',\n        attr: {\n          name: 'connector'\n        },\n        container: plotGroup,\n        component: canvas\n      }));\n\n    !this.getChildContainer('milestoneGroup') &&\n      this.addChildContainer('milestoneGroup', animationManager.setAnimation({\n        el: 'group',\n        attr: {\n          name: 'milestone'\n        },\n        container: plotGroup,\n        component: canvas\n      }));\n\n    labelStyle = chartConfig.milestoneLabelStyle = {\n      fontSize: pluckNumber(chartConfig.milestonefontsize,\n        this.computeFontSize(inCanStyle.fontSizeWithUnit)) + 'px',\n      fontFamily: pluck(chartConfig.milestonefont,\n        inCanStyle.fontFamily),\n      fontWeight: (pluckNumber(chartConfig.milestonefontbold, 0) && 'bold') || 'normal',\n      fontStyle: (pluckNumber(chartConfig.milestonefontitalic, 0) && 'italic') || 'normal'\n    };\n\n    setLineHeight(labelStyle);\n\n    this.getChildContainer('milestoneGroup').css(labelStyle);\n  }\n  /**\n   * Draws the canvas and sets clipping\n   */\n  draw () {\n    super.draw();\n    this.setClipping();\n  }\n  /**\n   * Sets the clipping in the datasets, tracker and datalabels\n   */\n  setClipping () {\n    var chart = this.getFromEnv('chart'),\n      config = chart.config,\n      taskGroup = this.getChildContainer('taskGroup'),\n      connectorGroup = this.getChildContainer('connectorGroup'),\n      childContainer = chart.getChildContainer(),\n      datasetLayer = childContainer.plotGroup,\n      dataLabelsLayer = childContainer.datalabelsGroup,\n      trackerLayer = childContainer.trackerGroup,\n      viewPortConfig = config.viewPortConfig,\n      scaleX = viewPortConfig.scaleX,\n      xOffset,\n      x = viewPortConfig.x,\n      animationManager = this.getFromEnv('animationManager'),\n      clipCanvas = chart.getChildren('canvas')[0].config.clip['clip-canvas'].slice(0);\n\n    animationManager.setAnimation({\n      el: datasetLayer,\n      attr: {\n        'clip-rect': clipCanvas\n      },\n      state: !chart.config.clipSet ? 'appearing' : 'updating',\n      component: this\n    });\n    animationManager.setAnimation({\n      el: dataLabelsLayer,\n      attr: {\n        'clip-rect': clipCanvas\n      },\n      state: !chart.config.clipSet ? 'appearing' : 'updating',\n      component: this\n    });\n    animationManager.setAnimation({\n      el: trackerLayer,\n      attr: {\n        'clip-rect': clipCanvas\n      },\n      state: !chart.config.clipSet ? 'appearing' : 'updating',\n      component: this\n    });\n\n    config.xOffset = xOffset = (x * scaleX);\n\n    animationManager.setAnimation({\n      el: datasetLayer,\n      attr: {\n        transform: 'T' + -xOffset + ',0'\n      },\n      component: this\n    });\n    animationManager.setAnimation({\n      el: taskGroup,\n      attr: {\n        transform: 'T' + -xOffset + ',0'\n      },\n      component: this\n    });\n    animationManager.setAnimation({\n      el: connectorGroup,\n      attr: {\n        transform: 'T' + -xOffset + ',0'\n      },\n      component: this\n    });\n    animationManager.setAnimation({\n      el: dataLabelsLayer,\n      attr: {\n        transform: 'T' + -xOffset + ',0'\n      },\n      component: this\n    });\n    animationManager.setAnimation({\n      el: trackerLayer,\n      attr: {\n        transform: 'T' + -xOffset + ',0'\n      },\n      component: this\n    });\n    chart.config.clipSet = true;\n  }\n  /**\n   * Draws the canvas\n   */\n  drawCanvas () {\n    let canvas = this,\n      iapi = canvas.getFromEnv('chart'),\n      jsonData = iapi.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      chartConfig = iapi.config,\n      animationManager = canvas.getFromEnv('animationManager'),\n      config = canvas.config,\n      clip = config.clip = { },\n      canvasBorderElementDummy = canvas.getGraphicalElement('canvasBorderElement'),\n      canvasBorderElement,\n      // animationObj = iapi.config.animationObj,\n      // animationDuration = animationObj.duration,\n      // dummyAnimElem = animationObj.dummyObj,\n      // dummyAnimObj = animationObj.animObj,\n      // animType = animationObj.animType,\n      canvasElementDummy = canvas.getGraphicalElement('canvasElement'),\n      canvasElement,\n      canvasLeft = chartConfig.actualCanvasLeft,\n      canvasTop = chartConfig.actualCanvasTop,\n      actualCanvasWidth = chartConfig.canvasWidth,\n      actualCanvasHeight = chartConfig.canvasHeight,\n      actualCanvasLeft = chartConfig.canvasLeft,\n      actualCanvasTop = chartConfig.canvasTop,\n      canvasWidth = chartConfig.canvasWidth + chartConfig.totalWidth,\n      canvasHeight = chartConfig.canvasHeight + chartConfig.totalHeight,\n      canvasGroup = canvas.getContainer('canvasGroup'),\n      canvasBorderRadius = config.canvasBorderRadius,\n      canvasBorderWidth = config.canvasBorderWidth,\n      borderWHlf = canvasBorderWidth * 0.5,\n      canvasBorderColor = config.canvasBorderColor,\n      canBGColor = config.canBGColor,\n      shadow = config.shadow,\n      canvasBgColor,\n      attr,\n      showCanvasBg = config.showCanvasBG = Boolean(pluckNumber(chartAttrs.showcanvasbg, 1)),\n      shadowOnCanvasFill = config.shadowOnCanvasFill,\n      showCanvasBorder = config.showCanvasBorder;\n\n    canvasBgColor = canBGColor;\n    attr = {\n      x: canvasLeft - borderWHlf,\n      y: canvasTop - borderWHlf,\n      width: canvasWidth + canvasBorderWidth,\n      height: canvasHeight + canvasBorderWidth,\n      r: canvasBorderRadius,\n      'stroke-width': canvasBorderWidth,\n      stroke: canvasBorderColor,\n      'stroke-linejoin': canvasBorderWidth > MAX_MITER_LINEJOIN ? 'round' : 'miter'\n    };\n\n    if (showCanvasBorder) {\n      canvasBorderElement = animationManager.setAnimation({\n        el: canvasBorderElementDummy || 'rect',\n        attr: attr,\n        container: canvasGroup,\n        component: canvas\n      });\n      if (!canvasBorderElementDummy) {\n        canvasBorderElement = canvas.addGraphicalElement('canvasBorderElement',\n          canvasBorderElement);\n      } else {\n        canvasBorderElement.show();\n      }\n      canvasBorderElement.shadow(shadow);\n    } else {\n      canvasBorderElementDummy && canvasBorderElementDummy.hide();\n    }\n\n    // create a clip-rect to clip canvas for later use\n    clip['clip-canvas'] = [\n      Math.max(0, actualCanvasLeft),\n      Math.max(0, actualCanvasTop),\n      Math.max(1, actualCanvasWidth),\n      Math.max(1, actualCanvasHeight)\n    ];\n    clip['clip-canvas-init'] = [\n      Math.max(0, actualCanvasLeft),\n      Math.max(0, actualCanvasTop),\n      1,\n      Math.max(1, actualCanvasHeight)\n    ];\n\n    if (showCanvasBg) {\n      attr = {\n        x: canvasLeft,\n        y: canvasTop,\n        width: canvasWidth,\n        height: canvasHeight,\n        r: canvasBorderRadius,\n        'stroke-width': 0,\n        'stroke': 'none',\n        fill: toRaphaelColor(canvasBgColor)\n      };\n\n      canvasElement = animationManager.setAnimation({\n        el: canvasElementDummy || 'rect',\n        attr: attr,\n        component: canvas,\n        container: canvasGroup\n      });\n      if (!canvasElementDummy) {\n        canvasElement = canvas.addGraphicalElement(\n          'canvasElement', canvasElement);\n      } else {\n        canvasElement.show();\n      }\n      canvasElement.shadow(shadowOnCanvasFill);\n    } else {\n      canvasElementDummy && canvasElementDummy.hide();\n    }\n  }\n}\n\nexport default CanvasGantt;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport ProcessAxis from '@fusioncharts/core/src/axis/gantt-process';\nimport TimeAxis from '@fusioncharts/core/src/axis/gantt-time';\n\n/**\n * Function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    zoomObj = {\n      zoomable: true,\n      pannable: true\n    },\n    config = chart._feedAxesRawData(),\n    yAxis,\n    xAxis;\n\n  componentFactory(chart, TimeAxis, 'xAxis', 1, config.xAxisConf);\n  componentFactory(chart, ProcessAxis, 'yAxis', 1, config.yAxisConf);\n\n  yAxis = chart.getChildren('yAxis')[0];\n  xAxis = chart.getChildren('xAxis')[0];\n\n  yAxis.setLinkedItem('canvas', canvas);\n  xAxis.setLinkedItem('canvas', canvas);\n\n  canvas.attachAxis(xAxis, false, chart.zoomX ? zoomObj : {});\n  canvas.attachAxis(yAxis, true, chart.zoomY ? zoomObj : {});\n\n  chart._setCategories();\n}\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }], complexity: 'off' */\nimport GanttCommonAxis, { extractAttribToEnd } from './gantt-common';\nimport { pluck, pluckNumber, getDashStyle, extend2, parseUnsafeString, setLineHeight,\n  convertColor, toPrecision, hasSVG, TRACKER_FILL } from '../lib';\n\nlet UNDEF;\n\nconst DEFAULT_DASH_STYLE = 'none',\n  PXSTRING = 'px',\n  TRANSFORM = 't0,0',\n  DEFAULT_HOVER_ALPHA = 30;\n\n/**\n * Defines an axis which can position a Gantt chart's proceses.\n */\nclass GanttProcessAxis extends GanttCommonAxis {\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'GanttProcess';\n  }\n\n  /**\n   * Configures the process axis of a Gantt chart\n   *\n   * @param {any} rawAttr The raw attributes using which axis will configure itself\n   */\n  configure (rawAttr) {\n    let axisConfig = this.config,\n      colorM = this.getFromEnv('color-manager'),\n      jsonData = this.getFromEnv('dataSource'),\n      chartData = jsonData.chart;\n\n    super.configure(rawAttr);\n\n    axisConfig.lineColor = convertColor(pluck(chartData.gridbordercolor,\n      colorM.getColor('gridColor')), pluckNumber(chartData.gridborderalpha, 100));\n    axisConfig.lineThickness = pluckNumber(chartData.gridborderthickness, 1);\n    axisConfig.lineDashStyle = pluckNumber(chartData.gridborderdashed, 0)\n      ? getDashStyle(pluckNumber(chartData.gridborderdashlen, 1),\n        chartData.gridborderdashgap, axisConfig.lineThickness) : DEFAULT_DASH_STYLE;\n\n    axisConfig.plotLineColor = convertColor(pluck(chartData.ganttlinecolor,\n      colorM.getColor('gridColor')), pluckNumber(chartData.ganttlinealpha, 100));\n    axisConfig.plotLineThickness = pluckNumber(chartData.ganttlinethickness, 1);\n    axisConfig.plotLineDashStyle = pluckNumber(chartData.ganttlinedashed, 0)\n      ? getDashStyle(pluckNumber(chartData.ganttlinedashlen, 1),\n        chartData.ganttlinedashgap, axisConfig.lineThickness) : DEFAULT_DASH_STYLE;\n\n    axisConfig.gridResizeBarColor = convertColor(pluck(chartData.gridresizebarcolor,\n      colorM.getColor('gridResizeBarColor')), pluckNumber(chartData.gridresizebaralpha, 100));\n    axisConfig.gridResizeBarThickness = pluckNumber(chartData.gridresizebarthickness, 1);\n    axisConfig.forceRowHeight = pluckNumber(chartData.forcerowheight, 0);\n    axisConfig.rowHeight = pluckNumber(chartData.rowheight, 0);\n\n    axisConfig.hoverColor = pluck(chartData.processhoverbandcolor, chartData.hoverbandcolor,\n      colorM.getColor('gridColor'));\n    axisConfig.hoverAlpha = pluckNumber(\n      chartData.processhoverbandalpha,\n      chartData.hoverbandalpha,\n      DEFAULT_HOVER_ALPHA\n    );\n    axisConfig.useHover = pluckNumber(chartData.showprocesshoverband, chartData.showhoverband,\n      chartData.showhovereffect, 1);\n    axisConfig.usePlotHover = pluckNumber(chartData.showganttpanehorizontalhoverband);\n    axisConfig.showFullDataTable = pluckNumber(chartData.showfulldatatable, 1);\n    axisConfig.forceGanttWidthPercent = pluckNumber(chartData.forceganttwidthpercent, 0);\n\n    axisConfig.useVerticalScrolling = pluckNumber(chartData.useverticalscrolling, 1);\n\n    axisConfig.gridLineHeaderPath = '';\n    axisConfig.gridLinePath = '';\n  }\n\n  /**\n   * Informs the axis of all its processes and sets its range accordingly\n   *\n   * @param {Array} processes An array of Gantt chart processes\n   */\n  setProcess (processes) {\n    let axis = this,\n      axisConfig = axis.config,\n      startPad = axisConfig.startPad || 0,\n      endPad = axisConfig.endPad || 0,\n      processesLen,\n      processesFinal,\n      index,\n      ProcessIndex,\n      processMap;\n\n    // Initialize the category object\n    axisConfig.processes = {};\n    if (processes) {\n      // Indicate that the axis has processes on it\n      axisConfig.hasProcess = 1;\n    } else {\n      axisConfig.hasProcess = 0;\n      return;\n    }\n\n    // this will store only the category not the vline\n    processesFinal = axisConfig.processes.process = extend2({}, processes);\n    extractAttribToEnd(processesFinal, {});\n\n    processesLen = processesFinal.process.length;\n    processMap = axisConfig.processes.processMap = {};\n    axisConfig.processes.processHeightMap = {};\n    // Storing Process mapping\n    for (index = 0; index < processesLen; index += 1) {\n      ProcessIndex = processesFinal.process[index];\n      if (ProcessIndex.id) {\n        processMap[ProcessIndex.id.toLowerCase()] = {\n          catObj: ProcessIndex,\n          index: index\n        };\n      }\n    }\n\n    axis.setAxisRange({\n      min: Number(toPrecision(-startPad, 10)),\n      max: Number(toPrecision(processesLen - 1 + endPad, 10)),\n      tickInterval: Number(toPrecision(1, 10))\n    });\n  }\n\n  /**\n   * Finds the process at the given index\n   *\n   * @param {number} idx The index at which the process is required\n   * @return {Object} The process found at the given index\n   */\n  getProcessPositionByIndex (idx) {\n    let axis = this,\n      axisConfig = axis.config,\n      processHeightMap = axisConfig.processes.processHeightMap;\n\n    if (processHeightMap[idx]) {\n      return processHeightMap[idx];\n    }\n    return false;\n  }\n\n  /**\n   * Finds the process with the given id\n   *\n   * @param {number} processId The id of the process requested\n   * @return {Object} The process found with the given id\n   */\n  getProcessPositionById (processId) {\n    let axis = this,\n      axisConfig = axis.config,\n      process = axisConfig.processes && axisConfig.processes.processMap[processId],\n      processHeightMap = axisConfig.processes.processHeightMap;\n\n    if (process) {\n      return processHeightMap[process.index];\n    }\n    return false;\n  }\n\n  /**\n   * Informs the axis of any data tables it needs to draw\n   *\n   * @param {Array} _dataTables The suer given data tables\n   */\n  setDataTable (_dataTables) {\n    var axis = this,\n      dataTables = _dataTables,\n      axisConfig = axis.config;\n\n    // Initialize the category object\n    axisConfig.dataTables = {};\n    axisConfig.dataTables.dataTable = {};\n\n    if (dataTables) {\n      // Set the category flag to true\n      axisConfig.hasDataTables = 1;\n    } else {\n      axisConfig.hasDataTables = 0;\n      return;\n    }\n\n    // this will store only the category not the vline\n    extend2(axisConfig.dataTables.dataTable, dataTables);\n    dataTables = axisConfig.dataTables.dataTable;\n\n    // Set the final style property for each text inherating from its parent\n    extractAttribToEnd(dataTables, {});\n  }\n\n  /**\n   * Sets the height of the processes\n   *\n   * @return {number} The calculated process height\n   */\n  setProcessHeight () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      canvasHeight = chartConfig.canvasHeight,\n      process = axisConfig.processes.process.process,\n      processHeightMap = axisConfig.processes.processHeightMap,\n      processHeight = axisConfig.processMaxHeight,\n      height = 0,\n      forceRowHeight = axisConfig.forceRowHeight,\n      rowHeight = axisConfig.rowHeight,\n      processHeightFinal,\n      processLength,\n      i;\n\n    if ((processHeight * process.length) < canvasHeight || axisConfig.useVerticalScrolling === 0) {\n      processHeight = canvasHeight / process.length;\n    }\n\n    if (forceRowHeight === 0) {\n      if (rowHeight && rowHeight > processHeight) {\n        processHeight = rowHeight;\n      }\n    } else {\n      processHeight = rowHeight || processHeight;\n    }\n\n    for (i = 0, processLength = process.length; i < processLength; i++) {\n      processHeightFinal = pluckNumber(process[i].height, processHeight);\n      processHeightMap[i] = {\n        top: height,\n        bottom: height + processHeightFinal,\n        height: processHeightFinal\n      };\n      height += processHeightFinal;\n    }\n\n    return height;\n  }\n\n  /**\n   * Adjusts the axis' width\n   */\n  adjustWidth () {\n    var axis = this,\n      axisConfig = axis.config,\n      totalWidth = axisConfig.totalWidth,\n      availableWidth = totalWidth,\n      spaceUsed = 0,\n      processOnRight = false,\n      dragPadding = 20,\n      processVlineArr,\n      attrib,\n      getWidth,\n      processParent,\n      newLeft,\n      dataTables,\n      dataTable,\n      process,\n      i,\n      prevProcessVlineArr;\n\n    processVlineArr = axisConfig.processVlineArr = [];\n\n    availableWidth -= dragPadding * (axisConfig.hasDataTables && axisConfig.dataTables &&\n    axisConfig.dataTables.dataTable && axisConfig.dataTables.dataTable.datacolumn\n      ? axisConfig.dataTables.dataTable.datacolumn.length + 1 : 1);\n\n    getWidth = function (width) {\n      var retW;\n\n      availableWidth += dragPadding;\n      if (width.match(/%/g)) {\n        retW = pluckNumber(((totalWidth * Number(width.replace(/%/g, '') / 100))), 0);\n      } else {\n        retW = pluckNumber(width, 0);\n      }\n      if (availableWidth < dragPadding) {\n        retW = dragPadding;\n      } else if (retW > availableWidth) {\n        retW = availableWidth;\n      }\n      availableWidth -= retW;\n      return retW;\n    };\n\n    if (axisConfig.hasProcess) {\n      process = axisConfig.processes.process.process;\n      processParent = axisConfig.processes.process;\n      if (processParent.positioningrid === 'right') {\n        processOnRight = true;\n      }\n      attrib = process._attrib;\n      newLeft = spaceUsed;\n      spaceUsed += (getWidth(attrib.width || '' + (attrib.rightPos - attrib.leftPos)));\n      attrib.leftPos = newLeft;\n      attrib.rightPos = spaceUsed;\n\n      if (!processOnRight) {\n        processVlineArr.push({\n          type: 'process',\n          ind: 0,\n          xPos: attrib.rightPos,\n          left: attrib,\n          leftLimit: attrib.leftPos + dragPadding\n        });\n      } else {\n        spaceUsed = 0;\n      }\n    }\n\n    if (axisConfig.hasDataTables) {\n      dataTables = axisConfig.dataTables.dataTable.datacolumn;\n      for (i in dataTables) {\n        if (!dataTables.hasOwnProperty(i) || i === '_attrib') {\n          continue;\n        }\n        dataTable = dataTables[i];\n        attrib = dataTable._attrib;\n        newLeft = spaceUsed;\n        spaceUsed += (getWidth(attrib.width || '' + (attrib.rightPos - attrib.leftPos)));\n        attrib.leftPos = newLeft;\n        attrib.rightPos = spaceUsed;\n        prevProcessVlineArr = processVlineArr[processVlineArr.length - 1];\n        if (prevProcessVlineArr) {\n          prevProcessVlineArr.right = attrib;\n          prevProcessVlineArr.rightLimit = attrib.rightPos - dragPadding;\n        }\n        processVlineArr.push({\n          type: 'dataTable',\n          ind: i,\n          xPos: attrib.rightPos,\n          left: attrib,\n          leftLimit: attrib.leftPos + dragPadding\n        });\n      }\n    }\n\n    if (axisConfig.hasProcess) {\n      if (processOnRight) {\n        attrib = process._attrib;\n        attrib.rightPos = spaceUsed + (attrib.rightPos - attrib.leftPos);\n        attrib.leftPos = spaceUsed;\n        spaceUsed += attrib.rightPos - attrib.leftPos;\n        prevProcessVlineArr = processVlineArr[processVlineArr.length - 1];\n        if (prevProcessVlineArr) {\n          prevProcessVlineArr.right = attrib;\n          prevProcessVlineArr.rightLimit = attrib.rightPos - dragPadding;\n        }\n      } else {\n        processVlineArr.pop();\n      }\n    }\n    axisConfig.totalWidth = spaceUsed;\n  }\n\n  /**\n   * Allocates space for all elements in the axis.\n   *\n   * @param {number} maxWidth The maximum width within which the axis must position all its elements\n   * @return {number} The space taken by the axis after placement\n   */\n  placeAxis (maxWidth) {\n    let axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      smartLabel = chart.getFromEnv('smartLabel'),\n      labelStyle = axisConfig.labels.style,\n      nameStyle = axisConfig.name.style,\n      trendStyle = axisConfig.trend.trendStyle,\n      hPadding = 4,\n      processHeightPadding = 8,\n      maxProcessDimention = 0,\n      maxTextSize = 0,\n      spaceReturn = {\n        left: 0,\n        right: 0\n      },\n      spaceUsed = 0,\n      processOnRight = false,\n      processSpaceUsed = 0,\n      processMaxHeight = 0,\n      i,\n      text,\n      smartLabelText,\n      processLength,\n      singleProcess,\n      processStyle,\n      processParent,\n      singleProcessStyle,\n      dataTables,\n      dataTable,\n      dataColumn,\n      process,\n      j,\n      textStyle,\n      singleTextStyle,\n      maxTextDimention,\n      preAlocateSpace = 0;\n\n    // Re-calculating line heights for when chart is resized\n    // Axis name line height\n    nameStyle.fontSize = this.computeFontSize(nameStyle.fontSizeWithUnit);\n    nameStyle.lineHeight = setLineHeight(nameStyle);\n\n    // Trend line label line height\n    trendStyle.fontSize = this.computeFontSize(trendStyle.fontSizeWithUnit);\n    trendStyle.lineHeight = setLineHeight(trendStyle);\n\n    // Axis label line height\n    labelStyle.fontSize = this.computeFontSize(labelStyle.fontSizeWithUnit);\n    labelStyle.lineHeight = setLineHeight(labelStyle);\n\n    smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n    smartLabel.setStyle({\n      fontSize: labelStyle.fontSize,\n      fontFamily: labelStyle.fontFamily,\n      lineHeight: labelStyle.lineHeight,\n      fontWeight: labelStyle.fontWeight\n    });\n\n    if (axisConfig.forceGanttWidthPercent || axisConfig.showFullDataTable === 0) {\n      preAlocateSpace = maxWidth / ((axisConfig.hasDataTables && axisConfig.dataTables &&\n        axisConfig.dataTables.dataTable && axisConfig.dataTables.dataTable.datacolumn\n        ? axisConfig.dataTables.dataTable.datacolumn.length\n        : 0) + 1);\n    }\n\n    if (axisConfig.hasProcess) {\n      process = axisConfig.processes.process.process;\n      processParent = axisConfig.processes.process;\n      if (processParent.positioningrid === 'right') {\n        processOnRight = true;\n      }\n\n      if (processParent.headertext) {\n        processParent.drawLabel = parseUnsafeString(processParent.headertext);\n        processStyle = processParent._attrib;\n        singleProcessStyle = {\n          fontFamily: pluck(processStyle.headerfontfamily, labelStyle.fontFamily),\n          fontSize: pluck(processStyle.headerfontsize, this.computeFontSize(\n            labelStyle.fontSizeWithUnit).toString()).replace(/px/i, '') + PXSTRING,\n          fontWeight: pluck((Number(processStyle.headerisbold) === 1 ? 'bold'\n            : typeof processStyle.headerisbold === 'undefined' ? 'bold' : UNDEF), labelStyle.fontWeight),\n          fontStyle: pluck((processStyle.headerisitalic ? 'italic' : UNDEF), labelStyle.fontStyle)\n        };\n        singleProcessStyle.lineHeight = setLineHeight(singleProcessStyle);\n        smartLabel.setStyle(singleProcessStyle);\n        smartLabelText = smartLabel.getOriSize(processParent.drawLabel);\n\n        if (smartLabelText.width > maxTextSize) {\n          maxProcessDimention = smartLabelText;\n          maxTextSize = smartLabelText.width;\n        }\n      }\n      for (i = 0, processLength = process.length; i < processLength; i++) {\n        singleProcess = process[i];\n        processStyle = singleProcess._attrib;\n        singleProcess.drawLabel = parseUnsafeString(singleProcess.label || singleProcess.name);\n        singleProcessStyle = {\n          fontFamily: pluck(processStyle.fontfamily, labelStyle.fontFamily),\n          fontSize: pluck(processStyle.fontsize, this.computeFontSize(\n            labelStyle.fontSizeWithUnit).toString()).replace(/px/i, '') + PXSTRING,\n          fontWeight: pluck((processStyle.isbold ? 'bold' : UNDEF), labelStyle.fontWeight),\n          fontStyle: pluck((processStyle.isitalic ? 'italic' : UNDEF), labelStyle.fontStyle)\n        };\n        singleProcessStyle.lineHeight = setLineHeight(singleProcessStyle);\n        smartLabel.setStyle(singleProcessStyle);\n        smartLabelText = smartLabel.getOriSize(singleProcess.drawLabel);\n\n        if (smartLabelText.width > maxTextSize) {\n          maxProcessDimention = smartLabelText;\n          maxTextSize = smartLabelText.width;\n        }\n        if (smartLabelText.height > processMaxHeight) {\n          processMaxHeight = smartLabelText.height;\n        }\n      }\n      axisConfig.processMaxHeight = processMaxHeight + processHeightPadding;\n      // axisConfig.processTotalHeight = axis._setProcessHeight(processMaxHeight);\n      process._attrib.leftPos = spaceUsed;\n      if (!processOnRight) {\n        spaceUsed += preAlocateSpace || maxProcessDimention.width + hPadding;\n      } else {\n        processSpaceUsed = preAlocateSpace || maxProcessDimention.width + hPadding;\n      }\n      process._attrib.rightPos = spaceUsed;\n    }\n    if (axisConfig.hasDataTables) {\n      dataTables = axisConfig.dataTables.dataTable.datacolumn;\n      for (i in dataTables) {\n        if (!dataTables.hasOwnProperty(i) || i === '_attrib') {\n          continue;\n        }\n        dataTable = dataTables[i];\n        maxTextSize = 0;\n        if (dataTable.headertext) {\n          processStyle = dataTable._attrib;\n          dataTable.drawLabel = parseUnsafeString(dataTable.headertext);\n          singleTextStyle = {\n            fontFamily: pluck(processStyle.headerfontfamily, labelStyle.fontFamily),\n            fontSize: pluck(processStyle.headerfontsize, this.computeFontSize(\n              labelStyle.fontSizeWithUnit).toString()).replace(/px/i, '') + PXSTRING,\n            fontWeight: pluck((\n              Number(processStyle.headerisbold) === 1\n                ? 'bold'\n                : typeof processStyle.headerisbold === 'undefined'\n                  ? 'bold'\n                  : UNDEF\n            ), labelStyle.fontWeight),\n            fontStyle: pluck((processStyle.headerisitalic ? 'italic' : UNDEF), labelStyle.fontStyle)\n          };\n          singleTextStyle.lineHeight = setLineHeight(singleTextStyle);\n          smartLabel.setStyle(singleTextStyle);\n          smartLabelText = smartLabel.getOriSize(dataTable.drawLabel);\n\n          if (smartLabelText.width > maxTextSize) {\n            maxTextDimention = smartLabelText;\n            maxTextSize = smartLabelText.width;\n          }\n        }\n        dataColumn = dataTable.text;\n        for (j in dataColumn) {\n          if (!dataColumn.hasOwnProperty(j) || j === '_attrib') {\n            continue;\n          }\n          text = dataColumn[j];\n          text.drawLabel = parseUnsafeString(text.label || text.name);\n          textStyle = text._attrib;\n          singleTextStyle = {\n            fontFamily: pluck(textStyle.fontfamily, labelStyle.fontFamily),\n            fontSize: pluck(textStyle.fontsize, this.computeFontSize(\n              labelStyle.fontSizeWithUnit).toString()).replace(/px/i, '') + PXSTRING,\n            fontWeight: pluck((textStyle.isbold ? 'bold' : UNDEF), labelStyle.fontWeight),\n            fontStyle: pluck((textStyle.isitalic ? 'italic' : UNDEF), labelStyle.fontStyle)\n          };\n          singleTextStyle.lineHeight = setLineHeight(singleTextStyle);\n          smartLabel.setStyle(singleTextStyle);\n          smartLabelText = smartLabel.getOriSize(text.drawLabel);\n\n          if (smartLabelText.width > maxTextSize) {\n            maxTextDimention = smartLabelText;\n            maxTextSize = smartLabelText.width;\n          }\n        }\n        dataTables[i]._attrib.leftPos = spaceUsed;\n        spaceUsed += preAlocateSpace || maxTextDimention.width + hPadding;\n        dataTables[i]._attrib.rightPos = spaceUsed;\n      }\n    }\n    if (axisConfig.hasProcess) {\n      if (processOnRight) {\n        process._attrib.leftPos += spaceUsed;\n        process._attrib.rightPos += spaceUsed + processSpaceUsed;\n        spaceUsed += processSpaceUsed;\n      }\n    }\n    axisConfig.totalWidth = spaceUsed;\n    axis.adjustWidth();\n    spaceUsed = axisConfig.totalWidth > maxWidth ? maxWidth : axisConfig.totalWidth;\n    axisConfig.totalVisiblelWidth = spaceUsed;\n    spaceReturn.left += spaceUsed;\n    return spaceReturn;\n  }\n\n  /**\n   * Returns the length of the processes represented by the process axis\n   *\n   * @return {number} The number of processes represented by the process axis\n   */\n  getProcessLen () {\n    return this.config.processes.process.process.length;\n  }\n\n  /**\n   * Draws the processes and the data tables of the Gantt chart.\n   */\n  _drawProcessAndDataTable () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      axisDimention = axisConfig.axisDimention || {},\n      axisStartPosition = axisDimention.x,\n      spaceTaken = axisConfig.totalWidth || 0,\n      gridArr = axisConfig.gridArr || (axisConfig.gridArr = []),\n      canvas = chart.getChildren('canvas')[0],\n      chartConfig = chart.config,\n      animationManager = chart.getFromEnv('animationManager'),\n      canvasTop = canvas.canvasTop || chartConfig.canvasTop,\n      canvasLeft = canvas.canvasLeft || chartConfig.canvasLeft,\n      canvasHeight = canvas.canvasHeight || chartConfig.canvasHeight,\n      canvasWidth = canvas.canvasWidth || chartConfig.canvasWidth,\n      axisBottomGroup = chart.getChildContainer('axisBottomGroup'),\n      totalVisiblelWidth = axisConfig.totalVisiblelWidth,\n      i,\n      process,\n      processLength,\n      dataTables,\n      dataColumn,\n      elemIndex = 0,\n      dataTableCounter = 0,\n      j,\n      args,\n      topBottom,\n      translateX,\n      labelContainerAttr,\n      headerContainerAttr,\n      ganttPlotHoverBandContainerParent,\n      ganttPlotHoverBandContainer = axis.getContainer('ganttPlotHoverBandContainer'),\n      ganttPlotLineContainer = axis.getContainer('ganttPlotLineContainer'),\n      headerContainer = axis.getContainer('headerContainer'),\n      headerBackContainer = axis.getContainer('headerBackContainer'),\n      headerLineContainer = axis.getContainer('headerLineContainer'),\n      headerTextContainer = axis.getContainer('headerTextContainer'),\n      labelContainer = axis.getContainer('labelContainer'),\n      labelBackContainer = axis.getContainer('labelBackContainer'),\n      labelLineContainer = axis.getContainer('labelLineContainer'),\n      labelTextContainer = axis.getContainer('labelTextContainer'),\n      hotContainer = axis.getContainer('hotContainer');\n\n    ganttPlotHoverBandContainerParent = axis.getContainer('ganttPlotHoverBandContainerParent') ||\n      axis.addContainer('ganttPlotHoverBandContainerParent',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-plot-band-container-parent'\n          },\n          container: axisBottomGroup,\n          component: axis\n        })\n      );\n\n    axis.addContainer('ganttPlotHoverBandContainer',\n      animationManager.setAnimation({\n        el: ganttPlotHoverBandContainer || 'group',\n        attr: {\n          name: 'gantt-plot-band-container',\n          'clip-rect': canvasLeft + ',' + canvasTop + ',' + canvasWidth + ',' + canvasHeight\n        },\n        container: ganttPlotHoverBandContainerParent,\n        component: axis\n      })\n    );\n\n    axis.addContainer('ganttPlotLineContainer',\n      animationManager.setAnimation({\n        el: ganttPlotLineContainer || 'group',\n        attr: {\n          name: 'gantt-plot-line-container',\n          'clip-rect': canvasLeft + ',' + canvasTop + ',' + canvasWidth + ',' + canvasHeight\n        },\n        container: axisBottomGroup,\n        component: axis\n      })\n    );\n\n    headerContainerAttr = {\n      name: 'gantt-header-container',\n      'clip-rect': (canvasLeft - axisConfig.totalVisiblelWidth) + ',' +\n        (canvasTop - chartConfig.categorySpaceUsed) +\n        ',' + axisConfig.totalVisiblelWidth + ',' + chartConfig.categorySpaceUsed\n    };\n    if (!axisConfig.isDraged) {\n      headerContainerAttr.transform = TRANSFORM;\n    } else {\n      delete headerContainerAttr.transform;\n    }\n    headerContainer = axis.addContainer(\n      'headerContainer',\n      animationManager.setAnimation({\n        el: headerContainer || 'group',\n        attr: headerContainerAttr,\n        container: axisBottomGroup,\n        component: axis\n      })\n    );\n\n    if (!headerBackContainer) {\n      headerBackContainer = axis.addContainer(\n        'headerBackContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-header-back-container'\n          },\n          container: headerContainer,\n          component: axis\n        })\n      );\n    }\n\n    if (!headerLineContainer) {\n      headerLineContainer = axis.addContainer(\n        'headerLineContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-header-line-container'\n          },\n          container: headerContainer,\n          component: axis\n        })\n      );\n    }\n\n    if (!headerTextContainer) {\n      headerTextContainer = axis.addContainer(\n        'headerTextContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-header-text-container'\n          },\n          container: headerContainer,\n          component: axis\n        })\n      );\n    }\n\n    labelContainerAttr = {\n      name: 'gantt-label-container',\n      'clip-rect': (canvasLeft - axisConfig.totalVisiblelWidth) + ',' + canvasTop +\n        ',' + axisConfig.totalVisiblelWidth + ',' + canvasHeight\n    };\n    if (!axisConfig.isDraged) {\n      labelContainerAttr.transform = TRANSFORM;\n    } else {\n      delete labelContainerAttr.transform;\n    }\n    labelContainer = axis.addContainer(\n      'labelContainer',\n      animationManager.setAnimation({\n        el: labelContainer || 'group',\n        attr: labelContainerAttr,\n        component: axis,\n        container: axisBottomGroup\n      })\n    );\n\n    if (!labelBackContainer) {\n      labelBackContainer = axis.addContainer(\n        'labelBackContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-label-back-container'\n          },\n          container: labelContainer,\n          component: axis\n        })\n      );\n    }\n\n    if (!labelLineContainer) {\n      labelLineContainer = axis.addContainer(\n        'labelLineContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-label-line-container'\n          },\n          container: labelContainer,\n          component: axis\n        })\n      );\n    }\n\n    if (!labelTextContainer) {\n      labelTextContainer = axis.addContainer(\n        'labelTextContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-label-text-container'\n          },\n          container: labelContainer,\n          component: axis\n        })\n      );\n    }\n\n    axis.addContainer('hotContainer',\n      animationManager.setAnimation({\n        el: hotContainer || 'group',\n        attr: {\n          name: 'gantt-hot-container',\n          'clip-rect': (canvasLeft - axisConfig.totalVisiblelWidth) + ',' +\n            (canvasTop - chartConfig.categorySpaceUsed) +\n            ',' + axisConfig.totalVisiblelWidth + ',' + (canvasHeight + chartConfig.categorySpaceUsed)\n        },\n        component: axis,\n        container: chart.getContainer('parentgroup')\n      })\n    );\n\n    axisConfig.gridLinePath = '';\n    axisConfig.gridLineHeaderPath = '';\n    axisConfig.hoverElemsArr = [];\n    axisConfig.labelHoverEventName = {\n      click: 'ProcessClick',\n      rollOver: 'ProcessRollOver',\n      rollOut: 'ProcessRollOut'\n    };\n\n    if (axisConfig.hasProcess) {\n      process = axisConfig.processes.process.process;\n      args = {\n        elem: axisConfig.processes.process,\n        elemIndex: elemIndex,\n        dimension: {\n          left: axisStartPosition - spaceTaken + process._attrib.leftPos,\n          right: axisStartPosition - spaceTaken + process._attrib.rightPos,\n          top: canvasTop - chartConfig.categorySpaceUsed,\n          bottom: canvasTop\n        },\n        type: 'header'\n      };\n      axis._drawProcessAndDataTableElement(args);\n      elemIndex += 1;\n      gridArr = axisConfig.gridArr = [];\n      for (i = 0, processLength = process.length; i < processLength; i++) {\n        topBottom = axis.getProcessPositionByIndex(i);\n        args = {\n          elem: process[i],\n          elemIndex: elemIndex,\n          pos: i,\n          dimension: {\n            left: axisStartPosition - spaceTaken + process._attrib.leftPos,\n            right: axisStartPosition - spaceTaken + process._attrib.rightPos,\n            top: canvasTop + topBottom.top,\n            bottom: canvasTop + topBottom.bottom\n          },\n          type: 'process'\n        };\n        axis._drawProcessAndDataTableElement(args);\n        elemIndex += 1;\n        gridArr.push({y: args.dimension.bottom});\n      }\n    }\n    if (axisConfig.hasDataTables) {\n      dataTables = axisConfig.dataTables.dataTable.datacolumn;\n      for (i in dataTables) {\n        if (!dataTables.hasOwnProperty(i) || i === '_attrib') {\n          continue;\n        }\n        dataTableCounter = 0;\n        args = {\n          elem: dataTables[i],\n          elemIndex: elemIndex,\n          pos: i,\n          dimension: {\n            left: axisStartPosition - spaceTaken + dataTables[i]._attrib.leftPos,\n            right: axisStartPosition - spaceTaken + dataTables[i]._attrib.rightPos,\n            top: canvasTop - chartConfig.categorySpaceUsed,\n            bottom: canvasTop\n          },\n          type: 'header'\n        };\n        axis._drawProcessAndDataTableElement(args);\n        elemIndex += 1;\n        dataColumn = dataTables[i].text;\n        for (j in dataColumn) {\n          if (dataTableCounter >= processLength) {\n            // If number of dataTable element is greater than number of process elements, then break.\n            // Number of dataTables should be less than or equal to number of process.\n            break;\n          }\n          if (dataColumn[j]._attrib && process[j] && process[j]._attrib) {\n            dataColumn[j]._attrib.hoverbandcolor = process[j]._attrib.hoverbandcolor;\n            dataColumn[j]._attrib.hoverbandalpha = process[j]._attrib.hoverbandalpha;\n            dataColumn[j]._attrib.showhoverband = process[j]._attrib.showhoverband;\n          }\n          if (!dataColumn.hasOwnProperty(j) || j === '_attrib') {\n            continue;\n          }\n          topBottom = axis.getProcessPositionByIndex(j);\n          args = {\n            elem: dataColumn[j],\n            elemIndex: elemIndex,\n            pos: j,\n            dimension: {\n              left: axisStartPosition - spaceTaken + dataTables[i]._attrib.leftPos,\n              right: axisStartPosition - spaceTaken + dataTables[i]._attrib.rightPos,\n              top: canvasTop + topBottom.top,\n              bottom: canvasTop + topBottom.bottom\n            },\n            type: 'datatable'\n          };\n          dataTableCounter++;\n          axis._drawProcessAndDataTableElement(args);\n          elemIndex += 1;\n        }\n      }\n      if (!axisConfig.drawFromProcessVlineDrag) {\n        if (spaceTaken > totalVisiblelWidth) {\n          translateX = (spaceTaken - totalVisiblelWidth);\n          axis.resetTransletAxis();\n          axis.translateAxis(translateX, UNDEF);\n        } else {\n          axis.resetTransletAxis();\n        }\n      } else {\n        axisConfig.drawFromProcessVlineDrag = false;\n      }\n    }\n\n    axis._drawGridLine();\n    axis._disposeExtraProcessAndDataTableElement(elemIndex);\n  }\n\n  /**\n   * Draws the process vertical lines and their trackers\n   */\n  _drawVerticalLineAndTracker () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      canvas = axisConfig.canvas,\n      chartConfig = chart.config,\n      axisDimention = axisConfig.axisDimention || {},\n      axisStartPosition = axisDimention.x,\n      spaceTaken = axisConfig.totalWidth || 0,\n      canvasTop = canvas.canvasTop || chartConfig.canvasTop,\n      plotLine = axis.components.processVline || (axis.components.processVline = []),\n      processVlineArr = axisConfig.processVlineArr,\n      trackerGroup = axis.getContainer('hotContainer'),\n      animationManager = axis.getFromEnv('animationManager'),\n      counter = 0,\n      TRACKER_W = 30,\n      i,\n      ln,\n      path,\n      hotElement,\n      elem,\n      top,\n      hoverLineStyle,\n      lineHotElemStyle,\n      xPos,\n      vHoverLine,\n      dragStart = function () {\n        var ele = this,\n          data = ele.data('drag-options');\n\n        data.origX = data.lastX || (data.lastX = 0);\n        data.vHoverLine.show();\n\n        chart.trackerClicked = true;\n        data.draged = false;\n      },\n\n      dragMove = function (evt) {\n        var ele = this,\n          data = ele.data('drag-options'),\n          vLineSetting = data.vLineSetting,\n          dx = typeof evt.data === 'string' ? +evt.data.substr(0, evt.data.indexOf(',')) : (evt.data[0] || 0),\n          startX = vLineSetting.xPos + dx,\n          leftSideLimit = vLineSetting.leftLimit,\n          rightSideLimit = vLineSetting.rightLimit,\n          transform;\n\n        // bound limits\n        if (startX < leftSideLimit) {\n          dx = leftSideLimit - vLineSetting.xPos;\n        }\n        if (startX > rightSideLimit) {\n          dx = rightSideLimit - vLineSetting.xPos;\n        }\n\n        transform = {\n          transform: 't' + (data.origX + dx) + ',' + 0\n        };\n\n        ele.attr(transform);\n        data.vHoverLine.attr(transform);\n\n        data.draged = true;\n        data.lastX = dx;\n      },\n\n      dragUp = function () {\n        var ele = this,\n          data = ele.data('drag-options'),\n          vLineSetting = data.vLineSetting,\n          vLineIndex = data.vLineIndex,\n          transform;\n\n        chart.trackerClicked = false;\n        data.vHoverLine.hide();\n        // restoring state with respect to original state\n        if (data.draged) {\n          axisConfig.isDraged = true;\n          vLineSetting.left.rightPos += data.lastX || 0;\n          vLineSetting.right.leftPos += data.lastX || 0;\n          vLineSetting.xPos += data.lastX || 0;\n          if (processVlineArr[vLineIndex - 1]) {\n            processVlineArr[vLineIndex - 1].rightLimit += data.lastX || 0;\n          }\n          if (processVlineArr[vLineIndex + 1]) {\n            processVlineArr[vLineIndex + 1].leftLimit += data.lastX || 0;\n          }\n          axisConfig.drawFromProcessVlineDrag = true;\n          axis._drawProcessAndDataTable();\n          axis._drawVerticalLineAndTracker();\n          transform = {\n            transform: 't0,0'\n          };\n\n          ele.attr(transform);\n          data.vHoverLine.attr(transform);\n        }\n      };\n\n    hoverLineStyle = {\n      stroke: axisConfig.gridResizeBarColor,\n      'stroke-width': axisConfig.gridResizeBarThickness\n    };\n    lineHotElemStyle = {\n      stroke: TRACKER_FILL,\n      'stroke-width': TRACKER_W\n    };\n    top = canvasTop - chartConfig.categorySpaceUsed;\n    for (i = 0, ln = processVlineArr.length; i < ln; i += 1) {\n      if (processVlineArr[i].type === 'process') {\n        elem = axisConfig.processes.process.process;\n      } else {\n        elem = axisConfig.dataTables.dataTable.datacolumn[processVlineArr[i].ind];\n      }\n      xPos = axisStartPosition - spaceTaken + elem._attrib.rightPos;\n      path = ['M', xPos, top, 'L', xPos, canvasTop + axisConfig.processTotalHeight];\n      if (plotLine[counter]) {\n        vHoverLine = plotLine[counter].graphics.vHoverLine;\n        vHoverLine.attr({path: path}).attr(hoverLineStyle);\n        hotElement = plotLine[counter].graphics.hotElement;\n        hotElement.attr({path: path}).attr(lineHotElemStyle);\n      } else {\n        hoverLineStyle.path = path;\n        vHoverLine = animationManager.setAnimation({\n          el: 'path',\n          container: trackerGroup,\n          component: axis,\n          attr: hoverLineStyle\n        });\n        lineHotElemStyle.path = path;\n        hotElement = animationManager.setAnimation({\n          el: 'path',\n          container: trackerGroup,\n          component: axis,\n          attr: lineHotElemStyle\n        });\n        plotLine[counter] = {};\n        plotLine[counter].graphics = {};\n        plotLine[counter].config = {};\n        plotLine[counter].graphics.vHoverLine = vHoverLine;\n        plotLine[counter].graphics.hotElement = hotElement;\n      }\n      hotElement.show();\n      vHoverLine.hide();\n      hotElement.css('cursor', (hasSVG && 'ew-resize') || 'e-resize')\n        .drag(dragMove, dragStart, dragUp)\n        .data('drag-options', {\n          vHoverLine: plotLine[counter].graphics.vHoverLine,\n          vLineSetting: processVlineArr[i],\n          vLineIndex: i\n        });\n      counter += 1;\n    }\n    for (i = counter, ln = plotLine.length; i < ln; i += 1) {\n      plotLine[i].graphics.vHoverLine.attr({\n        path: ['M', 0, 0]\n      });\n      plotLine[i].graphics.hotElement.attr({\n        path: ['M', 0, 0]\n      });\n    }\n  }\n\n  /**\n   * Draws the components of the Process Axis.\n   */\n  _drawComponents () {\n    let axis = this,\n      axisConfig = axis.config;\n\n    axisConfig.isDraged = false;\n    axis._drawProcessAndDataTable();\n    axisConfig.drawPlotlines && axis._drawPlotLine();\n    axis._drawVerticalLineAndTracker();\n    axis._drawGridLine();\n  }\n}\n\nexport default GanttProcessAxis;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }], complexity: 'off' */\nimport GanttAxis, { getCrispPath } from './gantt';\nimport { pluck, pluckNumber, setLineHeight, extend2, convertColor, getFirstColor, BLANKSTRING } from '../lib';\nimport { addDep } from './../dependency-manager';\nimport ganttCommonAnimation from './gantt-common.animation';\n\nlet UNDEF,\n  lastHoverEle,\n  hoverTimeout;\n\nconst PXSTRING = 'px',\n  NONE = 'none',\n  UND_LINE = 'underline',\n  VISIBLE_STR = 'visible',\n  HIDDEN_STR = 'hidden',\n  START_STR = 'start',\n  END_STR = 'end',\n  MIDDLE_STR = 'middle',\n  HALF_SECOND = 500,\n  /**\n   * Method that returns an element of provided id from an array of elements\n   * @param {Array} elemArr array of elements\n   * @param {string} id if the element to be fetched\n   * @return {Object} returns the element if found, else returns false\n  */\n  _hasElements = (elemArr, id) => {\n    let i;\n\n    for (i = 0; i < elemArr.length; i++) {\n      if (elemArr[i].id === id) {\n        return elemArr[i];\n      }\n    }\n\n    return false;\n  },\n  /**\n   * Function return all the attribute as object\n   * @param {Object} obj The object for which the attribute list is to be extracted\n   * @return {Object} The return object that contain all the atribute list\n   */\n  _getAttribAsObj = (obj) => {\n    var ind,\n      ret = {};\n    for (ind in obj) {\n      if (obj.hasOwnProperty(ind) && typeof obj[ind] === 'string' && !!obj[ind]) {\n        ret[ind] = obj[ind];\n      }\n    }\n    return ret;\n  };\n\n/**\n * Function help to extract the all attribute from parent to its child\n * @param {Object} obj The Object for which the attribute to be extracted\n * @param {Object} attribObj the attribute object\n */\nfunction extractAttribToEnd (obj, attribObj) {\n  var ind;\n\n  obj._attrib = extend2({}, attribObj);\n  obj._attrib = extend2(obj._attrib, _getAttribAsObj(obj));\n  for (ind in obj) {\n    if (obj.hasOwnProperty(ind) &&\n              !!obj[ind] &&\n              typeof obj[ind] === 'object' &&\n              ind !== '_attrib') {\n      extractAttribToEnd(obj[ind], obj._attrib);\n    }\n  }\n}\n\naddDep({\n  name: 'ganttCommonAnimation',\n  type: 'animationRule',\n  extension: ganttCommonAnimation\n});\n\n/**\n * An extension of the cartesian axis which defines some methods which is used by the Gantt char API\n * to render its axis.\n */\nclass GantCommonAxis extends GanttAxis {\n  /**\n   * Creates an instance of GantCommonAxis. Specially, it creates a components object where it\n   * stores components that are not a part of the component interface.\n   * @memberof GantCommonAxis\n   */\n  constructor () {\n    super();\n    this.components = {};\n  }\n\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'GanttCommon';\n  }\n\n  /**\n   * Draws the plot lines along the axis.\n   */\n  _drawPlotLine () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      canvas = chart.getChildren('canvas')[0],\n      chartConfig = chart.config,\n      axisPlotLineContainerBottom = axis.getContainer('ganttPlotLineContainer'),\n      canvasBottom = canvas.canvasBottom || chartConfig.canvasBottom,\n      canvasLeft = canvas.canvasLeft || chartConfig.canvasLeft,\n      canvasRight = canvas.canvasRight || chartConfig.canvasRight,\n      canvasTop = canvas.canvasTop || chartConfig.canvasTop,\n      animationManager = axis.getFromEnv('animationManager'),\n      gridArr = axisConfig.gridArr,\n      plotLine = axis.getGraphicalElement('plotLine'),\n      // animateAxis = axisConfig.animateAxis,\n      // animationDuration,\n      // transposeAnimDuration,\n      lineStyle,\n      lineElement,\n      i,\n      ln,\n      // animObj,\n      // dummyObj,\n      // animType,\n      path = [];\n\n    // animationDuration = chartConfig.animationObj;\n    // animObj = animationDuration.animObj;\n    // dummyObj = animationDuration.dummyObj;\n    // transposeAnimDuration = animationDuration.transposeAnimDuration;\n    // animType = animationDuration.animType;\n\n    for (i = 0, ln = gridArr.length; i < ln; i += 1) {\n      if (gridArr[i].x !== UNDEF) {\n        path.push('M', gridArr[i].x, canvasTop, 'L', gridArr[i].x, canvasBottom);\n      } else {\n        path.push('M', canvasLeft, gridArr[i].y, 'L', canvasRight, gridArr[i].y);\n      }\n    }\n\n    lineStyle = {\n      'stroke-dasharray': axisConfig.plotLineDashStyle,\n      'stroke-width': axisConfig.plotLineThickness,\n      stroke: axisConfig.plotLineColor,\n      path: path\n    };\n    lineElement = animationManager.setAnimation({\n      el: (plotLine && plotLine[0]) || 'path',\n      attr: lineStyle,\n      container: axisPlotLineContainerBottom,\n      label: 'path',\n      component: axis\n    });\n    if (!(plotLine && plotLine[0])) {\n      axis.addGraphicalElement('plotLine', lineElement, true);\n    }\n  }\n\n  /**\n   * Draws a trend line along the axis\n   */\n  _drawTrendLine () {\n    var axis = this,\n      trendArr = axis.getComponentInfo('trend'),\n      tooltipController = axis.getFromEnv('toolTipController'),\n      i,\n      markerObj,\n      labelObj,\n      axisConfig = axis.config,\n      axisDrawingAttrObj,\n      axisTextAttrObj,\n      startValuePixel,\n      isTrendZone,\n      endValuePixel,\n      startValue,\n      endValue,\n      fixedTrendLabelPos,\n      fixedTrendLabelPosRight,\n      isOpposit = axisConfig.isOpposit,\n      crispPath,\n      axisPadding = axisConfig.labelPadding,\n      chart = axis.getFromEnv('chart'),\n      animationManager = chart.getFromEnv('animationManager'),\n      chartConfig = chart.config,\n      canvas = chart.getChildren('canvas')[0],\n      canvasBottom = canvas.config.canvasTop + canvas.config.canvasHeight,\n      canvasLeft = canvas.config.canvasLeft || chartConfig.canvasLeft,\n      canvasRight = canvas.config.canvasRight || chartConfig.canvasRight,\n      canvasTop = canvas.config.canvasTop || chartConfig.canvasTop,\n      drawTrendLabels = axisConfig.drawTrendLabels,\n      trendlabels = axis.getGraphicalElement('trendlabels') || [],\n      axisTrendContainerTop = axisConfig.axisTrendContainerTop,\n      axisTrendContainerBottom = axisConfig.axisTrendContainerBottom,\n      axisTrendContainer,\n      axisDimention = axisConfig.axisDimention || {},\n      checkForLimit = axis._isZoomed(),\n      getLimit = axis.getVisibleConfig(),\n      maxPx,\n      minPx,\n      showOnTop,\n      xOffset = chartConfig.xOffset * -1,\n      valueOnRight,\n      /*\n      * id is appended with each type of graphical elements so that these elements are stored\n      * uniquely for each axes. When this fn would get invoked for other axes; it would retrive\n      * only the graphical elements which are related to only that axis. So that all the graphical\n      * elements should not be stored at the same place for all axes. It will prevent the fetching\n      * of wrong graphical elements.\n      */\n      // TODO: We have to find a proper way to handle all this operations for trendline, vtrendline etc.\n\n      trendElemsArr = axis.getGraphicalElement('trendElems'),\n      trendTextElemsArr = axis.getGraphicalElement('trendlabels'),\n      trendElems,\n      trendTextElems,\n      trendlines = axisConfig.trendLines,\n      vtrendlines = axisConfig.vTrendLines;\n\n    !trendElemsArr && (trendElemsArr = []);\n    !trendTextElemsArr && (trendTextElemsArr = []);\n    // initially remove the trend elements\n    for (i = 0; i < trendElemsArr.length; i++) {\n      trendElems = _hasElements(trendElemsArr, i);\n      if (trendElems) {\n        trendElems.remove();\n      }\n    }\n\n    if (vtrendlines) {\n      fixedTrendLabelPos = isOpposit ? (axisDimention.opposite || canvasBottom) -\n        (axisConfig.trendBottomPadding || 0) : (axisDimention.y || canvasBottom) +\n        (axisConfig.trendBottomPadding || 0);\n    } else {\n      fixedTrendLabelPos = isOpposit ? (axisDimention.opposite || canvasLeft) + (axisPadding || 0)\n        : (axisDimention.x || canvasLeft) - (axisPadding || 0);\n      fixedTrendLabelPosRight = isOpposit ? (axisDimention.x || canvasRight) + (axisPadding || 0)\n        : (axisDimention.opposite || canvasRight) + (axisPadding || 0);\n    }\n\n    if (checkForLimit) {\n      maxPx = Math.max(axis.getPixel(getLimit.minValue, { wrtVisible: true }),\n        axis.getPixel(getLimit.maxValue, { wrtVisible: true }));\n      minPx = Math.min(axis.getPixel(getLimit.minValue, { wrtVisible: true }),\n        axis.getPixel(getLimit.maxValue, { wrtVisible: true }));\n    }\n\n    if (trendlines || vtrendlines) {\n      for (i = 0; i < trendArr.length; i++) {\n        markerObj = trendArr[i].marker;\n        labelObj = trendArr[i].label;\n\n        axisDrawingAttrObj = {\n          fill: markerObj.fill || '',\n          stroke: markerObj.stroke || '',\n          'stroke-width': markerObj.strokeWidth,\n          'stroke-dasharray': markerObj.strokeDashArray,\n          'shape-rendering': markerObj.shapeRendering\n        };\n\n        axisTextAttrObj = {\n          fill: labelObj.fill || '',\n          text: labelObj.text,\n          'text-anchor': labelObj.textAnchor,\n          'text-bound': labelObj.textBound\n        };\n        isTrendZone = markerObj.isZone;\n        startValue = markerObj.startValue;\n        endValue = markerObj.endValue;\n\n        if (vtrendlines) {\n          startValuePixel = axis.getPixel(axisConfig.hasBreakPoints\n            ? axis._getRelativeBreakValue(startValue) : startValue, { wrtVisible: true });\n          endValuePixel = endValue\n            ? axis.getPixel(axisConfig.hasBreakPoints\n              ? axis._getRelativeBreakValue(endValue) : endValue, { wrtVisible: true }) : 0;\n\n          // Add the offset during scroll\n          startValuePixel += xOffset;\n          endValuePixel += xOffset;\n          axisTextAttrObj.y = fixedTrendLabelPos;\n          axisTextAttrObj['vertical-align'] = 'top';\n\n          if ((endValue !== UNDEF && endValue !== '' && endValue !== startValue) && isTrendZone) {\n            axisDrawingAttrObj.path = ['M', startValuePixel, canvasTop,\n              'L', startValuePixel, canvasBottom,\n              'L', endValuePixel, canvasBottom,\n              'L', endValuePixel, canvasTop, 'Z'];\n\n            axisTextAttrObj.x = startValuePixel + ((endValuePixel - startValuePixel) / 2);\n          } else {\n            // trend line\n            crispPath = endValue\n              ? getCrispPath(['M', startValuePixel, canvasTop,\n                'L', endValuePixel, canvasBottom], markerObj.strokeWidth)\n              : getCrispPath(['M', startValuePixel, canvasTop,\n                'L', startValuePixel, canvasBottom], markerObj.strokeWidth);\n            axisDrawingAttrObj.path = crispPath.path;\n\n            axisTextAttrObj.x = endValue ? endValuePixel : startValuePixel;\n          }\n          // checking if the text is out of viewport\n          if (checkForLimit && (!drawTrendLabels || axisTextAttrObj.x > maxPx ||\n            axisTextAttrObj.x < minPx)) {\n            axisTextAttrObj.text = BLANKSTRING;\n            axisTextAttrObj.visibility = HIDDEN_STR;\n          } else {\n            axisTextAttrObj.visibility = VISIBLE_STR;\n          }\n        } else if (trendlines) {\n          startValuePixel = axis.getPixel(startValue, { wrtVisible: true });\n          endValuePixel = endValue ? axis.getPixel(endValue, { wrtVisible: true }) : 0;\n          valueOnRight = labelObj.valueOnRight;\n\n          if ((endValue !== UNDEF && endValue !== '' && endValue !== startValue) &&\n            isTrendZone) {\n            // trend zone\n            axisDrawingAttrObj.path = ['M', canvasLeft, startValuePixel,\n              'L', canvasRight, startValuePixel,\n              'L', canvasRight, endValuePixel,\n              'L', canvasLeft, endValuePixel, 'Z'];\n\n            axisTextAttrObj.x = valueOnRight ? fixedTrendLabelPosRight : fixedTrendLabelPos;\n            axisTextAttrObj.y = startValuePixel + ((endValuePixel - startValuePixel) / 2);\n          } else {\n            // trend line\n            crispPath = endValue\n              ? getCrispPath(['M', canvasLeft, startValuePixel,\n                'L', canvasRight, endValuePixel, 'Z'], markerObj.strokeWidth)\n              : getCrispPath(['M', canvasLeft, startValuePixel,\n                'L', canvasRight, startValuePixel, 'Z'], markerObj.strokeWidth);\n            axisDrawingAttrObj.path = crispPath.path;\n\n            axisTextAttrObj.x = valueOnRight ? fixedTrendLabelPosRight : fixedTrendLabelPos;\n            axisTextAttrObj.y = endValue ? valueOnRight ? endValuePixel\n              : startValuePixel : startValuePixel;\n          }\n          // checking if the text is out of viewport\n          if (checkForLimit && (!drawTrendLabels || axisTextAttrObj.y > maxPx ||\n            axisTextAttrObj.y < minPx)) {\n            axisTextAttrObj.text = BLANKSTRING;\n            axisTextAttrObj.visibility = HIDDEN_STR;\n          } else {\n            axisTextAttrObj.visibility = VISIBLE_STR;\n          }\n        }\n        // if show on top or bottom set the container accordingly\n        showOnTop = trendArr[i].showOnTop;\n        if (!chart.config.is3D && (showOnTop === 1 || axisConfig.showTrendlinesOnTop === 1)) {\n          axisTrendContainer = axisTrendContainerTop;\n        } else {\n          axisTrendContainer = axisTrendContainerBottom;\n        }\n        trendElems = _hasElements(trendElemsArr, i);\n        trendElems = animationManager.setAnimation({\n          el: trendElems || 'path',\n          attr: axisDrawingAttrObj,\n          container: axisTrendContainer,\n          label: 'path',\n          component: axis\n        }).show();\n        trendTextElems = trendTextElemsArr[i];\n        if (trendTextElems) {\n          animationManager.setAnimation({\n            el: trendTextElems,\n            attr: axisTextAttrObj,\n            label: 'text',\n            component: axis\n          });\n        }\n        !_hasElements(trendElemsArr, i) && axis.addGraphicalElement('trendElems', trendElems, true);\n        trendElems.id = i;\n\n        if (labelObj.toolText !== '') {\n          tooltipController.enableToolTip(trendElems, labelObj.toolText);\n        } else {\n          tooltipController.disableToolTip(trendElems);\n        }\n      }\n    } else {\n      for (i = 0; i < trendElemsArr.length; i++) {\n        trendElems = _hasElements(trendElemsArr, i);\n        if (trendElems) {\n          trendElems.remove();\n          trendlabels[i] && trendlabels[i].remove();\n        }\n      }\n    }\n  }\n\n  /**\n   * Extracts and parses styles for the processes and data tables.\n   *\n   * @param {Object} attrs The configuration from which to extract styles\n   * @return {Object} The extracted styles\n   */\n  _drawProcessAndDataTableStyleParser (attrs) {\n    let axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      smartLabel = axis.getFromEnv('smartLabel'),\n      colorM = axis.getFromEnv('color-manager'),\n      labels = axisConfig.labels,\n      style = labels.style,\n      elem = attrs.elem || {},\n      dimension = attrs.dimension,\n      textStyle = elem._attrib || {},\n      left = dimension.left,\n      right = dimension.right,\n      top = dimension.top,\n      bottom = dimension.bottom,\n      processPadding = 2,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      fontStyle,\n      bgColor,\n      xPos,\n      yPos,\n      text,\n      retAttrib,\n      smartText,\n      vAlign,\n      align,\n      color,\n      textDecoration,\n      hoverC,\n      hoverA,\n      useHover,\n      usePlotHover,\n      rollOverColor,\n      link,\n      lHeight;\n\n    switch (attrs.type) {\n      case 'category' :\n      case 'datatable' :\n      case 'process' :\n        fontFamily = pluck(textStyle.font, style.fontFamily);\n        fontSize = pluck(textStyle.fontsize, this.computeFontSize(\n          style.fontSizeWithUnit).toString()).replace(/px/i, '') + PXSTRING;\n        fontStyle = pluck((Number(textStyle.isitalic) ? 'italic' : UNDEF), style.fontStyle);\n        bgColor = convertColor(pluck(textStyle.bgcolor ? getFirstColor(textStyle.bgcolor) : UNDEF,\n          colorM.getColor('categoryBgColor')), pluckNumber(textStyle.bgalpha, 100));\n        color = pluck(\n          textStyle.fontcolor ? getFirstColor(textStyle.fontcolor) : UNDEF,\n          style.color\n        );\n        textDecoration = (pluckNumber(textStyle.isunderline, 0) && UND_LINE) || NONE;\n        vAlign = (pluck(textStyle.valign, 'center')).toLowerCase();\n        align = (pluck(textStyle.align, 'middle')).toLowerCase();\n        text = elem.drawLabel || '';\n        fontWeight = pluck((Number(textStyle.isbold) ? 'bold' : UNDEF), style.fontWeight);\n        link = elem.link;\n        break;\n      case 'header' :\n        fontFamily = pluck(textStyle.headerfont, style.fontFamily);\n        fontSize = pluck(textStyle.headerfontsize, this.computeFontSize(\n          style.fontSizeWithUnit).toString()).replace(/px/i, '') + PXSTRING;\n        fontWeight = pluck(\n          (Number(textStyle.headerisbold) === 1 ? 'bold' : textStyle.headerisbold === UNDEF ? 'bold' : UNDEF), style.fontWeight);\n        color = pluck(\n          textStyle.headerfontcolor ? getFirstColor(textStyle.headerfontcolor) : UNDEF,\n          style.color\n        );\n        textDecoration = (pluckNumber(textStyle.headerisunderline, 0) && UND_LINE) || NONE;\n        fontStyle = pluck((textStyle.headerisitalic ? 'italic' : UNDEF), style.fontStyle);\n        bgColor = convertColor(pluck(textStyle.headerbgcolor ? getFirstColor(textStyle.headerbgcolor)\n          : UNDEF, colorM.getColor('categoryBgColor')), pluckNumber(textStyle.headerbgalpha, 100));\n        vAlign = (pluck(textStyle.headervalign, 'center')).toLowerCase();\n        align = (pluck(textStyle.headeralign, 'middle')).toLowerCase();\n        text = elem.drawLabel || '';\n        link = elem.headerlink;\n        break;\n    }\n\n    switch (attrs.type) {\n      case 'category' :\n        axisConfig.gridLinePath += 'M' + left + ',' + top + 'L' + left + ',' + bottom + 'L' +\n          right + ',' + bottom;\n        fontWeight = pluck((Number(textStyle.isbold) === 1 ? 'bold' : textStyle.isbold === UNDEF\n          ? 'bold' : UNDEF), style.fontWeight);\n        break;\n      case 'datatable' :\n      case 'process' :\n        axisConfig.gridLinePath += 'M' + left + ',' + bottom + 'L' + right + ',' + bottom + 'L' +\n          right + ',' + top;\n        break;\n      case 'header' :\n        axisConfig.gridLineHeaderPath += 'M' + left + ',' + bottom + 'L' + right + ',' + bottom +\n          'L' + right + ',' + top;\n        break;\n    }\n\n    hoverC = pluck(elem._attrib.hoverbandcolor, axisConfig.hoverColor);\n    hoverA = pluckNumber(elem._attrib.hoverbandalpha, axisConfig.hoverAlpha);\n\n    if (align === 'left') {\n      xPos = left + processPadding;\n      align = START_STR;\n    } else if (align === 'right') {\n      xPos = left + (right - left) - processPadding;\n      align = END_STR;\n    } else {\n      align = MIDDLE_STR;\n      xPos = left + (right - left) / 2;\n    }\n\n    if (vAlign === 'top') {\n      yPos = top - processPadding;\n    } else if (vAlign === 'bottom') {\n      yPos = top + (bottom - top) - processPadding;\n    } else {\n      vAlign = MIDDLE_STR;\n      yPos = top + (bottom - top) / 2;\n    }\n\n    style = {\n      fontFamily: fontFamily,\n      fontSize: fontSize,\n      fontWeight: fontWeight,\n      fontStyle: fontStyle,\n      textDecoration: textDecoration\n    };\n\n    lHeight = setLineHeight(style);\n    lHeight = Number((lHeight.replace(/px/i, '')));\n    lHeight = bottom - top > lHeight ? bottom - top : lHeight;\n\n    smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n    smartLabel.setStyle(style);\n    smartText = smartLabel.getSmartText(text, right - left, lHeight);\n\n    retAttrib = {\n      textAttr: {\n        x: xPos,\n        y: yPos,\n        text: smartText.text,\n        fill: color,\n        'text-anchor': align,\n        'vertical-align': vAlign,\n        cursor: link ? 'pointer' : chart.getFromEnv('paper').canvas.style.cursor\n      },\n      css: style,\n      rectAttr: {\n        x: left,\n        y: top,\n        width: left < right ? right - left : 0,\n        height: top < bottom ? bottom - top : 0,\n        fill: bgColor,\n        'stroke-width': 0,\n        cursor: link ? 'pointer' : chart.getFromEnv('paper').canvas.style.cursor\n      },\n      eventArgs: {\n        isHeader: attrs.type === 'header',\n        label: text,\n        vAlign: vAlign,\n        align: align,\n        link: link,\n        id: elem.id\n      },\n      tooltext: smartText.oriText\n    };\n\n    if (attrs.type === 'datatable' || attrs.type === 'process' || attrs.type === 'category') {\n      rollOverColor = convertColor(hoverC, hoverA);\n      useHover = pluckNumber(elem._attrib.showhoverband, axisConfig.useHover);\n      usePlotHover = pluckNumber(\n        elem._attrib.showganttpanehoverband,\n        axisConfig.usePlotHover,\n        useHover\n      );\n      retAttrib.dataArgs = {\n        rollOverColor: rollOverColor,\n        useHover: useHover,\n        usePlotHover: usePlotHover,\n        dimension: dimension,\n        hoverEle: elem,\n        type: attrs.type,\n        pos: attrs.pos,\n        axis: axis,\n        groupId: attrs.elemIndex\n      };\n    } else {\n      retAttrib.dataArgs = {\n        rollOverColor: UNDEF,\n        useHover: 0,\n        usePlotHover: 0,\n        dimension: dimension,\n        hoverEle: elem,\n        type: attrs.type,\n        pos: attrs.pos,\n        axis: axis,\n        groupId: attrs.elemIndex\n      };\n    }\n\n    return retAttrib;\n  }\n\n  /**\n   * Draws the processes and data tables.\n   *\n   * @param {Object} attrs The configuration using which to dray the processes and data tables\n   */\n  _drawProcessAndDataTableElement (attrs) {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      categoryElement = axis.components.categoryElement || [],\n      hoverElemsArr = axisConfig.hoverElemsArr || (axisConfig.hoverElemsArr = []),\n      animationManager = axis.getFromEnv('animationManager'),\n      elemIndex = attrs.elemIndex,\n      labelHoverEventName = axisConfig.labelHoverEventName,\n      toolTipController = axis.getFromEnv('toolTipController'),\n      // animationDuration,\n      // transposeAnimDuration,\n      attribs,\n      labelBackContainer,\n      labelTextContainer,\n      rectElement,\n      textElement,\n      // animObj,\n      // dummyObj,\n      showTooltip = chart.config.showtooltip,\n      // animType,\n\n      labelClickHandler = function (e) {\n        var ele = this;\n        /**\n         * In `Gantt` chart, category element distributes the time line into visual divisions\n         * This event is fired when a category is clicked.\n         *\n         * This event is only applicable to Gantt chart.\n         *\n         * @event FusionCharts#categoryClick\n         *\n         * @param { string } align - The alignment of the category label.\n         * @param { string } vAlign - The vertical alignment of the category label.\n         * @param { number } chartX - x-coordinate of the pointer relative to the chart.\n         * @param { number } chartY - y-coordinate of the pointer relative to the chart.\n         * @param { number } pageX - x-coordinate of the pointer relative to the page.\n         * @param { number } pageY - y-coordinate of the pointer relative to the page.\n         * @param { string } link - URL set for the category on mouse click.\n         * @param { string } text - The label in the category\n         * @see FusionCharts#event:categoryRollOver\n         * @see FusionCharts#event:categoryRollOut\n         */\n        chart.plotEventHandler(ele, e, labelHoverEventName.click);\n      },\n      labelRollOver = function (e) {\n        var ele = this;\n        hoverTimeout = clearTimeout(hoverTimeout);\n        if (!lastHoverEle || lastHoverEle.removed) {\n          lastHoverEle = null;\n        }\n        lastHoverEle && axis._gridOutHandler.call(lastHoverEle);\n        axis._gridHoverHandler.call(ele);\n\n        /**\n         * In `Gantt` chart, category element distributes the time line into visual divisions\n         * This event is fired when the pointer moves over a category.\n         *\n         * This event is only applicable to Gantt chart.\n         *\n         * @event FusionCharts#categoryRollOver\n         *\n         * @param { string } align - The alignment of the category label.\n         * @param { string } vAlign - The vertical alignment of the category label.\n         * @param { number } chartX - x-coordinate of the pointer relative to the chart.\n         * @param { number } chartY - y-coordinate of the pointer relative to the chart.\n         * @param { number } pageX - x-coordinate of the pointer relative to the page.\n         * @param { number } pageY - y-coordinate of the pointer relative to the page.\n         * @param { string } link - URL set for the category on mouse click.\n         * @param { string } text - The label in the category\n         * @see FusionCharts#event:categoryClick\n         * @see FusionCharts#event:categoryRollOut\n         */\n        chart.plotEventHandler(ele, e, labelHoverEventName.rollOver);\n      },\n      labelRollOut = function (e) {\n        lastHoverEle = this;\n        hoverTimeout = clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(() => axis._gridOutHandler.call(lastHoverEle), HALF_SECOND);\n        /**\n             * In `Gantt` chart, category element distributes the time line into visual divisions\n             * This event is fired when the pointer moves out of a category.\n             *\n             * This event is only applicable to Gantt chart.\n             *\n             * @event FusionCharts#categoryRollOut\n             *\n             * @param { string } align - The alignment of the category label.\n             * @param { string } vAlign - The vertical alignment of the category label.\n             * @param { number } chartX - x-coordinate of the pointer relative to the chart.\n             * @param { number } chartY - y-coordinate of the pointer relative to the chart.\n             * @param { number } pageX - x-coordinate of the pointer relative to the page.\n             * @param { number } pageY - y-coordinate of the pointer relative to the page.\n             * @param { string } link - URL set for the category on mouse click.\n             * @param { string } text - The label in the category\n             * @see FusionCharts#event:categoryClick\n             * @see FusionCharts#event:categoryRollOver\n             */\n        chart.plotEventHandler(lastHoverEle, e, labelHoverEventName.rollOut);\n      };\n\n    // animationDuration = chart.config.animationObj;\n    // animObj = animationDuration.animObj;\n    // dummyObj = animationDuration.dummyObj;\n    // transposeAnimDuration = animationDuration.transposeAnimDuration;\n    // animType = animationDuration.animType;\n\n    if (attrs.type === 'header') {\n      labelBackContainer = axis.getContainer('headerBackContainer');\n      labelTextContainer = axis.getContainer('headerTextContainer');\n    } else {\n      labelBackContainer = axis.getContainer('labelBackContainer');\n      labelTextContainer = axis.getContainer('labelTextContainer');\n    }\n\n    attribs = axis._drawProcessAndDataTableStyleParser(attrs);\n\n    rectElement = animationManager.setAnimation({\n      el: (categoryElement[elemIndex] && categoryElement[elemIndex].graphics.rect) || 'rect',\n      attr: attribs.rectAttr,\n      container: labelBackContainer,\n      label: 'rect',\n      component: axis\n    });\n    textElement = animationManager.setAnimation({\n      el: (categoryElement[elemIndex] && categoryElement[elemIndex].graphics.label) || 'text',\n      attr: attribs.textAttr,\n      container: labelTextContainer,\n      label: 'text',\n      component: axis\n    });\n\n    if (categoryElement[elemIndex]) {\n      textElement.removeCSS();\n      labelBackContainer.appendChild(rectElement);\n      labelTextContainer.appendChild(textElement);\n    } else {\n      axis.addGraphicalElement('rectElement', rectElement, true);\n      axis.addGraphicalElement('textElement', textElement, true);\n      categoryElement[elemIndex] = {};\n      categoryElement[elemIndex].graphics = {};\n      categoryElement[elemIndex].config = {};\n      categoryElement[elemIndex].graphics.label = textElement;\n      categoryElement[elemIndex].graphics.rect = rectElement;\n      rectElement.hover(labelRollOver, labelRollOut)\n        .on('fc-click', labelClickHandler);\n      textElement\n        .hover(labelRollOver, labelRollOut)\n        .on('fc-click', labelClickHandler);\n    }\n    textElement.css(attribs.css);\n    if (attrs.type !== 'header') {\n      if (!hoverElemsArr[attrs.pos]) {\n        hoverElemsArr[attrs.pos] = [];\n      }\n      hoverElemsArr[attrs.pos].push({\n        bgElem: rectElement,\n        bgColor: attribs.rectAttr.fill\n      });\n    }\n    rectElement\n      .data('dataObj', attrs.elem)\n      .data('eventArgs', attribs.eventArgs)\n      .data('data', attribs.dataArgs);\n    textElement\n      .data('dataObj', attrs.elem)\n      .data('eventArgs', attribs.eventArgs)\n      .data('data', attribs.dataArgs);\n\n    if (!showTooltip) {\n      toolTipController.disableToolTip(textElement);\n    } else {\n      toolTipController.enableToolTip(textElement, attribs.tooltext);\n    }\n\n    axis.components.categoryElement = categoryElement;\n  }\n\n  /**\n   * Draws grid lines along the axis.\n   */\n  _drawGridLine () {\n    let axis = this,\n      axisConfig = axis.config,\n      animationManager = axis.getFromEnv('animationManager'),\n      gridLine = axis.getGraphicalElement('gridLine') || [],\n      // animationDuration,\n      // transposeAnimDuration,\n      lineStyle,\n      lineElement,\n      counter = 0,\n      i = 0,\n      ln = 2,\n      path,\n      // animObj,\n      // dummyObj,\n      // animType,\n      container;\n\n    // animationDuration = chart.config.animationObj;\n    // animObj = animationDuration.animObj;\n    // dummyObj = animationDuration.dummyObj;\n    // transposeAnimDuration = animationDuration.transposeAnimDuration;\n    // animType = animationDuration.animType;\n    lineStyle = {\n      'stroke-dasharray': axisConfig.lineDashStyle,\n      'stroke-width': axisConfig.lineThickness,\n      stroke: axisConfig.lineColor\n    };\n    for (; i < ln; i += 1) {\n      if (i === 0) {\n        path = axisConfig.gridLinePath;\n        container = axis.getContainer('labelLineContainer');\n      } else {\n        path = axisConfig.gridLineHeaderPath;\n        container = axis.getContainer('headerLineContainer');\n        if (!path) {\n          continue;\n        }\n      }\n      lineStyle.path = path;\n      lineElement = animationManager.setAnimation({\n        el: (gridLine && gridLine[counter]) || 'path',\n        attr: lineStyle,\n        container: container,\n        label: 'path',\n        component: axis\n      });\n      !(gridLine && gridLine[counter]) && axis.addGraphicalElement('gridLine', lineElement, true);\n      counter += 1;\n    }\n\n    for (i = counter, ln = axis.getGraphicalElement('gridLine').length; i < ln; i += 1) {\n      axis.getGraphicalElement('gridLine')[i].attr({\n        path: 'M0,0'\n      });\n    }\n  }\n\n  /**\n   * The method is invoked when the mouse hovers over a grid along the axis.\n   */\n  _gridHoverHandler () {\n    var data = this.data('data'),\n      type = data.type,\n      dimension = data.dimension,\n      axis = data.axis,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      animationManager = axis.getFromEnv('animationManager'),\n      hoverElems = axis.config.hoverElemsArr || [],\n      ganttPlotHoverBandContainer = axis.getContainer('ganttPlotHoverBandContainer'),\n      plotHoverElement = axis.getGraphicalElement('plotHoverElement'),\n      isPlotHoverElement = plotHoverElement ? 1 : 0,\n      plotHoverElementAttr,\n      i,\n      ln;\n\n    if (type === 'category') {\n      plotHoverElementAttr = {\n        x: dimension.left,\n        y: chartConfig.canvasTop,\n        width: dimension.left < dimension.right ? (dimension.right - dimension.left) : 0,\n        height: chartConfig.height,\n        fill: data.rollOverColor,\n        'stroke-width': 0\n      };\n    } else {\n      plotHoverElementAttr = {\n        y: dimension.top,\n        x: chartConfig.canvasLeft,\n        height: dimension.top < dimension.bottom ? (dimension.bottom - dimension.top) : 0,\n        width: chartConfig.width,\n        fill: data.rollOverColor,\n        'stroke-width': 0\n      };\n    }\n    if (data.usePlotHover) {\n      plotHoverElement = animationManager.setAnimation({\n        el: plotHoverElement || 'rect',\n        attr: plotHoverElementAttr,\n        component: axis,\n        label: 'rect',\n        container: ganttPlotHoverBandContainer\n      });\n      // if plotHoverElement is present(for update case) then show else add as graphical element to axis(render for 1st time)\n      isPlotHoverElement ? plotHoverElement.show() : axis.addGraphicalElement(\n        'plotHoverElement', plotHoverElement);\n    }\n\n    if (data.useHover && hoverElems[data.pos]) {\n      for (i = 0, ln = hoverElems[data.pos].length; i < ln; i += 1) {\n        animationManager.setAnimation({\n          el: hoverElems[data.pos][i].bgElem || 'rect',\n          attr: {'fill': data.rollOverColor},\n          label: 'rect'\n        });\n      }\n    }\n  }\n\n  /**\n   * The method is invoked when the mouse hovers out of a grid along the axis.\n   */\n  _gridOutHandler () {\n    var data = this.data('data'),\n      axis = data.axis,\n      hoverElemsArr = axis.config.hoverElemsArr || [],\n      animationManager = axis.getFromEnv('animationManager'),\n      plotHoverElement = axis.getGraphicalElement('plotHoverElement'),\n      i,\n      ln,\n      hoverOutElem;\n\n    if (data.usePlotHover) {\n      if (plotHoverElement) {\n        plotHoverElement.hide();\n      }\n    }\n    if (data.useHover && hoverElemsArr[data.pos]) {\n      for (i = 0, ln = hoverElemsArr[data.pos].length; i < ln; i += 1) {\n        hoverOutElem = hoverElemsArr[data.pos][i];\n        animationManager.setAnimation({\n          el: hoverOutElem.bgElem || 'rect',\n          attr: {'fill': hoverOutElem.bgColor},\n          label: 'rect'\n        });\n      }\n    }\n  }\n\n  /**\n   * Disposes any extra processes or data tables on an update\n   *\n   * @param {number} index The index from which to remove the element\n   */\n  _disposeExtraProcessAndDataTableElement (index) {\n    var axis = this,\n      categoryElement = axis.components.categoryElement || [],\n      i,\n      ln;\n\n    for (i = index, ln = categoryElement.length; i < ln; i += 1) {\n      categoryElement[i].graphics.label.attr({\n        text: ''\n      });\n      categoryElement[i].graphics.rect.attr({\n        x: 0,\n        y: 0,\n        width: 0,\n        heigth: 0\n      });\n    }\n  }\n}\n\nexport default GantCommonAxis;\nexport { extractAttribToEnd };\n","import safeMin from '@fusioncharts/utils/src/array/safe-min';\nimport safeMax from '@fusioncharts/utils/src/array/safe-max';\nimport { ComponentInterface } from '../component-interface';\nimport {\n  parseConfiguration,\n  BLANKSTRING,\n  extend2,\n  toPrecision,\n  pluckNumber,\n  setLineHeight,\n  pluckFontSize,\n  parseUnsafeString,\n  getDashStyle,\n  convertColor,\n  getFirstValue,\n  pluck,\n  getAxisLimits,\n  pluckFontSizeMaintainUnit\n} from '../lib';\nimport { getDep } from '../dependency-manager';\n\nvar UNDEF,\n  R = getDep('redraphael', 'plugin'),\n  PXSTRING = 'px',\n  DASH_DEF = 'none',\n  NORMALSTRING = 'normal',\n  TREND = 'trend',\n  CAT_VLINE = 'catVLine',\n  LABEL = 'label',\n  LINE = 'line',\n  BAND = 'band',\n  CAT_BAND = 'catBand',\n  TREND_LINE_COLOR = '333333',\n  pInt = function (s, mag) {\n    return parseInt(s, mag || 10);\n  },\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {string} groupName Name of the group to be created.\n   * @param  {Element} parentContainer The parent container in which the group will be appended.\n   * @param {Object} axis The concerned axis\n   * @return {Element} The group that was created.\n   */\n  createGroup = function (groupName, parentContainer, axis) {\n    return axis.getFromEnv('animationManager').setAnimation({\n      el: 'group',\n      attr: { name: groupName },\n      container: parentContainer,\n      state: 'appearing',\n      component: axis,\n      label: 'group'\n    });\n  },\n  /**\n   * Rounds the given number to the nearest multiple of the given number.\n   *\n   * @param {number} num The number to be rounded\n   * @param {number} [multiple=0] The multiple of the number to be rounded to\n   *\n   * @return {number} The rounded number\n   */\n  roundToMultiple = (num, multiple = 0) => {\n    let remainder;\n\n    if (multiple === 0) return num;\n\n    remainder = Math.abs(num) % multiple;\n\n    if (remainder === 0) return num;\n\n    if (num < 0) return -(Math.abs(num) - remainder);\n\n    return num + multiple - remainder;\n  },\n\n  getCrispPath = function (path, width) {\n    var isCrisped = false, // eslint-disable-line good-practices/no-single-usage-variable\n      oddWidth = width % 2,\n      value,\n      roundValue;\n\n    if (path[1] === path[4]) {\n      value = path[1];\n      roundValue = Math.round(value);\n      path[1] = path[4] = oddWidth ? (roundValue > value ? roundValue - 0.5\n        : roundValue + 0.5) : roundValue;\n      isCrisped = true;\n    }\n    if (path[2] === path[5]) {\n      value = path[2];\n      roundValue = Math.round(value);\n      path[2] = path[5] = oddWidth ? (roundValue > value ? roundValue - 0.5\n        : roundValue + 0.5) : roundValue;\n      isCrisped = true;\n    }\n    return {\n      path: path,\n      isCrisped: isCrisped\n    };\n  },\n  /**\n   * Forces a given value to a given limit\n   * @param  {number} value The value to be limited\n   * @param  {number} limit The number to which the given value must be limited\n   * @return {number}       The limited value\n   */\n  _forceValidLowerLimit = (value, limit) => {\n    return (value < limit) ? limit : value;\n  },\n  _drawLimitUpdater = limitUpdater => {\n    limitUpdater.draw();\n  };\n\n/**\n * Given a name of an axis component, checks it for plurality and normalises it to a name that\n * axis can understand\n * @param  {string} name The component name\n * @return {string}      The normalized name\n */\nfunction sanitiseComponentName (name) {\n  let sanitisedName = BLANKSTRING; // eslint-disable-line good-practices/no-single-usage-variable\n\n  if (name === TREND || name === `${TREND}s`) {\n    sanitisedName = TREND;\n  }\n  if (name === CAT_VLINE || name === `${CAT_VLINE}s`) {\n    sanitisedName = CAT_VLINE;\n  }\n  if (name === LABEL || name === `${LABEL}s`) {\n    sanitisedName = `${LABEL}s`;\n  }\n  if (name === LINE || name === `${LINE}s`) {\n    sanitisedName = `${LINE}s`;\n  }\n  if (name === BAND || name === `${BAND}s`) {\n    sanitisedName = BAND;\n  }\n  if (name === CAT_BAND || name === `${CAT_BAND}s`) {\n    sanitisedName = CAT_BAND;\n  }\n\n  return sanitisedName;\n}\n\n/**\n * Draws the scrollbar associated with the axis\n */\nfunction _drawScrollBar () {\n  var axis = this,\n    chart = axis.getFromEnv('chart'),\n    chartConfig = chart.config,\n    graphics = chart.graphics,\n    axisConfig = axis.config,\n    axisRange = axisConfig.axisRange,\n    scrollOptions = chartConfig.scrollOptions || (chartConfig.scrollOptions = {}),\n    max = axisRange.max,\n    min = axisRange.min,\n    scrollBar = axis.getLinkedItem('scrollBar'),\n    scrollNode = scrollBar && scrollBar.config.node, // eslint-disable-line good-practices/no-single-usage-variable\n    // scrollToEnd = chartConfig.scrollToEnd,\n    // lastScrollPosition = chartConfig.lastScrollPosition,\n    // axisZoom = axis.getZoomScale(),\n    canvasLeft,\n    canvasTop,\n    canvasHeight,\n    canvasConfig = chart.getChildren('canvas')[0].config,\n    canvasBorderWidth,\n    axisLineWidth,\n    axisLineStartExtension,\n    axisLineEndExtension,\n    scrollRatio,\n    windowedCanvasWidth,\n    fullCanvasWidth,\n    scrollBarParentGroup,\n    visibleConfig,\n    visibleRange,\n    totalRange,\n    scrollPosition;\n\n  if (!scrollBar) {\n    return;\n  }\n\n  // if (lastScrollPosition !== UNDEF) {\n  //   startPercent = lastScrollPosition;\n  // } else {\n  //   startPercent = scrollToEnd ? 1 : 0;\n  // }\n  canvasLeft = canvasConfig.canvasLeft;\n  canvasTop = canvasConfig.canvasTop;\n  canvasHeight = canvasConfig.canvasHeight;\n  canvasBorderWidth = canvasConfig.canvasBorderWidth;\n  axisLineWidth = axisConfig.showAxisLine ? axisConfig.axisLineThickness || 0 : 0;\n  axisLineStartExtension = pluckNumber(canvasBorderWidth, axisConfig.lineStartExtension);\n  axisLineEndExtension = pluckNumber(canvasBorderWidth, axisConfig.lineEndExtension);\n  scrollOptions.viewPortMin = min;\n  scrollOptions.viewPortMax = max;\n  // scrollRatio = ((scrollOptions.scrollRatio = 1) / axisZoom);\n\n  visibleConfig = axis.getVisibleConfig();\n  visibleRange = visibleConfig.maxValue - visibleConfig.minValue;\n\n  totalRange = axisRange.max - axisRange.min;\n  scrollRatio = visibleRange / totalRange;\n\n  scrollPosition = (visibleConfig.minValue - axisRange.min) / (totalRange - visibleRange);\n\n  windowedCanvasWidth = scrollOptions.windowedCanvasWidth = axis.getPixel(scrollOptions.vxLength);\n  fullCanvasWidth = scrollOptions.fullCanvasWidth =\n              axis.getPixel(max - min) - windowedCanvasWidth;\n\n  scrollBarParentGroup = graphics.scrollBarParentGroup;\n  if (!scrollBarParentGroup) {\n    scrollBarParentGroup = graphics.scrollBarParentGroup = createGroup('scrollBarParentGroup', graphics.parentGroup)\n      .insertBefore(chart.getChildContainer().datalabelsGroup);\n  }\n  // draw the scrollbar element\n  // todo padding needs to be included.\n  if (axisConfig.scrollEnabled !== false) {\n    if (axisConfig.isVertical) {\n      scrollBar.draw(canvasLeft,\n        canvasTop, {\n          height: canvasHeight,\n          scrollRatio: scrollRatio,\n          roundEdges: canvasConfig.isRoundEdges,\n          fullCanvasWidth: fullCanvasWidth,\n          windowedCanvasWidth: windowedCanvasWidth,\n          scrollPosition: scrollPosition,\n          parentLayer: scrollBarParentGroup\n        });\n    } else {\n      scrollBar.draw(canvasLeft - axisLineStartExtension,\n        canvasTop + canvasHeight + canvasBorderWidth + axisLineWidth - 2, {\n          width: canvasConfig.canvasWidth + axisLineStartExtension + axisLineEndExtension,\n          scrollRatio: scrollRatio,\n          roundEdges: canvasConfig.isRoundEdges,\n          fullCanvasWidth: fullCanvasWidth,\n          windowedCanvasWidth: windowedCanvasWidth,\n          scrollPosition: scrollPosition,\n          parentLayer: scrollBarParentGroup\n        });\n    }\n\n    // attach the callback for raising event only for it is a new scroll node.\n    !scrollNode && (function () {\n      var prevPos;\n      R.eve.on('raphael.scroll.start.' + scrollBar.config.node.id, function (pos) {\n        axis.setState('scrolling', true);\n        prevPos = pos;\n        chart.fireChartInstanceEvent('scrollstart', {\n          scrollPosition: pos\n        });\n      });\n\n      R.eve.on('raphael.scroll.end.' + scrollBar.config.node.id, function (pos) {\n        axis.setState('scrolling', false);\n        chart.fireChartInstanceEvent('scrollend', {\n          prevScrollPosition: prevPos,\n          scrollPosition: pos\n        });\n      });\n    }());\n  } else {\n    scrollBar && scrollBar.node && scrollBar.node.hide();\n  }\n\n  axisConfig.scrollBarDrawn = true;\n}\n\n/**\n * The Cartesian Axis is a special kind of axis which is used to uniquely identify points in a plane\n * using two numbers.\n *\n * This class takes care of all cosmetics and calculations related to rendering a cartesian axis on\n * a chart. In addition it also takes care of drawing the ticks, the labels and the scroll bars of\n * the axis.\n * @class\n */\nclass CartesianAxis extends ComponentInterface {\n  /**\n   * Instantiates the axis with some instance members\n   */\n  constructor () {\n    super();\n    // addDep({\n    //   name: 'cartesianAxisAnimation',\n    //   type: 'animationRule',\n    //   extension: cartesianAxisAnimation\n    // });\n    this._drawScrollBar = _drawScrollBar;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'axis';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'cartesian';\n  }\n  /**\n   * Sets the default configuration of the axis\n   */\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n\n    config.setAdaptiveMin = 0;\n    config.adjustDiv = 1;\n    config.axisNameWidth = UNDEF;\n    config.rotateAxisName = 0;\n    config.useEllipsesWhenOverflow = 1;\n    config.divLineColor = UNDEF;\n    config.divLineAlpha = UNDEF;\n    config.divLineThickness = UNDEF;\n    config.divLineIsDashed = UNDEF;\n    config.divLineDashLen = UNDEF;\n    config.divLineDashGap = UNDEF;\n    config.showAlternateGridColor = UNDEF;\n    config.alternateGridColor = UNDEF;\n    config.alternateGridAlpha = UNDEF;\n    config.showZeroPlane = 1;\n    config.zeroPlaneAlpha = 80;\n    config.showZeroPlaneValue = 1;\n    config.showZeroPlaneOnTop = 1;\n    config.showAxisLine = UNDEF;\n    config.axisLineThickness = UNDEF;\n    config.axisLineAlpha = UNDEF;\n    config.tickLength = UNDEF;\n    config.trendlineToolText = UNDEF;\n    config.trendlineColor = TREND_LINE_COLOR;\n    config.trendlineThickness = 1;\n    config.trendlineAlpha = UNDEF;\n    config.showTrendlinesOnTop = 0;\n    config.trendlinesAreDashed = 0;\n    config.trendlinesDashLen = 5;\n    config.trendlinesDashGap = 2;\n    config.isTrendZone = UNDEF;\n    config.showTrendlines = 1;\n    config.showTrendlineLabels = 1;\n    config.showLabels = 1;\n    config.maxLabelHeight = UNDEF;\n    config.rotateLabels = UNDEF;\n    config.slantLabel = 0;\n    config.showAxisValues = 1;\n    config.showTooltip = 1;\n    config.isActive = true; // this attribute control the drawing of divline and trendline\n    config.drawLabels = true;\n    config.drawOnlyCategoryLine = false; // true only for candlestick volume canvas\n    config.drawLabelsOpposit = false;\n    config.drawPlotlines = true;\n    config.drawAxisLine = true;\n    config.drawPlotBands = true;\n    config.drawAxisName = true;\n    config.drawAxisNameOpposit = false;\n    config.axisNameAlignCanvas = false;\n    config.drawAxisNameFromBottom = false;\n    config.drawTrendLines = true;\n    config.drawTrendLabels = true;\n    config.drawTick = true;\n    config.drawTickMinor = true;\n    config.animateAxis = true;\n    config.drawAxisLineWRTCanvas = true;\n    config.isRelativeAxisInverse = false;\n    config.axisIndex = 0;\n    config.uniqueClassName = 0;\n    config.viewPortRatio = {};\n    config.canvas = {};\n    config.axisRange = {};\n    config.isConfigured = true;\n    config.axisDimention = {};\n    // configuration required for drag chart to edit the extreme labels\n    config.extremeLabels = {\n      firstLabel: {},\n      lastLabel: {}\n    };\n    // these are configuration for internal use don't use it from outside\n    config._setRangeAgain = false;\n    config._defaultForceDecimal = UNDEF;\n    config._defaultDecimalPrecision = UNDEF;\n    config.rangeChanged = false;\n    config.dimensionChanged = false;\n\n    config.apparentScrollPos = 0;\n    // axis.configure();\n    this.addToEnv('componentInfo', {\n      catVLine: [],\n      trend: [],\n      labels: [],\n      lines: [],\n      bands: [],\n      catBand: []\n    });\n  }\n\n  /**\n   * Prepare the axis attributes for use by the chart drawing. It applies default values to the\n   * options that are undefined.\n   * @param  {Object}  rawAttr The raw attributes to be set\n   */\n  configure (rawAttr) {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      is3D = axis.getFromEnv('chart').config.is3D, // eslint-disable-line good-practices/no-single-usage-variable\n      FCChartObj = chart.getFromEnv('dataSource').chart,\n      numberFormatter = axis.getFromEnv('number-formatter'),\n      tempAxis = axis.getFromEnv('tempAxis'),\n      axisAttr,\n      fontBdrColor,\n      trendFontBdrColor,\n      labelFontBdrColor,\n      i,\n      j,\n      axisAttrTrend,\n      rawAttrTrend;\n    axisAttr = axisConfig.rawAttr = rawAttr;\n\n    // store the trendlines to the axis object\n    if (rawAttr.vtrendlines) {\n      for (i = 0; i < rawAttr.vtrendlines.length; ++i) {\n        for (j = 0; j < rawAttr.vtrendlines[i].line.length; ++j) {\n          axisAttrTrend = axisAttr.vtrendlines[i].line[j];\n          rawAttrTrend = rawAttr.vtrendlines[i].line[j];\n          axisAttrTrend.startvalue = pluckNumber(rawAttrTrend.startvalue, UNDEF);\n          axisAttrTrend.endvalue = pluckNumber(rawAttrTrend.endvalue, rawAttrTrend.startvalue);\n          axisAttrTrend.color = pluck(rawAttrTrend.color, 'FFFFFF');\n          axisAttrTrend.istrendzone = pluckNumber(rawAttrTrend.istrendzone, 1);\n          axisAttrTrend.thickness = pluckNumber(rawAttrTrend.thickness, 1);\n          axisAttrTrend.trendTextAlpha = pluckNumber(rawAttrTrend.alpha, axisConfig.trendlineAlpha, 99);\n          axisAttrTrend.alpha = pluckNumber(rawAttrTrend.alpha, 40);\n          axisAttrTrend.tooltext = pluck(rawAttrTrend.tooltext, '');\n        }\n      }\n    }\n    if (rawAttr.trendlines) {\n      for (i = 0; i < rawAttr.trendlines.length; ++i) {\n        for (j = 0; j < rawAttr.trendlines[i].line.length; ++j) {\n          axisAttrTrend = axisAttr.trendlines[i].line[j];\n          rawAttrTrend = rawAttr.trendlines[i].line[j];\n          axisAttrTrend.startvalue = pluckNumber(rawAttrTrend.startvalue, UNDEF);\n          axisAttrTrend.endvalue = pluckNumber(rawAttrTrend.endvalue, rawAttrTrend.startvalue);\n          axisAttrTrend.color = pluck(rawAttrTrend.color, 'FFFFFF');\n          axisAttrTrend.istrendzone = pluckNumber(rawAttrTrend.istrendzone, 1);\n          axisAttrTrend.thickness = pluckNumber(rawAttrTrend.thickness, 1);\n          axisAttrTrend.trendTextAlpha = pluckNumber(rawAttrTrend.alpha, axisConfig.trendlineAlpha, 99);\n          axisAttrTrend.alpha = pluckNumber(rawAttrTrend.alpha, 40);\n          axisAttrTrend.showOnTop = pluckNumber(rawAttrTrend.showOnTop, 1);\n          axisAttrTrend.valueOnRight = pluckNumber(rawAttrTrend.valueOnRight, 0);\n        }\n      }\n    }\n\n    axisConfig.trendLines = axisAttr.trendlines;\n    axisConfig.vTrendLines = axisAttr.vtrendlines;\n\n    parseConfiguration(axisAttr, axisConfig);\n\n    // TODO : validation of the attributes is required\n    axisConfig.axisName = parseUnsafeString(axisAttr.axisName);\n    // Store the attribute value in the axisConfig object\n    axisConfig.axisValuePadding = axisConfig.axisNamePadding ||\n                pluckNumber(axisAttr.axisValuePadding, 4); // if change also in placeAxis\n    axisConfig.axisNamePadding = axisConfig.axisNamePadding ||\n                pluckNumber(axisAttr.axisNamePadding, 5); // if change also in placeAxis\n    axisConfig.maxLabelWidthPercent = pluckNumber(axisAttr.maxLabelWidthPercent);\n    axisConfig.maxLabelWidthPercent = Math.abs(axisConfig.maxLabelWidthPercent);\n    // Take minLabelWidthPercent from axis attribute and set it to config of axis\n    axisConfig.minLabelWidthPercent = Math.abs(pluckNumber(axisAttr.minLabelWidthPercent));\n    axisConfig.numDivLines = pluckNumber(axisAttr.numDivLines, 4);\n\n    axisConfig.numDivLines = _forceValidLowerLimit(axisConfig.numDivLines, 0);\n\n    axisConfig.categoryNumDivLines = pluckNumber(axisAttr.numDivLines, 0);\n\n    axisConfig.axisValuePadding = _forceValidLowerLimit(axisConfig.axisValuePadding, 0);\n\n    axisConfig.isReverse = Number(axisAttr.isReverse, 0);\n    axisConfig.isOpposit = Number(axisAttr.isOpposit, 0);\n    axisConfig.isVertical = Number(axisAttr.isVertical, 0);\n\n    axisConfig.categoryDivLinesFromZero = 1; // can be overwritten programetically\n    axisConfig.axisMinValue = numberFormatter.getCleanValue(axisAttr.axisMinValue);\n    axisConfig.axisMaxValue = numberFormatter.getCleanValue(axisAttr.axisMaxValue);\n    axisConfig.zeroPlaneColor = pluck(axisAttr.zeroPlaneColor, axisAttr.divLineColor);\n    axisConfig.zeroPlaneThickness = pluck(axisAttr.zeroPlaneThickness, axisAttr.divLineThickness);\n    axisConfig.axisLineColor = convertColor(axisAttr.axisLineColor, axisAttr.axisLineAlpha);\n    axisConfig.tickAlpha = pluckNumber(axisAttr.tickAlpha, axisConfig.axisLineAlpha);\n    axisConfig.tickColor = convertColor(pluck(axisAttr.tickColor, axisAttr.axisLineColor),\n      axisConfig.tickAlpha);\n    axisConfig.tickWidth = pluckNumber(axisAttr.tickWidth, axisConfig.axisLineThickness);\n\n    axisConfig.maxZoomLimit = pluckNumber(FCChartObj.maxzoomlimit, chart.maxzoomlimit, 1000);\n    axisConfig.showVLines = pluckNumber(FCChartObj.showvlines, 1);\n    axisConfig.showVLinesOnTop = pluckNumber(FCChartObj.showvlinesontop, 0);\n    axisConfig.showVLineLabels = pluckNumber(FCChartObj.showvlinelabels, this.showVLineLabels, 1);\n    axisConfig.showVLineLabelBorder = pluckNumber(FCChartObj.showvlinelabelborder, 1);\n    axisConfig.rotateVLineLabels = pluckNumber(FCChartObj.rotatevlinelabels, 0);\n    axisConfig.vLineColor = pluck(FCChartObj.vlinecolor, '333333');\n    axisConfig.vLineLabelColor = pluck(FCChartObj.vlinelabelcolor);\n    axisConfig.vLineThickness = pluck(FCChartObj.vlinethickness, 1);\n    axisConfig.vLineAlpha = pluckNumber(FCChartObj.vlinealpha, 80);\n    axisConfig.vLineLabelBgColor = pluck(FCChartObj.vlinelabelbgcolor, 'ffffff');\n    axisConfig.vLineLabelBgAlpha = pluckNumber(FCChartObj.vlinelabelbgalpha, is3D ? 50 : 100);\n    axisConfig.staggerLines = Math.max(pluckNumber(FCChartObj.staggerlines, 2), 2);\n\n    axisConfig.staggerLines = _forceValidLowerLimit(axisConfig.staggerLines, 1);\n\n    axisConfig.trendlineValuesOnOpp = pluck(axisAttr.trendlineValuesOnOpp,\n      axisAttr.trendlineValuesOnOpp, 0);\n    axisConfig.labelDisplay = pluck(axisAttr.labelDisplay, 'auto').toLowerCase();\n    axisConfig.labelStep = pluckNumber(axisAttr.labelStep, 0);\n    axisConfig.labelStep = Math.round(axisConfig.labelStep);\n\n    axisConfig.labelStep = _forceValidLowerLimit(axisConfig.labelStep, 0);\n    axisConfig.startPad = 0;\n    axisConfig.endPad = 0;\n\n    axisConfig._oriLabelStep = axisConfig.labelStep;\n    axisConfig.showLimits = pluckNumber(axisAttr.showLimits, axisConfig.showAxisValues);\n    axisConfig.showUpperLimit = axisAttr.showLimits;\n    axisConfig.showDivLineValues = pluckNumber(axisAttr.showDivLineValues, axisConfig.showAxisValues);\n\n    axisConfig.showCanvasBorder = chart.getChildren('canvas')[0].config.showCanvasBorder ? 1 : 0;\n\n    axisConfig.axisBreak = axisAttr.axisBreaks;\n    axisConfig.isBreak = !!(axisConfig.axisBreak);\n    if (axisConfig.isBreak) {\n      axis._processAxisBreak();\n    }\n\n    // Store the axis name style attributesa\n    fontBdrColor = getFirstValue(axisAttr.axisNameBorderColor, BLANKSTRING);\n    fontBdrColor = fontBdrColor ? convertColor(\n      fontBdrColor, pluckNumber(axisAttr.axisNameBorderAlpha,\n        axisAttr.axisNameAlpha, 100)) : BLANKSTRING;\n    axisConfig.name = axisConfig.name || {};\n    axisConfig.name.style = {\n      fontFamily: pluck(axisAttr.axisNameFont, axisAttr.outCanfontFamily),\n      fontSize: pluck(axisAttr.axisNameFontSize, pInt(axisAttr.outCanfontSize)) + PXSTRING,\n      fontSizeWithUnit: pluckFontSizeMaintainUnit(axisAttr.axisNameFontSizeWithUnit,\n        axisAttr.outCanfontSizeWithUnit),\n      color: convertColor(pluck(axisAttr.axisNameFontColor, axisAttr.outCancolor),\n        pluckNumber(axisAttr.axisNameFontAlpha,\n          axisAttr.axisNameAlpha, 100)),\n      fontWeight: pluckNumber(axisAttr.axisNameFontBold, 1) ? 'bold'\n        : NORMALSTRING,\n      fontStyle: pluckNumber(axisAttr.axisNameFontItalic) ? 'italic'\n        : NORMALSTRING,\n      border: fontBdrColor || axisAttr.axisNameBgColor\n        ? (pluckNumber(axisAttr.axisNameBorderThickness, 1) + 'px solid')\n        : UNDEF,\n      borderColor: fontBdrColor,\n      borderThickness: pluckNumber(axisAttr.axisNameBorderThickness, 1),\n      borderPadding: pluckNumber(axisAttr.axisNameBorderPadding, 2),\n      borderRadius: pluckNumber(axisAttr.axisNameBorderRadius, 0),\n      backgroundColor: axisAttr.axisNameBgColor\n        ? convertColor(axisAttr.axisNameBgColor,\n          pluckNumber(axisAttr.axisNameBgAlpha, axisAttr.axisNameAlpha,\n            100)) : BLANKSTRING,\n      borderDash: pluckNumber(axisAttr.axisNameBorderDashed, 0)\n        ? getDashStyle(pluckNumber(axisAttr.axisNameBorderDashLen, 4),\n          pluckNumber(axisAttr.axisNameBorderDashGap, 2)) : DASH_DEF\n    };\n    // Calculate the line height of the axis name\n    axisConfig.name.style.lineHeight = setLineHeight(axisConfig.name.style);\n\n    // Trend line label font style\n    trendFontBdrColor = getFirstValue(FCChartObj.trendvaluebordercolor,\n      BLANKSTRING);\n    trendFontBdrColor = trendFontBdrColor ? convertColor(\n      trendFontBdrColor, pluckNumber(FCChartObj.trendvalueborderalpha,\n        FCChartObj.trendvaluealpha, 100)) : BLANKSTRING;\n    axisConfig.trend = axisConfig.trend || {};\n    axisConfig.trend.trendStyle = {\n      fontFamily: pluck(FCChartObj.trendvaluefont, axisAttr.outCanfontFamily),\n      color: pluck(FCChartObj.trendvaluefontcolor, axisAttr.trendlineColor,\n        axisAttr.outCancolor, '333333'),\n      fontSize: pluckFontSize(this.computeFontSize(FCChartObj.trendvaluefontsize),\n        pInt(axisAttr.outCanfontSize)) + PXSTRING,\n      fontSizeWithUnit: pluckFontSizeMaintainUnit(FCChartObj.trendvaluefontsize,\n        axisAttr.outCanfontSizeWithUnit),\n      fontWeight: pluckNumber(FCChartObj.trendvaluefontbold) ? 'bold'\n        : NORMALSTRING,\n      fontStyle: pluckNumber(FCChartObj.trendvaluefontitalic) ? 'italic'\n        : NORMALSTRING,\n      // Set border as empty string when not required,\n      // since IE will stop js execution if it is undefined or null.\n      border: trendFontBdrColor || FCChartObj.trendvaluebgcolor\n        ? (pluckNumber(FCChartObj.trendvalueborderthickness, 1) + 'px solid') : '',\n      borderColor: trendFontBdrColor,\n      borderThickness: pluckNumber(FCChartObj.trendvalueborderthickness, 1),\n      borderPadding: pluckNumber(FCChartObj.trendvalueborderpadding, 2),\n      borderRadius: pluckNumber(FCChartObj.trendvalueborderradius, 0),\n      backgroundColor: FCChartObj.trendvaluebgcolor\n        ? convertColor(FCChartObj.trendvaluebgcolor,\n          pluckNumber(FCChartObj.trendvaluebgalpha, FCChartObj.trendvaluealpha,\n            100)) : BLANKSTRING,\n      borderDash: pluckNumber(FCChartObj.trendvalueborderdashed, 0)\n        ? getDashStyle(pluckNumber(FCChartObj.trendvalueborderdashlen, 4),\n          pluckNumber(FCChartObj.trendvalueborderdashgap, 2)) : DASH_DEF\n    };\n    // Trend line label line height\n    axisConfig.trend.trendStyle.lineHeight = setLineHeight(axisConfig.trend.trendStyle);\n    axisConfig.labels = axisConfig.labels || {};\n    axisConfig.lines = axisConfig.lines || {};\n    axisConfig.band = axisConfig.band || {};\n\n    // Axis label style\n    labelFontBdrColor = getFirstValue(FCChartObj.labelbordercolor,\n      BLANKSTRING);\n    labelFontBdrColor = labelFontBdrColor ? convertColor(\n      labelFontBdrColor, pluckNumber(FCChartObj.labelborderalpha,\n        FCChartObj.labelalpha, 100)) : BLANKSTRING;\n    axisConfig.labels.style = {\n      fontFamily: pluck(axisAttr.labelFont, axisAttr.outCanfontFamily),\n      fontSize: pluckNumber(axisAttr.labelFontSize, pInt(axisAttr.outCanfontSize)) + PXSTRING,\n      fontSizeWithUnit: pluckFontSizeMaintainUnit(axisAttr.labelFontSizeWithUnit, axisAttr.outCanfontSizeWithUnit),\n      fontWeight: pluckNumber(axisAttr.labelFontBold) ? 'bold'\n        : NORMALSTRING,\n      fontStyle: pluckNumber(axisAttr.labelFontItalic) ? 'italic'\n        : NORMALSTRING,\n      color: convertColor(pluck(axisAttr.labelFontColor, axisAttr.outCancolor),\n        pluckNumber(axisAttr.labelFontAlpha, 100)),\n      labelLink: FCChartObj.labellink,\n      border: labelFontBdrColor || FCChartObj.labelbgcolor\n        ? (pluckNumber(FCChartObj.labelborderthickness, 1) + 'px solid') : '',\n      borderColor: labelFontBdrColor,\n      borderThickness: pluckNumber(FCChartObj.labelborderthickness, 1),\n      borderPadding: pluckNumber(FCChartObj.labelborderpadding, 2),\n      borderRadius: pluckNumber(FCChartObj.labelborderradius, 0),\n      backgroundColor: FCChartObj.labelbgcolor\n        ? convertColor(FCChartObj.labelbgcolor,\n          pluckNumber(FCChartObj.labelbgalpha, FCChartObj.labelalpha,\n            100)) : BLANKSTRING,\n      borderDash: pluckNumber(FCChartObj.labelborderdashed, 0)\n        ? getDashStyle(pluckNumber(FCChartObj.labelborderdashlen, 4),\n          pluckNumber(FCChartObj.labelborderdashgap, 2)) : DASH_DEF\n    };\n    // Axis label line height\n    axisConfig.labels.style.lineHeight = setLineHeight(axisConfig.labels.style);\n    axisConfig.numberFormatterFn = pluck(axisAttr.numberFormatterFn);\n\n    // Setting zoom and scroll if present\n    axisConfig.apparentScrollPos = axisAttr.apparentScrollPos || axisConfig.apparentScrollPos;\n    // axis.setZoomScale(axisAttr.zoomScale || axisConfig.zoomScale);\n\n    axisConfig.axisEndLabelDisplaySpace = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    axisConfig.isConfigured = true;\n    axisConfig._defaultForceDecimal = UNDEF;\n    axisConfig._defaultDecimalPrecision = UNDEF;\n\n    axis.setScrollType('smart');\n\n    axis.addToEnv('savedAxis', tempAxis && extend2({}, tempAxis));\n  }\n\n  /**\n   * Sets the scrolling behavior of the axis.\n   * **'none'** indicates that the scroll bar wil never be shown\n   * **'smart'** indicates that the scroll bar will be shown only when the axis limits are beyond\n   * the visible limits of the chart\n   * **'always'** indicates that the scroll bar will always be visible\n   * @param {string} type The type of scroll behavior.\n   */\n  setScrollType (type) {\n    var visibleConfig = this.getVisibleConfig();\n    if (type === 'none' || type === 'smart' || type === 'always') {\n      this.config.scrollType = type;\n    }\n    this.setVisibleConfig(visibleConfig.minValue, visibleConfig.maxValue);\n  }\n\n  /**\n   * Returns the currently active scrolling behavior of the axis.\n   * @return {string} The axis' scrolling behavior\n   */\n  getScrollType () {\n    return this.config.scrollType;\n  }\n\n  _processAxisBreak () {\n    var axis = this,\n      axisConfig = axis.config,\n      breakPoints,\n      count,\n      i,\n      len;\n\n    axisConfig.breakPoints = [];\n    breakPoints = axisConfig.axisBreak.split('|');\n    for (i = 0, len = breakPoints.length, count = 0; i < len; i += 1) { // eslint-disable-line good-practices/no-single-usage-variable\n      breakPoints[i] = breakPoints[i].split(',');\n      if (!isNaN(breakPoints[i][0]) && !isNaN(breakPoints[i][1])) {\n        axisConfig.breakPoints[count] = {\n          start: pluckNumber(breakPoints[i][0]),\n          end: pluckNumber(breakPoints[i][1]),\n          length: pluckNumber(breakPoints[i][2], 0)\n        };\n        count += 1;\n      }\n    }\n    axisConfig.breakPoints.sort(function compareAxisBreakPoints (a, b) {\n      return a.start - b.start;\n    });\n    axisConfig.hasBreakPoints = true;\n    axis._validateBreakPoints();\n  }\n\n  _validateBreakPoints () {\n    var axisConfig = this.config,\n      breakPoints = axisConfig.breakPoints,\n      totalBreakAmount = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      len = breakPoints.length; // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (i = 0; i < len; i += 1) {\n      totalBreakAmount += breakPoints[i].end - breakPoints[i].start;\n    }\n    axisConfig.totalBreakAmount = totalBreakAmount;\n  }\n\n  _getRelativeBreakValue (value) {\n    var breakPoints = this.config.breakPoints,\n      i,\n      len = breakPoints.length, // eslint-disable-line good-practices/no-single-usage-variable\n      valueDeletion = 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (value >= breakPoints[i].start && value <= breakPoints[i].end) {\n        return breakPoints[i].start - valueDeletion;\n      } else if (value < breakPoints[i].start) {\n        break;\n      }\n      valueDeletion += breakPoints[i].end - breakPoints[i].start;\n    }\n    return value - valueDeletion;\n  }\n\n  _getRealBreakValue (_value) {\n    var value = _value,\n      breakPoints = this.config.breakPoints,\n      i,\n      len = breakPoints.length; // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (i = 0; i < len; i += 1) {\n      if (value >= breakPoints[i].start) {\n        value += (breakPoints[i].end - breakPoints[i].start);\n      } else if (value < breakPoints[i].start) {\n        return value;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Given an interval, this changes the number formatter in use at present\n   * @param  {number} interval The interval to adjust the number formatter against\n   */\n  _adjustNumberFormatter (interval) {\n    var axis = this,\n      axisConfig = axis.config,\n      numberFormatter = axis.getFromEnv('chart').getFromEnv('number-formatter'),\n      defaultDecimalPrecision = axisConfig._defaultDecimalPrecision,\n      defaultForceDecimal = axisConfig._defaultForceDecimal,\n      dec,\n      beforeZero = 0,\n      numberFormatterSetting;\n\n    if (axisConfig.isVertical || axisConfig.numberFormatterFn === 'yAxis') {\n      numberFormatterSetting = (numberFormatter.Y[axisConfig.axisIndex] ||\n                    numberFormatter.Y[0]).yAxisLabelConf;\n    } else {\n      numberFormatterSetting = numberFormatter.paramX;\n    }\n    defaultDecimalPrecision !== UNDEF ? numberFormatterSetting.decimalprecision =\n                defaultDecimalPrecision : axisConfig._defaultDecimalPrecision =\n                numberFormatterSetting.decimalprecision;\n\n    defaultForceDecimal !== UNDEF ? numberFormatterSetting.forcedecimals = defaultForceDecimal\n      : axisConfig._defaultForceDecimal = numberFormatterSetting.forcedecimals;\n\n    // If integer part is greater than zero no need of adjustment\n    if (parseInt(interval, 10) > 0) {\n      return;\n    }\n    // Get the fraction part as a string\n    dec = interval.toString().split('.')[1];\n    if (dec) {\n      // Extract the number of zero in the begining because if no of decimal in numberFormatter is\n      // less or equal to the number zero then same number may repeat.\n      beforeZero = dec.match(/^[0]*/)[0].length;\n      if ((beforeZero + 1) > numberFormatterSetting.decimalprecision) {\n        numberFormatterSetting.forcedecimals = 1;\n      }\n      numberFormatterSetting.decimalprecision = Math.max(beforeZero + 1,\n        numberFormatterSetting.decimalprecision);\n    }\n  }\n\n  /**\n   * Function returning is the axis is in zoomed condition or not\n   * @return {boolean} is the axis in zoomed condition\n   */\n  _isZoomed () {\n    var viewPortConfig = this.getFromEnv('chart').config.viewPortConfig;\n\n    // when scale values are not 1, it implies that axis is in zoomed state\n    if (this.config.isVertical) {\n      return viewPortConfig.scaleY !== 1;\n    }\n    return viewPortConfig.scaleX !== 1;\n  }\n\n  _getIntervalArr (args) {\n    var axis = this,\n      axisConfig = axis.config,\n      axisLabelConfig = axisConfig.labels,\n      increment = axisConfig.axisRange.tickInterval * ((args && args.step) || 1),\n      returnArr = [],\n      getLimit,\n      visibleMin,\n      visibleMax,\n      min,\n      max,\n      i,\n      value;\n\n    getLimit = this.getVisibleConfig();\n    // to prevent getting max value greater than the max value of axis range of polar axis\n    if (axis.getFromEnv('chart').config.axisType === 'polar') {\n      visibleMin = getLimit.minValue;\n      visibleMax = getLimit.maxValue;\n    } else {\n      visibleMin = getLimit.minValue - ((args && args.minPad) || 0);\n      visibleMax = getLimit.maxValue + ((args && args.maxPad) || 0);\n    }\n\n    min = roundToMultiple(visibleMin, increment);\n    max = roundToMultiple(visibleMax - (visibleMax % increment), increment);\n\n    if (min === max) {\n      return [min];\n    }\n\n    if (axisLabelConfig.drawNormalVal) {\n      for (i = toPrecision(min + increment, 10); i < max; i = toPrecision(i + increment, 10)) {\n        if (axisConfig.hasBreakPoints) {\n          value = toPrecision(axis._getRealBreakValue(i), 10);\n        } else {\n          value = toPrecision(i, 10);\n        }\n        returnArr.push(value);\n      }\n    }\n    if (axisLabelConfig.drawLimitVal) {\n      returnArr.push(max, min);\n    }\n\n    (returnArr.indexOf(0) !== -1) && returnArr.splice(returnArr.indexOf(0), 1);\n\n    // Add zero to returnArr if showzeroplane is enabled and zero point is within the axis range\n    if (axisConfig.showZeroPlane && min <= 0 && max >= 0) {\n      returnArr.push(0);\n    }\n    return returnArr.sort((a, b) => a - b); // eslint-disable-line good-practices/no-function-dependency\n  }\n\n  /**\n   * Disposes the scroll bas associated with the axis if it is drawn\n   */\n  _disposeScrollBar () {\n    var axis = this,\n      axisConfig = axis.config;\n\n    if (axisConfig.scrollBarDrawn) {\n      axis.getLinkedItem('scrollBar').hide();\n      axisConfig.scrollBarDrawn = false;\n    }\n  }\n\n  /**\n   * Once the drawing parameters of a component is calculated, they are saved in the axis instance\n   * with the given name.\n   * @param {string} name The name by which to save the calculated parameters\n   * @param {Object} obj  An object containing the calculated parameters of the component\n   */\n  addComponentInfo (name, obj) {\n    this.getFromEnv('componentInfo')[sanitiseComponentName(name)].push(obj);\n  }\n\n  /**\n   * Gets the calculated drawing parameters of an axis component\n   * @param  {string} name The name of the component whose drawing parameters are required\n   * @return {Object}      The drawing parameters of the given component\n   */\n  getComponentInfo (name) {\n    return this.getFromEnv('componentInfo')[sanitiseComponentName(name)];\n  }\n\n  /**\n   * Clears the calculated parameters of all components\n   */\n  clearComponentInfo () {\n    var componentInfo = this.getFromEnv('componentInfo'),\n      key;\n\n    for (key in componentInfo) {\n      if (componentInfo.hasOwnProperty(key)) {\n        componentInfo[key] = [];\n      }\n    }\n  }\n  /**\n   * The function is called whenever there is need to draw the axis or update the axis\n   * NOTE : before calling the function placeAxis must be called to manage the space\n   */\n  draw () {\n    var axis = this,\n      axisConfig = axis.config,\n      canvas = axisConfig.canvas,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      isVertical = axisConfig.isVertical,\n      viewPortConfig = chartConfig.viewPortConfig,\n      limitUpdaters = axis.getChildren().limitUpdater,\n      viewPortRatio = axisConfig.viewPortRatio || {},\n      canvasLeft = canvas.canvasLeft || chartConfig.canvasLeft,\n      canvasTop = canvas.canvasTop || chartConfig.canvasTop,\n      canvasWidth = canvas.canvasWidth || chartConfig.canvasWidth,\n      canvasHeight = canvas.canvasHeight || chartConfig.canvasHeight,\n      axisContainer = axisConfig.axisContainer,\n      axisLabelContainerTop = axisConfig.axisLabelContainerTop,\n      axisPlotLineContainer = axisConfig.axisPlotLineContainer,\n      axisPlotLineContainerTop = axisConfig.axisPlotLineContainerTop,\n      vlineLabelContainer = axisConfig.vlineLabelContainer,\n      axisBandContainer = axisConfig.axisBandContainer,\n      axisNameContainer = axisConfig.axisNameContainer, // eslint-disable-line good-practices/no-single-usage-variable\n      axisTrendContainerTop = axisConfig.axisTrendContainerTop,\n      axisTrendContainerBottom = axisConfig.axisTrendContainerBottom,\n      axisTrendLabelContainer = axisConfig.axisTrendLabelContainer, // eslint-disable-line good-practices/no-single-usage-variable\n      axisAxisLineContainer = axisConfig.axisAxisLineContainer, // eslint-disable-line good-practices/no-single-usage-variable\n      axisAxisLineContainerBottom = axisConfig.axisAxisLineContainerBottom, // eslint-disable-line good-practices/no-single-usage-variable\n      plotLineWidth = axisConfig.divLineThickness || 0,\n      childContainers = chart.getChildContainer(),\n      axisBottom = childContainers.axisBottomGroup,\n      axisTop = childContainers.axisTopGroup,\n      animElems = [],\n      axisBandGroup,\n      axisPlotLineGroup,\n      axisPlotLineGroupTop,\n      axisLineGroup,\n      axisNameGroup,\n      axisLabelGroup,\n      axisLabelGroupTop,\n      axisTrendGroupTop,\n      axisTrendGroupBottom,\n      dx,\n      dy,\n      originY,\n      originX,\n      plotLineClipRect;\n\n    axis.clearComponentInfo();\n\n    originY = viewPortConfig.y * viewPortConfig.scaleY; // eslint-disable-line good-practices/no-single-usage-variable\n    originX = viewPortConfig.x * viewPortConfig.scaleX; // eslint-disable-line good-practices/no-single-usage-variable\n\n    if (isVertical) {\n      plotLineClipRect = canvasLeft + ',' + (canvasTop - plotLineWidth) + ',' + canvasWidth + ',' +\n                (canvasHeight + (plotLineWidth * 2));\n    } else {\n      plotLineClipRect = (canvasLeft - plotLineWidth) + ',' + canvasTop + ',' +\n                (canvasWidth + (plotLineWidth * 2)) + ',' + canvasHeight;\n    }\n\n    // creating the axis elements group unique throughout the charts\n    // axisBandGroup holding the axisBandContainer\n    axisBandGroup = axis.getContainer('axisBandGroup') || // eslint-disable-line good-practices/no-single-usage-variable\n      axis.addContainer('axisBandGroup', createGroup('dataset-Band-group', axisBottom, axis));\n    // axisPlotLineGroup holding the axisplotLineContainer\n    axisPlotLineGroup = axis.getContainer('axisPlotLineGroup') || // eslint-disable-line good-practices/no-single-usage-variable\n      axis.addContainer('axisPlotLineGroup', createGroup('dataset-Line-group', axisBottom, axis));\n    // axisTrendGroupBottom hold trendContainer below the dataset\n    axisPlotLineGroupTop = axis.getContainer('axisPlotLineGroupTop') || // eslint-disable-line good-practices/no-single-usage-variable\n      axis.addContainer('axisPlotLineGroupTop', createGroup('dataset-Line-group-top', axisTop, axis));\n    // axisNameGroup hold the name container\n    axisNameGroup = axis.getContainer('axisNameGroup') || // eslint-disable-line good-practices/no-single-usage-variable\n      axis.addContainer('axisNameGroup', createGroup('dataset-Name-group', axisBottom, axis));\n    // axisLineGroup hold the axis line  element\n    axisLineGroup = axis.getContainer('axisLineGroup') || // eslint-disable-line good-practices/no-single-usage-variable\n      axis.addContainer('axisLineGroup', createGroup('axis-Line-group', axisTop, axis));\n    // axisTrendGroupTop hold trendContainer top of the dataset\n    axisTrendGroupTop = axis.getContainer('axisTrendGroupTop') ||\n      axis.addContainer('axisTrendGroupTop', createGroup('dataset-Trend-group-top', axisTop, axis));\n    // axisLabelGroup hold the label container\n    axisLabelGroup = axis.getContainer('axisLabelGroup') || // eslint-disable-line good-practices/no-single-usage-variable\n      axis.addContainer('axisLabelGroup', createGroup('dataset-Label-group', axisBottom, axis));\n    // axisLabelGroup hold the label container\n    axisLabelGroupTop = axis.getContainer('axisLabelGroupTop') || // eslint-disable-line good-practices/no-single-usage-variable\n      axis.addContainer('axisLabelGroupTop', createGroup('dataset-Label-group', axisTop, axis));\n\n    axisTrendGroupBottom = axis.getContainer('axisTrendGroupBottom') || // eslint-disable-line good-practices/no-single-usage-variable\n    axis.addContainer('axisTrendGroupBottom', createGroup('dataset-Trend-group-bottom', axisBottom, axis));\n    if (!axisTrendContainerBottom) {\n      // contain trend elements on bottom of data\n      axisConfig.axisTrendContainerBottom = axisTrendContainerBottom =\n                    createGroup('dataset-axis-trend-bottom', axisTrendGroupBottom, axis);\n      // clip the container according to canvas width and height\n      axisTrendContainerBottom.attr({\n        'clip-rect': canvasLeft + ',' + canvasTop + ',' + canvasWidth +\n                    ',' + canvasHeight\n      });\n    } else {\n      // clip the container according to canvas width and height\n      axisTrendContainerBottom.attr({\n        'clip-rect': canvasLeft + ',' + canvasTop + ',' + canvasWidth + ',' + canvasHeight\n      });\n    }\n    // creating the container group for every axis there will be\n    // note : if new container added add it to hide and show\n    if (!axisContainer) {\n      // contains all the axis label\n      axisConfig.axisContainer = axisContainer = createGroup('dataset-axis', axisLabelGroup, axis);\n    }\n    if (!axisLabelContainerTop) {\n      axisConfig.axisLabelContainerTop = axisLabelContainerTop = createGroup('dataset-top-label',\n        axisLabelGroupTop, axis);\n    }\n    if (!axisAxisLineContainer) {\n      axisConfig.axisAxisLineContainer = axisAxisLineContainer = createGroup('axis-line-tick',\n        axisLineGroup, axis);\n    }\n    if (!vlineLabelContainer) {\n      axisConfig.vlineLabelContainer = vlineLabelContainer = createGroup('axis-vline-label',\n        axisLineGroup, axis);\n    }\n    if (!axisBandContainer) {\n      // contain axis band\n      axisConfig.axisBandContainer = axisBandContainer = createGroup('dataset-axis-bands',\n        axisBandGroup, axis);\n      axisBandContainer.attr({\n        'clip-rect': canvasLeft + ',' + canvasTop + ',' + canvasWidth +\n                    ',' + canvasHeight\n      });\n    } else {\n      // clip the container according to canvas width and height\n      animElems.push({\n        el: axisBandContainer,\n        attrs: {\n          'clip-rect': canvasLeft + ',' + canvasTop + ',' + canvasWidth + ',' + canvasHeight\n        },\n        animType: 'linear',\n        animConfig: [{\n          syncWith: 'initial',\n          start: 0,\n          initial: 1\n        }]\n      });\n    }\n    if (!axisPlotLineContainer) {\n      // contain all plot lines\n      axisConfig.axisPlotLineContainer = axisPlotLineContainer = createGroup('dataset-axis-lines',\n        axisPlotLineGroup, axis);\n      // clip the container according to canvas width and height\n      axisPlotLineContainer.attr({\n        'clip-rect': plotLineClipRect\n      });\n    } else {\n      // clip the container according to canvas width and height\n      animElems.push({\n        el: axisPlotLineContainer,\n        attrs: {\n          'clip-rect': plotLineClipRect\n        },\n        animType: 'linear',\n        animConfig: [{\n          syncWith: 'initial',\n          start: 0,\n          initial: 1\n        }]\n      });\n    }\n    if (!axisPlotLineContainerTop) {\n      // contain all plot lines\n      axisConfig.axisPlotLineContainerTop = axisPlotLineContainerTop =\n                    createGroup('dataset-axis-lines-top', axisPlotLineGroupTop, axis);\n      // clip the container according to canvas width and height\n      axisPlotLineContainerTop.attr({\n        'clip-rect': plotLineClipRect\n      });\n    } else {\n      // clip the container according to canvas width and height\n      animElems.push({\n        el: axisPlotLineContainerTop,\n        attrs: {\n          'clip-rect': plotLineClipRect\n        },\n        animType: 'linear',\n        animConfig: [{\n          syncWith: 'initial',\n          start: 0,\n          initial: 1\n        }]\n      });\n    }\n    if (!axisTrendContainerTop) {\n      // contain trend elements on top of data\n      axisConfig.axisTrendContainerTop = axisTrendContainerTop = createGroup('dataset-axis-trend-top',\n        axisTrendGroupTop, axis);\n      // clip the container according to canvas width and height\n      axisTrendContainerTop.attr({\n        'clip-rect': canvasLeft + ',' + canvasTop + ',' + canvasWidth +\n                    ',' + canvasHeight\n      });\n    } else {\n      animElems.push({\n        el: axisTrendContainerTop,\n        attrs: {\n          'clip-rect': canvasLeft + ',' + canvasTop + ',' + canvasWidth + ',' + canvasHeight\n        },\n        animType: 'linear',\n        animConfig: [{\n          syncWith: 'initial',\n          start: 0,\n          initial: 1\n        }]\n      });\n    }\n    if (!axisTrendLabelContainer) {\n      // contain trend label elements\n      axisConfig.axisTrendLabelContainer = axisTrendLabelContainer =\n                    createGroup('dataset-axis-trend-label', axisTrendGroupTop, axis);\n    }\n    if (!axisNameContainer) {\n      // contain the axis name\n      axisConfig.axisNameContainer = axisNameContainer = createGroup('dataset-axis-name',\n        axisNameGroup, axis);\n    }\n    if (!axisAxisLineContainerBottom) {\n      axisConfig.axisAxisLineContainerBottom = axisAxisLineContainerBottom =\n                createGroup('axis-line-tick-bottom', axisBottom, axis);\n    }\n\n    // On zoom condition\n    if ((viewPortRatio.scaleX && viewPortRatio.scaleY) && (viewPortRatio.scaleX !== viewPortConfig.scaleX ||\n                viewPortRatio.scaleY !== viewPortConfig.scaleY)) {\n      viewPortRatio.scaleX = viewPortConfig.scaleX;\n      viewPortRatio.scaleY = viewPortConfig.scaleY;\n\n      axis._drawComponents();\n    } else {\n      // On pan condition\n      // while panning no need to clip only transform accordingly\n      if (isVertical) {\n        // dy is the amount of the dataset transform vertically\n        dy = originY - (viewPortConfig.y * viewPortConfig.scaleY);\n        vlineLabelContainer.transform('t0,' + dy);\n        axisContainer.transform('t0,' + dy);\n        axisLabelContainerTop.transform('t0,' + dy);\n        axisPlotLineContainer.transform('t0,' + dy);\n        axisPlotLineContainerTop.transform('t0,' + dy);\n        axisBandContainer.transform('t0,' + dy);\n        axisTrendContainerTop.transform('t0,' + dy);\n        axisTrendContainerBottom.transform('t0,' + dy);\n      } else {\n        // dx is the amount of the dataset transform horizontally\n        dx = originX - (viewPortConfig.x * viewPortConfig.scaleX);\n        vlineLabelContainer.transform('t' + dx + ',0');\n        axisContainer.transform('t' + dx + ',0');\n        axisLabelContainerTop.transform('t' + dx + ',0');\n        axisPlotLineContainer.transform('t' + dx + ',0');\n        axisPlotLineContainerTop.transform('t' + dx + ',0');\n        axisBandContainer.transform('t' + dx + ',0');\n        axisTrendContainerTop.transform('t' + dx + ',0');\n        axisTrendContainerBottom.transform('t' + dx + ',0');\n      }\n      // draw the axis elements\n      axis._drawComponents();\n    }\n\n    axis.addExtEventListener('animationcomplete', function () {\n      limitUpdaters && limitUpdaters.forEach(_drawLimitUpdater);\n    }, axis.getFromEnv('animationmanager'));\n\n    axis.addToEnv('tempAxis', {\n      canvasHeight: axis.config.canvas.canvasHeight,\n      canvasWidth: axis.config.canvas.canvasWidth,\n      canvasLeft: axis.config.canvas.canvasLeft,\n      canvasRight: axis.config.canvas.canvasRight,\n      canvasBottom: axis.config.canvas.canvasBottom,\n      canvasTop: axis.config.canvas.canvasTop,\n\n      visibleRange: axis.getVisibleConfig(),\n      visibleLength: axis.getVisibleLength(),\n\n      axisLength: axis.config.axisDimention.axisLength,\n      axisOpposite: axis.config.axisDimention.opposite,\n      axisY: axis.config.axisDimention.y,\n      axisX: axis.config.axisDimention.x,\n\n      axisRangeMin: axis.config.axisRange.min,\n      axisRangeMax: axis.config.axisRange.max,\n      axisTickInterval: axis.config.axisRange.tickInterval,\n\n      axisIsReverse: axis.config.isReverse,\n      axisIsVertical: axis.config.isVertical,\n      axisHasBreakPoints: axis.config.hasBreakPoints,\n\n      viewPortScaleY: axis.getFromEnv('chart').config.viewPortConfig.scaleY,\n      viewPortY: axis.getFromEnv('chart').config.viewPortConfig.y,\n      viewPortScaleX: axis.getFromEnv('chart').config.viewPortConfig.scaleX,\n      viewPortX: axis.getFromEnv('chart').config.viewPortConfig.x,\n\n      chartHeight: axis.getFromEnv('chart').config.canvasHeight,\n      chartWidth: axis.getFromEnv('chart').config.canvasWidth,\n      chartLeft: axis.getFromEnv('chart').config.canvasLeft,\n      chartRight: axis.getFromEnv('chart').config.canvasRight,\n      chartBottom: axis.getFromEnv('chart').config.canvasBottom,\n      chartTop: axis.getFromEnv('chart').config.canvasTop,\n\n      pvr: axis.config.pvr,\n      refVal: axis.config.refVal,\n      refVisibleVal: axis.config.refVisibleVal\n    });\n  }\n\n  getBreakPoints () {\n    var axisConfig = this.config;\n\n    if (axisConfig.hasBreakPoints) {\n      return axisConfig.breakPoints;\n    }\n    return false;\n  }\n\n  /**\n   * Function returning values for respective pixel passed\n   * @param {number} pixel the pixel value for which the (X or Y) value is required\n   * @param {Object} options An object which indicates whether values should be w.r.t. the visible range\n   * @return {number} Value for which the pixel is passed\n   */\n  getValue (pixel, options) {\n    var axis = this,\n      axisConfig = axis.config,\n      wrtVisible = options && options.wrtVisible, // eslint-disable-line good-practices/no-single-usage-variable\n      refVal = wrtVisible ? axisConfig.refVisibleVal : axisConfig.refVal; // eslint-disable-line good-practices/no-single-usage-variable\n\n    return refVal + ((pixel - axisConfig.refPx) / axis.config.pvr);\n  }\n\n  /**\n   * Returns the difference between the visible max value and the visible min value\n   * @return {number} The visible range\n   */\n  getVisibleLength () {\n    var limit = this.getVisibleConfig();\n\n    return Math.abs(limit.maxValue - limit.minValue);\n  }\n\n  /**\n   * Function to shift the axis drawing\n   * @param {number} _startPad start padding in values\n   * @param {number} _endPad end Padding in values\n   */\n  setAxisPadding (_startPad = 0, _endPad = 0) {\n    var axis = this,\n      axisConfig = axis.config,\n      startPad = _startPad,\n      endPad = _endPad;\n\n    startPad = axisConfig.startPad = Math.max(axisConfig.startPad, startPad);\n    endPad = axisConfig.endPad = Math.max(axisConfig.endPad, endPad);\n\n    if (axisConfig.oriCatLen === 0) {\n      if (startPad === 0) {\n        startPad = 0.5;\n      }\n      if (endPad === 0) {\n        endPad = 0.5;\n      }\n    }\n    if (axisConfig.hasCategory) {\n      if (axisConfig.oriCatLen >= 0) {\n        axis.setAxisRange({\n          max: axisConfig.oriCatLen + endPad,\n          min: -startPad\n        });\n      }\n    } else {\n      if (axisConfig.originalMax && axisConfig.originalMin) {\n        axis.setDataLimit(axisConfig.originalMax, axisConfig.originalMin);\n      }\n    }\n  }\n\n  /**\n   * Function to set the axis config from (used for axis configuration) out side.\n   * @param {Object} data Axis config object the values to be changed\n   */\n  setAxisConfig (data) {\n    var axisConfig = this.config, // eslint-disable-line good-practices/no-single-usage-variable\n      prop;\n\n    for (prop in data) {\n      if (data.hasOwnProperty(prop)) {\n        axisConfig[prop] = data[prop];\n      }\n    }\n  }\n\n  /**\n   * Function to get the axis config.\n   * @param {string} name Name of the configuration\n   * @return {any} Value of the configuration\n   */\n  getAxisConfig (name) {\n    var axisConfig = this.config;\n    if (name) {\n      return axisConfig[name];\n    }\n    return axisConfig;\n  }\n\n  /**\n   * Function to set the axis range from (used for axis drawing) out side.\n   * @param {Object} data Axis range object the values to be changed\n   */\n  setAxisRange (data) {\n    // TODO: Janitorial service\n    var axis = this,\n      axisConfig = axis.config,\n      axisRange = axisConfig.axisRange,\n      tempAxis,\n      tempAxisRange,\n      prop;\n\n    for (prop in data) {\n      // TODO: Please review this condition. The commented code was present previously.\n      // Removing it seems to have no noticable effect. Instead everything seems to work even better.\n      if (data.hasOwnProperty(prop)/* && axisRange[prop] !== undefined */) {\n        axisRange[prop] = data[prop];\n      }\n    }\n\n    if (axisConfig.isReverse) {\n      axisConfig.refVal = axisRange.max;\n    } else {\n      axisConfig.refVal = axisRange.min;\n    }\n\n    // axis.config.refVal must be updated before calling setVisibleConfig()\n    // otherwise incorrect axis translation is applied when data limit is changed on update\n\n    axis.setVisibleConfig(axisRange.min, axisRange.max);\n\n    if (axis.getFromEnv('tempAxis')) {\n      tempAxis = axis.getFromEnv('tempAxis');\n      tempAxisRange = {\n        max: tempAxis.axisRangeMax,\n        min: tempAxis.axisRangeMin,\n        tickInterval: tempAxis.axisTickInterval\n      };\n\n      if (tempAxisRange.max !== axisRange.max ||\n          tempAxisRange.min !== axisRange.min ||\n          tempAxisRange.tickInterval !== axisRange.tickInterval) {\n        // Something has changed in the axis.\n        // This flag is used to register its animation as an axis.\n        axisConfig.rangeChanged = true;\n      } else {\n        // Nothing has changed in the axis.\n        axisConfig.rangeChanged = false;\n      }\n    }\n  }\n\n  /**\n   * Function set the starting point for drawing the axis and the axis drawing width/height\n   * @param {Object} data Contains the x, y, length and whether the axis is drawn on the opposite side\n   */\n  setAxisDimention (data) {\n    var axis = this,\n      axisConfig = axis.config,\n      chartConfig = axis.getFromEnv('chart').config,\n      axisDimention = axisConfig.axisDimention || (axisConfig.axisDimention = {}),\n      tempAxis;\n\n    axisDimention.opposite = pluckNumber(data.opposite, axisDimention.opposite);\n    axisDimention.x = pluckNumber(data.x, chartConfig.canvasLeft, axisDimention.x);\n    axisDimention.y = pluckNumber(data.y, chartConfig.canvasTop, axisDimention.y);\n    axisDimention.axisLength = pluckNumber(data.axisLength, axisDimention.axisLength);\n\n    if (axisConfig.isVertical) {\n      axisConfig.refPx = axisDimention.y;\n    } else {\n      axisConfig.refPx = axisDimention.x;\n    }\n\n    axis.getPVR();\n\n    if (axis.getFromEnv('tempAxis')) {\n      tempAxis = axis.getFromEnv('tempAxis');\n      if (tempAxis.axisLength !== axisDimention.axisLength ||\n        tempAxis.axisOpposite !== axisDimention.opposite ||\n        tempAxis.axisY !== axisDimention.y ||\n        tempAxis.axisX !== axisDimention.x) {\n        // The axis dimensions have changed.\n        // This flag is used to register its animation as an axis.\n        axisConfig.dimensionChanged = true;\n      } else {\n        // No dimensions have changed.\n        // Its animations will be registered as a plot.\n        axisConfig.dimensionChanged = false;\n      }\n    }\n  }\n\n  /**\n   * Function set the div interval and set the max and min value used by axis\n   * This function is called externally by the chart to adjust or define the axis limits\n   * @param {number} _max maximum limit of axis from the data\n   * @param {number} _min minimum limit of axis from the data\n   */\n  setDataLimit (_max, _min) {\n    var axis = this,\n      axisConfig = axis.config,\n      max = _max,\n      min = _min,\n      axisRange = axisConfig.axisRange,\n      AxisMaxValue = axisConfig.isPercent ? 100 : axisConfig.axisMaxValue,\n      AxisMinValue = axisConfig.isPercent ? 0 : axisConfig.axisMinValue,\n      numDivLines = axisConfig.numDivLines, // eslint-disable-line good-practices/no-single-usage-variable\n      setAdaptiveMin = axisConfig.setAdaptiveMin, // eslint-disable-line good-practices/no-single-usage-variable\n      adjustDiv = axisConfig.adjustDiv, // eslint-disable-line good-practices/no-single-usage-variable\n      startPad = axisConfig.startPad || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      endPad = axisConfig.endPad || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      setMinAsZero,\n      stopMaxAtZero,\n      axisLimits,\n      lines = axisConfig.trendLines || axisConfig.vTrendLines,\n      lineArr = lines && lines[0] && lines[0].line,\n      lineMin,\n      lineMax;\n    // This will check the limit of the trendlines and will set axis limits accordingly\n    lineMin = safeMin(lineArr, function _getMin (obj) { return obj.startvalue; }); // eslint-disable-line good-practices/no-single-usage-variable\n    lineMax = safeMax(lineArr, function _getMax (obj) { return obj.endvalue; }); // eslint-disable-line good-practices/no-single-usage-variable\n    min = safeMin([lineMin, min]);\n    max = safeMax([lineMax, max]);\n\n    axisConfig.originalMax = max;\n    axisConfig.originalMin = min;\n\n    max = axisConfig.isPercent ? 100 : max + endPad;\n    min = axisConfig.isPercent ? 0 : min - startPad;\n\n    setMinAsZero = stopMaxAtZero = !setAdaptiveMin; // eslint-disable-line good-practices/no-single-usage-variable\n\n    if (axisConfig.hasBreakPoints) {\n      max -= axisConfig.totalBreakAmount;\n    }\n\n    // Calling the getAxisLimits from lib to calculate the best possible div interval\n    // TODO : improve the function getAxisLimits\n    axisLimits = getAxisLimits(pluckNumber(max, AxisMaxValue),\n      pluckNumber(min, AxisMinValue), AxisMaxValue, AxisMinValue, stopMaxAtZero,\n      setMinAsZero, numDivLines, adjustDiv);\n\n    // Saving the data to the axis\n    axis.setAxisRange({\n      max: Number(toPrecision(axisLimits.Max, 10)),\n      min: Number(toPrecision(axisLimits.Min, 10)),\n      tickInterval: Number(toPrecision(axisLimits.divGap, 10))\n    });\n    axis._adjustNumberFormatter(axisRange.tickInterval);\n    // check for zero value to break infinite loop\n    if (axisRange.tickInterval === 0) {\n      axisRange.tickInterval = 1;\n    }\n  }\n\n  /**\n   * Sets the visible range of the axis. Also sets axis's reference values and re-calculates PVR.\n   * @param  {number} minValue The minimum value of the area to be visible\n   * @param  {number} maxValue The maximum value of the area to be visible\n   * @return {boolean} Whether the visible range of the axis was successfully set or not\n   */\n  setVisibleConfig (minValue, maxValue) {\n    var axis = this,\n      axisConfig = axis.config,\n      range = axisConfig.axisRange,\n      scrollType = axis.getScrollType(),\n      axisScroll,\n      translationStr,\n      zoom,\n      maxZoomLimit = axisConfig.maxZoomLimit;\n\n    // TODO: Add sanity checks for max greater than min etc\n    if (minValue > maxValue) {\n      return false;\n    }\n\n    zoom = (range.max - range.min) / (maxValue - minValue); // eslint-disable-line good-practices/no-single-usage-variable\n\n    if (maxZoomLimit && zoom > maxZoomLimit) {\n      return false;\n    }\n\n    axisConfig.minVisibleValue = minValue;\n    axisConfig.maxVisibleValue = maxValue;\n\n    if (axisConfig.isReverse) {\n      axisConfig.refVisibleVal = maxValue;\n    } else {\n      axisConfig.refVisibleVal = minValue;\n    }\n\n    if (scrollType === 'always') {\n      axis.setScrollEnabled(true);\n    } else if (scrollType === 'smart') {\n      if (axis._isZoomed()) {\n        axis.setScrollEnabled(true);\n      } else {\n        axis.setScrollEnabled(false);\n      }\n    } else if (scrollType === 'none' && axis.isScrollEnabled()) {\n      axis.setScrollEnabled(false);\n    }\n\n    axis.getPVR();\n\n    axis.fireEvent('visiblerangeset', {\n      minValue: axisConfig.minVisibleValue,\n      maxValue: axisConfig.maxVisibleValue\n    });\n    if (axis.getFromEnv('tempAxis')) {\n      axis.asyncDraw();\n      axisScroll = -axis.getTranslation();\n      if (axisConfig.isVertical) {\n        translationStr = ['T', 0, ',', axisScroll].join('');\n      } else {\n        translationStr = ['T', axisScroll, ',', 0].join('');\n      }\n      axisConfig.axisContainer.attr({\n        transform: translationStr\n      });\n      axisConfig.axisBandContainer.attr({\n        transform: translationStr\n      });\n      axisConfig.axisPlotLineContainer.attr({\n        transform: translationStr\n      });\n      // axisConfig.axisTrendContainerBottom.attr({\n      //   transform: translationStr\n      // });\n      axisConfig.axisTrendContainerTop.attr({\n        transform: translationStr\n      });\n    }\n    // return info that value was successfully set\n    return true;\n  }\n\n  /**\n   * Gets the visible min and max values from the axis\n   * @return {Object} Contains minValue and maxValue, the min and max values of the visible area\n   */\n  getVisibleConfig () {\n    var axisConfig = this.config;\n\n    return {\n      minValue: axisConfig.minVisibleValue,\n      maxValue: axisConfig.maxVisibleValue\n    };\n  }\n\n  /**\n   * Function used to calculate the pixel to value ratio and return it\n   * @return {number} The pixel to value ratio\n   */\n  getPVR () {\n    var axis = this,\n      axisConfig = axis.config,\n      visibleConfig = axis.getVisibleConfig(),\n      visibleSpan = visibleConfig.maxValue - visibleConfig.minValue, // eslint-disable-line good-practices/no-single-usage-variable\n      axisLength = (axisConfig.axisDimention || {}).axisLength, // eslint-disable-line good-practices/no-single-usage-variable\n      pvr = axisLength / visibleSpan;\n\n    if (pvr) {\n      if (axisConfig.isReverse) {\n        axisConfig.pvr = -pvr;\n      } else {\n        axisConfig.pvr = pvr;\n      }\n    }\n\n    return axisConfig.pvr;\n  }\n\n  /**\n   * Function returning the pixel for respective value passed\n   * @param {number} _value   The value for which the pixel value is required\n   * @param {Object} options The object containing information about whether the axis should\n   *                         return values w.r.t. the old axis OR w.r.t. the visible range\n   * @return {number} The pixel corresponding to the given value\n   */\n  getPixel (_value, options) {\n    var axis = this,\n      axisConfig = axis.config,\n      value = _value,\n      wrtVisible = options && options.wrtVisible,\n      refVal = wrtVisible ? axisConfig.refVisibleVal : axisConfig.refVal, // eslint-disable-line good-practices/no-single-usage-variable\n      tempAxis = axis.getFromEnv('tempAxis'),\n      pvr = axisConfig.pvr * axis.getFromEnv('chartConfig').viewPortConfig.scaleX;\n    // Calculate the pixel to value ratio\n    if ((options && options.preValue) && tempAxis) {\n      refVal = wrtVisible ? tempAxis.refVisibleVal : tempAxis.refVal;\n      pvr = axis.getOldPVR();\n    }\n\n    if (!pvr) {\n      return 0;\n    }\n\n    if (axisConfig.hasBreakPoints) {\n      value = axis._getRelativeBreakValue(value);\n    }\n    return toPrecision((axisConfig.refPx + ((value - refVal) * pvr)), 2);\n  }\n\n  /**\n   * Function returning limit of the axis\n   * @return {Object} ({min:number,max: number}) return an object with axis limits as property\n   */\n  getLimit () {\n    var axisRange = this.config.axisRange;\n\n    return {\n      min: axisRange.min,\n      max: axisRange.max,\n      tickInterval: axisRange.tickInterval\n    };\n  }\n\n  /**\n   * Gets the pixel to value ratio with respect to the saved axis\n   * @return {number} The pvr w.r.t. the old axis\n   */\n  getOldPVR () {\n    var tempAxis = this.getFromEnv('tempAxis');\n    return tempAxis ? tempAxis.pvr : this.config.pvr;\n  }\n\n  /**\n   * Hides the axis components\n   */\n  hide () {\n    var axisConfig = this.config;\n\n    if (!axisConfig.axisContainer) {\n      return;\n    }\n    axisConfig.axisLabelContainerTop.hide();\n    axisConfig.axisContainer.hide();\n    axisConfig.axisPlotLineContainer.hide();\n    axisConfig.axisPlotLineContainerTop.hide();\n    axisConfig.axisBandContainer.hide();\n    axisConfig.axisNameContainer.hide();\n    axisConfig.axisTrendContainerTop.hide();\n    axisConfig.axisTrendContainerBottom.hide();\n    axisConfig.axisTrendLabelContainer.hide();\n    axisConfig.axisAxisLineContainer.hide();\n    axisConfig.axisAxisLineContainerBottom.hide();\n  }\n\n  /**\n   * Show the axis components\n   */\n  show () {\n    var axisConfig = this.config;\n\n    if (!axisConfig.axisContainer) {\n      return;\n    }\n    axisConfig.axisLabelContainerTop.show();\n    axisConfig.axisContainer.show();\n    axisConfig.axisPlotLineContainer.show();\n    axisConfig.axisPlotLineContainerTop.show();\n    axisConfig.axisBandContainer.show();\n    axisConfig.axisNameContainer.show();\n    axisConfig.axisTrendContainerTop.show();\n    axisConfig.axisTrendContainerBottom.show();\n    axisConfig.axisTrendLabelContainer.show();\n    axisConfig.axisAxisLineContainer.show();\n    axisConfig.axisAxisLineContainerBottom.show();\n  }\n\n  /**\n   * Returns the amount by which the visible window is translated with respect to the axis'\n   * reference point\n   * @return {number} The translation amount\n   */\n  getTranslation () {\n    var axis = this,\n      axisConfig = axis.config;\n\n    return axis.getPixel(axisConfig.refVisibleVal) - axisConfig.refPx;\n  }\n\n  /**\n   * Invokes createScrollBar() and sets a configuration parameter to enable the scrollbar\n   * @param  {boolean} bool Whether scrolling is enabled or not\n   */\n  setScrollEnabled (bool) {\n    var axis = this;\n    axis.config.scrollEnabled = bool;\n    if (bool) {\n      axis.getFromEnv('chart')._createToolBoxGantt();\n      axis.getFromEnv('tempAxis') && axis.asyncDraw();\n    } else {\n      axis._disposeScrollBar();\n    }\n  }\n\n  /**\n   * Returns the current status of the scroll bar\n   * @return {boolean} Whether scrolling is enabled or disabled\n   */\n  isScrollEnabled () {\n    return this.config.scrollEnabled;\n  }\n\n  /** Exception for Gantt chart**/\n  manageProcessScroll (scroll) {\n    var axis = this,\n      axisConfig = axis.config,\n      spaceTaken = axisConfig.totalWidth || 0,\n      totalVisiblelWidth = axisConfig.totalVisiblelWidth,\n      translateX;\n\n    if (spaceTaken > totalVisiblelWidth) {\n      translateX = (spaceTaken - totalVisiblelWidth) * (1 - scroll);\n      axis.translateAxis(translateX, UNDEF);\n    }\n  }\n  /** Exception for Gantt chart**/\n  translateAxis (x, y) {\n    var axis = this,\n      axisConfig = axis.config,\n      ganttPlotLineContainer = axis.getContainer('ganttPlotLineContainer'),\n      ganttPlotHoverBandContainer = axis.getContainer('ganttPlotHoverBandContainer'),\n      lastTranslate = axisConfig.lastTranslate || (axisConfig.lastTranslate = {x: 0, y: 0}),\n      ganttLabelContainer = axis.getContainer('labelContainer'),\n      ganttHeaderContainer = axis.getContainer('headerContainer'),\n      hotContainer = axis.getContainer('hotContainer'),\n      dx,\n      dy;\n\n    dx = x !== UNDEF ? x - lastTranslate.x : 0;\n    dy = y !== UNDEF ? y - lastTranslate.y : 0;\n    lastTranslate.x = x !== UNDEF ? x : lastTranslate.x;\n    lastTranslate.y = y !== UNDEF ? y : lastTranslate.y;\n\n    ganttLabelContainer && ganttLabelContainer.translate(dx, dy);\n    ganttHeaderContainer && ganttHeaderContainer.translate(dx, dy);\n\n    axisConfig.labelContainer && axisConfig.labelContainer.translate(dx, dy);\n    hotContainer && hotContainer.translate(dx, dy);\n    axisConfig.headerContainer && axisConfig.headerContainer.translate(dx, 0);\n    if (axisConfig.isVertical) {\n      ganttPlotLineContainer && ganttPlotLineContainer.translate(0, dy);\n      ganttPlotHoverBandContainer && ganttPlotHoverBandContainer.translate(0, dy);\n    } else {\n      ganttPlotLineContainer && ganttPlotLineContainer.translate(dx, 0);\n      ganttPlotHoverBandContainer && ganttPlotHoverBandContainer.translate(dx, 0);\n      axis.setAxisConfig({\n        animateAxis: false\n      });\n      axisConfig.drawTrendLines && axis._drawTrendLine();\n      axis.setAxisConfig({\n        animateAxis: true\n      });\n    }\n  }\n  /** Exception for Gantt chart**/\n  resetTransletAxis () {\n    var axis = this,\n      axisConfig = axis.config,\n      ganttLabelContainer = axis.getContainer('labelContainer'),\n      ganttHeaderContainer = axis.getContainer('headerContainer'),\n      hotContainer = axis.getContainer('hotContainer'),\n      transformAttr;\n\n    transformAttr = {\n      transform: 't0,0'\n    };\n    axisConfig.lastTranslate = { x: 0, y: 0 };\n    ganttLabelContainer && ganttLabelContainer.attr(transformAttr);\n    ganttHeaderContainer && ganttHeaderContainer.attr(transformAttr);\n    axisConfig.labelContainer && axisConfig.labelContainer.attr(transformAttr);\n    axisConfig.headerContainer && axisConfig.headerContainer.attr(transformAttr);\n    axisConfig.ganttPlotLineContainer && axisConfig.ganttPlotLineContainer.attr(transformAttr);\n    axisConfig.ganttPlotHoverBandContainer && axisConfig.ganttPlotHoverBandContainer.attr(transformAttr);\n    hotContainer && hotContainer.attr(transformAttr);\n  }\n}\n\nexport default CartesianAxis;\nexport { _drawScrollBar, getCrispPath };\n","let fadeIn = () => {\n  return [{\n    initialAttr: {\n      opacity: 0\n    },\n    finalAttr: {\n      opacity: 1\n    },\n    slot: 'axis',\n    startEnd: {\n      start: 0,\n      end: 0.3\n    }\n  }];\n};\nexport default {\n  'initial.axis.GanttProcess': () => {\n    return {\n      'path.appearing': fadeIn,\n      'rect.appearing': fadeIn,\n      'text.appearing': fadeIn\n    };\n  },\n  'initial.axis.GanttTime': () => {\n    return {\n      'path.appearing': fadeIn,\n      'rect.appearing': fadeIn,\n      'text.appearing': fadeIn\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }], complexity: 'off' */\nimport GanttCommonAxis, { extractAttribToEnd } from './gantt-common';\nimport { pluck, pluckNumber, getDashStyle, extend2, parseUnsafeString, setLineHeight, convertColor,\n  toPrecision, ONESTRING, getValidValue, parseTooltext, preDefStr } from '../lib';\nconst DEFAULT_DASH_STYLE = 'none',\n  TRANSFORM = 't0,0',\n  PXSTRING = 'px';\n\nlet UNDEF,\n  DASH_DEF = 'none',\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_END = preDefStr.POSITION_END;\n/**\n * Function is called internally by the axis class draw function to draw the axis trend line and zone\n * @param {Object} axis the axis\n */\nfunction prepareTrends (axis) {\n  var axisConfig = axis.config,\n    isVertical = axisConfig.isVertical,\n    isOpposit = axisConfig.isOpposit,\n    animationManager = axis.getFromEnv('animationManager'),\n    axisIndex = axisConfig.axisIndex,\n    chartAttr = axis.getFromEnv('chart-attrib'),\n    numberFormatter = axis.getFromEnv('number-formatter'),\n    axisRange = axisConfig.axisRange,\n    max = axisRange.max,\n    min = axisRange.min,\n    maxPx,\n    minPx,\n    style = axisConfig.trend.trendStyle,\n    axisPadding = axisConfig.labelPadding,\n    axisTrendLabelContainer = axisConfig.axisTrendLabelContainer,\n    css = {\n      fontFamily: style.fontFamily,\n      fontSize: style.fontSize,\n      lineHeight: style.lineHeight,\n      fontWeight: style.fontWeight,\n      fontStyle: style.fontStyle\n    },\n    vtrendlines = axisConfig.vTrendLines,\n    trendlines = axisConfig.trendLines,\n    checkForLimit = true,\n    drawTrendLabels = axisConfig.drawTrendLabels,\n    axisDimention = axisConfig.axisDimention || {},\n    i,\n    iLim,\n    j,\n    jLen,\n    toolText,\n    chartConfig = axis.getFromEnv('chartConfig'),\n    canvas = axis.getFromEnv('chart').getChildren('canvas')[0],\n    canvasBottom = canvas.config.canvasBottom || chartConfig.canvasBottom,\n    canvasLeft = canvas.config.canvasLeft || chartConfig.canvasLeft,\n    canvasRight = canvas.config.canvasRight || chartConfig.canvasRight,\n    trendlabels = [],\n    trendLabelElement,\n    comTrendLines,\n    isTrendZone,\n    axisDrawingAttrObj,\n    axisTextAttrObj,\n    trendObj,\n    text,\n    valueOnRight,\n    startValue,\n    endValue,\n    startValuePixel,\n    endValuePixel,\n    strokeWidth,\n    fixedTrendLabelPos,\n    fixedTrendLabelPosRight,\n    NFMethodName,\n    // get the visible range\n    getLimit = axis.getVisibleConfig(),\n    trendLabelText = axis.getGraphicalElement('trendlabels') || [];\n  // hide the trend label text\n  for (i = 0; i < trendLabelText.length; i++) {\n    trendLabelText[i].remove();\n  }\n\n  if (axisConfig.hasBreakPoints) {\n    getLimit.minValue = axis._getRealBreakValue(getLimit.minValue);\n    getLimit.maxValue = axis._getRealBreakValue(getLimit.maxValue);\n  }\n  checkForLimit = axis._isZoomed();\n  if (!checkForLimit) {\n    getLimit.minValue = min;\n    getLimit.maxValue = max;\n  } else {\n    maxPx = Math.max(axis.getPixel(getLimit.minValue, { wrtVisible: true }),\n      axis.getPixel(getLimit.maxValue, { wrtVisible: true }));\n    minPx = Math.min(axis.getPixel(getLimit.minValue, { wrtVisible: true }),\n      axis.getPixel(getLimit.maxValue, { wrtVisible: true }));\n  }\n\n  if (vtrendlines) {\n    fixedTrendLabelPos = isOpposit ? (axisDimention.opposite || canvasBottom) -\n      (axisConfig.trendBottomPadding || 0) : (axisDimention.y || canvasBottom) +\n      (axisConfig.trendBottomPadding || 0);\n  } else {\n    fixedTrendLabelPos = isOpposit ? (axisDimention.opposite || canvasLeft) + (axisPadding || 0)\n      : (axisDimention.x || canvasLeft) - (axisPadding || 0);\n    fixedTrendLabelPosRight = isOpposit ? (axisDimention.x || canvasRight) + (axisPadding || 0)\n      : (axisDimention.opposite || canvasRight) + (axisPadding || 0);\n  }\n\n  // get the trend line object\n  comTrendLines = trendlines || vtrendlines;\n  if (comTrendLines) {\n    for (j = 0, jLen = comTrendLines.length; j < jLen; j += 1) {\n      for (i = 0, iLim = comTrendLines[j].line && comTrendLines[j].line.length; i < iLim; i += 1) {\n        trendObj = comTrendLines[j].line[i];\n        NFMethodName = isVertical ? 'yAxis' : 'xAxis';\n        startValue = trendObj.startvalue || trendObj.value || 0;\n        startValue = numberFormatter.getCleanValue(pluck(trendObj.startvalue, trendObj.value, 0));\n        endValue = Number(trendObj.endvalue) || UNDEF;\n        toolText = getValidValue(parseUnsafeString(pluck(comTrendLines[j].line[i].tooltext,\n          comTrendLines[0].tooltext, axisConfig.trendlineToolText), false));\n        toolText = parseTooltext(toolText, [7, 15, 16, 17, 18, 19], {\n          startValue: startValue,\n          startDataValue: numberFormatter[NFMethodName](startValue, axisIndex),\n          endValue: endValue || startValue,\n          endDataValue: numberFormatter[NFMethodName](endValue || startValue, axisIndex),\n          axisName: axisConfig.axisName\n        }, trendObj);\n        if ((startValue > max || startValue < min) || (endValue > max || endValue < min)) {\n          continue;\n        }\n        if (vtrendlines) {\n          // y-axis\n          text = pluck(parseUnsafeString(trendObj.displayvalue), trendObj.start, '');\n          startValuePixel = axis.getPixel(axisConfig.hasBreakPoints\n            ? axis._getRelativeBreakValue(startValue) : startValue, { wrtVisible: true });\n          isTrendZone = pluckNumber(trendObj.istrendzone, axisConfig.isTrendZone, 1);\n          endValuePixel = endValue\n            ? axis.getPixel(axisConfig.hasBreakPoints\n              ? axis._getRelativeBreakValue(endValue) : endValue, { wrtVisible: true }) : 0;\n          // trend zone\n          if ((endValue !== UNDEF && endValue !== '' && endValue !== startValue) && isTrendZone) {\n            axisDrawingAttrObj = {\n              fill: convertColor(pluck(trendObj.color, axisConfig.trendlineColor),\n                pluck(trendObj.alpha, axisConfig.trendlineAlpha, 40)),\n              'stroke-width': 0\n            };\n            axisTextAttrObj = {\n              fill: convertColor(pluck(trendObj.color, style.color),\n                pluck(trendObj.valuealpha, chartAttr.trendvaluealpha, trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n              'vertical-align': POSITION_TOP,\n              'text': text,\n              'x': startValuePixel + ((endValuePixel - startValuePixel) / 2),\n              'y': fixedTrendLabelPos\n            };\n          } else {\n            // trend line\n            strokeWidth = pluckNumber(trendObj.thickness, axisConfig.trendlineThickness, 1);\n            axisDrawingAttrObj = {\n              stroke: convertColor(pluck(trendObj.color, axisConfig.trendlineColor),\n                pluck(trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n              'stroke-width': strokeWidth,\n              'stroke-dasharray': pluck(trendObj.dashed,\n                axisConfig.trendlinesAreDashed) === ONESTRING\n                ? getDashStyle(pluckNumber(trendObj.dashlen,\n                  axisConfig.trendlinesDashLen), pluckNumber(trendObj.dashgap,\n                  axisConfig.trendlinesDashGap)) : DASH_DEF\n            };\n            axisTextAttrObj = {\n              fill: convertColor(pluck(trendObj.color, style.color),\n                pluck(trendObj.valuealpha, chartAttr.trendvaluealpha, trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n              'vertical-align': POSITION_TOP,\n              'text': text,\n              'x': endValue ? endValuePixel : startValuePixel,\n              'y': fixedTrendLabelPos\n            };\n          }\n        } else if (trendlines) {\n          // x-axis\n          text = pluck(parseUnsafeString(trendObj.displayvalue), trendObj.start, '');\n          valueOnRight = pluckNumber(trendObj.valueonright, 0);\n          isTrendZone = pluckNumber(trendObj.istrendzone, axisConfig.isTrendZone, 0);\n          startValuePixel = axis.getPixel(startValue, { wrtVisible: true });\n          endValuePixel = endValue ? axis.getPixel(endValue, { wrtVisible: true }) : 0;\n          if ((endValue !== UNDEF && endValue !== '' && endValue !== startValue) &&\n                  isTrendZone) {\n            // trend zone\n            axisDrawingAttrObj = {\n              fill: convertColor(pluck(trendObj.color, axisConfig.trendlineColor),\n                pluck(trendObj.alpha, axisConfig.trendlineAlpha, 40)),\n              'stroke-width': 0\n            };\n            axisTextAttrObj = {\n              'text-anchor': valueOnRight ? POSITION_START : POSITION_END,\n              fill: convertColor(pluck(trendObj.color, style.color),\n                pluck(trendObj.valuealpha, chartAttr.trendvaluealpha, trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n              'text': text,\n              'x': valueOnRight ? fixedTrendLabelPosRight : fixedTrendLabelPos,\n              'y': startValuePixel + ((endValuePixel - startValuePixel) / 2)\n            };\n          } else {\n            // trend line\n            strokeWidth = pluckNumber(trendObj.thickness, axisConfig.trendlineThickness, 1);\n            axisDrawingAttrObj = {\n              stroke: convertColor(pluck(trendObj.color, axisConfig.trendlineColor),\n                pluck(trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n              'stroke-width': strokeWidth,\n              'stroke-dasharray': pluck(trendObj.dashed,\n                axisConfig.trendlinesAreDashed) === ONESTRING\n                ? getDashStyle(pluckNumber(trendObj.dashlen,\n                  axisConfig.trendlinesDashLen), pluckNumber(trendObj.dashgap,\n                  axisConfig.trendlinesDashGap)) : DASH_DEF\n            };\n\n            axisTextAttrObj = {\n              'text-anchor': valueOnRight ? POSITION_START : POSITION_END,\n              fill: convertColor(pluck(trendObj.color, style.color),\n                pluck(trendObj.valuealpha, chartAttr.trendvaluealpha, trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n              'text': text,\n              'x': valueOnRight ? fixedTrendLabelPosRight : fixedTrendLabelPos,\n              'y': endValue ? valueOnRight ? endValuePixel\n                : startValuePixel : startValuePixel\n            };\n          }\n          // checking if the text is out of viewport\n          if (checkForLimit && (!drawTrendLabels || axisTextAttrObj.y > maxPx ||\n                  axisTextAttrObj.y < minPx)) {\n            axisTextAttrObj.text = '';\n          }\n        }\n\n        axisTextAttrObj['text-bound'] = axisTextAttrObj.text\n          ? [style.backgroundColor, style.borderColor, style.borderThickness,\n            style.borderPadding, style.borderRadius, style.borderDash] : [];\n\n        trendLabelElement = animationManager.setAnimation({\n          el: 'text',\n          attr: axisTextAttrObj,\n          css: css,\n          container: axisTrendLabelContainer,\n          component: axis\n        }).show();\n\n        if (!(axisConfig.showTooltip && toolText)) {\n          toolText = '';\n        }\n\n        axis.addComponentInfo('trend', {\n          marker: {\n            isZone: isTrendZone,\n            startValue: startValue,\n            endValue: endValue,\n            fill: axisDrawingAttrObj.fill,\n            stroke: axisDrawingAttrObj.stroke,\n            strokeWidth: axisDrawingAttrObj['stroke-width'],\n            strokeDashArray: axisDrawingAttrObj['stroke-dasharray'],\n            shapeRendering: axisDrawingAttrObj['shape-rendering']\n          },\n          label: {\n            fill: axisTextAttrObj.fill,\n            text: text,\n            textAnchor: axisTextAttrObj['text-anchor'],\n            textBound: axisTextAttrObj['text-bound'],\n            valueOnRight: pluckNumber(trendObj.valueonright, 0),\n            toolText: toolText\n          },\n          showOnTop: pluckNumber(trendObj.showontop)\n        });\n        trendlabels.push(trendLabelElement);\n      }\n    }\n  }\n  if (trendlabels.length) {\n    axis.addGraphicalElement('trendlabels', trendlabels);\n  }\n}\n\n/**\n * Defines an axis which can map time values to pixel values for a Gantt chart.\n */\nclass GanttTimeAxis extends GanttCommonAxis {\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'GanttTimeCategory';\n  }\n\n  /**\n   * Configures the axis.\n   *\n   * @param {any} rawAttr The configuration using which the axis will configure itself\n   */\n  configure (rawAttr) {\n    let axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      jsonData = axis.getFromEnv('dataSource'),\n      colorM = chart.getFromEnv('color-manager'),\n      chartData = jsonData.chart,\n      axisAttr;\n\n    super.configure(rawAttr);\n\n    axisAttr = axisConfig.rawAttr;\n\n    // Gantt grid line properties\n    axisConfig.plotLineColor = axisConfig.lineColor = convertColor(pluck(chartData.ganttlinecolor,\n      colorM.getColor('gridColor')), pluckNumber(chartData.ganttlinealpha, 100));\n    axisConfig.plotLineThickness = axisConfig.lineThickness = pluckNumber(chartData.ganttlinethickness, 1);\n    axisConfig.plotLineDashStyle = axisConfig.lineDashStyle = pluckNumber(chartData.ganttlinedashed, 0)\n      ? getDashStyle(pluckNumber(chartData.ganttlinedashlen, 1),\n        chartData.ganttlinedashgap, axisConfig.lineThickness) : DEFAULT_DASH_STYLE;\n    axisConfig.hoverColor = pluck(chartData.categoryhoverbandcolor, chartData.hoverbandcolor,\n      colorM.getColor('gridColor'));\n    axisConfig.hoverAlpha = pluckNumber(chartData.categoryhoverbandalpha, chartData.hoverbandalpha, 30);\n    axisConfig.useHover = pluckNumber(chartData.showcategoryhoverband, chartData.showhoverband,\n      chartData.showhovereffect, 1);\n    axisConfig.usePlotHover = pluckNumber(chartData.showganttpaneverticalhoverband);\n    axisConfig.trendlinesDashLen = pluckNumber(axisAttr.trendlinesDashLen, 3);\n    axisConfig.trendlinesDashGap = pluckNumber(axisAttr.trendlinesDashGap, 3);\n\n    axisConfig.gridLineHeaderPath = '';\n    axisConfig.gridLinePath = '';\n  }\n\n  /**\n   * Sets the category on the axes\n   *\n   * @param {any} categories The categories to be set\n   */\n  setCategory (categories) {\n    let numberFormatter = this.getFromEnv('number-formatter'),\n      axisConfig = this.config,\n      startPad = axisConfig.startPad || 0,\n      endPad = axisConfig.endPad || 0,\n      catLength,\n      categoriesFinal,\n      catObj,\n      startMS,\n      endMS,\n      minTime = Infinity,\n      maxTime = -Infinity,\n      i,\n      j;\n\n    // Initialize the category object\n    axisConfig.categories = {};\n\n    // Set the category flag to true\n    if (categories) {\n      axisConfig.hasCategory = 1;\n    } else {\n      axisConfig.hasCategory = 0;\n      return;\n    }\n    // this will store the category\n    categoriesFinal = axisConfig.categories.category = extend2({}, categories);\n\n    extractAttribToEnd(categoriesFinal, {});\n\n    for (i in categoriesFinal) {\n      if (!categoriesFinal.hasOwnProperty(i) || i === '_attrib') {\n        continue;\n      }\n\n      for (j = 0, catLength = categoriesFinal[i].category.length; j < catLength; j += 1) {\n        catObj = categoriesFinal[i].category[j];\n        startMS = numberFormatter.getDateValue(catObj.start).ms;\n        endMS = numberFormatter.getDateValue(catObj.end).ms;\n\n        if (isNaN(startMS)) { /** @todo nan check without fn call */\n          startMS = UNDEF;\n        }\n        if (startMS > maxTime) { maxTime = startMS; }\n        if (startMS <= minTime) { minTime = startMS; }\n\n        if (isNaN(endMS)) { /** @todo nan check without fn call */\n          endMS = UNDEF;\n        }\n        if (endMS > maxTime) { maxTime = endMS; }\n        if (endMS <= minTime) { minTime = endMS; }\n      }\n    }\n\n    this.setAxisRange({\n      min: Number(toPrecision(minTime - startPad, 10)),\n      max: Number(toPrecision(maxTime + endPad, 10)),\n      tickInterval: Number(toPrecision(1, 10))\n    });\n  }\n\n  /**\n   * Places the axis within a given maximum height\n   *\n   * @param {number} maxHeight The maximum height within which to place the axis\n   *\n   * @return {number} The space taken up by the axis\n   */\n  placeAxis (maxHeight) {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      numberFormatter = axis.getFromEnv('number-formatter'),\n      smartLabel = axis.getFromEnv('smartLabel'),\n      labelStyle = axisConfig.labels.style,\n      vPadding = 8,\n      maxTextSize = 0,\n      spaceReturn = {\n        top: 0,\n        bottom: 0\n      },\n      spaceUsed = 0,\n      categories,\n      category,\n      i,\n      text,\n      smartLabelText,\n      j,\n      textStyle,\n      singleTextStyle,\n      jLen,\n      iLim,\n      maxTextDimention,\n      trendStyle = axisConfig.trend.trendStyle,\n      vtrendlines = axisConfig.vTrendLines,\n      useEllipsesWhenOverflow = axisConfig.useEllipsesWhenOverflow,\n      trendMaxHeight = 0,\n      trendSpaceUsed = 0,\n      trendObj,\n      axisSmartTrendValue,\n      trendHeight,\n      heightLeft;\n\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    smartLabel.setStyle({\n      fontSize: labelStyle.fontSize,\n      fontFamily: labelStyle.fontFamily,\n      lineHeight: labelStyle.lineHeight,\n      fontWeight: labelStyle.fontWeight\n    });\n\n    // Used to clip the category when chart height is very small.\n    axisConfig.maxTopSpaceAvailable = chartConfig.canvasTop;\n\n    if (axisConfig.hasCategory) {\n      categories = axisConfig.categories.category;\n      for (i in categories) {\n        if (!categories.hasOwnProperty(i) || i === '_attrib') {\n          continue;\n        }\n        maxTextSize = 0;\n        category = categories[i].category;\n        for (j in category) {\n          if (!category.hasOwnProperty(j) || j === '_attrib') {\n            continue;\n          }\n          text = category[j];\n          text.drawLabel = parseUnsafeString(text.label || text.name);\n          textStyle = text._attrib;\n          singleTextStyle = {\n            fontFamily: pluck(textStyle.fontfamily, labelStyle.fontFamily).replace(/px/i, '') +\n                    PXSTRING,\n            fontSize: pluck(textStyle.fontsize, this.computeFontSize(labelStyle.fontSizeWithUnit)),\n            fontWeight: pluck((Number(textStyle.isbold) === 1 ? 'bold' : textStyle.isbold ===\n                    UNDEF ? 'bold' : UNDEF), labelStyle.fontWeight),\n            fontStyle: pluck((textStyle.isitalic ? 'italic' : UNDEF), labelStyle.fontStyle)\n          };\n          setLineHeight(singleTextStyle);\n          smartLabel.setStyle(singleTextStyle);\n          smartLabelText = smartLabel.getOriSize(text.drawLabel);\n\n          if (smartLabelText.height > maxTextSize) {\n            maxTextDimention = smartLabelText;\n            maxTextSize = smartLabelText.height;\n          }\n        }\n        categories[i]._attrib.topPos = spaceUsed;\n        spaceUsed += maxTextDimention.height + vPadding;\n        categories[i]._attrib.bottomPos = spaceUsed;\n      }\n    }\n    heightLeft = maxHeight - spaceUsed;\n    if (axisConfig.drawTrendLines && axisConfig.drawTrendLabels && vtrendlines && axisConfig.isActive) {\n      // for trend line\n      smartLabel.setStyle({\n        fontSize: trendStyle.fontSize,\n        fontFamily: trendStyle.fontFamily,\n        lineHeight: trendStyle.lineHeight,\n        fontWeight: trendStyle.fontWeight\n      });\n      axisConfig.trendBottomPadding = -1;\n      for (j = 0, jLen = vtrendlines.length; j < jLen; j += 1) {\n        for (i = 0, iLim = vtrendlines[j].line.length; i < iLim; i += 1) {\n          trendObj = vtrendlines[j].line[i];\n          text = trendObj.origText || trendObj.displayvalue || trendObj.endvalue ||\n            trendObj.startvalue || '';\n          text = parseUnsafeString(text);\n          // if (text === (trendObj.endvalue || trendObj.startvalue)) {\n          //     text = ''+ numberFormatterFn.call(chartComponents.numberFormatter, text);\n          // }\n          trendObj.startvalue = trendObj.start && numberFormatter.getDateValue(trendObj.start).ms;\n          trendObj.endvalue = trendObj.end && numberFormatter.getDateValue(trendObj.end).ms;\n          trendObj.origText = text;\n          axisSmartTrendValue = smartLabel.getSmartText(text, chart.canvasWidth,\n            trendStyle.lineHeight, useEllipsesWhenOverflow);\n          trendHeight = axisSmartTrendValue.height + 2;\n          // checking if space available for trend label value to be drawn\n          // if not make the display value empty\n          if (heightLeft - trendHeight < 0) {\n            trendObj.displayvalue = '';\n          } else {\n            // set the display value\n            trendObj.displayvalue = axisSmartTrendValue.text;\n            trendMaxHeight = trendMaxHeight < axisSmartTrendValue.height\n              ? axisSmartTrendValue.height : trendMaxHeight;\n          }\n          // check tooltext is available which will help to draw tooltext on hover\n          if (axisSmartTrendValue.tooltext) {\n            trendObj.valueToolText = axisSmartTrendValue.tooltext;\n          } else {\n            delete trendObj.valueToolText;\n          }\n        }\n      }\n    }\n    axisConfig.totalHeight = spaceUsed;\n    if (trendMaxHeight > 0) {\n      trendSpaceUsed += trendMaxHeight + Math.abs(axisConfig.trendBottomPadding || 0);\n    }\n    spaceUsed = spaceUsed > maxHeight ? maxHeight : spaceUsed;\n    spaceReturn.top += spaceUsed;\n    spaceReturn.bottom += trendSpaceUsed;\n    chartConfig.categorySpaceUsed = spaceUsed;\n    return spaceReturn;\n  }\n\n  /**\n   * Draws the categories along the axis\n   */\n  _drawCategories () {\n    var axis = this,\n      axisConfig = axis.config,\n      axisDimention = axisConfig.axisDimention || {},\n      axisStartPosition = axisDimention.y,\n      spaceTaken = axisConfig.totalHeight || 0,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      animationManager = chart.getFromEnv('animationManager'),\n      numberFormatter = chart.getFromEnv('number-formatter'),\n      canvas = axisConfig.canvas,\n      gridArr = axisConfig.gridArr || (axisConfig.gridArr = []),\n      canvasLeft = canvas.canvasLeft || chartConfig.canvasLeft,\n      canvasTop = canvas.canvasTop || chartConfig.canvasTop,\n      canvasHeight = canvas.canvasHeight || chartConfig.canvasHeight,\n      canvasWidth = canvas.canvasWidth || chartConfig.canvasWidth,\n      axisBottomGroup = chart.getChildContainer('axisBottomGroup'),\n      i,\n      categories,\n      category,\n      elemIndex = 0,\n      j,\n      args,\n      lastRightPos,\n      labelClipHeight,\n      ganttPlotHoverBandContainerParent = axis.getContainer('ganttPlotHoverBandContainerParent'),\n      ganttPlotHoverBandContainer = axis.getContainer('ganttPlotHoverBandContainer'),\n      ganttPlotLineContainer = axis.getContainer('ganttPlotLineContainer'),\n      labelContainer = axis.getContainer('labelContainer'),\n      labelBackContainer = axis.getContainer('labelBackContainer'),\n      labelLineContainer = axis.getContainer('labelLineContainer'),\n      labelTextContainer = axis.getContainer('labelTextContainer'),\n      startms,\n      endms;\n\n    labelClipHeight = Math.min(spaceTaken, canvasTop - (axisConfig.maxTopSpaceAvailable || 0));\n    labelClipHeight = labelClipHeight > 0 ? labelClipHeight : 0;\n\n    if (!ganttPlotHoverBandContainerParent) {\n      ganttPlotHoverBandContainerParent = axis.addContainer(\n        'ganttPlotHoverBandContainerParent',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-plot-band-container-parent'\n          },\n          container: axisBottomGroup,\n          component: axis\n        })\n      );\n    }\n\n    axis.addContainer(\n      'ganttPlotHoverBandContainer',\n      animationManager.setAnimation({\n        el: ganttPlotHoverBandContainer || 'group',\n        attr: {\n          name: 'gantt-plot-band-container',\n          'clip-rect': canvasLeft + ',' + canvasTop +\n            ',' + canvasWidth + ',' + canvasHeight\n        },\n        container: ganttPlotHoverBandContainerParent,\n        component: axis\n      })\n    );\n\n    axis.addContainer(\n      'ganttPlotLineContainer',\n      animationManager.setAnimation({\n        el: ganttPlotLineContainer || 'group',\n        attr: {\n          name: 'gantt-plot-line-container',\n          'clip-rect': canvasLeft + ',' + canvasTop +\n            ',' + canvasWidth + ',' + canvasHeight,\n          transform: TRANSFORM\n        },\n        container: axisBottomGroup,\n        component: axis\n      })\n    );\n\n    labelContainer = axis.addContainer(\n      'labelContainer',\n      animationManager.setAnimation({\n        el: labelContainer || 'group',\n        attr: {\n          name: 'gantt-label-container',\n          'clip-rect': canvasLeft + ',' + (canvasTop - labelClipHeight) +\n            ',' + canvasWidth + ',' + labelClipHeight,\n          transform: TRANSFORM\n        },\n        container: axisBottomGroup,\n        component: axis\n      })\n    );\n\n    if (!labelBackContainer) {\n      labelBackContainer = axis.addContainer(\n        'labelBackContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-label-back-container'\n          },\n          container: labelContainer,\n          component: axis\n        })\n      );\n    }\n\n    if (!labelLineContainer) {\n      labelLineContainer = axis.addContainer(\n        'labelLineContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-label-line-container'\n          },\n          component: axis,\n          container: labelContainer\n        })\n      );\n    }\n\n    if (!labelTextContainer) {\n      labelTextContainer = axis.addContainer(\n        'labelTextContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'gantt-label-text-container'\n          },\n          container: labelContainer,\n          component: axis\n        })\n      );\n    }\n\n    axisConfig.gridLinePath = '';\n    axisConfig.gridLineHeaderPath = '';\n    axisConfig.hoverElemsArr = [];\n    axisConfig.labelHoverEventName = {\n      click: 'CategoryClick',\n      rollOver: 'CategoryRollOver',\n      rollOut: 'CategoryRollOut'\n    };\n\n    if (axisConfig.hasCategory) {\n      categories = axisConfig.categories.category;\n      for (i in categories) {\n        if (!categories.hasOwnProperty(i) || i === '_attrib') {\n          continue;\n        }\n        category = categories[i].category;\n        lastRightPos = UNDEF;\n        gridArr = axisConfig.gridArr = [];\n        for (j in category) {\n          startms = numberFormatter.getDateValue(category[j].start).ms;\n          endms = numberFormatter.getDateValue(category[j].end).ms;\n          if (!category.hasOwnProperty(j) || j === '_attrib' || isNaN(startms) ||\n            isNaN(endms)) {\n            continue;\n          }\n          args = {\n            elem: category[j],\n            elemIndex: elemIndex,\n            pos: elemIndex,\n            dimension: {\n              left: lastRightPos ||\n                            axis.getPixel(startms),\n              right: axis.getPixel(endms),\n              top: axisStartPosition - spaceTaken + categories[i]._attrib.topPos,\n              bottom: axisStartPosition - spaceTaken + categories[i]._attrib.bottomPos\n            },\n            type: 'category',\n            isHeader: false\n          };\n          lastRightPos = args.dimension.right;\n          axis._drawProcessAndDataTableElement(args);\n          elemIndex += 1;\n          gridArr.push({x: args.dimension.left});\n        }\n      }\n    }\n    axis._drawGridLine();\n    axis._disposeExtraProcessAndDataTableElement(elemIndex);\n  }\n\n  /**\n   * Draws all the axis components.\n   */\n  _drawComponents () {\n    let axisConfig = this.config,\n      chartConfig = this.getFromEnv('chartConfig');\n\n    this._drawCategories();\n    axisConfig.lastTranslate = {x: 0, y: 0};\n    this.translateAxis(-(chartConfig.viewPortConfig.x * chartConfig.viewPortConfig.scaleX), 0);\n    axisConfig.drawPlotlines && this._drawPlotLine();\n    prepareTrends(this);\n    axisConfig.drawTrendLines && this._drawTrendLine();\n  }\n}\n\nexport default GanttTimeAxis;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }], complexity: 'off' */\nimport Task, { extractLabelStyle, checkInvalidValue, hideFn } from './task';\nimport { extend2, parseConfiguration, getFirstValue, pluck, pluckNumber, getValidValue,\n  parseUnsafeString, parseTooltext, setLineHeight, getDarkColor, mapSymbolName,\n  getFirstColor,\n  BLANKSTRING,\n  HUNDREDSTRING } from '@fusioncharts/core/src/lib';\nimport milestoneAnimation from './milestone-gantt.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\n\nlet UNDEF,\n  FF5E5E = 'FF5E5E',\n  MIDDLE = 'middle';\n\nconst\n  /**\n   * Click event handler for milestones\n   *\n   * @param {Object} chart The chart instance which the milestone is a part of\n   *\n   * @return {Function} The function to be executed on a click\n   */\n  clickHandler = chart => function (event) {\n    var ele = this;\n    /**\n     * In `Gantt` chart, milestones are an important part of the chart as they allow you to visually\n     * depict any crucial dates on the chart.\n     * This event is fired when a milestone is clicked\n     *\n     * This event is only applicable to Gantt chart.\n     *\n     * @event FusionCharts#milestoneClick\n     *\n     * @param {string} date - The date of the milestone.\n     * @param {string} numSides - The number of sides of the milestone.\n     * @param {string} radius - The radius of the milestone.\n     * @param {string} taskId - The id of the task to which this milestone relates to.\n     * @param {string} toolText - The tooltext that is displayed when hovered over the milestone\n     * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n     * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n     * @param {number} pageX - x-coordinate of the pointer relative to the page.\n     * @param {number} pageY - y-coordinate of the pointer relative to the page.\n     * @see FusionCharts#event:milestoneRollOver\n     * @see FusionCharts#event:milestoneRollOut\n     */\n    chart.plotEventHandler(ele, event, 'MilestoneClick');\n  },\n  /**\n   * Mouse over event handler for milestones\n   *\n   * @param {Object} chart The chart instance which the milestone is a part of\n   *\n   * @return {Function} The function to be executed on a mouse over\n   */\n  rollOverHandler = chart => function (event) {\n    var ele = this,\n      dataObj = ele.data('dataObj'),\n      config = dataObj.config;\n\n    /**\n       * In `Gantt` chart, milestones are an important part of the chart as they allow you to\n       * visually depict any crucial dates on the chart.\n       * This event is fired when the pointer moves over a milestone\n       *\n       * This event is only applicable to Gantt chart.\n       *\n       * @event FusionCharts#milestoneRollOver\n       *\n       * @param {string} date - The date of the milestone.\n       * @param {string} numSides - The number of sides of the milestone.\n       * @param {string} radius - The radius of the milestone.\n       * @param {string} taskId - The id of the task to which this milestone relates to.\n       * @param {string} toolText - The tooltext that is displayed when hovered over the milestone.\n       * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n       * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n       * @param {number} pageX - x-coordinate of the pointer relative to the page.\n       * @param {number} pageY - y-coordinate of the pointer relative to the page.\n       * @see FusionCharts#event:milestoneClick\n       * @see FusionCharts#event:milestoneRollOut\n       */\n    chart.plotEventHandler(ele, event, 'MilestoneRollOver');\n\n    config.showHoverEffect && dataObj.graphics.element.attr({\n      fill: config.hoverFillColor,\n      stroke: config.hoverBorderColor,\n      'fill-opacity': config.hoverFillAlpha,\n      'stroke-opacity': config.hoverBorderAlpha\n    });\n  },\n  /**\n   * Mouse out event handler for milestones\n   *\n   * @param {Object} chart The chart instance which the milestone is a part of\n   *\n   * @return {Function} The function to be executed on a mouse out\n   */\n  rollOutHandler = chart => function (event) {\n    var ele = this,\n      dataObj = ele.data('dataObj'),\n      config = dataObj.config;\n\n    /**\n     * In `Gantt` chart, milestones are an important part of the chart as they allow you to visually\n     * depict any crucial dates on the chart.\n     * This event is fired when the pointer moves out of a milestone\n     *\n     * This event is only applicable to Gantt chart.\n     *\n     * @event FusionCharts#milestoneRollOut\n     *\n     * @param {string} date - The date of the milestone.\n     * @param {string} numSides - The number of sides of the milestone.\n     * @param {string} radius - The radius of the milestone.\n     * @param {string} taskId - The id of the task to which this milestone relates to.\n     * @param {string} toolText - The tooltext that is displayed when hovered over the milestone\n     * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n     * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n     * @param {number} pageX - x-coordinate of the pointer relative to the page.\n     * @param {number} pageY - y-coordinate of the pointer relative to the page.\n     * @see FusionCharts#event:milestoneClick\n     * @see FusionCharts#event:milestoneRollOver\n     */\n    chart.plotEventHandler(ele, event, 'MilestoneRollOut');\n\n    config.showHoverEffect && dataObj.graphics.element.attr({\n      fill: config.fillColor,\n      stroke: config.borderColor,\n      'fill-opacity': config.fillAlpha,\n      'stroke-opacity': config.borderAlpha\n    });\n  };\naddDep({\n  name: 'milestoneAnimation',\n  type: 'animationRule',\n  extension: milestoneAnimation\n});\n/**\n * Defines a Milestone dataset for a Gantt chart.\n */\nclass Milestone extends Task {\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'milestone';\n  }\n\n  /**\n   * Sets the default configurations of the dataset\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n\n    let config = this.config;\n\n    // configurations with defult values\n    config.showpercentlabel = 0;\n    config.showstartdate = 0;\n    config.showenddate = 0;\n    config.showlabels = UNDEF;\n    config.showborder = 1;\n    config.borderthickness = 1;\n    config.showHoverEffect = 1;\n    config.slackFillColor = FF5E5E;\n\n    // inherited from parent\n    config.font = BLANKSTRING;\n    config.fontcolor = BLANKSTRING;\n    config.fontsize = BLANKSTRING;\n    config.color = BLANKSTRING;\n    config.alpha = HUNDREDSTRING; // not found\n    config.bordercolor = BLANKSTRING;// not found\n    config.borderalpha = HUNDREDSTRING; // not found\n    config.hoverFillColor = BLANKSTRING;// not found\n    config.hoverFillAlpha = HUNDREDSTRING; // not found\n    config.slackHoverFillColor = 10; // not found\n    config.slackHoverFillAlpha = HUNDREDSTRING; // notfound\n  }\n\n  /**\n   * Parses and configures the dataset according to the data given by the user.\n   */\n  configureAttributes () {\n    let dataset = this,\n      config = dataset.config,\n      jsonData = dataset.getFromEnv('dataSource'),\n      userConfig = extend2(\n        {},\n        jsonData.milestones && jsonData.milestones.length\n          ? jsonData.milestones[0]\n          : jsonData.milestones || {}\n      );\n\n    parseConfiguration(userConfig, config, { milestones: true });\n\n    if (!dataset.components) {\n      dataset.components = {};\n    }\n\n    dataset._setConfigure();\n\n    dataset.setState('dirty', true);\n  }\n\n  /**\n   * Configures each data of the dataset\n   *\n   * @param {Array} newDataset The new dataset, if any\n   */\n  _setConfigure (newDataset) {\n    let dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      yAxis = chart.getChildren('yAxis')[0],\n      axisConfig = yAxis.config,\n      jsonData = dataset.getFromEnv('dataSource'),\n      JSONData = jsonData.milestones && jsonData.milestones.length\n        ? jsonData.milestones[0]\n        : jsonData.milestones || {},\n      setDataArr = newDataset || JSONData.length ? JSONData : JSONData.milestone,\n      setDataLen = setDataArr && setDataArr.length,\n      colorM = dataset.getFromEnv('color-manager'),\n      chartConfig = chart.config,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      dataStore = dataset.components.data,\n      style = chart.config.style,\n      inCanStyle = style.inCanvasStyle,\n      tasksMap = chart.components.tasksMap,\n      dataObj,\n      taskConfigObj,\n      dataConfig,\n      i,\n      processMap = axisConfig.processes.processMap,\n      processes = axisConfig.processes.process.process,\n      processName,\n      setData,\n      sides,\n      color,\n      shape,\n      depth,\n      toolText,\n      taskId,\n      labelStyle = chart.config.milestoneLabelStyle,\n      dateMs,\n      milestoneDate;\n\n    if (!dataStore) {\n      dataStore = dataset.components.data = [];\n    }\n\n    for (i = 0; i < setDataLen; i += 1) {\n      setData = setDataArr[i];\n      dataObj = dataStore[i];\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          config: {}\n        };\n      }\n\n      dataConfig = dataObj.config;\n      taskId = getFirstValue(setData.taskid, BLANKSTRING).toLowerCase();\n      shape = pluck(setData.shape, 'polygon').toLowerCase();\n\n      sides = pluckNumber(setData.numsides, 5);\n      // Restrict\n      // shape = (shape == 'star') ? shape : mapSymbolName (sides);\n      depth = 0;\n      if (shape === 'star') {\n        depth = 0.4;\n      } else {\n        shape = mapSymbolName(sides);\n        shape = mapSymbolName(sides).split('-')[0];\n      }\n\n      color = pluck(setData.color, colorM.getColor('legendBorderColor'));\n\n      toolText = getValidValue(parseUnsafeString(pluck(setData.tooltext,\n        setData.hovertext, chartConfig.milestonetooltext), false));\n\n      dateMs = numberFormatter.getDateValue(setData.date).ms;\n      milestoneDate = numberFormatter.getFormattedDate(dateMs);\n\n      if (toolText !== UNDEF && tasksMap[taskId]) {\n        taskConfigObj = tasksMap[taskId].config;\n        if (processMap[taskId]) {\n          // take process name using the processMap(stores a map for processId and process Name)\n          processName = (processMap[taskId].catObj.label || processMap[taskId].catObj.name);\n        } else {\n          processName = processes[i] && (processes[i].label || processes[i].name);\n        }\n        toolText = parseTooltext(toolText, [28, 32, 33, 34, 35, 36], {\n          date: milestoneDate,\n          taskStartDate: taskConfigObj._startDate,\n          taskEndDate: taskConfigObj._endDate,\n          taskLabel: taskConfigObj.label,\n          taskPercentComplete: taskConfigObj.percentComplete !== -1\n            ? numberFormatter.percentValue(taskConfigObj.percentComplete) : BLANKSTRING,\n          // @todo add the process name from data table once created\n          processName: processName\n        }, setData);\n      } else {\n        toolText = milestoneDate;\n      }\n\n      // style = {\n      //     fontSize: pluckNumber (setData.fontsize, chartConfig.milestonefontsize,\n      //         inCanStyle.fontSize) + PX,\n      //     fontFamily: pluck (setData.font, chartConfig.milestonefont,\n      //         inCanStyle.fontFamily),\n      //     fontWeight: pluckNumber (setData.fontbold,\n      //         chartConfig.milestonefontbold, 0) && BOLD || NORMAL,\n      //     fontStyle: pluckNumber (setData.fontitalic,\n      //         chartConfig.milestonefontitalic, 0) && ITALIC || NORMAL\n      // };\n\n      style = dataConfig.style = extractLabelStyle({\n        fontSize: setData.fontsize,\n        fontFamily: setData.font,\n        fontWeight: setData.fontbold,\n        fontStyle: setData.fontitalic\n      });\n\n      dataConfig.textColor = getFirstColor(pluck(setData.fontcolor,\n        chartConfig.milestonefontcolor, inCanStyle.color));\n\n      setLineHeight(style);\n\n      dataConfig.lineHeight = pluck(style && style.lineHeight, labelStyle && labelStyle.lineHeight);\n\n      dataConfig.numSides = sides;\n      dataConfig.startAngle = pluckNumber(setData.startangle, 90);\n      dataConfig.radius = setData.radius;\n      dataConfig.origDate = setData.date;\n      dataConfig.date = numberFormatter.getDateValue(setData.date);\n      dataConfig.fillColor = getFirstColor(color);\n      dataConfig.fillAlpha = pluckNumber(setData.fillalpha, setData.alpha, 100) * 0.01;\n      dataConfig.borderColor = getFirstColor(pluck(setData.bordercolor, color));\n      dataConfig.borderAlpha = pluckNumber(setData.borderalpha, setData.alpha, 100) * 0.01;\n      dataConfig.displayValue = parseUnsafeString(setData.label);\n      dataConfig.style = style;\n      dataConfig.hoverFillColor = getFirstColor(pluck(setData.hoverfillcolor,\n        chartConfig.milestonehoverfillcolor, getDarkColor(color, 80)));\n      dataConfig.hoverFillAlpha = pluckNumber(setData.hoverfillalpha,\n        chartConfig.milestonehoverfillalpha, setData.fillalpha,\n        setData.alpha, 100) * 0.01;\n      dataConfig.hoverBorderColor = getFirstColor(pluck(setData.hoverbordercolor,\n        chartConfig.milestonehoverbordercolor,\n        getDarkColor(pluck(setData.bordercolor, color), 80)));\n      dataConfig.hoverBorderAlpha = pluckNumber(setData.hoverborderalpha,\n        chartConfig.milestonehoverborderalpha, setData.borderalpha,\n        setData.alpha, 100) * 0.01;\n      dataConfig.showHoverEffect = pluckNumber(setData.showhovereffect,\n        chartConfig.showmilestonehovereffect, chartConfig.showhovereffect, 1);\n\n      dataConfig.depth = depth;\n      dataConfig.taskId = taskId;\n      dataConfig.borderThickness = pluckNumber(setData.borderthickness, 1);\n      dataConfig.link = setData.link;\n      dataConfig.toolText = toolText;\n    }\n\n    if (pluckNumber(JSONData.visible, 1)) {\n      dataset.setState('visible', true);\n    } else {\n      dataset.setState('visible', false);\n    }\n  }\n\n  /**\n   * Draws labels on the milestones.\n   */\n  drawLabel () {\n    let dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      animationManager = dataset.getFromEnv('animationManager'),\n      tasksMap = chart.components.tasksMap,\n      config,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      dataLabelContainer = dataset.getContainer('milestoneLabelContainer'),\n      eventArgs,\n      dataObj,\n      i,\n      labelElementDummy,\n      labelElement,\n      len,\n      graphics,\n      labelAttrs,\n      taskObj,\n      dataStore = dataset.components.data,\n      style;\n\n    for (i = 0, len = dataStore.length; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj.config;\n      taskObj = tasksMap[config.taskId];\n      graphics = dataObj.graphics;\n      labelElementDummy = graphics.labelElement;\n      eventArgs = config.eventArgs;\n      labelAttrs = config._labelAttrs;\n      style = config.style;\n      if (config.displayValue !== BLANKSTRING && config.displayValue !== UNDEF && taskObj) {\n        labelElement = graphics.labelElement = animationManager.setAnimation({\n          el: labelElementDummy || 'text',\n          attr: labelAttrs,\n          container: dataLabelContainer,\n          component: dataset\n        });\n        // Drawing of milestone label element\n        if (!labelElementDummy) {\n          labelElement.on('fc-click', clickHandler(chart))\n            .hover(rollOverHandler(chart), rollOutHandler(chart));\n        } else {\n          labelElement.removeCSS();\n          labelElement.show();\n        }\n        labelElement.css(style);\n        toolTipController.enableToolTip(labelElement, config.toolText);\n        labelElement.data('eventArgs', eventArgs)\n          .data('dataObj', dataObj);\n      } else {\n        labelElementDummy && animationManager.setAnimation({\n          el: labelElementDummy,\n          component: dataset,\n          callback: hideFn,\n          doNotRemove: true\n        });\n      }\n    }\n  }\n\n  /**\n   * Draws the datastet.\n   */\n  draw () {\n    let dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      chartComponents = chart.components,\n      components = dataset.components,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      xAxis = chart.getChildren('xAxis')[0],\n      dataStore = components.data,\n      taskMap = chartComponents.tasksMap,\n      chartConfig = chart.config,\n      canvas = chart.getChildren('canvas')[0],\n      container = dataset.getContainer('milestoneContainer'),\n      parentContainer = canvas.getChildContainer('milestoneGroup'),\n      dataLabelContainer = dataset.getContainer('milestoneLabelContainer'),\n      visible = dataset.getState('visible'),\n      animationManager = dataset.getFromEnv('animationManager'),\n      removeDataArr = dataset.components.removeDataArr || [],\n      removeDataArrLen = removeDataArr.length,\n      dataObj,\n      taskObj,\n      graphics,\n      config,\n      eventArgs,\n      taskConfigObj,\n      setElementDummy,\n      setElement,\n      xPos,\n      yPos,\n      polypath,\n      radius,\n      i,\n      ln,\n      labelAttrs,\n      showTooltip = chartConfig.showtooltip;\n\n    if (!container) {\n      container = dataset.addContainer(\n        'milestoneContainer', animationManager.setAnimation({\n          el: 'group',\n          attr: { name: 'milestone' },\n          container: parentContainer,\n          component: dataset\n        }));\n    }\n    if (!visible) {\n      container.hide();\n    } else {\n      container.show();\n    }\n\n    if (!dataLabelContainer) {\n      dataLabelContainer = dataset.addContainer(\n        'milestoneLabelContainer', animationManager.setAnimation({\n          el: 'group',\n          attr: {name: 'labels'},\n          container: parentContainer,\n          component: dataset\n        }));\n    }\n    if (!visible) {\n      dataLabelContainer.hide();\n    } else {\n      dataLabelContainer.show();\n    }\n\n    ln = dataStore && dataStore.length;\n\n    for (i = 0; i < ln; i += 1) {\n      dataObj = dataStore[i];\n      if (!dataObj) {\n        continue;\n      }\n\n      config = dataObj.config;\n      graphics = dataObj.graphics;\n      taskObj = taskMap[config.taskId];\n      !dataObj.graphics && (dataObj.graphics = {});\n\n      setElementDummy = graphics.element;\n\n      if (taskObj) {\n        taskConfigObj = taskObj.config;\n\n        eventArgs = config.eventArgs = {\n          sides: config.sides,\n          date: config.origDate,\n          radius: config.radius,\n          taskId: config.taskId,\n          toolText: config.toolText,\n          link: config.link,\n          numSides: config.numSides\n        };\n\n        xPos = xAxis.getPixel(config.date.ms);\n        yPos = taskConfigObj.yPos + (taskConfigObj.height * 0.5);\n        radius = pluckNumber(config.radius, taskConfigObj.height * 0.6);\n\n        if (checkInvalidValue(xPos, yPos, radius) === false) {\n          continue;\n        }\n        polypath = [config.numSides, xPos, yPos, radius, config.startAngle, config.depth];\n        setElement = graphics.element = animationManager.setAnimation({\n          el: setElementDummy || 'polypath',\n          label: 'polypath',\n          attr: {\n            polypath: polypath,\n            fill: config.fillColor,\n            'fill-opacity': config.fillAlpha,\n            stroke: config.borderColor,\n            'stroke-opacity': config.borderAlpha,\n            groupId: 'gId' + i,\n            cursor: config.link ? 'pointer' : BLANKSTRING,\n            'stroke-width': config.borderThickness\n          },\n          component: dataset,\n          container: container\n        });\n        setElement.on('fc-click', clickHandler(chart))\n          .hover(rollOverHandler(chart), rollOutHandler(chart));\n        setElement.show()\n          .data('eventArgs', eventArgs)\n          .data('dataObj', dataObj);\n\n        if (showTooltip) {\n          toolTipController.enableToolTip(setElement, config.toolText);\n        } else {\n          toolTipController.disableToolTip(setElement);\n        }\n\n        labelAttrs = config._labelAttrs || (config._labelAttrs = {});\n        labelAttrs.x = xPos;\n        labelAttrs.y = yPos;\n        labelAttrs.text = config.displayValue;\n        labelAttrs.groupId = 'gId' + i;\n        labelAttrs.cursor = config.link ? 'pointer' : BLANKSTRING;\n        labelAttrs.direction = chartConfig.textDirection;\n        labelAttrs['text-anchor'] = MIDDLE;\n        labelAttrs.fill = config.textColor;\n      } else {\n        setElementDummy && animationManager.setAnimation({\n          el: setElementDummy,\n          component: dataset,\n          callback: hideFn,\n          doNotRemove: true\n        });\n      }\n    }\n\n    dataset.drawn ? dataset.drawLabel()\n      : dataset.addJob('drawMilestoneLabels', dataset.drawLabel.bind(dataset), priorityList.label);\n\n    dataset.drawn = true;\n\n    for (i = 0; i < removeDataArrLen; i++) {\n      dataset._removeDataVisuals(removeDataArr.shift());\n    }\n  }\n}\n\nexport default Milestone;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }], complexity: 'off' */\nimport Column from '@fusioncharts/charts/src/dataset/column';\nimport { extend2, parseConfiguration, pluck, pluckNumber, getFirstValue, parseTooltext,\n  setLineHeight, TRACKER_FILL, getValidValue, parseUnsafeString, convertColor,\n  toRaphaelColor, crispBound, getDarkColor, getFirstColor, BLANKSTRING, HUNDREDSTRING, POSITION_END, POSITION_START } from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport taskAnimation from './task.animation';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\n\nlet UNDEF;\nconst BLANK = '',\n  BOLD = 'bold',\n  ITALIC = 'italic',\n  NORMAL = 'normal',\n  PROCESS = 'PROCESS_',\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  align = {\n    left: 'start',\n    right: 'end',\n    center: 'middle'\n  },\n  xAlign = {\n    left: 0,\n    right: 1,\n    center: 0.5,\n    'undefined': 0.5\n  },\n  alignGutter = {\n    left: 5,\n    right: -5,\n    center: 0,\n    'undefined': 0\n  },\n  stylePropValues = {\n    fontWeight: [NORMAL, BOLD],\n    fontStyle: [NORMAL, ITALIC]\n  },\n  hideFn = function () {\n    this.hide();\n  },\n  /**\n   * Checks if an object is defined or null.\n   * @param {Object} obj The oject to be checked\n   * @return {booleam} Whether the object was null or undefined\n   */\n  defined = obj => obj !== UNDEF && obj !== null,\n  /**\n   * Extracts the label styles from a given style object.\n   * @param {Object} styleObj The style object from which to extract the styles.\n   *\n   * @return {Object} The extracted style.\n   */\n  extractLabelStyle = styleObj => {\n    let style,\n      prop;\n\n    for (prop in styleObj) {\n      if (styleObj[prop] !== UNDEF) {\n        style = style || {};\n        switch (prop) {\n          case 'fontWeight':\n          case 'fontStyle':\n            style[prop] = stylePropValues[prop][styleObj[prop]];\n            break;\n          default:\n            style[prop] = styleObj[prop];\n        }\n      }\n    }\n    return style;\n  },\n  /**\n   * Checks if a given string is a percentage value or not.\n   * @param {string} str The string to be checked\n   * @return {boolean} Indicates whether the input is a string.\n   */\n  isPercent = str => (/%/g).test(str),\n  checkInvalidValue = function () {\n    let i = 0,\n      ii = arguments.length,\n      allValuesValid = false,\n      val;\n\n    for (i = 0; i < ii; i++) {\n      val = arguments[i];\n      if (isNaN(val)) {\n        return false;\n      }\n      allValuesValid = true;\n    }\n    return allValuesValid;\n  };\n\naddDep({\n  name: 'taskAnimation',\n  type: 'animationRule',\n  extension: taskAnimation\n});\n/**\n * Defines a Task dataset for a Gantt chart.\n */\nclass Task extends Column {\n  /**\n   * Creates an instance of Task. Instatiates an empty components object within it.\n   * @memberof Task\n   */\n  constructor () {\n    super();\n\n    this.components = {};\n  }\n\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'task';\n  }\n\n  /**\n   * Sets the default configurations of the dataset\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n\n    let config = this.config;\n\n    // configurations with default values\n    config.showpercentlabel = UNDEF;\n    config.showlabels = UNDEF;\n    config.showborder = 1;\n    config.borderthickness = 1;\n\n    // inherited from parent\n    config.font = BLANKSTRING;\n    config.fontcolor = BLANKSTRING;\n    config.fontsize = BLANKSTRING;\n    config.color = BLANKSTRING;\n    config.alpha = HUNDREDSTRING;\n    config.angle = 270;\n    config.slackfillcolor = UNDEF;\n    config.borderalpha = HUNDREDSTRING;\n    config.hoverfillcolor = BLANKSTRING;\n    config.slackhoverfillalpha = HUNDREDSTRING;\n    config.showstartdate = UNDEF;\n    config.showenddate = UNDEF;\n  }\n\n  /**\n   * Parses and configures the dataset according to the data given by the user.\n   */\n  configureAttributes () {\n    let dataset = this,\n      jsonData = dataset.getFromEnv('dataSource'),\n      userConfig = extend2({}, jsonData.tasks && jsonData.tasks.length\n        ? jsonData.tasks[0]\n        : jsonData.tasks || {});\n\n    parseConfiguration(\n      userConfig,\n      dataset.config,\n      dataset.getFromEnv('chart').config,\n      { task: true }\n    );\n\n    if (!dataset.components) {\n      dataset.components = {};\n    }\n\n    dataset.config.hoverfillalpha = pluckNumber(userConfig.hoverfillalpha, dataset.getFromEnv('chart').config.taskhoverfillalpha, HUNDREDSTRING);\n\n    dataset._setConfigure();\n\n    dataset.setState('dirty', true);\n  }\n\n  /**\n   * Configures each data of the dataset\n   *\n   * @param {Array} newDataset The new dataset, if any\n   */\n  _setConfigure (newDataset) {\n    let dataset = this,\n      datasetConfig = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      yAxis = chart.getChildren('yAxis')[0],\n      axisConfig = yAxis.config,\n      jsonData = dataset.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      JSONData = jsonData.tasks && jsonData.tasks.length\n        ? jsonData.tasks[0]\n        : jsonData.tasks || {},\n      setDataArr = newDataset || JSONData.length ? JSONData : JSONData.task,\n      setDataLen = setDataArr && setDataArr.length,\n      colorM = dataset.getFromEnv('color-manager'),\n      chartConfig = chart.config,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      // taskRadius = chartConfig.taskbarroundradius,\n      taskMix = chartConfig.taskbarfillmix,\n      taskRatio = chartConfig.taskbarfillratio,\n      showSlackAsFill = chartConfig.showslackasfill,\n      dataStore = dataset.components.data,\n      percentComplete,\n      eDate,\n      sDate,\n      i,\n      processMap = axisConfig.processes.processMap,\n      processes = axisConfig.processes.process.process,\n      processName,\n      arrColor,\n      arrAlpha,\n      arrRatio,\n      dataLabel,\n      dInt = chartConfig.dateintooltip,\n      dataObj,\n      taskObj,\n      alignVal = {\n        right: 'right',\n        left: 'left',\n        'undefined': 'center',\n        'center': 'center'\n      },\n      id,\n      tAlpha,\n      tBorderAlpha,\n      tBorderColor,\n      label,\n      color,\n      fillAngle,\n      showPercentLabel,\n      tasksMap = chart.components.tasksMap = {},\n      inCanStyle = chartConfig.style.inCanvasStyle,\n      toolText,\n      slHovColor,\n      slColor,\n      tColorObj,\n      tHovColor,\n      tHovBorderColor,\n      taskId,\n      dataConfig,\n      showtooltip = pluckNumber(chartAttrs.showtooltip, 1),\n      dataLabelStyle = chartConfig.dataLabelStyle,\n      datasetLabelStyle,\n      setLabelStyle;\n\n    if (!dataStore) {\n      dataStore = dataset.components.data = [];\n    }\n\n    datasetConfig.showlabels = pluck(JSONData.showlabels, JSONData.showlabels, JSONData.showname,\n      chartAttrs.showtasklabels, chartAttrs.showtasknames, 0);\n\n    datasetConfig.showTextOutline = pluckNumber(chartAttrs.textoutline, 0);\n    datasetLabelStyle = datasetConfig.labelStyle = extractLabelStyle({\n      fontSize: datasetConfig.fontSize,\n      fontFamily: datasetConfig.font\n    });\n\n    setLineHeight(datasetConfig.labelStyle);\n\n    // Tasks\n    if (setDataLen) {\n      // dmin = Infinity;\n      // dmax = -Infinity;\n      for (i = 0; i < setDataLen; i += 1) {\n        taskObj = setDataArr[i];\n        id = pluck(taskObj.processid);\n        if (id && typeof id === 'string') {\n          id = id.toLowerCase();\n        }\n        taskId = taskObj.id;\n        percentComplete = taskObj.percentcomplete;\n        tAlpha = pluckNumber(taskObj.alpha, datasetConfig.alpha);\n        color = pluck(taskObj.color, datasetConfig.color, colorM.getColor('plotFillColor'));\n        tBorderAlpha = pluckNumber(taskObj.borderalpha, datasetConfig.borderalpha, '100');\n        tBorderColor = pluck(taskObj.bordercolor, datasetConfig.bordercolor,\n          colorM.getColor('plotBorderColor'));\n\n        label = getFirstValue(pluck(taskObj.label, taskObj.name), BLANK);\n        // Parse the task color, ratio & alpha\n        arrColor = colorM.parseColorMix(color, taskMix);\n        arrAlpha = colorM.parseAlphaList(tAlpha.toString(), arrColor.length);\n        arrRatio = colorM.parseRatioList(taskRatio, arrColor.length);\n        fillAngle = pluckNumber(taskObj.angle, datasetConfig.angle);\n\n        dataObj = dataStore[i] || (dataStore[i] = {\n          config: {}\n        });\n\n        dataConfig = dataObj.config;\n        dataConfig.index = i;\n        dataConfig.link = taskObj.link;\n        // Process id should be PROCESS_index\n        dataConfig.processId = pluck(id, PROCESS + i);\n        // dataConfig.style = {\n        //     fontSize: pluckNumber (taskObj.fontsize, datasetConfig.fontsize,\n        //         inCanStyle.fontSize) + PX,\n        //     fontFamily: pluck (taskObj.font, datasetConfig.font,\n        //         inCanStyle.fontFamily)\n        // };\n\n        dataConfig.textColor = getFirstColor(pluck(taskObj.fontcolor,\n          datasetConfig.fontcolor, inCanStyle.color));\n        dataConfig.textFont = pluck(taskObj.font,\n          datasetConfig.font, inCanStyle.fontFamily);\n        dataConfig.textFontSize = pluckNumber(taskObj.fontsize,\n          datasetConfig.fontsizes, inCanStyle.fontSize);\n        // RED-8910 fix for font size\n        if (!taskObj.fontsize && chartConfig.dataLabelStyle) {\n          taskObj.fontsize = chartConfig.dataLabelStyle.fontSize;\n        }\n        dataConfig.style = extractLabelStyle({\n          fontSize: taskObj.fontsize,\n          fontFamily: taskObj.font\n        });\n\n        setLineHeight(dataConfig.style);\n\n        setLabelStyle = dataConfig.style;\n\n        dataConfig.lineHeight = pluck(setLabelStyle && setLabelStyle.lineHeight, datasetLabelStyle &&\n                datasetLabelStyle.lineHeight, dataLabelStyle && dataLabelStyle.lineHeight);\n\n        dataConfig.startMs = numberFormatter.getDateValue(taskObj.start).ms;\n        dataConfig.endMs = numberFormatter.getDateValue(taskObj.end).ms;\n\n        sDate = numberFormatter.getFormattedDate(dataConfig.startMs);\n        eDate = numberFormatter.getFormattedDate(dataConfig.endMs);\n\n        dataConfig.tAlpha = tAlpha;\n        dataConfig.tBorderColor = tBorderColor;\n        dataConfig.tBorderAlpha = tBorderAlpha;\n        dataLabel = BLANK;\n        dataConfig.percentComplete = percentComplete =\n                Math.min(pluckNumber(taskObj.percentcomplete, -1), 100);\n\n        dataConfig.labelAlign = alignVal[[pluck(taskObj.labelalign, chartConfig.tasklabelsalign).toLowerCase()]];\n\n        dataConfig.showAsGroup = pluckNumber(taskObj.showasgroup, 0);\n        showPercentLabel = dataConfig.showPercentLabel = pluckNumber(taskObj.showpercentlabel,\n          datasetConfig.showpercentlabel);\n\n        if (pluckNumber(taskObj.showlabel, taskObj.showname,\n          datasetConfig.showlabels)) {\n          dataLabel = label;\n        }\n        if (showPercentLabel && percentComplete !== -1) {\n          dataLabel += ' ' + percentComplete + '%';\n        }\n        dataConfig.percentComplete = percentComplete;\n        tColorObj = {\n          FCcolor: {\n            color: arrColor.join(),\n            alpha: arrAlpha,\n            ratio: arrRatio,\n            angle: fillAngle\n          }\n        };\n        slColor = colorM.parseColorMix(pluck(taskObj.slackfillcolor,\n          datasetConfig.slackfillcolor, chartConfig.slackfillcolor), taskMix);\n\n        slColor = showSlackAsFill ? {\n          FCcolor: {\n            color: slColor.join(),\n            alpha: arrAlpha,\n            ratio: arrRatio,\n            angle: fillAngle\n          }\n        } : TRACKER_FILL;\n\n        tHovColor = {\n          FCcolor: {\n            color: colorM.parseColorMix(pluck(taskObj.hoverfillcolor,\n              datasetConfig.hoverfillcolor, chartConfig.taskhoverfillcolor,\n              getDarkColor(color, 80)), taskMix).join(),\n            alpha: colorM.parseAlphaList(pluck(taskObj.hoverfillalpha,\n              datasetConfig.hoverfillalpha).toString(), arrColor.length),\n            ratio: arrRatio,\n            angle: fillAngle\n          }\n        };\n\n        tHovBorderColor = convertColor(pluck(taskObj.hoverbordercolor,\n          datasetConfig.hoverbordercolor, getDarkColor(tBorderColor, 80)),\n        pluck(taskObj.hoverborderalpha, datasetConfig.hoverborderalpha,\n          tBorderAlpha));\n\n        slHovColor = showSlackAsFill ? {\n          FCcolor: {\n            color: colorM.parseColorMix(getDarkColor(pluck(taskObj.slackhoverfillcolor,\n              datasetConfig.slackhoverfillcolor, chartConfig.slackfillcolor), 80), taskMix).join(),\n            alpha: colorM.parseAlphaList(pluck(taskObj.slackhoverfillalpha,\n              datasetConfig.slackhoverfillalpha, '100').toString(), arrColor.length),\n            ratio: arrRatio,\n            angle: fillAngle\n          }\n        } : TRACKER_FILL;\n\n        dataConfig.color = toRaphaelColor(tColorObj);\n        dataConfig.rawTaskColor = color;\n        dataConfig.rawTaskAlpha = tAlpha;\n        dataConfig.slackColor = toRaphaelColor(slColor);\n        dataConfig.hoverFillColor = toRaphaelColor(tHovColor);\n        dataConfig.hoverBorderColor = tHovBorderColor;\n        dataConfig.slackHoverColor = toRaphaelColor(slHovColor);\n        dataConfig.showHoverEffect = pluckNumber(\n          taskObj.showhovereffect,\n          datasetConfig.showhovereffect,\n          chartAttrs.showhovereffect,\n          1\n        );\n        dataConfig.taskHeight = pluck(taskObj.height, '35%');\n        dataConfig.topPadding = pluck(taskObj.toppadding, '35%');\n        dataConfig.showPercentLabel = showPercentLabel;\n        dataConfig.endDate = pluckNumber(taskObj.showenddate,\n          datasetConfig.showenddate) ? eDate : UNDEF;\n        dataConfig._endDate = eDate;\n        dataConfig.startDate = pluckNumber(taskObj.showstartdate,\n          datasetConfig.showstartdate) ? sDate : UNDEF;\n        dataConfig._startDate = sDate;\n        dataConfig.shadow = {\n          opacity: Math.max(tAlpha, tBorderAlpha) / 100,\n          inverted: true\n        };\n        dataConfig.id = id;\n        dataConfig.taskId = taskId;\n        dataConfig.borderColor = convertColor(tBorderColor, tBorderAlpha);\n        dataConfig.borderThickness = pluckNumber(taskObj.showborder,\n          datasetConfig.showborder) ? pluckNumber(taskObj.borderthickness,\n            datasetConfig.borderthickness) : 0;\n        toolText = getValidValue(parseUnsafeString(pluck(\n          taskObj.tooltext, datasetConfig.hovertext, datasetConfig.plottooltext,\n          chartAttrs.plottooltext), false));\n        if (showtooltip) {\n          if (toolText !== UNDEF) {\n            if (processMap[id]) {\n              // take process name using the processMap(stores a map for processId and process Name)\n              processName = (processMap[id].catObj.label || processMap[id].catObj.name);\n            } else {\n              processName = processes[i] && (processes[i].label || processes[i].name);\n            }\n            toolText = parseTooltext(toolText, [3, 28, 29, 30, 31], {\n              end: eDate,\n              start: sDate,\n              label: label,\n              percentComplete: percentComplete !== -1\n                ? numberFormatter.percentValue(percentComplete) : BLANK,\n              processName: processName\n            }, datasetConfig);\n          } else {\n            toolText = ((label !== BLANK)\n              ? (label + (dInt ? ', ' : BLANK)) : BLANK) +\n                      (dInt ? (sDate + ' - ' + eDate) : BLANK);\n          }\n        }\n\n        dataConfig.label = dataLabel;\n        dataConfig.toolText = toolText;\n        typeof taskId === 'string' && (taskId = taskId.toLowerCase());\n        if (taskId !== UNDEF) {\n          tasksMap[taskId] = dataStore[i];\n        }\n      }\n    }\n\n    if (pluckNumber(JSONData.visible, 1)) {\n      dataset.setState('visible', true);\n    } else {\n      dataset.setState('visible', false);\n    }\n  }\n\n  /**\n   * Adds event handlers on slack elements\n   * @param {Object} slackElem The slack Raphael element\n   * @param {Object} chart A reference to the gant chartAPI\n   */\n  slackElemHandlers (slackElem, chart) {\n    var dataset = this;\n\n    if (slackElem) {\n      slackElem.on('fc-click', function (e) {\n        let ele = this;\n        chart.plotEventHandler(ele, e);\n      }).hover(function (data) {\n        let ele = this,\n          dataObj = ele.data('dataObj');\n        chart.plotEventHandler(ele, data, ROLLOVER);\n        dataObj.config.showHoverEffect && dataset.taskHoverHandler.call(ele, chart);\n      }, function (data) {\n        let ele = this,\n          dataObj = ele.data('dataObj');\n        chart.plotEventHandler(ele, data, ROLLOUT);\n        dataObj.config.showHoverEffect && dataset.taskHoverOutHandler.call(ele, chart);\n      });\n    }\n  }\n\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.config.JSONData) {\n      return;\n    }\n\n    let dataSet = this,\n      config = dataSet.config,\n      context = config && config.context,\n      prevCatlen = context && context.prevCatlen,\n      xAxis = dataSet.getFromEnv('xAxis'),\n      currCatLen = xAxis.getProcessLen(),\n      catDiff = prevCatlen - currCatLen,\n      prevData = config.JSONData,\n      prevDataLength = prevData.task && prevData.task.length,\n      currDataLength = (datasetJSON.task && datasetJSON.task.length) || 0,\n      dataDiff = prevDataLength - currDataLength,\n      diff,\n      startIndex;\n\n    if (catDiff > dataDiff) {\n      diff = catDiff;\n      startIndex = currCatLen;\n    } else {\n      diff = dataDiff;\n      startIndex = currDataLength;\n    }\n\n    // Removing data plots if the number of current data plots/categories\n    // is more than the existing ones.\n    if (diff > 0) {\n      this.removeData(startIndex, diff, false);\n    }\n  }\n\n  /**\n   * Returns the default value padding for this dataset.\n   *\n   * @return {number} The value padding\n   */\n  getAxisValuePadding () {\n    return this.config.defaultPadding;\n  }\n\n  /**\n   * Draws labels on the tasks.\n   */\n  drawLabel () {\n    var dataset = this,\n      conf = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      animationManager = dataset.getFromEnv('animationManager'),\n      dataStore = dataset.components.data,\n      valElemDummy,\n      startValElemDummy,\n      endValElemDummy,\n      valElem,\n      startValElem,\n      endValElem,\n      config,\n      graphics,\n      dataObj,\n      eventArgs,\n      textAttr,\n      startLabelTextAttr,\n      endLabelTextAttr,\n      dataLabelContainer = dataset.getContainer('dataLabelContainer'),\n      i,\n      len = dataStore.length;\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj.config;\n      graphics = dataObj.graphics;\n      eventArgs = config.eventArgs;\n\n      // valElem = valElems && valElems[i];\n      valElemDummy = graphics.valElem;\n      textAttr = config._labelTextAttr;\n      if (defined(config.label) && config.label !== BLANK && textAttr) {\n        valElem = graphics.valElem = animationManager.setAnimation({\n          el: valElemDummy || 'text',\n          attr: textAttr,\n          container: dataLabelContainer,\n          component: dataset\n        });\n        valElem.outlineText(conf.showTextOutline, textAttr.fill);\n        if (!valElemDummy) {\n          valElem.data('dataset', dataset);\n          dataset.slackElemHandlers(valElem, chart);\n        } else {\n          valElem.removeCSS();\n          valElem.show();\n        }\n        valElem.css(config.style);\n\n        valElem.data('dataObj', dataObj)\n          .data('dataObj', dataObj)\n          .data('eventArgs', eventArgs);\n      } else {\n        valElemDummy && animationManager.setAnimation({\n          el: valElemDummy,\n          component: dataset,\n          callback: hideFn,\n          doNotRemove: true\n        });\n      }\n\n      // Task start date element\n      startValElemDummy = graphics.startValElem;\n      startLabelTextAttr = config._startLabelTextAttr;\n      if (defined(config.startDate) && config.startDate !== BLANK && startLabelTextAttr) {\n        startValElem = graphics.startValElem = animationManager.setAnimation({\n          el: startValElemDummy || 'text',\n          attr: startLabelTextAttr,\n          container: dataLabelContainer,\n          component: dataset\n        });\n        startValElem.outlineText(conf.showTextOutline, startLabelTextAttr.fill);\n        if (!startValElemDummy) {\n          startValElem.data('dataset', dataset);\n          dataset.slackElemHandlers(startValElem, chart);\n        } else {\n          startValElem.removeCSS();\n          startValElem.show();\n        }\n        startValElem.css(config.style);\n\n        startValElem.data('dataObj', dataObj)\n          .data('chart', chart)\n          .data('eventArgs', eventArgs);\n      } else {\n        startValElemDummy && animationManager.setAnimation({\n          el: startValElemDummy,\n          component: dataset,\n          callback: hideFn,\n          doNotRemove: true\n        });\n      }\n\n      // Task end date label drawing\n      endValElemDummy = graphics.endValElem;\n      endLabelTextAttr = config._endLabelTextAttr;\n      if (defined(config.endDate) && config.endDate !== BLANK && endLabelTextAttr) {\n        endValElem = graphics.endValElem = animationManager.setAnimation({\n          el: endValElemDummy || 'text',\n          attr: endLabelTextAttr,\n          container: dataLabelContainer,\n          component: dataset\n        });\n        endValElem.outlineText(conf.showTextOutline, endLabelTextAttr.fill);\n        if (!endValElemDummy) {\n          endValElem.data('dataset', dataset);\n          dataset.slackElemHandlers(endValElem, chart);\n        } else {\n          endValElem.removeCSS();\n          endValElem.show().css(config.style);\n        }\n\n        endValElem.data('dataObj', dataObj)\n          .data('chart', chart)\n          .data('eventArgs', eventArgs);\n      } else {\n        endValElemDummy && animationManager.setAnimation({\n          el: endValElemDummy,\n          component: dataset,\n          callback: hideFn,\n          doNotRemove: true\n        });\n      }\n    }\n  }\n\n  /**\n   * Defines what happens when the users mouses into a task.\n   */\n  taskHoverHandler () {\n    let ele = this,\n      dataObj = ele.data('dataObj') || {},\n      dataset = ele.data('dataset'),\n      dataStore = dataset.components.data,\n      config = dataObj.config || {},\n      index = config.index,\n      graphics = dataStore[index] && dataStore[index].graphics,\n      attrib = {\n        fill: config.hoverFillColor,\n        stroke: config.hoverBorderColor\n      };\n\n    if (config.percentComplete !== -1 &&\n        !config.showAsGroup) {\n      graphics.slackElem.attr({\n        fill: config.slackHoverColor\n      });\n      graphics.taskFill.attr({\n        fill: config.hoverFillColor\n      });\n      delete attrib.fill;\n    }\n\n    graphics.element.attr(attrib);\n  }\n\n  /**\n   * Defines what happens when the users mouses out of a task.\n   */\n  taskHoverOutHandler () {\n    let ele = this,\n      dataObj = ele.data('dataObj') || {},\n      dataset = ele.data('dataset') || {},\n      dataStore = dataset.components.data,\n      config = dataObj.config || {},\n      index = config.index,\n      graphics = dataStore[index] && dataStore[index].graphics,\n      attrib = {\n        fill: config.color,\n        stroke: config.borderColor,\n        'stroke-width': config.borderThickness,\n        'stroke-dasharray': config.dashedStyle\n      };\n\n    if (config.percentComplete !== -1 &&\n      !config.showAsGroup) {\n      graphics.slackElem.attr({\n        fill: config.slackColor\n      });\n      graphics.taskFill.attr({\n        fill: config.color\n      });\n      delete attrib.fill;\n    }\n\n    graphics.element.attr(attrib);\n  }\n\n  /**\n   * Parsing and calculation of plot attr\n   *\n   * @param {any} dataObj dataObj\n   * @param {any} index index\n   * @memberof Task\n   */\n  parsePlotAttributes (dataObj, index) {\n    let dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      jsonData = chart.getFromEnv('dataSource'),\n      chartConfig = chart.config,\n      canvasTop = chartConfig.canvasTop,\n      xAxis = chart.getChildren('xAxis')[0],\n      yAxis = chart.getChildren('yAxis')[0],\n      config,\n      endX,\n      startMs,\n      endMs,\n      setLink,\n      height,\n      id,\n      pHeight,\n      width,\n      width2,\n      xPos,\n      yPos,\n      borderThickness,\n      taskBarElementAttrs,\n      crispBox,\n      halfH,\n      txtAlign,\n      borderFill,\n      padding,\n      incrementId = index,\n      datePadding = chartConfig.datepadding,\n      taskHeight,\n      viewPortConfig = chartConfig.viewPortConfig,\n      x = viewPortConfig.x,\n      labelTextAttr,\n      endLabelTextAttr,\n      startLabelTextAttr,\n      proLen = jsonData.processes.process && jsonData.processes.process.length,\n      scaleX = viewPortConfig.scaleX,\n      taskBarRadius = chartConfig.taskbarroundradius,\n      cursor,\n      processDimention,\n      lineHeight;\n\n    config = dataObj && dataObj.config;\n    !dataObj.graphics && (dataObj.graphics = {});\n    startMs = config && config.startMs;\n    endMs = config && config.endMs;\n    // Condition arises when user has removed data in real time update\n    if (typeof dataObj === 'undefined' || typeof startMs === 'undefined' || endMs === null) {\n      return;\n    }\n    taskHeight = config.taskHeight;\n    setLink = config.link;\n    borderThickness = config.borderThickness;\n    id = config.id;\n    borderFill = config.color;\n    lineHeight = config.lineHeight;\n\n    // isNewElem = false;\n    if (incrementId > proLen - 1) {\n      incrementId = 0;\n    }\n    if (typeof config.id !== 'undefined') {\n      processDimention = yAxis.getProcessPositionById(id);\n    } else {\n      processDimention = yAxis.getProcessPositionByIndex(incrementId);\n    }\n\n    incrementId++;\n    pHeight = processDimention.height;\n    padding = (pHeight * (isPercent(config.topPadding) &&\n      parseFloat(config.topPadding, 10) * 0.01)) ||\n      pluckNumber(config.topPadding, pHeight);\n    height = config.height = (pHeight * (isPercent(taskHeight) &&\n      parseFloat(taskHeight, 10) * 0.01)) ||\n      pluckNumber(taskHeight, pHeight);\n\n    xPos = config.xPos = xAxis.getPixel(config.startMs) + (x * scaleX);\n    endX = xAxis.getPixel(config.endMs) + (x * scaleX);\n    width = config.width = Math.abs(width2 = endX - xPos);\n    yPos = processDimention.bottom + canvasTop - pHeight;\n\n    yPos = config.yPos = (yPos + Math.min(padding, pHeight - height));\n    halfH = height * 0.5;\n\n    crispBox = crispBound(xPos, yPos, width, height, borderThickness);\n    xPos = crispBox.x;\n    yPos = crispBox.y;\n    width = crispBox.width;\n    height = crispBox.height;\n\n    if (checkInvalidValue(xPos, yPos, width, height) === false) {\n      config.inValidValue = true;\n      return;\n    }\n\n    config.props = {\n      element: {},\n      perComElem: {},\n      slackElem: {}\n    };\n\n    if (config.showAsGroup) {\n      taskBarElementAttrs = {\n        path: ['M', xPos, yPos, 'V', yPos + height,\n          'L', xPos + halfH, yPos + halfH, 'H', xPos + width - halfH,\n          'L', xPos + width, yPos + height, 'V', yPos, 'H', xPos]\n      };\n    } else {\n      taskBarElementAttrs = {\n        x: crispBox.x,\n        y: crispBox.y,\n        width: crispBox.width || 1,\n        height: height\n      };\n    }\n    Object.assign(taskBarElementAttrs, {\n      fill: borderFill,\n      stroke: config.borderColor,\n      cursor: setLink ? 'pointer' : BLANK,\n      r: taskBarRadius,\n      'stroke-width': borderThickness,\n      width: crispBox.width || 1\n    });\n\n    config.eventArgs = {\n      processId: config.processId,\n      taskId: config.taskId,\n      start: config._startDate,\n      end: config._endDate,\n      showAsGroup: config.showAsGroup,\n      link: config.link,\n      sourceType: 'task',\n      percentComplete: config.percentComplete !== -1,\n      bgColor: config.rawTaskColor,\n      bgAlpha: config.rawTaskAlpha,\n      font: config.textFont,\n      fontSize: config.textFontSize,\n      fontColor: config.textColor\n    };\n    if (config.percentComplete !== -1 && !config.showAsGroup) {\n      width2 = width * config.percentComplete * 0.01;\n      borderFill = TRACKER_FILL;\n      // Percent complete element\n      config.props.perComElem = {\n        attr: {\n          x: xPos,\n          y: yPos,\n          height: height,\n          width: width2,\n          fill: config.color,\n          cursor: setLink ? 'pointer' : BLANK,\n          'stroke-width': 0\n        }\n      };\n      // Slack Element\n      config.props.slackElem = {\n        attr: {\n          x: (xPos + width2) || 1,\n          y: yPos,\n          width: width - width2,\n          height: height,\n          fill: config.slackColor,\n          cursor: setLink ? 'pointer' : BLANK,\n          'stroke-width': 0\n        }\n      };\n      // update the fill of taskBar Element\n      taskBarElementAttrs.fill = borderFill;\n    }\n\n    txtAlign = config.labelAlign;\n    labelTextAttr = config._labelTextAttr || (config._labelTextAttr = {});\n\n    config.props.element.attr = taskBarElementAttrs;\n    labelTextAttr.x = xPos + (width * xAlign[txtAlign]) + alignGutter[txtAlign];\n    labelTextAttr.y = (yPos - (parseInt(lineHeight, 10) * 0.5) - chartConfig.tasklabelspadding);\n    labelTextAttr.text = config.label;\n    labelTextAttr.direction = chartConfig.textDirection;\n    labelTextAttr['text-anchor'] = align[txtAlign];\n    labelTextAttr.cursor = cursor;\n    labelTextAttr.fill = convertColor(config.textColor);\n    labelTextAttr['line-height'] = lineHeight;\n\n    startLabelTextAttr = config._startLabelTextAttr || (config._startLabelTextAttr = {});\n\n    startLabelTextAttr.x = xPos - 2 - datePadding;\n    startLabelTextAttr.y = (yPos + (height * 0.5));\n\n    startLabelTextAttr.text = config.startDate;\n    startLabelTextAttr['text-anchor'] = POSITION_END;\n    startLabelTextAttr.cursor = cursor;\n    startLabelTextAttr.direction = chartConfig.textDirection;\n    startLabelTextAttr.fill = convertColor(config.textColor);\n    startLabelTextAttr['line-height'] = lineHeight;\n\n    endLabelTextAttr = config._endLabelTextAttr || (config._endLabelTextAttr = {});\n\n    endLabelTextAttr.x = xPos + width + 2 + datePadding;\n    endLabelTextAttr.y = (yPos + (height * 0.5));\n    endLabelTextAttr.text = config.endDate;\n    endLabelTextAttr.cursor = cursor;\n    endLabelTextAttr.direction = chartConfig.textDirection;\n    endLabelTextAttr['text-anchor'] = POSITION_START;\n    endLabelTextAttr.fill = convertColor(config.textColor);\n    endLabelTextAttr['line-height'] = lineHeight;\n\n    config.cursor = cursor;\n  }\n  /**\n   * Parses and calculates positions during post space management\n   *\n   * @memberof Task\n   */\n  allocatePosition () {\n    let dataset = this,\n      dsStore = dataset.components.data || [],\n      length = dsStore.length,\n      i,\n      dataObj;\n\n    for (i = 0; i < length; i++) {\n      dataObj = dsStore[i];\n      dataset.parsePlotAttributes(dataObj, i);\n    }\n  }\n  /**\n   * Function to remove a data from a dataset during real time update.\n   *\n   * @param {any} dataObj The data object to remove\n   */\n  _removeDataVisuals (dataObj) {\n    let dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      ele,\n      graphics,\n      graphicsObj;\n\n    if (!dataObj) {\n      return;\n    }\n    graphics = dataObj.graphics;\n    for (ele in graphics) {\n      graphicsObj = graphics[ele];\n      graphicsObj && animationManager.setAnimation({\n        el: graphicsObj,\n        component: dataset\n      });\n    }\n  }\n  /**\n   * Draws the dataset.\n   */\n  draw () {\n    let dataset = this,\n      i,\n      visible = dataset.getState('visible'),\n      chart = dataset.getFromEnv('chart'),\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      chartConfig = chart.config,\n      canvas = chart.getChildren('canvas')[0],\n      animationManager = dataset.getFromEnv('animationManager'),\n      len,\n      parentContainer = canvas.getChildContainer('taskGroup'),\n      components = dataset.components,\n      dataStore = components.data,\n      dataObj,\n      config,\n      graphics,\n      removeDataArr = components.removeDataArr,\n      removeDataArrLen = removeDataArr && removeDataArr.length,\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n      labelsGroup = canvas.getContainer('labelsGroup'),\n      dataLabelContainer = dataset.getContainer('dataLabelContainer'),\n      isContextChanged = dataset._contextChanged(),\n      container = dataset.getContainer('taskColumnContainer'),\n      shadowContainer = dataset.getContainer('taskColumnShadowContainer'),\n      startMs,\n      endMs,\n      toolText,\n      taskBarElement,\n      perComElem,\n      perComElemDummy,\n      slackElem,\n      slackElemDummy,\n      elemType,\n      taskBarElementAttrs,\n      eventArgs,\n      shadow = chartConfig.showshadow,\n      conf = dataset.config;\n\n    if (!dataset.getState('removed') &&\n      !dataset.getState('dirty') &&\n      !(isContextChanged && visible)) {\n      return;\n    }\n\n    // Creating a container group for the graphic element of column plots if\n    // not present and attaching it to its parent group.\n    if (!container) {\n      container = dataset.addContainer(\n        'taskColumnContainer', animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'columns'\n          },\n          container: parentContainer,\n          component: dataset\n        })\n      );\n    }\n    if (!visible) {\n      container.hide();\n    } else {\n      container.show();\n    }\n\n    if (!labelsGroup) {\n      labelsGroup = canvas.addContainer(\n        'labelsGroup', animationManager.setAnimation({\n          el: 'group',\n          attr: { name: 'task-plot-labels' },\n          container: dataLabelsLayer,\n          component: canvas\n        })\n      );\n    }\n    if (!dataLabelContainer) {\n      dataLabelContainer = dataset.addContainer(\n        'dataLabelContainer', animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'labels'\n          },\n          container: parentContainer, // RED-8910 changed labelsGroup to parentContainer\n          component: dataset\n        })\n      );\n    } else {\n      dataLabelContainer.removeCSS();\n    }\n    if (!visible) {\n      dataLabelContainer.hide();\n    } else {\n      dataLabelContainer.show();\n    }\n    labelsGroup = animationManager.setAnimation({\n      el: labelsGroup,\n      attr: { transform: 'T' + -chart.config.xOffset + ',0' },\n      component: canvas\n    });\n    dataLabelContainer.css(conf.labelStyle);\n\n    // Creating the shadow element container group for each plots if not present\n    // and attaching it its parent group.\n    if (!shadowContainer) {\n      // Always sending the shadow group to the back of the plots group.\n      shadowContainer = dataset.addContainer(\n        'taskColumnShadowContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: { name: 'shadow' },\n          container: parentContainer,\n          component: dataset\n        }).toBack()\n      );\n\n      if (!visible) {\n        shadowContainer.hide();\n      }\n    }\n\n    len = dataStore.length;\n\n    // Create plot elements.\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n      !dataObj.graphics && (dataObj.graphics = {});\n      graphics = dataObj.graphics;\n      startMs = config && config.startMs;\n      endMs = config && config.endMs;\n      // Condition arises when user has removed data in real time update\n      if (typeof dataObj === 'undefined' || typeof startMs === 'undefined' || endMs === null) {\n        continue;\n      }\n      toolText = config.toolText;\n\n      if (config.inValidValue) {\n        continue;\n      }\n\n      taskBarElement = graphics.element;\n\n      elemType = config.showAsGroup ? 'path' : 'rect';\n      if (taskBarElement && taskBarElement.type !== elemType) {\n        taskBarElement.remove();\n        taskBarElement = graphics.element = null;\n      }\n      taskBarElementAttrs = config.props.element.attr;\n      graphics.element = animationManager.setAnimation({\n        el: taskBarElement || elemType,\n        label: elemType,\n        attr: taskBarElementAttrs,\n        container: container,\n        component: dataset\n      });\n      if (!taskBarElement) {\n        taskBarElement = graphics.element;\n        taskBarElement.data('dataset', dataset);\n        dataset.slackElemHandlers(taskBarElement, chart);\n      }\n      eventArgs = config.eventArgs;\n\n      if (config.percentComplete !== -1 && !config.showAsGroup) {\n        perComElemDummy = graphics.taskFill;\n        slackElemDummy = graphics.slackElem;\n\n        // Percent complete element\n        perComElem = graphics.taskFill = animationManager.setAnimation({\n          el: perComElemDummy || 'rect',\n          attr: config.props.perComElem.attr,\n          container: container,\n          component: dataset\n        });\n        if (!perComElemDummy) {\n          dataset.slackElemHandlers(perComElem, chart);\n        }\n\n        // Slack Element\n        slackElem = graphics.slackElem = animationManager.setAnimation({\n          el: slackElemDummy || 'rect',\n          attr: config.props.slackElem.attr,\n          container: container,\n          component: dataset\n        });\n        if (!slackElemDummy) {\n          dataset.slackElemHandlers(slackElem, chart);\n        }\n\n        perComElem.show();\n\n        perComElem.data('chart', chart)\n          .data('dataObj', dataObj)\n          .data('dataset', dataset);\n\n        toolTipController.enableToolTip(perComElem, toolText);\n        slackElem.show();\n        perComElem && perComElem.data('eventArgs', eventArgs);\n\n        slackElem && slackElem.data('eventArgs', eventArgs)\n          .data('dataObj', dataObj)\n          .data('dataset', dataset)\n          .data('chart', chart);\n      } else {\n        // If there are slack elements then hide those\n        graphics.taskFill && animationManager.setAnimation({\n          el: graphics.taskFill,\n          component: dataset,\n          callback: hideFn,\n          doNotRemove: true\n        });\n        graphics.slackElem && animationManager.setAnimation({\n          el: graphics.slackElem,\n          component: dataset,\n          callback: hideFn,\n          doNotRemove: true\n        });\n      }\n\n      // set the attr\n      taskBarElement.show()\n        .shadow({\n          opacity: shadow\n        }, shadowContainer)\n        .data('dataObj', dataObj)\n        .data('chart', chart)\n        .data('dataset', dataset)\n        .data('eventArgs', eventArgs);\n\n      toolTipController.enableToolTip(taskBarElement, toolText);\n    }\n\n    dataset.drawn\n      ? dataset.drawLabel()\n      : dataset.addJob('drawLabel', dataset.drawLabel.bind(dataset), priorityList.label);\n\n    // Setting the drawn flag true to draw differently incase of real time draw.\n    dataset.drawn = true;\n\n    for (i = 0; i < removeDataArrLen; i++) {\n      dataset._removeDataVisuals(removeDataArr.shift());\n    }\n  }\n}\n\nexport { checkInvalidValue, extractLabelStyle, hideFn };\nexport default Task;\n","export default {\n  'initial.dataset.task': () => {\n    return {\n      'rect.appearing': (input) => {\n        return [{\n          initialAttr: {\n            width: 0\n          },\n          finalAttr: {\n            width: input.attr.width\n          },\n          slot: 'middle'\n        }];\n      },\n      'path.appearing': (input) => {\n        let inputPath = input.attr.path,\n          path = inputPath.slice(0, 3);\n        return [{\n          initialAttr: {\n            path: path\n          },\n          finalAttr: {\n            path: inputPath\n          },\n          slot: 'middle'\n        }];\n      }\n    };\n  }\n};\n","export default {\n  'initial.dataset.milestone': () => {\n    return {\n      'polypath.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'middle',\n          startEnd: {\n            start: 0.9,\n            end: 1\n          }\n        }];\n      }\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }], complexity: 'off' */\nimport Task, { checkInvalidValue, hideFn } from './task';\nimport { extend2, parseConfiguration, pluck, pluckNumber, getFirstValue, getDashStyle,\n  TRACKER_FILL, convertColor, getDarkColor } from '@fusioncharts/core/src/lib';\nimport connectorAnimation from './connector-gantt.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\n\nconst\n  /**\n   * Click event handler for connectors\n   *\n   * @param {Object} chart The chart instance which the connector is a part of\n   *\n   * @return {Function} The function to be executed on a click\n   */\n  connectorClick = chart => function (e) {\n    var ele = this;\n    chart.plotEventHandler(ele, e, 'ConnectorClick');\n  },\n  /**\n   * Mouse over event handler for connectors\n   *\n   * @param {Object} chart The chart instance which the connector is a part of\n   *\n   * @return {Function} The function to be executed on a mouse over\n   */\n  rollOverHandler = chart => function (event) {\n    var ele = this,\n      data = ele.data('dataObj'),\n      config = data.config,\n      chartComponents = chart.components,\n      taskMap = chartComponents.tasksMap,\n      stTObj = taskMap[config.fromTaskId],\n      endTObj = taskMap[config.toTaskId],\n      attr = {\n        stroke: config.hoverColor,\n        'stroke-dasharray': config.dashedStyle,\n        'stroke-width': config.hoverThickness\n      },\n      connector = data.graphics.connector;\n\n    chart.plotEventHandler(ele, event, 'ConnectorRollOver');\n\n    if (config.showHoverEffect) {\n      [stTObj, endTObj].forEach(obj => {\n        let attrib = {\n            fill: obj.config.hoverFillColor,\n            stroke: obj.config.hoverBorderColor\n          },\n          percentComplete = obj.config.percentComplete,\n          slackGraphic = obj.graphics.slackElem,\n          element = obj.graphics.element,\n          // Percent complete graphic is task fill\n          percentCompleteGraphic = obj.graphics.taskFill;\n        if (percentComplete && !obj.config.showAsGroup) {\n          slackGraphic && slackGraphic.attr({\n            fill: obj.config.slackHoverColor\n          });\n          percentCompleteGraphic && percentCompleteGraphic.attr({\n            fill: obj.config.hoverFillColor,\n            stroke: obj.config.hoverBorderColor\n          });\n          delete attrib.fill;\n        }\n        element && element.attr(attrib);\n      });\n      connector && connector.attr(attr);\n    }\n  },\n  /**\n   * Mouse out event handler for connectors\n   *\n   * @param {Object} chart The chart instance which the connector is a part of\n   *\n   * @return {Function} The function to be executed on a mouse out\n   */\n  rollOutHandler = chart => function (event) {\n    var ele = this,\n      data = ele.data('dataObj'),\n      config = data.config,\n      chartComponents = chart.components,\n      taskMap = chartComponents.tasksMap,\n      stTObj = taskMap[config.fromTaskId],\n      endTObj = taskMap[config.toTaskId],\n      attr = {\n        stroke: config.color,\n        'stroke-width': config.thickness,\n        'stroke-dasharray': config.dashedStyle\n      },\n      connector = data.graphics.connector;\n\n    chart.plotEventHandler(ele, event, 'ConnectorRollOut');\n\n    if (config.showHoverEffect) {\n      [stTObj, endTObj].forEach(obj => {\n        let attrib = {\n            fill: obj.config.color,\n            stroke: obj.config.borderColor,\n            'stroke-width': obj.config.borderThickness,\n            'stroke-dasharray': obj.config.dashedStyle\n          },\n          percentComplete = obj.config.percentComplete,\n          slackGraphic = obj.graphics.slackElem,\n          element = obj.graphics.element,\n          percentCompleteGraphic = obj.graphics.taskFill;\n        if (percentComplete &&\n                !obj.config.showAsGroup) {\n          slackGraphic && slackGraphic.attr({\n            fill: obj.config.slackColor\n          });\n          percentCompleteGraphic && percentCompleteGraphic.attr({\n            fill: obj.config.color\n          });\n          delete attrib.fill;\n        }\n        element && element.attr(attrib);\n      });\n      connector && connector.attr(attr);\n    }\n  };\naddDep({\n  name: 'connectorAnimation',\n  type: 'animationRule',\n  extension: connectorAnimation\n});\n/**\n * Defines a Connector dataset for a Gantt chart.\n */\nclass Connector extends Task {\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'connector';\n  }\n\n  /**\n   * Sets the default configurations of the dataset\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n\n    let config = this.config;\n\n    config.isdashed = 1;\n    config.thickness = 1;\n  }\n\n  /**\n   * Parses and configures the dataset according to the data given by the user.\n   */\n  configureAttributes () {\n    let dataset = this,\n      jsonData = dataset.getFromEnv('dataSource'),\n      userConfig = extend2(\n        {},\n        jsonData.connectors && jsonData.connectors.length\n          ? jsonData.connectors[0]\n          : jsonData.connectors || {}\n      );\n\n    parseConfiguration(\n      userConfig,\n      dataset.config,\n      dataset.getFromEnv('chart').config,\n      { connector: true }\n    );\n\n    if (!dataset.components) {\n      dataset.components = {};\n    }\n\n    dataset._setConfigure();\n\n    dataset.setState('dirty', true);\n  }\n\n  /**\n   * Configures each data of the dataset\n   *\n   * @param {Array} newDataset The new dataset, if any\n   */\n  _setConfigure (newDataset) {\n    let dataset = this,\n      datasetConfig = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      jsonData = dataset.getFromEnv('dataSource'),\n      JSONData = jsonData.connectors && jsonData.connectors.length\n        ? jsonData.connectors[0]\n        : jsonData.connectors || {},\n      setDataArr = newDataset || JSONData.length ? JSONData : JSONData.connector,\n      setDataLen = (setDataArr && setDataArr.length) || 0,\n      colorM = chart.getFromEnv('color-manager'),\n      chartConfig = chart.config,\n      dataStore = dataset.components.data,\n      i,\n      dataObj,\n      setData,\n      config,\n      cnColor,\n      cnAlpha,\n      cnThickness,\n      cnIsDashed;\n\n    if (!dataStore) {\n      dataStore = dataset.components.data = [];\n    }\n\n    // Connectors\n    for (i = 0; i < setDataLen; i += 1) {\n      setData = setDataArr[i];\n      dataObj = dataStore[i];\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          config: {}\n        };\n      }\n      !dataObj.config && (dataObj.config = {});\n      config = dataObj.config;\n      // Extract the attributes\n      cnColor = pluck(setData.color, datasetConfig.color, colorM.getColor('plotBorderColor'));\n      cnAlpha = pluckNumber(setData.alpha, datasetConfig.alpha, 100);\n      cnThickness = pluckNumber(setData.thickness, datasetConfig.thickness, 1);\n      cnIsDashed = pluckNumber(setData.isdashed, datasetConfig.isdashed, 1);\n\n      config.fromTaskId = getFirstValue(setData.fromtaskid, '').toLowerCase();\n      config.toTaskId = getFirstValue(setData.totaskid, '').toLowerCase();\n      config.fromTaskConnectStart = pluckNumber(setData.fromtaskconnectstart, 0);\n      config.toTaskConnectStart = pluckNumber(setData.totaskconnectstart, 1);\n      config.color = convertColor(cnColor);\n      config.alpha = cnAlpha * 0.01;\n      config.link = setData.link;\n\n      config.showHoverEffect = pluckNumber(setData.showhovereffect,\n        datasetConfig.showhovereffect, chartConfig.showconnectorhovereffect, 1);\n\n      config.hoverColor = convertColor(\n        pluck(setData.hovercolor, datasetConfig.hovercolor, chartConfig.connectorhovercolor,\n          getDarkColor(cnColor, 80)),\n        pluckNumber(setData.hoveralpha, datasetConfig.hoveralpha, chartConfig.connectorhoveralpha,\n          cnAlpha)\n      );\n\n      config.hoverThickness = pluckNumber(setData.hoverthickness, datasetConfig.hoverthickness,\n        chartConfig.connectorhoverthickness, cnThickness);\n\n      config.thickness = cnThickness;\n\n      config.dashedStyle = cnIsDashed\n        ? getDashStyle(\n          pluckNumber(setData.dashlen, datasetConfig.dashlen, 5),\n          pluckNumber(setData.dashgap, datasetConfig.dashgap, cnThickness),\n          cnThickness\n        )\n        : 'none';\n    }\n\n    if (pluckNumber(JSONData.visible, 1)) {\n      dataset.setState('visible', true);\n    } else {\n      dataset.setState('visible', false);\n    }\n  }\n\n  /**\n   * Draws the dataset.\n   */\n  draw () {\n    let dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      chartComponents = chart.components,\n      dataStore = dataset.components.data,\n      animationManager = dataset.getFromEnv('animationManager'),\n      chartConfig = chart.config,\n      ln = dataStore.length,\n      taskMap = chartComponents.tasksMap,\n      cExt = chartConfig.connectorextension,\n      canvas = chart.getChildren('canvas')[0],\n      parentContainer = canvas.getChildContainer('connectorGroup'),\n      container = dataset.getContainer('connectorContainer'),\n      visible = dataset.getState('visible'),\n      isContextChanged = dataset._contextChanged(),\n      // animationObj = chart.get('config', 'animationObj'),\n      // animationDuration = animationObj.duration,\n      // dummyAnimElem = animationObj.dummyObj,\n      // dummyAnimObj = animationObj.animObj,\n      // animType = animationObj.animType,\n      removeDataArr = dataset.components.removeDataArr || [],\n      removeDataArrLen = removeDataArr.length,\n      startTaskId,\n      endTaskId,\n      stTObj,\n      endTObj,\n      dataObj,\n      isStraightLine,\n      stY,\n      etY,\n      stx1,\n      stx2,\n      etx1,\n      etx2,\n      diff,\n      cnCase,\n      config,\n      stTConfig,\n      endTConfig,\n      cPath,\n      tH,\n      graphics,\n      connectorDummy,\n      connector,\n      eventArgs,\n      trackerElementDummy,\n      trackerElement,\n      i;\n\n    if (!dataset.getState('removed') &&\n      !dataset.getState('dirty') &&\n      !(isContextChanged && visible)) {\n      return;\n    }\n\n    if (!container) {\n      container = dataset.addContainer(\n        'connectorContainer', animationManager.setAnimation({\n          el: 'group',\n          attr: { name: 'connectors' },\n          container: parentContainer,\n          component: dataset\n        })\n      );\n      if (!visible) {\n        container.hide();\n      } else {\n        container.show();\n      }\n    }\n\n    // Iterate through each and draw it\n    for (i = 0; i <= ln; i += 1) {\n      dataObj = dataStore[i];\n      if (!dataObj) {\n        continue;\n      }\n      config = dataObj.config;\n      !dataObj.graphics && (dataObj.graphics = {});\n      graphics = dataObj.graphics;\n      startTaskId = config.fromTaskId && config.fromTaskId.toLowerCase();\n      endTaskId = config.toTaskId && config.toTaskId.toLowerCase();\n      stTObj = taskMap[startTaskId];\n      endTObj = taskMap[endTaskId];\n      connectorDummy = graphics.connector;\n      // If the connector's from and to Id are defined, only then we draw the connector\n      if (stTObj && endTObj) {\n        stTConfig = stTObj.config;\n        endTConfig = endTObj.config;\n        // Y Positions\n        stY = stTConfig.yPos + (stTConfig.height * 0.5);\n        etY = endTConfig.yPos + (endTConfig.height * 0.5);\n        // Check if the to and from bars are in straight line\n        isStraightLine = (stY === etY);\n        // X Positions\n        stx1 = stTConfig.xPos;\n        stx2 = stTConfig.xPos + stTConfig.width;\n        etx1 = endTConfig.xPos;\n        etx2 = endTConfig.xPos + endTConfig.width;\n        if (checkInvalidValue(stx1, stx2, etx1, etx2) === false) {\n          continue;\n        }\n        diff = 0;\n        // There can be four cases if the two tasks are not in straight line\n        cnCase = 0;\n        // cnCase 1: End of StartTask to Start of EndTask\n        if (config.fromTaskConnectStart === 0 && config.toTaskConnectStart === 1) {\n          cnCase = 1;\n        }\n        // cnCase 2: End of StartTask to End of EndTask\n        if (config.fromTaskConnectStart === 0 && config.toTaskConnectStart === 0) {\n          cnCase = 2;\n        }\n        // cnCase 3: Start of StartTask to Start of EndTask\n        if (config.fromTaskConnectStart === 1 && config.toTaskConnectStart === 1) {\n          cnCase = 3;\n        }\n        // cnCase 4: Start of StartTask to End of EndTask\n        if (config.fromTaskConnectStart === 1 && config.toTaskConnectStart === 0) {\n          cnCase = 4;\n        }\n\n        if (isStraightLine) {\n          tH = stTConfig.height;\n          switch (cnCase) {\n            case 1 :\n              diff = (etx1 - stx2) / 10;\n              cPath = ['M', stx2, stY, stx2 + diff, stY,\n                'L', stx2 + diff, stY, stx2 + diff, stY - tH,\n                'L', stx2 + diff, stY - tH, etx1 - diff, stY - tH,\n                'L', etx1 - diff, stY - tH, etx1 - diff, stY,\n                'L', etx1 - diff, stY, etx1, etY];\n              break;\n            case 2 :\n              cPath = ['M', stx2, stY, stx2 + cExt, stY,\n                'L', stx2 + cExt, stY, stx2 + cExt, stY - tH,\n                'L', stx2 + cExt, stY - tH, etx2 + cExt, stY - tH,\n                'L', etx2 + cExt, etY - tH, etx2 + cExt, etY,\n                etx2, etY];\n              break;\n            case 3 :\n              cPath = ['M', stx1, stY, stx1 - cExt, stY,\n                'L', stx1 - cExt, stY, stx1 - cExt, stY - tH,\n                'L', stx1 - cExt, stY - tH, etx1 - cExt, stY - tH,\n                'L', etx1 - cExt, stY - tH, etx1 - cExt, stY,\n                'L', etx1 - cExt, stY, etx1, stY];\n\n              break;\n            case 4 :\n              cPath = ['M', stx1, stY, stx1 - cExt, stY,\n                'L', stx1 - cExt, stY, stx1 - cExt, stY - tH,\n                'L', stx1 - cExt, stY - tH, etx2 + cExt, stY - tH,\n                'L', etx2 + cExt, stY - tH, etx2 + cExt, stY,\n                'L', etx2 + cExt, stY, etx2, stY];\n              break;\n          }\n        } else {\n          switch (cnCase) {\n            case 1 :\n              cPath = ['M', stx2, stY, stx2 + (etx1 - stx2) / 2, stY,\n                'L', stx2 + (etx1 - stx2) / 2, stY, stx2 + (etx1 - stx2) / 2, etY,\n                'L', stx2 + (etx1 - stx2) / 2, etY, etx1, etY];\n\n              if (stx2 <= etx1) {\n                cPath = ['M', stx2, stY, stx2 + (etx1 - stx2) / 2, stY,\n                  'L', stx2 + (etx1 - stx2) / 2, stY, stx2 + (etx1 - stx2) / 2, etY,\n                  'L', stx2 + (etx1 - stx2) / 2, etY, etx1, etY];\n              } else {\n                cPath = ['M', stx2, stY, stx2 + cExt, stY,\n                  'L', stx2 + cExt, stY, stx2 + cExt, stY + (etY - stY) / 2,\n                  'L', stx2 + cExt, stY + (etY - stY) / 2, etx1 - cExt, stY + (etY - stY) / 2,\n                  'L', etx1 - cExt, stY + (etY - stY) / 2, etx1 - cExt, etY,\n                  'L', etx1 - cExt, etY, etx1, etY];\n              }\n              break;\n            case 2 :\n              diff = ((etx2 - stx2) < 0) ? (0) : (etx2 - stx2);\n              cPath = ['M', stx2, stY, stx2 + cExt + diff, stY,\n                'L', stx2 + cExt + diff, stY, stx2 + cExt + diff, etY,\n                'L', stx2 + cExt + diff, etY, etx2, etY];\n              break;\n            case 3 :\n              diff = ((stx1 - etx1) < 0) ? (0) : (stx1 - etx1);\n              cPath = ['M', stx1, stY, stx1 - cExt - diff, stY,\n                'L', stx1 - cExt - diff, stY, stx1 - cExt - diff, etY,\n                'L', stx1 - cExt - diff, etY, etx1, etY];\n              break;\n            case 4 :\n              if (stx1 > etx2) {\n                cPath = ['M', stx1, stY, stx1 - (stx1 - etx2) / 2, stY,\n                  'L', stx1 - (stx1 - etx2) / 2, stY, stx1 - (stx1 - etx2) / 2, etY,\n                  'L', stx1 - (stx1 - etx2) / 2, etY, etx2, etY];\n              } else {\n                cPath = ['M', stx1, stY, stx1 - cExt, stY,\n                  'L', stx1 - cExt, stY, stx1 - cExt, stY + (etY - stY) / 2,\n                  'L', stx1 - cExt, stY + (etY - stY) / 2, etx2 + cExt, stY + (etY - stY) / 2,\n                  'L', etx2 + cExt, stY + (etY - stY) / 2, etx2 + cExt, etY,\n                  'L', etx2 + cExt, etY, etx2, etY];\n              }\n              break;\n          }\n        }\n        connector = graphics.connector = animationManager.setAnimation({\n          el: connectorDummy || 'path',\n          label: 'path',\n          attr: {\n            path: cPath,\n            stroke: config.color,\n            'stroke-opacity': config.alpha,\n            'stroke-width': config.thickness,\n            'stroke-dasharray': config.dashedStyle\n          },\n          container: container,\n          component: dataset\n        });\n        connector.show();\n\n        eventArgs = {\n          fromTaskId: config.fromTaskId,\n          toTaskId: config.toTaskId,\n          fromTaskConnectStart: config.fromTaskConnectStart,\n          toTaskConnectStart: config.toTaskConnectStart,\n          link: config.link,\n          sourceType: 'connector'\n        };\n\n        trackerElementDummy = graphics.trackerElement;\n\n        trackerElement = graphics.trackerElement = animationManager.setAnimation({\n          el: trackerElementDummy || 'path',\n          attr: {\n            path: cPath,\n            stroke: TRACKER_FILL,\n            'stroke-width': Math.max(config.thickness, 10),\n            cursor: config.link ? 'pointer' : ''\n          },\n          container: container,\n          component: dataset\n        });\n        if (!trackerElementDummy) {\n          trackerElement.on('fc-click', connectorClick(chart))\n            .hover(rollOverHandler(chart), rollOutHandler(chart));\n        }\n        trackerElement\n          .data('dataObj', dataObj)\n          .data('eventArgs', eventArgs);\n      } else {\n        connectorDummy && animationManager.setAnimation({\n          el: connectorDummy,\n          component: dataset,\n          callback: hideFn,\n          doNotRemove: true\n        });\n        graphics.trackerElement && animationManager.setAnimation({\n          el: graphics.trackerElement,\n          component: dataset,\n          callback: hideFn,\n          doNotRemove: true\n        });\n      }\n    }\n\n    for (i = 0; i < removeDataArrLen; i++) {\n      dataset._removeDataVisuals(removeDataArr.shift());\n    }\n  }\n}\n\nexport default Connector;\n","export default {\n  'initial.dataset.connector': () => {\n    return {\n      'path.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      }\n    };\n  }\n};\n","import { datasetFactory } from '@fusioncharts/core/src/lib';\n\n/**\n * Checks if the data source of the chart has any connectors in it or not.\n *\n * @return {boolean} Whether the data source of the chart has any connectors.\n */\nconst _hasNoConnectors = (dataSource) => {\n    const connectors = dataSource.connectors;\n\n    let hasNoConnectors = true;\n\n    if (typeof connectors !== 'undefined') {\n      if (connectors.length) {\n        hasNoConnectors = !(connectors.length > 0);\n      } else {\n        hasNoConnectors = connectors.task && !(connectors.task.length > 0);\n      }\n    }\n\n    return hasNoConnectors;\n  },\n\n  /**\n * Checks if the data source of the chart has any milestones in it or not.\n *\n * @return {boolean} Whether the data source of the chart has any milestones.\n */\n  _hasNoMilestones = (dataSource) => {\n    const milestones = dataSource.milestones;\n\n    let hasNoMilestones = true;\n\n    if (typeof milestones !== 'undefined') {\n      if (milestones.length) {\n        hasNoMilestones = !(milestones.length > 0);\n      } else {\n        hasNoMilestones = milestones.milestone && !(milestones.milestone.length > 0);\n      }\n    }\n\n    return hasNoMilestones;\n  },\n\n  /**\n * Checks if the data source of the chart has any tasks in it or not.\n *\n * @return {boolean} Whether the data source of the chart has any tasks.\n */\n  _hasNoTasks = (dataSource) => {\n    const tasks = dataSource.tasks;\n\n    let hasNoTasks = true;\n\n    if (typeof tasks !== 'undefined') {\n      if (tasks.length) {\n        hasNoTasks = !(tasks.length > 0);\n      } else {\n        hasNoTasks = tasks.task && !(tasks.task.length > 0);\n      }\n    }\n\n    return hasNoTasks;\n  },\n\n  /**\n * Checks whether the chart should display a no data to display message.\n *\n * @return {boolean} Whether the chart has any data to display or not.\n */\n  _hasNoDataToDisplay = (dataSource) => {\n    return _hasNoTasks(dataSource) && _hasNoConnectors(dataSource) && _hasNoMilestones(dataSource);\n  };\n\n/**\n * This is simple dataset factory. It instantiates and cofigures the datasets in a Gantt chart.\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let dataSource = chart.getFromEnv('dataSource'),\n    task,\n    connector,\n    milestone;\n\n  if (_hasNoDataToDisplay(dataSource)) {\n    chart.setChartMessage();\n    return;\n  }\n\n  task = dataSource.tasks;\n  connector = dataSource.connectors;\n  milestone = dataSource.milestones;\n\n  task && datasetFactory(\n    chart,\n    chart.getDSdef('task'),\n    'task',\n    1,\n    task.length ? task : [task]\n  );\n\n  connector && datasetFactory(\n    chart,\n    chart.getDSdef('connector'),\n    'connector',\n    1,\n    connector.length ? connector : [connector]\n  );\n\n  milestone && datasetFactory(\n    chart,\n    chart.getDSdef('milestone'),\n    'milestone',\n    1,\n    milestone.length ? milestone : [milestone]\n  );\n\n  chart.getDatasets().forEach(dataset => {\n    dataset.addToEnv('yAxis', chart.getChildren('xAxis')[0]);\n    dataset.addToEnv('xAxis', chart.getChildren('yAxis')[0]);\n  });\n\n  chart.config.showLegend && chart._createLegendItems();\n}\n"],"sourceRoot":""}