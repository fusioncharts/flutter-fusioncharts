{"version":3,"sources":["webpack:///./packages/fc-powercharts/src/dataset/dragnode/draggablelabel-animation.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/connector.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/connector-animation.js","webpack:///./packages/fc-powercharts/src/dataset/groups/dragnode/index.js","webpack:///./packages/fc-powercharts/src/factories/dragnode-dataset.js","webpack:///./packages/fusioncharts/viz/candlestick.js","webpack:///./packages/fc-powercharts/src/chart/candlestick/index.js","webpack:///./packages/fc-powercharts/src/factories/candlestick-dataset.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/index.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/candlestick.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/candlestick.animation.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/candlestickbar.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/candlestickbar.animation.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/candlestickline.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/volume.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/trendset.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/trendset.animation.js","webpack:///./packages/fc-powercharts/src/factories/candlestick-axis.js","webpack:///./packages/fusioncharts/viz/boxandwhisker2d.js","webpack:///./packages/fc-powercharts/src/chart/boxandwhisker2d/index.js","webpack:///./packages/fc-powercharts/src/dataset/boxandwhisker/index.js","webpack:///./packages/fc-powercharts/src/dataset/boxandwhisker/boxandwhiskerline.js","webpack:///./packages/fc-powercharts/src/dataset/boxandwhisker/boxandwhiskerline.animation.js","webpack:///./packages/fc-powercharts/src/dataset/boxandwhisker/index.animation.js","webpack:///./packages/fc-powercharts/src/factories/boxandwhisker-dataset.js","webpack:///./packages/fc-powercharts/src/dataset/boxandwhisker/box-and-whisker-statistical-calc.js","webpack:///./packages/fc-powercharts/src/dataset/groups/boxandwhisker-multiseries/index.js","webpack:///./packages/fusioncharts/viz/sankey.js","webpack:///./packages/fc-powercharts/src/chart/sankey/index.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/index.js","webpack:///./packages/fc-powercharts/src/factories/sankey-node-factory.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/sankey-node.js","webpack:///./packages/fc-powercharts/src/factories/sankey-link-factory.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/sankey-link.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/sankey-ribbon.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/sankeyhelper.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/index.animation.js","webpack:///./packages/fc-powercharts/src/factories/sankey-dataset-factory.js","webpack:///./packages/fusioncharts/viz/heatmap.js","webpack:///./packages/fc-powercharts/src/chart/heatmap/index.js","webpack:///./packages/fc-powercharts/src/dataset/heatmap/index.js","webpack:///./packages/fc-powercharts/src/dataset/heatmap/index.animation.js","webpack:///./packages/fc-powercharts/src/dataset/groups/heatmap/index.js","webpack:///./packages/fc-powercharts/src/factories/category-axis.js","webpack:///./packages/fusioncharts/viz/radar.js","webpack:///./packages/fc-powercharts/src/chart/radar/index.js","webpack:///./packages/fc-powercharts/src/dataset/radar/index.js","webpack:///./packages/fc-powercharts/src/dataset/radar/index.animation.js","webpack:///./packages/fc-powercharts/src/factories/radar-axis.js","webpack:///./packages/fc-core/src/axis/polar.js","webpack:///./packages/fc-core/src/axis/polar.animation.js","webpack:///./packages/fc-powercharts/src/factories/polar-canvas.js","webpack:///./packages/fc-powercharts/src/_internal/components/canvases/polar-canvas.js","webpack:///./packages/fc-core/src/axis-ref-visuals/axis-ref-polar-component.js","webpack:///./packages/fc-core/src/axis-ref-visuals/axis-ref-polar.animation.js","webpack:///./packages/fusioncharts/viz/chord.js","webpack:///./packages/fc-powercharts/src/chart/chord/index.js","webpack:///./packages/fc-charts/src/factories/chord-legend.js","webpack:///./packages/fc-powercharts/src/factories/node-link-manager.js","webpack:///./packages/fc-powercharts/src/dataset/chord/node-link-manager.js","webpack:///./packages/fc-powercharts/src/factories/chord-node-factory.js","webpack:///./packages/fc-powercharts/src/dataset/chord/node.js","webpack:///./packages/fc-powercharts/src/chart/chord/utils/index.js","webpack:///./packages/fc-powercharts/src/factories/chord-link-factory.js","webpack:///./packages/fc-powercharts/src/dataset/chord/ribbon.js","webpack:///./packages/fusioncharts/viz/dragarea.js","webpack:///./packages/fusioncharts/features/multicanvas-crossline-manager.js","webpack:///./packages/fusioncharts/powercharts/index.js","webpack:///./packages/fusioncharts/viz/logmscolumn2d.js","webpack:///./packages/fc-powercharts/src/chart/logmscolumn2d/index.js","webpack:///./packages/fc-powercharts/src/chart/_internal/mslog.js","webpack:///./packages/fc-powercharts/src/factories/log-axis.js","webpack:///./packages/fc-core/src/axis/log.js","webpack:///./packages/fusioncharts/viz/logmsline.js","webpack:///./packages/fc-powercharts/src/chart/logmsline/index.js","webpack:///./packages/fusioncharts/viz/logstackedcolumn2d.js","webpack:///./packages/fc-powercharts/src/chart/logstackedcolumn2d/index.js","webpack:///./packages/fusioncharts/viz/errorbar2d.js","webpack:///./packages/fc-powercharts/src/chart/errorbar2d/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorbar2d/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorbar2d/index.animation.js","webpack:///./packages/fusioncharts/viz/errorline.js","webpack:///./packages/fc-powercharts/src/chart/errorline/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorline/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorline/error.animation.js","webpack:///./packages/fc-powercharts/src/dataset/errorline/line.animation.js","webpack:///./packages/fusioncharts/viz/errorscatter.js","webpack:///./packages/fc-powercharts/src/chart/errorscatter/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorscatter/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorscatter/line.animation.js","webpack:///./packages/fc-powercharts/src/dataset/errorscatter/error.animation.js","webpack:///./packages/fusioncharts/viz/inversemsarea.js","webpack:///./packages/fc-powercharts/src/chart/inversemsarea/index.js","webpack:///./packages/fusioncharts/viz/inversemscolumn2d.js","webpack:///./packages/fc-powercharts/src/chart/inversemscolumn2d/index.js","webpack:///./packages/fusioncharts/viz/inversemsline.js","webpack:///./packages/fc-powercharts/src/chart/inversemsline/index.js","webpack:///./packages/fusioncharts/viz/dragcolumn2d.js","webpack:///./packages/fc-powercharts/src/chart/dragcolumn2d/index.js","webpack:///./packages/fc-powercharts/src/chart/_internal/dragbase.js","webpack:///./packages/fc-powercharts/src/chart/_internal/editable-charts.js","webpack:///./packages/fc-powercharts/src/dataset/dragcolumn/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragcolumn/index.animation.js","webpack:///./packages/fc-powercharts/src/dataset/groups/dragcolumn-multiseries/index.js","webpack:///./packages/fc-powercharts/src/factories/limit-updater.js","webpack:///./packages/fc-core/src/axis/limit-updater.js","webpack:///./packages/fc-powercharts/src/factories/drag-tracker.js","webpack:///./packages/fc-powercharts/src/chart/_internal/drag-tracker.js","webpack:///./packages/fusioncharts/viz/dragline.js","webpack:///./packages/fc-powercharts/src/chart/dragline/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragline/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragarea/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragarea/index.animation.js","webpack:///./packages/fc-powercharts/src/dataset/dragline/index.animation.js","webpack:///./packages/fc-powercharts/src/chart/dragarea/index.js","webpack:///./packages/fusioncharts/viz/kagi.js","webpack:///./packages/fc-powercharts/src/chart/kagi/index.js","webpack:///./packages/fc-powercharts/src/chart/waterfall2d/index.js","webpack:///./packages/fc-powercharts/src/dataset/waterfall2d/index.js","webpack:///./packages/fc-powercharts/src/dataset/waterfall2d/index.animation.js","webpack:///./packages/fc-powercharts/src/dataset/kagi/index.js","webpack:///./packages/fc-powercharts/src/dataset/kagi/index.animation.js","webpack:///./packages/fusioncharts/viz/waterfall2d.js","webpack:///./packages/fusioncharts/viz/selectscatter.js","webpack:///./packages/fc-powercharts/src/chart/selectscatter/index.js","webpack:///./packages/fc-powercharts/src/dataset/selectscatter/index.js","webpack:///./packages/fc-powercharts/src/dataset/selectscatter/index.animation.js","webpack:///./packages/fusioncharts/viz/multilevelpie.js","webpack:///./packages/fc-powercharts/src/chart/multilevelpie/index.js","webpack:///./packages/fc-powercharts/src/factories/mlpie-dataset.js","webpack:///./packages/fc-powercharts/src/dataset/multilevelpie/index.js","webpack:///./packages/fc-powercharts/src/dataset/multilevelpie/index.animation.js","webpack:///./packages/fusioncharts/viz/sunburst.js","webpack:///./packages/fc-powercharts/src/chart/sunburst/index.js","webpack:///./packages/fc-powercharts/src/factories/sunburst-dataset.js","webpack:///./packages/fc-powercharts/src/dataset/sunburst/index.js","webpack:///./packages/fc-powercharts/src/dataset/sunburst/index.animation.js","webpack:///./packages/fusioncharts/viz/multiaxisline.js","webpack:///./packages/fc-powercharts/src/chart/multiaxisline/index.js","webpack:///./packages/fc-powercharts/src/factories/multiaxis-axis.js","webpack:///./packages/fc-powercharts/src/_internal/components/axis-selector-ui/index.js","webpack:///./packages/fc-powercharts/src/factories/multiaxis-vcanvas.js","webpack:///./packages/fc-powercharts/src/factories/multiaxis-dataset.js","webpack:///./packages/fc-powercharts/src/dataset/multiaxisline/index.js","webpack:///./packages/fc-powercharts/src/dataset/multiaxisline/index.animation.js","webpack:///./packages/fusioncharts/viz/msstepline.js","webpack:///./packages/fc-powercharts/src/chart/msstepline/index.js","webpack:///./packages/fc-powercharts/src/dataset/msstepline/index.js","webpack:///./packages/fc-powercharts/src/dataset/msstepline/index.animation.js","webpack:///./packages/fusioncharts/viz/dragnode.js","webpack:///./packages/fc-powercharts/src/chart/dragnode/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/dragnode.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/dragnode-animation.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/dragablelabels.js"],"names":["initialAttr","opacity","finalAttr","slot","EVENTARGS","preDefStr","configStr","_getlinePath","connector","pointConfig","config","fromPointObj","toPointObj","fromX","fromY","toX","toY","path","arrowAtStart","shapeType","SHAPE_RECT","concat","DragNodeConnector","_drawArrow","shapeArg","width","height","radius","arrowAtEnd","push","createGroup","groupName","parentContainer","dataset","getFromEnv","setAnimation","el","attr","name","container","component","label","addDep","type","extension","connectorAnimation","getType","getName","_setDatasetIndex","chidrenArr","this","getLinkedParent","getChildren","datasetIndex","indexOf","configureAttributes","datasetJSON","trimData","JSONData","index","chartAttr","conf","connectorsObj","connectorsArr","length","HUNDRED","HUNDREDSTRING","connectorsTooltext","getValidValue","parseUnsafeString","pluck","connectortooltext","stdThickness","pluckNumber","stdthickness","conColor","getFirstColor","color","conAlpha","alpha","conDashGap","dashgap","conDashLen","dashlen","conDashed","Boolean","dashed","arrowatstart","arrowatend","conStrength","strength","toolTipSepChar","tooltipsepchar","showTooltip","showtooltip","showTextOutline","textoutline","viewMode","viewmode","_refreshData","_setConfigure","connectorObj","toolText","labelTextObj","connectorStore","components","data","connObj","connectorLabel","setConAlpha","smartLabel","defToolTextMacro","setConColor","FCcolor","connectorToolText","tooltext","boolCondition","setStyle","useEllipsesOnOverflow","useEllipsesWhenOverflow","getOriSize","graphics","_options","id","toString","from","BLANK","to","customToolText","dashStyle","getDashStyle","DASH_DEF","link","labelWidth","widht","labelHeight","add","update","dataLabelStyle","_configureDataLabelStyle","removed","createContainer","getChildContainer","getContainer","addContainer","connectorGroup","draw","fromId","toId","i","manager","style","removeDataArr","removeDataArrLen","cleared","css","getNode","deleted","drawConnector","drawn","_removeDataVisuals","shift","parsePlotAttributes","strokeWidth","pathArr","startConnectors","endConnectors","fromConf","toConf","NumberFormatter","eventArgs","_xPos","_yPos","_labelX","_labelY","textBgColor","fromNodeId","toNodeId","parseTooltext","fromXValue","dataLabels","x","fromYValue","y","fromXDataValue","fromYDataValue","fromLabel","displayValue","toXValue","toYValue","toXDataValue","toYDataValue","toLabel","props","element","cursor","POINTER","BLANKSTRING","stroke","toRaphaelColor","allocatePosition","len","elementCheck","toolTipController","animationManager","connectorsGroup","pool","graphic","on","mouseDown","mousemove","mouseup","hover","hoverIn","hoverOut","show","enableToolTip","disableToolTip","drawLabel","labelAttrs","labelStyle","labelElement","labelElementCheck","labelX","labelY","dataStore","drawIndividualLabel","labelConnector","text","fill","direction","backgroundColor","borderColor","outlineText","hide","clearLongPress","triggerConnectorUI","e","plotEventHandler","X1","Y1","X2","Y2","R","H","PX","PY","RHlf","HHlf","tanganent","angle","Math","atan","arr","PI","cos","sin","abs","tan","removeData","indexVal","stretch","splice","prevData","prevDataLength","currDataLength","dataDiff","DragNodeDataset","UNDEF","manageShapeFields","showGivenColor","manageImageFields","shapesInfo","circle","rectangle","polygon","INPUT","BLANKSPACE","LABEL","DATASET","COMMA","DATASETSTATE","removeElems","remove","defined","obj","makeShapeSpecificModifications","dataObj","shape","CIRCLE","POLYGON","sides","numsides","_showNodeUpdateUI","key","ui","getGraphicalElement","ele","fields","shapeFields","test","labels","RegExp","val","getValidColor","colorOut","background","parseColor","animate","dialogHeight","chartHeight","isChecked","image","imgKey","ok","cancel","removeItem","error","setAnimationState","dialog","state","top","callback","edit","noUIfound","paper","inputStyle","border","fontSize","lineHeight","padding","fontFamily","inCanvasStyle","textAlign","addGraphicalElement","createHtmlDialog","event","stopPropagation","idFound","submitObj","uiFields","uiEdit","getFirstValue","getLimit","min","datasetId","tooltip","labelalign","allowdrag","draggable","imagenode","imagewidth","imgWidth","imageheight","imgHeight","imagealign","imgAlign","imageurl","imgUrl","circPolyRadius","polySides","RECTANGLE","rectWidth","rectHeight","Number","updateNode","addNode","visible","focus","enableFields","deleteNode","html","disabled","removeAttribute","clearFields","value","fcEach","nodeUpdateUIDefinition","def","field","innerHTML","attrs","confObj","noInput","inputType","inputPaddingTop","inputWidth","handleKeyPress","call","setState","connectorUpdateUIDefinition","labelUpdateUIDefinition","configure","showLabelUpdateUI","options","bgcolor","bordercolor","fontsize","size","addLabel","restoreData","labelObj","datasets","chart","showlegend","connectors","jsonData","labelSet","removeElements","datastore","j","restoreDatasets","k","dataSets","json","fireChartInstanceEvent","asyncDraw","labelDS","componentFactory","DragNodeLabels","sourceType","extend2","sourceEvent","showNodeAddUI","datasetDropDownStr","COMMASTRING","showNodeUpdateUI","showConnectorAddUI","nodes","nodeStr","showConnectorUpdateUI","fromid","toid","renderer","uiName","url","arratstart","arratend","editConnector","addConnector","deleteConnector","checkDash","showHideFn","apply","arguments","dataIndex","datasetName","seriesname","_drawNode","_setupKdTree","updateObj","dataLen","prop","node","numSides","connectorLink","conLen","connectorSets","connConfig","connFound","dialogWidth","onsubmit","oncancel","onremove","cacheUI","uiok","uicancel","uiremove","dialogAttrs","okAttrs","cancelAttrs","removeAttrs","attrObj","chartWidth","buttonStyle","hashify","paddingTop","borderRadius","HASHSTRING","zIndex","display","veil","boxShadow","filter","tabIndex","keyCode","nodeId","Object","assign","parentChildContainers","forEach","addChildContainer","defaultVcanvasGroup","elem","graphicalMap","cacheUpdateUI","cacheLabelDeleteUI","cacheLabelUpdateUI","cacheConnectorUpdateUIedit","cacheConnectorUpdateUInew","getState","isVisible","getDataLimits","yMin","Infinity","yMax","xMax","xMin","max","isNotVisible","childChanged","hideWaitElem","clearTimeout","_longpressactive","triggerLabelUI","setTimeout","showLabelDeleteUI","deleteLabel","trackerElement","lastTappedLabelIndex","message","translate","drawWaitingRing","waitElement","ringpath","ratio","seriesName","seriesId","imageNode","imageWidth","imageHeight","imageAlign","imageURL","drawNodeConnectors","connectorSet","fromObj","toObj","_clearConnectors","componentDispose","getJSONData","children","nodeSets","labelSets","ComponentInterface","vCanvas","groupManager","datasetsJSON","connectorsJSON","canvas","datasetParent","setType","setChartMessage","getDSGroupdef","getDSdef","parent","set","childArr","removeSets","Candlestick","altHGridColorStr","altHGridAlphaStr","math","mathMax","mathRound","round","POSITION_BOTTOM","divLineAlpha3DStr","defaultFontStr","divLineAlphaStr","altVGridColorStr","altVGridAlphaStr","COLOR_000000","colors","c000000","chartPaletteStr","chart2D","bgColor","bgAlpha","bgAngle","bgRatio","canvasBgColor","canvasBaseColor","divLineColor","legendBgColor","legendBorderColor","toolTipbgColor","toolTipBorderColor","baseFontColor","anchorBgColor","chart3D","divLineAlpha","isDual","paletteIndex","hasInteractiveLegend","numOfCanvas","registerFactory","virtualCanvasFactory","axisFactory","datasetFactory","CandleStickBarDataset","CandleStickLineDataset","CandleStickDataset","__setDefaultConfig","hasLegend","defaultDatasetType","drawanchors","enablemousetracking","iscandlestick","canvasborderthickness","parseChartAttr","volumeHeightPercent","chartAttrs","colorM","showVolumeChart","showvolumechart","Array","isArray","v","volume","isVolumeChartRequired","rollOverBandColor","convertColor","rolloverbandcolor","getColor","rolloverbandalpha","crosslinecolor","drawcrosslineontop","crosslinealpha","drawcrossline","skipClipping","vplotbordercolor","vplotborderalpha","vplotborderthickness","showplotborder","showvplotborder","volumeheightpercent","canvasBorderWidth","_spaceManager","spaceForActionBar","actionBarSpace","availableWidth","availableHeight","canvasHeight","xAxisDimensions","volumeCanvas","volumeCanvasConfig","volumeCanvasY","yAxisDim","vYAxisDim","allottedSpace","diff","currentCanvasHeight","currentCanvasWidth","heightAdjust","left","right","bottom","widthAdjust","sum","legendPosition","split","xAxis","yAxis","yAxis2","legend","canvasConfig","actualYDim","chartBorderWidth","minCanvasHeight","minCanvasWidth","canvasMarginLeft","canvasMarginRight","canvasMarginTop","canvasMarginBottom","origCanvasTopMargin","origCanvasBottomMargin","origCanvasLeftMargin","origCanvasRightMargin","_allocateSpace","_manageActionBarSpace","POSITION_LEFT","POSITION_RIGHT","canvasWidth","showLegend","_manageLegendPosition","placeAxis","canvasLeft","canvasRight","POSITION_TOP","_manageChartMenuBar","intermediarySpace","canvasTop","canvasBottom","canvasY","setDimension","_postSpaceManagement","setAxisDimention","vyAxis","canvasArr","axisLeft","isOpposit","opposite","axisLength","setCanvas","_feedAxesRawData","xAxisConf","yAxisConf","vYAxisConf","yAxisConfigure","xAxisConfigure","is3D","palleteString","outCanfontSizeWithUnit","pluckFontSizeMaintainUnit","outcnvbasefontsize","basefontsize","isVertical","isReverse","xaxisposition","drawTrendLabels","outCanfontFamily","outcnvbasefont","basefont","outCanfontSize","computeFontSize","outCancolor","outcnvbasefontcolor","basefontcolor","replace","axisNamePadding","xaxisnamepadding","axisValuePadding","labelpadding","axisNameFont","xaxisnamefont","axisNameFontSize","xaxisnamefontsize","axisNameFontSizeWithUnit","axisNameFontColor","xaxisnamefontcolor","axisNameFontBold","xaxisnamefontbold","axisNameFontItalic","xaxisnamefontitalic","axisNameBgColor","xaxisnamebgcolor","axisNameBorderColor","xaxisnamebordercolor","axisNameAlpha","xaxisnamealpha","axisNameFontAlpha","xaxisnamefontalpha","axisNameBgAlpha","xaxisnamebgalpha","axisNameBorderAlpha","xaxisnameborderalpha","axisNameBorderPadding","xaxisnameborderpadding","axisNameBorderRadius","xaxisnameborderradius","axisNameBorderThickness","xaxisnameborderthickness","axisNameBorderDashed","xaxisnameborderdashed","axisNameBorderDashLen","xaxisnameborderdashlen","axisNameBorderDashGap","xaxisnameborderdashgap","useellipseswhenoverflow","vdivlinecolor","divlinecolor","vdivlinealpha","divlinealpha","divLineThickness","vdivlinethickness","divlinethickness","divLineIsDashed","vdivlinedashed","vdivlineisdashed","divlinedashed","divlineisdashed","divLineDashLen","vdivlinedashlen","divlinedashlen","divLineDashGap","vdivlinedashgap","divlinedashgap","showAlternateGridColor","showalternatevgridcolor","alternateGridColor","alternatevgridcolor","alternateGridAlpha","alternatevgridalpha","numDivLines","numvdivlines","labelFont","labelfont","labelFontSize","labelfontsize","labelFontSizeWithUnit","labelFontColor","labelfontcolor","labelAlpha","labelalpha","labelFontBold","labelfontbold","labelFontItalic","labelfontitalic","labelBdrColor","labelbordercolor","labelBdrAlpha","labelborderalpha","labelLink","labellink","labelBgAlpha","labelbgalpha","labelBgColor","labelbgcolor","labelBdrThickness","labelborderthickness","labelBdrPadding","labelborderpadding","labelBdrRadius","labelborderradius","labelBdrDashed","labelborderdashed","labelBdrDashLen","labelborderdashlen","labelBdrDashGap","labelborderdashgap","axisName","xaxisname","axisMinValue","xaxisminvalue","axisMaxValue","xaxismaxvalue","setAdaptiveMin","setadaptivexmin","adjustDiv","adjustvdiv","labelDisplay","labeldisplay","showLabels","showlabels","rotateLabels","rotatelabels","slantLabel","slantlabels","slantlabel","labelStep","labelstep","xaxisvaluesstep","showAxisValues","showxaxisvalues","showxaxisvalue","showLimits","showvlimits","showDivLineValues","showvdivlinevalues","showZeroPlane","showvzeroplane","zeroPlaneColor","vzeroplanecolor","zeroPlaneThickness","vzeroplanethickness","zeroPlaneAlpha","vzeroplanealpha","showZeroPlaneValue","showvzeroplanevalue","trendlineColor","trendlinecolor","trendlineToolText","trendlinetooltext","trendlineThickness","trendlinethickness","trendlineAlpha","trendlinealpha","showTrendlinesOnTop","showtrendlinesontop","showAxisLine","showxaxisline","showaxislines","drawAxisLines","axisLineThickness","xaxislinethickness","axislinethickness","axisLineAlpha","xaxislinealpha","axislinealpha","axisLineColor","xaxislinecolor","axislinecolor","freezeLimit","vtrendlines","yaxisposition","drawLabelsOpposit","axisNameAlignCanvas","yaxisnamepadding","yaxisvaluespadding","pyaxisnamefont","pyaxisnamefontsize","pyaxisnamefontcolor","pyaxisnamefontbold","pyaxisnamefontitalic","pyaxisnamebgcolor","pyaxisnamebordercolor","pyaxisnamealpha","pyaxisnamefontalpha","pyaxisnamebgalpha","pyaxisnameborderalpha","pyaxisnameborderpadding","pyaxisnameborderradius","pyaxisnameborderthickness","pyaxisnameborderdashed","pyaxisnameborderdashlen","pyaxisnameborderdashgap","axisNameWidth","yaxisnamewidth","rotateAxisName","rotateyaxisname","pyaxisname","showalternatehgridcolor","alternatehgridcolor","alternatehgridalpha","numpdivlines","pyaxisminvalue","pyaxismaxvalue","setadaptiveymin","adjustdiv","yaxisvaluesstep","showyaxisvalues","showyaxisvalue","showyaxislimits","showlimits","showdivlinevalues","showdivlinevalue","showzeroplane","zeroplanecolor","zeroplanethickness","zeroplanealpha","showzeroplanevalue","showyaxisline","yaxislinethickness","yaxislinealpha","yaxislinecolor","yaxisvaluefont","yaxisvaluefontsize","yaxisvaluefontcolor","yaxisvaluealpha","yaxisvaluefontbold","yaxisvaluefontitalic","yaxisvaluebordercolor","yaxisvaluebgalpha","yaxisvalueborderalpha","yaxisvaluelink","yaxisvaluebgcolor","yaxisvalueborderthickness","yaxisvalueborderpadding","yaxisvalueborderradius","yaxisvalueborderdashed","yaxisvalueborderdashlen","yaxisvalueborderdashgap","trendlines","axisIndex","uniqueClassName","vyaxisnamefont","vyaxisnamefontsize","vyaxisnamefontcolor","vyaxisnamefontbold","vyaxisnamefontitalic","vyaxisnamebgcolor","vyaxisnamebordercolor","vyaxisnamealpha","vyaxisnamefontalpha","vyaxisnamebgalpha","vyaxisnameborderalpha","vyaxisnameborderpadding","vyaxisnameborderradius","vyaxisnameborderthickness","vyaxisnameborderdashed","vyaxisnameborderdashlen","vyaxisnameborderdashgap","vyaxisname","numdivlines","vyaxisminvalue","vyaxismaxvalue","showsecondarylimits","mouseoutHandler","_lastDatasetIndex","_lastPointIndex","datasetOrder","getDatasets","mouseTracker","_firePlotEvent","hideAll","_mouseEvtHandler","hoveredInfo","l","derivedEvensInfo","iapi","oriEvent","originalEvent","canvasLen","coordinate","getMouseCoordinate","chartX","chartY","pointFound","_getHoveredPlot","hovered","getMouseEvents","pointIndex","fireOut","events","mouseoutTimer","dimensions","canvasPaddingLeft","paddingLeft","canvasPaddingRight","paddingRight","canvasPaddingTop","canvasPaddingBottom","paddingBottom","_checkInvalidSpecificData","MSCartesian","volumeDatasetParent","sortedDatasetsJSON","trendSet","trendset","dsType","plotpriceas","toLowerCase","slice","sort","a","b","arraySpliceByValue","VolumeDataset","TrendSet","iterateComponents","child","removeComponents","array","colorStrings","COLOR_B90000","B90000","COLOR_FFFFFF","FFFFFF","eventType","plotIndex","setLink","currentToolTip","setElement","getPlotIndices","minX","floor","maxX","ceil","returnIndices","sortedData","__parseToolText","isLine","plotType","setData","getLabel","open","close","high","low","volumeToolText","volumetooltext","yaxisName","yaxisname","xaxisName","openValue","openDataValue","closeValue","closeDataValue","highValue","highDataValue","lowValue","lowDataValue","volumeValue","volumeDataValue","BOLDSTARTTAG","candlestickAnimation","comps","removePlots","_removePlots","__removeElem","setColor","setBorderColor","setAlpha","pointShadow","minValue","maxValue","closeVal","yVal","plotSpacePercent","userMaxColWidth","dataArr","dataLength","numberFormatter","bearBorderColor","bearbordercolor","bearFillColor","bearfillcolor","bullBorderColor","bullbordercolor","bullFillColor","bullfillcolor","plotLineThickness","linethickness","plotBorderThickness","plotlinethickness","plotLineDashLen","plotlinedashlen","plotLineDashGap","plotlinedashgap","_conatinerHidden","minAbsNonZeroValue","minAbsNonZeroData","defaultPadding","parentYAxis","plottooltext","showShadow","showshadow","showErrorValue","errorBarWidthPercent","maxcolwidth","maxColWidth","plotspacepercent","groupPadding","valuePadding","valuepadding","vline","getCleanValue","drawVolume","plotBorderDashStyle","anchorImageUrl","anchorimageurl","borderAlpha","plotLineAlpha","colorArr","showValue","hoverEffects","previousY","errorValueArr","errorValue","errorStartValue","errorBarColor","errorBarThickness","setValue","_x","_y","_b","shadow","_parseToolText","toolTipValue","displayvalue","valuetext","addDatasetSpecificEvtArgs","_dataObj","trackerConfig","calculateScrollRange","scrollMinVal","scrollMinValForLabel","scrollMaxVal","scrollMaxValForLabel","pXs","pX","getValue","_checkPointerOverPlot","ErrorBar2DDataset","inputJSON","ROUND","visibleStr","applyShadow","candlestickbarAnimation","rawDataObj","enableAnimation","animation","defaultanimation","duration","animationduration","plotLineDashed","drawPlots","xPos","yPos","previousYPos","setElem","highPos","lowPos","halfW","trackerTolerance","setColumnPosition","getPixel","errorBar","_height","_width","_checkPointerOverColumn","_checkPointerOverErrorBar","Column","drawAnchors","setAnchorAngle","anchorstartangle","setAnchorRadius","anchorradius","anchorRadius","setAnchorBorderColor","anchorbordercolor","setAnchorBorderThickness","anchorborderthickness","anchorBorderThickness","setAnchorBgColor","anchorbgcolor","setAnchorAlpha","anchoralpha","setAnchorBgAlpha","anchorbgalpha","lineAlpha","plotlinealpha","showvalues","rawDataColor","anchorSides","anchorsides","symbol","mapSymbolName","anchorProps","enabled","anchorAlpha","borderThickness","imageUrl","imageScale","imagescale","imagePadding","anchorimagepadding","imageAlpha","anchorimagealpha","startAngle","drawLine","chartXVal","chartYVal","pointObj","returnValue","maxRadius","getTranslation","isWithinShape","Line","numberFormatterAttrs","chartConfig","vPlotBorderThickness","_containerHidden","plotborderthickness","sforcedecimals","forcevdecimals","forcedecimals","sforceyaxisvaluedecimals","forcevyaxisvaluedecimals","forceyaxisvaluedecimals","syaxisvaluedecimals","vyaxisvaluedecimals","yaxisvaluedecimals","sformatnumber","vformatnumber","formatnumber","sformatnumberscale","vformatnumberscale","formatnumberscale","sdefaultnumberscale","vdefaultnumberscale","defaultnumberscale","snumberscaleunit","vnumberscaleunit","numberscaleunit","vnumberscalevalue","numberscalevalue","sscalerecursively","vscalerecursively","scalerecursively","smaxscalerecursion","vmaxscalerecursion","maxscalerecursion","sscaleseparator","vscaleseparator","scaleseparator","snumberprefix","vnumberprefix","numberprefix","snumbersuffix","vnumbersuffix","numbersuffix","sdecimals","vdecimals","decimals","borderWidth","trendsetAnimation","itemValue","dataStoreObj","setDataArr","trendSetColor","trendsetcolor","trendSetAlpha","trendsetalpha","trendSetThickness","thickness","trendsetthickness","trendSetDashed","trendsetdashed","trendSetDashLen","trendsetdashlen","trendSetDashGap","trendsetdashgap","includeInLegend","includeinlegend","lineColor","connectNullData","connectnulldata","lineDashStyle","_parseAnchorProperties","_addLegend","legendItem","getItem","legendItemId","itemStyle","hiddenStyle","itemHiddenStyle","datasetVisible","hoverStyle","itemHoverStyle","createItem","interactiveLegend","setStateCosmetics","rawFillColor","disposeItem","line","axisRefVisualCartesianVol","vYAxis","canvasVolume","zoomObj","zoomable","pannable","axisRefVisualCartesian","redraw","redrawVol","NumericAxis","setAxisConfig","relativeAxis","setLinkedItem","getId","addExtEventListener","attachAxis","zoomX","zoomY","_setCategories","Boxandwhisker2d","setAttribDefs","whiskerslimitswidthratio","attrTypeNum","pAttr","outliersupperrangeratio","outlierslowerrangeratio","showalloutliers","showmean","showsd","showmd","showqd","showminvalues","showmaxvalues","showq1values","showq3values","showmedianvalues","useErrorAnimation","avoidCrispError","useplotgradientcolor","fireGroupEvent","hasScroll","eiMethods","scrollTo","includeInputOptions","avgScrollPointWidth","plotborderdashlen","plotborderdashgap","plotfillalpha","useroundedges","rotatevalues","use3dlighting","anchorimagescale","anchorshadow","linedashlen","linedashgap","linedashed","linealpha","drawfullareaborder","configurer","_setAxisScale","setAxisScale","_resetViewPortConfig","resetViewPortConfig","_getLineJSONdata","showMean","currDerivedDS","currDerivedDataVal","subDSLen","currSubDS","showSD","showQD","showMD","outliers","outliersArr","valueMin","valueMax","meanValue","sdValue","mdValue","qdValue","bwCalc","derivedDS","requiredSubDs","derivedDataValue","fn","values","showvalue","showoutliervalue","valueposition","outliervalueposition","outliericoncolor","outliericonbordercolor","outliericonradius","outliericonalpha","outliericonsides","dip","outliericonshape","meanvalueposition","showmeanvalues","meaniconcolor","meaniconbordercolor","meaniconradius","meaniconalpha","meaniconsides","showline","drawmeanconnector","meaniconshape","sdvalueposition","showsdvalues","sdiconcolor","sdiconbordercolor","sdiconradius","sdiconalpha","sdiconsides","drawsdconnector","sdiconshape","qdvalueposition","showqdvalues","qdiconcolor","qdiconbordercolor","qdiconradius","qdiconalpha","qdiconsides","drawqdconnector","qdiconshape","mdvalueposition","showmdvalues","mdiconcolor","mdiconbordercolor","mdiconradius","mdiconalpha","mdiconsides","drawmdconnector","mdiconshape","showoutliervalues","drawoutliersconnector","q1","q3","median","mean","sd","md","qd","setArray","getQuartiles","getMean","getSD","getQD","getMD","showmeanvalue","showsdvalue","showqdvalue","showmdvalue","BoxAndWhiskerDataset","BoxAndWhiskerMultiSeriesGroup","MSColumn2D","strokeColor","UNDERSCORE","GROUPID","POSITION_START","showHoverEffectStr","POSITION_END","M","V","pStr","sStr","_hide","boxandwhisker2dAnimation","parentShadowContainer","group","dsGroup","formatedVal","parserConfig","setTooltext","macroIndices","tempPlotfillAngle","plotDashLen","plotDashGap","isRoundEdges","showHoverEffect","plotfillAngle","plotFillAlpha","plotFillRatio","plotgradientcolor","plotBorderAlpha","plotBorderColor","initailPlotBorderDashStyle","upperBoxHoverColor","upperBoxHoverAlpha","upperBoxBorderHoverColor","upperBoxBorderHoverAlpha","upperBoxBorderHoverThickness","lowerBoxHoverColor","lowerBoxHoverAlpha","lowerBoxBorderHoverColor","lowerBoxBorderHoverAlpha","lowerBoxBorderHoverThickness","upperQuartileHoverColor","upperQuartileHoverAlpha","upperQuartileHoverThickness","lowerQuartileHoverColor","lowerQuartileHoverAlpha","lowerQuartileHoverThickness","medianHoverColor","medianHoverAlpha","medianHoverThickness","setDisplayValue","setDataDashed","setDataPlotDashLen","setDataPlotDashGap","quartile","limits","medianValue","upperBoxColor","upperBoxAlpha","lowerBoxColor","lowerBoxAlpha","isMeanValueEnabledInData","isSDValueEnabledInData","isMDValueEnabledInData","isQDValueEnabledInData","isOutliersValueEnabledInData","difference","lowerWhiskerAlpha","upperQuartileRawColor","upperQuartileAlpha","upperBoxBorderRawColor","upperBoxBorderAlpha","lowerBoxBorderRawColor","lowerBoxBorderAlpha","lowerQuartileRawColor","lowerQuartileAlpha","defaultValue","maxmin","setDataLen","catLen","getTicksLen","plotColor","getPlotColor","plotBorderDash","plotborderdashed","tooltipSepChar","initiallyhidden","parseConfiguration","legendSymbolColor","plotfillangle","plotRadius","getDefinedColor","plotborderalpha","plotbordercolor","plothovereffect","showhovereffect","UNDEFINED","parentyaxis","dataSeparator","textDirection","hasrtltext","showMeanLegend","showSDLegend","showMDLegend","showQDLegend","showOutliersLegend","upperboxcolor","upperboxalpha","lowerboxcolor","lowerboxalpha","explicitData","rawValue","getMinMax","getMedian","upperquartilecolor","upperquartilealpha","upperQuartile","rawColor","upperquartilethickness","lowerquartilecolor","lowerquartilealpha","lowerQuartile","lowerquartilethickness","upperboxbordercolor","upperboxborderalpha","upperBoxBorder","upperboxborderthickness","lowerboxbordercolor","lowerboxborderalpha","lowerBoxBorder","lowerboxborderthickness","mediancolor","medianalpha","medianthickness","upperColorArr","getColumnColor","lowerColorArr","showoutlier","showMinValues","showminvalue","showMaxValues","showmaxvalue","showMedianValues","showmedianvalue","showQ3Values","showq3value","showQ1Values","showq1value","upperWhiskerRawColor","upperwhiskercolor","upperWhiskerColor","upperWhiskerAlpha","upperWhiskerThickness","upperwhiskerthickness","upperWhiskerShadowOpacity","getFirstAlpha","lowerwhiskeralpha","lowerWhiskerRawColor","lowerwhiskercolor","lowerWhiskerColor","lowerWhiskerThickness","lowerwhiskerthickness","lowerWhiskerShadowOpacity","upperboxhovercolor","upperboxhoveralpha","upperboxborderhovercolor","upperboxborderhoveralpha","upperboxborderhoverthickness","lowerboxhovercolor","lowerboxhoveralpha","lowerboxborderhovercolor","lowerboxborderhoveralpha","lowerboxborderhoverthickness","upperquartilehovercolor","upperquartilehoveralpha","upperquartilehoverthickness","lowerquartilehovercolor","lowerquartilehoveralpha","lowerquartilehoverthickness","medianhovercolor","medianhoveralpha","medianhoverthickness","getLightColor","upperBoxHoverColorArr","lowerBoxHoverColorArr","setUpperBoxRolloutAttr","setUpperBoxRolloverAttr","setLowerBoxRolloutAttr","setLowerBoxRolloverAttr","setUpperBoxBorderRolloverAttr","setUpperBoxBorderRolloutAttr","setLowerBoxBorderRolloverAttr","setLowerBoxBorderRolloutAttr","setUpperQuartileRolloverAttr","setUpperQuartileRolloutAttr","setLowerQuartileRolloverAttr","setLowerQuartileRolloutAttr","setMedianRolloverAttr","setMedianRolloutAttr","maxDataValue","minDataValue","Q1","unformattedQ1","Q3","unformattedQ3","unformattedMedian","SD","unformattedsd","QD","unformattedQD","MD","unformattedMD","unformattedMean","formattedValue","_getOutLiersLimit","_createSubDS","lineJSON","LineDataset","indices","unshift","createChildIndices","dataJSON","columnWidth","yTop","yTopPos","yBottom","yBottomPos","yMed","yMedPos","upperBoxH","lowerBoxH","crispX","crispX2","crispY","hoverOutEffects","errorStartPos","halfErrorBarW","errorValPos","crispyX","crispyY","errorPath","smartText","labelBottomY","labelTopY","plotDataLabelStyle","lowerBoxBorderEleAttr","lowerBoxElemAttr","lowerQuartileEleAttr","lowerWhiskerEleAttr","midLineElemAttr","upperBoxBorderEleAttr","upperBoxElemAttr","upperQuartileEleAttr","upperWhiskerEleAttr","upperQuartileMaxLabelAttr","upperQuartileMinLabelAttr","upperQuartileLabelAttr","lowerQuartileLabelAttr","medianLabelAttr","upperBoxStartPos","lowerBoxYPos","lowerBoxHeight","lowerBoxEndPos","rotateValues","POSITION_MIDDLE","lastDataSetHeight","maximum","minimum","maxDisplayValue","minDisplayValue","medianDisplayValue","q1DisplayValue","q3DisplayValue","categoryLabel","upperQuartileColor","upperQuartileThickness","lowerQuartileColor","lowerQuartileThickness","upperBoxBorderColor","upperBoxBorderThickness","lowerBoxBorderColor","lowerBoxBorderThickness","upperBox","visibility","lowerBox","dashstyle","dashSyle","r","title","originalText","transform","getSuggestiveRotation","borderPadding","borderDash","lowerBoxBorderEle","lowerBoxElem","lowerQuartileEle","lowerWhiskerEle","midLineElem","upperBoxElem","upperBoxBorderEle","upperQuartileEle","upperWhiskerEle","upperQuartileMaxLabel","upperQuartileMinLabel","medianLabel","upperQuartileLabel","lowerQuartileLabel","datasetLen","upperBoxElemCheck","upperBoxBorderEleCheck","upperQuartileEleCheck","lowerBoxElemCheck","lowerBoxBorderEleCheck","lowerQuartileEleCheck","midLineElemCheck","labelCheck","groupId","upperWhiskerEleCheck","lowerWhiskerEleCheck","newupperBoxElem","newlowerBoxElem","newupperBoxBorderEle","newlowerBoxBorderEle","newupperQuartileEle","newlowerQuartileEle","newmidLineElem","newupperWhiskerEle","newlowerWhiskerEle","hoverInAttr","hoverOutAttr","subarr","arrlen","upperBoxContainer","toBack","lowerBoxContainer","medianContainer","upperWhiskerContainer","lowerWhiskerContainer","dataLabelContainer","shadowContainer","clickFunc","rolloverResponseSetter","doNotRemove","rolloutResponseSetter","shadowProps","innerLen","stretchVal","endPosition","fillColor","getJSONIndex","mainDS","itemClickFn","legendiconbgalpha","legendiconalpha","legendiconborderalpha","legendBackgroundColor","removeLegendState","setLegendState","_mapChildren","addToEnv","legendInteractivity","childDS","ColumnDataset","SPOKE","boxandwhiskerlineAnimation","createCoordinates","Px","Py","dsData","_Px","_Py","getAllPlots","allPlots","callFromParentDS","anchorSide","customLegendIcon","spoke","skipCommonElements","class","newDataset","newIndex","outlierIconShape","tempIndex","newDataSetLen","imageCount","_plotConfigure","finalTooltext","Linedataset","startEnd","start","end","BoxAndWhiskerStatisticalCalc","nf","getFrequencies","q1Pos","q1LowPos","q3Pos","q3LowPos","q1Val","q3Val","isOdd","quartiles","freqObj","freq","frequencies","freqLen","frequency","pow","sqrt","frequenciesArr","midVal","pContainer","ColumnMultiseriesGroup","Sankey","legendFactory","sankeyDatasetFactory","legendposition","orientation","skipCanvasDrawing","alignCaptionWithCanvas","SankeyDS","_checkInvalidData","dataSource","errorMessage","parsedNodes","parsedLinks","links","nodeIds","parsedData","keys","source","target","createNodeLinks","traverseGraph","chartObj","_container","inputConfig","graph","includes","nodeWidth","nodewidth","createNodeValues","allotedSpace","legendSpace","marginLeft","marginTop","marginRight","marginBottom","legends","postSpaceManager","allocateDimensionOfChartMenuBar","CommonAPI","START","END","linkAnimation","sankeyNodeFactory","sankeyLinkFactory","nodeStyle","nodeConfig","dsConfig","legendItemMap","curLegendItems","Set","delete","normal","rawCosmetics","item","bounds","sankeyGraph","columnHeight","columns","nodeSpacing","nodeRelaxation","nodeLabelStyle","nodeLabelCosmetics","fontWeight","fontStyle","_accomodateBoundaryHLabels","createNodeDimensions","nodeGutter","depth","columnGap","_accomodateInternalHLabels","_accomodateBoundaryVLabels","_accomodateInternalVLabels","labelSl","valueSl","space","spaceFactor","divFactor","formattedValueSl","labelSepChar","sl","maxLeftSpaceReq","maxRightSpaceReq","showLabel","labelPosition","rotateLabel","labelPadding","sourceLinks","targetLinks","getSize","getSmartText","_lineHeight","formattedLabel","maxColumnWidth","nodeHeight","y1","y0","maxTopSpaceReq","maxBottomSpaceReq","x1","x0","attachListeners","onFocusCallback","interactionCallback","onFocusOutCallback","onClickCallback","dragStartCallback","dragCallback","dragMoveCallback","dragEndCallback","addEventListener","mode","componentId","isDragged","highlightEffect","focusNodes","has","linkComponent","linkProps","enableDrag","curPos","getChild","evt","linkCurPos","dx","dy","getClip","clipAr","isParent","SmartRenderer","labelCss","nodeCss","nodeFocusCss","nodeFocusOutCss","rawLabelCosmetics","labelBorderColor","nodeLabelAlpha","inheritFromPlot","inheritlabelcolorfromnode","nodecolor","nodealpha","focusAlpha","hoveralpha","nodehoveralpha","focusOutAlpha","nodelabelalpha","nodelabelbgcolor","nodelabelbordercolor","labelFill","nodelabelfontcolor","labelposition","nodelabelposition","validPosition","attachChild","SankeyNode","nodelabelpadding","shownodes","showlabel","shownodelabels","shownodevalues","rotatelabel","rotatenodelabels","valuePosition","plotToolText","nodeValue","nodevalue","nodeDataValue","nodedatavalue","textOutline","map","focusOut","labelXPos","labelYPos","anchor","nodeCosmetics","labelCosmetics","nodeAttr","labelAttr","symbolBBox","legendItemSymbol","finalPath","uniChar","isIpad","newPathArr","pathStart","drawcustomlegendicon","isActive","graphicalElement","getBBox","substring","plotFillColor","plotIdentifier","getAttribute","setToolText","setPlotTooltext","getTooltext","gradientAngle","linkColor","linkCss","linkFocusCss","linkFocusOutCss","sourceFill","targetFill","fromNode","toNode","fromValue","toValue","linkPadding","nodelinkpadding","linktooltext","linkcolor","linkalpha","linkhoveralpha","SankeyLink","linkValue","curvature","clampNumber","linkcurvature","linkType","linktype","linkToolText","drawCustomLegendIcon","fromLegendItem","fromgraphicalElement","toLegendItem","tographicalElement","linkDataValue","fromPlotIdentifier","toPlotIdentifier","flowDirection","setLinkTooltext","pathStr","sourceNodeLen","targetNodeLen","linkConfig","linkCosmetics","sourcePoint","linkWidth","sourceNodeLayer","layer","targetNodeLayer","targetPoint","sankeyRibbon","linkAttr","C","L","sy0","sy1","ty0","ty1","cx1","cy1","cx2","cy2","sourceWidth","targetWidth","horizontalRibbon","sx0","sx1","tx0","tx1","verticalRibbon","currentSet","nextSet","_node","graphs","_props","maxDepth","MAX","MIN","_columns","_maxDepth","maxNodeWidth","minNodesLength","nodeValueFactor","columngapFactor","VERTICAL","totalValue","startX","startY","setnodeXY","convergence","divergence","relaxSources","relaxTargets","sortLinks","createLinkDimensions","findNodeById","_nodes","find","d","_link","ascendingHeight","ascendingWidth","_links","totalSourceValue","totalTargetValue","beta","n","targetShiftFactor","column","w","valueFactor","targetTop","resolveCollisions","sourceShiftFactor","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","_i","shiftStart","clipCanvas","clipCanvasInit","nodeLabelFontBold","nodeLabelFontItalic","nodeLabelBorderThickness","nodeLabelBorderPadding","nodeLabelBorderRadius","nodeLabelBorderDash","showNodes","dsDef","nodelabelfontbold","nodelabelfontitalic","nodelabelborderthickness","nodelabelborderpadding","nodelabelborderradius","nodelabelborderdashed","nodelabelborderdashlen","nodelabelborderdashgap","noderelaxation","nodespacing","enabledrag","highlighteffect","nodelabelfont","nodelabelfontsize","PXSTRING","Heatmap","checkValidId","hasGradientLegend","decideLegendCreation","createColorRangeManager","dataSetFactory","isSingleSeries","colorrange","gradient","drawTrendRegion","rows","skipConfigureIteration","datasetArray","unifiedDataset","row","rowid","self","columnid","createComponent","axis","configureChildren","hasSVG","tooltipbgcolor","tooltipbgalpha","tooltipcolor","tooltipbordercolor","tooltipborderalpha","tooltipborderthickness","showtooltipshadow","tooltipborderradius","inCanfontFamily","tooltippadding","xDepth","shiftLabels","getEffectiveDimensions","canvasPadding","xAxisPosition","mapTickValuesById","placeAxisLabelsOnTop","labelxpadding","showxaxislabels","rotatexaxislabels","maxLabelHeight","maxlabelheight","labelypadding","yaxisnamefont","yaxisnamefontsize","yaxisnamefontcolor","yaxisnamefontbold","yaxisnamefontitalic","yaxisnamebgcolor","yaxisnamebordercolor","yaxisnamealpha","yaxisnamefontalpha","yaxisnamebgalpha","yaxisnameborderalpha","yaxisnameborderpadding","yaxisnameborderradius","yaxisnameborderthickness","yaxisnameborderdashed","yaxisnameborderdashlen","yaxisnameborderdashgap","yaxisminvalue","yaxismaxvalue","showyaxislabels","maxLabelWidthPercent","maxlabelwidthpercent","hdivlinecolor","hdivlinealpha","hdivlinethickness","hdivlinedashed","hdivlineisdashed","hdivlinedashlen","hdivlinedashgap","columnObj","rowObj","columnFlag","rowFlag","columnArr","rowArr","setTickValues","categoryNumDivLines","categoryDivLinesFromZero","HeatMapDataset","HeatMapGroup","miterStr","hiddenStr","DEFAULT_CURSOR","DEFAULT","TRACKER_FILL","isIE","HTP","hasTouch","TOUCH_THRESHOLD_PIXELS","CLICK_THRESHOLD_PIXELS","mathMin","mathAbs","heatmapAnimation","dataSetArray","c","plotGrid","isBar","totalRows","totalColumns","showTextOutLine","positionIndex","useRoundEdges","plotfillratio","showValues","transposeAnimation","transposeanimation","transposeAnimDuration","transposeanimduration","definedGroupPadding","maxbarheight","plotPaddingPercent","plotpaddingpercent","placeValuesInside","placevaluesinside","use3DLighting","hoverColor","hoverAlpha","hoverRatio","hoverAngle","hoverBorderColor","hoverBorderAlpha","hoverBorderThickness","hoverBorderDashed","hoverBorderDashGap","hoverBorderDashLen","hoverDashStyle","hoverColorArr","heatRange","colorObj","tlLabel","trLabel","blLabel","brLabel","percentValue","toolTextValue","minMaxArray","minMaxArrayLen","font","fontColor","s","dataSet","usePlotGradientColor","colorRange","mapByPercent","mapbypercent","mapByCategory","mapbycategory","useColorGradient","tlType","tltype","trType","trtype","blType","bltype","brType","brtype","tlTypeToolText","trTypeToolText","blTypeToolText","brTypeToolText","colorManager","inCanfontSize","parseInt","inCancolor","eventAttached","hasState","maxMinArray","updatePlot","colorMap","colorrangelabel","categoryid","colorRangeLabel","legendItemIndex","seriesIndex","code","oriAlpha","outOfRange","rawPlotColor","hovercolor","plotfillhovercolor","columnhovercolor","plotfillhoveralpha","columnhoveralpha","hovergradientcolor","plothovergradientcolor","hoverratio","plothoverratio","hoverangle","plothoverangle","borderhovercolor","plotborderhovercolor","borderhoveralpha","plotborderhoveralpha","borderhoverthickness","plotborderhoverthickness","borderhoverdashed","plotborderhoverdashed","borderhoverdashgap","plotborderhoverdashgap","borderhoverdashlen","plotborderhoverdashlen","setRolloutAttr","setRolloverAttr","tllabel","ltlabel","trlabel","rtlabel","bllabel","lblabel","brlabel","rblabel","tlLabelStyle","tlLabelFont","tlfont","tlLabelFontSize","tlfontsize","tlLabelFontColor","tlfontcolor","setLineHeight","trLabelStyle","trLabelFont","trfont","trLabelFontSize","trfontsize","trLabelFontColor","trfontcolor","brLabelStyle","brLabelFont","brfont","brLabelFontSize","brfontsize","brLabelFontColor","brfontcolor","blLabelStyle","blLabelFont","blfont","blLabelFontSize","blfontsize","blLabelFontColor","blfontcolor","getCategoryFromId","rowLabel","tickObj","columnLabel","percentDataValue","legendItemColor","colorCode","entityComponents","datasetObj","getColorObj","hotElement","valEle","_checkPointObj","pY","halfPlotBorderThickness","viewPortConfig","scaleX","_index","legendActive","yBasePos","getAxisBase","columnId","rowId","elemId","elemIdStore","elemCreated","crispBox","addJob","bind","priorityList","removeDataElems","textY","textX","plotLabelStyle","tlStyle","trStyle","blStyle","brStyle","graphicEle","pointW","pointH","pointX","pointY","smartTextObj","isTLLabel","isTRLabel","isBLLabel","isBRLabel","maxWidth","maxHeight","tlLabelCss","trLabelCss","blLabelCss","brLabelCss","chartConf","tlLabelContainer","blLabelContainer","trLabelContainer","brLabelContainer","removeLabels","labelDrawn","getAxisValuePadding","startIndex","context","prevCatlen","currCatLen","catDiff","groupMaxWidth","hasAnchor","insertBefore","Pb","yDepth","stackConf","getstackConf","_Pby","_Pbx","getLineShift","_decideTooltipType","sharedAnchor","_drawTooltip","onlyHoverEffect","dataGraphics","elData","getData","draged","_rolloverResponseSetter","_rolloutResponseSetter","maxminFlag","isRealTime","removeDataLen","resetCatPos","prototype","configureDataLabelStyle","getLimits","allVisible","maxminObj","numOfColumns","getMaxMin","_maxminObj","range","dataMin","dataMax","paddingObj","axisPaddingLeft","axisPaddingRight","axisPaddingTop","axisPaddingBottom","CategoryAxis","Radar","canvasFactory","radarRadius","radarradius","alignLegendWithCanvas","axisType","gridLineWidth","showRadarBorder","radarBorderThickness","getSpecificxAxisConf","getSpecificyAxisConf","getBasexAxisConf","reverseXAxis","showradarborder","radarBorderColor","radarbordercolor","radarborderthickness","radarBorderAlpha","radarborderalpha","radarFillColor","radarfillcolor","radarFillAlpha","radarfillalpha","radarSpikeColor","radarspikecolor","radarSpikeThickness","radarspikethickness","radarSpikeAlpha","radarspikealpha","radarInLineAlpha","radarinlinealpha","isInverse","decreaseCanvasBy","remainingSpace","RadarDataset","Area","dropHash","regex","radarAnimation","getPathArr","path2Arr","getCoordinates","theta","getLinePath","positions","lastValidValue","temp","temp2","pointsJoined","startPos","begin","endPos","step","baseZero","dataWithRemovedPaths","isSkipped","axisRange","plotfillcolor","areabordercolor","plotborderColorObject","divAngle","getPlotFromPixel","_contextChanged","status","newAxisCenterX","oldAxisCenterX","axisCenterX","axisDimention","centerX","getPlotInCategoryAt","plots","categoryAxis","isDatasetVisible","hoveredCategoryIndex","foundPlot","plot","idx","plotArr","plotCategoryIndex","nextPlotCategoryIndex","prevPlotCategoryIndex","halfCategoryDiff","nextPlot","prevPlot","hoveredPlotInfo","legendIconAlpha","usePattern","patternAttr","patternType","patternAngle","patternDensity","patternSize","patternAlpha","patternBgColor","getOldPath","pathVal","lim","xLim","yLim","oldLim","prevLim","oldLimX","oldLimY","ii","getOldValX","minPixel","maxPixel","getOldValYBase","base","getOldValY","join","AreaDataset","initialPath","axisRefVisual","PolarAxis","pi","pi2","polarAnimation","Polar","scale","ScaleCategory","referenceInfo","drawPlotBands","forceZeroTick","rawAttr","axisConfig","axisAttr","FCChartObj","gridLineColor","rangeArr","getScale","totalAngle","endAngle","anglePerSlice","tickValues","tickValue","centerY","clockWise","setRange","_parseCategoryPlotLine","axisAttrObj","plotLineColor","plotLineWidth","lines","isDraw","categoryLength","singleCategory","smartLabelText","categoriesStyle","categoryStyle","smartLabelStyle","smartLabelStyleLineHeight","categories","avalTop","avalBottom","avalRight","avalLeft","allCategories","drawNormalVal","drawLimitVal","firstCategory","fontcolor","fontbold","fontitalic","fontSizeWithUnit","oriLabel","_drawComponents","drawLabels","hasCategory","_drawCategory","_parseCategory","curCategory","labelLineHeight","addCategoryPadding","pos","curCategoryValue","posX","posY","radiusXY","catStyle","textId","category","axisPadding","axisScale","cat0","labelFontAlpha","parseFloat","getRangeValue","polarToCartesian","shiftX","shiftY","labelBox","borderthickness","borderalpha","borderpadding","borderradius","bgalpha","borderdashed","borderdashlen","borderdashgap","textElement","textElemCheck","removeElem","removeElementsArr","axisContainer","raiseEvent","counter","mapArr","labelMap","arrOfId","removeGraphicalElement","getReferenceInfo","setVisibleConfig","domain","setDomain","getDomain","visibleMin","visibleMax","clearReferenceInfo","_parseReferenceVisuals","fireEvent","drawPlotlines","_setAxisRange","divGap","ticks","_allTicks","tickInterval","Axis","_createContainer","setAxisPadding","fadeInAtAxis","pCanvas","polarCanvas","axisRefVisualPolar","drawCanvas","radarBorderContainer","radarBorder","radarBorderContainerDummy","canvasGroup","radarBorderAttrObj","radBorderDummy","pop","Canvas","axisRefPolarAnimation","createLine","lineInfo","createNormalLine","createRadialLine","containers","lineAttr","pathAr","lineEleId","handlers","point","getRadius","hasOwnProperty","axisRefConfig","createBand","AxisRefComponent","Chord","DEFAULT_PALETTE_COLOR","LABEL_POSITIONS","deregisterFactory","legendItemFactory","nodelinkManagerFactor","defaultPaletteOptions","paletteColors","friendlyName","isPost","minNodeSize","startingAngle","linksOrder","nodesOrder","clockwise","nodeLabelGap","nodeLabelPosition","nodeThickness","nodeLinkPadding","linkAlpha","linkBorderAlpha","linkBorderThickness","nodeHoverAlpha","linkHoverAlpha","nodeHoverColor","linkHoverColor","showNodeLabels","showNodeBorder","showLinkBorder","nodeBorderColor","nodeBorderThickness","nodeBorderDashed","nodeBorderDashedLen","nodeBorderDashedGap","nodeBorderAlpha","showLinkValueOnHover","nodeAlpha","nodeLabelFont","nodeLabelFontSize","NORMAL","enableToggle","chordradius","nodeLabelColor","unfocussedAlpha","deactiveNodeColor","sortOrder","linkColorByDominance","nodesArr","linksArr","minnodesize","startingangle","totalangle","nodethickness","linkborderalpha","linkborderthickness","showlinkvalueonhover","shownodeborder","showlinkborder","nodebordercolor","nodeborderthickness","nodeborderdashed","nodeborderdashedlen","nodeborderdashedgap","nodeborderalpha","pluckFontSize","BOLD","nodelabelcolor","enabletoggle","unfocussedalpha","deactivenodecolor","sortorder","linkcolorbydominance","useellipsesonoverflow","datalabelStyle","sanitisedValue","total","adjustedTotal","nodeCovered","linkedLinks","LinearScale","active","unfocussed","showToolTip","points","dominantNode","subservientNode","subservientFlowDataValue","dominantFlowDataValue","dominantNodeColor","subservientNodeColor","linkedNodes","focussedState","unfocussedState","normalState","showBorder","linkedLink","nodeMap","isValidNode","key1","key2","resolvedStrokeWidth","borderDashedLen","borderdashedlen","borderDashedGap","borderdashedgap","borderDashed","getDarkColor","exportenabled","labelColor","labelcolor","deactiveState","startsWithRegex","toolKey","NodeLinkManager","_manageLegendSpace","cx","cy","maxNodeDim","minRadius","maxSpace","nodesLinkManager","_manageSpace","nodeOuterRadius","nodeInnerRadius","ribbonRadius","setTranslation","chartInstance","__state","dataReady","jsVars","hasNativeMessage","drawCount","count","LegendClass","deleteFromEnv","matrix","comparator","nodeFactory","linkFactory","reduce","acc","interactivelegend","angleRatio","arcAngle","endingAngle","p3","p4","firstNode","secondNode","firstScale","secondScale","p1","p2","angles","linkArray","dim","outerRadius","innerRadius","spaceArguments","widths","clickedNode","nodeClicked","nodeHoverIn","nodeHoverOut","rawStrokeColor","clickedNodeLabel","isVisisble","toPrecision","linkHoverIn","linkKey","registerDraw","hoveredNodes","resetEffect","linkHoverOut","labelKey","hoveredNode","hoveredLinks","affectedNodes","Node","labelPathGenerator","_startAngle","_endAngle","arc","normaliseAngle","clickFn","setEventArgs","mouseOverFn","mouseOutFn","linkednodelabel","arrValues","currentnodelabel","currentnodevalue","linkednodevalue","styles","formattedNodeDataValue","slope","smartLabelOutput","labelCatersianPosition","labelOrientation","applicableRadius","inCanfontSizeWithUnit","x2","y2","labelAngleCenter","spaceRemaining","getQuadrant","deg2Rad","getCartesianDistance","getTextRotationByQuadrant","isAngleInLeftHemisphere","labelAngleCenterDeg","labelAngleCenterRad","labelAngleCenterCleanRad","getCleanAngle","labelAngleCenterCleanDeg","rad2Deg","isLabelCenterInTopHemisphere","isAngleInTopHemisphere","arcLength","getArcLength","textPathStartAngle","textPathEndAngle","isIE11","textpath","startOffset","TEXTANCHOR","MIDDLESTR","middleRadius","x3","y3","x4","y4","A","Z","nodeGenerator","SMALLSQUARE","MEDIUMSQUARE","oriSize","_radius","PI2","_angle","rotationAngle","SIN","COS","HALF_PI","_rotationAngle","Ribbon","normalizeAngles","radians","mouseClickFn","dominantFlowValue","subservientFlowValue","rgbaToHex","getUniqueNodes","nodeArr","getDominantFlowValue","_config","_nodeArr","resultValues","getPlotIdentifier","body","getLegendItems","dominantNodes","legendItems","corners","p","curveFactor","distance","nextPointDist","cpX","cpY","ribbonAttrs","ribbon","dominantLegendItem","subservientLegendItem","dominantPlotIdentifier","subservientPlotIdentifier","setLinkToolText","baseFontSize","hoveredAlpha","Dragarea","Multicanvascrosslinemanager","requiresFusionCharts","FusionCharts","CrossLine","MultiCanvasCrossLine","Spline","Logmscolumn2d","LogStackedColumn2d","Logmsline","Splinearea","MSSplineDy","Msspline","Mssplinearea","Errorbar2d","Errorline","Errorscatter","Inversemsarea","Inversemscolumn2d","Inversemsline","Dragcolumn2d","Dragline","Kagi","WaterFall2D","SelectScatter","MultilevelPie","Sunburst","MultiAxisLine","MSStepLine","DragNode","CandleStick","BoxAndWhisker2D","HeatMap","DragArea","MultiSeriesManager","MSLog","logAxisFactory","logBase","minorDivlinecolor","minordivlinecolor","minorDivLineThickness","minordivlinethickness","minorDivLineAlpha","minordivlinealpha","invertYAxis","invertyaxis","logbase","showMinorDivLineValues","showminordivlinevalues","numMinorDivLines","numminordivlines","LogAxis","validate","param","isNaN","queryOptions","wrtVisible","logTicksMerge","majorTickArr","minorTickArr","mergedArr","ScaleLog","minorTicks","setBase","band","generateTicks","generateMinorTicks","nice","setDataLimit","_max","_min","trendMin","trendMax","AxisMaxValue","AxisMinValue","getTrendLineLimits","_parseLabel","increment","labelRotation","allTicks","ticksLen","tickVal","tickInPx","prevPos","labelMaxProp","labelArr","checkForLimit","axisValueMaxH","labelMaxH","axisValueMaxW","labelMaxW","axisStartPosition","axisComp","getZoom","rotation","getVisibleConfig","labelIndexArr","numberFormatterFn","isPercent","_drawLabel","labelArrLen","ticksVal","_getVMaxLabelDimention","divArr","divArrLen","maxTextDim","dimention","curDiv","maxTextSize","_getHMaxLabelDimention","_num","num","CartesianAxis","defaultPlotShadow","showzeroplaneontop","defaultcrosslinethickness","_setDefaultConfig","Logstackedcolumn2d","isstacked","StackManager","LogMSColumn2d","isErrorChart","COLOR_AAAAAA","AAAAAA","PERCENTAGESTRING","errorBarHovered","errorbarAnimation","drawCallBackFn","ErrorValueConfigure","errorInPercent","errorBarAlpha","setErrorValue","setPositiveErrorValue","setNegativeErrorValue","errorBarShadow","maxErrorValue","minErrorValue","halfErrorBar","positiveErrorValue","negativeErrorValue","cumulativeValueOnErrorBar","positiveCumulativeErrorTooltext","negativeCumulativeErrorTooltext","positiveErrorToolText","negativeErrorToolText","seriesNameInTooltip","seriesnameintooltip","errorDataValue","errorToolTipValue","errorPercentValue","errorPercentDataValue","positiveErrorDataValue","positiveErrorToolTipValue","negativeErrorDataValue","negativeErrorToolTipValue","errorinpercent","errorbarshadow","ignoreEmptyDatasets","ignoreemptydatasets","halferrorbar","notHalfErrorBar","errorbaralpha","errorbarwidthpercent","errorbarcolor","errorbarthickness","shadowOpacity","cumulativevalueonerrorbar","errorvalue","positiveerrorvalue","negativeerrorvalue","toFixed","positiveCumulativeErrorValue","negativeCumulativeErrorValue","negativeCumulativeErrorTooltipValue","positiveCumulativeErrorTooltipValue","hasErrorValue","errorplottooltext","errorEdgeBar","drawErrorValue","animState","errorValuePosFactor","errorValueObj","errorLen","errorLineElem","isNegative","barXpos","barYpos","barWidth","barHeight","errorTrackerConfig","errorTrackerArr","_toolText","_isRollover","_isRollout","errorBarArr","errorBarCompArr","errorBarCompLen","tooltipValueAtEnd","hoverInfo","columnAnimation","useErrorGroup","canvasPaddingModifiers","ErrorLineDataset","errorlineErrorAnimation","errorlineLineAnimation","drawCallbackFn","errorToolText","lineThickness","errorBarWidth","errorbarwidth","_show","errorGroupContainer","errorShadowContainer","_chartAnimation","lineGroup","anchorGroup","anchorShadowGroup","lineShadowGroup","_setAxisLimits","_drawDataset","plotXpos","plotYpos","errorTracker","getCanvasPadding","dataConf","dataAnchorConf","labelSpace","firstData","lastData","labelDim","SmartLabel","retrunDimension","LINEDataset","lineAnimation","isXY","defaultZeroPlaneHighlighted","initAnimation","ErrorScatterDataset","ScatterBase","errorscatterAnimation","errorscatterErrorAnimation","removeCallbackFn","halfHorizontalErrorBar","halfVerticalErrorBar","horizontalErrorBarAlpha","verticalErrorBarAlpha","horizontalErrorBarColor","verticalErrorBarColor","horizontalErrorBarThickness","verticalErrorBarThickness","hErrorValue","vErrorValue","hErrorToolTipValue","vErrorToolTipValue","horizontalErrorPercent","verticalErrorPercent","horizontal","vertical","vPositiveErrorValue","hNegativeErrorValue","hPositiveErrorValue","hPositiveSetTooltext","hPositiveErrorToolTipValue","hCPErrorToolText","hCPErrorToolTipValue","hNegativeErrorToolTipValue","hCNErrorToolTipValue","vPositiveErrorToolTipValue","hNegativeSetTooltext","vCPErrorToolTipValue","vNegativeErrorValue","vCNErrorToolText","vCNErrorToolTipValue","vPositiveSetTooltext","hCNErrorToolText","vCPErrorToolText","vNegativeSetTooltext","vNegativeErrorToolTipValue","yAxisName","xAxisName","infMin","infMax","yDataValue","xDataValue","horizontalErrorValue","horizontalErrorDataValue","verticalErrorValue","verticalErrorDataValue","horizontalErrorPercentValue","verticalErrorPercentValue","horizontalPositiveErrorValue","useHorizontalErrorBar","horizontalPositiveErrorDataValue","horizontalNegativeErrorValue","horizontalNegativeErrorDataValue","verticalPositiveErrorValue","useVerticalErrorBar","verticalPositiveErrorDataValue","verticalNegativeErrorValue","verticalNegativeErrorDataValue","halfhorizontalerrorbar","halfverticalerrorbar","horizontalerrorbaralpha","verticalerrorbaralpha","horizontalerrorbarcolor","verticalerrorbarcolor","horizontalerrorbarthickness","verticalerrorbarthickness","horizontalErrorBarWidth","horizontalerrorbarwidth","verticalErrorBarWidth","verticalerrorbarwidth","horizontalerrorvalue","verticalerrorvalue","horizontalpositiveerrorvalue","horizontalnegativeerrorvalue","verticalpositiveerrorvalue","verticalnegativeerrorvalue","usehorizontalerrorbar","useverticalerrorbar","errorValueConf","mandatory","marker","isHorizontal","limit","optional","errorGraphicsString","notRequiredHEB","notRequiredVEB","isHalfHorizontalErrorBar","isHalfVertictalErrorBar","subType","subErrorBar","segment","segmentType","errorBarSegmentLen","errorBarSegmentStartPos","errorBarType","dataSetLen","searchDataArr","match","barType","dataTreeB","KdTree","buildKdTree","res","res1","errorBarToolText","dataTree","getNeighbour","ScatterDataset","errorAnimation","LimitUpdaterFactory","dragtrackerFactory","DragColumnMultiseriesGroup","isDrag","DragColumnDataset","DragBase","transcoders","getDepsByType","updateDataLimit","dataLimit","sender","apiInstance","iapiConf","endValue","startValue","getDataWithId","setArr","catName","catObj","DS","dsID","ln","returnObj","catArr","vLinePassed","format","returnData","sanitisedFormat","fromJSON","_getData","setUpperLimit","output","changeUpperLimits","postRender","setLowerLimit","changeLowerLimits","getLowerLimit","getUpperLimit","MOUSEOUT","dragStart","MOUSEMOVE","formAction","formaction","submitdataasxml","ZEROSTRING","formdataformat","csv","formDataFormat","xml","formTarget","formtarget","formMethod","formmethod","submitFormAsAjax","submitformusingajax","restoreBtnTitle","restoretext","restorebtntitle","submitBtnTitle","submittext","formbtntitle","showFormBtn","enablesubmit","showformbtn","showRestoreBtn","enablerestore","showrestorebtn","formBtnTitle","formBtnStyle","restoreBtnWidth","restorebtnwidth","allowAxisChange","allowaxischange","toolbary","toolbarx","spaceHardCoded","_storeIntialLimit","axisInitialLimit","attachMenuButtons","addConfigureOptions","restore","submit","toolbar","hamburgerMenu","configureTools","handler","action","submitData","appendInMenu","resetStoredLimits","_manageInteractiveSpace","lowerLimit","limitchanged","showLowerLimit","upperLimit","showUpperLimit","jsonObj","rawObj","datasetsArr","requestType","paramObj","tempSpan","formEle","ajaxObj","Ajax","JSON","stringify","getCollatedData","getCSVString","onError","response","wrapper","ajaxData","xhrObject","xmlhttp","statusText","httpStatus","onSuccess","toUpperCase","abort","post","window","document","createElement","xssEncode","removeChild","firstChild","appendChild","parentNode","_getJSONData","_restore","SETROLLOVERATTR","setRolloverAttrStr","SETROLLOUTATTR","setRolloutAttrStr","DATAPLOTCLICK","dragMouseAttr","updateDataValue","mouseCoordinate","dragColumnAnimation","allowDrag","allowNegDrag","allownegativedrag","snapToDivOnly","snaptodivonly","snapToDiv","snaptodiv","doNotSnap","donotsnap","snapToDivRelaxation","snaptodivrelaxation","drag","coordinateData","yActual","formattedVal","rolloverdata","lowerDragBoundary","rolloutedata","eventArgsArr","datasetConf","getTicks","tolerance","dragTolerance","chartContainer","snapPixel","_pointerDy","_dragStartY","_dragBuffer","dragged","_rollOverResponseSetterFire","parseLabelAttributes","originalPlotColor","gradientColor","borderHoverColor","borderHoverAlpha","plotHeight","setMaxMin","givenPlotShowValue","minplotheightforvalue","snapPoint","colTop","colBottom","updatedDataObj","rawDataset","ColumnMultiSeriesgroup","limitUpdaterArr","limitUpdater","numericAxis","LimitUpdater","linkedAxis","onMouseUp","justFocussed","select","doAxisUpdate","oldvalue","isMax","axisParent","onFocus","styleObj","axisLabel","dataValue","hasFocus","onBlur","newValue","oldValue","isMaxLabel","getElementsByTagName","onKeyUp","which","getCharCode","domEvtHandler","fire","defaultHandler","inputElement","defaultIEHandler","destroyHandler","defaultAction","unlisten","destroyIEHandler","getLinkedItem","inputElementName","styleKey","labelValue","closedDefaultHandler","inputLeft","closedDefaultIEHandler","extremeLabels","getAxisConfig","axisLimits","chartCanvasStyle","outline","position","lastLabel","firstLabel","listen","removingDraw","DragTracker","addEvents","dragmove","dragTracker","hoveredDS","dragend","eventList","eventCb","allCanvas","removeEvents","removeEventListener","_dispose","DragLineDataset","draglineAnimation","__firePlotEvent","updateImage","_updateImage","_drag","_configure","ROLLOUT","dragAreaAnimation","DragAreaDataset","imgRef","imgH","imgW","hoverScale","imageHoverScale","hotW","hotH","markerRadius","isAnchorRadius","rolloutClipRadius","rolloverClipRadius","imageRollOverPath","polyPathToPath","imageRolloutPath","plotItem","rolloutdata","endIndex","anchorElement","isHoverEnabled","anchorStartAngle","mainLineElement","lineElement","isDragLine","anchorBgAlpha","anchorBorderColor","anchorHoverColor","anchorColor","anchorHoverAlpha","anchorHoverSides","drawCommonElements","pathStartIndex","pathEndIndex","lastPath","hoverEnabled","changedTouch","dataSetConf","changedTouches","pageX","pageY","_hoverPlotAnchor","areaAnimationRules","DragColumn","singleseries","_getDataset","dataSetArr","xShiftLength","series","shiftCount","maxHShiftPercent","maxhshiftpercent","effectiveCanvasWidth","_setPosition","setCanvasPadding","yValue","isRally","lastHigh","lastLow","isRallyInitialised","lastPoint","xValue","plotX","isDefined","plotValue","plotY","graphY","isShift","objParams","isChanged","ty","KagiDataset","WaterFall2DDataset","SSCartesian","waterFall2DAnimation","catData","hoverGradientColor","showSum","dataLabel","issum","zLine","cumulative","sumObj","countPoint","reflowData","reflowDataObj","reflowChartObj","connectorthickness","seriesSum","lastComTotal","showsumatend","PATTERN_TYPES","patterntype","patterndensity","patternalpha","patternbgcolor","stack100Percent","stack100percent","showPercentValues","showpercentvalues","showPercentInToolTip","showpercentintooltip","connectordashed","connectordashlen","connectordashgap","useForwardSteps","connectorcolor","connectoralpha","lineWidth","_value","sumlabel","isCumulative","positivecolor","positivehovercolor","negativecolor","negativehovercolor","patternangle","patternsize","origToolText","cumulativeValue","cumulativeDataValue","unformattedSum","showConnectors","showconnectors","yBase","anim","lastXPos","lineContainer","groupNetHalfWidth","zLineConf","seriesLineWidth","zLineDummy","_graphics","lastYPos","linePath","lastMoveCommand","toFront","getCrispValue","kagiAnimation","manageSpace","stubFN","_parseShadowOptions","dataSetComponents","shiftCounter","reversalValue","reversalPercentage","rallyDashLen","rallyDashGap","declineDashLen","declineDashGap","lastPlotValue","setShowLabel","fcIndex","fcDataObj","lastShift","prevDataObj","nextDataValue","valueDifference","isMovingUp","checkValue","t","vAlign","reversalvalue","reversalpercentage","__nullCount","rallyColor","rallycolor","rallyAlpha","rallyalpha","declineColor","declinecolor","declineAlpha","declinealpha","canvaspadding","rallyThickness","rallythickness","rallydashlen","rallydashgap","declineThickness","declinethickness","declinedashlen","declinedashgap","lineDashed","rallydashed","declinedashed","rallyDashed","declineDashed","_isRally","dataXValue","data1Value","align","_appendCategory","tempData","lineposition","refIndex","catOnlyData","pointObjs","trackIndex","clipRect","pointData","userID","anchorImageLoaded","trackerRadius","anchorBorderAlpha","isAnchorHoverRadius","bBoxObj","textHeight","origTextHeight","yAdjust","decidingDimention","nextPoint","prevPoint","labelSkip","_state","_rotated","_valueBelowPoint","rallyPath","declinePath","nextPointIsRally","xAxisZeroPos","pointDistance","imagesLoaded","rallyElem","declineElem","imageElement","datasetGraphics","rallyAttr","declineAttr","rallyElemDummy","declineElemDummy","commonElemGroup","plotGroup","shadowGroup","drawAnchorImage","Waterfall2d","Selectscatter","Raphael","getDep","deg2rad","checkObjectLength","createSelectionBox","selectBoxG","selectionLeft","selectionTop","selectionWidth","selectionHeight","isSmall","selectEleObj","resizeEleRadius","selectEleArr","_selectEleArr","selectBoxTracker","rect","selectBorderColor","selectFillColor","_isTrackerElem","xChange","yChange","topTracker","TRACKER_WIDTH","rightTracker","bottomTracker","leftTracker","cornerInnerSymbol","cornerOuterSymbol","resizeTracker","closeButton","selectionCancelButtonBorderColor","selectionCancelButtonFillColor","_cursor","deleteSelection","endX","endY","bindDragEvent","selectEleItem","items","bBox","startXValue","startYValue","endXValue","endYValue","addSymbol","resizeIcon","xVal","rad","LINE_GAP","paths","closeIcon","icoX","icoY","r1","r2","arcPath","rX","rY","isClockWise","isLargeArc","getArcPath","configureIcon","rVal","x5","y5","x6","y6","x7","y7","x8","y8","x9","y9","x10","y10","axisIcon","loggerIcon","enableSubmit","enableRestore","allowreversexaxis","tempObj","list","setLen","dsInd","global","core","transcodeData","incomingJSON","oriDataArr","selectionBoxObj","setObj","selectedArr","origChartData","origDataSets","lenDS","isSelected","selectedData","_deleteAllSelection","items1","move","up","topT","rightT","bottomT","leftT","resizeT","topTData","rightTData","bottomTData","leftTData","resizeTData","selectTData","ox","oy","ow","oh","ox2","oy2","selectT","attrib","SelectScatterDataset","selectScatterAnimation","selectbordercolor","selectborderalpha","selectfillcolor","selectfillalpha","selectioncancelbuttonbordercolor","selectioncancelbuttonborderalpha","selectioncancelbuttonfillcolor","selectioncancelbuttonfillalpha","connativeZoom","zoomType","bindSelectionEvent","selectionStart","selectionEnd","Multilevelpie","valuefontbold","catLength","MultiLevelPieDataset","INNERRADIUS","multilevelpieAnimation","fontBdrColor","mag","dataSetConfig","dataLabelOptions","piePlotOptions","centerAngle","centerangle","tranverseToRoot","dataInstance","evtType","hoverFillColor","traverseAllChildren","mouseEvtHandler","useHoverColor","selfRef","highlightParentPieSlices","highlightChildPieSlices","moveduration","usehovercolor","hoverfillcolor","hoverfillalpha","valuebordercolor","valueborderalpha","valuebgalpha","valuealpha","valuefont","valuefontsize","valuefontcolor","valuefontalpha","valuefontitalic","valuebgcolor","valueborderthickness","valueborderpadding","valueborderradius","valueborderdashed","valueborderdashlen","valueborderdashgap","allowPointSelect","pieborderalpha","piebordercolor","rawborderColor","pieborderthickness","highlightparentpieslices","highlightparentpienodes","highlightchildpieslices","highlightchildpienodes","showValuesInTooltip","showvaluesintooltip","showpercentagevalues","showPercentInTooltip","hovercapsepchar","COMMASPACE","labelsepchar","piefillalpha","endtAngle","initialAngle","originX","originx","originY","originy","mouseOver","mouseOut","plotBorderWidth","autoRotateLabels","autorotatelabels","skipOverlapLabels","skipoverlaplabels","maxLevel","addMSPieCat","pieRadius","pieradius","innerradius","placeLabelsInside","removalFn","removeGraphics","childData","removalStore","doHide","elemObj","level","parentObj","dataObjLen","catObjLen","sharePercent","catVal","fillalpha","valueStr","pValueStr","showPlotBorder","tempAngle","preDataOldEndAngle","cat","totAngle","cumilative","_userValue","hovertext","angleStrech","doNotSlice","borderwidth","isSingleTon","parentInstance","_textAttrs","centerDistance","setDataLabelStyle","angle1","angle2","setGraphics","setConfig","seriesDataLabelsStyle","pieSize","calculatedInnerRadius","innerRadiusLength","charAt","calculateInnerRadius","seriesHalfWidth","innerSize","labelText","pattern","patternColor","dataLabelsLayer","removeElement","addPattern","o","pValue","chartAPI","_drawn","labelSmartObj","angleStretch","tempLabel","tooltipOptions","isTooltip","Pie2DDataset","allowdrilltonode","parsedDS","parseAndSanitizeData","flatInput","tempMap","isRootNode","depthFirstVisit","sumOfVisit","givenValue","applicableValue","SunburstDataset","inputTree","sunburstAnimation","elementClickedFn","chartDrillDown","nodeParentId","childrenCount","drillDownToId","nodeColorMap","isDrilledDown","travserseAllElements","hoverFillAlpha","ds","dsArr","unFocussedAlpha","isSingleRootNode","totalValueParam","currentLevelValue","drillDownParent","parentId","tree","stack","idToSearch","searchedItem","clickablePath","off","Multiaxisline","vCanvasFactory","axes","axisJson","leftAxes","rightAxes","axisHEXColor","tickWidth","jlen","axesConf","checkBoxChecked","axiscolor","tickwidth","axistickwidth","axisonleft","yaxisvaluestep","maxvalue","minvalue","showZeroPlaneOnTop","tickLength","tickColor","tickAlpha","drawAxisNameFromBottom","parseMLAxisConf","showaxis","drawAxisLineWRTCanvas","drawAxisLine","drawAxisName","drawTrendLines","drawTick","drawTickMinor","showAxis","legendPos","comp","yAxisSpaceUsed","axisSelectorUI","rightPadding","leftPadding","showborder","dimension","_getDSspace","actualCanvasMarginTop","actualCanvasMarginLeft","actualCanvasMarginRight","actualCanvasMarginBottom","axesPadding","allowAxisShift","allowaxisshift","allowSelection","allowselection","checkBoxColor","checkboxcolor","axisConfigured","AreaBase","AxisSelectorUI","resetAxisCount","setPrimaryAxis","factoryAxis","axisMapById","activeAxis","existingInfo","info","exsitingAxisMapById","existingAxes","firstAxis","Map","side","reverse","axisId","get","checkbox","besideCanvas","axisCount","_existingAxes","_axisMapById","_info","removeInfo","checkboxesConf","avlWidth","getAxesDetails","isRight","oppositePos","drawHotElements","axisHotElements","_resuffelAxis","drawCheckBoxes","currCheckBox","CheckBox","symbolStroke","symbolStrokeWidth","containerInfo","toggle","_dolegendInteraction","_createLayers","parentLayer","containerName","e1","e2","newMapArray","axesDetails","entries","checked","manipulateCheckBox","clickedDS","allDS","checkboxUncheck","uncheck","check","getAxes","vC","axisY","VirtualCanvas","yAxisSelectorUI","numLen","visibilityChangedHandler","addDatasetVisibilityChangedEventListener","MultiAxisDataset","multiaxisAnimation","parseAttributes","lineDashLen","lineDashGap","linecolor","Msstepline","drawverticaljoins","useforwardsteps","MSStepLineDataset","msStepLineAnimation","drawVerticalJoins","halfStep","stepatmiddle","getPVR","isNull","Dragnode","usesXYinCategory","dontShowLegendByDefault","limitUpdaterEnabled","numVDivLines","DragNodeGroup","OBJECTBOUNDINGBOX","isVML","hideFn","getPointColor","colorVal","alphaVal","innerColor","outerColor","gradientUnits","BGRATIOSTRING","radialGradient","_configureTooltext","pointLabel","seriesNameInToolTip","dragNodeAnimation","changeInfo","pointInShape","_plotWidth","_plotHeight","toolTip","dragUp","_dragUp","dragMove","customData","px","py","_dragMove","_dragStart","cloneGraphic","cloneGraphicGroup","cloneText","cloneImage","_","dirty","clone","followers","origX","lastDx","origY","lastDy","dxVal","dyVal","_transformObj","unHoverAttr","rollOverProperties","hoverAttr","updatePointConfig","updateConf","dIndex","ZERO","showInLegend","is3d","nodeFillAlpha","datasetShowPlotBorder","datasetPlotBorderColor","datasetPlotBorderThickness","datasetPlotBorderAlpha","datasetAllowDrag","itemValueY","itemValueX","safeLabel","datasetColor","datasetAlpha","labelAlign","hoverheight","hoverradius","hoverwidth","cloneFillColor","pointHoverOptions","use3D","defaults","rawhoverBorderColor","hoverEffect","rolloverProperties","plothoverheight","plothoverwidth","plothoverradius","rawhoverAlpha","rawhoverColor","rawhoverBorderAlpha","rollOverAttrs","vcanvasLabelGroup","shapeInfo","_setSearchLimit","valueString","labelDisplacement","yAdjustment","plotWidth","_yAdjustment","borderHoverThickness","hoverHeight","hoverWidth","hoverRadius","confShapeArg","isRectangle","imageY","pointAttr","polypath","cloneImageAttr","imageElementAttr","datasetComponents","elemType","imageX","src","animationDone","graphicsObj","Areadataset","draggablelabelAnimation","inCanFontSize","labelCSS","labelBGColor","labelBDColor","dashLen","dashGap","lStyle","POSITION_CENTER","labelCSSApplied","removeCSS","drawTracker","trackerElementCheck","trackerGroup","elemMouseDownFN","elemMouseMoveFN","elemMouseUPFN","fireClick","elemHoverFN","elemOutFN","_labelDragMove","_labelDragStart","_labelDragUp","positionData"],"mappings":"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","file":"fusioncharts.powercharts.js","sourcesContent":["export default {\n  'initial.dataset.dragNodeLabels': function () {\n    return {\n      'group.appearing': function () {\n        return [\n          {\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'plot'\n          }\n        ];\n      }\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport DragNodeDataset from './dragnode';\nimport { pluck, pluckNumber, getValidValue, parseUnsafeString, getDashStyle, HUNDREDSTRING, DASH_DEF,\n  preDefStr, BLANK, toRaphaelColor, POINTER, BLANKSTRING, SHAPE_RECT, parseTooltext, getFirstColor } from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport connectorAnimation from './connector-animation';\n\nlet\n  EVENTARGS = preDefStr.EVENTARGS,\n  L = 'L',\n  M = 'M',\n  configStr = preDefStr.configStr,\n  _getlinePath = function (connector) {\n    var config = connector.config,\n      fromPointObj = config.fromPointObj,\n      toPointObj = config.toPointObj,\n      fromX = config.fromX,\n      fromY = config.fromY,\n      toX = config.toX,\n      toY = config.toY,\n      path = [M, fromX, fromY],\n      pointConfig;\n\n    if (config.arrowAtStart) {\n      pointConfig = fromPointObj.config;\n      if (pointConfig.shapeType === SHAPE_RECT) {\n        path = path.concat(DragNodeConnector._drawArrow(fromX, fromY, toX, toY,\n          pointConfig.shapeArg.width, pointConfig.shapeArg.height));\n      } else {\n        path = path.concat(DragNodeConnector._drawArrow(fromX, fromY, toX, toY,\n          pointConfig.shapeArg.radius));\n      }\n    }\n\n    // Calculating path for connector Arrow\n    if (config.arrowAtEnd) {\n      pointConfig = toPointObj.config;\n      if (pointConfig.shapeType === SHAPE_RECT) {\n        path = path.concat(DragNodeConnector._drawArrow(toX, toY, fromX, fromY,\n          pointConfig.shapeArg.width, pointConfig.shapeArg.height));\n      } else {\n        path = path.concat(DragNodeConnector._drawArrow(toX, toY, fromX, fromY,\n          pointConfig.shapeArg.radius));\n      }\n    }\n    path.push(L, toX, toY);\n    return path;\n  },\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {string} groupName                Name of the group to be created.\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (groupName, parentContainer, dataset) {\n    var animationManager = dataset.getFromEnv('animationManager');\n    return animationManager.setAnimation({\n      el: 'group',\n      attr: { name: groupName },\n      container: parentContainer,\n      component: dataset,\n      label: 'group'\n    });\n  };\n\naddDep({\n  name: 'connectorAnimation',\n  type: 'animationRule',\n  extension: connectorAnimation\n});\n/**\n * dataset class of dragcolumn inheriting from column class\n */\nclass DragNodeConnector extends DragNodeDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragNodeConnector';\n  }\n\n  /**\n   * Function to set the index of the dataset from amongst the other datasets\n   */\n  _setDatasetIndex () {\n    var dataset = this,\n      chidrenArr = dataset.getLinkedParent().getChildren('connector');\n    dataset.config.datasetIndex = chidrenArr.indexOf(dataset);\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart and dataset level.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} if no datasetJSON is found\n    */\n  configureAttributes (datasetJSON) {\n    if (datasetJSON) {\n      this.trimData(datasetJSON);\n      this.config.JSONData = datasetJSON;\n    } else if (!datasetJSON && !this.config.JSONData) {\n      return false;\n    }\n\n    var connectors = this,\n      // chartObj = connectors.chart,\n      // rawData = connectors.jsonData,\n      chartAttr = connectors.getFromEnv('chart-attrib'),\n      conf = connectors.config,\n      // dataStore = connectors.components.data || (connectors.components.data = []),\n      // dataStoreLen,\n      connectorsObj = connectors.config.JSONData,\n      connectorsArr = connectorsObj.connector,\n      length = connectorsArr && connectorsArr.length,\n      index,\n      // seriesConnector,\n      HUNDRED = HUNDREDSTRING;\n\n    conf.connectorsTooltext = getValidValue(parseUnsafeString(pluck(\n      connectorsObj.connectortooltext, chartAttr.connectortooltext), false));\n\n    // Extract attributes of this node.\n    conf.stdThickness = pluckNumber(connectorsObj.stdthickness, 1);\n    conf.conColor = getFirstColor(pluck(connectorsObj.color, 'FF5904'));\n    conf.conAlpha = pluck(connectorsObj.alpha, HUNDRED);\n    conf.conDashGap = pluckNumber(connectorsObj.dashgap, 5);\n    conf.conDashLen = pluckNumber(connectorsObj.dashlen, 5);\n    conf.conDashed = Boolean(pluckNumber(connectorsObj.dashed, 0));\n    conf.arrowAtStart = Boolean(pluckNumber(connectorsObj.arrowatstart, 1));\n    conf.arrowAtEnd = Boolean(pluckNumber(connectorsObj.arrowatend, 1));\n    conf.conStrength = pluckNumber(connectorsObj.strength, 1);\n    conf.toolTipSepChar = pluck(chartAttr.tooltipsepchar, ' - ');\n    // seriesConnector = connectors.connector;\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.viewMode = pluckNumber(chartAttr.viewmode, 1);\n\n    // dataStoreLen = dataStore.length;\n\n    // if (dataStoreLen > length) {\n    //     dataStore.splice(length, dataStoreLen - length);\n    // }\n    conf._refreshData = true;\n    connectors._setDatasetIndex('connector'); // set the datasetIndex of the connectors\n    for (index = 0; index < length; index += 1) {\n      this._setConfigure(index, connectorsArr[index]);\n    }\n    conf._refreshData = true;\n  }\n\n  /**\n   * Function for parsing all the attributes and value given by the user at set level.\n   * @param {number} index The data index for which the configuration is to be parsed.\n   * @param {Object} connectorObj It has the information of the data given by the user at the set level\n   */\n  _setConfigure (index, connectorObj) {\n    // connector label.\n    var connector = this,\n      connectorStore = connector.components.data || (connector.components.data = []),\n      connObj = connectorStore[index] || (connectorStore[index] = connectorStore[index] = {}),\n      conf = connector.config,\n      // chartObj = connector.chart,\n      connectorLabel = parseUnsafeString(pluck(connectorObj.label, connectorObj.name)),\n      setConAlpha = pluck(connectorObj.alpha, conf.conAlpha),\n      smartLabel = connector.getFromEnv('smartLabel'),\n      tooltipSepChar = conf.toolTipSepChar,\n      defToolTextMacro = '$fromLabel' + tooltipSepChar + '$toLabel',\n      setConColor = {\n        FCcolor: {\n          color: getFirstColor(pluck(connectorObj.color, conf.conColor)),\n          alpha: setConAlpha\n        }\n      },\n      toolText,\n      config,\n      labelTextObj,\n      connectorsTooltext = conf.connectorsTooltext,\n      connectorToolText = getValidValue(parseUnsafeString(pluck(connectorObj.tooltext,\n        connectorsTooltext), false)),\n      boolCondition = Boolean(pluckNumber(connectorObj.dashed, conf.conDashed));\n\n    smartLabel.setStyle(connector.getFromEnv('dataLabelStyle'));\n    smartLabel.useEllipsesOnOverflow(connector.getFromEnv('chartConfig').useEllipsesWhenOverflow);\n    labelTextObj = smartLabel.getOriSize(connectorLabel);\n    config = connObj.config = connObj.config || (connObj.config = {});\n    !connObj.graphics && (connObj.graphics = {});\n    // create the tooltext\n    if (!conf.showTooltip) {\n      toolText = false;\n    } else { // determine the tooltext then\n      toolText = pluck(connectorToolText, connectorLabel\n        ? '$label' : defToolTextMacro);\n    }\n    config = connObj.config = {\n      _options: connectorObj,\n      id: pluck(connectorObj.id, index).toString(),\n      from: pluck(connectorObj.from, BLANK),\n      to: pluck(connectorObj.to, BLANK),\n      label: connectorLabel,\n      toolText: toolText,\n      customToolText: connectorToolText,\n      color: setConColor,\n      index: index,\n      dashStyle: boolCondition\n        ? getDashStyle(pluckNumber(connectorObj.dashlen, conf.conDashLen),\n          pluckNumber(connectorObj.dashgap, conf.conDashGap)) : DASH_DEF,\n      dashed: connectorObj.dashed,\n      dashlen: connectorObj.dashlen,\n      dashgap: connectorObj.dashgap,\n      arrowAtStart: Boolean(pluckNumber(connectorObj.arrowatstart, conf.arrowAtStart)),\n      arrowAtEnd: Boolean(pluckNumber(connectorObj.arrowatend, conf.arrowAtEnd)),\n      conStrength: pluckNumber(connectorObj.strength, conf.conStrength),\n      link: connectorObj.link,\n      stdThickness: conf.stdThickness,\n      labelWidth: labelTextObj.widht,\n      labelHeight: labelTextObj.height\n    };\n    config.datasetIndex = connector.config.datasetIndex;\n    config.add = connectorObj.add;\n    config.update = connectorObj.update;\n\n    config.dataLabelStyle = connector._configureDataLabelStyle(connectorObj);\n    if (conf._refreshData) {\n      delete connObj.removed;\n    }\n  }\n\n  /**\n   * Function to create container at the dataset level\n   */\n  createContainer () {\n    var dataset = this,\n      parentContainer = dataset.getLinkedParent().getChildContainer();\n\n    !dataset.getContainer('connectorGroup') && dataset.addContainer('connectorGroup',\n      createGroup('connectorGroup', parentContainer.connectorGroup, dataset));\n\n    !dataset.getContainer('connectorDataLabelGroup') && dataset.addContainer('connectorDataLabelGroup',\n      createGroup('connectorDataLabelGroup', parentContainer.connectorGroup, dataset));\n  }\n\n  /**\n   * Function ot draw the entire dataset\n   */\n  draw () {\n    var connectors = this,\n      // chart = connectors.chart,\n      manager = connectors.getLinkedParent(),\n      conf = connectors.config,\n      // chartObj = connectors.chart,\n      // chartComp = chartObj.components,\n      // chartGraphics = chart.graphics,\n      // nodes = manager.nodes,\n      connectorStore = connectors.components.data,\n      connector,\n      fromId,\n      toId,\n      // paper = connectors.getFromEnv('paper'),\n      // jobList = chart.getJobList(),\n      // datasetGroup = chartGraphics.datasetGroup,\n      fromPointObj,\n      toPointObj,\n      style = connectors.getFromEnv('dataLabelStyle'),\n      // graphics,\n      i,\n      length = connectorStore.length,\n      removeDataArr = connectors.components.removeDataArr || [],\n      removeDataArrLen = removeDataArr.length,\n      // connectorsGroup,\n      config;\n\n    // if (!connectorsGroup) {\n    //     connectorsGroup = connectors.graphics.connectorGroup =\n    //         connectors.graphics.connectorGroup || paper.group('connectorGroup').insertBefore(datasetGroup);\n    // }\n\n    connectors.createContainer();\n    // connectorsGroup = connectors.getContainer('connectorGroup');\n\n    conf.cleared = false;\n    connectors.getContainer('connectorDataLabelGroup').css(style);\n    for (i = 0; i < length; i++) {\n      connector = connectorStore[i];\n      config = connector.config;\n      // graphics = connector.graphics || (connector.graphics = {});\n      fromId = config.from;\n      toId = config.to;\n      fromPointObj = manager.getNode(fromId);\n      toPointObj = manager.getNode(toId);\n      if (fromPointObj && toPointObj && config.deleted !== true) {\n        connectors.drawConnector(connector, fromPointObj, toPointObj, i);\n      }\n    }\n    connectors.config.drawn = true;\n\n    for (i = 0; i < removeDataArrLen; i++) {\n      connectors._removeDataVisuals(removeDataArr.shift());\n    }\n  }\n\n  /**\n   * Parsing and calculation of attributes takes place\n   *\n   * @param {any} connector connector\n   * @param {any} fromPointObj from node\n   * @param {any} toPointObj to node\n   * @memberof DragNodeConnector\n   */\n  parsePlotAttributes (connector, fromPointObj, toPointObj) {\n    var dataset = this,\n      fromX,\n      toX,\n      fromY,\n      toY,\n      strokeWidth,\n      NumberFormatter = dataset.getFromEnv('number-formatter'),\n      pathArr,\n      startConnectors,\n      endConnectors,\n      config = connector.config,\n      fromConf,\n      toConf,\n      eventArgs = config.eventArgs || (config.eventArgs = {}),\n      color,\n      id;\n\n    config.fromPointObj = fromPointObj;\n    config.toPointObj = toPointObj;\n    fromConf = fromPointObj.config;\n    toConf = toPointObj.config;\n    config.fromX = fromX = fromConf._xPos;\n    config.fromY = fromY = fromConf._yPos;\n    config.toX = toX = toConf._xPos;\n    config.toY = toY = toConf._yPos;\n    config._labelX = (fromX + toX) / 2;\n    config._labelY = (fromY + toY) / 2;\n    config.strokeWidth = strokeWidth = (config.conStrength * config.stdThickness);\n    color = config.color;\n    config.textBgColor = color && color.FCcolor &&\n        color.FCcolor.color;\n    eventArgs.label = config.label;\n    eventArgs.arrowAtStart = config.arrowAtStart;\n    eventArgs.arrowAtEnd = config.arrowAtEnd;\n    eventArgs.link = config.link;\n    eventArgs.id = config.id;\n    eventArgs.fromNodeId = fromConf.id;\n    eventArgs.toNodeId = toConf.id;\n    config.toolText = parseTooltext(config.toolText, [3, 83,\n      84, 85, 86, 87, 88, 89, 90, 91, 92\n    ], {\n      label: config.label,\n      fromXValue: NumberFormatter.dataLabels(fromPointObj.config.x),\n      fromYValue: NumberFormatter.dataLabels(fromPointObj.config.y),\n      fromXDataValue: fromPointObj.config.x,\n      fromYDataValue: fromPointObj.config.y,\n      fromLabel: pluck(fromPointObj.config.displayValue, fromPointObj.config.id),\n      toXValue: NumberFormatter.dataLabels(toPointObj.config.x),\n      toYValue: NumberFormatter.dataLabels(toPointObj.config.y),\n      toXDataValue: toPointObj.config.x,\n      toYDataValue: toPointObj.config.y,\n      toLabel: pluck(toPointObj.config.displayValue, toPointObj.config.id)\n    });\n\n    fromConf = fromPointObj.config;\n    toConf = toPointObj.config;\n\n    startConnectors = fromConf.startConnectors || (fromConf.startConnectors = {});\n    endConnectors = toConf.endConnectors || (toConf.endConnectors = {});\n\n    id = connector.config.id + '-' + fromConf.id + '-' + toConf.id;\n\n    startConnectors[id] = connector;\n    endConnectors[id] = connector;\n\n    pathArr = _getlinePath(connector);\n    config.props = {\n      element: {\n        attr: {\n          path: pathArr,\n          'stroke-width': strokeWidth,\n          'stroke-dasharray': config.dashStyle,\n          cursor: config.link ? POINTER : BLANKSTRING,\n          stroke: toRaphaelColor(color)\n        }\n      }\n    };\n  }\n  /**\n   * Parse attributes and calculates position during post space management\n   *\n   * @memberof DragNodeConnector\n   */\n  allocatePosition () {\n    var connectors = this,\n      i,\n      connector,\n      config,\n      fromId,\n      toId,\n      fromPointObj,\n      toPointObj,\n      manager = connectors.getLinkedParent(),\n      connectorStore = connectors.components.data,\n      len = connectorStore.length;\n\n    for (i = 0; i < len; i++) {\n      connector = connectorStore[i];\n      config = connector.config;\n      // graphics = connector.graphics || (connector.graphics = {});\n      fromId = config.from;\n      toId = config.to;\n      fromPointObj = manager.getNode(fromId);\n      toPointObj = manager.getNode(toId);\n      if (fromPointObj && toPointObj && config.deleted !== true) {\n        connectors.parsePlotAttributes(connector, fromPointObj, toPointObj, i);\n      }\n    }\n  }\n  /**\n   * Function to draw individual connectors\n   * @param {Object} connector Object having information about the connector that is to be drawn\n   * @param {Object} fromPointObj Object having the information about the node from which the connector is to be drawn\n   * @param {Object} toPointObj Object having the information about the node to which the connector is to be drawn\n   */\n  drawConnector (connector) {\n    var dataset = this,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      animationManager = dataset.getFromEnv('animationManager'),\n      graphics = connector.graphics,\n      element,\n      elementCheck,\n      connectorsGroup = dataset.getContainer('connectorGroup'),\n      config = connector.config,\n      tooltext = config.toolText,\n      eventArgs = config.eventArgs || (config.eventArgs = {}),\n      conf = dataset.config,\n      pool = dataset.components.pool || {};\n\n    if (connector.removed) {\n      return;\n    }\n    element = elementCheck = graphics.graphic;\n    if (!graphics.graphic) {\n      if (pool.graphic && pool.graphic.path && pool.graphic.path.length) {\n        elementCheck = graphics.graphic = pool.graphic.path.shift();\n      }\n    }\n    // draw the line\n    element = animationManager.setAnimation({\n      el: elementCheck || 'path',\n      container: connectorsGroup,\n      attr: config.props.element.attr,\n      label: 'path',\n      component: dataset\n    });\n    if (!elementCheck) {\n      graphics.graphic = element;\n      element.on('fc-mousedown', dataset.mouseDown)\n        .on('fc-mousemove', dataset.mousemove)\n        .on('fc-mouseup', dataset.mouseup)\n        .hover(dataset.hoverIn, dataset.hoverOut);\n    }\n    element.show()\n      .data(EVENTARGS, eventArgs)\n      .data('viewMode', conf.viewMode)\n      .data(configStr, config)\n      .data('dataset', dataset);\n    conf.showTooltip\n      ? toolTipController.enableToolTip(element, tooltext) : toolTipController.disableToolTip(element);\n    // If this is not the first render then label is drawn instantly otherwise it is drawn in\n    // another thread for performance optimization\n    dataset.drawLabel(connector);\n  }\n\n  /**\n   * Function to draw individual labels of the connector\n   * @param {Object} connector Object having information about the connector whose label is to be drawn\n   */\n  drawLabel (connector) {\n    var dataset = this,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      // groupManager = dataset.groupManager,\n      // nodes = groupManager.nodes,\n      conf = dataset.config,\n      animationManager = dataset.getFromEnv('animationManager'),\n      // chart = dataset.chart,\n      // animationObj = chart.get('config', 'animationObj'),\n      connectorsGroup = dataset.getContainer('connectorDataLabelGroup'),\n      // dummyAnimObj = animationObj.animObj,\n      // dummyAnimElem = animationObj.dummyObj,\n      // animType = animationObj.animType,\n      // animationDuration = animationObj.duration,\n      config,\n      label,\n      tooltext,\n      labelAttrs,\n      style = dataset.getFromEnv('dataLabelStyle'),\n      labelStyle,\n      labelElement,\n      labelElementCheck,\n      graphics,\n      connectorObj,\n      i,\n      labelX,\n      labelY,\n      textBgColor,\n      dataStore = dataset.components.data,\n      pool = dataset.components.pool || {},\n      len = dataStore.length,\n      // fromPointObj,\n      // toPointObj,\n      // fromId,\n      // toId,\n      drawIndividualLabel = function (labelConnector) {\n        config = labelConnector.config;\n        tooltext = config.toolText;\n        graphics = labelConnector.graphics;\n        label = config.label;\n        labelX = config._labelX;\n        labelY = config._labelY;\n\n        labelStyle = config.dataLabelStyle || style;\n        // fromId = config.from;\n        // toId = config.to;\n        // fromPointObj = nodes[fromId];\n        // toPointObj = nodes[toId];\n        textBgColor = config.textBgColor;\n\n        if (label) {\n          labelElementCheck = graphics.text = graphics.text || (pool.element && pool.element.text &&\n              pool.element.text.shift());\n          labelAttrs = {\n            text: label,\n            fill: labelStyle.color,\n            direction: BLANKSTRING,\n            cursor: config.link ? POINTER : BLANKSTRING,\n            'text-bound': [pluck(labelStyle.backgroundColor, textBgColor),\n              pluck(labelStyle.borderColor, textBgColor), 1, '2'\n            ],\n            x: labelX,\n            y: labelY\n          };\n\n          // Drawing the connector Label\n          labelElement = animationManager.setAnimation({\n            el: labelElementCheck || 'text',\n            attr: labelAttrs,\n            container: connectorsGroup,\n            label: 'text',\n            component: dataset\n          });\n          labelElement.show();\n          labelElement.outlineText(conf.showTextOutline, labelAttrs.fill);\n          if (!labelElementCheck) {\n            graphics.text = labelElement;\n            labelElement.on('fc-mousedown', dataset.mouseDown)\n              .on('fc-mousemove', dataset.mousemove)\n              .on('fc-mouseup', dataset.mouseup)\n              .hover(dataset.hoverIn, dataset.hoverOut);\n          }\n          labelElement.data(EVENTARGS, config.eventArgs)\n            .data('viewMode', conf.viewMode)\n            .data(configStr, config)\n            .data('dataset', dataset);\n          conf.showTooltip\n            ? toolTipController.enableToolTip(labelElement, tooltext) : toolTipController.disableToolTip(labelElement);\n        } else {\n          graphics.text && graphics.text.hide();\n        }\n      };\n\n    if (connector) {\n      drawIndividualLabel(connector);\n    } else {\n      for (i = 0; i < len; i++) {\n        connectorObj = dataStore[i];\n        drawIndividualLabel(connectorObj);\n      }\n    }\n  }\n\n  /**\n   * Callback function when mouse is pressed down over the connector\n   */\n  mouseDown () {\n    var ele = this,\n      // config = ele.data(configStr),\n      dataset = ele.data('dataset'),\n      manager = dataset.getLinkedParent();\n      // chart = dataset.chart,\n      // conf = dataset.config,\n      // options = config || {};\n\n    manager.clearLongPress();\n\n    // Whether to fire the click event ot not\n    ele.data('fire_click_event', 1);\n    manager.triggerConnectorUI(ele);\n  }\n\n  /**\n   * Callback function when mouse is moved over a connector\n   */\n  mousemove () {\n    var ele = this,\n      dataset = ele.data('dataset'),\n      manager = dataset.getLinkedParent();\n    // Whether to fire the click event ot not\n    ele.data('fire_click_event', 0);\n    manager.clearLongPress();\n  }\n\n  /**\n   * Callback function mouse press is released from over a connector\n   */\n  mouseup () {\n    var ele = this,\n      dataset = ele.data('dataset'),\n      manager = dataset.getLinkedParent();\n\n    manager.clearLongPress();\n    // plotEventHandler.call(ele, chart, data, 'ConnectorClick');\n  }\n\n  hoverIn (e) {\n    var ele = this,\n      dataset = ele.data('dataset'),\n      chart = dataset.getFromEnv('chart');\n    chart.plotEventHandler(ele, e, 'ConnectorRollover');\n  }\n\n  hoverOut (e) {\n    var ele = this,\n      dataset = ele.data('dataset'),\n      chart = dataset.getFromEnv('chart');\n    chart.plotEventHandler(ele, e, 'ConnectorRollout');\n  }\n\n  /**\n   * Function to draw arrow heads for the connectors\n   * @param {number} X1 The required dimenions for drawing the arrow head\n   * @param {number} Y1 The required dimenions for drawing the arrow head\n   * @param {number} X2 The required dimenions for drawing the arrow head\n   * @param {number} Y2 The required dimenions for drawing the arrow head\n   * @param {number} R The required dimenions for drawing the arrow head\n   * @param {number} H The required dimenions for drawing the arrow head\n   * @return {Array} contains the path coordinates\n   */\n  static _drawArrow (X1, Y1, X2, Y2, R, H) {\n    var tanganent = (Y1 - Y2) / (X1 - X2),\n      angle = Math.atan(tanganent),\n      PX, PY, RHlf, HHlf,\n      arr = [];\n\n    // make all angle as positive\n    if (angle < 0) {\n      angle = (2 * Math.PI) + angle;\n    }\n    if (Y2 > Y1) { // PI >angle > 0\n      if ((X2 >= X1 && angle > Math.PI) || (X2 < X1 && angle > Math.PI)) {\n        angle = angle - Math.PI;\n      }\n    } else { /// PI <= angle < 360 || angle == 0\n      // angle may not be 360 in that case it will be 0 as atan work\n      if ((X2 >= X1 && angle < Math.PI && angle !== 0) || (X2 < X1 && angle < Math.PI)) {\n        angle = angle + Math.PI;\n      }\n    }\n\n    if (typeof H === 'undefined') {\n      // arrow start point\n      PX = X1 + (R * Math.cos(angle));\n      PY = Y1 + (R * Math.sin(angle));\n    } else { // rectangle\n      RHlf = Math.abs(R) / 2;\n      HHlf = Math.abs(H) / 2;\n\n      // asume it will intersect a vertical side\n      PX = X1 + (RHlf = X1 < X2 ? RHlf : -RHlf);\n      PY = Y1 + (RHlf * Math.tan(angle));\n      // validate PY\n      // if not validate then it will cross the horizontal axis\n      if (Math.abs(Y1 - PY) > Math.abs(HHlf)) {\n        PY = Y1 + (HHlf = Y1 < Y2 ? HHlf : -HHlf);\n        PX = X1 + (HHlf / Math.tan(angle));\n      }\n    }\n\n    arr.push(L, PX, PY,\n      // arrowone half\n      PX + (10 * Math.cos(angle + 0.79)),\n      PY + (10 * Math.sin(angle + 0.79)),\n      // arrowone half\n      M, PX + (10 * Math.cos(angle - 0.79)),\n      PY + (10 * Math.sin(angle - 0.79)),\n      // return to th eedege\n      L, PX, PY);\n\n    return arr;\n  }\n\n  /**\n   * Function to remove data during update if number of data has reduced than the previous render\n   * @param {number} indexVal The data index from which data has to be removed.\n   * @param {number} stretch The index upto which data has to be removed\n   */\n  removeData (indexVal, stretch) {\n    var dataset = this,\n      index = indexVal,\n      components = dataset.components,\n      dataStore = components.data;\n\n    if (index < 0) {\n      index = 0;\n    }\n    components.removeDataArr = dataStore.splice(index, stretch);\n  }\n\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.config.JSONData) {\n      return;\n    }\n    let dataSet = this,\n      prevData = dataSet.components,\n      prevDataLength = prevData.data && prevData.data.length,\n      currDataLength = (datasetJSON.connector && datasetJSON.connector.length) || 0,\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots/categories\n    // is more than the existing ones.\n    if (dataDiff > 0) {\n      dataSet.removeData(currDataLength, dataDiff);\n    }\n  }\n}\nexport default DragNodeConnector;\n","export default {\n  'initial.dataset.dragNodeConnector': function () {\n    return {\n      'path.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'plot'\n        }];\n      },\n      'text.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0,\n            'text-bound': 'none'\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\n\nimport DragNodeLabels from '../../dragnode/dragablelabels';\nimport { toRaphaelColor, preDefStr, COMMASTRING, getFirstValue, pluck, BLANKSTRING,\n  fcEach, hashify, HASHSTRING, pluckNumber, componentDispose, extend2, componentFactory, parseColor, getValidColor }\n  from '@fusioncharts/core/src/lib';\n\nlet CLEAR_TIME_1000 = 1000,\n  shapesInfo = {\n    circle: 'circ',\n    rectangle: 'rect',\n    polygon: 'poly'\n  },\n  UNDEF,\n  INPUT = preDefStr.INPUT,\n  BLANKSPACE = preDefStr.BLANKSPACE,\n  BLANK = preDefStr.BLANK,\n  COLOR_FFFFFF = 'ffffff',\n  PX = preDefStr.PX,\n  COLOR_000000 = '000000',\n  OPTIONSTR = '<option>',\n  OPTIONCLOSESTR = '</option>',\n  LABEL = preDefStr.LABEL,\n  DATASET = preDefStr.DATASET,\n  COMMA = preDefStr.COMMA,\n  DATASETSTATE = 'appearing',\n  ONE_PX_BORDER = '1px solid #cccccc',\n  DISABLED = 'disabled',\n  LABEL_ADDED = 'labeladded',\n  OPTION_VALUE = '<option value=\"',\n  CLOSE_TAG = '\">',\n  OPTION_STR = '</option>',\n  NODE_ADDED = 'nodeAdded',\n  NODE_UPDATED = 'nodeupdated',\n  NODE_DELETED = 'nodedeleted',\n  CONNECTOR_ADDED = 'connectoradded',\n  CONNECTOR_UPDATED = 'connectorupdated',\n  CONNECTOR_DELETED = 'connectordeleted',\n  TRANSPARENT = 'transparent',\n  DIV_STR = 'div',\n  COLOR_EFEFEF = 'efefef',\n  SUBMIT_STR = 'Submit',\n  DELETE_STR = 'Delete',\n  CANCEL_STR = 'Cancel',\n  UPDATE_STR = 'update',\n  APPEARING_STR = 'appearing',\n  LABEL_DELETED = 'labeldeleted',\n  removeElems = function (graphics) {\n    for (var i in graphics) {\n      graphics[i].remove();\n    }\n  },\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  // configures eventArgs with values of dataObj based on shapeType of node\n  makeShapeSpecificModifications = function (eventArgs, dataObj) {\n    switch (eventArgs.shape) {\n      case preDefStr.CIRCLE:\n        eventArgs.radius = dataObj.radius;\n        break;\n      case preDefStr.POLYGON:\n        eventArgs.radius = dataObj.radius;\n        eventArgs.sides = dataObj.numsides;\n        break;\n      default:\n        eventArgs.width = dataObj.width;\n        eventArgs.height = dataObj.height;\n        break;\n    }\n  },\n  _showNodeUpdateUI = (function () {\n    // eslint-disable-next-line good-practices/no-function-dependency\n    var manageShapeFields = function () {\n        var ui = this.getGraphicalElement('cacheUpdateUI'),\n          ele = ui.fields.shape, // eslint-disable-line good-practices/no-single-usage-variable\n          shapeFields = ['rectWidth', 'rectHeight', 'circPolyRadius', 'polySides'],\n          i = shapeFields.length,\n          key;\n\n        while (i--) {\n          key = shapeFields[i];\n          if (/rect|poly|circ/ig.test(key)) {\n            ui.labels[key].hide();\n            ui.fields[key].hide();\n          }\n          if (new RegExp(pluck(ele.val(), 'rect'), 'ig').test(key)) {\n            ui.labels[key].show();\n            ui.fields[key].show();\n          }\n        }\n      },\n      // eslint-disable-next-line good-practices/no-function-dependency\n      showGivenColor = function () {\n        var fields = this.getGraphicalElement('cacheUpdateUI').fields,\n          color = getValidColor(fields.color.val());\n\n        color && fields.colorOut.css({\n          background: parseColor(color)\n        });\n      },\n      // eslint-disable-next-line good-practices/no-function-dependency\n      manageImageFields = function (animate) {\n        var manager = this,\n          ui = manager.getGraphicalElement('cacheUpdateUI'),\n          animationManager = manager.getFromEnv('animationManager'),\n          chartHeight = manager.getFromEnv('chartConfig').height, // eslint-disable-line good-practices/no-single-usage-variable\n          padding = 5,\n          isChecked = ui.fields.image.val(),\n          imgKey = ['imgWidth', 'imgHeight', 'imgAlign', 'imgUrl'],\n          dialogHeight,\n          i,\n          key;\n\n        dialogHeight = isChecked ? 250 : 215;\n\n        if (animate) {\n          ui.ok.hide();\n          ui.cancel.hide();\n          ui.removeItem.hide();\n          ui.error.hide();\n        }\n        i = imgKey.length;\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (!isChecked && i--) {\n          key = imgKey[i];\n          ui.labels[key].hide();\n          ui.fields[key].hide();\n        }\n        animate && animationManager.setAnimationState('uichange');\n        animationManager.setAnimation({\n          el: ui.dialog,\n          state: 'updating',\n          attr: {\n            top: (chartHeight - dialogHeight) / 2,\n            height: dialogHeight\n          },\n          component: manager,\n          label: 'uidialog',\n          callback: function () {\n            i = imgKey.length;\n            // eslint-disable-next-line no-unmodified-loop-condition\n            while (i-- && isChecked) {\n              key = imgKey[i];\n              ui.labels[key].show();\n              ui.fields[key].show();\n            }\n            ui.ok.attr({\n              y: dialogHeight - 23 - padding\n            }).show();\n            ui.cancel.attr({\n              y: dialogHeight - 23 - padding\n            }).show();\n            ui.removeItem.attr({\n              y: dialogHeight - 23 - padding\n            });\n            ui.error.attr({\n              y: dialogHeight - 23 - padding + 4\n            }).show();\n            if (ui.edit) {\n              ui.removeItem.show();\n            } else {\n              ui.removeItem.hide();\n            }\n          }\n        });\n      };\n\n    return function (config, edit) {\n      var manager = this,\n        // graphics = manager.graphics,\n        ui = manager.getGraphicalElement('cacheUpdateUI'),\n        // nodes = manager.nodes,\n        // conf = chart.config,\n        paper = manager.getFromEnv('paper'),\n        borderStyle = ONE_PX_BORDER,\n        inputStyle = {\n          width: 80 + PX,\n          border: borderStyle,\n          fontSize: 10 + PX,\n          lineHeight: 15 + PX,\n          padding: 2 + PX,\n          fontFamily: (manager.getFromEnv('style').inCanvasStyle || {}).fontFamily\n        },\n        noUIfound,\n        labelStyle = { // eslint-disable-line good-practices/no-single-usage-variable\n          textAlign: 'right'\n        },\n        fields = ui && ui.fields,\n        labels = ui && ui.labels,\n        dialog,\n        // node,\n        // index,\n        onSubmit = function (event) {\n          event.stopPropagation();\n          var uiFields = ui && ui.fields, // eslint-disable-line good-practices/no-single-usage-variable\n            uiEdit = ui.edit,\n            idFound,\n            id,\n            submitObj;\n\n          if (fields) {\n            submitObj = {\n              x: getFirstValue(fields.x.val(), manager.getFromEnv('xAxis').getLimit().min),\n              y: getFirstValue(fields.y.val(), manager.getFromEnv('yAxis').getLimit().min),\n              id: id = fields.id.val(),\n              datasetId: fields.dataset.val(),\n              name: fields.label.val(),\n              tooltext: fields.tooltip.val(),\n              color: fields.color.val(),\n              alpha: fields.alpha.val(),\n              labelalign: fields.labelalign.val(),\n              allowdrag: fields.draggable.val(),\n              imagenode: fields.image.val(),\n              imagewidth: fields.imgWidth.val(),\n              imageheight: fields.imgHeight.val(),\n              imagealign: fields.imgAlign.val(),\n              imageurl: fields.imgUrl.val(),\n              link: fields.link.val()\n            };\n\n            // Shape specific configurations.\n            switch (uiFields.shape.val()) {\n              case 'circ':\n                submitObj.shape = preDefStr.CIRCLE;\n                submitObj.radius = fields.circPolyRadius.val();\n                break;\n              case 'poly':\n                submitObj.shape = preDefStr.POLYGON;\n                submitObj.radius = fields.circPolyRadius.val();\n                submitObj.numsides = fields.polySides.val();\n                break;\n              default:\n                submitObj.shape = preDefStr.RECTANGLE;\n                submitObj.width = fields.rectWidth.val();\n                submitObj.height = fields.rectHeight.val();\n                break;\n            }\n\n            // Check if node already exists\n            if (manager.getNode(submitObj.id)) {\n              idFound = true;\n            }\n\n            // If node already exists then we do not add a node and show an error\n            if (!idFound || uiEdit !== UNDEF) {\n              // node = nodes[submitObj.id] || {};\n              id = submitObj.datasetId;\n              // Dont add nodes when dataset id is not given\n              if (id !== BLANKSTRING || uiEdit) {\n                id = Number(id);\n                // index = node.config && node.config.index;\n                uiEdit ? manager.updateNode(submitObj) : manager.addNode(submitObj);\n                ui.hide();\n                ui.visible = false;\n              }\n              return;\n            }\n            ui.error.attr({\n              text: 'ID already exist.'\n            });\n            fields.label.focus();\n          }\n          // Remobe disabled from attr\n          ui.enableFields();\n        },\n        onCancel = function (event) {\n          event.stopPropagation();\n          // Hide the UI\n          ui.hide();\n          ui.visible = false;\n          // Remobe disabled from attr\n          ui.enableFields();\n          // Hide error msg\n          ui.error.attr({\n            text: BLANK\n          });\n          ui.visible = false;\n        },\n        onDelete = function (event) {\n          event.stopPropagation();\n          manager.deleteNode(ui.fields.id.val());\n          ui.hide();\n          ui.visible = false;\n        };\n\n      manager.getFromEnv('animationManager').setAnimationState('uichange');\n      if (!ui) {\n        noUIfound = true;\n      }\n      ui = manager.addGraphicalElement('cacheUpdateUI', manager.createHtmlDialog(\n        350, 215, onSubmit, onCancel, onDelete, ui));\n\n      if (noUIfound) {\n        // add fields.\n        dialog = ui.dialog;\n        labels = ui.labels = {};\n        fields = ui.fields = {};\n      }\n      ui.config = config;\n      ui.edit = edit;\n      if (!ui.error) {\n        ui.error = paper.html('span', {\n          color: 'ff0000',\n          x: 30,\n          y: 228\n        }, UNDEF, dialog);\n      }\n      if (!ui.enableFields) {\n        ui.enableFields = function () {\n          var key;\n          for (key in config) {\n            if (config[key] && config[key].disabled && fields[key]) {\n              fields[key].element.removeAttribute('disabled');\n            }\n          }\n        };\n      }\n      if (!ui.clearFields) {\n        ui.clearFields = function () {\n          var key;\n          for (key in ui.fields) {\n            if (!fields[key].element.disabled) {\n              fields[key].element.value = BLANKSTRING;\n            }\n          }\n        };\n      }\n\n      fcEach(this.nodeUpdateUIDefinition, function (def) {\n        var field,\n          key = def.key,\n          attrs = {},\n          confObj = config[key] || {},\n          innerHTML,\n          value;\n\n        !labels[key] && (labels[key] = paper.html(LABEL, {\n          x: def.x,\n          y: def.y,\n          width: def.labelWidth || 45,\n          text: def.text\n        }, labelStyle, dialog));\n\n        // No need to proceed of this label has no input box\n        // associated with itself.\n        if (def.noInput) {\n          return;\n        }\n\n        field = fields[key];\n\n        if (!field) {\n          inputStyle.border = def.type === 'checkbox' ? BLANK : borderStyle;\n          field = fields[key] =\n              paper.html(def.inputType || 'input', {\n                x: (def.labelWidth && (def.labelWidth + 5)) || 50,\n                y: -2 + (def.inputPaddingTop || 0),\n                width: def.inputWidth || 50,\n                name: key || BLANKSTRING\n              }, inputStyle);\n\n          if (def.inputType !== 'select') {\n            field.attr({\n              type: def.type || 'text'\n            }).on('keyup', ui.handleKeyPress);\n          }\n          field.add(labels[key]);\n        }\n\n        if (defined(innerHTML = getFirstValue(confObj.innerHTML, def.innerHTML))) { // eslint-disable-line good-practices/no-single-usage-variable\n          attrs.innerHTML = innerHTML;\n        }\n        if (confObj.disabled) {\n          attrs.disabled = DISABLED;\n        } else {\n          field.element && (field.element.disabled = false);\n        }\n        field.attr(attrs);\n        if (defined(value = getFirstValue(confObj.value, def.value))) { // eslint-disable-line good-practices/no-single-usage-variable\n          field.val(value);\n        }\n        // eslint-disable-next-line good-practices/no-function-dependency\n        key === 'shape' && field.on('change', function () {\n          manageShapeFields.call(manager);\n        });\n        // eslint-disable-next-line good-practices/no-function-dependency\n        key === 'image' && field.on('fc-click', function () {\n          manageImageFields.call(manager, true);\n        });\n        // eslint-disable-next-line good-practices/no-function-dependency\n        key === 'color' && field.on('keyup', function () {\n          showGivenColor.call(manager);\n        });\n      });\n\n      showGivenColor.call(this);\n      manageImageFields.call(this);\n      manageShapeFields.call(this);\n      ui.visible = true;\n      ui.fields[edit ? LABEL : 'id'].focus();\n    };\n  })();\n\n/**\n * Class for dragnodes's group\n */\nclass DragNodeGroup extends ComponentInterface {\n  /**\n   * constructor function this class\n   */\n  constructor () {\n    super();\n    var manager = this;\n    manager.setState('visible', true);\n    manager.connectorUpdateUIDefinition = [{\n      key: 'fromid',\n      text: 'Connect From',\n      inputType: 'select',\n      x: 10,\n      y: 15,\n      labelWidth: 80,\n      inputWidth: 100\n    }, {\n      key: 'toid',\n      text: 'Connect To',\n      inputType: 'select',\n      x: 10,\n      y: 40,\n      labelWidth: 80,\n      inputWidth: 100\n    }, {\n      key: 'arratstart',\n      text: 'Arrow At Start',\n      x: 200,\n      y: 15,\n      type: 'checkbox',\n      inputPaddingTop: 3,\n      labelWidth: 80,\n      inputWidth: 15\n    }, {\n      key: 'arratend',\n      text: 'Arrow At End',\n      x: 200,\n      y: 40,\n      type: 'checkbox',\n      inputPaddingTop: 3,\n      labelWidth: 80,\n      inputWidth: 15\n    }, {\n      key: LABEL,\n      text: 'Label',\n      x: 10,\n      y: 75,\n      labelWidth: 40,\n      inputWidth: 120\n    }, {\n      key: 'id',\n      text: 'Node ID',\n      x: 190,\n      y: 75,\n      inputWidth: 55\n    }, {\n      key: 'color',\n      text: 'Color',\n      x: 10,\n      y: 100,\n      labelWidth: 40,\n      inputWidth: 35\n    }, {\n      key: 'alpha',\n      text: 'Alpha',\n      x: 110,\n      y: 100,\n      inputWidth: 25,\n      labelWidth: 35\n    }, {\n      key: 'strength',\n      text: 'Strength',\n      x: 190,\n      y: 100,\n      inputWidth: 55,\n      val: '0.1'\n    }, {\n      key: 'url',\n      text: 'Link',\n      x: 10,\n      y: 125,\n      labelWidth: 40,\n      inputWidth: 120\n    }, {\n      key: 'tooltext',\n      text: 'Tooltip',\n      x: 190,\n      y: 125,\n      labelWidth: 40,\n      inputWidth: 60\n    }, {\n      key: 'dashed',\n      text: 'Dashed',\n      x: 10,\n      y: 150,\n      type: 'checkbox',\n      inputPaddingTop: 3,\n      inputWidth: 15,\n      labelWidth: 40\n    }, {\n      key: 'dashgap',\n      text: 'Dash Gap',\n      x: 85,\n      y: 150,\n      labelWidth: 60,\n      inputWidth: 25\n    }, {\n      key: 'dashlen',\n      text: 'Dash Length',\n      x: 190,\n      y: 150,\n      labelWidth: 70,\n      inputWidth: 30\n    }];\n    manager.nodeUpdateUIDefinition = [{\n      key: 'id',\n      text: 'Id',\n      inputWidth: 60,\n      x: 10,\n      y: 15\n    }, {\n      key: DATASET,\n      text: DATASET,\n      inputType: 'select',\n      inputWidth: 110,\n      innerHTML: UNDEF,\n      x: 170,\n      y: 15\n    }, {\n      key: 'x',\n      text: 'Value',\n      x: 10,\n      y: 40,\n      inputWidth: 21\n    }, {\n      key: 'y',\n      text: COMMA,\n      x: 88,\n      y: 40,\n      inputWidth: 21,\n      labelWidth: 5\n    }, {\n      text: '(x, y)',\n      x: 125,\n      y: 40,\n      labelWidth: 33,\n      noInput: true\n    }, {\n      key: 'tooltip',\n      text: 'Tooltip',\n      inputWidth: 105,\n      x: 170,\n      y: 40\n    }, {\n      key: LABEL,\n      text: 'Label',\n      inputWidth: 92,\n      x: 10,\n      y: 65\n    }, {\n      key: 'labelalign',\n      text: 'Align',\n      labelWidth: 70,\n      inputWidth: 110,\n      inputType: 'select',\n      innerHTML: '<option></option><option value=\"top\">Top</option><option value=\"middle\">Middle</option>' +\n          '<option value=\"bottom\">Bottom</option>',\n      x: 145,\n      y: 63\n    }, {\n      key: 'color',\n      text: 'Color',\n      x: 10,\n      y: 90,\n      inputWidth: 60\n    }, {\n      key: 'colorOut',\n      innerHTML: '&nbsp;',\n      x: 85,\n      y: 90,\n      inputWidth: 15,\n      inputType: 'span'\n    }, {\n      key: 'alpha',\n      text: 'Alpha',\n      x: 170,\n      y: 90,\n      inputWidth: 20\n    }, {\n      key: 'draggable',\n      text: 'Allow Drag',\n      value: true,\n      inputWidth: 20,\n      x: 250,\n      y: 90,\n      labelWidth: 58,\n      inputPaddingTop: 3,\n      type: 'checkbox'\n    }, {\n      key: 'shape',\n      text: 'Shape',\n      inputType: 'select',\n      inputWidth: 97,\n      innerHTML: '<option value=\"rect\">Rectangle</option><option value=\"circ\">Circle</option><option ' +\n          'value=\"poly\">Polygon</option>',\n      x: 10,\n      y: 115\n    }, {\n      key: 'rectHeight',\n      text: 'Height',\n      x: 170,\n      y: 115,\n      inputWidth: 20\n    }, {\n      key: 'rectWidth',\n      text: 'Width',\n      x: 255,\n      y: 115,\n      inputWidth: 20\n    }, {\n      key: 'circPolyRadius',\n      text: 'Radius',\n      x: 170,\n      y: 115,\n      inputWidth: 20\n    }, {\n      key: 'polySides',\n      text: 'Sides',\n      x: 255,\n      y: 115,\n      inputWidth: 20\n    }, {\n      key: 'link',\n      text: 'Link',\n      x: 10,\n      y: 140,\n      inputWidth: 92\n    }, {\n      key: 'image',\n      text: 'Image',\n      type: 'checkbox',\n      inputPaddingTop: 4,\n      inputWidth: 20,\n      x: 10,\n      y: 170\n    }, {\n      key: 'imgUrl',\n      text: 'URL',\n      inputWidth: 105,\n      x: 170,\n      y: 170\n    }, {\n      key: 'imgWidth',\n      text: 'Width',\n      inputWidth: 20,\n      x: 10,\n      y: 195\n    }, {\n      key: 'imgHeight',\n      text: 'Height',\n      inputWidth: 20,\n      x: 82,\n      y: 195\n    }, {\n      key: 'imgAlign',\n      text: 'Align',\n      inputType: 'select',\n      inputWidth: 75,\n      innerHTML: '<option value=\"top\">Top</option><option value=\"middle\">Middle</option><option ' +\n          'value=\"bottom\">Bottom</option>',\n      x: 170,\n      y: 195\n    }];\n    manager.labelUpdateUIDefinition = [{\n      key: LABEL,\n      text: 'Label*',\n      x: 10,\n      y: 15,\n      inputWidth: 235\n    }, {\n      key: 'size',\n      text: 'Size',\n      x: 10,\n      y: 40\n    }, {\n      key: 'padding',\n      text: 'Padding',\n      x: 10,\n      y: 65\n    }, {\n      key: 'x',\n      text: 'Position',\n      x: 120,\n      y: 65,\n      labelWidth: 70,\n      inputWidth: 25\n    }, {\n      key: 'y',\n      text: COMMA,\n      x: 225,\n      y: 65,\n      labelWidth: 10,\n      inputWidth: 25\n    }, {\n      key: 'xy',\n      text: '(x, y)',\n      x: 260,\n      y: 65,\n      noInput: true\n    }, {\n      key: 'allowdrag',\n      text: 'Allow Drag',\n      x: 120,\n      y: 40,\n      inputType: 'checkbox',\n      inputPaddingTop: 3,\n      inputWidth: 15,\n      labelWidth: 70,\n      val: 1\n    }, {\n      key: 'color',\n      text: 'Color',\n      x: 10,\n      y: 90\n    }, {\n      key: 'alpha',\n      text: 'Alpha',\n      x: 145,\n      y: 90,\n      inputWidth: 30,\n      val: preDefStr.HUNDREDSTRING\n    }, {\n      key: 'bordercolor',\n      text: 'Border Color',\n      x: 10,\n      y: 125,\n      labelWidth: 100\n    }, {\n      key: 'bgcolor',\n      text: 'Background Color',\n      x: 10,\n      y: 150,\n      labelWidth: 100\n    }];\n  }\n\n  /**\n   * Function used to differentiate between update and resize\n   */\n  configure () {\n    this.setState('configured', true);\n  }\n\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'group';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragNodeGroup';\n  }\n  /**\n   * Funtion to create the UI box for adding new labels\n   * @param {Object} options Any predefined options to be added to the UI box\n   */\n  showLabelUpdateUI (options = {}) {\n    var manager = this,\n      paper = manager.getFromEnv('paper'),\n      // conf = manager.getFromEnv('chartConfig'),\n      ui = manager.getGraphicalElement('cacheLabelUpdateUI'),\n      inputStyle = { // eslint-disable-line good-practices/no-single-usage-variable\n        border: '1px solid #cccccc',\n        fontSize: 10 + PX,\n        lineHeight: 15 + PX,\n        fontFamily: (manager.getFromEnv('style').inCanvasStyle || {}).fontFamily,\n        padding: 2 + PX\n      },\n      labelStyle = { // eslint-disable-line good-practices/no-single-usage-variable\n        textAlign: 'right'\n      },\n      noUIfound,\n      fields = ui && ui.fields,\n      labels = ui && ui.labels,\n      field,\n      value,\n      dialog;\n\n    manager.getFromEnv('animationManager').setAnimationState('uichange');\n    if (!ui) {\n      noUIfound = true;\n    }\n    ui = manager.addGraphicalElement('cacheLabelUpdateUI', manager.createHtmlDialog(315, 205,\n      function () {\n        var uiFields = ui && ui.fields,\n          submitObj;\n        if (uiFields) {\n          // Prepare obbject for submission.\n          submitObj = {\n            text: uiFields.label.val(),\n            x: uiFields.x.val(),\n            y: uiFields.y.val(),\n            color: uiFields.color.val(),\n            alpha: uiFields.alpha.val(),\n            bgcolor: uiFields.bgcolor.val(),\n            bordercolor: uiFields.bordercolor.val(),\n            fontsize: uiFields.size.val(),\n            allowdrag: uiFields.allowdrag.val(),\n            padding: uiFields.padding.val()\n          };\n\n          if (submitObj.text) {\n            manager.addLabel && manager.addLabel(submitObj);\n            ui.hide();\n          } else {\n            ui.error.attr({\n              text: 'Label cannot be blank.'\n            });\n            fields.label.focus();\n          }\n        }\n      },\n      function () {\n        ui.error.attr({\n          text: BLANKSTRING\n        });\n        ui.hide();\n      }, UNDEF, ui));\n\n    if (noUIfound) {\n      dialog = ui.dialog;\n      labels = ui.labels = {};\n      fields = ui.fields = {};\n    }\n\n    fcEach(manager.labelUpdateUIDefinition, function (def) {\n      var key = def.key;\n\n      if (!labels[key]) {\n        labels[key] = paper.html(LABEL, {\n          x: def.x,\n          y: def.y,\n          width: def.labelWidth || 45,\n          text: def.text\n        }, labelStyle, dialog);\n      }\n\n      // No need to proceed of this label has no input box\n      // associated with itself.\n      if (def.noInput) {\n        return;\n      }\n\n      if (!(field = fields[key])) { // eslint-disable-line good-practices/no-single-usage-variable\n        field = fields[key] = paper.html(INPUT, {\n          y: -2 + (def.inputPaddingTop || 0),\n          x: (def.labelWidth && (def.labelWidth + 5)) || 50,\n          width: def.inputWidth || 50,\n          type: def.inputType || 'text',\n          name: key || BLANKSTRING\n        }, inputStyle, labels[key]).on('keyup', ui.handleKeyPress);\n      }\n\n      if (defined(value = getFirstValue(options[key], def.val))) { // eslint-disable-line good-practices/no-single-usage-variable\n        field.val(value);\n      }\n    });\n\n    if (!ui.error) {\n      ui.error = paper.html('span', {\n        color: 'ff0000',\n        x: 10,\n        y: 180\n      }, UNDEF, dialog);\n    }\n\n    // Focus on label textbox\n    ui.fields.label.focus();\n  }\n\n  /**\n   * Function to restore all the data of dragnode to its initial visual\n   */\n  restoreData () {\n    var manager = this,\n      // manager = chart.components['datasetGroup_' + chart.defaultDatasetType],\n      datasets = manager.getChildren('dataset'),\n      chart = manager.getFromEnv('chart'),\n      showlegend = pluckNumber(chart.config.showlegend, 0), // eslint-disable-line good-practices/no-single-usage-variable\n      connectors = manager.getChildren('connector'),\n      jsonData = chart.getFromEnv('dataSource'),\n      i,\n      dataset,\n      dataStore,\n      dataObj,\n      graphics,\n      labelObj,\n      len,\n      labelSet = manager.getChildren('labels'),\n      removeElements = function (datastore) {\n        var j,\n          ele;\n        for (j = 0; j < (datastore && datastore.length); j++) {\n          dataObj = datastore[j];\n          delete dataObj.removed;\n          if (dataObj.config.add) {\n            graphics = datastore[j].graphics;\n            for (ele in graphics) {\n              graphics[ele].remove();\n            }\n            datastore.splice(j, 1);\n            j--;\n          }\n        }\n      },\n      restoreDatasets = function (k, dataSets, json) {\n        dataset = dataSets[k];\n        dataStore = dataset.components.data; // eslint-disable-line good-practices/no-single-usage-variable\n        removeElements(dataStore);\n        dataset.drawn = false;\n        dataset.configure(json[k]);\n      };\n    for (i = 0, len = datasets && datasets.length; i < len; i++) {\n      restoreDatasets(i, datasets, jsonData.dataset);\n    }\n    for (i = 0, len = connectors && connectors.length; i < len; i++) {\n      restoreDatasets(i, connectors, jsonData.connectors);\n    }\n    if (labelSet && labelSet.length) {\n      labelObj = labelSet[0];\n      dataStore = labelObj.components.data;\n      dataStore && removeElements(dataStore);\n      labelObj.configure(jsonData.labels);\n    }\n\n    chart.fireChartInstanceEvent('dataRestored');\n    manager.asyncDraw();\n    showlegend && manager.getFromEnv('legend').asyncDraw();\n  }\n\n  /**\n   * Function to add a draggable-label via UI\n   * @param {Object} labelObj Conatins the information about the label that is to be added\n   */\n  addLabel (labelObj) {\n    var manager = this,\n      labelDS = manager.getChildren('labels'),\n      sourceEvent = LABEL_ADDED,\n      dataStore,\n      eventArgs,\n      chart = manager.getFromEnv('chart'),\n      len;\n    labelObj.add = true;\n\n    // Creating an instance of the label class if not already present\n    if (labelDS && labelDS[0]) {\n      labelDS = labelDS[0];\n    } else {\n      componentFactory(manager, DragNodeLabels, 'labels', 1, [{}]);\n      labelDS = manager.getChildren('labels')[0];\n    }\n    dataStore = labelDS.components.data || (labelDS.components.data = []);\n    len = dataStore.length;\n    labelDS._setConfigure(len, labelObj);\n    // }\n\n    eventArgs = {\n      text: labelObj.text,\n      x: labelObj.x,\n      y: labelObj.y,\n      allowdrag: labelObj.allowdrag,\n      sourceType: 'labelnode',\n      link: labelObj.link\n    };\n    chart.fireChartInstanceEvent('chartupdated', extend2({\n      sourceEvent: sourceEvent\n    }, eventArgs));\n    chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n    labelDS.asyncDraw();\n  }\n\n  /**\n   * Funtion to create the options for the dialog box used for adding new nodes\n   */\n  showNodeAddUI () {\n    var manager = this,\n      // chart = manager.chart,\n      datasets = manager.getChildren('dataset'),\n      datasetDropDownStr = BLANKSTRING, // eslint-disable-line good-practices/no-single-usage-variable\n      conf,\n      dataset,\n      type,\n      i;\n    for (i = 0; i < datasets.length; i++) {\n      dataset = datasets[i] || {};\n      conf = dataset.config;\n      type = dataset.getName();\n      if (type === 'dragNode') {\n        datasetDropDownStr += OPTION_VALUE + dataset.config.datasetIndex + CLOSE_TAG + (((conf.name !== BLANK && conf.name !==\n          UNDEF) && conf.name + COMMASTRING + BLANKSPACE) || BLANK) + dataset.config.datasetIndex + OPTION_STR;\n      }\n    }\n    manager.showNodeUpdateUI({\n      dataset: {\n        innerHTML: datasetDropDownStr\n      }\n    });\n  }\n\n  /**\n   * Funtion to create the options for the dialog box used for adding new connectors\n   */\n  showConnectorAddUI () {\n    var manager = this,\n      // chart = manager.chart,\n      nodes = manager.getNode(),\n      nodeStr = BLANKSTRING,\n      id,\n      i,\n      config,\n      node;\n    for (i in nodes) {\n      node = nodes[i];\n      config = node.config;\n      id = config.id;\n      nodeStr += OPTION_VALUE + id + CLOSE_TAG + id + OPTION_STR;\n    }\n    manager.showConnectorUpdateUI({\n      fromid: {\n        innerHTML: nodeStr\n      },\n      toid: {\n        innerHTML: nodeStr\n      }\n    });\n  }\n\n  /**\n   * Function to create the UI box for adding/updating the connectors\n   * @param {Object} config Has the information about the concerned connector\n   * @param {boolean} edit Flag for determining if a new connector has to be added or existing connector has to be\n   * updated\n   */\n  showConnectorUpdateUI (config, edit) {\n    var manager = this,\n      renderer = manager.getFromEnv('paper'),\n      uiName = `cacheConnectorUpdateUI${edit ? 'edit' : 'new'}`,\n      ui = manager.getGraphicalElement(uiName),\n      inputStyle = { // eslint-disable-line good-practices/no-single-usage-variable\n        border: '1px solid #cccccc',\n        fontSize: 10 + PX,\n        lineHeight: 15 + PX,\n        fontFamily: (manager.getFromEnv('style').inCanvasStyle || {}).fontFamily,\n        padding: 2 + PX\n      },\n      noUIfound,\n      labelStyle = { // eslint-disable-line good-practices/no-single-usage-variable\n        textAlign: 'right'\n      },\n      fields = ui && ui.fields,\n      labels = ui && ui.labels,\n      innerHTML,\n      field,\n      value,\n      onDelete = function () {\n        var uiFields = ui && ui.fields;\n\n        manager.deleteConnector({\n          from: uiFields.fromid.val(),\n          to: uiFields.toid.val(),\n          id: uiFields.id.val()\n        });\n        ui.hide();\n      },\n      dialog;\n\n    manager.getFromEnv('animationManager').setAnimationState('uichange');\n    if (!ui) {\n      noUIfound = true;\n    }\n\n    ui = manager.addGraphicalElement(uiName, manager.createHtmlDialog(\n      315, 215,\n      function () {\n        var uiFields = ui && ui.fields,\n          submitObj;\n        if (uiFields) {\n          submitObj = {\n            from: uiFields.fromid.val(),\n            to: uiFields.toid.val(),\n            id: uiFields.id.val(),\n            label: uiFields.label.val(),\n            color: uiFields.color.val(),\n            alpha: uiFields.alpha.val(),\n            link: uiFields.url.val(),\n            tooltext: uiFields.tooltext.val(),\n            strength: uiFields.strength.val(),\n            arrowatstart: uiFields.arratstart.val(),\n            arrowatend: uiFields.arratend.val(),\n            dashed: uiFields.dashed.val(),\n            dashlen: uiFields.dashlen.val(),\n            dashgap: uiFields.dashgap.val()\n          };\n\n          // Validate\n          if (submitObj.from) {\n            if (submitObj.to) {\n              if (submitObj.from !== submitObj.to) {\n                edit ? manager.editConnector(submitObj)\n                  : manager.addConnector(submitObj);\n                ui.enableFields();\n                ui.hide();\n                ui.clearFields();\n              } else {\n                ui.error.attr({\n                  text: 'Connector cannot start and end at the same node!'\n                });\n                fields.fromid.focus();\n              }\n            } else {\n              ui.error.attr({\n                text: 'Please select a valid connector end.'\n              });\n              fields.toid.focus();\n            }\n          } else {\n            ui.error.attr({\n              text: 'Please select a valid connector start.'\n            });\n            fields.fromid.focus();\n          }\n        }\n      },\n      // Cancel function\n      function () {\n        ui.error.attr({\n          text: BLANKSTRING\n        });\n        ui.enableFields();\n        ui.hide();\n      },\n      // Delete function\n      onDelete, ui));\n\n    if (noUIfound) {\n      dialog = ui.dialog;\n      labels = ui.labels = {};\n      fields = ui.fields = {};\n    }\n\n    ui.config = config;\n    if (!ui.enableFields) {\n      ui.enableFields = function () {\n        var key;\n        for (key in config) {\n          if (config[key] && config[key].disabled && fields[key]) {\n            fields[key].element.removeAttribute('disabled');\n          }\n        }\n      };\n    }\n    if (!ui.clearFields) {\n      ui.clearFields = function () {\n        var key,\n          uiFields = ui.fields;\n        for (key in uiFields) {\n          if (!uiFields[key].element.disabled) {\n            uiFields[key].element.value = BLANKSTRING;\n          }\n        }\n      };\n    }\n\n    fcEach(manager.connectorUpdateUIDefinition, function (def) {\n      var key = def.key,\n        attr = config[key] || {};\n\n      if (!labels[key]) {\n        labels[key] = renderer.html(LABEL, {\n          x: def.x,\n          y: def.y,\n          width: def.labelWidth || 45,\n          text: def.text\n        }, labelStyle, dialog);\n      }\n\n      // No need to proceed of this label has no input box\n      // associated with itself.\n      if (def.noInput) {\n        return;\n      }\n\n      if (!(field = fields[key])) {\n        field = fields[key] = renderer.html(def.inputType || INPUT, {\n          y: -2 + (def.inputPaddingTop || 0),\n          x: (def.labelWidth && (def.labelWidth + 5)) || 50,\n          width: def.inputWidth || 50,\n          name: key || BLANKSTRING\n        }, inputStyle);\n\n        if (def.inputType !== 'select') {\n          field.attr({\n            type: def.type || 'text'\n          }).on('keyup', ui.handleKeyPress);\n        }\n        field.add(labels[key]);\n      }\n\n      if ((innerHTML = pluck(attr.innerHTML, def.innerHTML))) { // eslint-disable-line good-practices/no-single-usage-variable\n        field.attr({\n          innerHTML: innerHTML\n        });\n      }\n      if ((value = pluck(attr.val, def.val)) !== UNDEF) { // eslint-disable-line good-practices/no-single-usage-variable\n        field.val(value);\n      }\n      if (attr.disabled) {\n        field.attr({\n          disabled: 'disabled'\n        });\n      } else {\n        field.element && (field.element.disabled = false);\n      }\n    });\n\n    // dash checking and ui modification\n    // call to set default fro the first time\n    ui.checkDash = function () {\n      var showHideFn = (fields.dashed && fields.dashed.val()) ? 'show' : 'hide';\n      labels.dashgap && labels.dashgap[showHideFn]();\n      fields.dashgap && fields.dashgap[showHideFn]();\n      labels.dashlen && labels.dashlen[showHideFn]();\n      fields.dashlen && fields.dashlen[showHideFn]();\n    };\n    ui.checkDash();\n    fields.dashed.on('fc-click', ui.checkDash);\n\n    if (!ui.error) {\n      ui.error = renderer.html('span', {\n        color: 'ff0000',\n        x: 10,\n        y: 170\n      }, UNDEF, dialog);\n    }\n\n    ui.removeItem[edit ? 'show' : 'hide']();\n  }\n\n  /**\n   * Function to create the UI box for adding/updating the nodes\n   * @return {Function} The actual function for updating/adding the nodes\n   */\n  showNodeUpdateUI () {\n    return _showNodeUpdateUI.apply(this, arguments);\n  }\n\n  /**\n   * Function for adding new nodes\n   * @param {Object} dataObj Contains information about the node that is to be added\n   */\n  addNode (dataObj) {\n    var manager = this,\n      datasets = manager.getChildren('dataset'),\n      len = datasets.length, // eslint-disable-line good-practices/no-single-usage-variable\n      dataset,\n      index,\n      idFound,\n      id,\n      i,\n      eventArgs,\n      sourceEvent = NODE_ADDED,\n      chart = manager.getFromEnv('chart'),\n      dataStore;\n\n    for (i = 0; i < len; i++) {\n      dataset = datasets[i] || {};\n      id = dataset.config.datasetIndex;\n      if (id !== UNDEF) {\n        id = id.toString();\n      }\n      if (id === dataObj.datasetId) {\n        idFound = true;\n        break;\n      }\n    }\n    if (dataset && idFound) {\n      dataStore = dataset.components.data;\n      dataObj.add = true;\n      // This is the index of the new data\n      index = dataStore.length;\n      eventArgs = {\n        index: index, // to be deprecated\n        dataIndex: index,\n        link: dataObj.link,\n        y: dataObj.y,\n        x: dataObj.x,\n        shape: dataObj.shape,\n        label: dataObj.name,\n        toolText: dataObj.tooltext,\n        id: dataObj.id,\n        datasetIndex: dataset.config.datasetIndex,\n        datasetName: dataset.config.seriesname,\n        sourceType: 'dataplot'\n      };\n\n      // configure the eventArgs based on the type of shape\n      makeShapeSpecificModifications(eventArgs, dataObj);\n\n      dataset._setConfigure(index, dataObj);\n      dataset.parsePlotAttributes(index);\n      dataset._drawNode(index);\n      dataset.setState('dirty', true);\n      // manager._redrawDragNode(eventArgs, sourceEvent);\n      /**\n       * In `DragNode` charts, data points are represented as nodes whose\n       * properties like location(x,y), shape, dimensions and color can be added dynamically to\n       * the chart. Chart can contain any number of datasets and an index number is assigned to\n       * each dataset based upon order of dataset creation. This event is raised when a node is\n       * added by clicking on the menu button located at the left side bottom of the chart by\n       * default but can the menu button location can be changed.\n       *\n       * This event is only applicable to DragNode chart.\n       *\n       * @event FusionCharts#nodeAdded\n       * @group chart-powercharts:dragnode\n       *\n       * @param {number} datasetIndex - Index of the dataset to which the newly added\n       * node belongs to.\n       * @param {string} datasetName - Name of the dataset to which the node was added. Name of\n       * the dataset can be defined by the attribute `seriesName` for `dataset` tag in the chart\n       * data.\n       * @param {number} dataIndex - Index of the newly added node.\n       *\n       * @param {number} height - Height of the shape represented by the newly added node.\n       * @param {string} id - ID of the newly added node which can be set using `id` attribute\n       * for `set` tag.\n       *\n       * @param {string} label - Text displayed inside the shape of the newly added node.\n       * @param {string} link - URL associated with the newly added node.\n       * @param {number} radius - Radius of the circumcirle for the shape of the\n       * newly added node.\n       * @param {string} shape - Shape of the newly added node.\n       * @param {number} sides - Depending on the shape of the node it is the\n       * number of sides of the polygon. If it is a circle it will have 0 sides.\n       * @param {string} toolText - Text that is displayed over the shape of the\n       * newly added node.\n       * @param {number} width - Width of the shape of the newly added node.\n       * @param {number} x - X Co-ordinate of the newly added node in reference with\n       * the canvas / axis.\n       * @param {number} y - Y Co-ordinate of the newly added node in reference with\n       * the canvas / axis.\n       */\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs));\n      chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n      dataset._setupKdTree();\n    }\n  }\n\n  /**\n   * Function for updating existing nodes\n   * @param {Object} updateObj Contains information about the node that is to be updated\n   */\n  updateNode (updateObj) {\n    var groupManager = this,\n      datasets = groupManager.getChildren('dataset'),\n      len = datasets.length, // eslint-disable-line good-practices/no-single-usage-variable\n      dataLen,\n      idFound,\n      dataset,\n      dataObj,\n      i,\n      dataStore,\n      eventArgs,\n      sourceEvent = NODE_UPDATED,\n      chart = groupManager.getFromEnv('chart'),\n      j;\n    updateObj.update = true;\n    for (i = 0; i < len; i++) {\n      dataset = datasets[i];\n      dataStore = dataset.components.data || [];\n      dataLen = dataStore.length;\n      for (j = 0; j < dataLen; j++) {\n        dataObj = dataStore[j];\n        if (dataObj.config.id === updateObj.id) {\n          idFound = true;\n          break;\n        }\n      }\n    }\n\n    if (dataset && idFound) {\n      eventArgs = {\n        index: j, // to be deprecated\n        dataIndex: j,\n        link: updateObj.link,\n        y: updateObj.y,\n        x: updateObj.x,\n        shape: updateObj.shape,\n        label: updateObj.name,\n        toolText: updateObj.tooltext,\n        id: updateObj.id,\n        datasetIndex: dataset.config.datasetIndex,\n        datasetName: dataset.config.seriesname,\n        sourceType: 'dataplot'\n      };\n\n      // configure the eventArgs based on the type of shape\n      makeShapeSpecificModifications(eventArgs, updateObj);\n\n      dataset._setConfigure(j, updateObj);\n      dataset.parsePlotAttributes(j);\n      dataset._drawNode(j);\n      dataset.setState('dirty', true);\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs));\n      chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n      dataset._setupKdTree();\n    }\n  }\n\n  /**\n   * Function for deleting a node\n   * @param {Stirng} id The id of the node that is to be deleted\n   */\n  deleteNode (id) {\n    var manager = this,\n      node = manager.getNode(id),\n      // node = nodes[id],\n      dataset,\n      dataStore,\n      startConnectors,\n      endConnectors,\n      i,\n      graphics,\n      connector,\n      dataObj,\n      prop,\n      len,\n      eventArgs,\n      config,\n      idFound,\n      sourceEvent = NODE_DELETED,\n      chart = manager.getFromEnv('chart');\n    if (node) {\n      dataset = node.dataset;\n      dataStore = dataset.components.data;\n      startConnectors = node.config.startConnectors;\n      endConnectors = node.config.endConnectors;\n      len = dataStore.length;\n      for (i = 0; i < len; i++) {\n        dataObj = dataStore[i];\n        if (dataObj.config.id === id) {\n          idFound = true;\n          break;\n        }\n      }\n\n      if (idFound === true) {\n        graphics = dataObj.graphics;\n        removeElems(graphics);\n        for (prop in startConnectors) {\n          connector = startConnectors[prop] || {};\n          graphics = connector.graphics;\n          removeElems(graphics);\n          delete connector.graphics;\n          connector.removed = true;\n        }\n        for (prop in endConnectors) {\n          connector = endConnectors[prop] || {};\n          graphics = connector.graphics;\n          removeElems(graphics);\n          delete connector.graphics;\n          connector.removed = true;\n        }\n        // delete nodes[id];\n        dataObj.removed = true;\n        config = dataObj.config || {};\n        eventArgs = {\n          index: i,\n          dataIndex: i,\n          link: config.link,\n          y: config.y,\n          x: config.x,\n          shape: config.shape,\n          label: config.displayValue,\n          toolText: config.toolText,\n          id: config.id,\n          datasetIndex: dataset.config.datasetIndex,\n          datasetName: dataset.config.seriesname,\n          sourceType: 'dataplot'\n        };\n\n        // configure the eventArgs based on the type of shape\n        makeShapeSpecificModifications(eventArgs, {\n          width: config.width,\n          height: config.height,\n          radius: config.radius,\n          numsides: config.numSides\n        });\n\n        chart.fireChartInstanceEvent('chartupdated', extend2({\n          sourceEvent: sourceEvent\n        }, eventArgs));\n        chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n        dataset._setupKdTree();\n      }\n    }\n  }\n\n  /**\n   * Function for adding new connectors\n   * @param {Object} connectorObj Contains information about the connector that is to be added\n   */\n  addConnector (connectorObj) {\n    var manager = this,\n      // groupManager = chart.components['datasetGroup_' + chart.defaultDatasetType],\n      connectors = manager.getChildren('connector')[0],\n      // connectors = connectorSets[0].connectors,\n      sourceEvent = CONNECTOR_ADDED,\n      eventArgs,\n      chart = manager.getFromEnv('chart');\n    connectorObj.add = true;\n    connectors._setConfigure(connectors.components.data.length, connectorObj);\n    eventArgs = {\n      arrowAtEnd: Boolean(connectorObj.arrowatend),\n      arrowAtStart: Boolean(connectorObj.arrowatstart),\n      fromNodeId: connectorObj.from,\n      id: connectorObj.id,\n      label: connectorObj.label,\n      link: connectorObj.connectorLink,\n      sourceType: 'connector',\n      toNodeId: connectorObj.to\n    };\n    chart.fireChartInstanceEvent('chartupdated', extend2({\n      sourceEvent: sourceEvent\n    }, eventArgs));\n    chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n    connectors.asyncDraw();\n  }\n\n  /**\n   * Function for updating existing connectors\n   * @param {Object} connectorObj Contains information about the connector that is to be updated\n   */\n  editConnector (connectorObj) {\n    var manager = this,\n      connectorSets = manager.getChildren('connector'),\n      i,\n      conLen,\n      data,\n      dataObj,\n      fromId,\n      toId,\n      j,\n      idFound,\n      connectors,\n      config,\n      eventArgs,\n      chart = manager.getFromEnv('chart'),\n      sourceEvent = CONNECTOR_UPDATED,\n      len = connectorSets.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i++) {\n      connectors = connectorSets[i];\n      data = (connectors && connectors.components.data) || [];\n      conLen = data.length;\n      for (j = 0; j < conLen; j++) {\n        dataObj = data[j];\n        config = dataObj.config;\n        fromId = config.from;\n        toId = config.to;\n        if (fromId === connectorObj.from && toId === connectorObj.to) {\n          idFound = true;\n          break;\n        }\n      }\n    }\n    connectorObj.update = true;\n    if (idFound) {\n      connectors._setConfigure(j, connectorObj);\n      eventArgs = {\n        arrowAtEnd: Boolean(connectorObj.arrowatend),\n        arrowAtStart: Boolean(connectorObj.arrowatstart),\n        fromNodeId: connectorObj.from,\n        id: connectorObj.id,\n        label: connectorObj.label,\n        link: connectorObj.link,\n        sourceType: 'connector',\n        toNodeId: connectorObj.to\n      };\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs));\n      chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n      connectors.asyncDraw();\n    }\n  }\n\n  /**\n   * Function for deleting a connector\n   * @param {Object} config Contains information about the connector that is to be deleted\n   */\n  deleteConnector (config) {\n    var manager = this,\n      connectorSets = manager.getChildren('connector'),\n      i,\n      j,\n      dataObj,\n      dataStore,\n      dataLen,\n      connFound = false, // eslint-disable-line good-practices/no-single-usage-variable\n      connectors,\n      eventArgs,\n      connConfig,\n      len = connectorSets.length, // eslint-disable-line good-practices/no-single-usage-variable\n      sourceEvent = CONNECTOR_DELETED,\n      chart = manager.getFromEnv('chart');\n\n    for (i = 0; i < len; i++) {\n      connectors = connectorSets[i];\n      dataStore = connectors.components.data;\n      dataLen = dataStore.length;\n      for (j = 0; j < dataLen; j++) {\n        dataObj = dataStore[j];\n        if (dataObj.config.from === config.from && dataObj.config.to === config.to) {\n          connFound = true;\n          break;\n        }\n      }\n    }\n    if (connFound) {\n      connConfig = dataObj.config || {};\n      eventArgs = {\n        arrowAtEnd: connConfig.arrowAtEnd,\n        arrowAtStart: connConfig.arrowAtStart,\n        fromNodeId: connConfig.from,\n        id: connConfig.id,\n        label: connConfig.label,\n        link: connConfig.connectorLink,\n        sourceType: 'connector',\n        toNodeId: connConfig.to\n      };\n      removeElems(dataObj.graphics);\n      delete dataObj.graphics;\n      // Mark data object as removed\n      dataObj.removed = true;\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs));\n      chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n    }\n  }\n\n  /**\n   * Generic function for creating a html UI box\n   * @param {number} dialogWidth The width of the dialog box\n   * @param {number} dialogHeight The height of the dialog box\n   * @param {Function} onsubmit Callback functions\n   * @param {Function} oncancel Callback functions\n   * @param {Function} onremove Callback functions\n   * @param {Object} cacheUI If the dialog box or its components are created then they are sent via this object so that\n   * they are not re-created.\n   * @return {HTMLElement} The final created html UI box\n   */\n  createHtmlDialog (dialogWidth, dialogHeight, onsubmit, oncancel, onremove, cacheUI) {\n    var manager = this,\n      // paper = manager.getFromEnv('paper'),\n      conf = manager.getFromEnv('chartConfig'),\n      inCanvasStyle = manager.getFromEnv('style').inCanvasStyle || {},\n      chartWidth = Number(conf.width),\n      chartHeight = Number(conf.height),\n      animationManager = manager.getFromEnv('animationManager'),\n      padding = 5,\n      uiok,\n      uicancel,\n      uiremove,\n      dialogAttrs,\n      okAttrs,\n      cancelAttrs,\n      removeAttrs,\n      buttonStyle = {\n        color: hashify(inCanvasStyle.color),\n        textAlign: 'center',\n        paddingTop: 1 + PX,\n        border: '1px solid #cccccc',\n        borderRadius: 4 + PX,\n        cursor: preDefStr.POINTER,\n        '_cursor': 'hand',\n        backgroundColor: HASHSTRING + COLOR_FFFFFF,\n        zIndex: 21,\n        '-webkit-border-radius': 4 + PX\n      },\n      ui = cacheUI,\n      attrObj;\n\n    attrObj = {\n      width: chartWidth,\n      height: chartHeight\n    };\n    if (!cacheUI) {\n      attrObj.fill = TRANSPARENT;\n      attrObj.type = DIV_STR;\n    }\n\n    ui = animationManager.setAnimation({\n      el: cacheUI || 'html',\n      attr: attrObj,\n      component: manager,\n      label: 'ui',\n      state: DATASETSTATE,\n      css: {\n        fontSize: 10 + PX,\n        lineHeight: 15 + PX,\n        fontFamily: inCanvasStyle.fontFamily,\n        display: 'block'\n      },\n      container: !cacheUI && manager.getFromEnv('chart-container')\n    });\n\n    attrObj = {\n      width: chartWidth,\n      height: chartHeight,\n      opacity: 0.3\n    };\n    if (!ui.veil) {\n      attrObj.fill = COLOR_000000;\n      attrObj.type = DIV_STR;\n    }\n\n    ui.veil = animationManager.setAnimation({\n      el: ui.veil || 'html',\n      attr: attrObj,\n      component: manager,\n      state: DATASETSTATE,\n      label: 'uiveil',\n      container: !ui.veil && ui\n    });\n\n    dialogAttrs = {\n      x: (chartWidth - dialogWidth) / 2,\n      y: (chartHeight - dialogHeight) / 2,\n      width: dialogWidth,\n      height: dialogHeight\n    };\n\n    if (!ui.dialog) {\n      dialogAttrs.fill = COLOR_EFEFEF;\n      dialogAttrs.strokeWidth = 1;\n      dialogAttrs.stroke = COLOR_000000;\n      dialogAttrs.type = DIV_STR;\n    }\n\n    ui.dialog = animationManager.setAnimation({\n      el: ui.dialog || 'html',\n      attr: dialogAttrs,\n      component: manager,\n      state: DATASETSTATE,\n      label: 'uidialog',\n      container: !ui.dialog && ui,\n      css: {\n        borderRadius: 5 + PX,\n        boxShadow: '1px 1px 3px #000000',\n        '-webkit-border-radius': 5 + PX,\n        '-webkit-box-shadow': '1px 1px 3px #000000',\n        filter: 'progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=\"#000000\")'\n      }\n    });\n\n    okAttrs = {\n      x: dialogWidth - 70 - padding,\n      y: dialogHeight - 23 - padding,\n      width: 65,\n      height: 17\n    };\n    if (!ui.ok) {\n      okAttrs.text = SUBMIT_STR;\n      okAttrs.tabIndex = 1;\n      okAttrs.type = DIV_STR;\n    }\n    uiok = animationManager.setAnimation({\n      el: ui.ok || 'html',\n      state: DATASETSTATE,\n      attr: okAttrs,\n      component: manager,\n      label: 'uiok',\n      css: buttonStyle,\n      container: !ui.ok && ui.dialog\n    });\n\n    !ui.ok && (ui.ok = uiok) && uiok.on('fc-mousedown', onsubmit);\n\n    cancelAttrs = {\n      x: dialogWidth - 140 - padding,\n      y: dialogHeight - 23 - padding,\n      width: 65,\n      height: 17\n    };\n\n    if (!ui.cancel) {\n      cancelAttrs.text = CANCEL_STR;\n      cancelAttrs.tabIndex = 2;\n      cancelAttrs.type = DIV_STR;\n    }\n\n    uicancel = animationManager.setAnimation({\n      el: ui.cancel || 'html',\n      state: DATASETSTATE,\n      attr: cancelAttrs,\n      component: manager,\n      label: 'uicancel',\n      css: buttonStyle,\n      container: !ui.cancel && ui.dialog\n    });\n\n    !ui.cancel && (ui.cancel = uicancel) && uicancel.on('fc-mousedown', oncancel);\n\n    removeAttrs = {\n      x: dialogWidth - 210 - padding,\n      y: dialogHeight - 23 - padding,\n      width: 65,\n      height: 17\n    };\n    if (!ui.removeItem) {\n      removeAttrs.text = DELETE_STR;\n      removeAttrs.tabIndex = 3;\n      removeAttrs.type = DIV_STR;\n    }\n\n    uiremove = animationManager.setAnimation({\n      el: ui.removeItem || 'html',\n      state: DATASETSTATE,\n      attr: removeAttrs,\n      component: manager,\n      label: 'uiremove',\n      css: buttonStyle,\n      container: !ui.removeItem && ui.dialog\n    });\n\n    !ui.removeItem && (ui.removeItem = uiremove) && uiremove.on('fc-mousedown', onremove);\n\n    if (!ui.handleKeyPress) {\n      // Add an event that would handle enter and esc on input\n      // elements\n      ui.handleKeyPress = function (e) {\n        if (e.keyCode === 13) {\n          // fire the mousedown handler when enter is pressed\n          ui.ok.element && onsubmit(e);\n        } else if (e.keyCode === 27) {\n          // fire the mousedown handler when escape is pressed\n          ui.cancel.element && oncancel(e);\n        }\n      };\n    }\n\n    // Keep initially hidden.\n    // ui.hide();\n    return ui;\n  }\n\n  /**\n   * Function to get a specific node after querying all the datasets\n   * @param {string} nodeId The node's id whose corresponding data object is required\n   * @return {Object} The specific node or all the nodes from all the datasets\n   */\n  getNode (nodeId) {\n    var node,\n      nodes = {},\n      datasets = this.getChildren('dataset');\n\n    for (let i = 0, len = datasets.length; i < len; i++) {\n      if (nodeId) {\n        if ((node = datasets[i].getNode(nodeId))) {\n          return node;\n        }\n      } else {\n        Object.assign(nodes, datasets[i].getNode());\n      }\n    }\n    return !nodeId && nodes;\n  }\n\n  /**\n   * Create child containers\n   */\n  createContainer () {\n    let manager = this,\n      animationManager = manager.getFromEnv('animationManager'),\n      keys = ['connectorGroup', 'defaultVcanvasGroup', 'vcanvasLabelGroup', 'cloneGroup'], // eslint-disable-line good-practices/no-single-usage-variable\n      parentChildContainers = manager.getLinkedParent().getChildContainer();\n\n    keys.forEach(function (key) {\n      !manager.getChildContainer(key) && manager.addChildContainer(key,\n        animationManager.setAnimation({\n          el: 'group',\n          attr: { name: 'manager-' + key },\n          component: manager,\n          container: parentChildContainers[key] || parentChildContainers.defaultVcanvasGroup\n        }));\n    });\n\n    !manager.getContainer('waitContainer') && manager.addContainer('waitContainer',\n      animationManager.setAnimation({\n        el: 'group',\n        attr: { name: 'manager-waitContainer' },\n        container: parentChildContainers.defaultVcanvasGroup,\n        component: manager\n      }));\n  }\n  /**\n   * Function to draw all the containers and repoition the html dialog box on chart-redraw\n   */\n  draw () {\n    var manager = this,\n      graphicalMap = {\n        cacheUpdateUI: [350, 215],\n        cacheLabelDeleteUI: [250, 100],\n        cacheLabelUpdateUI: [350, 205],\n        cacheConnectorUpdateUIedit: [315, 215],\n        cacheConnectorUpdateUInew: [315, 215]\n      },\n      graphics,\n      elem;\n    if (!manager.getState('configured')) {\n      DATASETSTATE = UPDATE_STR;\n      for (graphics in graphicalMap) {\n        if ((elem = manager.getGraphicalElement(graphics)) && elem.isVisible()) {\n          if (graphics === 'cacheUpdateUI') {\n            let fields = elem.fields,\n              ele = fields.image,\n              isChecked = ele.val();\n            graphicalMap[graphics][1] = isChecked ? 250 : 215;\n          }\n          manager.createHtmlDialog(graphicalMap[graphics][0], graphicalMap[graphics][1], UNDEF,\n            UNDEF, UNDEF, elem);\n        }\n      }\n      DATASETSTATE = APPEARING_STR;\n    }\n    manager.setState('configured', false);\n    manager.createContainer();\n  }\n\n  /**\n   * function to get data limits from its child datasets\n   * return minimun and maximum value among the datasets limit\n   * @return {Object} [min, max]\n   */\n  getDataLimits () {\n    var datasets = this.getChildren('dataset'),\n      i,\n      yMin = +Infinity,\n      yMax = -Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity,\n      conf;\n    for (i = 0; i < datasets.length; i++) {\n      conf = datasets[i].config;\n      yMax = Math.max(yMax, conf.yMax);\n      yMin = Math.min(yMin, conf.yMin);\n      xMax = Math.max(xMax, conf.xMax);\n      xMin = Math.min(xMin, conf.xMin);\n    }\n\n    return {\n      max: yMax,\n      min: yMin,\n      xMax: xMax,\n      xMin: xMin\n    };\n  }\n  /**\n   * it return the status of dataset visiblity\n   * @return {boolean} returns the visiblity status of dataset\n   */\n  isVisible () {\n    return !this.isNotVisible;\n  }\n\n  /**\n   * Over writing the childChanged function of the parent, basically a dummy function.\n   * @return {Object} instance of DragNodeGroup class\n   */\n  childChanged () {\n    return this;\n  }\n\n  /**\n   * Function to hide the circular ring element\n   */\n  hideWaitElem () {\n    this.getGraphicalElement('waitElement') && this.getGraphicalElement('waitElement').hide();\n  }\n\n  /**\n   * Function to clear the setTimeout of that is set when a long press is triggered on the nodes, connectors and labels\n   */\n  clearLongPress () {\n    var manager = this;\n    clearTimeout(manager.config._longpressactive);\n    delete manager.config._longpressactive;\n  }\n\n  /**\n   * Function to set the timer after which the UI for deleting labels will open\n   * @param {SVGElement} ele The element over which the click is done\n   * @param {Object} labelObj Conatins the information about the label that is clicked\n   */\n  triggerLabelUI (ele, labelObj) {\n    var manager = this;\n    manager.config._longpressactive = setTimeout(function () {\n      ele.data('fire_click_event', 0);\n      if (!ele.data('viewMode')) {\n        manager.showLabelDeleteUI(labelObj);\n      }\n    }, CLEAR_TIME_1000);\n  }\n\n  /**\n   * Function to manage the UI box for editing connectors\n   * @param {SVGElemet} ele The element on which the mousedown event is triggered\n   */\n  triggerConnectorUI (ele) {\n    var manager = this,\n      dataset = ele.data('dataset'),\n      config = ele.data(preDefStr.configStr),\n      options = config || {};\n    manager.config._longpressactive = setTimeout(function () {\n      // Whether to fire the click event ot not\n      ele.data('fire_click_event', 0);\n\n      if (!ele.data('viewMode')) {\n        // add a selection method for start and end\n        manager.showConnectorUpdateUI({\n          fromid: {\n            val: options.from,\n            innerHTML: OPTIONSTR + options.from + OPTIONCLOSESTR,\n            disabled: true\n          },\n          toid: {\n            val: options.to,\n            innerHTML: OPTIONSTR + options.to + OPTIONCLOSESTR,\n            disabled: true\n          },\n          datasetIndex: dataset.config.datasetIndex,\n          index: config.index,\n          arratstart: {\n            val: Boolean(pluckNumber(options.arrowatstart, 1))\n          },\n          arratend: {\n            val: Boolean(pluckNumber(options.arrowatend, 1))\n          },\n          dashed: {\n            val: pluckNumber(options.dashed)\n          },\n          dashgap: {\n            val: options.dashgap\n          },\n          dashlen: {\n            val: options.dashlen\n          },\n          label: {\n            val: options.label\n          },\n          tooltext: {\n            val: options.tooltext\n          },\n          id: {\n            val: dataset.config.id,\n            disabled: true\n          },\n          strength: {\n            val: options.conStrength\n          },\n          alpha: {\n            val: options.alpha\n          },\n          color: {\n            val: options.color.FCcolor.color\n          }\n        }, true);\n      }\n    }, CLEAR_TIME_1000);\n  }\n\n  /**\n   * Function to delete a label\n   * @param {number} i The index of the label that is to be deleted\n   */\n  deleteLabel (i) {\n    var manager = this,\n      labels = manager.getChildren('labels')[0],\n      index = pluckNumber(i, labels.config.lastTappedLabelIndex), // eslint-disable-line good-practices/no-single-usage-variable\n      labelObj = labels.components.data[index],\n      labelElement,\n      trackerElement,\n      chart = manager.getFromEnv('chart'),\n      sourceEvent = LABEL_DELETED,\n      eventArgs;\n\n    labelElement = labelObj.graphics.element;\n    trackerElement = labelObj.graphics.trackerElement;\n\n    if (labelElement) {\n      eventArgs = labelElement.data('eventArgs');\n      labelElement.remove();\n      trackerElement && trackerElement.remove();\n      delete labelObj.graphics;\n    }\n    chart.fireChartInstanceEvent('chartupdated', extend2({\n      sourceEvent: sourceEvent\n    }, eventArgs));\n    chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n    labelObj.removed = true;\n  }\n\n  /**\n   * Function to show thw UI for deleting an existing label\n   * @param {Object} label Conatains information about the label that is to be deleted\n   */\n  showLabelDeleteUI (label) {\n    var manager = this,\n      ui = manager.getGraphicalElement('cacheLabelDeleteUI');\n\n    // Store the index of the last tapped label.\n    manager.getChildren('labels')[0].config.lastTappedLabelIndex = label.config.index;\n    if (!ui) {\n      ui = manager.addGraphicalElement('cacheLabelDeleteUI',\n        manager.createHtmlDialog(250, 100, UNDEF, function () {\n          ui.hide();\n        },\n        function () {\n          manager.deleteLabel();\n          ui.hide();\n        }));\n\n      // create a location where to show the text message\n      ui.message = manager.getFromEnv('paper').html('span', {\n        x: 10,\n        y: 10,\n        width: 230,\n        height: 80\n      }).add(ui.dialog);\n      // since submit button is not needed, hide it and move the\n      // delete button to its place.\n      ui.ok.hide();\n      ui.removeItem.translate(175).show();\n    } else {\n      ui.show();\n    }\n\n    // Update the message with proper text.\n    ui.message.attr({\n      text: 'Would you really like to delete the label: \\\"' +\n        label.config.text + '\\\"?'\n    });\n  }\n\n  /**\n   * Function to draw the circular ring and trigger the timer for opening the html box for editing the node\n   * @param {Object} dataObj Conatins information about the node that is clicked\n   * @param {number} datasetIndex The index of the dataset to which the node belongs\n   */\n  drawWaitingRing (dataObj, datasetIndex) {\n    var manager = this,\n      config = dataObj.config,\n      conf = manager.getChildren('dataset')[datasetIndex].config,\n      waitElement = manager.getGraphicalElement('waitElement');\n\n    manager.clearLongPress();\n    waitElement = manager.getFromEnv('animationManager').setAnimation({\n      el: waitElement || 'ringpath',\n      attr: {\n        ringpath: [config._xPos, config._yPos, 8, 11, 0, 0],\n        fill: toRaphaelColor({\n          alpha: '100,100',\n          angle: 120,\n          color: 'CCCCCC,FFFFFF',\n          ratio: '30,50'\n        }),\n        'stroke-width': 0\n      },\n      container: manager.getContainer('waitContainer'),\n      component: manager\n    });\n    if (!manager.getGraphicalElement('waitElement')) {\n      manager.addGraphicalElement('waitElement', waitElement);\n    }\n    // layerX += 11;\n    // layerY -= 21;\n    waitElement.show()\n      .animate({\n        ringpath: [config._xPos, config._yPos, 8, 11, 0, 6.28]\n      }, CLEAR_TIME_1000);\n\n    manager.config._longpressactive = setTimeout(function () {\n      var seriesName = (conf.name !== BLANK && conf.name !== UNDEF)\n          ? conf.name + preDefStr.BLANKSPACE : BLANK,\n        seriesId = conf.id !== UNDEF ? (seriesName ? COMMASTRING : seriesName) + conf.id : BLANK;\n      waitElement && waitElement.hide();\n      // Whether to fire the click event ot not\n      // ele.data('fire_click_event', 0);\n      manager.showNodeUpdateUI({\n        x: {\n          value: config.x\n        },\n        y: {\n          value: config.y\n        },\n        draggable: {\n          value: getFirstValue(config.allowdrag, 1)\n        },\n        color: {\n          value: config.color\n        },\n        alpha: {\n          value: config.alpha\n        },\n        label: {\n          value: getFirstValue(config.label,\n            config.name)\n        },\n        tooltip: {\n          value: config.toolText\n        },\n        shape: {\n          value: shapesInfo[config.shape]\n        },\n        rectWidth: {\n          value: config.width\n        },\n        rectHeight: {\n          value: config.height\n        },\n        circPolyRadius: {\n          value: config.radius\n        },\n        polySides: {\n          value: config.numsides\n        },\n        image: {\n          value: config.imageNode\n        },\n        imgWidth: {\n          value: config.imageWidth\n        },\n        imgHeight: {\n          value: config.imageHeight\n        },\n        imgAlign: {\n          value: config.imageAlign\n        },\n        imgUrl: {\n          value: config.imageURL\n        },\n        id: {\n          value: config.id,\n          disabled: true\n        },\n        link: {\n          value: config.link\n        },\n        dataset: {\n          innerHTML: '<option value=\"' +\n              seriesId + '\">' + seriesName +\n              seriesId + '</option>',\n          disabled: true\n        },\n        datasetIndex: datasetIndex\n      }, true);\n    }, CLEAR_TIME_1000);\n  }\n\n  /**\n   * Function to draw connectors during dragging of the nodes\n   * @param {Object} connectorsObj Contains information about connector object that is to be re-drawn\n   */\n  drawNodeConnectors (connectorsObj) {\n    var i,\n      datasetIndex,\n      connectorSet,\n      connector,\n      fromObj,\n      toObj;\n    if (!connectorsObj) {\n      return;\n    }\n    for (i in connectorsObj) {\n      connector = connectorsObj[i];\n      if (connector) {\n        datasetIndex = connector.config.datasetIndex;\n        fromObj = connector.config.fromPointObj;\n        toObj = connector.config.toPointObj;\n        connectorSet = this.getChildren('connector')[datasetIndex];\n\n        if (connectorSet) {\n          connectorSet && connectorSet.parsePlotAttributes(connector, fromObj, toObj);\n          connectorSet && connectorSet.drawConnector(connector, fromObj, toObj);\n        }\n      }\n    }\n  }\n\n  /**\n   * Function to clear all the connectors if chart is updated.\n   */\n  _clearConnectors () {\n    var nodes = this.getNode(),\n      id,\n      startConnectors,\n      endConnectors,\n      graphics,\n      j,\n      node;\n    // Deleting all connectors from nodes object\n    for (id in nodes) {\n      node = nodes[id];\n      if (node) {\n        startConnectors = node.config.startConnectors || {};\n        endConnectors = node.config.endConnectors || {};\n        for (j in startConnectors) {\n          graphics = {\n            graphics: startConnectors[j].graphics || {}\n          };\n          componentDispose.call(graphics);\n        }\n        for (j in endConnectors) {\n          graphics = {\n            graphics: endConnectors[j].graphics || {}\n          };\n          componentDispose.call(graphics);\n        }\n      }\n    }\n    // // Clearing nodes object\n    // manager.nodes = {};\n  }\n\n  /**\n   * Function to get the jsonData from the datasets\n   * @return {Object} data from the dataset\n   */\n  getJSONData () {\n    var children = this.getChildren(),\n      nodeSets = children.dataset,\n      connectorSets = children.connector,\n      labelSets = children.labels,\n      jsonData = {},\n      i,\n      len,\n      dataset;\n    jsonData.dataset = [];\n    jsonData.connectors = [];\n    jsonData.labels = [];\n\n    for (i = 0, len = nodeSets && nodeSets.length; i < len; i++) {\n      dataset = nodeSets[i];\n      if (!jsonData.dataset[i]) {\n        jsonData.dataset[i] = extend2({}, dataset.JSONData);\n      }\n      jsonData.dataset[i].data = dataset.getJSONData();\n    }\n    for (i = 0, len = connectorSets && connectorSets.length; i < len; i++) {\n      dataset = connectorSets[i];\n      if (!jsonData.connectors[i]) {\n        jsonData.connectors[i] = extend2({}, dataset.JSONData);\n      }\n      jsonData.connectors[i].connector = dataset.getJSONData();\n    }\n    for (i = 0, len = labelSets && labelSets.length; i < len; i++) {\n      dataset = labelSets[i];\n      if (!jsonData.labels[i]) {\n        jsonData.labels[i] = {\n          label: []\n        };\n      }\n      jsonData.labels[i].label = dataset.getJSONData();\n    }\n    return jsonData;\n  }\n}\nexport default DragNodeGroup;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nlet removeSets = function (parent, set) {\n  let children = parent.getChildren(), // eslint-disable-line good-practices/no-single-usage-variable\n    childArr,\n    j,\n    i;\n  if (set && set.length) {\n    for (i = set.length - 1; i > -1; i--) {\n      childArr = children[set[i]];\n      for (j = childArr && childArr.length - 1; j > -1; childArr[j].remove(), j--);\n    }\n  }\n};\n/**\n * function to  create dataset, groupmaneger.\n * assign dataset to group manager.\n **/\nexport default function (chart) {\n  let jsonData = chart.getFromEnv('dataSource'),\n    datasetsJSON = jsonData.dataset,\n    connectorsJSON = jsonData.connectors,\n    labels = jsonData.labels,\n    canvas = chart.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n    vCanvas,\n    datasetParent = vCanvas = canvas.getChildren('vCanvas')[0],\n    setType = [],\n    groupManager;\n  labels && (labels = [labels]);\n  if (!datasetsJSON && !connectorsJSON && !labels) {\n    chart.setChartMessage();\n    return;\n  }\n  componentFactory(vCanvas, chart.getDSGroupdef(), 'datasetGroup_dragNode');\n  groupManager = vCanvas.getChildren('datasetGroup_dragNode');\n  groupManager && (datasetParent = groupManager[0]);\n  if (datasetsJSON && datasetsJSON.length) {\n    componentFactory(datasetParent, chart.getDSdef('dragnode'), 'dataset', datasetsJSON.length, datasetsJSON);\n  } else {\n    setType.push('dataset');\n  }\n  if (connectorsJSON && connectorsJSON.length) {\n    componentFactory(datasetParent, chart.getDSdef('connector'), 'connector', connectorsJSON.length, connectorsJSON);\n  } else {\n    setType.push('connector');\n  }\n  if (labels && labels.length) {\n    componentFactory(datasetParent, chart.getDSdef('dragableLabels'), 'labels', labels.length, labels);\n  } else {\n    setType.push('labels');\n  }\n  setType.length && removeSets(datasetParent, setType);\n}\n","import Candlestick from '@fusioncharts/powercharts/src/chart/candlestick';\nexport default Candlestick;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { pluck, preDefStr, POSITION_RIGHT, convertColor,\n  pluckNumber, getFirstValue, getMouseCoordinate, BLANKSTRING, POSITION_LEFT, POSITION_TOP, pluckFontSizeMaintainUnit } from '@fusioncharts/core/src/lib';\nimport MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport virtualCanvasFactory from '@fusioncharts/charts/src/factories/vcanvas';\nimport datasetFactory from '../../factories/candlestick-dataset';\nimport axisFactory from '../../factories/candlestick-axis';\nimport { CandleStickDataset, CandleStickBarDataset, CandleStickLineDataset } from '../../dataset/candlestick';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\n\nconst MOUSEOUT = 'fc-mouseout',\n  CANDLESTICK = 'candlestick',\n  padding = 6;\nlet altHGridColorStr = preDefStr.altHGridColorStr,\n  altHGridAlphaStr = preDefStr.altHGridAlphaStr,\n  math = Math,\n  mathMax = math.max,\n  mathRound = math.round,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  divLineAlpha3DStr = preDefStr.divLineAlpha3DStr,\n  defaultFontStr = preDefStr.defaultFontStr,\n  divLineAlphaStr = preDefStr.divLineAlphaStr,\n  altVGridColorStr = preDefStr.altVGridColorStr,\n  altVGridAlphaStr = preDefStr.altVGridAlphaStr,\n  colorStrings = preDefStr.colors,\n  COLOR_000000 = colorStrings.c000000,\n  chartPaletteStr = {\n    chart2D: {\n      bgColor: 'bgColor',\n      bgAlpha: 'bgAlpha',\n      bgAngle: 'bgAngle',\n      bgRatio: 'bgRatio',\n      canvasBgColor: 'canvasBgColor',\n      canvasBaseColor: 'canvasBaseColor',\n      divLineColor: 'divLineColor',\n      legendBgColor: 'legendBgColor',\n      legendBorderColor: 'legendBorderColor',\n      toolTipbgColor: 'toolTipbgColor',\n      toolTipBorderColor: 'toolTipBorderColor',\n      baseFontColor: 'baseFontColor',\n      anchorBgColor: 'anchorBgColor'\n    },\n    chart3D: {\n      bgColor: 'bgColor3D',\n      bgAlpha: 'bgAlpha3D',\n      bgAngle: 'bgAngle3D',\n      bgRatio: 'bgRatio3D',\n      canvasBgColor: 'canvasBgColor3D',\n      canvasBaseColor: 'canvasBaseColor3D',\n      divLineColor: 'divLineColor3D',\n      divLineAlpha: divLineAlpha3DStr,\n      legendBgColor: 'legendBgColor3D',\n      legendBorderColor: 'legendBorderColor3D',\n      toolTipbgColor: 'toolTipbgColor3D',\n      toolTipBorderColor: 'toolTipBorderColor3D',\n      baseFontColor: 'baseFontColor3D',\n      anchorBgColor: 'anchorBgColor3D'\n    }\n  },\n  isVolumeChartRequired = function (dataObj) {\n    if (!(dataObj && dataObj.dataset)) {\n      return 0;\n    }\n    let data = dataObj.dataset[0].data;\n    // eslint-disable-next-line good-practices/no-function-dependency\n    return !!((Array.isArray(data) && data.filter(v => v.volume)) || []).length;\n  };\n/**\n * class definition for candlestick chart API\n */\nclass CandleStick extends MSCartesian {\n  /**\n   * constructor function of this class\n   */\n  constructor () {\n    super();\n    this.isDual = true;\n    this.paletteIndex = 3;\n    this.hasInteractiveLegend = false;\n    this.numOfCanvas = 2;\n    this.registerFactory('vCanvas', virtualCanvasFactory, ['axis']);\n    this.registerFactory('axis', axisFactory, ['canvas']);\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  getName () {\n    return 'candlestick';\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  static getName () {\n    return 'candlestick';\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param {string} name   name of the dataset that is required\n   * @return {Object}       Required dataset class definition\n   */\n  getDSdef (name) {\n    return name === 'bar' ? CandleStickBarDataset : ((name === 'line') ? CandleStickLineDataset : CandleStickDataset);\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.hasLegend = true;\n    config.defaultDatasetType = CANDLESTICK;\n    config.drawanchors = 0;\n    config.enablemousetracking = true;\n    config.iscandlestick = true;\n    config.canvasborderthickness = 1;\n  }\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n  }\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    let iapi = this,\n      volumeHeightPercent,\n      config = iapi.config,\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      colorM = iapi.getFromEnv('color-manager');\n    config.showVolumeChart = pluckNumber(chartAttrs.showvolumechart, isVolumeChartRequired(dataObj), 1);\n    config.rollOverBandColor = convertColor(\n      pluck(chartAttrs.rolloverbandcolor, colorM.getColor(altHGridColorStr)),\n      pluck(chartAttrs.rolloverbandalpha, colorM.getColor(altHGridAlphaStr)));\n\n    config.crosslinecolor = pluck(chartAttrs.crosslinecolor,\n      chartAttrs.rolloverbandcolor, colorM.getColor(altHGridColorStr));\n    config.drawcrosslineontop = 0;\n    config.crosslinealpha = pluckNumber(chartAttrs.crosslinealpha,\n      chartAttrs.rolloverbandalpha, colorM.getColor(altHGridAlphaStr));\n    config.drawcrossline = 1;\n    config.skipClipping = true;\n    chartAttrs = iapi.getFromEnv('chart-attrib');\n    config.vplotbordercolor = getFirstValue(chartAttrs.vplotbordercolor, BLANKSTRING);\n    config.vplotborderalpha = getFirstValue(chartAttrs.vplotborderalpha, BLANKSTRING);\n    config.vplotborderthickness = pluckNumber(chartAttrs.vplotborderthickness, 1);\n    config.showplotborder = pluckNumber(chartAttrs.showvplotborder, 1);\n    volumeHeightPercent = pluckNumber(chartAttrs.volumeheightpercent, 40);\n    config.volumeHeightPercent = volumeHeightPercent < 20 ? 20 : (volumeHeightPercent > 80 ? 80\n      : volumeHeightPercent);\n    config.canvasBorderWidth = pluckNumber(chartAttrs.canvasborderthickness, 1);\n  }\n\n  /**\n   * calculate and allote space for various components\n   * every components are get notified with maximum space and then components return\n   * the available space.\n   */\n  _spaceManager () {\n    var spaceForActionBar,\n      actionBarSpace,\n      availableWidth,\n      availableHeight,\n      iapi = this,\n      config = iapi.config,\n      components = iapi.getChildren(),\n      legendPosition = config.legendPosition ? config.legendPosition.split('-') : [],\n      xAxis = components.xAxis && components.xAxis[0],\n      yAxis = components.yAxis && components.yAxis[0], // eslint-disable-line good-practices/no-single-usage-variable\n      yAxis2 = components.yAxis && components.yAxis[1], // eslint-disable-line good-practices/no-single-usage-variable\n      legend = iapi.getFromEnv('legend'), // eslint-disable-line good-practices/no-single-usage-variable\n      canvasHeight,\n      xAxisDimensions,\n      showVolumeChart = iapi.config.showVolumeChart,\n      volumeHeightPercent = showVolumeChart ? config.volumeHeightPercent : 0,\n      canvas = components.canvas[0],\n      canvasConfig = canvas.config,\n      volumeCanvas,\n      volumeCanvasConfig,\n      volumeCanvasY,\n      yAxisDim,\n      vYAxisDim,\n      width = config.width,\n      height = config.height,\n      actualYDim = {},\n      allottedSpace,\n      chartBorderWidth = config.chartBorderWidth,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      minCanvasHeight = config.minCanvasHeight,\n      minCanvasWidth = config.minCanvasWidth,\n      canvasMarginLeft = config.canvasMarginLeft,\n      canvasMarginRight = config.canvasMarginRight,\n      canvasMarginTop = config.canvasMarginTop,\n      canvasMarginBottom = config.canvasMarginBottom,\n      diff,\n      currentCanvasHeight,\n      currentCanvasWidth,\n      heightAdjust,\n      origCanvasTopMargin = config.origCanvasTopMargin,\n      origCanvasBottomMargin = config.origCanvasBottomMargin,\n      origCanvasLeftMargin = config.origCanvasLeftMargin,\n      origCanvasRightMargin = config.origCanvasRightMargin,\n      left,\n      right,\n      top,\n      bottom,\n      widthAdjust,\n      sum;\n      // Manage space\n\n    iapi._allocateSpace({\n      top: chartBorderWidth,\n      bottom: chartBorderWidth,\n      left: chartBorderWidth,\n      right: chartBorderWidth\n    });\n\n    // iapi._allocateSpace ( {\n    //     left : config.canvasMarginLeft,\n    //     right : config.canvasMarginRight\n    // });\n\n    spaceForActionBar = config.availableHeight * 0.225; // eslint-disable-line good-practices/no-single-usage-variable\n    actionBarSpace = (iapi._manageActionBarSpace && iapi._manageActionBarSpace(spaceForActionBar)) || {}; // eslint-disable-line good-practices/no-single-usage-variable\n    iapi._allocateSpace(actionBarSpace);\n\n    if (legendPosition[0] === POSITION_LEFT || legendPosition[0] === POSITION_RIGHT) {\n      allottedSpace = config.canvasWidth * 0.225;\n    } else {\n      allottedSpace = config.canvasHeight * 0.3;\n    }\n    ((config.hasLegend !== false) && xAxis) && config.showLegend &&\n              iapi._allocateSpace(legend._manageLegendPosition(allottedSpace));\n    availableWidth = config.canvasWidth * 0.7;\n    yAxisDim = yAxis.placeAxis(availableWidth);\n    vYAxisDim = showVolumeChart ? yAxis2.placeAxis(availableWidth) : {};\n    actualYDim.left = mathMax(yAxisDim.left, vYAxisDim.left || 0);\n    actualYDim.right = mathMax(yAxisDim.right, vYAxisDim.right || 0);\n    iapi._allocateSpace(actualYDim);\n\n    // Check for minimun canvas width for applying canvas left and right margin.\n    if (minCanvasWidth > width - canvasMarginLeft - canvasMarginRight) {\n      widthAdjust = true;\n      diff = config.canvasWidth - minCanvasWidth;\n      sum = canvasMarginLeft + canvasMarginRight;\n      canvasMarginLeft = config.canvasMarginLeft = diff * canvasMarginLeft / sum;\n      canvasMarginRight = config.canvasMarginRight = diff * canvasMarginRight / sum;\n    }\n\n    // Calculating the left and right canvas margin.\n    left = canvasMarginLeft > config.canvasLeft ? (canvasMarginLeft - config.canvasLeft) : 0;\n    right = canvasMarginRight > (width - config.canvasRight) ? (canvasMarginRight +\n              config.canvasRight - width) : 0;\n\n    iapi._allocateSpace({\n      left: left,\n      right: right\n    });\n\n    // Forcing canvas width to its minimum\n    if (widthAdjust) {\n      sum = origCanvasLeftMargin + origCanvasRightMargin;\n      currentCanvasWidth = config.canvasWidth;\n      if (currentCanvasWidth > minCanvasWidth) {\n        diff = currentCanvasWidth - minCanvasWidth;\n        left = diff * origCanvasLeftMargin / sum;\n        right = diff * origCanvasRightMargin / sum;\n      }\n      iapi._allocateSpace({\n        left: left,\n        right: right\n      });\n    }\n\n    availableHeight = config.canvasHeight * 0.225;\n\n    availableHeight = (legendPosition[0] === POSITION_TOP || legendPosition[0] === POSITION_BOTTOM) ? config.canvasHeight * 0.6\n      : config.canvasWidth * 0.6;\n    // a space manager that manages the space for the tools as well as the captions.\n    iapi._manageChartMenuBar(availableHeight);\n\n    iapi._allocateSpace({\n      top: config.canvasMarginTop,\n      bottom: config.canvasMarginBottom\n    });\n\n    availableHeight = config.canvasHeight * 0.3;\n    xAxisDimensions = xAxis.placeAxis(availableHeight);\n    xAxis && iapi._allocateSpace(xAxisDimensions);\n    xAxisDimensions.bottom += padding;\n    canvasConfig.intermediarySpace = xAxisDimensions.bottom;\n\n    // enforcing the 10 pixel deduction in canvas height to set a padding between canvas and legend\n    if (showVolumeChart) {\n      iapi._allocateSpace({ bottom: 10 });\n    }\n    iapi._allocateSpace({\n      top: canvasBorderWidth,\n      bottom: canvasBorderWidth * 2,\n      left: canvasBorderWidth,\n      right: canvasBorderWidth\n    });\n\n    // Check for minimum canvas height for applying top and bottom margin.\n    if (minCanvasHeight > height - canvasMarginTop - canvasMarginBottom) {\n      heightAdjust = true;\n      diff = config.canvasHeight - minCanvasHeight;\n      sum = canvasMarginTop + canvasMarginBottom;\n      canvasMarginTop = config.canvasMarginTop = diff * canvasMarginTop / sum;\n      canvasMarginBottom = config.canvasMarginBottom = diff * canvasMarginBottom / sum;\n    }\n\n    // Allocate space for canvas margin only if the margin is less than the margin entered by the user.\n    top = canvasMarginTop > config.canvasTop ? (canvasMarginTop - config.canvasTop) : 0;\n    bottom = canvasMarginBottom > (height - config.canvasBottom) ? (canvasMarginBottom +\n              config.canvasBottom - height) : 0;\n\n    iapi._allocateSpace({\n      top: top,\n      bottom: bottom\n    });\n\n    // Forcing canvas height to its minimum\n    if (heightAdjust) {\n      sum = origCanvasTopMargin + origCanvasBottomMargin;\n      currentCanvasHeight = config.canvasHeight;\n      if (currentCanvasHeight > minCanvasHeight) {\n        diff = currentCanvasHeight - minCanvasHeight;\n        top = diff * origCanvasTopMargin / sum;\n        bottom = diff * origCanvasBottomMargin / sum;\n      }\n      iapi._allocateSpace({\n        top: top,\n        bottom: bottom\n      });\n    }\n\n    canvasHeight = config.canvasHeight;\n    canvasConfig.canvasHeight = mathRound((100 - volumeHeightPercent) / 100 * canvasHeight);\n\n    canvasConfig.canvasTop = config.canvasTop;\n    canvasConfig.canvasLeft = config.canvasLeft;\n    canvasConfig.canvasBottom = canvasConfig.canvasTop + canvasConfig.canvasHeight;\n    canvasConfig.canvasWidth = config.canvasWidth;\n    canvasConfig.canvasRight = config.canvasRight;\n    canvasConfig.canvasY = config.canvasTop + canvasConfig.canvasHeight + canvasBorderWidth;\n    canvas.setDimension({\n      top: canvasConfig.canvasTop,\n      left: canvasConfig.canvasLeft,\n      width: canvasConfig.canvasWidth,\n      height: canvasConfig.canvasHeight\n    });\n    if (showVolumeChart) {\n      volumeCanvas = components.canvas[1];\n      volumeCanvasConfig = volumeCanvas.config;\n      volumeCanvasConfig.canvasHeight = ((volumeHeightPercent / 100) * canvasHeight);\n      volumeCanvasConfig.canvasTop = canvasConfig.canvasBottom + xAxisDimensions.bottom +\n                (canvasBorderWidth * 2);\n      volumeCanvasConfig.canvasLeft = config.canvasLeft;\n      volumeCanvasConfig.canvasBottom = volumeCanvasConfig.canvasTop + volumeCanvasConfig.canvasHeight +\n                (canvasBorderWidth * 2);\n      volumeCanvasConfig.canvasRight = config.canvasRight;\n      volumeCanvasConfig.canvasWidth = config.canvasWidth;\n      volumeCanvasY = config.canvasTop + canvasConfig.canvasHeight + xAxisDimensions.bottom +\n          (canvasBorderWidth * 2);\n      volumeCanvasConfig.canvasY = volumeCanvasY;\n      volumeCanvas.setDimension({\n        top: volumeCanvasConfig.canvasTop,\n        left: volumeCanvasConfig.canvasLeft,\n        width: volumeCanvasConfig.canvasWidth,\n        height: volumeCanvasConfig.canvasHeight\n      });\n    }\n  }\n  /**\n   * function to calculate post space management calculations\n   * calculations like axis dimenetion set, allocate space for xaxis labels,\n   * canvas padding etc.\n   */\n  _postSpaceManagement () {\n    super._postSpaceManagement();\n  }\n  /**\n    * Sets dimension of Axis components\n    */\n  setAxisDimention () {\n    let iapi = this,\n      components = iapi.getChildren(),\n      xAxis = components.xAxis && components.xAxis[0],\n      yAxis = components.yAxis && components.yAxis[0],\n      vyAxis = components.yAxis && components.yAxis[1],\n      canvasArr = components.canvas,\n      canvasConfig = canvasArr[0].config,\n      volumeCanvasConfig,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      axisLeft = canvasConfig.canvasLeft - canvasBorderWidth;\n    xAxis && xAxis.setAxisDimention({\n      x: canvasConfig.canvasLeft,\n      y: xAxis.config.isOpposit\n        ? canvasConfig.canvasTop - canvasBorderWidth\n        : canvasConfig.canvasY,\n      opposite: xAxis.config.isOpposit\n        ? canvasConfig.canvasY\n        : canvasConfig.canvasTop - canvasBorderWidth,\n      axisLength: canvasConfig.canvasWidth\n    });\n    yAxis && yAxis.setAxisDimention({\n      x: yAxis.config.isOpposit\n        ? canvasConfig.canvasRight + canvasBorderWidth : axisLeft,\n      y: canvasConfig.canvasTop,\n      opposite: yAxis.config.isOpposit\n        ? axisLeft : canvasConfig.canvasRight + canvasBorderWidth,\n      axisLength: canvasConfig.canvasHeight\n    });\n    xAxis.setCanvas(canvasConfig);\n    yAxis.setCanvas(canvasConfig);\n    if (iapi.config.showVolumeChart) {\n      volumeCanvasConfig = canvasArr[1].config;\n      vyAxis && vyAxis.setAxisDimention({\n        x: yAxis.config.isOpposit\n          ? volumeCanvasConfig.canvasRight + canvasBorderWidth : axisLeft,\n        y: volumeCanvasConfig.canvasTop,\n        opposite: yAxis.config.isOpposit\n          ? axisLeft : volumeCanvasConfig.canvasRight + canvasBorderWidth,\n        axisLength: volumeCanvasConfig.canvasHeight\n      });\n      vyAxis && vyAxis.setCanvas(volumeCanvasConfig);\n    }\n  }\n  /**\n   * function to parse JSON data for configurations of axis\n   * @return { Object } contains axis configuration\n   */\n  _feedAxesRawData () {\n    var iapi = this,\n      colorM = iapi.getFromEnv('color-manager'),\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      xAxisConf,\n      yAxisConf,\n      vYAxisConf,\n      yAxisConfigure = [],\n      xAxisConfigure = [],\n      is3D = iapi.config.is3D,\n      palleteString = is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    xAxisConf = {\n      isVertical: false,\n      isReverse: false,\n      isOpposit: isEqualString(chartAttrs.xaxisposition, 'top'),\n      drawTrendLabels: true,\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.xaxisnamepadding,\n      axisValuePadding: chartAttrs.labelpadding,\n      axisNameFont: chartAttrs.xaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.xaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.xaxisnamefontsize,\n      axisNameFontColor: chartAttrs.xaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.xaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.xaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.xaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.xaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.xaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.xaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.xaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.xaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.xaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.xaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.xaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.xaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.xaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.xaxisnameborderdashgap,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: pluck(chartAttrs.vdivlinecolor, chartAttrs.divlinecolor,\n        colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.vdivlinealpha, chartAttrs.divlinealpha,\n        is3D ? colorM.getColor(divLineAlpha3DStr) : colorM.getColor(divLineAlphaStr)),\n      divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed,\n        chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n      alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor(altVGridColorStr)),\n      alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor(altVGridAlphaStr)),\n      numDivLines: chartAttrs.numvdivlines,\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      labelBdrColor: chartAttrs.labelbordercolor,\n      labelBdrAlpha: chartAttrs.labelborderalpha,\n      labelLink: chartAttrs.labellink,\n      labelBgAlpha: chartAttrs.labelbgalpha,\n      labelBgColor: chartAttrs.labelbgcolor,\n      labelBdrThickness: chartAttrs.labelborderthickness,\n      labelBdrPadding: chartAttrs.labelborderpadding,\n      labelBdrRadius: chartAttrs.labelborderradius,\n      labelBdrDashed: chartAttrs.labelborderdashed,\n      labelBdrDashLen: chartAttrs.labelborderdashlen,\n      labelBdrDashGap: chartAttrs.labelborderdashgap,\n      axisName: chartAttrs.xaxisname,\n      axisMinValue: chartAttrs.xaxisminvalue,\n      axisMaxValue: chartAttrs.xaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptivexmin,\n      adjustDiv: chartAttrs.adjustvdiv,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: chartAttrs.showlabels,\n      rotateLabels: chartAttrs.rotatelabels,\n      slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      showLimits: chartAttrs.showvlimits,\n      showDivLineValues: pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues),\n      showZeroPlane: chartAttrs.showvzeroplane,\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      zeroPlaneThickness: chartAttrs.vzeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, COLOR_000000),\n      freezeLimit: true\n    };\n    xAxisConf.vtrendlines = dataObj.vtrendlines;\n    xAxisConfigure.push(xAxisConf);\n    yAxisConf = {\n      isVertical: true,\n      isReverse: true,\n      isOpposit: isEqualString(chartAttrs.yaxisposition, 'left'),\n      drawLabelsOpposit: 1,\n      axisNameAlignCanvas: 1,\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.yaxisnamepadding,\n      axisValuePadding: chartAttrs.yaxisvaluespadding,\n      axisNameFont: chartAttrs.pyaxisnamefont,\n      axisNameFontSize: chartAttrs.pyaxisnamefontsize,\n      axisNameFontSizeWithUnit: chartAttrs.pyaxisnamefontsize,\n      axisNameFontColor: chartAttrs.pyaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.pyaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.pyaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.pyaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.pyaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.pyaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.pyaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.pyaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.pyaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.pyaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.pyaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.pyaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.pyaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.pyaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.pyaxisnameborderdashgap,\n      axisNameWidth: chartAttrs.yaxisnamewidth,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n      axisName: chartAttrs.pyaxisname,\n      divLineColor: pluck(chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.divlinealpha, colorM.getColor(divLineAlphaStr)),\n      divLineThickness: pluckNumber(chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 1)),\n      divLineDashLen: pluckNumber(chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n      alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor(altHGridColorStr)),\n      alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor(altHGridAlphaStr)),\n      numDivLines: pluckNumber(chartAttrs.numpdivlines, 5),\n      axisMinValue: chartAttrs.pyaxisminvalue,\n      axisMaxValue: chartAttrs.pyaxismaxvalue,\n      setAdaptiveMin: pluckNumber(chartAttrs.setadaptiveymin, 1),\n      adjustDiv: chartAttrs.adjustdiv,\n      labelStep: chartAttrs.yaxisvaluesstep,\n      showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n      showLimits: pluckNumber(chartAttrs.showyaxislimits, chartAttrs.showlimits, iapi.showLimits),\n      showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n      showZeroPlane: chartAttrs.showzeroplane,\n      zeroPlaneColor: chartAttrs.zeroplanecolor,\n      zeroPlaneThickness: chartAttrs.zeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showyaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, COLOR_000000),\n      labelFont: chartAttrs.yaxisvaluefont,\n      labelFontSize: this.computeFontSize(chartAttrs.yaxisvaluefontsize),\n      labelFontSizeWithUnit: chartAttrs.yaxisvaluefontsize,\n      labelFontColor: chartAttrs.yaxisvaluefontcolor,\n      labelAlpha: chartAttrs.yaxisvaluealpha,\n      labelFontBold: chartAttrs.yaxisvaluefontbold,\n      labelFontItalic: chartAttrs.yaxisvaluefontitalic,\n      labelBdrColor: chartAttrs.yaxisvaluebordercolor,\n      labelBgAlpha: chartAttrs.yaxisvaluebgalpha,\n      labelBdrAlpha: chartAttrs.yaxisvalueborderalpha,\n      labelLink: chartAttrs.yaxisvaluelink,\n      labelBgColor: chartAttrs.yaxisvaluebgcolor,\n      labelBdrThickness: chartAttrs.yaxisvalueborderthickness,\n      labelBdrPadding: chartAttrs.yaxisvalueborderpadding,\n      labelBdrRadius: chartAttrs.yaxisvalueborderradius,\n      labelBdrDashed: chartAttrs.yaxisvalueborderdashed,\n      labelBdrDashLen: chartAttrs.yaxisvalueborderdashlen,\n      labelBdrDashGap: chartAttrs.yaxisvalueborderdashgap\n    };\n    yAxisConf.trendlines = dataObj.trendlines;\n    yAxisConfigure.push(yAxisConf);\n    if (iapi.config.showVolumeChart) {\n      vYAxisConf = {\n        isVertical: true,\n        isReverse: true,\n        isOpposit: isEqualString(chartAttrs.yaxisposition, 'left'),\n        axisIndex: 1,\n        drawLabelsOpposit: 1,\n        axisNameAlignCanvas: 1,\n        uniqueClassName: 1,\n        outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n        outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n        outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n        outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n          colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n        axisNamePadding: chartAttrs.yaxisnamepadding,\n        axisValuePadding: chartAttrs.yaxisvaluespadding,\n        axisNameFont: chartAttrs.vyaxisnamefont,\n        axisNameFontSize: chartAttrs.vyaxisnamefontsize,\n        axisNameFontSizeWithUnit: chartAttrs.vyaxisnamefontsize,\n        axisNameFontColor: chartAttrs.vyaxisnamefontcolor,\n        axisNameFontBold: chartAttrs.vyaxisnamefontbold,\n        axisNameFontItalic: chartAttrs.vyaxisnamefontitalic,\n        axisNameBgColor: chartAttrs.vyaxisnamebgcolor,\n        axisNameBorderColor: chartAttrs.vyaxisnamebordercolor,\n        axisNameAlpha: chartAttrs.vyaxisnamealpha,\n        axisNameFontAlpha: chartAttrs.vyaxisnamefontalpha,\n        axisNameBgAlpha: chartAttrs.vyaxisnamebgalpha,\n        axisNameBorderAlpha: chartAttrs.vyaxisnameborderalpha,\n        axisNameBorderPadding: chartAttrs.vyaxisnameborderpadding,\n        axisNameBorderRadius: chartAttrs.vyaxisnameborderradius,\n        axisNameBorderThickness: chartAttrs.vyaxisnameborderthickness,\n        axisNameBorderDashed: chartAttrs.vyaxisnameborderdashed,\n        axisNameBorderDashLen: chartAttrs.vyaxisnameborderdashlen,\n        axisNameBorderDashGap: chartAttrs.vyaxisnameborderdashgap,\n        axisNameWidth: chartAttrs.yaxisnamewidth,\n        useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n        rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n        axisName: chartAttrs.vyaxisname,\n        divLineColor: pluck(chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n        divLineAlpha: pluck(chartAttrs.divlinealpha, colorM.getColor(divLineAlphaStr)),\n        divLineThickness: pluckNumber(chartAttrs.divlinethickness, 1),\n        divLineIsDashed: Boolean(pluckNumber(chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 1)),\n        divLineDashLen: pluckNumber(chartAttrs.divlinedashlen, 4),\n        divLineDashGap: pluckNumber(chartAttrs.divlinedashgap, 2),\n        showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n        alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor(altHGridColorStr)),\n        alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor(altHGridAlphaStr)),\n        numDivLines: chartAttrs.numdivlines,\n        // @todo have to change the y axis max and min value afterwards when percentage axis is ready\n        axisMinValue: chartAttrs.vyaxisminvalue,\n        axisMaxValue: chartAttrs.vyaxismaxvalue,\n        setAdaptiveMin: chartAttrs.setadaptiveymin,\n        adjustDiv: chartAttrs.adjustdiv,\n        labelStep: chartAttrs.yaxisvaluesstep,\n        showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n        showLimits: pluckNumber(chartAttrs.showsecondarylimits, chartAttrs.showlimits),\n        showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n        showZeroPlane: chartAttrs.showzeroplane,\n        zeroPlaneColor: chartAttrs.zeroplanecolor,\n        zeroPlaneThickness: chartAttrs.zeroplanethickness,\n        zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n        showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n        trendlineColor: chartAttrs.trendlinecolor,\n        trendlineToolText: chartAttrs.trendlinetooltext,\n        trendlineThickness: chartAttrs.trendlinethickness,\n        trendlineAlpha: chartAttrs.trendlinealpha,\n        showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n        showAxisLine: pluckNumber(chartAttrs.showyaxisline, chartAttrs.showaxislines,\n          chartAttrs.drawAxisLines, 0),\n        axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n        axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n        axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, COLOR_000000),\n        labelFont: chartAttrs.yaxisvaluefont,\n        labelFontSize: this.computeFontSize(chartAttrs.yaxisvaluefontsize),\n        labelFontSizeWithUnit: chartAttrs.yaxisvaluefontsize,\n        labelFontColor: chartAttrs.yaxisvaluefontcolor,\n        labelAlpha: chartAttrs.yaxisvaluealpha,\n        labelFontBold: chartAttrs.yaxisvaluefontbold,\n        labelFontItalic: chartAttrs.yaxisvaluefontitalic,\n        labelBdrColor: chartAttrs.yaxisvaluebordercolor,\n        labelBgAlpha: chartAttrs.yaxisvaluebgalpha,\n        labelBdrAlpha: chartAttrs.yaxisvalueborderalpha,\n        labelLink: chartAttrs.yaxisvaluelink,\n        labelBgColor: chartAttrs.yaxisvaluebgcolor,\n        labelBdrThickness: chartAttrs.yaxisvalueborderthickness,\n        labelBdrPadding: chartAttrs.yaxisvalueborderpadding,\n        labelBdrRadius: chartAttrs.yaxisvalueborderradius,\n        labelBdrDashed: chartAttrs.yaxisvalueborderdashed,\n        labelBdrDashLen: chartAttrs.yaxisvalueborderdashlen,\n        labelBdrDashGap: chartAttrs.yaxisvalueborderdashgap\n      };\n      yAxisConfigure.push(vYAxisConf);\n    }\n    return { xAxisConfigure, yAxisConfigure };\n  }\n  mouseoutHandler (e, _lastDatasetIndex, _lastPointIndex) {\n    let chart = this,\n      datasets = chart.config.datasetOrder || chart.getDatasets(),\n      mouseTracker = chart.getChildren('mouseTracker')[0];\n    // check if the data plot exists. else hide all existing tooltips.\n    if (datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex].components.data[_lastPointIndex]) {\n      datasets[_lastDatasetIndex]._firePlotEvent(MOUSEOUT, _lastPointIndex, e);\n    } else {\n      chart.getFromEnv('toolTipController').hideAll();\n    }\n    // delete stored last ds details\n    delete mouseTracker._lastDatasetIndex;\n    delete mouseTracker._lastPointIndex;\n  }\n  /**\n   * This method delegates the handling of  mouse event to the chart's event handler\n   * @param  {Object} e The Event Object\n   * @param  {Object} data The Data Object\n   * @private\n   */\n  _mouseEvtHandler (e, data) {\n    var iapi = this,\n      mouseTracker = data.mouseTracker,\n      oriEvent = e.originalEvent,\n      canvasLen = iapi.getChildren('canvas').length, // eslint-disable-line good-practices/no-single-usage-variable\n      datasets,\n      coordinate = oriEvent && getMouseCoordinate(iapi.getFromEnv('chart-container'), oriEvent, iapi),\n      chartX = (coordinate && coordinate.chartX) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      chartY = (coordinate && coordinate.chartY) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      dataset,\n      hoveredInfo,\n      pointFound = false,\n      i,\n      j,\n      l,\n      derivedEvensInfo,\n      _lastDatasetIndex = mouseTracker._lastDatasetIndex,\n      _lastPointIndex = mouseTracker._lastPointIndex;\n    for (i = 0; i < canvasLen; i++) {\n      // todo make sure the datasets are as per their z-order\n      datasets = iapi.getDatasets();\n      j = datasets.length;\n      while (j-- && !pointFound) {\n        dataset = datasets[j];\n        if (dataset && dataset.getState('visible')) {\n          hoveredInfo = dataset._getHoveredPlot && dataset._getHoveredPlot(chartX, chartY);\n          if (hoveredInfo && hoveredInfo.hovered) {\n            pointFound = true;\n            hoveredInfo.datasetIndex = j;\n            derivedEvensInfo = mouseTracker.getMouseEvents(e, hoveredInfo.datasetIndex, hoveredInfo.pointIndex);\n          }\n        }\n      }\n    }\n\n    // todo instead of sending event names, create a event object of that type and send it\n\n    // fire out on last hovered plot\n    if ((!pointFound || (derivedEvensInfo && derivedEvensInfo.fireOut)) && typeof _lastDatasetIndex !== 'undefined') {\n      if (datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex]._firePlotEvent) {\n        // when mouseout is fired and there aren't any events that need to be fired over the current plot,\n        // call mouseouthamndler through settimeout.\n        if (derivedEvensInfo && !derivedEvensInfo.events.length) {\n          mouseTracker.mouseoutTimer = setTimeout(function () {\n            iapi.mouseoutHandler(e, _lastDatasetIndex, _lastPointIndex);\n          }, 20);\n        } else {\n          iapi.mouseoutHandler(e, _lastDatasetIndex, _lastPointIndex);\n          clearTimeout(mouseTracker.mouseoutTimer);\n        }\n      }\n\n      // todo scope to have sticky tracked tooltip\n    }\n    // fire remaining events\n    if (pointFound) {\n      l = derivedEvensInfo.events && derivedEvensInfo.events.length;\n      // Update only when events for current plot are present.\n      if (l) {\n      // store the index of the hovered DS and plot\n        mouseTracker._lastDatasetIndex = hoveredInfo.datasetIndex;\n        _lastPointIndex = mouseTracker._lastPointIndex = hoveredInfo.pointIndex;\n      }\n      for (j = 0; j < l; j += 1) {\n        dataset && dataset._firePlotEvent && dataset._firePlotEvent(derivedEvensInfo.events[j],\n          _lastPointIndex, e, hoveredInfo.datasetIndex);\n      }\n    }\n  }\n  /**\n   * allocate space for canvas\n   * @param  {Object} dimensions contains left, right, top, bottom co-ordinate (relative)\n   */\n  _allocateSpace (dimensions) {\n    var iapi = this,\n      canvas = iapi.getChildren('canvas'),\n      canvasConfig = canvas && canvas[0].config,\n      config = iapi.config,\n      canvasHeight = config.canvasHeight,\n      canvasWidth = config.canvasWidth,\n      canvasTop,\n      canvasLeft;\n\n    canvasLeft = config.canvasLeft += dimensions.left || 0; // eslint-disable-line good-practices/no-single-usage-variable\n    canvasTop = config.canvasTop += dimensions.top || 0; // eslint-disable-line good-practices/no-single-usage-variable\n    canvasWidth = config.canvasWidth =\n              mathMax(canvasWidth - ((dimensions.left || 0) + (dimensions.right || 0)), 0);\n    canvasHeight = config.canvasHeight =\n              mathMax(canvasHeight - ((dimensions.top || 0) + (dimensions.bottom || 0)), 0);\n\n    config.availableHeight = mathMax((config.availableHeight - ((dimensions.top || 0) + (dimensions.bottom || 0))),\n      0);\n    config.availableWidth = mathMax((config.availableWidth - ((dimensions.left || 0) + (dimensions.right || 0))), 0);\n    config.canvasRight = canvasLeft + canvasWidth;\n    config.canvasBottom = canvasTop + canvasHeight;\n\n    if (canvasConfig) {\n      canvasConfig.canvasPaddingLeft = mathMax(canvasConfig.canvasPaddingLeft, dimensions.paddingLeft || 0);\n      canvasConfig.canvasPaddingRight = mathMax(canvasConfig.canvasPaddingRight, dimensions.paddingRight || 0);\n      canvasConfig.canvasPaddingTop = mathMax(canvasConfig.canvasPaddingTop, dimensions.paddingTop || 0);\n      canvasConfig.canvasPaddingBottom = mathMax(canvasConfig.canvasPaddingBottom, dimensions.paddingBottom || 0);\n    }\n  }\n\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let datasetsJSON = this.getFromEnv('dataSource').dataset,\n      data = datasetsJSON && datasetsJSON[0] && datasetsJSON[0].data;\n    if (!datasetsJSON || !data || !Array.isArray(data)) {\n      return true;\n    }\n  }\n}\nexport default CandleStick;\n","import { pluck, parseUnsafeString, datasetFactory } from '@fusioncharts/core/src/lib';\nimport { TrendSet, VolumeDataset } from '../dataset/candlestick';\n/**\n * splice a given array with the given value\n * @param  {Array} array   on which splice opration will be executed\n * @param  {generic} value criteria to splice the array\n */\nlet arraySpliceByValue = (array, value) => {\n    let indexOf = array.indexOf(value);\n    if (indexOf !== -1) {\n      array.splice(indexOf, 1);\n    }\n  },\n  /**\n   * function to remove component if name is matched with value in set\n   * @param  {Object} component from where it would iterate\n   * @param  {Array} set        criteria; if matched then remove\n   */\n  removeComponents = (component, set) => {\n    let i;\n    component && component.iterateComponents((child) => {\n      for (i = 0; i < set.length; i++) {\n        if (child.getName() === set[i]) {\n          child.remove();\n        }\n      }\n    });\n  };\n/**\n * function to  create dataset\n * sort data wrt. x value\n * assign dataset to its parents\n **/\nexport default function (chart) {\n  let jsonData = chart.getFromEnv('dataSource'),\n    datasetsJSON = jsonData.dataset,\n    trendSet = jsonData.trendset,\n    showVolumeChart = chart.getFromEnv('chartConfig').showVolumeChart, // eslint-disable-line good-practices/no-single-usage-variable\n    dsType = pluck((parseUnsafeString(chart.getFromEnv('chart-attrib').plotpriceas)).toLowerCase(), 'candlestick'),\n    canvas = chart.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n    datasetParent = canvas.getChildren('vCanvas')[0],\n    volumeCanvas,\n    volumeDatasetParent,\n    sortedDatasetsJSON,\n    set = ['candlestick', 'candlestickbar', 'candlestickline', 'trendset'];\n\n  if (!datasetsJSON) {\n    chart.setChartMessage();\n    return;\n  }\n  sortedDatasetsJSON = datasetsJSON.slice(0);\n  sortedDatasetsJSON[0] && sortedDatasetsJSON[0].data &&\n    sortedDatasetsJSON[0].data.sort(function (a, b) { // eslint-disable-line good-practices/no-function-dependency\n      return a.x - b.x;\n    });\n  datasetFactory(datasetParent, chart.getDSdef(dsType), 'dataset_' + dsType, datasetsJSON.length, sortedDatasetsJSON);\n  if (dsType === 'bar') {\n    arraySpliceByValue(set, 'candlestickbar');\n  } else if (dsType === 'line') {\n    arraySpliceByValue(set, 'candlestickline');\n  } else {\n    arraySpliceByValue(set, 'candlestick');\n  }\n  if (showVolumeChart) {\n    volumeCanvas = chart.getChildren('canvas')[1];\n    volumeDatasetParent = volumeCanvas.getChildren('vCanvas')[0];\n    datasetFactory(volumeDatasetParent, VolumeDataset, 'dataset_volume', datasetsJSON.length, datasetsJSON);\n  }\n\n  if (trendSet) {\n    datasetFactory(datasetParent, TrendSet, 'dataset_trendset', trendSet.length, trendSet);\n    arraySpliceByValue(set, 'trendset');\n  }\n  removeComponents(datasetParent, set);\n}\n","import CandleStickDataset from './candlestick';\nimport CandleStickBarDataset from './candlestickbar';\nimport CandleStickLineDataset from './candlestickline';\nimport VolumeDataset from './volume';\nimport TrendSet from './trendset';\n\nexport { CandleStickDataset, CandleStickBarDataset,\n  CandleStickLineDataset, VolumeDataset, TrendSet };\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { pluck, pluckNumber, getValidValue, getDashStyle, getFirstColor,\n  parseUnsafeString, preDefStr, parseTooltext } from '@fusioncharts/core/src/lib';\n\nimport ErrorBar2DDataset from '../../dataset/errorbar2d';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport candlestickAnimation from './candlestick.animation';\nimport { _removePlots } from '@fusioncharts/charts/src/dataset/column';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_B90000 = colorStrings.B90000,\n  COLOR_FFFFFF = colorStrings.FFFFFF,\n  BLANKSTRING = '',\n  UNDEF,\n  DASH_DEF = 'none',\n  POINTER = 'pointer',\n  DEFAULT_CURSOR = 'default',\n  SHOWSHADOW = 'showShadow',\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  LINE = 'line',\n  BOLDSTARTTAG = '<b>',\n  BOLDENDTAG = '</b>',\n  BLANKSPACE = ' ',\n  BREAKSTRING = '<br />',\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType    name of the event\n   * @param {number} plotIndex    index of the plot where this event has been occured\n   * @param {Event}  e            reference of the original mouse event\n   */\n  _firePlotEvent = function (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      dataStore = dataset.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      data = dataStore[plotIndex],\n      toolText,\n      currentToolTip = dataset.config.currentToolTip,\n      setElement = data.graphics.element,\n      originalEvent = e.originalEvent,\n      style = chart.getFromEnv('paper').canvas.style,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      config,\n      setLink;\n    if (setElement) {\n      config = data.config;\n      toolText = config.toolText;\n      setLink = config.setLink;\n      switch (eventType) {\n        case 'fc-mouseover' :\n          if (toolText) {\n            if (currentToolTip) {\n              toolTipController.draw(originalEvent, toolText, currentToolTip);\n            } else {\n              currentToolTip = dataset.config.currentToolTip =\n                toolTipController.draw(originalEvent, toolText);\n            }\n          }\n          chart.plotEventHandler(setElement, e, ROLLOVER);\n          setLink && (style.cursor = POINTER);\n          break;\n        case 'fc-mouseout' :\n          toolTipController.hide(currentToolTip);\n          chart.plotEventHandler(setElement, e, ROLLOUT);\n          setLink && (style.cursor = DEFAULT_CURSOR);\n          break;\n        case 'fc-click' :\n          chart.plotEventHandler(setElement, e);\n          break;\n        case 'fc-mousemove' :\n          if (toolText) {\n            if (currentToolTip) {\n              toolTipController.draw(originalEvent, toolText, currentToolTip);\n            } else {\n              currentToolTip = dataset.config.currentToolTip = toolTipController.draw(originalEvent, toolText);\n            }\n          }\n      }\n    }\n  },\n  /**\n   * fetches data indices wrt. the x pos value\n   * @param {number} x  x pos value\n   * @return {Array}    contains indices\n   */\n  getPlotIndices = function (x) {\n    var dataset = this,\n      i,\n      minX = Math.floor(x), // eslint-disable-line good-practices/no-single-usage-variable\n      maxX = Math.ceil(x), // eslint-disable-line good-practices/no-single-usage-variable\n      data,\n      returnIndices = [],\n      sortedData = dataset.config.JSONData && dataset.config.JSONData.data;\n    for (i = sortedData.length; i--;) {\n      data = sortedData[i];\n      if (data.x >= minX && data.x <= maxX) {\n        returnIndices.push(i);\n      }\n    }\n    return returnIndices;\n  },\n  __parseToolText = function (i) {\n    var dataset = this,\n      conf = dataset.config,\n      data = dataset.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      isLine = conf.plotType === LINE ? 1 : 0,\n      toolText,\n      BLANK = BLANKSTRING,\n      setData = conf.JSONData.data[i],\n      config = data[i].config,\n      label = dataset.getFromEnv('xAxis').getLabel(config.x).label, // eslint-disable-line good-practices/no-single-usage-variable\n      open = config.open,\n      close = config.close,\n      yAxis = dataset.getFromEnv('yAxis'),\n      high = config.high,\n      low = config.low,\n      volume = config.volume,\n      volumeToolText = volume !== UNDEF ? setData.volumetooltext : UNDEF; // eslint-disable-line good-practices/no-single-usage-variable\n\n    // create the tooltext\n    if (!conf.showTooltip) {\n      toolText = BLANK;\n    } else {\n      toolText = getValidValue(parseUnsafeString(pluck(volumeToolText,\n        setData.tooltext, conf.volumeToolText, conf.toolText), false));\n\n      if (toolText !== UNDEF) {\n        toolText = parseTooltext(toolText, [3, 5, 6, 10, 54, 55, 56, 57, 58, 59, 60, 61, 81, 82], {\n          label: label,\n          yaxisName: parseUnsafeString(chartAttr.yaxisname),\n          xaxisName: parseUnsafeString(chartAttr.xaxisname),\n          openValue: setData.open,\n          openDataValue: yAxis.dataLabels(open),\n          closeValue: setData.close,\n          closeDataValue: yAxis.dataLabels(close),\n          highValue: setData.high,\n          highDataValue: yAxis.dataLabels(high),\n          lowValue: setData.low,\n          lowDataValue: yAxis.dataLabels(low),\n          volumeValue: setData.volume,\n          volumeDataValue: yAxis.dataLabels(volume)\n        }, setData, chartAttr);\n      } else {\n        toolText = (open !== null && !isLine) ? BOLDSTARTTAG + 'Open:' + BOLDENDTAG + BLANKSPACE +\n          yAxis.dataLabels(open) + BREAKSTRING : BLANK;\n        toolText += close !== null ? BOLDSTARTTAG + 'Close:' + BOLDENDTAG + BLANKSPACE +\n          yAxis.dataLabels(close) + BREAKSTRING : BLANK;\n        toolText += (high !== null && !isLine) ? BOLDSTARTTAG + 'High:' + BOLDENDTAG + BLANKSPACE +\n          yAxis.dataLabels(high) + BREAKSTRING : BLANK;\n        toolText += (low !== null && !isLine) ? BOLDSTARTTAG + 'Low:' + BOLDENDTAG + BLANKSPACE +\n          yAxis.dataLabels(low) + BREAKSTRING : BLANK;\n        toolText += volume !== null ? BOLDSTARTTAG + 'Volume:' + BOLDENDTAG + BLANKSPACE +\n          yAxis.dataLabels(volume) : BLANK;\n      }\n    }\n    return toolText;\n  };\n\naddDep({\n  name: 'candlestickAnimation',\n  type: 'animationRule',\n  extension: candlestickAnimation\n});\n/**\n* Class def for bull stick chart API\n* This dataset is reponsible for drawing stick depending on high and open value\n*/\nclass CandleStickDataset extends ErrorBar2DDataset {\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.components && this.components.data && this.components.data.length) {\n      return;\n    }\n    let comps = this.components,\n      prevData = comps && comps.data,\n      prevDataLength = prevData && prevData.length, // eslint-disable-line good-practices/no-single-usage-variable\n      data = datasetJSON.data,\n      currDataLength = (Array.isArray(data) && data.filter(v => (v.high || v.open || v.close || v.low)).length) || 0, // eslint-disable-line good-practices/no-function-dependency\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots\n    // is less than the existing ones.\n    if (dataDiff > 0) {\n      this.removeData(currDataLength, dataDiff, false);\n    }\n  }\n  /**\n   * This Api is used to remove all the data objects which are not required anymore.\n   * candleStick should use the removePlot of column dataset\n   * @memberof CandleStickDataset\n   */\n  removePlots () {\n    var dataset = this,\n      components = dataset.components,\n      removeDataArr = components && components.removeDataArr; // eslint-disable-line good-practices/no-single-usage-variable\n\n    _removePlots(removeDataArr, dataset.__removeElem);\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n\n    var dataset = this,\n      conf = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      JSONData = dataset.config.JSONData,\n      dataArr = JSONData.data || [],\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      dataLength = dataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      colorM = dataset.getFromEnv('color-manager'),\n      setColor,\n      setBorderColor,\n      setAlpha,\n      // Candle stick properties.\n      // Bear fill and border color - (Close lower than open)\n      bearBorderColor = conf.bearBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                  getFirstColor(pluck(chartAttr.bearbordercolor, COLOR_B90000)),\n      bearFillColor = conf.bearFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                  getFirstColor(pluck(chartAttr.bearfillcolor, COLOR_B90000)),\n      // Bull fill and border color - Close higher than open\n      bullBorderColor = conf.bullBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                  getFirstColor(pluck(chartAttr.bullbordercolor,\n                    colorM.getColor('canvasBorderColor'))),\n      bullFillColor = conf.bullFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n              getFirstColor(pluck(chartAttr.bullfillcolor,\n                COLOR_FFFFFF)),\n      // Line Properties - Serves as line for bar & line and border for candle stick\n      plotLineThickness = conf.linethickness = conf.plotBorderThickness =\n                  pluckNumber(chartAttr.plotlinethickness, 1),\n      plotLineDashLen = conf.plotLineDashLen = pluckNumber(chartAttr.plotlinedashlen, 5), // eslint-disable-line good-practices/no-single-usage-variable\n      plotLineDashGap = conf.plotLineDashGap = pluckNumber(chartAttr.plotlinedashgap, 4), // eslint-disable-line good-practices/no-single-usage-variable\n\n      pointShadow,\n      index,\n      dataObj,\n      open,\n      close,\n      high,\n      low,\n      volume,\n      minValue,\n      maxValue,\n      x,\n      closeVal,\n      borderColor,\n      yVal,\n      dataStore,\n      setData,\n      config,\n      isCandleStick = false, // eslint-disable-line good-practices/no-single-usage-variable\n      plotSpacePercent,\n      yMax = -Infinity,\n      yMin = +Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity,\n      userMaxColWidth;\n\n    dataset.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n\n    dataset._conatinerHidden = !!dataset.getState('visible');\n\n    conf.minAbsNonZeroValue = Infinity;\n    conf.minAbsNonZeroData = {};\n\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    conf.parentYAxis = 0;\n    conf.toolText = getValidValue(parseUnsafeString(pluck(JSONData.tooltext, chartAttr.plottooltext), false));\n    // Dataset seriesname\n    conf.name = getValidValue(JSONData.seriesname);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.showShadow = pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.showErrorValue = true;\n    conf.errorBarWidthPercent = 0;\n    isCandleStick = true; // eslint-disable-line good-practices/no-single-usage-variable\n    userMaxColWidth = pluck(chartAttr.maxcolwidth); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.maxColWidth = Math.abs(pluckNumber(\n      userMaxColWidth, 50)) || 1;\n    plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.plotSpacePercent = conf.groupPadding = plotSpacePercent / 200;\n    dataStore = dataset.components.data = dataset.components.data || (dataset.components.data = []);\n    conf.valuePadding = pluckNumber(JSONData.valuepadding, chartAttr.valuepadding, 2);\n    conf.plotBorderThickness = plotLineThickness;\n    // Iterate through all level data\n    for (index = 0; index < dataLength; index += 1) {\n      // Individual data obj\n      // for further manipulation\n      setData = dataArr[index];\n      dataObj = dataStore[index];\n      if (!dataObj) {\n        dataObj = dataStore[index] = {};\n      }\n      !dataObj.config && (dataObj.config = {});\n      !dataObj.graphics && (dataObj.graphics = {});\n      config = dataObj.config;\n      if (setData && !setData.vline) {\n        config.setLink = pluck(setData.link);\n        open = config.open = numberFormatter.getCleanValue(setData.open);\n        close = config.close = numberFormatter.getCleanValue(setData.close);\n        high = config.high = numberFormatter.getCleanValue(setData.high);\n        low = config.low = numberFormatter.getCleanValue(setData.low);\n        volume = config.volume = numberFormatter.getCleanValue(setData.volume, true);\n        if (volume !== null) {\n          chart.config.drawVolume = true;\n        }\n        x = config.x = numberFormatter.getCleanValue(setData.x);\n        // openVal = config.openVal = isCandleStick ? Math.abs(close - open) : open;\n        closeVal = config.closeVal = Math.min(open, close);\n        yVal = config.yVal = Math.max(open, close);\n        minValue = Math.min(open, close, high, low);\n        maxValue = Math.max(open, close, high, low);\n\n        config.valuePadding = pluckNumber(setData.valuepadding, conf.valuePadding);\n\n        // valueText = parseUnsafeString(getValidValue(setData.valuetext, BLANK));\n\n        setBorderColor = getFirstColor(pluck(setData.bordercolor, close < open ? bearBorderColor\n          : bullBorderColor));\n        setAlpha = pluckNumber(setData.alpha, 100);\n        setColor = getFirstColor(pluck(setData.color, close < open ? bearFillColor\n          : bullFillColor));\n        config.dashed = pluckNumber(setData.dashed, 0);\n        config.plotBorderDashStyle = pluckNumber(setData.dashed)\n          ? getDashStyle(plotLineDashLen, plotLineDashGap) : DASH_DEF;\n        // Set alpha of the shadow\n        pointShadow = {\n          opacity: conf.showShadow ? (setAlpha / 100) : 0\n        };\n        config.color = isCandleStick ? setColor : setBorderColor;\n        config.alpha = setAlpha;\n        /*\n       * Storing the set level color and set level alpha which is required in drawing of line\n       * In line we are checking setColor and setAlpha of current line segment is same as the previous\n       * line segment's setColor and setAlpha by accesing config.setColor and config.setAlpha\n       */\n        config.setColor = config.color;\n        config.setAlpha = config.alpha;\n        config.anchorImageUrl = pluck(setData.anchorimageurl, JSONData.anchorimageurl, chartAttr.anchorimageurl);\n        // Finally add the data\n        // we call getPointStub function that manage displayValue, toolText and link\n        borderColor = config.borderColor = setBorderColor;\n        config.borderAlpha = config.plotLineAlpha;\n        config.colorArr = [{\n          color: config.color,\n          alpha: config.alpha\n        },\n        {\n          color: config.borderColor,\n          alpha: config.borderAlpha\n        }];\n\n        config.showValue = 1;\n        config.hoverEffects = {};\n\n        config.y = Math.abs(close - open);\n        config.previousY = closeVal;\n        config.link = pluck(setData.link);\n        config.errorValueArr = [];\n        if (high - yVal > 0) {\n          config.errorValue = true;\n          config.errorValueArr.push({\n            errorValue: yVal - high,\n            errorStartValue: yVal,\n            errorBarColor: borderColor,\n            errorBarThickness: plotLineThickness,\n            opacity: 1\n          });\n        }\n        if (low - closeVal < 0) {\n          config.errorValue = true;\n          config.errorValueArr.push({\n            errorValue: closeVal - low,\n            errorStartValue: closeVal,\n            errorBarColor: borderColor,\n            errorBarThickness: plotLineThickness,\n            opacity: 1\n          });\n        }\n        config.setValue = yVal;\n\n        if (yVal !== 0 && conf.minAbsNonZeroValue > Math.abs(yVal)) {\n          conf.minAbsNonZeroValue = Math.abs(yVal);\n          conf.minAbsNonZeroData = config;\n        }\n\n        config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n\n        if (minValue !== null) {\n          yMax = Math.max(yMax, minValue);\n          yMin = Math.min(yMin, minValue);\n        }\n        if (maxValue !== null) {\n          yMax = Math.max(yMax, maxValue);\n          yMin = Math.min(yMin, maxValue);\n        }\n        if (x !== null) {\n          xMax = Math.max(xMax, x);\n          xMin = Math.min(xMin, x);\n        }\n\n        x = (x !== null) ? x : index + 1;\n        config._x = x;\n        config._y = yVal;\n        config._b = closeVal;\n        config.high = Math.max(open, close, high, low);\n        config.low = Math.min(open, close, high, low);\n        config.shadow = pointShadow;\n        config.toolText = dataset._parseToolText(index);\n        config.toolTipValue = BLANKSTRING;\n        config.displayValue = parseUnsafeString(pluck(setData.displayvalue,\n          setData.valuetext, BLANKSTRING));\n      }\n    }\n    conf.yMax = yMax;\n    conf.yMin = yMin;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    dataset.setState('dirty', true);\n  }\n  /**\n   * parse tooltext from the dataset json\n   * @param {number} i index of data\n   * @return {string} tooltext\n   */\n  _parseToolText (i) {\n    return __parseToolText.call(this, i);\n  }\n  /**\n   * Adds dataset Specific event Arguments\n   * @param {Object} _dataObj dataObject\n   */\n  // eslint-disable-next-line class-methods-use-this\n  addDatasetSpecificEvtArgs (_dataObj) {\n    let dataObj = _dataObj,\n      config = dataObj.config,\n      trackerConfig = dataObj.trackerConfig,\n      eventArgs = trackerConfig.eventArgs;\n    Object.assign(eventArgs, {\n      open: config.open,\n      close: config.close,\n      high: config.high,\n      low: config.low,\n      volume: config.volume,\n      alpha: config.alpha,\n      x: config.x,\n      displayValue: config.displayValue,\n      color: config.color,\n      borderColor: config.borderColor,\n      dashed: config.dashed\n    });\n  }\n  /**\n   * calculate min and max position to scroll\n   */\n  calculateScrollRange () {\n    let dataset = this,\n      conf = dataset.config,\n      dataLen = dataset.components.data && dataset.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    conf.scrollMinVal = conf.scrollMinValForLabel = 0;\n    conf.scrollMaxVal = conf.scrollMaxValForLabel = dataLen;\n  }\n  /**\n   * fetches data indices wrt. the x pos value\n   * @param {number} x  x pos value\n   * @return {Array}    contains indices\n   */\n  getPlotIndices (x) {\n    return getPlotIndices.call(this, x);\n  }\n  /**\n   * Function that retunr the nearest plot details\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY x-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest polt and whether it is hovered or not\n   */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      x,\n      i,\n      hoveredInfo,\n      pXs,\n      pX;\n\n    x = dataset.getFromEnv('xAxis').getValue(chartX);\n    pXs = dataset.getPlotIndices(x);\n\n    // Checking for overlap between two cosecutive column plots along x-axis\n    for (i = pXs.length - 1; i > -1; i--) {\n      pX = pXs[i];\n      hoveredInfo = (pX - x > 0 ? dataset._checkPointerOverPlot(pX, chartX, chartY) ||\n      dataset._checkPointerOverPlot(pX - 1, chartX, chartY)\n        : dataset._checkPointerOverPlot(pX + 1, chartX, chartY) ||\n            dataset._checkPointerOverPlot(pX, chartX, chartY));\n      if (hoveredInfo) {\n        break;\n      }\n    }\n    return hoveredInfo;\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType    name of the event\n   * @param {number} plotIndex    index of the plot where this event has been occured\n   * @param {Event}  e            reference of the original mouse event\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    _firePlotEvent.call(this, eventType, plotIndex, e);\n  }\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var conf = this.config;\n    return {\n      max: conf.yMax,\n      min: conf.yMin,\n      xMax: conf.xMax,\n      xMin: conf.xMin\n    };\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  getName () {\n    return 'candlestick';\n  }\n}\n\nexport default CandleStickDataset;\nexport { getPlotIndices, _firePlotEvent, __parseToolText as _parseToolText };\n","export default {\n  'initial.dataset.candlestick': function () {\n    return {\n      'rect.appearing': (inputJSON) => {\n        return [{\n          initialAttr: {\n            y: inputJSON.attr.y + inputJSON.attr.height,\n            height: 0\n          },\n          slot: 'plot'\n        }];\n      },\n      'group.appearing': (inputJSON) => {\n        if (inputJSON.attr.name === 'label-group') {\n          return [{\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'final'\n          }];\n        }\n        return [{\n          initialAttr: {\n            opacity: 1\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      '*': null\n    };\n  },\n  'initial.dataset.volume': function () {\n    return {\n      'rect.appearing': (inputJSON) => {\n        return [{\n          initialAttr: {\n            y: inputJSON.attr.y + inputJSON.attr.height,\n            height: 0\n          },\n          slot: 'plot'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { pluck, pluckNumber, getValidValue, getDashStyle, getFirstColor,\n  parseUnsafeString, preDefStr, toRaphaelColor } from '@fusioncharts/core/src/lib';\nimport Column from '@fusioncharts/charts/src/dataset/column';\nimport { _checkPointerOverPlot, _checkPointerOverErrorBar } from '../../dataset/errorbar2d';\nimport { getPlotIndices, _firePlotEvent, _parseToolText as __parseToolText } from './candlestick';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport candlestickbarAnimation from './candlestickbar.animation';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_B90000 = colorStrings.B90000,\n  COLOR_FFFFFF = colorStrings.FFFFFF,\n  SHOWSHADOW = 'showShadow',\n  ROUND = preDefStr.ROUND,\n  visibleStr = preDefStr.visibleStr,\n  DASH_DEF = 'none',\n  POINTER = 'pointer',\n  BLANKSTRING = '',\n  M = 'M',\n  L = 'L',\n  applyShadow = function (shadow) {\n    return function () {\n      this.shadow(shadow);\n    };\n  };\n\naddDep({\n  name: 'candlestickbarAnimation',\n  type: 'animationRule',\n  extension: candlestickbarAnimation\n});\n/**\n * Class def for bull stick chart API\n * This dataset is reponsible for drawing stick depending on high and open value\n */\nclass CandleStickBar extends Column {\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.components && this.components.data && this.components.data.length) {\n      return;\n    }\n    let comps = this.components,\n      prevData = comps && comps.data,\n      prevDataLength = prevData && prevData.length, // eslint-disable-line good-practices/no-single-usage-variable\n      data = datasetJSON.data,\n      currDataLength = (Array.isArray(data) && data.filter(v => (v.high || v.open || v.close || v.low)).length) || 0, // eslint-disable-line good-practices/no-function-dependency\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots\n    // is less than the existing ones.\n    if (dataDiff > 0) {\n      this.removeData(currDataLength, dataDiff, false);\n    }\n  }\n  /**\n   * Adds dataset Specific event Arguments\n   * @param {Object} _dataObj dataObject\n   */\n  // eslint-disable-next-line class-methods-use-this\n  addDatasetSpecificEvtArgs (_dataObj) {\n    let dataObj = _dataObj,\n      config = dataObj.config,\n      trackerConfig = dataObj.trackerConfig,\n      eventArgs = trackerConfig.eventArgs;\n    Object.assign(eventArgs, {\n      open: config.open,\n      close: config.close,\n      high: config.high,\n      low: config.low,\n      volume: config.volume,\n      alpha: config.alpha,\n      x: config.x,\n      displayValue: config.displayValue,\n      color: config.color,\n      borderColor: config.borderColor,\n      dashed: config.dashed\n    });\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n\n    var dataset = this,\n      conf = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      rawDataObj = chart.getFromEnv('dataSource'), // eslint-disable-line good-practices/no-single-usage-variable\n      JSONData = dataset.config.JSONData,\n      dataArr = JSONData.data || [],\n      chartAttr = rawDataObj.chart,\n      dataLength = dataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      colorM = dataset.getFromEnv('color-manager'),\n      setColor,\n      setBorderColor,\n      setAlpha,\n      // Candle stick properties.\n      // Bear fill and border color - (Close lower than open)\n      bearBorderColor = conf.bearBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearbordercolor, COLOR_B90000)),\n      bearFillColor = conf.bearFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearfillcolor, COLOR_B90000)),\n      // Bull fill and border color - Close higher than open\n      bullBorderColor = conf.bullBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bullbordercolor,\n                      colorM.getColor('canvasBorderColor'))),\n      bullFillColor = conf.bullFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                getFirstColor(pluck(chartAttr.bullfillcolor,\n                  COLOR_FFFFFF)),\n      index,\n      dataObj,\n      open,\n      close,\n      high,\n      low,\n      minValue,\n      maxValue,\n      x,\n      dataStore,\n      setData,\n      config,\n      isCandleStick = false, // eslint-disable-line good-practices/no-single-usage-variable\n      yMax = -Infinity,\n      yMin = +Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity,\n      userMaxColWidth;\n\n    dataset.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n\n    dataset._conatinerHidden = !!dataset.getState('visible');\n\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    conf.minAbsNonZeroValue = Infinity;\n    conf.minAbsNonZeroData = {};\n    conf.linethickness = pluckNumber(chartAttr.plotlinethickness, 2);\n    conf.toolText = getValidValue(parseUnsafeString(pluck(JSONData.tooltext, chartAttr.plottooltext), false));\n    // Dataset seriesname\n    conf.name = getValidValue(JSONData.seriesname);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n\n    conf.showErrorValue = true;\n    conf.errorBarWidthPercent = 0;\n    isCandleStick = true; // eslint-disable-line good-practices/no-single-usage-variable\n    userMaxColWidth = pluck(chartAttr.maxcolwidth); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.maxColWidth = Math.abs(pluckNumber(\n      userMaxColWidth, 50)) || 1;\n    // Animation related attributes configuration\n    conf.enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !conf.enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n\n    conf.plotLineDashLen = pluckNumber(chartAttr.plotlinedashlen, 5);\n    conf.plotLineDashGap = pluckNumber(chartAttr.plotlinedashgap, 4);\n    dataStore = dataset.components.data = dataset.components.data || (dataset.components.data = []);\n    conf.valuePadding = pluckNumber(JSONData.valuepadding, chartAttr.valuepadding, 2);\n    conf.showShadow = pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    // Iterate through all level data\n    for (index = 0; index < dataLength; index++) {\n      // Individual data obj\n      // for further manipulation\n      setData = dataArr[index];\n      dataObj = dataStore[index];\n      if (!dataObj) {\n        dataObj = dataStore[index] = {};\n      }\n      !dataObj.config && (dataObj.config = {});\n      !dataObj.graphics && (dataObj.graphics = {});\n      config = dataObj.config;\n      if (setData && !setData.vline) {\n        config.setLink = pluck(setData.link);\n        open = config.open = numberFormatter.getCleanValue(setData.open);\n        close = config.close = numberFormatter.getCleanValue(setData.close);\n        high = numberFormatter.getCleanValue(setData.high);\n        low = numberFormatter.getCleanValue(setData.low);\n        config.volume = numberFormatter.getCleanValue(setData.volume, true);\n        x = config.x = numberFormatter.getCleanValue(setData.x);\n        config.high = Math.max(open, close, high, low);\n        config.low = Math.min(open, close, high, low);\n        config.yVal = Math.max(open, close);\n        minValue = Math.min(open, close, high, low);\n        maxValue = Math.max(open, close, high, low);\n\n        config.valuePadding = pluckNumber(setData.valuepadding, conf.valuePadding);\n\n        // valueText = parseUnsafeString(getValidValue(setData.valuetext, BLANK));\n\n        setBorderColor = getFirstColor(pluck(setData.bordercolor, close < open ? bearBorderColor\n          : bullBorderColor));\n\n        setAlpha = pluckNumber(setData.alpha, 100);\n        setColor = getFirstColor(pluck(setData.color, close < open ? bearFillColor\n          : bullFillColor));\n\n        config.color = isCandleStick ? setColor : setBorderColor;\n        config.alpha = setAlpha;\n        /*\n         * Storing the set level color and set level alpha which is required in drawing of line\n         * In line we are checking setColor and setAlpha of current line segment is same as the previous\n         * line segment's setColor and setAlpha by accesing config.setColor and config.setAlpha\n         */\n        config.setColor = config.color;\n        config.setAlpha = config.alpha;\n        // Finally add the data\n        // we call getPointStub function that manage displayValue, toolText and link\n        config.borderColor = setBorderColor;\n        config.borderAlpha = config.plotLineAlpha;\n        config.colorArr = [{\n          color: config.color,\n          alpha: config.alpha\n        },\n        {\n          color: config.borderColor,\n          alpha: config.borderAlpha\n        }];\n        config.showValue = 1;\n        config.hoverEffects = {};\n        config.link = pluck(setData.link);\n        config.setValue = config.y;\n\n        if (config.setValue !== 0 && conf.minAbsNonZeroValue > Math.abs(config.setValue)) {\n          conf.minAbsNonZeroValue = Math.abs(config.setValue);\n          conf.minAbsNonZeroData = config;\n        }\n\n        config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n\n        if (minValue !== null) {\n          yMax = Math.max(yMax, minValue);\n          yMin = Math.min(yMin, minValue);\n        }\n        if (maxValue !== null) {\n          yMax = Math.max(yMax, maxValue);\n          yMin = Math.min(yMin, maxValue);\n        }\n        if (x !== null) {\n          xMax = Math.max(xMax, x);\n          xMin = Math.min(xMin, x);\n        }\n        config.dashStyle = pluckNumber(setData.dashed)\n          ? getDashStyle(conf.plotLineDashLen, conf.plotLineDashGap) : DASH_DEF;\n        config.shadow = {\n          opacity: conf.showShadow ? (setAlpha / 100) : 0\n        };\n        x = (x !== null) ? x : index + 1;\n        config.toolText = dataset._parseToolText(index);\n        config.toolTipValue = BLANKSTRING;\n        config._x = x;\n        config.y = open;\n        config.previousY = close;\n        config.dashed = pluckNumber(conf.plotLineDashed, setData.dashed, 0);\n      }\n    }\n    conf.yMax = yMax;\n    conf.yMin = yMin;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    dataset.setState('dirty', true);\n  }\n  /**\n   * functioto draw and update the graphics elements of plots\n   * @param {Object} anim    - object reference of animation manager argument\n   *                           consist of elements and their configuration\n   */\n  drawPlots () {\n    var dataset = this,\n      config,\n      animationManager = dataset.getFromEnv('animationManager'),\n      conf = dataset.config,\n      data = dataset.components.data,\n      length = data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      xAxis = dataset.getFromEnv('xAxis'), // eslint-disable-line good-practices/no-single-usage-variable\n      yAxis = dataset.getFromEnv('yAxis'),\n      // key,\n      i,\n      set,\n      setLink,\n      x,\n      y,\n      previousY,\n      xPos,\n      yPos,\n      previousYPos,\n      setElem,\n      bars,\n      trackerTolerance = conf.linethickness > 5 ? (conf.linethickness / 2) : 2.5,\n      container = dataset.getContainer('plotGroup'),\n      // hotElem,\n      // targetGroup,\n      highPos,\n      lowPos,\n      halfW,\n      path,\n      graphics;\n    animationManager.setAnimation({\n      el: container,\n      attr: {\n        opacity: dataset.getState('visible') ? 1 : 0\n      },\n      component: dataset\n    });\n\n    dataset.setColumnPosition();\n\n    // draw plots\n    for (i = 0; i < length; i += 1) {\n      set = data[i];\n      config = set.config;\n      graphics = set.graphics;\n      y = config.y;\n      setElem = null;\n\n      if (y === null) {\n        setElem = graphics.element;\n      } else {\n        // when valid value\n        x = config._x;\n        setLink = config.link;\n        config.setLink = config.link;\n        // fixedWidth = config._FCW * groupMaxWidth;\n\n        xPos = xAxis.getPixel(x);\n        previousY = config.previousY;\n        previousYPos = yAxis.getPixel(previousY);\n        yPos = yAxis.getPixel(y);\n        highPos = yAxis.getPixel(config.high);\n        lowPos = yAxis.getPixel(config.low);\n        halfW = dataset.getFromEnv('columnXShift');\n        set.errorBar = [];\n        bars = set.errorBar;\n        bars.push([{\n          _xPos: xPos - trackerTolerance,\n          _yPos: highPos,\n          _height: Math.abs(highPos - lowPos),\n          _width: 2 * trackerTolerance\n        },\n        {\n          _xPos: xPos + halfW,\n          _yPos: yPos,\n          _height: 2 * trackerTolerance,\n          _width: Math.abs(halfW)\n        },\n        {\n          _xPos: xPos,\n          _yPos: previousYPos,\n          _height: 2 * trackerTolerance,\n          _width: Math.abs(halfW)\n        }]);\n\n        path = [M, xPos, lowPos, L, xPos, highPos,\n          M, xPos, yPos, L, (xPos + halfW), yPos,\n          M, xPos, previousYPos, L, (xPos - halfW), previousYPos\n        ];\n        setElem = graphics.element;\n        setElem = animationManager.setAnimation({\n          el: setElem || 'path',\n          container: container,\n          attr: {\n            'path': path,\n            'cursor': setLink ? POINTER : BLANKSTRING,\n            fill: toRaphaelColor(config.color),\n            stroke: toRaphaelColor(config.borderColor),\n            'stroke-width': conf.linethickness,\n            'stroke-dasharray': config.dashStyle,\n            'stroke-linecap': ROUND,\n            'stroke-linejoin': ROUND,\n            'shape-rendering': 'crisp',\n            'visibility': visibleStr\n          },\n          label: 'path',\n          component: dataset,\n          callback: applyShadow.call(setElem, config.shadow)\n        });\n        setElem.data('eventArgs', set.trackerConfig.eventArgs);\n        graphics.element = setElem;\n      }\n    }\n  }\n  /**\n   * parse tooltext from the dataset json\n   * @param {number} i index of data\n   * @return {string} tooltext\n   */\n  _parseToolText (i) {\n    return __parseToolText.call(this, i);\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType    name of the event\n   * @param {number} plotIndex    index of the plot where this event has been occured\n   * @param {Event}  e            reference of the original mouse event\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    _firePlotEvent.call(this, eventType, plotIndex, e);\n  }\n  /**\n   * function to check if given x,y coordiante is over a column plot or not\n   */\n  // eslint-disable-next-line\n  _checkPointerOverColumn () {\n  }\n  /**\n   * Function that retunr the nearest plot details\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY y-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest polt and whether it is hovered or not\n   */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      x,\n      i,\n      hoveredInfo,\n      pXs,\n      pX;\n\n    x = dataset.getFromEnv('xAxis').getValue(chartX);\n    pXs = getPlotIndices.call(dataset, x);\n\n    // Checking for overlap between two cosecutive column plots along x-axis\n    for (i = pXs.length - 1; i > -1; i--) {\n      pX = pXs[i];\n      hoveredInfo = (pX - x > 0 ? dataset._checkPointerOverPlot(pX, chartX, chartY) ||\n      dataset._checkPointerOverPlot(pX - 1, chartX, chartY)\n        : dataset._checkPointerOverPlot(pX + 1, chartX, chartY) ||\n            dataset._checkPointerOverPlot(pX, chartX, chartY));\n      if (hoveredInfo) {\n        break;\n      }\n    }\n    return hoveredInfo;\n  }\n  /**\n   * Helper function of _getHoverPlot fn\n   * @param {number} pX     x index value\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY y-axis position of the mouse cordinate\n   * @return {Object}       return hover information\n   */\n  _checkPointerOverPlot (pX, chartX, chartY) {\n    return _checkPointerOverPlot.call(this, pX, chartX, chartY);\n  }\n  /**\n   * Helper function of _checkPointerOverPlot fn\n   * @param {number} pX     x index value\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY y-axis position of the mouse cordinate\n   * @return {Object}       return hover information\n   */\n  _checkPointerOverErrorBar (pX, chartX, chartY) {\n    return _checkPointerOverErrorBar.call(this, pX, chartX, chartY);\n  }\n  /**\n    * This function overrides drawlabel method\n    * it prevents the label drawing\n    */\n  // eslint-disable-next-line\n  drawLabel () {\n  }\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var conf = this.config;\n    return {\n      max: conf.yMax,\n      min: conf.yMin,\n      xMax: conf.xMax,\n      xMin: conf.xMin\n    };\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  getName () {\n    return 'candlestickbar';\n  }\n}\n\nexport default CandleStickBar;\n","export default {\n  'initial.dataset.candlestickbar': function () {\n    return {\n      'path.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 1,\n            'stroke-width': 1\n          },\n          finalAttr: {\n            opacity: 1\n          }\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { pluck, pluckNumber, getValidValue,\n  parseUnsafeString, preDefStr, getDashStyle, mapSymbolName, getFirstColor, BLANKSTRING } from '@fusioncharts/core/src/lib';\nimport Line from '@fusioncharts/charts/src/dataset/line';\nimport { _parseToolText as __parseToolText } from './candlestick';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_B90000 = colorStrings.B90000,\n  COLOR_FFFFFF = colorStrings.FFFFFF,\n  UNDERSCORE = '_',\n  BLANK = '',\n  SHOWSHADOW = 'showShadow',\n  LINE_STR = 'line',\n  ZEROSTRING = '0',\n  HUNDRED = '100';\n\n/**\n * Class def for bull stick chart API\n * This dataset is reponsible for drawing stick depending on high and open value\n */\nclass CandleStickline extends Line {\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n\n    var dataset = this,\n      conf = dataset.config,\n      JSONData = dataset.config.JSONData,\n      dataArr = JSONData.data || [],\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      dataLength = dataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      colorM = dataset.getFromEnv('color-manager'),\n      setColor,\n      setBorderColor,\n      setAlpha,\n      dashStyle,\n      // Candle stick properties.\n      // Bear fill and border color - (Close lower than open)\n      bearBorderColor = conf.bearBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearbordercolor, COLOR_B90000)),\n      bearFillColor = conf.bearFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearfillcolor, COLOR_B90000)),\n      // Bull fill and border color - Close higher than open\n      bullBorderColor = conf.bullBorderColor =\n                    getFirstColor(pluck(chartAttr.bullbordercolor,\n                      colorM.getColor('canvasBorderColor'))),\n      bullFillColor = conf.bullFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                getFirstColor(pluck(chartAttr.bullfillcolor,\n                  COLOR_FFFFFF)),\n      // Line Properties - Serves as line for bar & line and border for candle stick\n      plotLineThickness = conf.linethickness = conf.plotBorderThickness = // eslint-disable-line good-practices/no-single-usage-variable\n                    pluckNumber(chartAttr.plotlinethickness, 2),\n      // Anchor cosmetics in data points\n      // Getting anchor cosmetics for the data points or its default values\n      // The default value is different from flash in order to render a\n      // perfect circle when no anchorside is provided.\n      drawAnchors = !!pluckNumber(chartAttr.drawanchors, 0), // eslint-disable-line good-practices/no-single-usage-variable\n      setAnchorAngle = pluckNumber(chartAttr.anchorstartangle, 90), // eslint-disable-line good-practices/no-single-usage-variable\n      setAnchorRadius = pluckNumber(chartAttr.anchorradius, // eslint-disable-line good-practices/no-single-usage-variable\n        this.anchorRadius, 3),\n      setAnchorBorderColor = getFirstColor(pluck(chartAttr.anchorbordercolor, // eslint-disable-line good-practices/no-single-usage-variable\n        bullBorderColor)),\n      setAnchorBorderThickness = pluckNumber(chartAttr.anchorborderthickness, // eslint-disable-line good-practices/no-single-usage-variable\n        this.anchorBorderThickness, 1),\n      setAnchorBgColor = getFirstColor(pluck(chartAttr.anchorbgcolor, // eslint-disable-line good-practices/no-single-usage-variable\n        colorM.getColor('anchorBgColor'))),\n      setAnchorAlpha = pluck(chartAttr.anchoralpha, ZEROSTRING),\n      setAnchorBgAlpha = pluck(chartAttr.anchorbgalpha, setAnchorAlpha), // eslint-disable-line good-practices/no-single-usage-variable\n      pointShadow,\n      index,\n      dataObj,\n      open,\n      close,\n      high,\n      low,\n      minValue,\n      maxValue,\n      x,\n      dataStore,\n      setData,\n      config,\n      isCandleStick = false, // eslint-disable-line good-practices/no-single-usage-variable\n      plotSpacePercent,\n      yMax = -Infinity,\n      yMin = +Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity;\n    dataset.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n    conf.plotLineDashLen = pluckNumber(chartAttr.plotlinedashlen, 5);\n    conf.plotLineDashGap = pluckNumber(chartAttr.plotlinedashgap, 4);\n\n    dataset._conatinerHidden = !!dataset.getState('visible');\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    conf.plotType = LINE_STR;\n    conf.parentYAxis = 0;\n    conf.toolText = getValidValue(parseUnsafeString(pluck(JSONData.tooltext, chartAttr.plottooltext), false));\n    // Dataset seriesname\n    conf.name = getValidValue(JSONData.seriesname);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n\n    conf.maxColWidth = Math.abs(pluckNumber(\n      pluck(chartAttr.maxcolwidth), 50)) || 1;\n    // Animation related attributes configuration\n    conf.enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !conf.enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n    conf.lineAlpha = pluck(chartAttr.plotlinealpha, HUNDRED);\n    plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.plotSpacePercent = conf.groupPadding = plotSpacePercent / 200;\n    dataStore = dataset.components.data = dataset.components.data || (dataset.components.data = []);\n    conf.valuePadding = pluckNumber(JSONData.valuepadding, chartAttr.valuepadding, 2);\n    conf.plotBorderThickness = plotLineThickness;\n    conf.showvalues = 1;\n    conf.showShadow = pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    // Iterate through all level data\n    for (index = 0; index < dataLength; index += 1) {\n      // Individual data obj\n      // for further manipulation\n      setData = dataArr[index];\n      dataObj = dataStore[index];\n      if (!dataObj) {\n        dataObj = dataStore[index] = {};\n      }\n      !dataObj.config && (dataObj.config = {});\n      !dataObj.graphics && (dataObj.graphics = {});\n      config = dataObj.config;\n      if (setData && !setData.vline) {\n        config.setLink = pluck(setData.link);\n        open = config.open = numberFormatter.getCleanValue(setData.open);\n        close = config.close = numberFormatter.getCleanValue(setData.close);\n        high = config.high = numberFormatter.getCleanValue(setData.high);\n        low = config.low = numberFormatter.getCleanValue(setData.low);\n        config.volume = numberFormatter.getCleanValue(setData.volume, true);\n\n        x = config.x = numberFormatter.getCleanValue(setData.x);\n        // openVal = config.openVal = isCandleStick ? Math.abs(close - open) : open;\n        config.closeVal = Math.min(open, close);\n        config.yVal = Math.max(open, close);\n        minValue = Math.min(open, close, high, low);\n        maxValue = Math.max(open, close, high, low);\n\n        config.valuePadding = pluckNumber(setData.valuepadding, conf.valuePadding);\n\n        // valueText = parseUnsafeString(getValidValue(setData.valuetext, BLANK));\n        setBorderColor = getFirstColor(pluck(setData.bordercolor, close < open ? bearBorderColor\n          : bullBorderColor));\n        setAlpha = pluck(setData.alpha, conf.lineAlpha);\n        setColor = getFirstColor(pluck(setData.color, close < open ? bearFillColor\n          : bullFillColor));\n        dashStyle = pluckNumber(setData.dashed) ? getDashStyle(conf.plotLineDashLen,\n          conf.plotLineDashGap) : 'none';\n        config.dashStyle = dashStyle;\n        // Set alpha of the shadow\n        pointShadow = {\n          opacity: conf.showShadow ? (setAlpha / 100) : 0\n        };\n        config.rawDataColor = setColor;\n        config.color = isCandleStick ? setColor : setBorderColor;\n        config.alpha = setAlpha;\n        config.dashed = pluckNumber(conf.plotLineDashed, setData.dashed, 0);\n        /*\n         * Storing the set level color and set level alpha which is required in drawing of line\n         * In line we are checking setColor and setAlpha of current line segment is same as the previous\n         * line segment's setColor and setAlpha by accesing config.setColor and config.setAlpha\n         */\n        config.setColor = config.color;\n        config.setAlpha = config.alpha;\n        config.anchorImageUrl = pluck(setData.anchorimageurl, JSONData.anchorimageurl, chartAttr.anchorimageurl);\n        // Finally add the data\n        // we call getPointStub function that manage displayValue, toolText and link\n        config.borderColor = setBorderColor;\n        config.borderAlpha = config.plotLineAlpha;\n        config.colorArr = [{\n          color: config.color,\n          alpha: config.alpha\n        },\n        {\n          color: config.borderColor,\n          alpha: config.borderAlpha\n        }];\n\n        config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n\n        config.anchorSides = pluckNumber(setData.anchorsides, JSONData.anchorsides,\n          chartAttr.anchorsides);\n        config.symbol = mapSymbolName(config.anchorSides).split(UNDERSCORE);\n        config.anchorProps = {\n          enabled: drawAnchors,\n          bgColor: setAnchorBgColor,\n          symbol: config.symbol,\n          bgAlpha: ((setAnchorBgAlpha * setAnchorAlpha) / 100) + BLANK,\n          borderColor: setAnchorBorderColor,\n          borderAlpha: setAnchorAlpha,\n          anchorAlpha: setAnchorAlpha,\n          borderThickness: setAnchorBorderThickness,\n          imageUrl: config.anchorImageUrl,\n          radius: setAnchorRadius,\n          imageScale: pluckNumber(setData.imagescale, JSONData.imagescale, chartAttr.imagescale, 100),\n          imagePadding: pluckNumber(setData.anchorimagepadding, JSONData.anchorimagepadding,\n            chartAttr.anchorimagepadding, 1),\n          imageAlpha: pluckNumber(JSONData.anchorimagealpha, chartAttr.anchorimagealpha, 100),\n          startAngle: setAnchorAngle\n        };\n        config.showValue = setData.displayvalue ? 1 : 0;\n        config.hoverEffects = {};\n        config.anchorSides = pluckNumber(setData.anchorsides, JSONData.anchorsides,\n          chartAttr.anchorsides);\n        config.symbol = mapSymbolName(config.anchorSides).split(UNDERSCORE);\n\n        config.hoverEffects = {};\n        config.y = close;\n        config.link = pluck(setData.link);\n        config.toolText = dataset._parseToolText(index);\n        config.toolTipValue = BLANKSTRING;\n        config.setValue = config._y = config.y;\n        config.displayValue = parseUnsafeString(pluck(setData.displayvalue, setData.valuetext, BLANK));\n        if (minValue !== null) {\n          yMax = Math.max(yMax, minValue);\n          yMin = Math.min(yMin, minValue);\n        }\n        if (maxValue !== null) {\n          yMax = Math.max(yMax, maxValue);\n          yMin = Math.min(yMin, maxValue);\n        }\n        if (x !== null) {\n          xMax = Math.max(xMax, x);\n          xMin = Math.min(xMin, x);\n        }\n        x = x || index + 1;\n        config._x = config.x = x;\n\n        config.high = Math.max(open, close, high, low);\n        config.low = Math.min(open, close, high, low);\n        config.shadow = pointShadow;\n      }\n    }\n    conf.yMax = yMax;\n    conf.yMin = yMin;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    dataset.setState('dirty', true);\n  }\n  /**\n   * Sets the default value of attributes\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.drawLine = 1;\n  }\n  /**\n   * Adds dataset Specific event Arguments\n   * @param {Object} _dataObj dataObject\n   */\n  // eslint-disable-next-line class-methods-use-this\n  addDatasetSpecificEvtArgs (_dataObj) {\n    let dataObj = _dataObj,\n      config = dataObj.config,\n      eventArgs = dataObj.config.eventArgs;\n    Object.assign(eventArgs, {\n      open: config.open,\n      close: config.close,\n      high: config.high,\n      low: config.low,\n      volume: config.volume,\n      alpha: config.alpha,\n      x: config.x,\n      displayValue: config.displayValue,\n      color: config.rawDataColor,\n      borderColor: config.borderColor,\n      dashed: config.dashed\n    });\n  }\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.components && this.components.data && this.components.data.length) {\n      return;\n    }\n    let comps = this.components,\n      prevData = comps && comps.data,\n      prevDataLength = prevData && prevData.length, // eslint-disable-line good-practices/no-single-usage-variable\n      data = datasetJSON.data,\n      currDataLength = (Array.isArray(data) && data.filter(v => (v.high || v.open || v.close || v.low)).length) || 0, // eslint-disable-line good-practices/no-function-dependency\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots\n    // is less than the existing ones.\n    if (dataDiff > 0) {\n      this.removeData(currDataLength, dataDiff, false);\n    }\n  }\n  /**\n   * calculate min and max position to scroll\n   */\n  calculateScrollRange () {\n    let dataset = this,\n      conf = dataset.config,\n      dataLen = dataset.components.data && dataset.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    conf.scrollMinVal = conf.scrollMinValForLabel = 0;\n    conf.scrollMaxVal = conf.scrollMaxValForLabel = dataLen;\n  }\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var conf = this.config;\n    return {\n      max: conf.yMax,\n      min: conf.yMin,\n      xMax: conf.xMax,\n      xMin: conf.xMin\n    };\n  }\n  /**\n   * fetches data indices wrt. the x pos value\n   * @param {number} x  x pos value\n   * @return {Array}    contains indices\n   */\n  getPlotIndices (x) {\n    var dataset = this,\n      i,\n      minX = Math.floor(x), // eslint-disable-line good-practices/no-single-usage-variable\n      maxX = Math.ceil(x), // eslint-disable-line good-practices/no-single-usage-variable\n      data,\n      returnIndices = [],\n      sortedData = dataset.config.JSONData && dataset.config.JSONData.data;\n\n    for (i = sortedData.length; i--;) {\n      data = sortedData[i];\n      if (data.x >= minX && data.x <= maxX) {\n        returnIndices.push(i);\n      }\n    }\n    return returnIndices;\n  }\n  /**\n   * parse tooltext from the dataset json\n   * @param {number} i index of data\n   * @return {string} tooltext\n   */\n  _parseToolText (i) {\n    return __parseToolText.call(this, i);\n  }\n  /**\n   * Function that return the nearest plot details\n   * @param   {number} chartXVal x-axis position of the mouse cordinate\n   * @param   {number} chartYVal y-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest plot and whether it is\n   *                   hovered or not\n   */\n  _getHoveredPlot (chartXVal, chartYVal) {\n    var dataset = this,\n      chartX = chartXVal,\n      chartY = chartYVal,\n      xAxis = dataset.getFromEnv('xAxis'),\n      dataStore = dataset.components.data,\n      pointObj,\n      pXs,\n      xMin,\n      xMax,\n      returnValue,\n      conf = dataset.config,\n      i,\n      maxRadius = (conf && conf.radius) || 0;\n\n    // getting new chart XY accordint to Translation of axis\n    chartX += xAxis.getTranslation();\n\n    pXs = dataset.getPlotIndices(Math.floor(Math.max(xAxis.getValue(chartX - maxRadius), 0)));\n    xMin = pXs[0];\n    pXs = dataset.getPlotIndices(Math.ceil(Math.min(xAxis.getValue(chartX + maxRadius), dataStore.length - 1)));\n    xMax = pXs[pXs.length - 1];\n\n    [xMin, xMax] = (xMin > xMax) ? [xMax, xMin] : [xMin, xMax];\n\n    for (i = xMax; i >= xMin; i--) {\n      pointObj = dataStore[i];\n      if (pointObj) {\n        returnValue = dataset.isWithinShape(pointObj, i, chartX, chartY);\n        if (returnValue) {\n          break;\n        }\n      }\n    }\n\n    return returnValue;\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  getName () {\n    return 'candlestickline';\n  }\n}\n\nexport default CandleStickline;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Column from '@fusioncharts/charts/src/dataset/column';\nimport { pluck, pluckNumber, getValidValue, extend2, getDashStyle,\n  parseUnsafeString, preDefStr, getFirstValue, getFirstColor, BLANKSTRING } from '@fusioncharts/core/src/lib';\nimport { _parseToolText as __parseToolText } from './candlestick';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_B90000 = colorStrings.B90000,\n  DASH_DEF = 'none',\n  SHOWSHADOW = 'showShadow',\n  COLOR_FFFFFF = colorStrings.FFFFFF;\n\n/**\n * Class def for bull candles chart API\n * This dataset is reponsible for drawing candle depending on open and close value\n */\nclass Volume extends Column {\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n\n    var dataset = this,\n      conf = dataset.config,\n      JSONData = dataset.config.JSONData,\n      dataArr = JSONData.data || [],\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      dataLength = dataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      colorM = dataset.getFromEnv('color-manager'),\n      setColor,\n      setAlpha,\n      pointShadow,\n      index,\n      dataObj,\n      open,\n      close,\n      volume,\n      x,\n      borderAlpha,\n      numberFormatterAttrs,\n      plotLineDashLen,\n      plotLineDashGap,\n      // Candle stick properties.\n      // Bear fill and border color - (Close lower than open)\n      bearBorderColor = conf.bearBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearbordercolor, chartConfig.vplotbordercolor, COLOR_B90000)),\n      bearFillColor = conf.bearFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearfillcolor, COLOR_B90000)),\n      // Bull fill and border color - Close higher than open\n      bullBorderColor = conf.bullBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bullbordercolor, chartConfig.vplotbordercolor,\n                      colorM.getColor('canvasBorderColor'))),\n      bullFillColor = conf.bullFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                getFirstColor(pluck(chartAttr.bullfillcolor,\n                  COLOR_FFFFFF)),\n      showVPlotBorder = pluckNumber(chartConfig.showplotborder, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      // VPlotBorder is border properties for the volume chart.\n      vPlotBorderThickness = showVPlotBorder ? pluckNumber(chartAttr.vplotborderthickness, 1) : 0,\n      dataStore,\n      setData,\n      config,\n      plotSpacePercent,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      yMax = -Infinity,\n      yMin = +Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity;\n    dataset.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n    if (dataset.getState('visible') === true) {\n      dataset._conatinerHidden = false;\n    } else {\n      dataset._containerHidden = true;\n    }\n\n    conf.minAbsNonZeroValue = Infinity;\n    conf.minAbsNonZeroData = {};\n\n    conf.parentYAxis = 1;\n    conf.volumeToolText = getValidValue(parseUnsafeString(pluck(JSONData.volumetooltext,\n      chartAttr.volumetooltext, chartAttr.plottooltext), false));\n    // Dataset seriesname\n    conf.name = getValidValue(JSONData.seriesname);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.showShadow = pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.maxColWidth = Math.abs(pluckNumber(\n      pluck(chartAttr.maxcolwidth), 50)) || 1;\n    plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.plotSpacePercent = conf.groupPadding = plotSpacePercent / 200;\n    conf.plotborderthickness = vPlotBorderThickness;\n    dataStore = dataset.components.data = dataset.components.data || (dataset.components.data = []);\n    numberFormatterAttrs = extend2(extend2({}, chartAttr), { // eslint-disable-line good-practices/no-single-usage-variable\n      sforcedecimals: getFirstValue(chartAttr.forcevdecimals,\n        chartAttr.forcedecimals),\n      sforceyaxisvaluedecimals: getFirstValue(\n        chartAttr.forcevyaxisvaluedecimals,\n        chartAttr.forceyaxisvaluedecimals),\n      syaxisvaluedecimals: getFirstValue(\n        chartAttr.vyaxisvaluedecimals,\n        chartAttr.yaxisvaluedecimals),\n      sformatnumber: getFirstValue(chartAttr.vformatnumber,\n        chartAttr.formatnumber),\n      sformatnumberscale: getFirstValue(\n        chartAttr.vformatnumberscale,\n        chartAttr.formatnumberscale, '1'),\n      sdefaultnumberscale: getFirstValue(\n        chartAttr.vdefaultnumberscale,\n        chartAttr.defaultnumberscale),\n      snumberscaleunit: getFirstValue(\n        chartAttr.vnumberscaleunit, chartAttr.numberscaleunit),\n      vnumberscalevalue: getFirstValue(\n        chartAttr.vnumberscalevalue,\n        chartAttr.numberscalevalue),\n      sscalerecursively: getFirstValue(\n        chartAttr.vscalerecursively,\n        chartAttr.scalerecursively),\n      smaxscalerecursion: getFirstValue(\n        chartAttr.vmaxscalerecursion,\n        chartAttr.maxscalerecursion),\n      sscaleseparator: getFirstValue(chartAttr.vscaleseparator,\n        chartAttr.scaleseparator),\n      snumberprefix: getFirstValue(chartAttr.vnumberprefix,\n        chartAttr.numberprefix),\n      snumbersuffix: getFirstValue(chartAttr.vnumbersuffix,\n        chartAttr.numbersuffix),\n      sdecimals: getFirstValue(chartAttr.vdecimals,\n        chartAttr.decimals)\n    });\n    plotLineDashLen = conf.plotLineDashLen = pluckNumber(chartAttr.plotlinedashlen, 5); // eslint-disable-line good-practices/no-single-usage-variable\n    plotLineDashGap = conf.plotLineDashGap = pluckNumber(chartAttr.plotlinedashgap, 4); // eslint-disable-line good-practices/no-single-usage-variable\n\n    dataset.getFromEnv('number-formatter').configure(numberFormatterAttrs);\n\n    // Iterate through all level data\n    for (index = 0; index < dataLength; index += 1) {\n      // Individual data obj\n      // for further manipulation\n      setData = dataArr[index];\n      dataObj = dataStore[index];\n      if (!dataObj) {\n        dataObj = dataStore[index] = {};\n      }\n      !dataObj.config && (dataObj.config = {});\n      !dataObj.graphics && (dataObj.graphics = {});\n      config = dataObj.config;\n      if (setData && !setData.vline) {\n        open = config.open = numberFormatter.getCleanValue(setData.open);\n        close = config.close = numberFormatter.getCleanValue(setData.close);\n        volume = config.volume = numberFormatter.getCleanValue(setData.volume, true);\n        config.high = numberFormatter.getCleanValue(setData.high);\n        config.low = numberFormatter.getCleanValue(setData.low);\n        x = config.x = numberFormatter.getCleanValue(setData.x);\n\n        yMax = Math.max(yMax, volume);\n        yMin = Math.min(yMin, volume);\n        xMax = Math.max(xMax, x);\n        xMin = Math.min(xMin, x);\n        // valueText = parseUnsafeString(getValidValue(setData.valuetext, BLANK));\n\n        config.borderColor = getFirstColor(pluck(setData.bordercolor, close < open ? bearBorderColor\n          : bullBorderColor));\n        setAlpha = pluckNumber(setData.alpha, 100);\n        borderAlpha = pluckNumber(chartConfig.vplotborderalpha, setData.alpha, 100);\n        setColor = getFirstColor(pluck(setData.color, close < open ? bearFillColor\n          : bullFillColor));\n        // Set alpha of the shadow\n        pointShadow = {\n          opacity: conf.showShadow ? (setAlpha / 100) : 0\n        };\n        config.color = setColor;\n        config.alpha = setAlpha;\n        config.setLink = setData.link;\n        config.borderWidth = vPlotBorderThickness;\n        config.borderAlpha = borderAlpha;\n        config.y = volume;\n        config.colorArr = [{\n          color: config.color,\n          alpha: config.alpha\n        },\n        {\n          color: config.borderColor,\n          alpha: config.borderAlpha\n        }];\n        config.toolText = dataset._parseToolText(index);\n        config.toolTipValue = BLANKSTRING;\n        config.setValue = config._y = config.y;\n        if (volume !== 0 && conf.minAbsNonZeroValue > Math.abs(volume)) {\n          conf.minAbsNonZeroValue = Math.abs(volume);\n          conf.minAbsNonZeroData = config;\n        }\n        config.dashed = pluckNumber(conf.plotLineDashed, setData.dashed, 0);\n        config.plotBorderDashStyle = pluckNumber(setData.dashed)\n          ? getDashStyle(plotLineDashLen, plotLineDashGap) : DASH_DEF;\n        x = (x !== null) ? x : index + 1;\n        config._x = x;\n        config.shadow = pointShadow;\n      }\n    }\n    conf.defaultPadding = {\n      left: 0,\n      right: 0\n    };\n    conf.yMax = yMax;\n    conf.yMin = yMin;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    dataset.setState('dirty', true);\n  }\n  /**\n   * parse tooltext from the dataset json\n   * @param {number} i index of data\n   * @return {string} tooltext\n   */\n  _parseToolText (i) {\n    return __parseToolText.call(this, i);\n  }\n  /**\n   * fetches data indices wrt. the x pos value\n   * @param {number} x  x pos value\n   * @return {Array}    contains indices\n   */\n  getPlotIndices (x) {\n    var dataset = this,\n      i,\n      minX = Math.floor(x), // eslint-disable-line good-practices/no-single-usage-variable\n      maxX = Math.ceil(x), // eslint-disable-line good-practices/no-single-usage-variable\n      data,\n      returnIndices = [],\n      sortedData = dataset.config.JSONData && dataset.config.JSONData.data;\n\n    for (i = sortedData.length; i--;) {\n      data = sortedData[i];\n      if (data.x >= minX && data.x <= maxX) {\n        returnIndices.push(i);\n      }\n    }\n    return returnIndices;\n  }\n  /**\n   * Function that retunr the nearest plot details\n   * @param {number} chartXVal x-axis position of the mouse cordinate\n   * @param {number} chartYVal x-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest polt and whether it is hovered or not\n   */\n  _getHoveredPlot (chartXVal, chartYVal) {\n    var dataset = this,\n      chartX = chartXVal,\n      chartY = chartYVal,\n      xAxis = dataset.getFromEnv('xAxis'),\n      x,\n      i,\n      hoveredInfo,\n      pXs,\n      pX;\n\n    chartX += xAxis.getTranslation();\n    x = xAxis.getValue(chartX);\n    pXs = dataset.getPlotIndices(x);\n    // Checking for overlap between two cosecutive column plots along x-axis\n    for (i = pXs.length - 1; i > -1; i--) {\n      pX = pXs[i];\n      hoveredInfo = (pX - x > 0 ? dataset._checkPointerOverColumn(pX, chartX, chartY) ||\n        dataset._checkPointerOverColumn(pX - 1, chartX, chartY)\n        : dataset._checkPointerOverColumn(pX + 1, chartX, chartY) ||\n              dataset._checkPointerOverColumn(pX, chartX, chartY));\n      if (hoveredInfo) {\n        break;\n      }\n    }\n    return hoveredInfo;\n  }\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var conf = this.config;\n    return {\n      max: conf.yMax,\n      min: conf.yMin,\n      xMax: conf.xMax,\n      xMin: conf.xMin\n    };\n  }\n  /**\n   * Adds dataset Specific event Arguments\n   * @param {Object} _dataObj dataObject\n   */\n  // eslint-disable-next-line class-methods-use-this\n  addDatasetSpecificEvtArgs (_dataObj) {\n    let dataObj = _dataObj,\n      config = dataObj.config,\n      trackerConfig = dataObj.trackerConfig,\n      eventArgs = trackerConfig.eventArgs;\n    Object.assign(eventArgs, {\n      open: config.open,\n      close: config.close,\n      high: config.high,\n      low: config.low,\n      volume: config.volume,\n      alpha: config.alpha,\n      x: config.x,\n      displayValue: config.displayValue,\n      color: config.color,\n      borderColor: config.borderColor,\n      dashed: config.dashed\n    });\n  }\n  /**\n   * calculate min and max position to scroll\n   */\n  calculateScrollRange () {\n    let dataset = this,\n      conf = dataset.config;\n    conf.scrollMinVal = 0;\n    conf.scrollMaxVal = dataset.components.data && dataset.components.data.length;\n\n    // Since panning and data skipping are not applicable for scatter and bubble charts, the labels'\n    // minimum and maximum index to be drawn is the same as the plots' minimum and maximum index.\n    conf.scrollMinValForLabel = conf.scrollMinVal;\n    conf.scrollMaxValForLabel = conf.scrollMaxVal;\n  }\n  /**\n    * This function overrides drawlabel method\n    * it prevents the label drawing\n    */\n  // eslint-disable-next-line\n  drawLabel () {\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  getName () {\n    return 'volume';\n  }\n}\n\nexport default Volume;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Line from '@fusioncharts/charts/src/dataset/line';\nimport { pluck, pluckNumber, getValidValue,\n  getDashStyle, getFirstValue, toRaphaelColor, getFirstColor } from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport trendsetAnimation from './trendset.animation';\n\nlet HUNDRED = '100',\n  // The default value for stroke-dash attribute\n  DASH_DEF = 'none';\n\naddDep({\n  name: 'trendsetAnimation',\n  type: 'animationRule',\n  extension: trendsetAnimation\n});\n/**\n * Class def for bull candles chart API\n * This dataset is reponsible for drawing candle depending on open and close value\n */\nclass Trendset extends Line {\n  /**\n   * Sets the default value of drawLine to 1. This enables trendset component to draw the line.\n   *\n   * @memberof Trendset\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.drawLine = 1;\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    var dataset = this,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      trendset = dataset.config.JSONData,\n      index = dataset.index,\n      setDataArr = trendset.data || trendset.set || [],\n      conf = dataset.config,\n      dataObj,\n      itemValue,\n      dataStore = dataset.components.data,\n      dataStoreObj,\n      config,\n      maxValue = -Infinity,\n      minValue = +Infinity,\n      x,\n      length,\n      xMax = -Infinity,\n      xMin = +Infinity,\n      NumberFormatter = dataset.getFromEnv('number-formatter'),\n      // Trend-sets default properties\n      trendSetColor = getFirstColor(pluck(trendset.color, chartAttr.trendsetcolor, '666666')), // eslint-disable-line good-practices/no-single-usage-variable\n      trendSetAlpha = pluck(trendset.alpha, chartAttr.trendsetalpha, HUNDRED), // eslint-disable-line good-practices/no-single-usage-variable\n      trendSetThickness = pluckNumber(trendset.thickness, chartAttr.trendsetthickness, 2), // eslint-disable-line good-practices/no-single-usage-variable\n      trendSetDashed = Boolean(pluckNumber(trendset.dashed, chartAttr.trendsetdashed, 0)), // eslint-disable-line good-practices/no-single-usage-variable\n      trendSetDashLen = pluckNumber(trendset.dashlen, chartAttr.trendsetdashlen, 4), // eslint-disable-line good-practices/no-single-usage-variable\n      trendSetDashGap = pluckNumber(trendset.dashgap, chartAttr.trendsetdashgap, 4); // eslint-disable-line good-practices/no-single-usage-variable\n\n    conf.includeInLegend = pluckNumber(trendset.includeinlegend, 1);\n    conf.lineColor = trendSetColor;\n    conf.lineAlpha = trendSetAlpha;\n    conf.connectNullData = pluckNumber(chartAttr.connectnulldata, 0);\n    conf.linethickness = trendSetThickness;\n    conf.lineDashStyle = trendSetDashed ? getDashStyle(trendSetDashLen, trendSetDashGap) : DASH_DEF;\n    conf.name = getValidValue(trendset.name);\n    conf.includeInLegend = pluckNumber(trendset.includeinlegend, 1);\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    if (!dataStore) {\n      dataStore = dataset.components.data = [];\n    }\n    for (index = 0, length = setDataArr.length; index < length; index += 1) { // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj = setDataArr[index];\n      if (dataObj && !dataObj.vline) {\n        dataStoreObj = dataStore[index] = dataStore[index] || (dataStore[index] = {});\n        config = dataStoreObj.config = dataStoreObj.config || (dataStoreObj.config = {});\n        itemValue = config._y = config.setValue = NumberFormatter.getCleanValue(dataObj.value);\n        config.setColor = conf.lineColor;\n        config.setAlpha = conf.lineAlpha;\n        x = NumberFormatter.getCleanValue(dataObj.x);\n        x = config._x = config.x = x !== null ? x : index + 1;\n        maxValue = Math.max(maxValue, itemValue);\n        minValue = Math.min(minValue, itemValue);\n        xMin = Math.min(xMin, x);\n        xMax = Math.max(xMax, x);\n        // Parsing the anchor properties for set level\n        config.anchorProps = this._parseAnchorProperties(index);\n        config.hoverEffects = {};\n        if (!dataStoreObj.graphics) {\n          dataStoreObj.graphics = {};\n        }\n      }\n    }\n    conf.max = maxValue;\n    conf.min = minValue;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    dataset.getFromEnv('chartConfig').showLegend && dataset._addLegend();\n    dataset.setState('visible', true);\n    dataset.setState('dirty', true);\n  }\n  /**\n   * Function to register datasets in the internal data store of legend class.\n   */\n  _addLegend () {\n    var dataset = this,\n      conf = dataset.config,\n      legendItem,\n      legend = dataset.getFromEnv('legend');\n    if (conf.includeinlegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n      } else {\n        legendItem.configure({ style: legend.config.itemStyle,\n          hiddenStyle: legend.config.itemHiddenStyle,\n          datasetVisible: legend.config.datasetVisible,\n          hoverStyle: legend.config.itemHoverStyle });\n      }\n      legendItem.configure({\n        enabled: conf.includeInLegend,\n        interactiveLegend: false,\n        type: dataset.type,\n        drawLine: true,\n        label: getFirstValue(dataset.config.JSONData.name)\n      });\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          stroke: toRaphaelColor({\n            color: conf.lineColor,\n            alpha: HUNDRED\n          }),\n          rawFillColor: conf.lineColor\n        }\n      });\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var conf = this.config;\n    return {\n      max: conf.max,\n      min: conf.min,\n      xMax: conf.xMax,\n      xMin: conf.xMin\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'trendset';\n  }\n  /**\n    * This function overrides drawlabel method\n    * it prevents the label drawing\n    */\n  // eslint-disable-next-line\n  drawLabel () {\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'trendset';\n  }\n}\n\nexport default Trendset;\n","import line from '@fusioncharts/charts/src/dataset/line/index.animation';\nexport default {\n  'initial.trendset.trendset': line['initial.dataset.line']\n};\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport NumericAxis from '@fusioncharts/core/src/axis/numeric';\n\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvasArr = chart.getChildren('canvas'),\n    canvas = canvasArr[0],\n    canvasVolume = canvasArr[1],\n    showVolumeChart = chart.config.showVolumeChart,\n    zoomObj = {\n      zoomable: true,\n      pannable: true\n    },\n    conf,\n    axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n    axisRefVisualCartesianVol,\n    vYAxis,\n    yAxis,\n    xAxis,\n    redraw = () => axisRefVisualCartesian.asyncDraw(),\n    redrawVol = () => axisRefVisualCartesianVol.asyncDraw();\n\n  conf = chart._feedAxesRawData();\n  componentFactory(chart, NumericAxis, 'yAxis', showVolumeChart ? 2 : 1, conf.yAxisConfigure);\n  componentFactory(chart, NumericAxis, 'xAxis', 1, conf.xAxisConfigure);\n\n  yAxis = chart.getChildren('yAxis')[0];\n  vYAxis = chart.getChildren('yAxis')[1];\n  yAxis.setAxisConfig({\n    relativeAxis: vYAxis\n  });\n  vYAxis && vYAxis.setAxisConfig({\n    relativeAxis: yAxis\n  });\n  xAxis = chart.getChildren('xAxis')[0];\n\n  yAxis.setLinkedItem('canvas', canvas);\n  xAxis.setLinkedItem('canvas', canvas);\n\n  axisRefVisualCartesian.setLinkedItem(yAxis.getId(), yAxis);\n  axisRefVisualCartesian.setLinkedItem(xAxis.getId(), xAxis);\n\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, yAxis);\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, xAxis);\n\n  canvas.attachAxis(xAxis, false, chart.zoomX ? zoomObj : {});\n  canvas.attachAxis(yAxis, true, chart.zoomY ? zoomObj : {});\n  if (showVolumeChart) {\n    axisRefVisualCartesianVol = canvasVolume.getChildren('axisRefVisualCartesian')[0];\n    canvasVolume.attachAxis(xAxis, false, chart.zoomX ? zoomObj : {});\n\n    vYAxis.setLinkedItem('canvas', canvasVolume);\n    axisRefVisualCartesianVol.setLinkedItem(vYAxis.getId(), vYAxis);\n    axisRefVisualCartesianVol.setLinkedItem(xAxis.getId(), xAxis);\n    axisRefVisualCartesianVol.addExtEventListener('visiblerangeset', redrawVol, vYAxis);\n    axisRefVisualCartesianVol.addExtEventListener('visiblerangeset', redrawVol, xAxis);\n    canvasVolume.attachAxis(vYAxis, true, chart.zoomY ? zoomObj : {});\n  }\n\n  chart._setCategories();\n}\n","import Boxandwhisker2d from '@fusioncharts/powercharts/src/chart/boxandwhisker2d';\nexport default Boxandwhisker2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  COMMA,\n  pluck,\n  preDefStr,\n  attrTypeNum,\n  pluckNumber,\n  HUNDREDSTRING,\n  setAttribDefs\n} from '@fusioncharts/core/src/lib';\nimport extent from '@fusioncharts/utils/src/array/extent';\nimport MSColumn2D from '@fusioncharts/charts/src/chart/mscolumn2d';\nimport { scrollTo, setAxisScale, resetViewPortConfig, configurer }\n  from '@fusioncharts/charts/src/chart/_internal/utils/scroll-apis';\nimport BoxAndWhiskerDataset from '../../dataset/boxandwhisker';\nimport datasetFactory from '../../factories/boxandwhisker-dataset';\nimport BoxAndWhiskerMultiSeriesGroup from '../../dataset/groups/boxandwhisker-multiseries';\n\nsetAttribDefs && setAttribDefs({\n  whiskerslimitswidthratio: {\n    type: attrTypeNum,\n    pAttr: 'whiskerslimitswidthratio'\n  },\n  outliersupperrangeratio: {\n    type: attrTypeNum,\n    pAttr: 'outliersupperrangeratio'\n  },\n  outlierslowerrangeratio: {\n    type: attrTypeNum,\n    pAttr: 'outlierslowerrangeratio'\n  },\n  showalloutliers: {\n    type: attrTypeNum,\n    pAttr: 'showalloutliers'\n  },\n  showmean: {\n    type: attrTypeNum,\n    pAttr: 'showmean'\n  },\n  showsd: {\n    type: attrTypeNum,\n    pAttr: 'showsd'\n  },\n  showmd: {\n    type: attrTypeNum,\n    pAttr: 'showmd'\n  },\n  showqd: {\n    type: attrTypeNum,\n    pAttr: 'showqd'\n  },\n  showminvalues: {\n    type: attrTypeNum,\n    pAttr: 'showminvalues'\n  },\n  showmaxvalues: {\n    type: attrTypeNum,\n    pAttr: 'showmaxvalues'\n  },\n  showq1values: {\n    type: attrTypeNum,\n    pAttr: 'showq1values'\n  },\n  showq3values: {\n    type: attrTypeNum,\n    pAttr: 'showq3values'\n  },\n  showmedianvalues: {\n    type: attrTypeNum,\n    pAttr: 'showmedianvalues'\n  }\n});\nlet UNDEF,\n  POLYGON = preDefStr.POLYGON,\n  COLOR_000000 = preDefStr.colors.c000000,\n  BOXANDWHISKER_2D = 'boxandwhisker2d',\n  ABOVE = 'above',\n  COLON_STR = ': ';\n/**\n * class for Marimekko chartAPI\n */\nclass BoxAndWhisker2D extends MSColumn2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'BoxAndWhisker2D';\n  }\n  /**\n   * Provides the name of the chart\n   * @return {string} The name of the chart extension\n   */\n  getName () {\n    return 'BoxAndWhisker2D';\n  }\n\n  /**\n   * Function to state if inputOptions are to be used for this charts\n   * @return {Array} value\n   */\n  static includeInputOptions () {\n    return ['SwipeGesture'];\n  }\n\n  /**\n   * Constructor funtion for Marimekko chartAPI\n   */\n  constructor () {\n    super();\n    let iapi = this;\n    iapi.maxColWidth = +Infinity;\n    iapi.useErrorAnimation = 1;\n    iapi.avoidCrispError = 0;\n    iapi.plotSpacePercent = 20;\n    iapi.useplotgradientcolor = 1;\n    iapi.fireGroupEvent = true;\n    iapi.hasScroll = true;\n    iapi.eiMethods.scrollTo = scrollTo;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n\n  /**\n   * Set default chart configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.avgScrollPointWidth = 40;\n    config.decimals = 2;\n    config.defaultDatasetType = BOXANDWHISKER_2D;\n    config.showplotborder = 1;\n    config.plotborderdashlen = 5;\n    config.plotborderdashgap = 4;\n    config.plotfillalpha = HUNDREDSTRING;\n    config.useroundedges = 0;\n    config.plotborderthickness = 1;\n    config.showvalues = 1;\n    config.valuepadding = 2;\n    config.decimals = 2;\n    config.showtooltip = 1;\n    config.maxcolwidth = 50;\n    config.rotatevalues = 0;\n    config.use3dlighting = 1;\n    config.whiskerslimitswidthratio = 40;\n    config.outliersupperrangeratio = 0;\n    config.outlierslowerrangeratio = 0;\n    config.showalloutliers = 0;\n    config.showmean = 0;\n    config.showsd = 0;\n    config.showmd = 0;\n    config.showqd = 0;\n    config.showminvalues = 1;\n    config.showmaxvalues = 1;\n    config.showq1values = 0;\n    config.showq3values = 0;\n    config.showmedianvalues = 1;\n    config.tooltipsepchar = COLON_STR;\n\n    // default attributes of line\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEF;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEF;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEF;\n    config.anchorbordercolor = UNDEF;\n    config.anchorradius = 3;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEF;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n  }\n\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    configurer.call(this, dataObj);\n  }\n\n  /**\n   * Sets xAxis scale visible region\n   */\n  _setAxisScale () {\n    setAxisScale.call(this, BOXANDWHISKER_2D);\n  }\n\n  /**\n   * Reset view port\n   */\n  _resetViewPortConfig () {\n    resetViewPortConfig.call(this);\n  }\n\n  /**\n   * Function to return the custom json data for the mean, meadian, etc (line dataset) of boxAndWhisker\n   * @return {Object} The custom JSON Data\n   */\n  _getLineJSONdata () {\n    var iapi = this,\n      bwCalc = iapi.getChildren('BoxAndWhiskerStatisticalCalc')[0],\n      jsonData = iapi.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      datasets = jsonData.dataset,\n      len = datasets.length, // eslint-disable-line good-practices/no-single-usage-variable\n      showMean,\n      dataset,\n      data,\n      dataLen,\n      setData,\n      derivedDS = [],\n      currDerivedDS,\n      requiredSubDs = [],\n      derivedDataValue = [],\n      currDerivedDataVal,\n      subDSLen,\n      currSubDS,\n      showSD,\n      showQD,\n      showMD,\n      outliers,\n      outliersArr,\n      valueMin,\n      valueMax,\n      value,\n      meanValue,\n      sdValue,\n      mdValue,\n      qdValue,\n      fn = function (val) {\n        value = Number(val);\n\n        [valueMin, valueMax] = bwCalc.values ? extent(bwCalc.values) : [setData.min, setData.max];\n        (value < valueMin || value > valueMax) && outliersArr.push({\n          showvalue: setData.showoutliervalue,\n          valueposition: setData.outliervalueposition,\n          value: value,\n          index: j,\n          anchorbgcolor: setData.outliericoncolor,\n          anchorbordercolor: setData.outliericonbordercolor,\n          anchorradius: setData.outliericonradius,\n          anchoralpha: setData.outliericonalpha,\n          anchorbgalpha: setData.outliericonalpha,\n          anchorsides: setData.outliericonsides,\n          dip: setData.outliericonshape\n        });\n      },\n      j,\n      k,\n      i;\n\n    // Deciding for which which all datasets we need which all sub-datasets\n    for (i = 0; i < len; i++) {\n      dataset = datasets[i];\n      currSubDS = requiredSubDs[i] = {};\n      currDerivedDataVal = derivedDataValue[i] = {\n        showMean: {\n          seriesname: 'Mean',\n          valueposition: pluck(dataset.meanvalueposition, chartAttrs.meanvalueposition, ABOVE),\n          showvalues: pluckNumber(dataset.showmeanvalues, chartAttrs.showmeanvalues, 0),\n          anchorbgcolor: pluck(dataset.meaniconcolor, chartAttrs.meaniconcolor, COLOR_000000),\n          anchorbordercolor: pluck(dataset.meaniconbordercolor, chartAttrs.meaniconbordercolor, COLOR_000000),\n          anchorradius: pluckNumber(dataset.meaniconradius, chartAttrs.meaniconradius, 5),\n          anchoralpha: pluck(dataset.alpha, dataset.meaniconalpha, chartAttrs.meaniconalpha),\n          linethickness: pluck(dataset.linethickness, chartAttrs.linethickness, 1),\n          anchorsides: pluck(dataset.meaniconsides, chartAttrs.meaniconsides, 3),\n          showline: !pluckNumber(dataset.drawmeanconnector, chartAttrs.drawmeanconnector),\n          dip: pluck(dataset.meaniconshape, chartAttrs.meaniconshape, POLYGON),\n          color: pluck(dataset.meaniconcolor, chartAttrs.meaniconcolor, COLOR_000000),\n          data: []\n        },\n        showSD: {\n          seriesname: 'SD',\n          valueposition: pluck(dataset.sdvalueposition, chartAttrs.sdvalueposition, ABOVE),\n          showvalues: pluckNumber(dataset.showsdvalues, chartAttrs.showsdvalues, 0),\n          anchorbgcolor: pluck(dataset.sdiconcolor, chartAttrs.sdiconcolor, COLOR_000000),\n          anchorbordercolor: pluck(dataset.sdiconbordercolor, chartAttrs.sdiconbordercolor, COLOR_000000),\n          anchorradius: pluckNumber(dataset.sdiconradius, chartAttrs.sdiconradius, 5),\n          anchoralpha: pluck(dataset.alpha, dataset.sdiconalpha, chartAttrs.sdiconalpha),\n          anchorbgalpha: pluck(dataset.sdiconalpha, chartAttrs.sdiconalpha, 100),\n          linethickness: pluck(dataset.linethickness, chartAttrs.linethickness, 1),\n          anchorsides: pluck(dataset.sdiconsides, chartAttrs.sdiconsides, 3),\n          showline: !pluckNumber(dataset.drawsdconnector, chartAttrs.drawsdconnector),\n          dip: pluck(dataset.sdiconshape, chartAttrs.sdiconshape, POLYGON),\n          color: pluck(dataset.sdiconcolor, chartAttrs.sdiconcolor, COLOR_000000),\n          data: []\n        },\n        showQD: {\n          seriesname: 'QD',\n          valueposition: pluck(dataset.qdvalueposition, chartAttrs.qdvalueposition, ABOVE),\n          showvalues: pluckNumber(dataset.showqdvalues, chartAttrs.showqdvalues, 0),\n          anchorbgcolor: pluck(dataset.qdiconcolor, chartAttrs.qdiconcolor, COLOR_000000),\n          anchorbordercolor: pluck(dataset.qdiconbordercolor, chartAttrs.qdiconbordercolor, COLOR_000000),\n          anchorradius: pluckNumber(dataset.qdiconradius, chartAttrs.qdiconradius, 5),\n          anchoralpha: pluck(dataset.alpha, dataset.qdiconalpha, chartAttrs.qdiconalpha),\n          anchorbgalpha: pluck(dataset.qdiconalpha, chartAttrs.qdiconalpha, 100),\n          linethickness: pluck(dataset.linethickness, chartAttrs.linethickness, 1),\n          anchorsides: pluck(dataset.qdiconsides, chartAttrs.qdiconsides, 3),\n          showline: !pluckNumber(dataset.drawqdconnector, chartAttrs.drawqdconnector),\n          dip: pluck(dataset.qdiconshape, chartAttrs.qdiconshape, POLYGON),\n          color: pluck(dataset.qdiconcolor, chartAttrs.qdiconcolor, COLOR_000000),\n          data: []\n        },\n        showMD: {\n          seriesname: 'MD',\n          valueposition: pluck(dataset.mdvalueposition, chartAttrs.mdvalueposition, ABOVE),\n          showvalues: pluckNumber(dataset.showmdvalues, chartAttrs.showmdvalues, 0),\n          anchorbgcolor: pluck(dataset.mdiconcolor, chartAttrs.mdiconcolor, COLOR_000000),\n          anchorbordercolor: pluck(dataset.mdiconbordercolor, chartAttrs.mdiconbordercolor, COLOR_000000),\n          anchorradius: pluckNumber(dataset.mdiconradius, chartAttrs.mdiconradius, 5),\n          anchoralpha: pluck(dataset.alpha, dataset.mdiconalpha, chartAttrs.mdiconalpha),\n          anchorbgalpha: pluck(dataset.mdiconalpha, chartAttrs.mdiconalpha, 100),\n          linethickness: pluck(dataset.linethickness, chartAttrs.linethickness, 1),\n          anchorsides: pluck(dataset.mdiconsides, chartAttrs.mdiconsides, 3),\n          showline: !pluckNumber(dataset.drawmdconnector, chartAttrs.drawmdconnector),\n          dip: pluck(dataset.mdiconshape, chartAttrs.mdiconshape, POLYGON),\n          color: pluck(dataset.mdiconcolor, chartAttrs.mdiconcolor, COLOR_000000),\n          data: []\n        },\n        outliers: {\n          seriesname: 'Outliers',\n          valueposition: pluck(dataset.outliervalueposition, chartAttrs.outliervalueposition, ABOVE),\n          showvalues: pluckNumber(dataset.showoutliervalues, chartAttrs.showoutliervalues, 0),\n          anchorbgcolor: pluck(dataset.outliericoncolor, chartAttrs.outliericoncolor, COLOR_000000),\n          anchorbordercolor: pluck(dataset.outliericonbordercolor, chartAttrs.outliericonbordercolor, COLOR_000000),\n          anchorradius: pluckNumber(dataset.outliericonradius, chartAttrs.outliericonradius, 5),\n          anchoralpha: pluck(dataset.alpha, dataset.outliericonalpha, chartAttrs.outliericonalpha),\n          includeinlegend: dataset.seriesname ? 1 : 0,\n          anchorbgalpha: pluck(dataset.outliericonalpha, chartAttrs.outliericonalpha, 100),\n          linethickness: pluck(dataset.linethickness, chartAttrs.linethickness, 1),\n          anchorsides: pluck(dataset.outliericonsides, chartAttrs.outliericonsides, 3),\n          showline: !pluckNumber(dataset.drawoutliersconnector, chartAttrs.drawoutliersconnector),\n          color: pluck(dataset.outliericoncolor, chartAttrs.outliericoncolor, COLOR_000000),\n          dip: pluck(dataset.outliericonshape, chartAttrs.outliericonshape, POLYGON),\n          data: []\n        }\n      };\n      showMean = pluckNumber(dataset.showmean, chartAttrs.showmean, 0);\n      showSD = pluckNumber(dataset.showsd, chartAttrs.showsd, 0);\n      showQD = pluckNumber(dataset.showqd, chartAttrs.showqd, 0);\n      showMD = pluckNumber(dataset.showmd, chartAttrs.showmd, 0);\n\n      data = dataset.data;\n      dataLen = (data && data.length) || 0;\n      for (j = 0; j < dataLen; j++) {\n        setData = data[j];\n        if (setData.min && setData.max && setData.q1 && setData.q3 && setData.median) {\n          meanValue = setData.mean;\n          sdValue = setData.sd;\n          mdValue = setData.md;\n          qdValue = setData.qd;\n        } else {\n          bwCalc.setArray(setData.value);\n          bwCalc.getQuartiles();\n          meanValue = bwCalc.getMean();\n          sdValue = bwCalc.getSD();\n          qdValue = bwCalc.getQD();\n          mdValue = bwCalc.getMD();\n        }\n        outliers = setData.outliers;\n\n        // Checking if at all mean, sd, etc datasets are required\n        showMean = currSubDS.showMean = currSubDS.showMean || pluckNumber(setData.showmean, showMean);\n        showSD = currSubDS.showSD = currSubDS.showSD || pluckNumber(setData.showsd, showSD);\n        showQD = currSubDS.showQD = currSubDS.showQD || pluckNumber(setData.showqd, showQD);\n        showMD = currSubDS.showMD = currSubDS.showMD || pluckNumber(setData.showmd, showMD);\n\n        // Storing the value of mean, sd as the same key of the previous check for ease of use\n        currDerivedDataVal.showMean.data.push({\n          showvalue: setData.showmeanvalue,\n          valueposition: setData.meanvalueposition,\n          value: showMean && (meanValue || UNDEF),\n          anchorbgcolor: setData.meaniconcolor,\n          anchorbordercolor: setData.meaniconbordercolor,\n          anchorradius: setData.meaniconradius,\n          anchoralpha: setData.meaniconalpha,\n          anchorbgalpha: setData.meaniconalpha,\n          anchorsides: setData.meaniconsides,\n          dip: setData.meaniconshape\n        });\n        currDerivedDataVal.showSD.data.push({\n          showvalue: setData.showsdvalue,\n          valueposition: setData.sdvalueposition,\n          value: showSD && (sdValue || UNDEF),\n          anchorbgcolor: setData.sdiconcolor,\n          anchorbordercolor: setData.sdiconbordercolor,\n          anchorradius: setData.sdiconradius,\n          anchoralpha: setData.sdiconalpha,\n          anchorbgalpha: setData.sdiconalpha,\n          anchorsides: setData.sdiconsides,\n          dip: setData.sdiconshape\n        });\n        currDerivedDataVal.showQD.data.push({\n          showvalue: setData.showqdvalue,\n          valueposition: setData.qdvalueposition,\n          value: showQD && (qdValue || UNDEF),\n          anchorbgcolor: setData.qdiconcolor,\n          anchorbordercolor: setData.qdiconbordercolor,\n          anchorradius: setData.qdiconradius,\n          anchoralpha: setData.qdiconalpha,\n          anchorbgalpha: setData.qdiconalpha,\n          anchorsides: setData.qdiconsides,\n          dip: setData.qdiconshape\n        });\n        currDerivedDataVal.showMD.data.push({\n          showvalue: setData.showmdvalue,\n          valueposition: setData.mdvalueposition,\n          value: showMD && (mdValue || UNDEF),\n          anchorbgcolor: setData.mdiconcolor,\n          anchorbordercolor: setData.mdiconbordercolor,\n          anchorradius: setData.mdiconradius,\n          anchoralpha: setData.mdiconalpha,\n          anchorbgalpha: setData.mdiconalpha,\n          anchorsides: setData.mdiconsides,\n          dip: setData.mdiconshape\n        });\n\n        if (outliers) {\n          outliersArr = currDerivedDataVal.outliers.data;\n          outliers.split(COMMA).forEach(fn);\n          currSubDS.outliers = true;\n        }\n      }\n    }\n\n    // Creating the subDataset as per their requirements\n    subDSLen = requiredSubDs.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (k = 0; k < subDSLen; k++) {\n      currSubDS = requiredSubDs[k];\n      currDerivedDS = derivedDS[k] = [];\n      for (i in currSubDS) {\n        currSubDS[i] && currDerivedDS.push(derivedDataValue[k][i]);\n      }\n    }\n\n    return derivedDS;\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object} return column dataset\n   */\n  getDSdef () {\n    return BoxAndWhiskerDataset;\n  }\n\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object} Multiseries column group definition\n   */\n  getDSGroupdef () {\n    return BoxAndWhiskerMultiSeriesGroup;\n  }\n}\nexport default BoxAndWhisker2D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport LineDataset from './boxandwhiskerline';\nimport { pluck, pluckNumber, toRaphaelColor, parseConfiguration, HUNDREDSTRING, parseUnsafeString,\n  parseTooltext, getDashStyle, getDefinedColor, BLANKSTRING, preDefStr, COMMASTRING, COMMA, getValidValue, POSITION_LEFT, POSITION_MIDDLE,\n  visibleStr, defined, getFirstValue, datasetFactory, getSuggestiveRotation,\n  convertColor, getLightColor, getColumnColor, getFirstAlpha, getFirstColor }\n  from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport boxandwhisker2dAnimation from './index.animation';\n\nlet PLOTBORDERCOLOR = 'plotBorderColor',\n  PLOTGRADIENTCOLOR = 'plotGradientColor',\n  SHOWSHADOW = 'showShadow',\n  SETROLLOVERATTR = 'setRolloverAttr',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  UNDEFINED,\n  colorStrings = preDefStr.colors,\n  COLOR_000000 = colorStrings.c000000,\n  strokeColor = COLOR_000000,\n  LABEL = preDefStr.LABEL,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  UNDERSCORE = preDefStr.UNDERSCORE,\n  POINTER = preDefStr.POINTER,\n  BLANK = preDefStr.BLANK,\n  ROUND = preDefStr.ROUND,\n  GROUPID = preDefStr.GROUPID,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  showHoverEffectStr = preDefStr.showHoverEffectStr,\n  EVENTARGS = preDefStr.EVENTARGS,\n  // dataLabelStr = preDefStr.dataLabelStr,\n  // shadowStr = preDefStr.shadowStr,\n  POSITION_END = preDefStr.POSITION_END,\n  M = 'M',\n  H = 'H',\n  V = 'V',\n  BOLDSTARTTAG = '<b>',\n  BOLDENDTAG = '</b>',\n  BREAKSTRING = '<br />',\n  MAXIMUM_STR = 'Maximum',\n  Q3_STR = 'Q3',\n  MEDIAN_STR = 'Median',\n  Q1_STR = 'Q1',\n  MINIMUM_STR = 'Minimum',\n  pStr = preDefStr.pStr,\n  sStr = preDefStr.sStr,\n  NONE = 'none',\n  createChildIndices = function (index, len) {\n    let indices = [],\n      length = len;\n    while (length) {\n      indices.unshift(index + Number('.' + length));\n      length--;\n    }\n    return indices;\n  },\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {Object} attr  Attributes applied to the created group.\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (attr, parentContainer, dataset) {\n    return dataset.getFromEnv('animationManager').setAnimation({\n      el: 'group',\n      attr: attr,\n      container: parentContainer,\n      component: dataset,\n      label: 'group'\n    });\n  },\n  _hide = function () {\n    // eslint-disable-next-line good-practices/no-function-dependency\n    return function () {\n      this.hide();\n    };\n  };\naddDep({\n  name: 'boxandwhisker2dAnimation',\n  type: 'animationRule',\n  extension: boxandwhisker2dAnimation\n});\n/**\n * Class for boxAndWhisker Dataset\n */\nclass BoxAndWhiskerDataset extends ColumnDataset {\n  /**\n   * function to create group for dataset\n   */\n  createContainer () {\n    var dataset = this,\n      parent = dataset.getLinkedParent(),\n      group = (dataset.groupName || dataset.dsGroup || dataset.type),\n      parentContainer,\n      parentShadowContainer;\n\n    !parent.getChildContainer(group + 'VcanvasGroup') && (group = 'default');\n    parentContainer = parent.getChildContainer(group + 'VcanvasGroup');\n    parentShadowContainer = parent.getChildContainer(group + 'ShadowVcanvasGroup'); // eslint-disable-line good-practices/no-single-usage-variable\n\n    !dataset.getContainer('shadowGroup') && dataset.addContainer('shadowGroup',\n      createGroup({ name: 'shadow-group' }, parentShadowContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('lowerBoxGroup',\n      createGroup({ name: 'lower-box-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('upperBoxGroup',\n      createGroup({ name: 'upper-box-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('upperWhiskerGroup',\n      createGroup({ name: 'upper-whisker-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('lowerWhiskerGroup',\n      createGroup({ name: 'lower-whisker-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('medianGroup',\n      createGroup({ name: 'median-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('labelGroup') && dataset.addContainer('labelGroup',\n      createGroup({ name: 'label-group',\n        'class': 'fusioncharts-datalabels' }, parent.getChildContainer('vcanvasLabelGroup'), dataset));\n  }\n\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    var dataset = this,\n      // chart = dataset.chart,\n      conf = dataset.config,\n      JSONData = dataset.config.JSONData,\n      setDataArr = JSONData.data,\n      setDataLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      // categories = chart.config.categories,\n      // singleSeries = chart.config.singleseries,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      xAxis = dataset.getFromEnv('xAxis'),\n      catLen = xAxis.getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      len = Math.min(catLen, setDataLen), // eslint-disable-line good-practices/no-single-usage-variable\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      colorM = dataset.getFromEnv('color-manager'),\n      index = conf.index,\n      plotColor = conf.plotColor = colorM.getPlotColor(index),\n      plotBorderDash = pluckNumber(JSONData.dashed, chartAttr.plotborderdashed), // eslint-disable-line good-practices/no-single-usage-variable\n      tooltipSepChar = parseUnsafeString(pluck(chartAttr.tooltipsepchar, ': ')),\n      // parseTooltext = lib.parseTooltext,\n      formatedVal,\n      parserConfig,\n      setTooltext,\n      macroIndices,\n      tempPlotfillAngle,\n      toolText,\n      plotDashLen,\n      plotDashGap,\n      plotBorderThickness,\n      isRoundEdges,\n      showHoverEffect,\n      plotfillAngle,\n      plotFillAlpha,\n      // plotRadius,\n      plotFillRatio,\n      plotgradientcolor,\n      plotBorderAlpha,\n      plotBorderColor,\n      // plotBorderDashStyle,\n      initailPlotBorderDashStyle,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      label,\n      // colorArr,\n      upperBoxHoverColor,\n      upperBoxHoverAlpha,\n      upperBoxBorderHoverColor,\n      upperBoxBorderHoverAlpha,\n      upperBoxBorderHoverThickness,\n      lowerBoxHoverColor,\n      lowerBoxHoverAlpha,\n      lowerBoxBorderHoverColor,\n      lowerBoxBorderHoverAlpha,\n      lowerBoxBorderHoverThickness,\n      upperQuartileHoverColor,\n      upperQuartileHoverAlpha,\n      upperQuartileHoverThickness,\n      lowerQuartileHoverColor,\n      lowerQuartileHoverAlpha,\n      lowerQuartileHoverThickness,\n      medianHoverColor,\n      medianHoverAlpha,\n      medianHoverThickness,\n      // getDashStyle = lib.getDashStyle,\n      dataStore = dataset.components.data,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      toolTipValue,\n      setDisplayValue,\n      // definedGroupPadding,\n\n      // use3DLighting,\n      parentYAxis,\n      setDataDashed,\n      setDataPlotDashLen,\n      setDataPlotDashGap,\n      i,\n      maxValue = -Infinity,\n      minValue = +Infinity,\n      bwCalc = dataset.getFromEnv('BoxAndWhiskerStatisticalCalc'),\n      quartile,\n      q1,\n      q3,\n      limits,\n      min,\n      max,\n      medianValue,\n      mean,\n      md,\n      sd,\n      qd,\n      upperBoxColor,\n      upperBoxAlpha,\n      lowerBoxColor,\n      lowerBoxAlpha,\n      upperWhiskerAlpha,\n      isMeanValueEnabledInData,\n      isSDValueEnabledInData,\n      isMDValueEnabledInData,\n      isQDValueEnabledInData,\n      isOutliersValueEnabledInData,\n      difference,\n      lowerWhiskerAlpha,\n      upperQuartileRawColor,\n      upperQuartileAlpha,\n      upperBoxBorderRawColor,\n      upperBoxBorderAlpha,\n      lowerBoxBorderRawColor,\n      lowerBoxBorderAlpha,\n      lowerQuartileRawColor,\n      lowerQuartileAlpha,\n      isMDEnabled,\n      isSDEnabled,\n      isQDEnabled,\n      isOutliersEnabled,\n      isMeanEnabled,\n      defaultValue,\n      maxmin;\n\n    dataset.setState('visible', !!(pluckNumber(dataset.config.JSONData.visible,\n      !Number(dataset.config.JSONData.initiallyhidden), 1) === 1));\n\n    parseConfiguration(JSONData, conf, chartConfig, { data: true });\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    conf.seriesname = parseUnsafeString(JSONData.seriesname);\n    conf.includeInLegend = pluckNumber(JSONData.includeinlegend, (conf.seriesname ? 1 : 0));\n    conf.legendSymbolColor = conf.plotColor;\n    plotDashLen = conf.plotborderdashlen;\n    plotDashGap = conf.plotborderdashgap;\n    plotFillAlpha = conf.plotfillalpha;\n    isRoundEdges = conf.useroundedges;\n    plotFillRatio = conf.ratio; // eslint-disable-line good-practices/no-single-usage-variable\n    plotBorderThickness = conf.plotborderthickness;\n\n    conf.rotatevalues && (conf.rotatevalues = 270);\n\n    conf.plotfillAngle = plotfillAngle = pluckNumber(360 - chartAttr.plotfillangle, 90);\n    conf.plotColor = plotColor = pluck(JSONData.color, plotColor);\n    conf.plotRadius = pluckNumber(chartAttr.useroundedges, isRoundEdges ? 1 : 0);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.plotgradientcolor = plotgradientcolor = getDefinedColor(chartAttr.plotgradientcolor, // eslint-disable-line good-practices/no-single-usage-variable\n      colorM.getColor(PLOTGRADIENTCOLOR));\n    !chartConfig.useplotgradientcolor && (plotgradientcolor = BLANKSTRING); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.plotBorderAlpha = plotBorderAlpha = conf.showplotborder ? pluck(chartAttr.plotborderalpha,\n      plotFillAlpha, HUNDREDSTRING) : 0;\n    conf.plotBorderColor = plotBorderColor = pluck(chartAttr.plotbordercolor,\n      colorM.getColor(PLOTBORDERCOLOR));\n    conf.plotBorderDashStyle = initailPlotBorderDashStyle = plotBorderDash // eslint-disable-line good-practices/no-single-usage-variable\n      ? getDashStyle(plotDashLen, plotDashGap, plotBorderThickness) : NONE;\n\n    conf.showShadow = isRoundEdges ? pluckNumber(chartAttr.showshadow, 1)\n      : pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.showHoverEffect = showHoverEffect = pluckNumber(chartAttr.plothovereffect,\n      chartAttr.showhovereffect, UNDEFINED);\n\n    // conf.definedGroupPadding = definedGroupPadding = Math.max(pluckNumber(chartAttr.plotspacepercent), 0);\n    // conf.plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0);\n\n    conf.parentYAxis = parentYAxis = pluck(JSONData.parentyaxis && JSONData.parentyaxis.toLowerCase(), // eslint-disable-line good-practices/no-single-usage-variable\n      pStr) === sStr ? 1 : 0;\n\n    conf.dataSeparator = COMMASTRING;\n\n    conf.textDirection = chartAttr.hasrtltext === '1' ? 'rtl' : BLANKSTRING;\n\n    conf.showMeanLegend = conf.showSDLegend = conf.showMDLegend = conf.showQDLegend =\n      conf.showOutliersLegend = 0;\n\n    !dataset.components.data && (dataset.components.data = []);\n    dataStore = dataset.components.data;\n\n    conf.upperBoxColor = upperBoxColor = pluck(JSONData.upperboxcolor,\n      chartAttr.upperboxcolor, colorM.getPlotColor(index * 2));\n\n    upperBoxAlpha = conf.upperBoxAlpha = pluck(JSONData.upperboxalpha,\n      chartAttr.upperboxalpha, plotFillAlpha, HUNDREDSTRING);\n\n    conf.lowerBoxColor = lowerBoxColor = pluck(JSONData.lowerboxcolor,\n      chartAttr.lowerboxcolor, colorM.getPlotColor((index * 2) + 1));\n\n    lowerBoxAlpha = conf.lowerBoxAlpha = pluck(JSONData.lowerboxalpha,\n      chartAttr.lowerboxalpha, plotFillAlpha, HUNDREDSTRING);\n\n    // Parsing the attributes and values at set level.\n    for (i = 0; i < len; i++) {\n      setData = setDataArr && setDataArr[i];\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n\n      if (setData.min && setData.max && setData.q1 && setData.q3 && setData.median) {\n        quartile = {\n          q1: setData.q1,\n          q3: setData.q3\n        };\n        q1 = quartile.q1;\n        q3 = quartile.q3;\n        limits = {\n          min: setData.min,\n          max: setData.max\n        };\n        config.min = min = limits.min;\n        config.max = max = limits.max;\n        medianValue = setData.median;\n        config.mean = mean = setData.mean;\n        config.md = md = setData.md;\n        config.sd = sd = setData.sd;\n        config.qd = qd = setData.qd;\n        config.outliers = setData.outliers;\n        config.explicitData = true;\n      } else if (setData.value) {\n        config.outliers = setData.outliers;\n        config.rawValue = setData.value;\n        bwCalc.setArray(setData.value);\n        quartile = bwCalc.getQuartiles();\n        q1 = quartile.q1;\n        q3 = quartile.q3;\n\n        limits = bwCalc.getMinMax();\n        config.min = min = limits.min;\n        config.max = max = limits.max;\n        medianValue = bwCalc.getMedian();\n        config.mean = mean = bwCalc.getMean();\n        config.md = md = bwCalc.getMD();\n        config.sd = sd = bwCalc.getSD();\n        config.qd = qd = bwCalc.getQD();\n        config.explicitData = false;\n        // get the valid value\n        // highValue = itemValue = max;\n      } else {\n        config.setValue = UNDEFINED;\n        config.explicitData = false;\n        continue;\n      }\n\n      // if (setData.outliers) {\n      //   config.outliers = setData.outliers.split(COMMA);\n      //   maxNumberOfOutliers = Math.max(maxNumberOfOutliers, config.outliers.length);\n      // }\n\n      // config.showMean = showMean = pluckNumber(setData.showmean, conf.showmean);\n      // config.showSD = showSD = pluckNumber(setData.showsd, conf.showsd);\n      // config.showMD = showMD = pluckNumber(setData.showmd, conf.showmd);\n      // config.showQD = showQD = pluckNumber(setData.showqd, conf.showqd);\n      // setData.outliers && (conf.showOutliersLegend = 1);\n\n      // showMean && (conf.showMeanLegend = 1);\n      // showSD && (conf.showSDLegend = 1);\n      // showMD && (conf.showMDLegend = 1);\n      // showQD && (conf.showQDLegend = 1);\n\n      upperQuartileRawColor = pluck(setData.upperquartilecolor, JSONData.upperquartilecolor,\n        chartAttr.upperquartilecolor, chartAttr.plotbordercolor, colorM.getColor(PLOTBORDERCOLOR));\n      upperQuartileAlpha = pluckNumber(setData.upperquartilealpha, JSONData.upperquartilealpha,\n        chartAttr.upperquartilealpha, chartAttr.plotborderalpha,\n        100);\n      config.upperQuartile = {\n        value: q3,\n        color: convertColor(upperQuartileRawColor, upperQuartileAlpha),\n        rawColor: upperQuartileRawColor,\n        alpha: upperQuartileAlpha,\n        borderWidth: pluckNumber(\n          setData.upperquartilethickness, JSONData.upperquartilethickness,\n          chartAttr.upperquartilethickness, chartAttr.plotborderthickness,\n          !isRoundEdges ? 1 : 0),\n\n        displayValue: numberFormatter.dataLabels(q3)\n      };\n\n      lowerQuartileRawColor = pluck(setData.lowerquartilecolor, JSONData.lowerquartilecolor,\n        chartAttr.lowerquartilecolor, chartAttr.plotbordercolor, colorM.getColor(PLOTBORDERCOLOR));\n      lowerQuartileAlpha = (setData.lowerquartilealpha, JSONData.lowerquartilealpha,\n      chartAttr.lowerquartilealpha, chartAttr.plotborderalpha,\n      100);\n      config.lowerQuartile = {\n        value: q1,\n        color: convertColor(lowerQuartileRawColor, lowerQuartileAlpha),\n        rawColor: lowerQuartileRawColor,\n        alpha: lowerQuartileAlpha,\n        borderWidth: pluckNumber(\n          setData.lowerquartilethickness, JSONData.lowerquartilethickness,\n          chartAttr.lowerquartilethickness, chartAttr.plotborderthickness,\n          !isRoundEdges ? 1 : 0),\n\n        displayValue: numberFormatter.dataLabels(q1)\n      };\n      config.valuePadding = pluckNumber(setData.valuepadding, conf.valuepadding);\n\n      upperBoxBorderRawColor = pluck(setData.upperboxbordercolor, JSONData.upperboxbordercolor,\n        chartAttr.upperboxbordercolor, chartAttr.plotbordercolor,\n        colorM.getColor(PLOTBORDERCOLOR));\n      upperBoxBorderAlpha = pluckNumber(setData.upperboxborderalpha, JSONData.upperboxborderalpha,\n        chartAttr.upperboxborderalpha, chartAttr.plotborderalpha, 100);\n      config.upperBoxBorder = {\n        color: convertColor(upperBoxBorderRawColor, upperBoxBorderAlpha),\n        rawColor: upperBoxBorderRawColor,\n        alpha: upperBoxBorderAlpha,\n        borderWidth: pluckNumber(\n          setData.upperboxborderthickness, JSONData.upperboxborderthickness,\n          chartAttr.upperboxborderthickness, !isRoundEdges && chartAttr.plotborderthickness,\n          !isRoundEdges ? 1 : 0)\n      };\n\n      lowerBoxBorderRawColor = pluck(setData.lowerboxbordercolor, JSONData.lowerboxbordercolor,\n        chartAttr.lowerboxbordercolor, chartAttr.plotbordercolor,\n        colorM.getColor(PLOTBORDERCOLOR));\n      lowerBoxBorderAlpha = pluckNumber(setData.lowerboxborderalpha, JSONData.lowerboxborderalpha,\n        chartAttr.lowerboxborderalpha, chartAttr.plotborderalpha, 100);\n      config.lowerBoxBorder = {\n        color: convertColor(lowerBoxBorderRawColor, lowerBoxBorderAlpha),\n        rawColor: lowerBoxBorderRawColor,\n        alpha: lowerBoxBorderAlpha,\n        borderWidth: pluckNumber(\n          setData.lowerboxborderthickness, JSONData.lowerboxborderthickness,\n          chartAttr.lowerboxborderthickness, !isRoundEdges && chartAttr.plotborderthickness,\n          !isRoundEdges ? 1 : 0)\n      };\n\n      config.median = {\n        value: medianValue,\n        color: convertColor(pluck(\n          setData.mediancolor, JSONData.mediancolor,\n          chartAttr.mediancolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR)),\n        pluckNumber(setData.medianalpha, JSONData.medianalpha,\n          chartAttr.medianalpha, chartAttr.plotborderalpha,\n          100)),\n        borderWidth: pluckNumber(\n          setData.medianthickness, JSONData.medianthickness,\n          chartAttr.medianthickness, chartAttr.plotborderthickness,\n          1),\n\n        displayValue: numberFormatter.dataLabels(medianValue)\n      };\n      conf.upperBoxColor = upperBoxColor = pluck(setData.upperboxcolor, JSONData.upperboxcolor,\n        chartAttr.upperboxcolor, colorM.getPlotColor(index * 2));\n\n      upperBoxAlpha = conf.upperBoxAlpha = pluck(setData.upperboxalpha, JSONData.upperboxalpha,\n        chartAttr.upperboxalpha, plotFillAlpha, HUNDREDSTRING);\n\n      conf.lowerBoxColor = lowerBoxColor = pluck(setData.lowerboxcolor, JSONData.lowerboxcolor,\n        chartAttr.lowerboxcolor, colorM.getPlotColor((index * 2) + 1));\n\n      lowerBoxAlpha = conf.lowerBoxAlpha = pluck(setData.lowerboxalpha, JSONData.lowerboxalpha,\n        chartAttr.lowerboxalpha, plotFillAlpha, HUNDREDSTRING);\n\n      config.upperBoxColor = upperBoxColor;\n      config.upperBoxAlpha = upperBoxAlpha;\n      config.upperColorArr = getColumnColor(\n        upperBoxColor,\n        upperBoxAlpha,\n        UNDEFINED,\n        UNDEFINED,\n        isRoundEdges,\n        plotBorderColor,\n        plotBorderAlpha.toString(),\n        0,\n        false\n      );\n\n      config.lowerBoxColor = lowerBoxColor;\n      config.lowerBoxAlpha = lowerBoxAlpha;\n      config.lowerColorArr = getColumnColor(\n        lowerBoxColor,\n        lowerBoxAlpha,\n        UNDEFINED,\n        UNDEFINED,\n        isRoundEdges,\n        plotBorderColor,\n        plotBorderAlpha.toString(),\n        0,\n        false\n      );\n\n      // Priority:\n      // showValue at data level > showvalues at dataset level > showvalues at chart level\n\n      isMeanEnabled = pluckNumber(setData.showmean, JSONData.showmean, chartAttr.showmean);\n      isMeanValueEnabledInData = isMeanEnabled && pluckNumber(setData.showmeanvalue, JSONData.showmeanvalues,\n        chartAttr.showmeanvalues);\n\n      isMDEnabled = pluckNumber(setData.showmd, JSONData.showmd, chartAttr.showmd);\n      isMDValueEnabledInData = isMDEnabled && pluckNumber(setData.showmdvalue, JSONData.showmdvalues,\n        chartAttr.showmdvalues);\n\n      isSDEnabled = pluckNumber(setData.showsd, JSONData.showsd, chartAttr.showsd);\n      isSDValueEnabledInData = isSDEnabled && pluckNumber(setData.showsdvalue, JSONData.showsdvalues,\n        chartAttr.showsdvalues);\n\n      isQDEnabled = pluckNumber(setData.showqd, JSONData.showqd, chartAttr.showqd);\n      isQDValueEnabledInData = isQDEnabled && pluckNumber(setData.showqdvalue, JSONData.showqdvalues,\n        chartAttr.showqdvalues);\n\n      isOutliersEnabled = pluckNumber(setData.showoutlier, JSONData.showoutlier, chartAttr.showoutlier);\n      isOutliersValueEnabledInData = isOutliersEnabled && pluckNumber(setData.showoutliervalue, JSONData.showoutliervalues,\n        chartAttr.showoutliervalues);\n\n      defaultValue = (isMeanValueEnabledInData || isMDValueEnabledInData ||\n        isSDValueEnabledInData || isQDValueEnabledInData || isOutliersValueEnabledInData) ? 0 : 1;\n\n      config.showMinValues = pluckNumber(setData.showminvalue, setData.showvalue, JSONData.showminvalues,\n        JSONData.showvalues, chartAttr.showminvalues, chartAttr.showvalues, defaultValue);\n\n      config.showMaxValues = pluckNumber(setData.showmaxvalue, setData.showvalue, JSONData.showmaxvalues,\n        JSONData.showvalues, chartAttr.showmaxvalues, chartAttr.showvalues, defaultValue);\n\n      config.showMedianValues = pluckNumber(setData.showmedianvalue, setData.showvalue, JSONData.showmedianvalues,\n        JSONData.showvalues, chartAttr.showmedianvalues, chartAttr.showvalues, defaultValue);\n\n      config.showQ3Values = pluckNumber(setData.showq3value, JSONData.showq3values, chartAttr.showq3values, 0);\n\n      config.showQ1Values = pluckNumber(setData.showq1value, JSONData.showq1values, chartAttr.showq1values, 0);\n\n      config.upperWhiskerRawColor = getFirstColor(pluck(setData.upperwhiskercolor,\n        JSONData.upperwhiskercolor, chartAttr.upperwhiskercolor,\n        chartAttr.plotbordercolor, colorM.getColor(PLOTBORDERCOLOR)));\n      config.upperWhiskerColor = convertColor(config.upperWhiskerRawColor, upperWhiskerAlpha);\n\n      config.upperWhiskerThickness = pluckNumber(setData.upperwhiskerthickness,\n        JSONData.upperwhiskerthickness, chartAttr.upperwhiskerthickness, chartAttr.plotborderthickness,\n        1);\n\n      config.upperWhiskerShadowOpacity = conf.showShadow ? (upperWhiskerAlpha / 100) : 0;\n\n      config.lowerWhiskerAlpha = lowerWhiskerAlpha = getFirstAlpha(pluck(setData.lowerwhiskeralpha,\n        JSONData.lowerwhiskeralpha, chartAttr.lowerwhiskeralpha, chartAttr.plotborderalpha, 100));\n\n      config.lowerWhiskerRawColor = getFirstColor(pluck(setData.lowerwhiskercolor,\n        JSONData.lowerwhiskercolor, chartAttr.lowerwhiskercolor, chartAttr.plotbordercolor,\n        colorM.getColor(PLOTBORDERCOLOR)));\n      config.lowerWhiskerColor = convertColor(config.lowerWhiskerRawColor, lowerWhiskerAlpha);\n\n      config.lowerWhiskerThickness = pluckNumber(setData.lowerwhiskerthickness,\n        JSONData.lowerwhiskerthickness, chartAttr.lowerwhiskerthickness, chartAttr.plotborderthickness,\n        1);\n\n      config.lowerWhiskerShadowOpacity = conf.showShadow ? (lowerWhiskerAlpha / 100) : 0;\n\n      config.setValue = setValue = numberFormatter.getCleanValue(setData.value);\n      config.setLink = pluck(setData.link);\n      config.toolTipValue = toolTipValue = numberFormatter.dataLabels(setValue, parentYAxis);\n      config.setDisplayValue = setDisplayValue = parseUnsafeString(setData.displayvalue);\n      config.displayValue = pluck(setDisplayValue, toolTipValue);\n      setDataDashed = pluckNumber(setData.dashed);\n      setDataPlotDashLen = pluckNumber(setData.dashlen, plotDashLen);\n      setDataPlotDashGap = plotDashGap = pluckNumber(setData.dashgap, plotDashGap);\n\n      maxValue = Math.max(maxValue, max);\n      minValue = Math.min(minValue, min);\n\n      config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n\n      // if (showAllOutliers && setData.outliers) {\n      //   for (j = 0; j < config.outliers.length; j++) {\n      //     maxValue = Math.max(maxValue, config.outliers[j]);\n      //     minValue = Math.min(minValue, config.outliers[j]);\n      //   }\n      // }\n\n      config.plotBorderDashStyle = setDataDashed === 1\n        ? getDashStyle(setDataPlotDashLen, setDataPlotDashGap, plotBorderThickness)\n        : (setDataDashed === 0 ? NONE : initailPlotBorderDashStyle);\n      // if (singleSeries) {\n      //   plotColor = colorM.getPlotColor(i);\n      //   plotColor = pluck(setData.color, plotColor);\n      //   plotFillRatio = pluck(setData.ratio, conf.ratio);\n      // }\n      // else {\n      plotColor = pluck(setData.color, conf.plotColor);\n      // }\n      plotFillAlpha = pluck(setData.alpha, conf.plotfillalpha);\n\n      // Setting the angle for plot fill for negative data\n      if (setValue < 0 && !isRoundEdges) {\n        tempPlotfillAngle = plotfillAngle;\n        plotfillAngle = 360 - plotfillAngle;\n      }\n\n      // Setting the color Array to be applied to the bar/column.\n      config.colorArr = getColumnColor(\n        plotColor + COMMA + plotgradientcolor,\n        plotFillAlpha,\n        plotFillRatio,\n        plotfillAngle,\n        isRoundEdges,\n        plotBorderColor,\n        plotBorderAlpha.toString(),\n        0,\n        false\n      );\n\n      config.label = label =\n        getValidValue(parseUnsafeString(xAxis.getLabel(pluckNumber(i)).label));\n\n      // Parsing the hover effects only if showhovereffect is not 0.\n      if (showHoverEffect !== 0) {\n        upperBoxHoverColor = pluck(setData.upperboxhovercolor, JSONData.upperboxhovercolor,\n          chartAttr.upperboxhovercolor, upperBoxColor);\n\n        upperBoxHoverAlpha = pluck(setData.upperboxhoveralpha, JSONData.upperboxhoveralpha,\n          chartAttr.upperboxhoveralpha, upperBoxAlpha);\n\n        upperBoxBorderHoverColor = pluck(setData.upperboxborderhovercolor,\n          JSONData.upperboxborderhovercolor,\n          chartAttr.upperboxborderhovercolor, setData.upperboxbordercolor,\n          JSONData.upperboxbordercolor,\n          chartAttr.upperboxbordercolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR));\n\n        upperBoxBorderHoverAlpha = pluck(setData.upperboxborderhoveralpha,\n          JSONData.upperboxborderhoveralpha,\n          chartAttr.upperboxborderhoveralpha, setData.upperboxborderalpha,\n          JSONData.upperboxborderalpha,\n          chartAttr.upperboxborderalpha, chartAttr.plotborderalpha,\n          100);\n\n        upperBoxBorderHoverThickness = !isRoundEdges ? pluck(setData.upperboxborderhoverthickness,\n          JSONData.upperboxborderhoverthickness,\n          chartAttr.upperboxborderhoverthickness, config.upperBoxBorder.borderWidth) : 0;\n\n        lowerBoxHoverColor = pluck(setData.lowerboxhovercolor, JSONData.lowerboxhovercolor,\n          chartAttr.lowerboxhovercolor, lowerBoxColor);\n\n        lowerBoxHoverAlpha = pluck(setData.lowerboxhoveralpha, JSONData.lowerboxhoveralpha,\n          chartAttr.lowerboxhoveralpha, lowerBoxAlpha);\n\n        lowerBoxBorderHoverColor = pluck(setData.lowerboxborderhovercolor,\n          JSONData.lowerboxborderhovercolor,\n          chartAttr.lowerboxborderhovercolor, setData.lowerboxbordercolor,\n          JSONData.lowerboxbordercolor,\n          chartAttr.lowerboxbordercolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR));\n\n        lowerBoxBorderHoverAlpha = pluck(setData.lowerboxborderhoveralpha,\n          JSONData.lowerboxborderhoveralpha,\n          chartAttr.lowerboxborderhoveralpha, setData.lowerboxborderalpha,\n          JSONData.lowerboxborderalpha,\n          chartAttr.lowerboxborderalpha, chartAttr.plotborderalpha,\n          100);\n\n        lowerBoxBorderHoverThickness = !isRoundEdges ? pluck(setData.lowerboxborderhoverthickness,\n          JSONData.lowerboxborderhoverthickness,\n          chartAttr.lowerboxborderhoverthickness, config.lowerBoxBorder.borderWidth) : 0;\n\n        upperQuartileHoverColor = pluck(setData.upperquartilehovercolor,\n          JSONData.upperquartilehovercolor,\n          chartAttr.upperquartilehovercolor, setData.upperquartilecolor,\n          JSONData.upperquartilecolor,\n          chartAttr.upperquartilecolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR));\n\n        upperQuartileHoverAlpha = pluck(setData.upperquartilehoveralpha,\n          JSONData.upperquartilehoveralpha,\n          chartAttr.upperquartilehoveralpha, setData.upperquartilealpha,\n          JSONData.upperquartilealpha,\n          chartAttr.upperquartilealpha, chartAttr.plotborderalpha,\n          100);\n\n        upperQuartileHoverThickness = pluck(setData.upperquartilehoverthickness,\n          JSONData.upperquartilehoverthickness,\n          chartAttr.upperquartilehoverthickness, config.upperQuartile.borderWidth);\n\n        lowerQuartileHoverColor = pluck(setData.lowerquartilehovercolor,\n          JSONData.lowerquartilehovercolor,\n          chartAttr.lowerquartilehovercolor, setData.lowerquartilecolor,\n          JSONData.lowerquartilecolor,\n          chartAttr.lowerquartilecolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR));\n\n        lowerQuartileHoverAlpha = pluck(setData.lowerquartilehoveralpha,\n          JSONData.lowerquartilehoveralpha,\n          chartAttr.lowerquartilehoveralpha, setData.lowerquartilealpha,\n          JSONData.lowerquartilealpha,\n          chartAttr.lowerquartilealpha, chartAttr.plotborderalpha,\n          100);\n\n        lowerQuartileHoverThickness = pluck(setData.lowerquartilehoverthickness,\n          JSONData.lowerquartilehoverthickness,\n          chartAttr.lowerquartilehoverthickness, config.lowerQuartile.borderWidth);\n\n        medianHoverColor = pluck(setData.medianhovercolor,\n          JSONData.medianhovercolor,\n          chartAttr.medianhovercolor, setData.mediancolor,\n          JSONData.mediancolor,\n          chartAttr.mediancolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR));\n\n        medianHoverAlpha = pluck(setData.medianhoveralpha,\n          JSONData.medianhoveralpha,\n          chartAttr.medianhoveralpha, setData.medianalpha,\n          JSONData.medianalpha,\n          chartAttr.medianalpha, chartAttr.plotborderalpha,\n          100);\n\n        medianHoverThickness = pluck(setData.medianhoverthickness,\n          JSONData.medianhoverthickness,\n          chartAttr.medianhoverthickness, config.median.borderWidth);\n\n        /* If no hover effects are explicitly defined and\n         * showHoverEffect is not 0 then hoverColor is set.\n         */\n        if (showHoverEffect === 1) {\n          upperBoxColor === upperBoxHoverColor &&\n            (upperBoxHoverColor = getLightColor(upperBoxHoverColor, 70));\n          lowerBoxColor === lowerBoxHoverColor &&\n            (lowerBoxHoverColor = getLightColor(lowerBoxHoverColor, 70));\n        }\n\n        config.upperBoxHoverColorArr = getColumnColor(\n          upperBoxHoverColor,\n          upperBoxHoverAlpha,\n          UNDEFINED,\n          UNDEFINED,\n          isRoundEdges,\n          plotBorderColor,\n          plotBorderAlpha.toString(),\n          0,\n          false\n        );\n\n        config.lowerBoxHoverColorArr = getColumnColor(\n          lowerBoxHoverColor,\n          lowerBoxHoverAlpha,\n          UNDEFINED,\n          UNDEFINED,\n          isRoundEdges,\n          plotBorderColor,\n          plotBorderAlpha.toString(),\n          0,\n          false\n        );\n\n        config.setUpperBoxRolloutAttr = {\n          fill: toRaphaelColor(config.upperColorArr[0])\n        };\n        config.setUpperBoxRolloverAttr = {\n          fill: toRaphaelColor(config.upperBoxHoverColorArr[0])\n        };\n\n        config.setLowerBoxRolloutAttr = {\n          fill: toRaphaelColor(config.lowerColorArr[0])\n        };\n        config.setLowerBoxRolloverAttr = {\n          fill: toRaphaelColor(config.lowerBoxHoverColorArr[0])\n        };\n\n        config.setUpperBoxBorderRolloverAttr = {\n          stroke: convertColor(upperBoxBorderHoverColor, upperBoxBorderHoverAlpha),\n          'stroke-width': upperBoxBorderHoverThickness\n        };\n        config.setUpperBoxBorderRolloutAttr = {\n          stroke: config.upperBoxBorder.color,\n          'stroke-width': config.upperBoxBorder.borderWidth\n        };\n\n        config.setLowerBoxBorderRolloverAttr = {\n          stroke: convertColor(lowerBoxBorderHoverColor, lowerBoxBorderHoverAlpha),\n          'stroke-width': lowerBoxBorderHoverThickness\n        };\n        config.setLowerBoxBorderRolloutAttr = {\n          stroke: config.lowerBoxBorder.color,\n          'stroke-width': config.lowerBoxBorder.borderWidth\n        };\n\n        config.setUpperQuartileRolloverAttr = {\n          stroke: convertColor(upperQuartileHoverColor, upperQuartileHoverAlpha),\n          'stroke-width': upperQuartileHoverThickness\n        };\n        config.setUpperQuartileRolloutAttr = {\n          stroke: config.upperQuartile.color,\n          'stroke-width': config.upperQuartile.borderWidth\n        };\n\n        config.setLowerQuartileRolloverAttr = {\n          stroke: convertColor(lowerQuartileHoverColor, lowerQuartileHoverAlpha),\n          'stroke-width': lowerQuartileHoverThickness\n        };\n        config.setLowerQuartileRolloutAttr = {\n          stroke: config.lowerQuartile.color,\n          'stroke-width': config.lowerQuartile.borderWidth\n        };\n\n        config.setMedianRolloverAttr = {\n          stroke: convertColor(medianHoverColor, medianHoverAlpha),\n          'stroke-width': medianHoverThickness\n        };\n        config.setMedianRolloutAttr = {\n          stroke: config.median.color,\n          'stroke-width': config.median.borderWidth\n        };\n      }\n\n      formatedVal = config.toolTipValue;\n\n      // Parsing tooltext against various configurations provided by the user.\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext,\n        JSONData.plottooltext, chartAttr.plottooltext), false));\n      if (!conf.showtooltip) {\n        toolText = false;\n      } else {\n        if (formatedVal === null) {\n          toolText = false;\n        } else if (setTooltext !== UNDEFINED) {\n          macroIndices = [1, 2, 3, 4, 5, 6, 62, 63, 64, 65,\n            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80\n          ];\n          parserConfig = {\n            maxValue: max,\n            maxDataValue: numberFormatter.dataLabels(max),\n            minValue: min,\n            minDataValue: numberFormatter.dataLabels(min),\n            Q1: numberFormatter.dataLabels(q1),\n            unformattedQ1: q1,\n            Q3: numberFormatter.dataLabels(q3),\n            unformattedQ3: q3,\n            median: numberFormatter.dataLabels(medianValue),\n            unformattedMedian: medianValue,\n\n            SD: numberFormatter.dataLabels(sd),\n            unformattedsd: sd,\n            QD: numberFormatter.dataLabels(qd),\n            unformattedQD: qd,\n            MD: numberFormatter.dataLabels(md),\n            unformattedMD: md,\n            mean: numberFormatter.dataLabels(mean),\n            unformattedMean: mean,\n            label: label,\n            yaxisName: chartConfig.yaxisname,\n            xaxisName: chartConfig.xaxisname,\n            formattedValue: formatedVal,\n            value: label\n          };\n          toolText = parseTooltext(setTooltext, macroIndices,\n            parserConfig, setData, chartAttr, JSONData);\n        } else {\n          toolText = BOLDSTARTTAG + MAXIMUM_STR + tooltipSepChar + BOLDENDTAG +\n            numberFormatter.dataLabels(max) + BREAKSTRING +\n            BOLDSTARTTAG + Q3_STR + tooltipSepChar + BOLDENDTAG +\n            numberFormatter.dataLabels(q3) + BREAKSTRING +\n            BOLDSTARTTAG + MEDIAN_STR + tooltipSepChar + BOLDENDTAG +\n            numberFormatter.dataLabels(medianValue) + BREAKSTRING +\n            BOLDSTARTTAG + Q1_STR + tooltipSepChar + BOLDENDTAG +\n            numberFormatter.dataLabels(q1) + BREAKSTRING +\n            BOLDSTARTTAG + MINIMUM_STR + tooltipSepChar + BOLDENDTAG +\n            numberFormatter.dataLabels(min);\n        }\n      }\n      config.toolText = toolText;\n      config.setTooltext = toolText;\n      tempPlotfillAngle && (plotfillAngle = tempPlotfillAngle);\n    }\n\n    // conf.maxNumberOfOutliers = maxNumberOfOutliers;\n\n    if (conf.showalloutliers) {\n      maxmin = dataset._getOutLiersLimit();\n      maxValue = Math.max(maxValue, maxmin.max);\n      minValue = Math.min(minValue, maxmin.min);\n    } else {\n      difference = maxValue - minValue;\n      maxValue += (conf.outliersupperrangeratio * difference);\n      minValue -= (conf.outlierslowerrangeratio * difference);\n    }\n\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n\n    dataset.setState('dirty', true);\n    dataset._createSubDS();\n    chartConfig.showLegend && dataset._addLegend();\n\n    // (chart.config.hasLegend !== false) && dataset._addLegend();\n\n    // dataset.subDS = 0;\n\n    // (dataset.components.mean = dataset._createSubDS(0, MEAN_STR));\n\n    // conf.showMeanLegend && (dataset._addLegendSubDS(dataset.components.mean));\n    // conf.showMeanLegend && (dataset.subDS += 1);\n\n    // (dataset.components.sd = dataset._createSubDS(1, SD_STR));\n    // conf.showSDLegend && (dataset._addLegendSubDS(dataset.components.sd));\n    // conf.showSDLegend && (dataset.subDS += 1);\n\n    // (dataset.components.md = dataset._createSubDS(2, MD_STR));\n    // conf.showMDLegend && (dataset._addLegendSubDS(dataset.components.md));\n    // conf.showMDLegend && (dataset.subDS += 1);\n\n    // (dataset.components.qd = dataset._createSubDS(3, QD_STR));\n    // conf.showQDLegend && (dataset._addLegendSubDS(dataset.components.qd));\n    // conf.showQDLegend && (dataset.subDS += 1);\n\n    // !dataset.components.outliers && (dataset.components.outliers = []);\n\n    // OutliersLength = dataset.config.maxNumberOfOutliers || dataset.components.outliers.length;\n\n    // for (i = 0; i < OutliersLength; i++) {\n    //   outlierDS = (dataset._createSubDS(4 + i, OUTLIERS_STR, i));\n    //   dataset.components.outliers[i] = outlierDS;\n    // }\n    // conf.showOutliersLegend && (dataset._addLegendOutliers(dataset.components.outliers));\n    // conf.showOutliersLegend && (dataset.subDS += 1);\n  }\n\n  /**\n   * Function to create the derived sub-dataset\n   */\n  _createSubDS () {\n    var dataset = this,\n      index = dataset.config.index,\n      lineJSON = dataset.getFromEnv('lineJSON')[index],\n      len = lineJSON.length;\n\n    datasetFactory(dataset, LineDataset, 'dataset', len, lineJSON, createChildIndices(index, len));\n    if (!len) {\n      dataset.iterateComponents((child) => {\n        if (child.getName() === 'line') {\n          child.remove();\n        }\n      });\n    }\n  }\n\n  /**\n   * Function to get the maximum and minimum of the outliers\n   * @return {Object} The max and min value of the outliers\n   */\n  _getOutLiersLimit () {\n    var dataset = this,\n      lineJSON = dataset.getFromEnv('lineJSON')[dataset.config.index],\n      len = lineJSON.length, // eslint-disable-line good-practices/no-single-usage-variable\n      dataJSON,\n      dataLen,\n      j,\n      data,\n      max = -Infinity,\n      min = +Infinity,\n      i;\n\n    for (i = 0; i < len; i++) {\n      dataJSON = lineJSON[i];\n      if (dataJSON.seriesname === 'Outliers') {\n        data = dataJSON.data;\n        dataLen = data.length;\n        for (j = 0; j < dataLen; j++) {\n          max = Math.max(data[j].value, max);\n          min = Math.min(data[j].value, min);\n        }\n        return {\n          max: max,\n          min: min\n        };\n      }\n    }\n    return {\n      max,\n      min\n    };\n  }\n\n  /**\n   * Parses plot attributes and position during post space management\n   *\n   * @param {any} dataObj dataObj\n   * @param {any} index index\n   * @memberof BoxAndWhiskerDataset\n   */\n  parsePlotAttributes (dataObj, index) {\n    var dataset = this,\n      conf = dataset.config,\n      i = index,\n      visible = dataset.getState('visible'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      xAxis = dataset.getFromEnv('xAxis'), // eslint-disable-line good-practices/no-single-usage-variable\n      yAxis = dataset.getFromEnv('yAxis'),\n      xPos,\n      columnWidth,\n      dataStore = dataset.components.data,\n      setLink,\n      setValue,\n      config,\n      upperQuartile,\n      yTop,\n      yTopPos,\n      lowerQuartile,\n      yBottom,\n      yBottomPos,\n      median,\n      yMed,\n      yMedPos,\n      upperBoxH,\n      lowerBoxH,\n      upperBoxBorder,\n      lowerBoxBorder,\n      crispX,\n      crispX2,\n      crispY,\n      style = chartConfig.dataLabelStyle,\n      hoverOutEffects,\n      rotateValues = conf.rotatevalues,\n      valuePadding,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      textAlign = rotateValues ? POSITION_LEFT : POSITION_MIDDLE,\n      smartLabel = dataset.getFromEnv('smartLabel'),\n      errorStartPos,\n      errorBarWidth,\n      halfErrorBarW,\n      errorValPos,\n      crispyX,\n      crispyY,\n      errorPath,\n      smartText,\n      lineHeight,\n      labelBottomY,\n      labelTopY,\n      lastDataSetHeight = +Infinity,\n      plotDataLabelStyle,\n      lastDataSetYpos,\n      lowerBoxBorderEleAttr,\n      lowerBoxElemAttr,\n      lowerQuartileEleAttr,\n      lowerWhiskerEleAttr,\n      midLineElemAttr,\n      upperBoxBorderEleAttr,\n      upperBoxElemAttr,\n      upperQuartileEleAttr,\n      upperWhiskerEleAttr,\n      upperQuartileMaxLabelAttr,\n      upperQuartileMinLabelAttr,\n      upperQuartileLabelAttr,\n      lowerQuartileLabelAttr,\n      medianLabelAttr,\n      upperBoxStartPos,\n      lowerBoxYPos,\n      lowerBoxHeight,\n      lowerBoxEndPos;\n\n    columnWidth = dataset.getFromEnv('columnWidth');\n    config = dataObj && dataObj.config;\n    setValue = config && config.setValue;\n\n    // If plot value is found \"null\", continue the loop to next iteration.\n    if (!config.explicitData && (dataObj === UNDEFINED || setValue === UNDEFINED || setValue === null)) {\n      return;\n    }\n\n    // isPositive = setValue >= 0;\n\n    setLink = config.setLink;\n    // Creating the data structure if not present for storing the graphics elements.\n    if (!dataObj.graphics) {\n      dataStore[i].graphics = {};\n    }\n    if (!dataObj.graphics.label) {\n      dataStore[i].graphics.label = [];\n    }\n\n    // Getting the previous yposition of the plot and calculating the current yposition of the plot.\n    // previousYPos = yAxis.getPixel(previousY || yBase);\n    xPos = xAxis.getPixel(i) + dataset.getFromEnv('columnXShift');\n\n    upperQuartile = config.upperQuartile || {};\n    yTop = upperQuartile && upperQuartile.value;\n    yTopPos = (yTop || yTop === 0) && yAxis.getPixel(yTop);\n\n    lowerQuartile = config.lowerQuartile || {};\n    yBottom = lowerQuartile && lowerQuartile.value;\n    yBottomPos = (yBottom || yBottom === 0) && yAxis.getPixel(yBottom);\n\n    median = config.median;\n    yMed = median && median.value; // || yBottom;\n    yMedPos = (yMed || yMed === 0) && yAxis.getPixel(yMed);\n\n    upperBoxH = yMedPos - yTopPos;\n    lowerBoxH = yBottomPos - yMedPos;\n\n    upperBoxBorder = config.upperBoxBorder || {};\n    lowerBoxBorder = config.lowerBoxBorder || {};\n\n    valuePadding = config.valuePadding;\n\n    config.eventArgs = {\n      index: i,\n      link: setLink,\n      maximum: config.max,\n      minimum: config.min,\n      median: yMed,\n      q3: upperQuartile.value,\n      q1: lowerQuartile.value,\n      maxDisplayValue: config.showMaxValues ? numberFormatter.dataLabels(config.max) : BLANKSTRING,\n      minDisplayValue: config.showMinValues ? numberFormatter.dataLabels(config.min) : BLANKSTRING,\n      medianDisplayValue: config.showMedianValues ? numberFormatter.dataLabels(yMed) : BLANKSTRING,\n      q1DisplayValue: config.showQ1Values ? numberFormatter.dataLabels(lowerQuartile.value)\n        : BLANKSTRING,\n      q3DisplayValue: config.showQ3Values ? numberFormatter.dataLabels(upperQuartile.value)\n        : BLANKSTRING,\n      categoryLabel: config.label,\n      toolText: config.toolText,\n      datasetIndex: conf.index,\n      datasetName: dataset.config.JSONData.seriesname,\n      visible: visible,\n      value: config.rawValue,\n      showValue: config.showValue,\n      upperBoxColor: config.upperBoxColor,\n      upperBoxAlpha: config.upperBoxAlpha,\n      lowerBoxColor: config.lowerBoxColor,\n      lowerBoxAlpha: config.lowerBoxAlpha,\n      upperQuartileColor: upperQuartile.rawColor,\n      upperQuartileThickness: upperQuartile.borderWidth,\n      upperQuartileAlpha: upperQuartile.alpha,\n      lowerQuartileColor: lowerQuartile.rawColor,\n      lowerQuartileThickness: lowerQuartile.borderWidth,\n      lowerQuartileAlpha: lowerQuartile.alpha,\n      upperBoxBorderColor: upperBoxBorder.rawColor,\n      upperBoxBorderThickness: upperBoxBorder.borderWidth,\n      upperBoxBorderAlpha: upperBoxBorder.alpha,\n      lowerBoxBorderColor: lowerBoxBorder.rawColor,\n      lowerBoxBorderThickness: lowerBoxBorder.borderWidth,\n      lowerBoxBorderAlpha: lowerBoxBorder.alpha,\n      upperWhiskerColor: config.upperWhiskerRawColor,\n      upperWhiskerThickness: config.upperWhiskerThickness,\n      lowerWhiskerThickness: config.lowerWhiskerThickness,\n      lowerWhiskerColor: config.lowerWhiskerRawColor,\n      upperWhiskerAlpha: config.upperWhiskerAlpha,\n      lowerWhiskerAlpha: config.lowerWhiskerAlpha,\n      outliers: config.outliers\n    };\n\n    // upperBox\n    crispX = Math.round(xPos) + upperBoxBorder.borderWidth % 2 *\n      0.5;\n    crispX2 = Math.round(xPos + columnWidth) +\n      upperBoxBorder.borderWidth % 2 * 0.5;\n    crispY = Math.round(yTopPos) + upperQuartile.borderWidth %\n      2 * 0.5;\n    columnWidth = crispX2 - crispX;\n\n    hoverOutEffects = {\n      upperBox: {\n        fill: toRaphaelColor(config.upperColorArr[0]), // upperQuartile.color\n        'stroke-width': 0,\n        'stroke-dasharray': NONE,\n        cursor: setLink ? POINTER : BLANKSTRING,\n        visibility: visible\n      },\n      lowerBox: {\n        fill: toRaphaelColor(config.lowerColorArr[0]),\n        'stroke-width': 0,\n        'stroke-dasharray': NONE,\n        cursor: setLink ? POINTER : BLANK,\n        visibility: visible\n      },\n      upperBoxBorder: {\n        stroke: upperBoxBorder.color,\n        'stroke-width': upperBoxBorder.borderWidth,\n        'stroke-linecap': ROUND,\n        dashstyle: upperBoxBorder.dashStyle,\n        visibility: visible\n      },\n      lowerBoxBorder: {\n        stroke: lowerBoxBorder.color,\n        'stroke-width': lowerBoxBorder.borderWidth,\n        dashstyle: lowerBoxBorder.dashStyle,\n        'stroke-linecap': ROUND,\n        visibility: visible\n      },\n      upperQuartile: {\n        stroke: toRaphaelColor(upperQuartile.color),\n        'stroke-width': upperQuartile.borderWidth,\n        'stroke-dasharray': upperQuartile.dashSyle,\n        'stroke-linecap': ROUND,\n        cursor: setLink ? POINTER : BLANK,\n        visibility: visible\n      },\n      lowerQuartile: {\n        stroke: toRaphaelColor(lowerQuartile.color),\n        'stroke-width': lowerQuartile.borderWidth,\n        'stroke-dasharray': lowerQuartile.dashSyle,\n        cursor: setLink ? POINTER : BLANKSTRING,\n        'stroke-linecap': ROUND,\n        visibility: visible\n      },\n      median: {\n        stroke: toRaphaelColor(median.color),\n        'stroke-width': median.borderWidth,\n        'stroke-dasharray': median.dashSyle,\n        cursor: setLink ? POINTER : BLANKSTRING,\n        'stroke-linecap': ROUND,\n        visibility: visible\n      }\n    };\n\n    upperBoxStartPos = lastDataSetYpos || crispY;\n\n    // draw upperbox element\n    upperBoxElemAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      x: crispX,\n      y: lastDataSetYpos || crispY,\n      width: Math.max(columnWidth, 0),\n      height: Math.max(Math.min(lastDataSetHeight, upperBoxH), 0),\n      r: 0\n    }, hoverOutEffects.upperBox);\n\n    // upperBoxBorder element\n    upperBoxBorderEleAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      path: [M, crispX, lastDataSetYpos || crispY, V, lastDataSetYpos || crispY + upperBoxH,\n        M, crispX2, lastDataSetYpos || crispY, V, lastDataSetYpos || crispY + upperBoxH]\n    }, hoverOutEffects.upperBoxBorder);\n\n    // upperQuartileBorder element\n    upperQuartileEleAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      path: [M, crispX, (lastDataSetYpos || crispY), H, (crispX + columnWidth)]\n    }, hoverOutEffects.upperQuartile);\n\n    errorStartPos = crispY;\n    errorBarWidth = columnWidth * (conf.whiskerslimitswidthratio / 100);\n    halfErrorBarW = errorBarWidth / 2;\n\n    // Vertical Error drawing\n    errorValPos = yAxis.getPixel(config.max);\n    crispyY = errorValPos;\n    crispyX = crispX;\n\n    crispyY = Math.round(errorValPos) +\n      (config.upperWhiskerThickness % 2 / 2);\n    crispX = Math.round(crispX + (columnWidth / 2)) +\n      (config.upperWhiskerThickness % 2 / 2);\n\n    errorPath = [\n      M, crispX, lastDataSetYpos || errorStartPos,\n      V, Math.min(lastDataSetYpos || crispyY, upperBoxStartPos),\n      M, crispX - halfErrorBarW, Math.min(lastDataSetYpos || crispyY, upperBoxStartPos),\n      H, (crispX + halfErrorBarW)\n    ];\n\n    upperWhiskerEleAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      path: errorPath,\n      'stroke-width': config.upperWhiskerThickness,\n      'cursor': setLink ? POINTER : BLANKSTRING,\n      'stroke-linecap': ROUND,\n      stroke: config.upperWhiskerColor,\n      visibility: visible\n    };\n\n    plotDataLabelStyle = config.dataLabelStyle;\n    smartLabel.useEllipsesOnOverflow(dataset.getFromEnv('chartConfig').useEllipsesWhenOverflow);\n    smartLabel.setStyle(style);\n    smartText = smartLabel.getOriSize(numberFormatter.dataLabels(config.max));\n    lineHeight = (rotateValues ? smartText.width\n      : smartText.height);\n    labelTopY = errorValPos - config.upperWhiskerThickness *\n      0.5 - valuePadding - lineHeight * (rotateValues ? 0.5 : 1);\n\n    if ((labelTopY - (rotateValues ? (lineHeight / 2) : 0)) < chartConfig.canvasTop) {\n      labelTopY = chartConfig.canvasTop + (rotateValues ? (lineHeight / 2) : 0);\n    }\n\n    upperQuartileMaxLabelAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      text: numberFormatter.dataLabels(config.max),\n      x: crispyX + columnWidth / 2,\n      title: (upperQuartile.originalText || BLANKSTRING),\n      y: lastDataSetYpos || labelTopY,\n      'text-anchor': rotateValues ? POSITION_MIDDLE : textAlign,\n      'vertical-align': rotateValues ? POSITION_MIDDLE : POSITION_TOP,\n      'visibility': visibleStr,\n      direction: conf.textDirection,\n      fill: plotDataLabelStyle.color,\n      transform: getSuggestiveRotation(rotateValues, crispyX + columnWidth / 2, labelTopY),\n      'text-bound': [plotDataLabelStyle.backgroundColor, plotDataLabelStyle.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash\n      ]\n    };\n\n    crispX = Math.round(xPos) + lowerBoxBorder.borderWidth % 2 *\n      0.5;\n    crispX2 = Math.round(xPos + columnWidth) +\n      lowerBoxBorder.borderWidth % 2 * 0.5;\n    crispY = Math.round(yMedPos + lowerBoxH) +\n      lowerQuartile.borderWidth % 2 * 0.5;\n\n    lowerBoxYPos = lastDataSetYpos || yMedPos;\n    lowerBoxHeight = Math.max(Math.min(lastDataSetHeight, (crispY - yMedPos)), 0);\n\n    lowerBoxEndPos = (lowerBoxYPos + lowerBoxHeight);\n\n    // draw lower element\n    lowerBoxElemAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      x: crispX,\n      y: lowerBoxYPos,\n      width: Math.max(columnWidth, 0),\n      height: lowerBoxHeight,\n      r: 0\n    }, hoverOutEffects.lowerBox);\n\n    // lowerBoxBorder element\n    lowerBoxBorderEleAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      path: [M, crispX, lastDataSetYpos || yMedPos, V, lastDataSetYpos || yMedPos +\n        lowerBoxH, M, crispX2, lastDataSetYpos || yMedPos, V,\n      lastDataSetYpos || yMedPos + lowerBoxH]\n    }, hoverOutEffects.lowerBoxBorder);\n\n    // lowerQuartileBorder element\n    crispY = Math.round(yMedPos + lowerBoxH) +\n      lowerQuartile.borderWidth % 2 * 0.5;\n\n    lowerQuartileEleAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      path: [M, crispX, lastDataSetYpos || crispY, H, (crispX + columnWidth)]\n    }, hoverOutEffects.lowerQuartile);\n\n    errorStartPos = crispY;\n    errorBarWidth = columnWidth * (conf.whiskerslimitswidthratio / 100);\n    halfErrorBarW = errorBarWidth / 2;\n\n    // Vertical Error drawing\n    errorValPos = yAxis.getPixel(config.min);\n    crispyY = errorValPos;\n    crispyX = crispX;\n\n    crispyY = Math.round(errorValPos) +\n      (config.lowerWhiskerThickness % 2 / 2);\n    crispyX = Math.round(crispyX + (columnWidth / 2)) +\n      (config.lowerWhiskerThickness % 2 / 2);\n\n    errorPath = [\n      M, crispyX, lastDataSetYpos || errorStartPos,\n      V, Math.max(lastDataSetYpos || crispyY, lowerBoxEndPos),\n      M, crispyX - halfErrorBarW, Math.max(lastDataSetYpos || crispyY, lowerBoxEndPos),\n      H, (crispyX + halfErrorBarW)\n    ];\n\n    smartLabel.setStyle(style);\n    smartText = smartLabel.getOriSize(numberFormatter.dataLabels(config.min));\n    lineHeight = (rotateValues ? smartText.width\n      : smartText.height);\n\n    labelBottomY = errorValPos + (config.lowerWhiskerThickness * 0.5) + valuePadding;\n\n    if ((labelBottomY + lineHeight) > chartConfig.canvasBottom) {\n      labelBottomY = chartConfig.canvasBottom - lineHeight;\n    }\n\n    upperQuartileMinLabelAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      text: numberFormatter.dataLabels(config.min),\n      x: crispyX,\n      title: (upperQuartile.originalText || BLANKSTRING),\n      y: lastDataSetYpos || labelBottomY,\n      'text-anchor': rotateValues ? POSITION_END : textAlign,\n      'vertical-align': rotateValues ? POSITION_MIDDLE : POSITION_TOP,\n      'visibility': visibleStr,\n      direction: conf.textDirection,\n      fill: plotDataLabelStyle.color,\n      transform: getSuggestiveRotation(rotateValues, crispyX, labelBottomY),\n      'text-bound': [plotDataLabelStyle.backgroundColor, plotDataLabelStyle.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash\n      ]\n    };\n\n    lowerWhiskerEleAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      path: errorPath,\n      'stroke-width': config.lowerWhiskerThickness,\n      'cursor': setLink ? POINTER : BLANKSTRING,\n      'stroke-linecap': ROUND,\n      stroke: config.lowerWhiskerColor,\n      visibility: visible\n    };\n\n    // medianBorder\n    crispY = Math.round(yMedPos) + median.borderWidth % 2 * 0.5;\n\n    midLineElemAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      path: [M, crispX, lastDataSetYpos || crispY, H, (crispX + columnWidth)]\n    }, hoverOutEffects.median);\n\n    textAlign = rotateValues ? POSITION_LEFT\n      : POSITION_MIDDLE;\n\n    upperQuartileLabelAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      text: upperQuartile.displayValue,\n      x: xPos + (columnWidth / 2),\n      title: (upperQuartile.originalText || BLANKSTRING),\n      y: yTopPos - valuePadding,\n      'text-anchor': rotateValues ? POSITION_START : textAlign,\n      'vertical-align': rotateValues ? POSITION_MIDDLE : POSITION_BOTTOM,\n      'visibility': visibleStr,\n      direction: conf.textDirection,\n      fill: plotDataLabelStyle.color,\n      transform: getSuggestiveRotation(rotateValues, xPos + (columnWidth / 2),\n        yTopPos - valuePadding),\n      'text-bound': [plotDataLabelStyle.backgroundColor, plotDataLabelStyle.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash\n      ]\n    };\n\n    medianLabelAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      text: median.displayValue,\n      x: crispX + columnWidth / 2,\n      y: yMedPos - valuePadding,\n      title: (median.originalText || BLANKSTRING),\n      'text-anchor': rotateValues ? POSITION_START : textAlign,\n      'vertical-align': rotateValues ? POSITION_MIDDLE : POSITION_BOTTOM,\n      'visibility': visibleStr,\n      direction: conf.textDirection,\n      fill: plotDataLabelStyle.color,\n      transform: getSuggestiveRotation(rotateValues, crispX + columnWidth / 2,\n        yMedPos - valuePadding),\n      'text-bound': [plotDataLabelStyle.backgroundColor, plotDataLabelStyle.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash\n      ]\n    };\n\n    lowerQuartileLabelAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      text: lowerQuartile.displayValue,\n      x: xPos + columnWidth / 2,\n      y: yBottomPos + valuePadding,\n      title: (lowerQuartile.originalText || BLANKSTRING),\n      'text-anchor': rotateValues ? POSITION_START : textAlign,\n      'vertical-align': rotateValues ? POSITION_MIDDLE : POSITION_TOP,\n      'visibility': visibleStr,\n      direction: conf.textDirection,\n      fill: plotDataLabelStyle.color,\n      transform: getSuggestiveRotation(rotateValues, xPos + columnWidth / 2,\n        yBottomPos + valuePadding),\n      'text-bound': [plotDataLabelStyle.backgroundColor, plotDataLabelStyle.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash\n      ]\n    };\n\n    config.props = {\n      lowerBoxBorderEle: {\n        attr: lowerBoxBorderEleAttr\n      },\n      lowerBoxElem: {\n        attr: lowerBoxElemAttr\n      },\n      lowerQuartileEle: {\n        attr: lowerQuartileEleAttr\n      },\n      lowerWhiskerEle: {\n        attr: lowerWhiskerEleAttr\n      },\n      midLineElem: {\n        attr: midLineElemAttr\n      },\n      upperBoxElem: {\n        attr: upperBoxElemAttr\n      },\n      upperBoxBorderEle: {\n        attr: upperBoxBorderEleAttr\n      },\n      upperQuartileEle: {\n        attr: upperQuartileEleAttr\n      },\n      upperWhiskerEle: {\n        attr: upperWhiskerEleAttr\n      },\n      upperQuartileMaxLabel: {\n        attr: upperQuartileMaxLabelAttr\n      },\n      upperQuartileMinLabel: {\n        attr: upperQuartileMinLabelAttr\n      },\n      medianLabel: {\n        attr: medianLabelAttr\n      },\n      upperQuartileLabel: {\n        attr: upperQuartileLabelAttr\n      },\n      lowerQuartileLabel: {\n        attr: lowerQuartileLabelAttr\n      }\n    };\n  }\n  /**\n   * Parses attributes and allocates position during\n   * post space management\n   *\n   * @memberof BoxAndWhiskerDataset\n   */\n  allocatePosition () {\n    var dataset = this,\n      setDataArr = dataset.config.JSONData.data,\n      datasetLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      catLen = dataset.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      dataStore = dataset.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      i,\n      len;\n\n    len = Math.min(catLen, datasetLen); // eslint-disable-line good-practices/no-single-usage-variable\n\n    dataset.setColumnPosition();\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      dataset.parsePlotAttributes(dataObj, i);\n    }\n  }\n  /**\n   * functioto draw and update the graphics elements of plots\n   */\n  drawPlots () {\n    var dataset = this,\n      conf = dataset.config,\n      setDataArr = dataset.config.JSONData.data,\n      datasetLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      len,\n      i,\n      chart = dataset.getFromEnv('chart'),\n      catLen = dataset.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      toolText,\n      dataStore = dataset.components.data,\n      dataObj,\n      setValue,\n      config,\n      showShadow = conf.showShadow,\n      upperBoxContainer = dataset.getContainer('upperBoxGroup').toBack(),\n      lowerBoxContainer = dataset.getContainer('lowerBoxGroup'),\n      medianContainer = dataset.getContainer('medianGroup'),\n      upperWhiskerContainer = dataset.getContainer('upperWhiskerGroup'),\n      lowerWhiskerContainer = dataset.getContainer('lowerWhiskerGroup'),\n      dataLabelContainer = dataset.getContainer('labelGroup'),\n      shadowContainer = dataset.getContainer('shadowGroup'),\n      upperQuartile,\n      applyShadow,\n      lowerQuartile,\n      median,\n      upperBoxElem,\n      upperBoxElemCheck,\n      upperBoxBorderEle,\n      upperBoxBorderEleCheck,\n      upperQuartileEle,\n      upperQuartileEleCheck,\n      lowerBoxElem,\n      lowerBoxElemCheck,\n      lowerBoxBorderEle,\n      lowerBoxBorderEleCheck,\n      lowerQuartileEle,\n      lowerQuartileEleCheck,\n      midLineElem,\n      midLineElemCheck,\n      label,\n      labelCheck,\n      graphic,\n      groupId,\n      upperWhiskerEle,\n      upperWhiskerEleCheck,\n      lowerWhiskerEle,\n      lowerWhiskerEleCheck,\n      ele,\n      graphics,\n      removeDataArr = dataset.components.removeDataArr || [], // eslint-disable-line good-practices/no-single-usage-variable\n      removeDataArrLen = removeDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      newupperBoxElem,\n      newlowerBoxElem,\n      newupperBoxBorderEle,\n      newlowerBoxBorderEle,\n      newupperQuartileEle,\n      newlowerQuartileEle,\n      newmidLineElem,\n      newupperWhiskerEle,\n      newlowerWhiskerEle,\n      hoverInAttr,\n      hoverOutAttr,\n      showHoverEffect = conf.showHoverEffect,\n      k,\n      subarr,\n      arrlen,\n      animationManager = dataset.getFromEnv('animationManager'),\n      // Fired when clicked over the hot elements.\n      clickFunc = function (ele) { // eslint-disable-line\n        return function (e) {\n          chart.plotEventHandler(ele, e);\n        };\n      },\n\n      // Fired on mouse-in over the hot elements.\n      rolloverResponseSetter = function (obj, ele) { // eslint-disable-line\n        return function (data) {\n          var elem;\n          if (ele.data(showHoverEffectStr) !== 0) {\n            for (elem in obj) {\n              if (elem !== LABEL) {\n                animationManager.setAnimation({\n                  el: obj[elem],\n                  doNotRemove: true,\n                  attr: ele.data(SETROLLOVERATTR)[elem],\n                  component: dataset\n                });\n                chart.plotEventHandler(ele, data, ROLLOVER);\n              }\n            }\n          }\n        };\n      },\n\n      // Fired on mouse-out over the hot elements.\n      rolloutResponseSetter = function (obj, ele) { // eslint-disable-line\n        return function (data) {\n          var elem;\n\n          if (ele.data(showHoverEffectStr) !== 0) {\n            for (elem in obj) {\n              if (elem !== LABEL) {\n                animationManager.setAnimation({\n                  el: obj[elem],\n                  doNotRemove: true,\n                  attr: ele.data(SETROLLOUTATTR)[elem],\n                  component: dataset\n                });\n                chart.plotEventHandler(ele, data, ROLLOUT);\n              }\n            }\n          }\n        };\n      },\n      animCallBack = function () {\n        if (dataset.getState('visible') === false && (dataset._conatinerHidden === false ||\n            dataset._conatinerHidden === UNDEFINED)) {\n          upperBoxContainer.hide();\n          lowerBoxContainer.hide();\n          upperWhiskerContainer.hide();\n          lowerWhiskerContainer.hide();\n          medianContainer.hide();\n          shadowContainer.hide();\n          dataLabelContainer && dataLabelContainer.hide();\n          dataset._conatinerHidden = true;\n        }\n      };\n\n    // eslint-disable-next-line good-practices/no-function-dependency\n    applyShadow = function (shadowProps) {\n      return function () {\n        this.show();\n        this.shadow(shadowProps);\n      };\n    };\n\n    dataset.setColumnPosition();\n    if (!dataset.getState('visible')) {\n      dataLabelContainer.hide();\n      upperWhiskerContainer.hide();\n      upperBoxContainer.hide();\n      lowerWhiskerContainer.hide();\n      lowerBoxContainer.hide();\n      medianContainer.hide();\n      shadowContainer.hide();\n    } else {\n      // Showing the groups when visible set to true\n      upperBoxContainer.show();\n      lowerBoxContainer.show();\n      upperWhiskerContainer.show();\n      lowerWhiskerContainer.show();\n      medianContainer.show();\n      shadowContainer.show();\n      dataLabelContainer.show();\n      dataset._conatinerHidden = false;\n    }\n\n    len = Math.min(catLen, datasetLen); // eslint-disable-line good-practices/no-single-usage-variable\n\n    // Create plot elements.\n    for (i = 0; i < len; i++) {\n      // setData = setDataArr && setDataArr[i];\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n      setValue = config && config.setValue;\n\n      newupperBoxElem = false;\n      newlowerBoxElem = false;\n      newupperBoxBorderEle = false;\n      newlowerBoxBorderEle = false;\n      newupperQuartileEle = false;\n      newlowerQuartileEle = false;\n      newmidLineElem = false;\n      newupperWhiskerEle = false;\n      newlowerWhiskerEle = false;\n\n      // If plot value is found \"null\", continue the loop to next iteration.\n      if (!config.explicitData &&\n        (dataObj === UNDEFINED || setValue === UNDEFINED || setValue === null)) {\n        graphics = dataObj.graphics;\n        for (ele in graphics) {\n          if (graphics[ele] instanceof Array) {\n            subarr = graphics[ele];\n            for (k = 0, arrlen = subarr.length; k < arrlen; k++) {\n              subarr[k] && subarr[k].hide();\n            }\n          } else {\n            graphics[ele].hide();\n          }\n        }\n        continue;\n      }\n\n      graphic = dataObj.graphics;\n\n      // Creating the data structure if not present for storing the graphics elements.\n      if (!dataObj.graphics) {\n        dataStore[i].graphics = {};\n      }\n      if (!graphic.label) {\n        dataStore[i].graphics.label = [];\n      }\n\n      upperQuartile = config.upperQuartile || {};\n      lowerQuartile = config.lowerQuartile || {};\n\n      median = config.median;\n      toolText = config.toolText;\n      groupId = conf.index + UNDERSCORE + i;\n\n      upperBoxElemCheck = dataObj.graphics.upperBoxElem;\n      upperBoxElem = animationManager.setAnimation({\n        el: upperBoxElemCheck || 'rect',\n        attr: config.props.upperBoxElem.attr,\n        label: 'upperBox',\n        container: upperBoxContainer,\n        component: dataset\n      });\n      if (!upperBoxElemCheck) {\n        dataObj.graphics.upperBoxElem = upperBoxElem;\n        newupperBoxElem = true;\n      }\n\n      upperBoxElem.shadow({ opacity: showShadow ? conf.upperBoxAlpha / 100 : 0 }, shadowContainer);\n\n      upperBoxBorderEleCheck = dataObj.graphics.upperBoxBorderEle;\n      upperBoxBorderEle = animationManager.setAnimation({\n        el: upperBoxBorderEleCheck || 'path',\n        attr: config.props.upperBoxBorderEle.attr,\n        container: upperBoxContainer,\n        label: 'path',\n        component: dataset\n      });\n      if (!upperBoxBorderEleCheck) {\n        dataObj.graphics.upperBoxBorderEle = upperBoxBorderEle;\n        newupperBoxBorderEle = true;\n      }\n\n      upperQuartileEleCheck = dataObj.graphics.upperQuartileEle;\n      upperQuartileEle = animationManager.setAnimation({\n        el: upperQuartileEleCheck || 'path',\n        attr: config.props.upperQuartileEle.attr,\n        label: 'path',\n        container: upperBoxContainer,\n        component: dataset\n      });\n      if (!upperQuartileEleCheck) {\n        dataObj.graphics.upperQuartileEle = upperQuartileEle;\n        newupperQuartileEle = true;\n      }\n\n      upperWhiskerEleCheck = dataObj.graphics.upperWhiskerEle;\n\n      upperWhiskerEle = animationManager.setAnimation({\n        el: upperWhiskerEleCheck || 'path',\n        attr: config.props.upperWhiskerEle.attr,\n        label: 'path',\n        container: upperWhiskerContainer,\n        component: dataset\n      });\n      applyShadow({ opacity: config.upperWhiskerShadowOpacity }, shadowContainer);\n      if (!upperWhiskerEleCheck) {\n        dataObj.graphics.upperWhiskerEle = upperWhiskerEle;\n        newupperWhiskerEle = true;\n      }\n\n      dataset.getFromEnv('smartLabel').useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n      if (config.showMaxValues) {\n        labelCheck = graphic.label[3];\n        labelCheck && labelCheck.show();\n        label = animationManager.setAnimation({\n          el: labelCheck || 'text',\n          attr: config.props.upperQuartileMaxLabel.attr,\n          component: dataset,\n          label: 'text',\n          container: dataLabelContainer\n        });\n        if (!labelCheck) {\n          graphic.label[3] = label;\n        }\n        graphic.label[3]\n          .data(GROUPID, groupId);\n      } else {\n        graphic.label[3] && animationManager.setAnimation({\n          el: graphic.label[3],\n          component: dataset,\n          attr: { 'text-bound': [] },\n          callback: _hide.call(graphic.label[3])\n        });\n      }\n\n      lowerBoxElemCheck = dataObj.graphics.lowerBoxElem;\n      lowerBoxElem = animationManager.setAnimation({\n        el: lowerBoxElemCheck || 'rect',\n        attr: config.props.lowerBoxElem.attr,\n        label: 'lowerBox',\n        container: lowerBoxContainer,\n        component: dataset\n      });\n      if (!lowerBoxElemCheck) {\n        dataObj.graphics.lowerBoxElem = lowerBoxElem;\n        newlowerBoxElem = true;\n      }\n\n      lowerBoxElem.shadow({ opacity: showShadow ? conf.lowerBoxAlpha / 100 : 0 }, shadowContainer);\n\n      lowerBoxBorderEleCheck = dataObj.graphics.lowerBoxBorderEle;\n      lowerBoxBorderEle = animationManager.setAnimation({\n        el: lowerBoxBorderEleCheck || 'path',\n        attr: config.props.lowerBoxBorderEle.attr,\n        component: dataset,\n        label: 'path',\n        container: lowerBoxContainer\n      });\n      if (!lowerBoxBorderEleCheck) {\n        dataObj.graphics.lowerBoxBorderEle = lowerBoxBorderEle;\n        newlowerBoxBorderEle = true;\n      }\n\n      lowerQuartileEleCheck = dataObj.graphics.lowerQuartileEle;\n      lowerQuartileEle = animationManager.setAnimation({\n        el: lowerQuartileEleCheck || 'path',\n        attr: config.props.lowerQuartileEle.attr,\n        component: dataset,\n        label: 'path',\n        container: lowerBoxContainer\n      });\n      if (!lowerQuartileEleCheck) {\n        dataObj.graphics.lowerQuartileEle = lowerQuartileEle;\n        newlowerQuartileEle = true;\n      }\n\n      lowerWhiskerEle = dataObj.graphics.lowerWhiskerEle;\n\n      if (config.showMinValues) {\n        labelCheck = graphic.label[4];\n        labelCheck && labelCheck.show();\n        label = animationManager.setAnimation({\n          el: labelCheck || 'text',\n          attr: config.props.upperQuartileMinLabel.attr,\n          label: 'text',\n          container: dataLabelContainer,\n          component: dataset\n        });\n        if (!labelCheck) {\n          graphic.label[4] = label;\n        }\n\n        graphic.label[4]\n          .data(GROUPID, groupId);\n      } else {\n        graphic.label[4] && animationManager.setAnimation({\n          el: graphic.label[4],\n          component: dataset,\n          attr: { 'text-bound': [] },\n          callback: _hide.call(graphic.label[4])\n        });\n      }\n\n      lowerWhiskerEleCheck = dataObj.graphics.lowerWhiskerEle;\n      lowerWhiskerEle = animationManager.setAnimation({\n        el: lowerWhiskerEleCheck || 'path',\n        attr: config.props.lowerWhiskerEle.attr,\n        label: 'path',\n        container: lowerWhiskerContainer,\n        component: dataset\n      });\n      applyShadow({ opacity: config.lowerWhiskerShadowOpacity }, shadowContainer);\n      if (!lowerWhiskerEleCheck) {\n        dataObj.graphics.lowerWhiskerEle = lowerWhiskerEle;\n        newlowerWhiskerEle = true;\n      }\n\n      midLineElemCheck = dataObj.graphics.midLineElem;\n      midLineElem = animationManager.setAnimation({\n        el: midLineElemCheck || 'path',\n        component: dataset,\n        label: 'midline',\n        container: medianContainer,\n        attr: config.props.midLineElem.attr\n      });\n      if (!midLineElemCheck) {\n        dataObj.graphics.midLineElem = midLineElem;\n        newmidLineElem = true;\n      }\n\n      hoverInAttr = {\n        upperBoxElem: config.setUpperBoxRolloverAttr,\n        lowerBoxElem: config.setLowerBoxRolloverAttr,\n        upperBoxBorderEle: config.setUpperBoxBorderRolloverAttr,\n        lowerBoxBorderEle: config.setLowerBoxBorderRolloverAttr,\n        upperQuartileEle: config.setUpperQuartileRolloverAttr,\n        lowerQuartileEle: config.setLowerQuartileRolloverAttr,\n        midLineElem: config.setMedianRolloverAttr\n\n      };\n\n      hoverOutAttr = {\n        upperBoxElem: config.setUpperBoxRolloutAttr,\n        lowerBoxElem: config.setLowerBoxRolloutAttr,\n        upperBoxBorderEle: config.setUpperBoxBorderRolloutAttr,\n        lowerBoxBorderEle: config.setLowerBoxBorderRolloutAttr,\n        upperQuartileEle: config.setUpperQuartileRolloutAttr,\n        lowerQuartileEle: config.setLowerQuartileRolloutAttr,\n        midLineElem: config.setMedianRolloutAttr\n      };\n\n      upperBoxElem.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newupperBoxElem) {\n        upperBoxElem.on('fc-click', clickFunc(upperBoxElem));\n        upperBoxElem.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, upperBoxElem));\n        upperBoxElem.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, upperBoxElem));\n      }\n\n      lowerBoxElem.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newlowerBoxElem) {\n        lowerBoxElem.on('fc-click', clickFunc(lowerBoxElem));\n        lowerBoxElem.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, lowerBoxElem));\n        lowerBoxElem.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, lowerBoxElem));\n      }\n\n      upperBoxBorderEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newupperBoxBorderEle) {\n        upperBoxBorderEle.on('fc-click', clickFunc(upperBoxBorderEle));\n        upperBoxBorderEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, upperBoxBorderEle));\n        upperBoxBorderEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, upperBoxBorderEle));\n      }\n\n      lowerBoxBorderEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newlowerBoxBorderEle) {\n        lowerBoxBorderEle.on('fc-click', clickFunc(lowerBoxBorderEle));\n        lowerBoxBorderEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, lowerBoxBorderEle));\n        lowerBoxBorderEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, lowerBoxBorderEle));\n      }\n\n      upperQuartileEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newupperQuartileEle) {\n        upperQuartileEle.on('fc-click', clickFunc(upperQuartileEle));\n        upperQuartileEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, upperQuartileEle));\n        upperQuartileEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, upperQuartileEle));\n      }\n\n      lowerQuartileEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newlowerQuartileEle) {\n        lowerQuartileEle.on('fc-click', clickFunc(lowerQuartileEle));\n        lowerQuartileEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, lowerQuartileEle));\n        lowerQuartileEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, lowerQuartileEle));\n      }\n\n      midLineElem.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newmidLineElem) {\n        midLineElem.on('fc-click', clickFunc(midLineElem));\n        midLineElem.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, midLineElem));\n        midLineElem.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, midLineElem));\n      }\n\n      upperWhiskerEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newupperWhiskerEle) {\n        upperWhiskerEle.on('fc-click', clickFunc(upperWhiskerEle));\n        upperWhiskerEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, upperWhiskerEle));\n        upperWhiskerEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, upperWhiskerEle));\n      }\n\n      lowerWhiskerEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newlowerWhiskerEle) {\n        lowerWhiskerEle.on('fc-click', clickFunc(lowerWhiskerEle));\n        lowerWhiskerEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, lowerWhiskerEle));\n        lowerWhiskerEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, lowerWhiskerEle));\n      }\n\n      if (defined(upperQuartile.displayValue) &&\n        upperQuartile.displayValue !== BLANK && config.showQ3Values) {\n        labelCheck = graphic.label[0];\n        labelCheck && labelCheck.show();\n        label = animationManager.setAnimation({\n          el: labelCheck || 'text',\n          attr: config.props.upperQuartileLabel.attr,\n          component: dataset,\n          label: 'text',\n          container: dataLabelContainer\n        });\n        if (!labelCheck) {\n          graphic.label[0] = label;\n        }\n        graphic.label[0]\n          .data(GROUPID, groupId);\n      } else {\n        graphic.label[0] && animationManager.setAnimation({\n          el: graphic.label[0],\n          component: dataset,\n          attr: { 'text-bound': [] },\n          callback: _hide.call(graphic.label[0])\n        });\n      }\n\n      if (defined(median.displayValue) && median.displayValue !== BLANK && config.showMedianValues) {\n        labelCheck = graphic.label[1];\n        labelCheck && labelCheck.show();\n        label = animationManager.setAnimation({\n          el: labelCheck || 'text',\n          attr: config.props.medianLabel.attr,\n          component: dataset,\n          label: 'text',\n          container: dataLabelContainer\n        });\n        label.outlineText(conf.showTextOutline, config.props.medianLabel.attr.fill);\n        if (!labelCheck) {\n          graphic.label[1] = label;\n        }\n        graphic.label[1]\n          .data(GROUPID, groupId);\n      } else {\n        graphic.label[1] && animationManager.setAnimation({\n          el: graphic.label[1],\n          component: dataset,\n          attr: { 'text-bound': [] },\n          callback: _hide.call(graphic.label[1])\n        });\n      }\n\n      if (defined(lowerQuartile.displayValue) &&\n        lowerQuartile.displayValue !== BLANK && config.showQ1Values) {\n        labelCheck = graphic.label[2];\n        label = animationManager.setAnimation({\n          el: labelCheck || 'text',\n          component: dataset,\n          attr: config.props.lowerQuartileLabel.attr,\n          container: dataLabelContainer\n        });\n        if (!labelCheck) {\n          graphic.label[2] = label;\n          label.show();\n        }\n        graphic.label[2]\n          .data(GROUPID, groupId);\n      } else {\n        graphic.label[2] && animationManager.setAnimation({\n          el: graphic.label[2],\n          component: dataset,\n          attr: { 'text-bound': [] },\n          callback: _hide.call(graphic.label[2])\n        });\n      }\n\n      if (conf.showtooltip) {\n        toolTipController.enableToolTip(upperBoxElem, toolText);\n        toolTipController.enableToolTip(lowerBoxElem, toolText);\n        toolTipController.enableToolTip(upperBoxBorderEle, toolText);\n        toolTipController.enableToolTip(lowerBoxBorderEle, toolText);\n        toolTipController.enableToolTip(upperQuartileEle, toolText);\n        toolTipController.enableToolTip(lowerQuartileEle, toolText);\n        toolTipController.enableToolTip(midLineElem, toolText);\n        toolTipController.enableToolTip(upperWhiskerEle, toolText);\n        toolTipController.enableToolTip(lowerWhiskerEle, toolText);\n      } else {\n        toolTipController.enableToolTip(upperBoxElem, false);\n        toolTipController.enableToolTip(lowerBoxElem, false);\n        toolTipController.enableToolTip(upperBoxBorderEle, false);\n        toolTipController.enableToolTip(lowerBoxBorderEle, false);\n        toolTipController.enableToolTip(upperQuartileEle, false);\n        toolTipController.enableToolTip(lowerQuartileEle, false);\n        toolTipController.enableToolTip(midLineElem, false);\n        toolTipController.enableToolTip(upperWhiskerEle, false);\n        toolTipController.enableToolTip(lowerWhiskerEle, false);\n      }\n    }\n\n    // There has to be a provision such that the callback is called after the end of the slot animation\n    animCallBack();\n    removeDataArrLen && dataset.removePlots();\n  }\n  /**\n   * Function to remove a data from a dataset\n   */\n  removePlots () {\n    var dataSet = this,\n      removeDataArr = dataSet.components.removeDataArr,\n      animationManager = dataSet.getFromEnv('animationManager'), // eslint-disable-line good-practices/no-single-usage-variable\n      len = removeDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removeData,\n      ele,\n      graphics,\n      i,\n      innerLen,\n      j;\n\n    for (i = 0; i < len; i++) {\n      removeData = removeDataArr[0];\n      removeDataArr.splice(0, 1);\n      // In case of non existing data plot continue;\n      if (!removeData || !removeData.graphics) {\n        continue;\n      }\n\n      graphics = removeData.graphics;\n      for (ele in graphics) {\n        if (ele !== LABEL) {\n          graphics[ele].shadow({ opacity: 0 });\n          graphics[ele].hide();\n        } else {\n          innerLen = graphics[ele].length;\n          for (j = 0; j < innerLen; j++) {\n            if (graphics[ele][j]) {\n              graphics[ele][j].shadow({ opacity: 0 });\n              animationManager.setAnimation({\n                el: graphics[ele][j],\n                component: dataSet,\n                attr: { 'text-bound': [] },\n                callback: _hide.call(graphics[ele][j])\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Function to remove a data with a given index.\n   * @param {number}  indexVal     from which index data would be removed\n   * @param {number}  stretchVal   delete count\n   * @param {boolean} draw      whether draw or not\n   */\n  removeData (indexVal, stretchVal, draw) {\n    var dataSet = this,\n      index = indexVal,\n      stretch = stretchVal,\n      components = dataSet.components,\n      dataStore = components.data,\n      removeDataArr = components.removeDataArr || (components.removeDataArr = []); // eslint-disable-line good-practices/no-single-usage-variable\n\n    stretch = stretch || 1;\n    index = index || 0;\n\n    // Storing the direction of input data for the type of animation to be done during remove.\n    if ((index + stretch) === dataStore.length) {\n      dataSet.endPosition = true;\n    } else if (index === 0 || index === UNDEFINED) {\n      dataSet.endPosition = false;\n    }\n\n    components.removeDataArr = removeDataArr = removeDataArr.concat(dataStore.splice(index, stretch)); // eslint-disable-line good-practices/no-single-usage-variable\n\n    draw && dataSet.asyncDraw();\n  }\n  /**\n   * parse defualt configuration of the dataset\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.showplotborder = UNDEFINED;\n    config.plotborderdashlen = UNDEFINED;\n    config.plotborderdashgap = UNDEFINED;\n    config.plotfillalpha = UNDEFINED;\n    config.useroundedges = UNDEFINED;\n    config.ratio = UNDEFINED;\n    config.plotborderthickness = UNDEFINED;\n    config.showvalues = UNDEFINED;\n    config.valuepadding = UNDEFINED;\n    config.showtooltip = UNDEFINED;\n    config.maxcolwidth = UNDEFINED;\n    config.rotatevalues = UNDEFINED;\n    config.use3dlighting = UNDEFINED;\n    config.whiskerslimitswidthratio = UNDEFINED;\n    config.outliersupperrangeratio = UNDEFINED;\n    config.outlierslowerrangeratio = UNDEFINED;\n    config.showalloutliers = UNDEFINED;\n    config.showmean = UNDEFINED;\n    config.showsd = UNDEFINED;\n    config.showmd = UNDEFINED;\n    config.showqd = UNDEFINED;\n    config.showminvalues = UNDEFINED;\n    config.showmaxvalues = UNDEFINED;\n    config.showq1values = UNDEFINED;\n    config.showq3values = UNDEFINED;\n    config.showmedianvalues = UNDEFINED;\n  }\n\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var dataset = this,\n      conf = dataset.config,\n      removed = dataset.getState('removed');\n    return {\n      max: removed ? -Infinity : conf.maxValue,\n      min: removed ? +Infinity : conf.minValue\n    };\n  }\n\n  /**\n   * Function to register datasets in the internal data store of legend class.\n   */\n  _addLegend () {\n    var dataset = this,\n      // chart = dataset.chart,\n      fillColor,\n      config,\n      conf = dataset.config,\n      legendItem,\n      legend = dataset.getFromEnv('legend'),\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      JSONData = conf.JSONData || {},\n      upperBoxColor = conf.upperBoxColor,\n      lowerBoxColor = conf.lowerBoxColor; // eslint-disable-line good-practices/no-single-usage-variable\n\n    fillColor = { // eslint-disable-line good-practices/no-single-usage-variable\n      FCcolor: {\n        color: upperBoxColor + COMMA + lowerBoxColor,\n        angle: 90,\n        ratio: '50, 0',\n        alpha: '100, 100'\n      }\n    };\n\n    config = { // eslint-disable-line good-practices/no-single-usage-variable\n      label: getFirstValue(dataset.config.JSONData.seriesname),\n      index: dataset.getJSONIndex(),\n      mainDS: true\n    };\n    if (conf.includeInLegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      }\n      legendItem.configure(config);\n\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor(fillColor),\n          bgAlpha: pluckNumber(JSONData.legendiconbgalpha, JSONData.legendiconalpha, chartAttr.legendiconbgalpha, chartAttr.legendiconalpha, conf.plotfillalpha),\n          borderAlpha: pluckNumber(JSONData.legendiconborderalpha, JSONData.legendiconalpha, chartAttr.legendiconborderalpha, chartAttr.legendiconalpha, conf.plotfillalpha),\n          rawFillColor: conf.upperBoxColor,\n          stroke: toRaphaelColor(strokeColor)\n        },\n        background: {\n          legendBackgroundColor: toRaphaelColor(upperBoxColor),\n          alpha: 20\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item if dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n    dataset._mapChildren((child) => {\n      if (!child.getState('removed')) {\n        child.addToEnv('legendBackgroundColor', upperBoxColor);\n        child && child._addLegend(true);\n      }\n    });\n  }\n\n  /**\n   * Fuction to be fired on legend click\n   * @param  {Object} legendItem which legend is clicked\n   */\n  legendInteractivity () {\n    var dataset = this,\n      childDS = dataset.getChildren('dataset'),\n      state,\n      i;\n    state = dataset.getState('visible') ? 'hide' : 'show';\n\n    for (i = 0; i < (childDS && childDS.length); i++) {\n      childDS[i][state]();\n    }\n    dataset[state]();\n  }\n\n  /**\n   * Over-writting drawLabel of column chart\n   * @return {Object} the dataset object\n   */\n  drawLabel () {\n    return this;\n  }\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'boxandwhisker2D';\n  }\n\n  /**\n   * Over-writting childChanged of column chart\n   * @return {Object} the dataset object\n   */\n  childChanged () {\n    return this;\n  }\n\n  /**\n   * Function to show the dataset and raise an event\n   */\n  show () {\n    super.show();\n  }\n\n  /**\n   * Function to hide the dataset and raise an event\n   */\n  hide () {\n    super.hide();\n  }\n}\n\nexport default BoxAndWhiskerDataset;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Linedataset from '@fusioncharts/charts/src/dataset/line';\nimport { pluckNumber, pluck, getFirstValue, toRaphaelColor, preDefStr }\n  from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport boxandwhiskerlineAnimation from './boxandwhiskerline.animation';\nlet UNDEF,\n  POLYGON = preDefStr.POLYGON,\n  SPOKE = preDefStr.SPOKE,\n  BOLDSTARTTAG = '<b>',\n  BOLDENDTAG = '</b>',\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {Object} attrs  List of attributes that are applied to the created group.\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (attrs, parentContainer, dataset) {\n    return dataset.getFromEnv('animationManager').setAnimation({\n      el: 'group',\n      attr: attrs,\n      container: parentContainer,\n      component: dataset,\n      label: 'group'\n    });\n  };\naddDep({\n  name: 'boxandwhiskerlineAnimation',\n  type: 'animationRule',\n  extension: boxandwhiskerlineAnimation\n});\n/**\n * Class for boxAndWhiskerLine dataset\n */\nclass BoxAndWhiskerLinedataset extends Linedataset {\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'boxandwhiskerline';\n  }\n  /**\n   * Create pixel coordinates for the plots\n   */\n  createCoordinates () {\n    var dataset = this,\n      dsData = dataset.components.data,\n      // chart = dataset.getFromEnv('chart'),\n      // isBar = chart.isBar,\n      yAxis = dataset.getFromEnv('yAxis'), // eslint-disable-line good-practices/no-single-usage-variable\n      xAxis = dataset.getFromEnv('xAxis'), // eslint-disable-line good-practices/no-single-usage-variable\n      // yBase = yAxis.getAxisBase(),\n      // yBasePos = yAxis.getPixel(yBase),\n      dataObj,\n      config,\n      // previousY,\n      i,\n      Px,\n      Py,\n      len = dsData.length; // eslint-disable-line good-practices/no-single-usage-variable\n\n    // !isBar && (xDepth = -xDepth);\n    // isBar && (yDepth = -yDepth);\n\n    for (i = 0; i < len; i++) {\n      dataObj = dsData[i];\n      config = dataObj && dataObj.config;\n\n      if (dataObj === UNDEF) {\n        continue;\n      }\n      // previousY = config._b;\n      Px = xAxis.getPixel(config._x);\n      Py = yAxis.getPixel(config._y);\n      // Pb = (previousY ? yAxis.getPixel(previousY) : yBasePos) + yDepth;\n\n      config._Px = Px + dataset.getFromEnv('columnXShift') + dataset.getFromEnv('columnWidth') / 2;\n      config._Py = Py;\n      // config._Pby = Pb;\n      // config._Pbx = Px;\n    }\n  }\n  /**\n  * Returns all plots between the provided category indices\n  * @param {Number} min Min category index\n  * @param {Number} max Max category index\n  * @return {Array} Plots between those indices\n  */\n  getAllPlots (min, max) {\n    let data = this.components.data,\n      allPlots = [],\n      i,\n      len;\n    for (i = 0, len = data.length; i < len; i++) { // eslint-disable-line good-practices/no-single-usage-variable\n      if (data[i].config._x >= min || data[i].config._x <= max) {\n        allPlots.push(data[i]);\n      }\n    }\n    return allPlots;\n  }\n\n  /**\n   * calculate min and max position to scroll\n   */\n  calculateScrollRange () {\n    let dataSet = this,\n      conf = dataSet.config,\n      data = dataSet.components.data; // eslint-disable-line good-practices/no-single-usage-variable\n    conf.scrollMinVal = 0;\n    conf.scrollMaxVal = data.length;\n\n    // Since panning and data skipping are not applicable for scatter and bubble charts, the labels'\n    // minimum and maximum index to be drawn is the same as the plots' minimum and maximum index.\n    conf.scrollMinValForLabel = conf.scrollMinVal;\n    conf.scrollMaxValForLabel = conf.scrollMaxVal;\n  }\n  /**\n   * Function that return the nearest plot details\n   * @param   {number} chartXVal x-axis position of the mouse cordinate\n   * @param   {number} chartYVal y-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest plot and whether it is\n   *                   hovered or not\n   */\n  _getHoveredPlot (chartXVal, chartYVal) {\n    var dataset = this,\n      chartX = chartXVal,\n      chartY = chartYVal,\n      xAxis = dataset.getFromEnv('xAxis'),\n      dataStore = dataset.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      pointObj,\n      xMin,\n      xMax,\n      len = dataStore.length, // eslint-disable-line good-practices/no-single-usage-variable\n      returnValue,\n      conf = dataset.config,\n      j,\n      maxRadius = (conf && conf.radius) || 0,\n      allPlots;\n\n    // getting new chart XY accordint to Translation of axis\n    chartX += xAxis.getTranslation();\n\n    xMin = Math.floor(Math.max(xAxis.getValue(chartX - maxRadius), 0)); // eslint-disable-line good-practices/no-single-usage-variable\n\n    xMax = Math.ceil(Math.min(xAxis.getValue(chartX + maxRadius), len - 1)); // eslint-disable-line good-practices/no-single-usage-variable\n    allPlots = dataset.getAllPlots(xMin, xMax);\n    for (j = allPlots.length; j >= 0; j--) {\n      pointObj = allPlots[j];\n      if (pointObj) {\n        returnValue = dataset.isWithinShape(pointObj, j, chartX, chartY);\n        if (returnValue) {\n          break;\n        }\n      }\n    }\n\n    return returnValue;\n  }\n  /**\n   * Function to add legend for LineDs only when the function is called from its parent ds\n   * @param {boolean} callFromParentDS if call is from parent ds\n   */\n  _addLegend (callFromParentDS) {\n    if (!callFromParentDS) {\n      return;\n    }\n    var dataset = this,\n      conf = dataset.config,\n      legend = dataset.getFromEnv('chart').getChildren('legend')[0],\n      legendItem,\n      drawAnchors = pluckNumber(conf.drawanchors, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      config;\n    if (conf.includeinlegend) {\n      config = {\n        anchorSide: drawAnchors ? conf.anchorsides : 0,\n        label: getFirstValue(conf.JSONData.seriesname),\n        customLegendIcon: false,\n        spoke: (conf.dip === 'spoke') ? 1 : 0,\n        drawLine: !conf.showline,\n        index: dataset.getJSONIndex()\n      };\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      }\n      legendItem.configure(config);\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor({\n            color: conf.anchorbgcolor,\n            alpha: conf.anchorbgalpha\n          }),\n          rawFillColor: conf.anchorbgcolor,\n          stroke: toRaphaelColor({\n            color: conf.anchorbordercolor,\n            alpha: '100'\n          })\n        },\n        background: {\n          legendBackgroundColor: toRaphaelColor(dataset.getFromEnv('legendBackgroundColor')),\n          alpha: 20\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item is dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    */\n  configureAttributes (datasetJSON) {\n    super.configureAttributes(datasetJSON);\n    var dataset = this,\n      JSONData = dataset.config.JSONData,\n      conf = dataset.config;\n    dataset.setState('visible', dataset.getLinkedParent().getState('visible'));\n    // chartAttr = dataset.getFromEnv('chart-attrib');\n\n    conf.skipCommonElements = JSONData.showline;\n    conf.dip = JSONData.dip;\n  }\n\n  /**\n   * function to create group for dataset\n   */\n  createContainer () {\n    var dataset = this,\n      parent = dataset.getLinkedParent().getLinkedParent(),\n      group = (dataset.groupName || dataset.dsGroup || dataset.getType()),\n      parentContainer,\n      parentShadowContainer;\n\n    !parent.getChildContainer(group + 'VcanvasGroup') && (group = 'default');\n    parentContainer = parent.getChildContainer('manager-defaultVcanvasGroup-lines');\n    parentShadowContainer = parent.getChildContainer(group + 'ShadowVcanvasGroup'); // eslint-disable-line good-practices/no-single-usage-variable\n\n    !dataset.getContainer('shadowGroup') && dataset.addContainer('shadowGroup',\n      createGroup({ name: 'shadow-group' }, parentShadowContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('commonElemsGroup',\n      createGroup({ name: 'common-elems-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('plotGroup') && dataset.addContainer('plotGroup',\n      createGroup({ name: 'common-elems-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('labelGroup') && dataset.addContainer('labelGroup',\n      createGroup({ name: 'label-group',\n        class: 'fusioncharts-datalabels',\n        opacity: 1 }, parent.getChildContainer('vcanvasLabelGroup'), dataset));\n  }\n\n  /**\n   * Configure data level\n   * @param {Object} newDataset new dataset added\n   * @param {Object} newIndex new added dataset index\n   */\n  _setConfigure (newDataset, newIndex) {\n    var dataSet = this,\n      conf = dataSet.config,\n      chartConfig = dataSet.getFromEnv('chartConfig'), // eslint-disable-line good-practices/no-single-usage-variable\n      JSONData = dataSet.config.JSONData,\n      setDataArr = newDataset || JSONData.data || [],\n      setData,\n      dataObj,\n      catLen = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      newDataSetLen = newDataset && newDataset.data.length,\n      len = (JSONData.seriesname === 'Outliers' ? setDataArr.length\n        : (newDataSetLen || Math.min(catLen, setDataArr.length))),\n      dataStore,\n      i,\n      plotIndex,\n      config,\n      outlierIconShape,\n      tempIndex;\n\n    conf.imageCount = 0;\n    dataStore = dataSet.components.data;\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n    conf.maxRadius = -Infinity;\n\n    for (i = 0; i < len; i++) {\n      if (newDataset) {\n        setData = (newDataset && newDataset.data[i]) || {};\n\n        if (newIndex !== UNDEF) {\n          tempIndex = newIndex + i;\n          dataObj = dataStore[tempIndex];\n        } else {\n          tempIndex = dataStore.length - len + i;\n          dataObj = dataStore[tempIndex];\n        }\n        plotIndex = tempIndex;\n      } else {\n        dataObj = dataStore[i];\n        setData = (setDataArr && setDataArr[i]) || {};\n        plotIndex = i;\n      }\n\n      if (!dataObj) {\n        dataObj = dataStore[plotIndex] = {};\n      }\n\n      if (!dataObj.config) {\n        dataObj.config = {};\n      }\n\n      if (!dataObj.graphics) {\n        dataObj.graphics = {};\n      }\n\n      dataSet._plotConfigure(plotIndex, setData, newDataSetLen);\n      tempIndex && tempIndex++;\n\n      config = dataObj && dataObj.config;\n      outlierIconShape = pluck(setData.dip, JSONData.dip);\n      config.dip = (outlierIconShape === POLYGON) ? 0 : (outlierIconShape === SPOKE) ? 1 : 0;\n      config.toolText = config.finalTooltext = BOLDSTARTTAG + JSONData.seriesname + chartConfig.tooltipsepchar + BOLDENDTAG + config.displayValue;\n    }\n  }\n}\n\nexport default BoxAndWhiskerLinedataset;\n","export default {\n  'initial.dataset.boxandwhiskerline': function () {\n    return {\n      'line.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        finalAttr: {\n          opacity: 1\n        },\n        slot: 'plot',\n        startEnd: {\n          start: 0.5,\n          end: 1\n        }\n      }],\n      'anchor.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        finalAttr: {\n          opacity: 1\n        },\n        slot: 'plot',\n        startEnd: {\n          start: 0.5,\n          end: 1\n        }\n      }]\n    };\n  }\n};\n","export default {\n  'initial.dataset.boxandwhisker2D': function () {\n    return {\n      'upperBox.appearing': (inputJSON) => {\n        return [{\n          initialAttr: {\n            x: inputJSON.attr.x,\n            y: inputJSON.attr.y + inputJSON.attr.height,\n            height: 0,\n            width: inputJSON.attr.width\n          },\n          slot: 'plot',\n          startEnd: {\n            start: 0,\n            end: 0.5\n          }\n        }];\n      },\n      'lowerBox.appearing': (inputJSON) => {\n        return [{\n          initialAttr: {\n            x: inputJSON.attr.x,\n            y: inputJSON.attr.y,\n            height: 0,\n            width: inputJSON.attr.width\n          },\n          slot: 'plot',\n          startEnd: {\n            start: 0,\n            end: 0.5\n          }\n        }];\n      },\n      'path.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        finalAttr: {\n          opacity: 1\n        },\n        slot: 'plot',\n        startEnd: {\n          start: 0.5,\n          end: 1\n        }\n      }],\n      'midline.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        finalAttr: {\n          opacity: 1\n        },\n        slot: 'plot',\n        startEnd: {\n          start: 0,\n          end: 0.2\n        }\n      }],\n      'group.appearing': (inputJSON) => {\n        if (inputJSON.attr.name === 'label-group') {\n          return [{\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'final'\n          }];\n        }\n        return [{\n          initialAttr: {\n            opacity: 1\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","import { datasetFactory, componentFactory } from '@fusioncharts/core/src/lib';\nimport BoxAndWhiskerStatisticalCalc from '../dataset/boxandwhisker/box-and-whisker-statistical-calc';\n/**\n * function to  create dataset\n * sort data wrt. x value\n * assign dataset to its parents\n **/\nexport default function (chart) {\n  let datasetsJSON = chart.getFromEnv('dataSource').dataset,\n    canvas = chart.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n    vCanvas,\n    datasetParent = vCanvas = canvas.getChildren('vCanvas')[0],\n    dsType = chart.config.defaultDatasetType || '',\n    groupManager;\n\n  if (!datasetsJSON) {\n    chart.setChartMessage();\n  }\n\n  componentFactory(vCanvas, chart.getDSGroupdef(), 'datasetGroup_' + dsType);\n  groupManager = vCanvas.getChildren('datasetGroup_' + dsType);\n  groupManager && (datasetParent = groupManager[0]);\n\n  componentFactory(chart, BoxAndWhiskerStatisticalCalc, 'BoxAndWhiskerStatisticalCalc');\n  vCanvas.getChildren('datasetGroup_' + dsType)[0].addToEnv('BoxAndWhiskerStatisticalCalc',\n    chart.getChildren('BoxAndWhiskerStatisticalCalc')[0]);\n\n  // Adding the JSON data of line dataset to the parent of boxandwhisker ds\n  datasetParent.addToEnv('lineJSON', chart._getLineJSONdata());\n  datasetFactory(datasetParent, chart.getDSdef(), 'dataset', datasetsJSON.length, datasetsJSON);\n}\n","import { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { BLANKSTRING, BLANK, defined, COMMASTRING } from '@fusioncharts/core/src/lib';\n/**\n * class to make the mathematical calculations for boxAndWhisker\n */\nclass BoxAndWhiskerStatisticalCalc extends ComponentInterface {\n  /**\n   * Function to set the data for the bw calculator\n   * @param {string} val The comma separated string value\n   */\n  setArray (val) {\n    var nf = this.getFromEnv('number-formatter'), // eslint-disable-line good-practices/no-single-usage-variable\n      sum = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      len,\n      value = val,\n      dataArr;\n    !value && (value = BLANK);\n    // First we make an arry form the comma-separated value.\n    // and then we sort and store the data array in dataArr\n    //  for further calculation.\n    dataArr = value.replace(/\\s/g, BLANK).split(COMMASTRING);\n    // Parse the values using NumberFormatter getCleanValue\n    len = this.dataLength = dataArr && dataArr.length;\n\n    while (len--) {\n      sum += dataArr[len] = nf.getCleanValue(dataArr[len]);\n    }\n\n    // Now sort the data in ascending order\n    // eslint-disable-next-line good-practices/no-function-dependency\n    dataArr && dataArr.sort(function (a, b) {\n      return a - b;\n    });\n\n    this.values = dataArr;\n    // Calculate and store the Mean\n    this.mean = sum / this.dataLength;\n    this.getFrequencies();\n  }\n\n  /**\n   * Function to get the values of quartiles\n   * @return {Object} The value of 1st and 3rd quartile\n   */\n  getQuartiles () {\n    var values = this.values,\n      len = this.dataLength,\n      isOdd = len % 2,\n      q1Pos,\n      q1LowPos,\n      q3Pos,\n      q3LowPos,\n      q1Val,\n      q3Val,\n      method = BLANKSTRING; // eslint-disable-line good-practices/no-single-usage-variable\n\n    switch (method) {\n      case 'tukey':\n        if (isOdd) {\n          // Q1 = n + 3 / 4 And Q3 = 3N + 1 / 4\n          q1Pos = (len + 3) / 4;\n          q3Pos = ((len * 3) + 1) / 4;\n        } else {\n          // Q1 = n + 2 / 4 And Q3 = 3N + 2 / 4\n          q1Pos = (len + 2) / 4;\n          q3Pos = ((len * 3) + 2) / 4;\n        }\n        break;\n      case 'mooremccabe':\n        if (isOdd) {\n          // Q1 = n + 1 / 4 And Q3 = 3N + 3 / 4\n          q1Pos = (len + 1) / 4;\n          q3Pos = q1Pos * 3;\n        } else {\n          // Q1 = n + 2 / 4 And Q3 = 3N + 2 / 4\n          q1Pos = (len + 2) / 4;\n          q3Pos = ((len * 3) + 2) / 4;\n        }\n        break;\n      case 'freundperles':\n        // Q1 = n + 3 / 4 And Q3 = 3N + 1 / 4\n        q1Pos = (len + 3) / 4;\n        q3Pos = ((len * 3) + 1) / 4;\n        break;\n      case 'mendenhallsincich':\n        // Q1 = [n + 1 / 4] And [Q3 = 3N + 3 / 4]\n        q1Pos = Math.round((len + 1) / 4);\n        q3Pos = Math.round(q1Pos * 3);\n        break;\n      default:\n        // Q1 = n + 1 / 4 And Q3 = 3N + 3 / 4\n        q1Pos = (len + 1) / 4;\n        q3Pos = q1Pos * 3;\n        break;\n    }\n\n    q1Pos -= 1;\n    q3Pos -= 1;\n    q1LowPos = Math.floor(q1Pos);\n    q3LowPos = Math.floor(q3Pos);\n\n    q1Val = q1Pos - q1LowPos ? values[q1LowPos] + // eslint-disable-line good-practices/no-single-usage-variable\n              ((values[Math.ceil(q1Pos)] - values[q1LowPos]) *\n              (q1Pos - q1LowPos)) : values[q1Pos];\n    q3Val = q3Pos - q3LowPos ? values[q3LowPos] + // eslint-disable-line good-practices/no-single-usage-variable\n              ((values[Math.ceil(q3Pos)] - values[q3LowPos]) *\n              (q3Pos - q3LowPos)) : values[q3Pos];\n\n    this.quartiles = {\n      q1: q1Val,\n      q3: q3Val\n    };\n    return this.quartiles;\n  }\n\n  /**\n   * Return min and max values from the data array.\n   * @return {Object} Contains the minimum and maximum of the entered data\n   */\n  getMinMax () {\n    var values = this.values;\n    return {\n      min: values[0],\n      max: values[this.dataLength - 1]\n    };\n  }\n\n  /**\n   * calculate and returns the mean value\n   * @return {number} mean value\n   */\n  getMean () {\n    return this.mean;\n  }\n\n  /**\n   * calculate the MeanDeviation\n   * @return {number} meanDevaition\n   */\n  getMD () {\n    var mean = this.mean, // eslint-disable-line good-practices/no-single-usage-variable\n      freq = this.frequencies,\n      freqLen = freq.length,\n      freqObj,\n      sum = 0; // eslint-disable-line good-practices/no-single-usage-variable\n\n    while (freqLen--) {\n      freqObj = freq[freqLen];\n      sum += freqObj.frequency * Math.abs(freqObj.value - mean);\n    }\n    return sum / this.dataLength;\n  }\n\n  /**\n   * calculate the standard deviation\n   * @return {number} standard deviation\n   */\n  getSD () {\n    var mean = this.mean, // eslint-disable-line good-practices/no-single-usage-variable\n      values = this.values, // eslint-disable-line good-practices/no-single-usage-variable\n      i = this.dataLength,\n      len = i, // eslint-disable-line good-practices/no-single-usage-variable\n      sum = 0; // eslint-disable-line good-practices/no-single-usage-variable\n\n    while (i--) {\n      sum += Math.pow(values[i] - mean, 2);\n    }\n\n    return Math.sqrt(sum / (len - 1));\n  }\n\n  /**\n   * calculate the quartile deviation\n   * @return {number} quartile deviation\n   */\n  getQD () {\n    return (this.quartiles.q3 - this.quartiles.q1) * 0.5;\n  }\n\n  /**\n   * calculate the frequencies and sum of the values\n   */\n  getFrequencies () {\n    var frequenciesArr = [],\n      len = this.dataLength, // eslint-disable-line good-practices/no-single-usage-variable\n      values = this.values, // eslint-disable-line good-practices/no-single-usage-variable\n      sum = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      value,\n      freqObj,\n      index;\n\n    for (index = 0; index < len; index += 1) {\n      sum += value = values[index];\n      if (defined(frequenciesArr[index])) {\n        frequenciesArr[index].frequency += 1;\n      } else {\n        freqObj = {};\n        freqObj.value = value;\n        freqObj.frequency = 1;\n        frequenciesArr[index] = freqObj;\n      }\n    }\n    this.sum = sum;\n    this.frequencies = frequenciesArr;\n  }\n\n  /**\n   * Function to get the median value\n   * @return {number} median\n   */\n  getMedian () {\n    var len = this.dataLength,\n      midVal = len * 0.5,\n      values = this.values;\n\n    return len % 2 === 0 ? (values[midVal] + values[midVal - 1]) / 2\n      : values[Math.floor(midVal)];\n  }\n}\nexport default BoxAndWhiskerStatisticalCalc;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ColumnMultiseriesGroup from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\n\nlet key = 'manager-defaultVcanvasGroup-lines',\n  vcanvasGroup = 'defaultVcanvasGroup';\n/**\n * class for marimekko group manager\n */\nclass BoxAndWhiskerMultiSeriesGroup extends ColumnMultiseriesGroup {\n  /**\n  * Create child containers\n  */\n  createContainer () {\n    super.createContainer();\n    let manager = this,\n      pContainer = manager.getLinkedParent().getChildContainer(vcanvasGroup); // eslint-disable-line good-practices/no-single-usage-variable\n\n    !manager.getChildContainer(key) && manager.addChildContainer(key,\n      // create group\n      manager.getFromEnv('animationManager').setAnimation({\n        el: 'group',\n        component: manager,\n        attr: { name: key },\n        container: pContainer\n      }));\n  }\n}\n\nexport default BoxAndWhiskerMultiSeriesGroup;\n","import Sankey from '@fusioncharts/powercharts/src/chart/sankey';\nexport default Sankey;\n","import CommonAPI from '@fusioncharts/charts/src/chart/_internal/commonchartapi';\nimport SankeyDS from '../../dataset/sankey';\nimport sankeyDatasetFactory from '../../factories/sankey-dataset-factory';\nimport isArray from '@fusioncharts/utils/src/type/is-array';\nimport { preDefStr, pluck, parseUnsafeString, POSITION_LEFT, POSITION_RIGHT, POSITION_TOP } from '@fusioncharts/core/src/lib';\nimport legendFactory from '@fusioncharts/charts/src/factories/legend';\nimport { traverseGraph, createNodeLinks, createNodeValues } from '../../dataset/sankey/sankeyhelper';\n\nconst DEFAULT_NODE_WIDTH = 20,\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  RIGHT = 'right',\n  INVALIDGRAPH = 'Self loops and circular links are not supported.',\n  prepareData = (dataSource) => {\n    let parsedNodes = [],\n      parsedLinks = [],\n      nodes = dataSource.nodes || [],\n      links = dataSource.links || [],\n      nodeId,\n      nodeIds = {};\n\n    nodes.forEach(node => {\n      nodeId = pluck(node.id, node.label);\n      if (!nodeId) return;\n\n      nodeIds[nodeId.toString()] = node;\n    });\n\n    Object.keys(nodeIds).forEach((id, index) => {\n      parsedNodes.push(Object.assign({}, nodeIds[id], { props: {} }));\n      parsedNodes[index].id = parseUnsafeString((parsedNodes[index].id || parsedNodes[index].label).toString());\n      parsedNodes[index].label = parseUnsafeString((parsedNodes[index].label || parsedNodes[index].id).toString());\n    });\n\n    links.forEach(link => {\n      if (!nodeIds[link.from] || !nodeIds[link.to]) return;\n\n      parsedLinks.push(Object.assign({}, link, {\n        props: {\n          source: parseUnsafeString(link.from),\n          target: parseUnsafeString(link.to)\n        },\n        value: pluck(link.value, '0')\n      }));\n    });\n\n    return {\n      nodes: parsedNodes,\n      links: parsedLinks\n    };\n  };\nclass Sankey extends CommonAPI {\n  constructor () {\n    super();\n\n    this.registerFactory('legend', legendFactory);\n    this.registerFactory('dataset', sankeyDatasetFactory, ['legend']);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let chartConfig = this.config;\n\n    this.legendposition = RIGHT;\n    chartConfig.legendPosition = preDefStr.POSITION_BOTTOM;\n    chartConfig.orientation = HORIZONTAL;\n    chartConfig.skipCanvasDrawing = true;\n    chartConfig.alignCaptionWithCanvas = false;\n    chartConfig.basefontsize = 11;\n  }\n\n  static getName () {\n    return 'sankey';\n  }\n  getName () {\n    return 'sankey';\n  }\n\n  getDSdef () {\n    return SankeyDS;\n  }\n\n  _checkInvalidData () {\n    let dataSource = this.getFromEnv('dataSource');\n\n    if (!isArray(dataSource.nodes) || !dataSource.nodes.length) {\n      delete this.config.errorMessage;\n      return true;\n    }\n    return false;\n  }\n\n  // eslint-disable-next-line\n  _checkInvalidSpecificData () {\n    let chart = this,\n      parsedData = prepareData(chart.getFromEnv('dataSource'));\n\n    createNodeLinks(parsedData);\n    if (!traverseGraph(parsedData)) {\n      chart.config.errorMessage = INVALIDGRAPH;\n      return true;\n    }\n\n    delete chart.config.errorMessage;\n    chart.addToEnv('sankey-graph', parsedData);\n    return false;\n  }\n\n  setChartMessage (message, chartObj, _container) {\n    let { errorMessage } = this.config;\n\n    super.setChartMessage(message || errorMessage, chartObj, _container);\n  }\n\n  configureAttributes (inputConfig = {}) {\n    super.configureAttributes(inputConfig);\n\n    let chart = this,\n      chartConfig = chart.config,\n      chartAttr = inputConfig.chart || {},\n      numberFormatter = chart.getFromEnv('number-formatter'),\n      graph = chart.getFromEnv('sankey-graph'),\n      { nodes, links } = graph;\n\n    if (typeof chartAttr.orientation !== 'undefined') {\n      chartConfig.orientation = chartAttr.orientation.toString().toLowerCase();\n      chartConfig.orientation = chartConfig.orientation === VERTICAL ? VERTICAL : HORIZONTAL;\n    } else {\n      chartConfig.orientation = HORIZONTAL;\n    }\n\n    if (typeof chartAttr.legendposition !== 'undefined') {\n      chartConfig.legendPosition = (['top-left', 'top', 'top-right', 'right-top', 'right', 'right-bottom', 'bottom-right', 'bottom', 'bottom-left', 'left-bottom', 'left', 'left-top'].includes(chartAttr.legendposition.toString().toLowerCase()) ? chartAttr.legendposition.toString().toLowerCase() : preDefStr.POSITION_BOTTOM);\n    } else {\n      chartConfig.legendPosition = RIGHT;\n    }\n    chartConfig.legendposition = chartConfig.legendPosition;\n    chart.addToEnv('orientation', chartConfig.orientation);\n\n    chartConfig.nodeWidth = Math.max(0, numberFormatter.getCleanValue(pluck(chartAttr.nodewidth, DEFAULT_NODE_WIDTH)));\n    nodes.forEach(node => {\n      node.nodeWidth = chartConfig.nodeWidth;\n    });\n    links.forEach(link => {\n      link.value = Math.max(0, numberFormatter.getCleanValue(pluck(link.value, 0)));\n    });\n\n    createNodeValues(graph);\n  }\n\n  _spaceManager () {\n    let chart = this,\n      chartConfig = chart.config,\n      {\n        legendPosition,\n        showLegend,\n        marginLeft,\n        marginTop,\n        marginRight,\n        marginBottom\n      } = chartConfig,\n      width = +chart.getFromEnv('chartWidth'),\n      height = +chart.getFromEnv('chartHeight'),\n      legend,\n      allotedSpace,\n      actionBarSpace,\n      legendSpace;\n\n    width -= (marginLeft + marginRight);\n    height -= (marginTop + marginBottom);\n\n    actionBarSpace = chart._manageActionBarSpace(0.225 * height);\n    chart._allocateSpace(actionBarSpace);\n\n    if (showLegend) {\n      legendPosition = legendPosition || [];\n      if (legendPosition.split('-')[0] === POSITION_TOP || legendPosition.split('-')[0] === preDefStr.POSITION_BOTTOM) {\n        allotedSpace = height * 0.3;\n      } else {\n        allotedSpace = width * 0.3;\n        if (legendPosition.split('-')[0] === POSITION_LEFT) {\n          chart._allocateSpace({\n            left: 11\n          });\n        } else if (legendPosition.split('-')[0] === POSITION_RIGHT) {\n          chart._allocateSpace({\n            right: 11\n          });\n        }\n      }\n\n      legend = chart.getChildren('legend')[0];\n      legendSpace = legend._manageLegendPosition(allotedSpace);\n      chart._allocateSpace(legendSpace);\n    }\n\n    chart._manageChartMenuBar(0.6 * chartConfig.availableHeight);\n  }\n\n  _postSpaceManagement () {\n    let chart = this,\n      {\n        showLegend\n      } = chart.config,\n      legends = chart.getChildren('legend');\n\n    if (legends.length && showLegend) {\n      legends.forEach(legend => legend.postSpaceManager());\n    }\n    chart.allocateDimensionOfChartMenuBar();\n  }\n}\n\nexport default Sankey;\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport sankeyNodeFactory from '../../factories/sankey-node-factory';\nimport sankeyLinkFactory from '../../factories/sankey-link-factory';\nimport { createNodeDimensions } from './sankeyhelper';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport linkAnimation from './index.animation';\n\nlet GUTTER5 = 5,\n  START = 'start',\n  INSIDE = 'inside',\n  END = 'end',\n  BLANK = '',\n  HORIZONTAL = 'horizontal',\n  NODEROLLOVER = 'dataPlotRollOver',\n  NODEROLLOUT = 'dataPlotRollOut',\n  NODECLICK = 'dataPlotClick',\n  LINKROLLOVER = 'linkRollOver',\n  LINKROLLOUT = 'linkRollOut',\n  LINKCLICK = 'linkClick';\n\naddDep({\n  name: 'sankeyLinkAnimation',\n  type: 'animationRule',\n  extension: linkAnimation\n});\nclass Sankey extends SmartRenderer {\n  constructor () {\n    super();\n\n    this.registerFactory('node', sankeyNodeFactory);\n    this.registerFactory('link', sankeyLinkFactory, ['node']);\n  }\n  static getName () {\n    return 'sankey';\n  }\n\n  getName () {\n    return 'sankey';\n  }\n\n  getType () {\n    return 'dataset';\n  }\n\n  configureAttributes (inputConfig = {}) {\n    Object.assign(this.config, inputConfig);\n  }\n\n  _addLegend () {\n    let dataset = this,\n      dsConfig = dataset.config,\n      nodes = dataset.getChildren('nodes'),\n      legend = dataset.getFromEnv('legend'),\n      nodeStyle,\n      nodeConfig,\n      legendItem,\n      legendItemId,\n      legendItemMap = dsConfig.legendItemMap = dsConfig.legendItemMap || {},\n      curLegendItems = new Set();\n\n    Object.keys(legendItemMap).forEach(key => curLegendItems.add(legendItemMap[key]));\n    nodes.forEach(node => {\n      legendItemId = legendItemMap[node.getId()];\n      legendItem = legend.getItem(legendItemId);\n      if (!legendItem) {\n        legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(legendItemId);\n        legendItemMap[node.getId()] = legendItemId;\n      } else {\n        // eslint-disable-next-line\n        curLegendItems.delete(legendItemId);\n      }\n\n      legendItem.configure({\n        enabled: true,\n        label: node.config.label\n      });\n\n      node.setData({\n        legendItemId\n      });\n\n      nodeConfig = node.config;\n      nodeStyle = nodeConfig.style;\n\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: nodeStyle.node.normal.fill,\n          rawFillColor: nodeConfig.rawCosmetics.fill,\n          stroke: nodeStyle.node.normal.stroke,\n          cursor: 'default'\n        },\n        text: {\n          cursor: 'default'\n        }\n      });\n    });\n\n    curLegendItems.forEach(item => {\n      legend.disposeItem(item);\n    });\n  }\n\n  allocatePosition () {\n    let dataset = this,\n      bounds,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      sankeyGraph = dataset.getFromEnv('sankey-graph'),\n      orientation = dataset.getFromEnv('orientation'),\n      {\n        canvasLeft,\n        canvasTop,\n        canvasHeight,\n        canvasWidth\n      } = chartConfig,\n      columnWidth = 0,\n      columnHeight = 0,\n      columns = 0,\n      { nodeWidth, nodeSpacing, nodeRelaxation, style } = dataset.config,\n      nodeLabelStyle = style.node.label;\n\n    bounds = {\n      left: canvasLeft,\n      top: canvasTop,\n      right: canvasLeft + canvasWidth,\n      bottom: canvasTop + canvasHeight\n    };\n\n    dataset.config.nodeLabelCosmetics = {\n      'font-size': this.computeFontSize(nodeLabelStyle.fontSize),\n      'font-family': nodeLabelStyle.fontFamily,\n      'font-weight': nodeLabelStyle.fontWeight,\n      'font-style': nodeLabelStyle.fontStyle\n    };\n\n    if (orientation === HORIZONTAL) {\n      dataset._accomodateBoundaryHLabels(bounds);\n\n      createNodeDimensions(sankeyGraph, {\n        width: [bounds.left, bounds.right],\n        height: [bounds.top, bounds.bottom],\n        nodeGutter: nodeSpacing,\n        orientation,\n        nodeRelaxation\n      });\n\n      sankeyGraph.nodes.forEach(node => {\n        columns = Math.max(columns, node.props.depth);\n      });\n\n      columnWidth = dataset.config.columnGap = Math.max((bounds.right - bounds.left - nodeWidth * columns) / Math.max(columns, 1), 0);\n      dataset._accomodateInternalHLabels(columnWidth);\n    } else {\n      dataset._accomodateBoundaryVLabels(bounds);\n\n      createNodeDimensions(sankeyGraph, {\n        width: [bounds.left, bounds.right],\n        height: [bounds.top, bounds.bottom],\n        nodeGutter: nodeSpacing,\n        orientation,\n        nodeRelaxation\n      });\n\n      sankeyGraph.nodes.forEach(node => {\n        columns = Math.max(columns, node.props.depth);\n      });\n\n      columnHeight = dataset.config.columnGap = Math.max((bounds.bottom - bounds.top - nodeWidth * columns) / Math.max(columns, 1), 0);\n      dataset._accomodateInternalVLabels(columnHeight, bounds.bottom - bounds.top);\n    }\n  }\n\n  _accomodateBoundaryHLabels (bounds) {\n    let dataset = this,\n      dsConfig = dataset.config,\n      { labelSepChar } = dsConfig,\n      nodes = dataset.getChildren('nodes'),\n      sl = dataset.getFromEnv('smartLabel'),\n      canvasWidth = bounds.right - bounds.left,\n      labelSl,\n      valueSl,\n      space,\n      spaceFactor,\n      availableWidth,\n      divFactor,\n      formattedValueSl,\n      maxLeftSpaceReq = 0,\n      maxRightSpaceReq = 0;\n\n    nodes.forEach(node => {\n      const { showValue, showLabel, label, props, labelPosition, value, rotateLabel, labelPadding } = node.config,\n        { sourceLinks, targetLinks } = props;\n\n      sl.setStyle(dataset.config.nodeLabelCosmetics);\n      valueSl = sl.getSize(showValue ? value : BLANK);\n      formattedValueSl = sl.getSize(showValue ? labelSepChar + ' ' + value : BLANK);\n      availableWidth = Math.max(0, canvasWidth - formattedValueSl.width);\n\n      if (sourceLinks.length && !targetLinks.length) {\n        if (labelPosition === END) return;\n\n        spaceFactor = labelPosition === START ? 0.1 : 0.2;\n        divFactor = spaceFactor * 10;\n        labelSl = sl.getSmartText(showLabel ? label : BLANK, spaceFactor * availableWidth, sl._lineHeight);\n\n        if (rotateLabel) {\n          space = labelPosition === INSIDE ? 0 : Math.max(labelSl.height / divFactor, valueSl.height / divFactor);\n          maxLeftSpaceReq = Math.max(\n            maxLeftSpaceReq,\n            space + ((space && labelPosition === START) ? labelPadding : 0)\n          );\n        } else {\n          space = (labelSl.width + (labelSl.width ? formattedValueSl.width : valueSl.width)) / divFactor;\n          maxLeftSpaceReq = Math.max(\n            maxLeftSpaceReq,\n            space + ((space && labelPosition === START) ? labelPadding : 0)\n          );\n        }\n        node.setData({ formattedLabel: labelSl });\n      } else if (!sourceLinks.length && targetLinks.length) {\n        if (labelPosition === START) return;\n\n        spaceFactor = labelPosition === END ? 0.1 : 0.2;\n        divFactor = spaceFactor * 10;\n        labelSl = sl.getSmartText(showLabel ? label : BLANK, spaceFactor * availableWidth, sl._lineHeight);\n\n        if (rotateLabel) {\n          space = labelPosition === INSIDE ? 0 : Math.max(labelSl.height / divFactor, valueSl.height / divFactor);\n          maxRightSpaceReq = Math.max(\n            maxRightSpaceReq,\n            space + ((space && labelPosition === END) ? labelPadding : 0)\n          );\n        } else {\n          space = (labelSl.width + (labelSl.width ? formattedValueSl.width : valueSl.width)) / divFactor;\n          maxRightSpaceReq = Math.max(\n            maxRightSpaceReq,\n            space + ((space && labelPosition === END) ? labelPadding : 0)\n          );\n        }\n        node.setData({ formattedLabel: labelSl });\n      }\n    });\n\n    bounds.left += maxLeftSpaceReq + (maxLeftSpaceReq ? GUTTER5 : 0);\n    bounds.right -= (maxRightSpaceReq + (maxRightSpaceReq ? GUTTER5 : 0));\n\n    return bounds;\n  }\n\n  _accomodateInternalHLabels (maxColumnWidth) {\n    let dataset = this,\n      nodes = dataset.getChildren('nodes'),\n      sl = dataset.getFromEnv('smartLabel'),\n      availableWidth,\n      { labelSepChar } = dataset.config,\n      formattedValueSl,\n      labelSl;\n\n    nodes.forEach(node => {\n      let { showValue, showLabel, label, value, props, rotateLabel, labelPosition, labelPadding } = node.config,\n        { sourceLinks, targetLinks } = props,\n        nodeHeight = Math.max(0, props.y1 - props.y0);\n\n      label = showLabel ? label : BLANK;\n      value = showValue ? value : BLANK;\n      sl.setStyle(dataset.config.nodeLabelCosmetics);\n      formattedValueSl = sl.getSize(showValue ? labelSepChar + ' ' + value : BLANK);\n      availableWidth = Math.max(0, maxColumnWidth * 0.75 - labelPadding - formattedValueSl.width);\n\n      if (rotateLabel) {\n        labelSl = sl.getSmartText(label, nodeHeight - formattedValueSl.width, sl._lineHeight);\n        node.setData({ formattedLabel: labelSl });\n        return;\n      }\n\n      if (\n        (sourceLinks.length && !targetLinks.length && labelPosition === END) ||\n        (!sourceLinks.length && targetLinks.length && labelPosition === START) ||\n        (sourceLinks.length && targetLinks.length) ||\n        (!sourceLinks.length && !targetLinks.length)\n      ) {\n        labelSl = sl.getSmartText(label, availableWidth, sl._lineHeight);\n        node.setData({ formattedLabel: labelSl });\n      }\n    });\n  }\n\n  _accomodateBoundaryVLabels (bounds) {\n    let dataset = this,\n      nodes = dataset.getChildren('nodes'),\n      sl = dataset.getFromEnv('smartLabel'),\n      labelSepChar = dataset.config.labelSepChar,\n      canvasHeight = bounds.bottom - bounds.top,\n      valueSl,\n      labelSl,\n      spaceFactor,\n      space,\n      availableHeight,\n      divFactor,\n      formattedValueSl,\n      maxTopSpaceReq = 0,\n      maxBottomSpaceReq = 0;\n\n    nodes.forEach(node => {\n      let { props, labelPosition, rotateLabel, showValue, showLabel, value, label, labelPadding } = node.config,\n        { sourceLinks, targetLinks } = props;\n\n      value = showValue ? value : BLANK;\n      label = showLabel ? label : BLANK;\n\n      sl.setStyle(dataset.config.nodeLabelCosmetics);\n      valueSl = sl.getSize(value);\n      formattedValueSl = sl.getSize(showValue ? labelSepChar + ' ' + value : BLANK);\n      availableHeight = Math.max(0, canvasHeight - formattedValueSl.width);\n\n      if (sourceLinks.length && !targetLinks.length) {\n        if (labelPosition === END) return;\n\n        spaceFactor = labelPosition === START ? 0.1 : 0.2;\n        divFactor = spaceFactor * 10;\n        labelSl = sl.getSmartText(label, spaceFactor * availableHeight, sl._lineHeight);\n\n        if (rotateLabel) {\n          space = (labelSl.width + (labelSl.width ? formattedValueSl.width : valueSl.width)) / divFactor;\n          maxTopSpaceReq = Math.max(\n            maxTopSpaceReq,\n            space + ((space && labelPosition === START) ? labelPadding : 0)\n          );\n        } else {\n          space = labelPosition === INSIDE ? 0 : Math.max(labelSl.height / divFactor, valueSl.height / divFactor);\n          maxTopSpaceReq = Math.max(\n            maxTopSpaceReq,\n            space + ((space && labelPosition === START) ? labelPadding : 0)\n          );\n        }\n        node.setData({ formattedLabel: labelSl });\n      } else if (!sourceLinks.length && targetLinks.length) {\n        if (labelPosition === START) return;\n\n        spaceFactor = labelPosition === END ? 0.1 : 0.2;\n        divFactor = spaceFactor * 10;\n        labelSl = sl.getSmartText(label, spaceFactor * availableHeight, sl._lineHeight);\n\n        if (rotateLabel) {\n          space = (labelSl.width + (labelSl.width ? formattedValueSl.width : valueSl.width)) / divFactor;\n          maxBottomSpaceReq = Math.max(\n            maxBottomSpaceReq,\n            space + ((space && labelPosition === END) ? labelPadding : 0)\n          );\n        } else {\n          space = labelPosition === INSIDE ? 0 : Math.max(labelSl.height / divFactor, valueSl.height / divFactor);\n          maxBottomSpaceReq = Math.max(\n            maxBottomSpaceReq,\n            space + ((space && labelPosition === END) ? labelPadding : 0)\n          );\n        }\n        node.setData({ formattedLabel: labelSl });\n      }\n    });\n\n    bounds.top += maxTopSpaceReq + (maxTopSpaceReq ? GUTTER5 : 0);\n    bounds.bottom -= (maxBottomSpaceReq + (maxBottomSpaceReq ? GUTTER5 : 0));\n\n    return bounds;\n  }\n\n  _accomodateInternalVLabels (maxColumnWidth) {\n    let dataset = this,\n      nodes = dataset.getChildren('nodes'),\n      sl = dataset.getFromEnv('smartLabel'),\n      labelSepChar = dataset.config.labelSepChar,\n      availableHeight,\n      labelSl,\n      nodeWidth,\n      formattedValueSl;\n\n    nodes.forEach(node => {\n      let { showValue, props, label, value, showLabel, rotateLabel, labelPosition, labelPadding } = node.config,\n        { sourceLinks, targetLinks } = props;\n\n      sl.setStyle(dataset.config.nodeLabelCosmetics);\n      label = showLabel ? label : BLANK;\n      value = showValue ? value : BLANK;\n      formattedValueSl = sl.getSize(showValue ? labelSepChar + ' ' + value : BLANK);\n      availableHeight = Math.max(0, maxColumnWidth * 0.75 - labelPadding - formattedValueSl.width);\n\n      nodeWidth = props.x1 - props.x0;\n      if (!rotateLabel) {\n        labelSl = sl.getSmartText(label, nodeWidth - formattedValueSl.width, sl._lineHeight);\n        node.setData({ formattedLabel: labelSl });\n        return;\n      }\n\n      if (\n        (sourceLinks.length && !targetLinks.length && labelPosition === END) ||\n        (!sourceLinks.length && targetLinks.length && labelPosition === START) ||\n        (sourceLinks.length && targetLinks.length) ||\n        (!sourceLinks.length && !targetLinks.length)\n      ) {\n        labelSl = sl.getSmartText(label, availableHeight, sl._lineHeight);\n        node.setData({ formattedLabel: labelSl });\n      }\n    });\n  }\n\n  attachListeners () {\n    let dataset = this,\n      nodes = dataset.getChildren('nodes'),\n      links = dataset.getChildren('links');\n\n    nodes.forEach(node => {\n      node.onFocusCallback = node.onFocusCallback || dataset.interactionCallback(node, 'focus');\n      node.onFocusOutCallback = node.onFocusOutCallback || dataset.interactionCallback(node, 'normal');\n      node.onClickCallback = node.onClickCallback || dataset.interactionCallback(node, 'click');\n      node.dragStartCallback = node.dragStartCallback || dataset.dragCallback(node, 'start');\n      node.dragMoveCallback = node.dragMoveCallback || dataset.dragCallback(node, 'move');\n      node.dragEndCallback = node.dragEndCallback || dataset.dragCallback(node, 'end');\n\n      node.addEventListener('fc-mouseover', node.onFocusCallback);\n      node.addEventListener('fc-mouseout', node.onFocusOutCallback);\n      node.addEventListener('fc-click', node.onClickCallback);\n\n      node.addEventListener('fc-dragstart', node.dragStartCallback);\n      node.addEventListener('fc-dragmove', node.dragMoveCallback);\n      node.addEventListener('fc-dragend', node.dragEndCallback);\n    });\n\n    links && links.forEach(link => {\n      link.onFocusCallback = link.onFocusCallback || dataset.interactionCallback(link, 'focus');\n      link.onFocusOutCallback = link.onFocusOutCallback || dataset.interactionCallback(link, 'normal');\n      link.onClickCallback = link.onClickCallback || dataset.interactionCallback(link, 'click');\n\n      link.addEventListener('fc-mouseover', link.onFocusCallback);\n      link.addEventListener('fc-mouseout', link.onFocusOutCallback);\n      link.addEventListener('fc-click', link.onClickCallback);\n    });\n  }\n\n  interactionCallback (component, mode) {\n    let dataset = this,\n      dsConfig = dataset.config,\n      chart = dataset.getLinkedParent(),\n      type = component.getType();\n    if (type === 'node') {\n      return function () {\n        let nodes = dataset.getChildren('nodes'),\n          links = dataset.getChildren('links') || [],\n          eventArgs = Object.assign({}, component.config.eventArgs),\n          componentId = component.getId();\n\n        if (component.config.isDragged) return;\n\n        if (mode === 'click') {\n          chart.fireChartInstanceEvent(NODECLICK, eventArgs);\n        } else if (mode === 'normal') {\n          chart.fireChartInstanceEvent(NODEROLLOUT, eventArgs);\n\n          if (!dsConfig.highlightEffect) return;\n\n          nodes.forEach(node => node.setData({ mode: 'normal' }));\n          links.forEach(link => link.setData({ mode: 'normal' }));\n        } else {\n          let focusNodes = new Set(),\n            { sourceLinks, targetLinks } = component.config.props;\n\n          chart.fireChartInstanceEvent(NODEROLLOVER, eventArgs);\n\n          if (!dsConfig.highlightEffect) return;\n\n          focusNodes.add(componentId);\n          sourceLinks.forEach(link => {\n            focusNodes.add(link.to);\n          });\n          targetLinks.forEach(link => {\n            focusNodes.add(link.from);\n          });\n\n          nodes.forEach(node => {\n            if (focusNodes.has(node.getId())) {\n              node.setData({\n                mode: 'focus'\n              });\n            } else {\n              node.setData({\n                mode: 'focusOut'\n              });\n            }\n          });\n\n          links.forEach(link => {\n            let { source, target } = link.config.props;\n            if (componentId === source.id || componentId === target.id) {\n              link.setData({\n                mode: 'focus'\n              });\n            } else {\n              link.setData({\n                mode: 'focusOut'\n              });\n            }\n          });\n        }\n      };\n    }\n    return function () {\n      let nodes = dataset.getChildren('nodes'),\n        links = dataset.getChildren('links') || [],\n        eventArgs = Object.assign({}, component.config.eventArgs);\n\n      if (component.config.isDragged) return;\n\n      if (mode === 'click') {\n        chart.fireChartInstanceEvent(LINKCLICK, eventArgs);\n      } else if (mode === 'normal') {\n        chart.fireChartInstanceEvent(LINKROLLOUT, eventArgs);\n\n        if (!dsConfig.highlightEffect) return;\n\n        nodes.forEach(node => node.setData({ mode: 'normal' }));\n        links.forEach(link => link.setData({ mode: 'normal' }));\n      } else {\n        let focusNodes = new Set(),\n          { source, target } = component.config.props;\n\n        chart.fireChartInstanceEvent(LINKROLLOVER, eventArgs);\n\n        if (!dsConfig.highlightEffect) return;\n\n        focusNodes.add(source.id);\n        focusNodes.add(target.id);\n        nodes.forEach(node => {\n          if (focusNodes.has(node.getId())) {\n            node.setData({\n              mode: 'focus'\n            });\n          } else {\n            node.setData({\n              mode: 'focusOut'\n            });\n          }\n        });\n\n        links.forEach(link => link.setData({ mode: 'focusOut' }));\n        component.setData({\n          mode: 'focus'\n        });\n      }\n    };\n  }\n\n  dragCallback (component, mode) {\n    let dataset = this,\n      dsConfig = dataset.config;\n\n    if (mode === 'start') {\n      return function () {\n        let { props } = component.config,\n          linkComponent,\n          linkProps;\n\n        if (!dsConfig.enableDrag) return;\n\n        component.onFocusOutCallback();\n        component.setData({\n          isDragged: true,\n          curPos: {\n            x0: props.x0,\n            x1: props.x1,\n            y0: props.y0,\n            y1: props.y1\n          }\n        });\n\n        props.sourceLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n          linkProps = linkComponent.config.props;\n\n          linkComponent.setData({\n            isDragged: true,\n            curPos: {\n              x0: linkProps.x0,\n              x1: linkProps.x1,\n              y0: linkProps.y0,\n              y1: linkProps.y1\n            }\n          });\n        });\n        props.targetLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n          linkProps = linkComponent.config.props;\n\n          linkComponent.setData({\n            isDragged: true,\n            curPos: {\n              x0: linkProps.x0,\n              x1: linkProps.x1,\n              y0: linkProps.y0,\n              y1: linkProps.y1\n            }\n          });\n        });\n      };\n    } else if (mode === 'end') {\n      return function () {\n        let { props } = component.config,\n          linkComponent;\n\n        if (!dsConfig.enableDrag) return;\n\n        component.setData({\n          isDragged: false\n        });\n\n        props.sourceLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n          linkComponent.setData({\n            isDragged: false\n          });\n        });\n        props.targetLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n          linkComponent.setData({\n            isDragged: false\n          });\n        });\n      };\n    }\n    return function (evt) {\n      let data = evt.originalEvent.data,\n        dx = data[0],\n        dy = data[1],\n        linkComponent,\n        linkProps,\n        linkCurPos,\n        orientation = dataset.getFromEnv('orientation'),\n        { canvasLeft, canvasRight, canvasTop, canvasBottom } = dataset.getFromEnv('chartConfig'),\n        { curPos, props } = component.config;\n\n      if (!dsConfig.enableDrag) return;\n\n      if (orientation === HORIZONTAL) {\n        if (curPos.y0 + dy < canvasTop || curPos.y1 + dy > canvasBottom) return;\n\n        props.y0 = curPos.y0 + dy;\n        props.y1 = curPos.y1 + dy;\n\n        props.sourceLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n\n          linkProps = linkComponent.config.props;\n          linkCurPos = linkComponent.config.curPos;\n\n          linkProps.y0 = linkCurPos.y0 + dy;\n          linkComponent.setData({});\n        });\n        props.targetLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n\n          linkProps = linkComponent.config.props;\n          linkCurPos = linkComponent.config.curPos;\n\n          linkProps.y1 = linkCurPos.y1 + dy;\n          linkComponent.setData({});\n        });\n      } else {\n        if (curPos.x0 + dx < canvasLeft || curPos.x1 + dx > canvasRight) return;\n\n        props.x0 = curPos.x0 + dx;\n        props.x1 = curPos.x1 + dx;\n\n        props.sourceLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n\n          linkProps = linkComponent.config.props;\n          linkCurPos = linkComponent.config.curPos;\n\n          linkProps.x0 = linkCurPos.x0 + dx;\n          linkComponent.setData({});\n        });\n        props.targetLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n\n          linkProps = linkComponent.config.props;\n          linkCurPos = linkComponent.config.curPos;\n\n          linkProps.x1 = linkCurPos.x1 + dx;\n          linkComponent.setData({});\n        });\n      }\n      component.setData({});\n    };\n  }\n\n  getClip (mode) {\n    let dataset = this,\n      orientation = dataset.getFromEnv('orientation'),\n      clipAr = [],\n      { canvasTop, canvasLeft, canvasWidth, canvasHeight } = dataset.getFromEnv('chartConfig');\n\n    if (orientation === HORIZONTAL) {\n      clipAr.push(canvasLeft);\n      clipAr.push(canvasTop);\n      if (mode === 'init') {\n        clipAr.push(0);\n      } else {\n        clipAr.push(canvasWidth);\n      }\n      clipAr.push(canvasHeight);\n    } else {\n      clipAr.push(canvasLeft);\n      clipAr.push(canvasTop);\n      clipAr.push(canvasWidth);\n      if (mode === 'init') {\n        clipAr.push(0);\n      } else {\n        clipAr.push(canvasHeight);\n      }\n    }\n\n    return clipAr;\n  }\n\n  draw () {\n    let dataset = this;\n\n    dataset.addGraphicalElement({\n      el: 'group',\n      attr: {\n        name: 'sankey-link-group',\n        'clip-rect': dataset.getClip('canvas')\n      },\n      id: 'sankey-link-group',\n      component: dataset,\n      container: {\n        id: 'plotGroup',\n        isParent: true\n      },\n      label: 'linkGroup'\n    });\n\n    dataset.addGraphicalElement({\n      el: 'group',\n      attr: {\n        name: 'sankey-node-group'\n      },\n      id: 'sankey-node-group',\n      component: dataset,\n      container: {\n        id: 'plotGroup',\n        isParent: true\n      },\n      label: 'nodeGroup'\n    });\n\n    dataset.addGraphicalElement({\n      el: 'group',\n      attr: {\n        name: 'sankey-node-label-group',\n        ...dataset.config.nodeLabelCosmetics\n      },\n      id: 'sankey-node-label-group',\n      component: dataset,\n      container: {\n        id: 'datalabelsGroup',\n        isParent: true\n      },\n      label: 'nodeLabelGroup'\n    });\n  }\n}\n\nexport default Sankey;\n","import { parseUnsafeString, getValidValue, pluck, pluckNumber, preDefStr, convertColor, BLANK } from '@fusioncharts/core/src/lib';\nimport SankeyNode from '../dataset/sankey/sankey-node';\n\nconst NONE = 'none',\n  validPosition = ['start', 'inside', 'end'];\n\nexport default function (dataset) {\n  let dsConfig = dataset.config,\n    {\n      nodes,\n      enableDrag,\n      style\n    } = dsConfig,\n    nodeComponent,\n    labelCss,\n    nodeCss,\n    nodeFocusCss,\n    nodeFocusOutCss,\n    rawCosmetics,\n    rawLabelCosmetics,\n    labelBgColor,\n    labelBorderColor,\n    labelPosition,\n    cursor,\n    chartAttr = dataset.getFromEnv('dataSource').chart,\n    nodeLabelStyle = style.node.label,\n    nodeLabelAlpha,\n    inheritFromPlot = pluckNumber(chartAttr.inheritlabelcolorfromnode, 1),\n    colorM = dataset.getFromEnv('color-manager'),\n    numberFormatter = dataset.getFromEnv('number-formatter'),\n    {\n      dataLabelStyle,\n      showLegend\n    } = dataset.getFromEnv('chartConfig'),\n    id;\n\n  nodes.forEach((node, index) => {\n    id = pluck(node.id, node.label);\n\n    rawCosmetics = {\n      fill: pluck(node.color, chartAttr.nodecolor, colorM.getPlotColor(index)),\n      alpha: pluckNumber(node.alpha, chartAttr.nodealpha, 100),\n      focusAlpha: pluckNumber(node.hoveralpha, chartAttr.nodehoveralpha, 100),\n      focusOutAlpha: 40,\n      stroke: NONE\n    };\n\n    nodeLabelAlpha = pluck(node.labelalpha, chartAttr.nodelabelalpha, chartAttr.labelalpha, inheritFromPlot ? rawCosmetics.alpha : 100);\n\n    labelBgColor = pluck(node.labelbgcolor, chartAttr.nodelabelbgcolor, chartAttr.labelbgcolor);\n    labelBgColor = labelBgColor\n      ? convertColor(labelBgColor, nodeLabelAlpha)\n      : BLANK;\n\n    labelBorderColor = pluck(node.labelbordercolor, chartAttr.nodelabelbordercolor, chartAttr.labelbordercolor);\n    labelBorderColor = labelBorderColor\n      ? convertColor(labelBorderColor, nodeLabelAlpha)\n      : BLANK;\n\n    rawLabelCosmetics = Object.assign({}, dataLabelStyle, {\n      labelFill: pluck(node.labelfontcolor, chartAttr.nodelabelfontcolor, chartAttr.labelfontcolor, chartAttr.basefontcolor, inheritFromPlot ? rawCosmetics.fill : '#5f5f5f'),\n      labelAlpha: nodeLabelAlpha,\n      focusAlpha: rawCosmetics.focusAlpha,\n      focusOutAlpha: rawCosmetics.focusOutAlpha,\n      border: labelBgColor ? nodeLabelStyle.borderThickness + 'px solid' : BLANK,\n      borderColor: labelBorderColor,\n      backgroundColor: labelBgColor\n    });\n\n    cursor = enableDrag ? 'move' : 'default';\n\n    labelCss = {\n      cursor,\n      'text-bound': [\n        labelBgColor, labelBorderColor,\n        nodeLabelStyle.borderThickness, nodeLabelStyle.borderPadding,\n        nodeLabelStyle.borderRadius, nodeLabelStyle.borderDash\n      ],\n      fill: convertColor(rawLabelCosmetics.labelFill, rawLabelCosmetics.labelAlpha)\n    };\n    labelPosition = pluck(node.labelposition, chartAttr.nodelabelposition, preDefStr.POSITION_END).toLowerCase();\n    if (validPosition.indexOf(labelPosition) < 0) {\n      labelPosition = preDefStr.POSITION_END;\n    }\n\n    nodeCss = {\n      fill: convertColor(rawCosmetics.fill, rawCosmetics.alpha),\n      cursor,\n      stroke: rawCosmetics.stroke\n    };\n\n    nodeFocusCss = {\n      fill: convertColor(rawCosmetics.fill, rawCosmetics.focusAlpha)\n    };\n\n    nodeFocusOutCss = {\n      fill: convertColor(rawCosmetics.fill, rawCosmetics.focusOutAlpha)\n    };\n\n    nodeComponent = dataset.attachChild(SankeyNode, 'nodes', id);\n    nodeComponent.setData({\n      id,\n      index,\n      mode: 'normal',\n      label: pluck(node.label, node.id),\n      value: numberFormatter.dataLabels(node.props.value),\n      labelPadding: numberFormatter.getCleanValue(pluck(node.labelpadding, chartAttr.nodelabelpadding, 5)),\n      visible: pluckNumber(node.visible, chartAttr.shownodes, 1),\n      showLabel: pluckNumber(node.showlabel, chartAttr.shownodelabels, 1),\n      showValue: pluckNumber(node.showvalue, chartAttr.shownodevalues, 0),\n      rotateLabel: pluckNumber(node.rotatelabel, chartAttr.rotatenodelabels, 0),\n      labelPosition,\n      valuePosition: pluck(node.labelposition, chartAttr.nodelabelposition, preDefStr.POSITION_MIDDLE),\n      plotToolText: getValidValue(parseUnsafeString(pluck(node.tooltext,\n        chartAttr.plottooltext))),\n      toolText: getValidValue(parseUnsafeString(pluck(node.tooltext,\n        node.tooltext))),\n      nodeValue: pluckNumber(node.nodevalue, chartAttr.nodevalue, 0),\n      nodeDataValue: numberFormatter.dataLabels(node.nodedatavalue),\n      // linkPadding: pluckNumber(node.linkpadding, chartAttr.nodelinkpadding, 0),\n      textOutline: pluckNumber(node.textoutline, chartAttr.textoutline, 0),\n      rawCosmetics,\n      rawLabelCosmetics,\n      props: node.props,\n      eventArgs: {\n        color: rawCosmetics.fill,\n        alpha: rawCosmetics.alpha,\n        labelFill: rawLabelCosmetics.labelFill,\n        labelAlpha: rawLabelCosmetics.labelAlpha,\n        value: node.props.value,\n        label: node.label,\n        sourceLinks: node.props.sourceLinks.map(link => link.to),\n        targetLinks: node.props.targetLinks.map(link => link.from)\n      },\n      style: {\n        node: {\n          normal: nodeCss,\n          focus: nodeFocusCss,\n          focusOut: nodeFocusOutCss\n        },\n        label: {\n          normal: labelCss,\n          focus: Object.assign({}, labelCss, {\n            fill: convertColor(rawLabelCosmetics.labelFill, rawLabelCosmetics.focusAlpha)\n          }),\n          focusOut: Object.assign({}, labelCss, {\n            fill: convertColor(rawLabelCosmetics.labelFill, rawLabelCosmetics.focusOutAlpha)\n          })\n        }\n        // value: {\n        //   normal: valueCss,\n        //   focus: valueCss,\n        //   focusOut: Object.assign({}, valueCss, {\n        //     fill: convertColor(rawLabelCosmetics.valueFill, rawLabelCosmetics.focusOutAlpha)\n        //   })\n        // }\n      }\n    });\n  });\n\n  showLegend && dataset._addLegend();\n};\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport { parseColor, getSuggestiveRotation, isIpad, parseTooltext, BLANKSTRING } from '@fusioncharts/core/src/lib';\n\nconst START = 'start',\n  END = 'end',\n  INSIDE = 'inside',\n  MIDDLE = 'middle',\n  defaultTransform = 't0,0',\n  // CENTER = 'center',\n  SMALLSQUARE = '&#9632;',\n  MEDIUMSQUARE = '&#x25FC;',\n  getTooltext = (config, node, chartConfig) => {\n    let uniChar = isIpad ? SMALLSQUARE : MEDIUMSQUARE,\n      macroIndices = [3, 133, 134, 143, 144, 145],\n      manager = node.getLinkedParent(),\n      legend = node.getFromEnv('legend'),\n      pathArr,\n      drawCustomLegendIcon = chartConfig && chartConfig.drawcustomlegendicon,\n      newPathArr = [],\n      i,\n      j,\n      symbolBBox,\n      plotToolText,\n      legendItemSymbol,\n      pathStart = [],\n      finalPath,\n      legendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? legend.getItem(manager.config.legendItemMap[node.config.label]) : null,\n      graphicalElement = legendItem && legendItem.getGraphicalElement(),\n      parserConfig,\n      toolText;\n    finalPath = BLANKSTRING;\n    if (legendItem) {\n      legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol;\n      pathArr = legendItemSymbol && legendItemSymbol.attrs.path.split(/(?=[LMCA])/);\n      symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox();\n      if (pathArr && pathArr.length) {\n        for (i = 0; i < pathArr.length; i++) {\n          pathStart.push(pathArr[i][0]);\n          pathArr[i] = pathArr[i].substring(1, pathArr[i].length);\n          if (i === (pathArr.length - 1)) {\n            pathArr[i] = pathArr[i].substring(0, pathArr[i].length - 1);\n          }\n          newPathArr[i] = pathArr[i].split(',');\n        }\n      }\n      if (newPathArr && newPathArr.length) {\n        for (i = 0; i < newPathArr.length; i++) {\n          if (newPathArr[i].length) {\n            for (j = 0; j < newPathArr[i].length; j++) {\n              newPathArr[i][j] = Number(newPathArr[i][j]);\n              if (pathStart[i] !== 'A') {\n                if (j === 0) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 1) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              } else if (pathStart[i] === 'A') {\n                if (j === 5) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 6) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              }\n            }\n          }\n          finalPath += pathStart[i] + newPathArr[i].toString();\n        }\n      }\n      finalPath = finalPath + 'Z';\n    }\n\n    parserConfig = {\n      label: config.label,\n      value: config.value,\n      nodeValue: config.props.value,\n      nodeDataValue: config.value,\n      plotFillColor: config.rawCosmetics && ('#' + config.rawCosmetics.fill),\n      plotFillAlpha: config.rawCosmetics && config.rawCosmetics.alpha,\n      plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n      stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n      stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n    </svg>` : `<span style='color: ${parseColor(config.rawCosmetics.fill)};'>${uniChar}&nbsp;</span>`\n    };\n\n    toolText = parseTooltext(config.toolText, macroIndices,\n      parserConfig, { value: config.value,\n        nodeValue: config.props.value,\n        nodeDataValue: config.value,\n        plotFillColor: config.rawCosmetics && ('#' + config.rawCosmetics.fill),\n        plotFillAlpha: config.rawCosmetics && config.rawCosmetics.alpha,\n        plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n        stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n        stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n      </svg>` : `<span style='color: ${parseColor(config.rawCosmetics.fill)};'>${uniChar}&nbsp;</span>` });\n\n    plotToolText = parseTooltext(config.plotToolText,\n      macroIndices,\n      parserConfig, { value: config.value,\n        nodeValue: config.props.value,\n        nodeDataValue: config.value,\n        plotFillColor: config.rawCosmetics && ('#' + config.rawCosmetics.fill),\n        plotFillAlpha: config.rawCosmetics && config.rawCosmetics.alpha,\n        plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n        stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n        stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n      </svg>` : `<span style='color: ${parseColor(config.rawCosmetics.fill)};'>${uniChar}&nbsp;</span>` });\n\n    config.setToolText = toolText;\n    config.setPlotTooltext = config.setToolText ? config.setToolText : plotToolText;\n    if (!config.plotToolText) {\n      return (\n        `<div style='padding: 2px; vertical-align: middle;'>\n          <span style='color: ${parseColor(config.rawCosmetics.fill)};'>${uniChar}&nbsp;</span>${config.label}\n          &nbsp;\n          &nbsp;\n          ${config.value}\n        </div>`\n      );\n    }\n\n    return (\n      `<div style='padding: 2px; vertical-align: middle;'>\n        <span style='color: ${parseColor(config.rawCosmetics.fill)};'>${uniChar}&nbsp;</span>\n        ${config.setPlotTooltext}\n      </div>`\n    );\n  },\n  // GUTTER5 = 5,\n  BLANK = '',\n  SPACE = ' ';\nclass SankeyNode extends SmartRenderer {\n  getType () {\n    return 'node';\n  }\n\n  getName () {\n    return 'sankey-node';\n  }\n\n  configureAttributes (inputConfig = {}) {\n    let nodeConfig = this.config;\n\n    Object.assign(nodeConfig, inputConfig);\n  }\n\n  allocatePosition () {\n    let node = this,\n      { props, style, mode, labelPosition, showLabel,\n        formattedLabel, showValue, value, rotateLabel, labelPadding } = node.config,\n      nodeCosmetics = style.node[mode],\n      labelCosmetics = style.label[mode],\n      orientation = node.getFromEnv('orientation'),\n      sl = node.getFromEnv('smartLabel'),\n      labelXPos,\n      labelYPos,\n      anchor,\n      labelSepChar = node.getLinkedParent().config.labelSepChar,\n      text = formattedLabel.text + (showValue ? labelSepChar + SPACE + value : BLANK);\n\n    if (!showLabel || !formattedLabel.text) {\n      text = showValue ? value : BLANK;\n      sl.setStyle(style.label.normal);\n      formattedLabel = sl.getSmartText(text);\n    }\n    node.config.nodeAttr = {\n      x: props.x0,\n      y: props.y0,\n      width: Math.max(0, props.x1 - props.x0),\n      height: Math.max(0, props.y1 - props.y0),\n      ...nodeCosmetics\n    };\n\n    if (orientation === 'horizontal') {\n      if (!rotateLabel) {\n        if (labelPosition === START) {\n          labelXPos = props.x0 - labelPadding;\n          anchor = END;\n        } else if (labelPosition === INSIDE) {\n          labelXPos = Math.abs(props.x0 + props.x1) / 2;\n          anchor = MIDDLE;\n        } else {\n          labelXPos = props.x1 + labelPadding;\n          anchor = START;\n        }\n        labelYPos = Math.abs(props.y1 + props.y0) / 2;\n\n        node.config.labelAttr = {\n          x: labelXPos,\n          y: labelYPos,\n          text: text,\n          transform: defaultTransform,\n          'text-anchor': anchor,\n          ...labelCosmetics\n        };\n      } else {\n        if (labelPosition === START) {\n          labelXPos = props.x0 - labelPadding - formattedLabel.height / 2;\n        } else if (labelPosition === INSIDE) {\n          labelXPos = Math.abs(props.x0 + props.x1) / 2;\n        } else {\n          labelXPos = props.x1 + labelPadding + formattedLabel.height / 2;\n        }\n        labelYPos = Math.abs(props.y1 + props.y0) / 2;\n\n        node.config.labelAttr = {\n          x: labelXPos,\n          y: labelYPos,\n          text: text,\n          'text-anchor': MIDDLE,\n          transform: getSuggestiveRotation(-90, labelXPos, labelYPos),\n          ...labelCosmetics\n        };\n      }\n    } else {\n      if (!rotateLabel) {\n        if (labelPosition === START) {\n          labelYPos = props.y0 - labelPadding - formattedLabel.height / 2;\n        } else if (labelPosition === INSIDE) {\n          labelYPos = Math.abs(props.y0 + props.y1) / 2;\n        } else {\n          labelYPos = props.y1 + labelPadding + formattedLabel.height / 2;\n        }\n        anchor = MIDDLE;\n        labelXPos = (props.x0 + props.x1) / 2;\n\n        node.config.labelAttr = {\n          x: labelXPos,\n          y: labelYPos,\n          text: text,\n          transform: defaultTransform,\n          'text-anchor': anchor,\n          ...labelCosmetics\n        };\n      } else {\n        if (labelPosition === START) {\n          labelYPos = props.y0 - labelPadding;\n          anchor = START;\n        } else if (labelPosition === INSIDE) {\n          labelYPos = Math.abs(props.y0 + props.y1) / 2;\n          anchor = MIDDLE;\n        } else {\n          labelYPos = props.y1 + labelPadding;\n          anchor = END;\n        }\n        labelXPos = Math.abs(props.x1 + props.x0) / 2;\n\n        node.config.labelAttr = {\n          x: labelXPos,\n          y: labelYPos,\n          text: text,\n          'text-anchor': anchor,\n          transform: getSuggestiveRotation(-90, labelXPos, labelYPos),\n          ...labelCosmetics\n        };\n      }\n    }\n  }\n\n  draw () {\n    let node = this,\n      chartConfig = node.getFromEnv('chartConfig'),\n      { id, labelAttr, nodeAttr, textOutline } = node.config,\n      tooltext = getTooltext(node.config, node, chartConfig);\n\n    node.addGraphicalElement({\n      el: 'rect',\n      attr: nodeAttr,\n      container: {\n        id: 'sankey-node-group',\n        label: 'nodeGroup',\n        isParent: true\n      },\n      tooltext,\n      component: node,\n      id: id,\n      label: 'node-rect'\n    });\n\n    labelAttr.text && node.addGraphicalElement({\n      el: 'text',\n      attr: labelAttr,\n      container: {\n        id: 'sankey-node-label-group',\n        label: 'nodeLabelGroup',\n        isParent: true\n      },\n      tooltext,\n      component: node,\n      id,\n      css: {},\n      outlineText: textOutline,\n      label: 'node-label'\n    });\n  }\n}\n\nexport default SankeyNode;\n","import { pluck, pluckNumber, toRaphaelColor, BLANK, clampNumber, parseUnsafeString, UNDEF } from '@fusioncharts/core/src/lib';\nimport SankeyLink from '../dataset/sankey/sankey-link';\n\nconst SOURCE = 'source',\n  TARGET = 'target',\n  BLEND = 'blend',\n  BUTT = 'butt',\n  HORIZONTAL = 'horizontal';\n\nexport default function (dataset) {\n  let dsConfig = dataset.config,\n    {\n      links\n    } = dsConfig,\n    orientation = dataset.getFromEnv('orientation'),\n    numberFormatter = dataset.getFromEnv('number-formatter'),\n    linkComponent,\n    gradientAngle,\n    chartAttr = dataset.getFromEnv('dataSource').chart,\n    linkPadding = pluckNumber(chartAttr.nodelinkpadding, 0),\n    linkColor,\n    linkCss,\n    linkFocusCss,\n    linkFocusOutCss,\n    rawCosmetics,\n    sourceFill,\n    targetFill,\n    fromNode,\n    toNode,\n    from,\n    fromValue,\n    toValue,\n    to,\n    toolText,\n    id;\n\n  links.forEach(link => {\n    link.props.index += BLANK;\n    id = link.props.index;\n\n    from = parseUnsafeString(pluck(link.from));\n    to = parseUnsafeString(pluck(link.to));\n\n    fromNode = dataset.getChild(from, 'nodes');\n    toNode = dataset.getChild(to, 'nodes');\n    toolText = parseUnsafeString(pluck(link.tooltext, chartAttr.linktooltext, UNDEF));\n    fromValue = fromNode.config.value;\n    toValue = toNode.config.value;\n    linkColor = pluck(link.color, chartAttr.linkcolor, SOURCE);\n\n    sourceFill = fromNode.config.rawCosmetics.fill;\n    targetFill = toNode.config.rawCosmetics.fill;\n    // eslint-disable-next-line\n    switch (linkColor.toLowerCase()) {\n      case SOURCE:\n        linkColor = sourceFill; break;\n      case TARGET:\n        linkColor = targetFill; break;\n      case BLEND:\n        linkColor = sourceFill + ',' + targetFill;\n        break;\n    }\n\n    rawCosmetics = {\n      fill: linkColor,\n      alpha: pluckNumber(link.alpha, chartAttr.linkalpha, 20),\n      focusAlpha: pluckNumber(link.hoveralpha, chartAttr.linkhoveralpha, 75),\n      focusOutAlpha: 10\n    };\n    gradientAngle = orientation === HORIZONTAL ? 0 : 90;\n    linkCss = {\n      stroke: toRaphaelColor({\n        color: rawCosmetics.fill,\n        alpha: rawCosmetics.alpha,\n        angle: gradientAngle\n      }),\n      'stroke-linecap': BUTT,\n      fill: 'none'\n    };\n\n    linkFocusCss = ({}, linkCss, {\n      stroke: toRaphaelColor({\n        color: rawCosmetics.fill,\n        alpha: rawCosmetics.focusAlpha,\n        angle: gradientAngle\n      })\n    });\n\n    linkFocusOutCss = ({}, linkCss, {\n      stroke: toRaphaelColor({\n        color: rawCosmetics.fill,\n        alpha: rawCosmetics.focusOutAlpha,\n        angle: gradientAngle\n      })\n    });\n\n    linkComponent = dataset.attachChild(SankeyLink, 'links', id);\n    linkComponent.setData({\n      from,\n      to,\n      mode: 'normal',\n      linkValue: pluckNumber(link.value),\n      value: numberFormatter.dataLabels(pluckNumber(link.value)),\n      fromValue,\n      toValue,\n      toolText,\n      color: rawCosmetics.linkColor,\n      alpha: rawCosmetics.alpha,\n      curvature: clampNumber(pluckNumber(link.curvature, chartAttr.linkcurvature, 0.5), 0, 1),\n      linkType: pluck(link.type, chartAttr.linktype),\n      linkPadding,\n      sourceFill,\n      targetFill,\n      props: link.props,\n      rawCosmetics,\n      eventArgs: {\n        color: rawCosmetics.fill,\n        alpha: rawCosmetics.alpha,\n        value: link.value,\n        from: link.props.source.label,\n        to: link.props.target.label\n      },\n      style: {\n        link: {\n          normal: linkCss,\n          focus: linkFocusCss,\n          focusOut: linkFocusOutCss\n        }\n      }\n    });\n  });\n\n  dataset.attachListeners();\n};\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport { sankeyRibbon } from './sankey-ribbon';\nimport { parseColor, isIpad, parseTooltext } from '@fusioncharts/core/src/lib';\n\nconst CUSTOM = 'custom',\n  UNIFORM = 'uniform',\n  BLANKSTRING = '',\n  SMALLSQUARE = '&#9632;',\n  MEDIUMSQUARE = '&#x25FC;',\n  getTooltext = (config, link, chartConfig) => {\n    let uniChar = isIpad ? SMALLSQUARE : MEDIUMSQUARE,\n      macroIndices = [148, 149, 142, 150, 151, 152, 153],\n      manager = link.getLinkedParent(),\n      legend = link.getFromEnv('legend'),\n      pathArr,\n      drawCustomLegendIcon = chartConfig && chartConfig.drawcustomlegendicon,\n      newPathArr = [],\n      i,\n      j,\n      symbolBBox,\n      legendItemSymbol,\n      pathStart = [],\n      finalPath,\n      fromLegendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? legend.getItem(manager.config.legendItemMap[link.config.from]) : null,\n      fromgraphicalElement = fromLegendItem && fromLegendItem.getGraphicalElement(),\n      toLegendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? legend.getItem(manager.config.legendItemMap[link.config.to]) : null,\n      tographicalElement = toLegendItem && toLegendItem.getGraphicalElement(),\n      parserConfig,\n      linkToolText;\n    finalPath = BLANKSTRING;\n    if (fromLegendItem) {\n      if (fromgraphicalElement) {\n        legendItemSymbol = fromgraphicalElement && fromgraphicalElement.legendItemSymbol;\n        pathArr = legendItemSymbol && legendItemSymbol.attrs.path.split(/(?=[LMCA])/);\n        symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox();\n        if (pathArr && pathArr.length) {\n          for (i = 0; i < pathArr.length; i++) {\n            pathStart.push(pathArr[i][0]);\n            pathArr[i] = pathArr[i].substring(1, pathArr[i].length);\n            if (i === (pathArr.length - 1)) {\n              pathArr[i] = pathArr[i].substring(0, pathArr[i].length - 1);\n            }\n            newPathArr[i] = pathArr[i].split(',');\n          }\n        }\n        if (newPathArr && newPathArr.length) {\n          for (i = 0; i < newPathArr.length; i++) {\n            if (newPathArr[i].length) {\n              for (j = 0; j < newPathArr[i].length; j++) {\n                newPathArr[i][j] = Number(newPathArr[i][j]);\n                if (pathStart[i] !== 'A') {\n                  if (j === 0) {\n                    newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                  } else if (j === 1) {\n                    newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                  }\n                } else if (pathStart[i] === 'A') {\n                  if (j === 5) {\n                    newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                  } else if (j === 6) {\n                    newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                  }\n                }\n              }\n            }\n            finalPath += pathStart[i] + newPathArr[i].toString();\n          }\n        }\n        finalPath = finalPath + 'Z';\n      }\n    }\n    parserConfig = {\n      linkDataValue: config.value,\n      fromPlotIdentifier: fromLegendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= ${finalPath} fill = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n      stroke-opacity = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n      stroke-width = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n    </svg>` : `<span style='color: ${parseColor(config.sourceFill)};'>${uniChar}&nbsp;</span>`,\n      toPlotIdentifier: toLegendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow= 'visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= ${finalPath} fill = ${tographicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${tographicalElement.legendItemSymbol.node.getAttribute('stroke')}\n      stroke-opacity = ${tographicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${tographicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n      stroke-width = ${tographicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${tographicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n    </svg>` : `<span style='color: ${parseColor(config.targetFill)};'>${uniChar}&nbsp;</span>`,\n      flowDirection: `&rarr;`\n    };\n    linkToolText = parseTooltext(config.toolText, macroIndices,\n      config, parserConfig);\n    config.setLinkTooltext = linkToolText;\n    if (!config.toolText) {\n      return (\n        `<div style='padding: 2px; vertical-align: middle;'>\n        <span style='color: ${parseColor(config.sourceFill)};'>${uniChar}&nbsp;</span>${config.props.source.label}\n        &rarr;\n        <span style='color: ${parseColor(config.targetFill)}'>${uniChar}&nbsp;</span>${config.props.target.label}\n        &nbsp;\n        ${config.value}\n      </div>`\n      );\n    }\n    return (\n      `<div style='padding: 2px; vertical-align: middle;'>\n        ${config.setLinkTooltext}\n      </div>`\n    );\n  };\nclass SankeyLink extends SmartRenderer {\n  getType () {\n    return 'link';\n  }\n\n  getName () {\n    return 'sankey-link';\n  }\n\n  configureAttributes (inputConfig = {}) {\n    Object.assign(this.config, inputConfig);\n  }\n\n  allocatePosition () {\n    let link = this,\n      linkConfig = link.config,\n      { mode, style, props, linkPadding, linkType, curvature } = linkConfig,\n      { orientation } = link.getFromEnv('chartConfig'),\n      linkCosmetics = style.link[mode],\n      pathStr,\n      sourcePoint = {\n        x: props.x0,\n        y: props.y0,\n        width: props.linkWidth\n      },\n      { source, target } = props,\n      sourceNodeLayer = source.props.layer,\n      targetNodeLayer = target.props.layer,\n      sourceNodeLen,\n      targetNodeLen,\n      targetPoint = {\n        x: props.x1,\n        y: props.y1,\n        width: props.linkWidth\n      },\n      { columnGap } = link.getLinkedParent().config;\n\n    sourceNodeLen = Math.max(orientation === 'vertical' ? source.props.x1 - source.props.x0 : source.props.y1 - source.props.y0, 0);\n    targetNodeLen = Math.max(orientation === 'vertical' ? source.props.x1 - source.props.x0 : source.props.y1 - source.props.y0, 0);\n\n    if (linkType !== CUSTOM && linkType !== UNIFORM) {\n      if (\n        (props.linkWidth > (columnGap * Math.abs(targetNodeLayer - sourceNodeLayer) / 3)) ||\n        (sourcePoint.width > 0.7 * sourceNodeLen) ||\n        (targetPoint.width > 0.7 * targetNodeLen)\n      ) {\n        linkType = CUSTOM;\n      } else {\n        linkType = UNIFORM;\n      }\n    }\n    pathStr = sankeyRibbon(sourcePoint, targetPoint, {\n      orientation,\n      padding: linkPadding,\n      curvature,\n      linkType\n    });\n\n    linkConfig.linkAttr = {\n      path: pathStr,\n      'stroke-width': linkType === UNIFORM ? props.linkWidth : 'none',\n      ...linkCosmetics\n    };\n\n    if (linkType === CUSTOM) {\n      linkConfig.linkAttr.fill = linkConfig.linkAttr.stroke;\n      linkConfig.linkAttr.stroke = 'none';\n    }\n  }\n\n  draw () {\n    let link = this,\n      linkConfig = link.config,\n      chartConfig = link.getFromEnv('chartConfig'),\n      { id, linkAttr } = linkConfig;\n\n    link.addGraphicalElement({\n      el: 'path',\n      attr: linkAttr,\n      container: {\n        id: 'sankey-link-group',\n        label: 'linkGroup',\n        isParent: true\n      },\n      tooltext: getTooltext(link.config, link, chartConfig),\n      component: link,\n      id: id,\n      label: 'sankey-link'\n    });\n  }\n}\n\nexport default SankeyLink;\n","const M = 'M',\n  C = 'C',\n  L = 'L',\n  DEFAULT_CURVATURE = 0.5,\n  STATIC_LENGTH = 10,\n  HORIZONTAL = 'horizontal',\n  UNIFORM = 'uniform',\n  horizontalRibbon = (source, target, curvature = DEFAULT_CURVATURE, type = UNIFORM) => {\n    let x0, y0,\n      x1, y1,\n      sourceWidth = source.width,\n      targetWidth = target.width,\n      linePath,\n      sy0, sy1,\n      ty0, ty1,\n      cx1, cy1,\n      cx2, cy2;\n\n    if (Math.abs(source.y - target.y) < 0.0001) {\n      target.y += 0.0001;\n    }\n\n    x0 = source.x + STATIC_LENGTH;\n    y0 = source.y;\n    sy0 = y0 - sourceWidth / 2;\n    sy1 = y0 + sourceWidth / 2;\n\n    x1 = target.x - STATIC_LENGTH;\n    y1 = target.y;\n    ty0 = y1 - targetWidth / 2;\n    ty1 = y1 + targetWidth / 2;\n\n    if (x1 <= x0 || type !== UNIFORM) {\n      x0 -= STATIC_LENGTH;\n      x1 += STATIC_LENGTH;\n    }\n\n    cx1 = curvature * Math.abs(x1 - x0) + x0;\n    cy1 = y0;\n\n    cx2 = (1 - curvature) * Math.abs(x1 - x0) + x0;\n    cy2 = y1;\n\n    if (type === UNIFORM) {\n      linePath = M + source.x + ',' + y0 + ' ' +\n        L + x0 + ',' + y0 + ' ' +\n        C + cx1 + ',' + cy1 + ' ' +\n        cx2 + ',' + cy2 + ' ' +\n        x1 + ',' + y1 + ' ' +\n        L + target.x + ',' + y1;\n    } else {\n      linePath = M + x0 + ',' + sy0 + ' ' +\n        L + x0 + ',' + sy0 + ' ' +\n        C + cx1 + ',' + sy0 + ' ' +\n        cx2 + ',' + ty0 + ' ' +\n        x1 + ',' + ty0 + ' ' +\n        L + x1 + ',' + ty1 + ' ' +\n        C + cx2 + ',' + ty1 + ' ' +\n        cx1 + ',' + sy1 + ' ' +\n        x0 + ',' + sy1 + ' ' +\n        L + x0 + ',' + sy0;\n    }\n\n    return linePath;\n  },\n  verticalRibbon = (source, target, curvature = DEFAULT_CURVATURE, type = UNIFORM) => {\n    let x0, y0,\n      x1, y1,\n      linePath,\n      sourceWidth = source.width,\n      targetWidth = target.width,\n      sx0, sx1,\n      tx0, tx1,\n      cx1, cy1,\n      cx2, cy2;\n\n    if (Math.abs(source.x - target.x) < 0.0001) {\n      target.x += 0.0001;\n    }\n\n    x0 = source.x;\n    sx0 = x0 - sourceWidth / 2;\n    sx1 = x0 + sourceWidth / 2;\n    y0 = source.y + STATIC_LENGTH;\n\n    x1 = target.x;\n    tx0 = x1 - targetWidth / 2;\n    tx1 = x1 + targetWidth / 2;\n    y1 = target.y - STATIC_LENGTH;\n\n    if (y1 <= y0 || type !== UNIFORM) {\n      y0 -= STATIC_LENGTH;\n      y1 += STATIC_LENGTH;\n    }\n\n    cx1 = x0;\n    cy1 = curvature * Math.abs(y1 - y0) + y0;\n\n    cx2 = x1;\n    cy2 = (1 - curvature) * Math.abs(y1 - y0) + y0;\n\n    if (type === UNIFORM) {\n      linePath = M + x0 + ',' + source.y + ' ' +\n        L + x0 + ',' + y0 + ' ' +\n        C + cx1 + ',' + cy1 + ' ' +\n        cx2 + ',' + cy2 + ' ' +\n        x1 + ',' + y1 + ' ' +\n        L + x1 + ',' + target.y;\n    } else {\n      linePath = M + sx0 + ',' + y0 + ' ' +\n        L + sx0 + ',' + y0 + ' ' +\n        C + sx0 + ',' + cy1 + ' ' +\n        tx0 + ',' + cy2 + ' ' +\n        tx0 + ',' + y1 + ' ' +\n        L + tx1 + ',' + y1 + ' ' +\n        C + tx1 + ',' + cy2 + ' ' +\n        sx1 + ',' + cy1 + ' ' +\n        sx1 + ',' + y0 + ' ' +\n        L + sx0 + ',' + y0;\n    }\n\n    return linePath;\n  },\n  sankeyRibbon = (source, target, config) => {\n    let {\n      curvature,\n      orientation,\n      padding,\n      linkType\n    } = config;\n\n    orientation = orientation || HORIZONTAL;\n\n    if (orientation === HORIZONTAL) {\n      source.x = Math.floor(source.x + padding);\n      target.x = Math.ceil(target.x - padding);\n      return horizontalRibbon(source, target, curvature, linkType);\n    }\n    source.y = Math.floor(source.y + padding);\n    target.y = Math.ceil(target.y - padding);\n    return verticalRibbon(source, target, curvature, linkType);\n  };\n\nexport {\n  sankeyRibbon\n};\n","let MAX = Math.max,\n  MIN = Math.min,\n  VERYSMALLNUMBER = 1e-6,\n  VERTICAL = 'vertical';\n\nfunction findNodeById (_nodes, _node) { // Need to change this function to take in actual id\n  let nodes = _nodes,\n    node = _node;\n  return nodes.find(function (d) {\n    return d.id === node || d.label === node;\n  });\n}\nfunction createNodeLinks ({ nodes, links }) { // Creating the Source - Target links of each node\n  nodes.forEach(_node => {\n    let node = _node;\n    node.props.sourceLinks = []; // create empty arrays of source and target links\n    node.props.targetLinks = [];\n  });\n\n  /** Populate the source and target Links array of each node */\n  links.forEach((_link, index) => {\n    let link = _link,\n      { source, target } = link.props;\n    if (typeof source !== 'object') source = link.props.source = findNodeById(nodes, source); // find the source node\n    if (typeof target !== 'object') target = link.props.target = findNodeById(nodes, target); // find the target node\n    source.props.sourceLinks.push(link);\n    target.props.targetLinks.push(link);\n\n    link.props.index = index;\n  });\n}\nfunction ascendingHeight (a, b) {\n  return a.props.target.props.y0 - b.props.target.props.y0;\n}\nfunction ascendingWidth (a, b) {\n  return a.props.target.props.x0 - b.props.target.props.x0;\n}\nfunction sortLinks (_links, orientation) {\n  let links = _links;\n  if (orientation === VERTICAL) {\n    links.sort(ascendingWidth);\n  } else {\n    links.sort(ascendingHeight);\n  }\n  return links;\n}\nfunction createLinkDimensions ({ nodes }, props) {\n  let orientation = props && props.orientation;\n  for (const node of nodes) {\n    if (orientation === VERTICAL) {\n      let x0 = node.props.x0,\n        x1 = x0,\n        sortedSourceLinks = sortLinks(node.props.sourceLinks, orientation);\n      for (const link of sortedSourceLinks) {\n        link.props.x0 = x0 + link.props.linkWidth / 2;\n        link.props.y0 = link.props.source.props.y1;\n        x0 += link.props.linkWidth;\n      }\n      for (const link of node.props.targetLinks) {\n        link.props.x1 = x1 + link.props.linkWidth / 2;\n        link.props.y1 = link.props.target.props.y0;\n        x1 += link.props.linkWidth;\n      }\n    } else {\n      let y0 = node.props.y0,\n        y1 = y0,\n        sortedSourceLinks = sortLinks(node.props.sourceLinks);\n      for (const link of sortedSourceLinks) {\n        link.props.y0 = y0 + link.props.linkWidth / 2;\n        link.props.x0 = link.props.source.props.x1;\n        y0 += link.props.linkWidth;\n      }\n      for (const link of node.props.targetLinks) {\n        link.props.y1 = y1 + link.props.linkWidth / 2;\n        link.props.x1 = link.props.target.props.x0;\n        y1 += link.props.linkWidth;\n      }\n    }\n  }\n}\nfunction createNodeValues ({ nodes }) {\n  nodes && nodes.forEach((_node) => {\n    let totalSourceValue = 0,\n      totalTargetValue = 0,\n      node = _node;\n    for (const { value } of node.props.sourceLinks) {\n      totalSourceValue += Number(value);\n    }\n    for (const { value } of node.props.targetLinks) {\n      totalTargetValue += Number(value);\n    }\n    node.props.value = MAX(totalSourceValue, totalTargetValue); // Assign value to each node based on the maximun of source and target Link values\n  });\n}\n\nfunction createGraph (graph) {\n  createNodeLinks(graph);\n  createNodeValues(graph);\n  return graph;\n}\n\nfunction traverseGraph ({ nodes }) {\n  let currentSet = new Set(nodes), // Create initial set of unique nodes\n    nextSet = new Set(), // Creates empty set of next nodes\n    depth = 0;\n    /* Traverse the graph using BFS and calculate the depth of each node */\n  while (currentSet.size) {\n    // eslint-disable-next-line no-loop-func\n    currentSet.forEach((_node) => {\n      let node = _node;\n      node.props.depth = depth;\n      for (const link of node.props.sourceLinks) {\n        nextSet.add(link.props.target);\n      }\n    });\n    if (++depth > nodes.length) {\n      return false;\n    };\n    currentSet = nextSet;\n    nextSet = new Set();\n  }\n\n  return true;\n}\nfunction createNodeDimensions (graphs, _props) {\n  let props = _props,\n    iterations = 6,\n    { nodes } = graphs,\n    maxDepth = MAX.apply(null, nodes.map((node) => { return node.props.depth; })) + 1; // Find maximum depth of the graph\n  const columns = new Array(maxDepth);\n  for (const node of nodes) {\n    const layer = MAX(0, MIN(maxDepth - 1, node.props.depth));\n    node.props.layer = layer;\n    if (columns[layer]) columns[layer].push(node);\n    else columns[layer] = [node];\n  }\n  setnodeXY(columns, maxDepth, props);\n  if (props.nodeRelaxation) {\n    for (let i = 0; i < iterations; ++i) { // number of iterations = 6\n      const convergence = Math.pow(0.99, i),\n        divergence = Math.max(1 - convergence, (i + 1) / 6); // Convergence and divergence factors are calculated based on the difference of iterative values from 1\n      relaxSources(columns, convergence, divergence, props);\n      relaxTargets(columns, convergence, divergence, props);\n    }\n  }\n  createLinkDimensions(graphs, props);\n}\nfunction setnodeXY (_columns, _maxDepth, _props) {\n  let columns = _columns,\n    props = _props,\n    maxDepth = _maxDepth,\n    maxNodeWidth,\n    minNodesLength,\n    nodeGutter,\n    nodeValueFactor,\n    columngapFactor,\n    orientation = props.orientation;\n  maxNodeWidth = MAX.apply(null, columns[maxDepth - 1].map((node) => { return node.nodeWidth; }));\n  columngapFactor = (orientation === VERTICAL) ? (props.height[1] - props.height[0] - maxNodeWidth) / (maxDepth - 1) : (props.width[1] - props.width[0] - maxNodeWidth) / (maxDepth - 1);\n\n  nodeGutter = props.nodeGutter;\n  minNodesLength = MAX.apply(null, columns.map((nodes) => {\n    return nodes.length;\n  }));\n  if (orientation === VERTICAL) {\n    if (((minNodesLength - 1) * nodeGutter) >= (props.width[1] - props.width[0]) || ((minNodesLength - 1) * nodeGutter) < 0) nodeGutter = props.nodeGutter = 10;\n  } else {\n    if (((minNodesLength - 1) * nodeGutter) >= (props.height[1] - props.height[0]) || ((minNodesLength - 1) * nodeGutter) < 0) nodeGutter = props.nodeGutter = 10;\n  }\n  nodeValueFactor = MIN.apply(null, columns.map((nodes) => {\n    let totalValue = 0;\n    for (const node of nodes) {\n      totalValue += node.props.value;\n    }\n    return ((orientation === VERTICAL) ? ((props.width[1] - props.width[0] - ((nodes.length - 1) * nodeGutter)) / totalValue) : ((props.height[1] - props.height[0] - ((nodes.length - 1) * nodeGutter)) / totalValue));\n  }));\n  if (!columngapFactor || columngapFactor === Infinity || columngapFactor === -Infinity) columngapFactor = 0;\n  if (!nodeValueFactor || nodeValueFactor === Infinity || nodeValueFactor === -Infinity) nodeValueFactor = 0;\n  for (const nodes of columns) {\n    if (orientation === VERTICAL) {\n      let startX = props.width[0];\n      for (const node of nodes) {\n        for (const link of node.props.sourceLinks) { // Calculate the width of links of each sourcenode\n          link.props.linkWidth = link.value * nodeValueFactor;\n        }\n        node.props.y0 = props.height[0] + (node.props.layer * columngapFactor);\n        node.props.y1 = node.props.y0 + node.nodeWidth;\n        node.props.x0 = startX;\n        node.props.x1 = node.props.x0 + (nodeValueFactor * node.props.value);\n        startX = node.props.x1 + nodeGutter;\n      }\n    } else {\n      let startY = props.height[0];\n      for (const node of nodes) {\n        for (const link of node.props.sourceLinks) { // Calculate the width of links of each sourcenode\n          link.props.linkWidth = link.value * nodeValueFactor;\n        }\n        node.props.x0 = props.width[0] + (node.props.layer * columngapFactor);\n        node.props.x1 = node.props.x0 + node.nodeWidth;\n        node.props.y0 = startY;\n        node.props.y1 = node.props.y0 + (nodeValueFactor * node.props.value);\n        startY = node.props.y1 + nodeGutter;\n      }\n    }\n  }\n}\n// Reposition each node based on its incoming (target) links.\nfunction relaxTargets (columns, alpha, beta, props) {\n  let orientation = props && props.orientation;\n  for (let i = 1, n = columns.length; i < n; ++i) {\n    let targetShiftFactor;\n    const column = columns[i];\n    for (const target of column) {\n      let y = 0,\n        w = 0;\n      for (const link of target.props.targetLinks) {\n        let valueFactor = link.value * (target.props.layer - link.props.source.props.layer);\n        y += targetTop(link.props.source, target, props) * valueFactor;\n        w += valueFactor;\n      }\n      if (!(w > 0)) continue;\n      if (orientation === VERTICAL) {\n        targetShiftFactor = (y / w - target.props.x0) * alpha;\n        target.props.x0 += targetShiftFactor;\n        target.props.x1 += targetShiftFactor;\n      } else {\n        targetShiftFactor = (y / w - target.props.y0) * alpha;\n        target.props.y0 += targetShiftFactor;\n        target.props.y1 += targetShiftFactor;\n      }\n    }\n    resolveCollisions(column, beta, props);\n  }\n}\n\n// Reposition each node based on its outgoing (source) links.\nfunction relaxSources (columns, alpha, beta, props) {\n  let orientation = props && props.orientation;\n  for (let n = columns.length, i = n - 2; i >= 0; --i) {\n    let sourceShiftFactor;\n    const column = columns[i];\n    for (const source of column) {\n      let y = 0,\n        w = 0;\n      for (const link of source.props.sourceLinks) {\n        const { target } = link.props;\n        let valueFactor = link.value * (target.props.layer - source.props.layer);\n        y += sourceTop(source, target, props) * valueFactor;\n        w += valueFactor;\n      }\n      if (!(w > 0)) continue;\n      if (orientation === VERTICAL) {\n        sourceShiftFactor = (y / w - source.props.x0) * alpha;\n        source.props.x0 += sourceShiftFactor;\n        source.props.x1 += sourceShiftFactor;\n      } else {\n        sourceShiftFactor = (y / w - source.props.y0) * alpha;\n        source.props.y0 += sourceShiftFactor;\n        source.props.y1 += sourceShiftFactor;\n      }\n    }\n    resolveCollisions(column, beta, props);\n  }\n}\n\nfunction resolveCollisions (nodes, beta, props) {\n  const i = nodes.length >> 1,\n    subject = nodes[i];\n  let orientation = props && props.orientation;\n  if (orientation === VERTICAL) {\n    resolveCollisionsBottomToTop(nodes, subject.props.x0 - props.nodeGutter, i - 1, beta, props);\n    resolveCollisionsTopToBottom(nodes, subject.props.x1 + props.nodeGutter, i + 1, beta, props);\n    resolveCollisionsBottomToTop(nodes, props.width[1], nodes.length - 1, beta, props);\n    resolveCollisionsTopToBottom(nodes, props.width[0], 0, beta, props);\n  } else {\n    resolveCollisionsBottomToTop(nodes, subject.props.y0 - props.nodeGutter, i - 1, beta, props);\n    resolveCollisionsTopToBottom(nodes, subject.props.y1 + props.nodeGutter, i + 1, beta, props);\n    resolveCollisionsBottomToTop(nodes, props.height[1], nodes.length - 1, beta, props);\n    resolveCollisionsTopToBottom(nodes, props.height[0], 0, beta, props);\n  }\n}\n\n// Push any overlapping nodes down.\nfunction resolveCollisionsTopToBottom (nodes, _y, _i, beta, props) {\n  let i = _i,\n    y = _y,\n    orientation = props && props.orientation;\n  for (; i < nodes.length; ++i) {\n    const node = nodes[i],\n      dy = (y - (orientation === VERTICAL ? node.props.x0 : node.props.y0)) * beta;\n    if (orientation === VERTICAL) {\n      if (dy > VERYSMALLNUMBER) {\n        node.props.x0 += dy;\n        node.props.x1 += dy;\n      }\n      y = node.props.x1 + props.nodeGutter;\n    } else {\n      if (dy > VERYSMALLNUMBER) {\n        node.props.y0 += dy;\n        node.props.y1 += dy;\n      }\n      y = node.props.y1 + props.nodeGutter;\n    }\n  }\n}\n\n// Push any overlapping nodes up.\nfunction resolveCollisionsBottomToTop (nodes, _y, _i, beta, props) {\n  let i = _i,\n    y = _y,\n    orientation = props && props.orientation;\n  for (; i >= 0; --i) {\n    const node = nodes[i],\n      dy = ((orientation === VERTICAL ? node.props.x1 : node.props.y1) - y) * beta;\n    if (orientation === VERTICAL) {\n      if (dy > VERYSMALLNUMBER) {\n        node.props.x0 -= dy;\n        node.props.x1 -= dy;\n      }\n      y = node.props.x0 - props.nodeGutter;\n    } else {\n      if (dy > VERYSMALLNUMBER) {\n        node.props.y0 -= dy;\n        node.props.y1 -= dy;\n      }\n      y = node.props.y0 - props.nodeGutter;\n    }\n  }\n}\n\n// Returns the target.y0 that would produce an ideal link from source to target.\nfunction targetTop (source, target, props) {\n  let orientation = props && props.orientation,\n    shiftStart = (orientation === VERTICAL ? source.props.x0 : source.props.y0) - (source.props.sourceLinks.length - 1) * props.nodeGutter / 2;\n  for (const link of source.props.sourceLinks) {\n    let node = link.props.target,\n      linkWidth = link.props.linkWidth;\n    if (node === target) break;\n    shiftStart += linkWidth + props.nodeGutter;\n  }\n  for (const link of target.props.targetLinks) {\n    let node = link.props.source,\n      linkWidth = link.props.linkWidth;\n    if (node === source) break;\n    shiftStart -= linkWidth;\n  }\n  return shiftStart;\n}\n\n// Returns the source.y0 that would produce an ideal link from source to target.\nfunction sourceTop (source, target, props) {\n  let orientation = props && props.orientation,\n    shiftStart = (orientation === VERTICAL ? target.props.x0 : target.props.y0) - (target.props.targetLinks.length - 1) * props.nodeGutter / 2;\n  for (const link of target.props.targetLinks) {\n    let node = link.props.source,\n      linkWidth = link.props.linkWidth;\n    if (node === source) break;\n    shiftStart += linkWidth + props.nodeGutter;\n  }\n  for (const link of source.props.sourceLinks) {\n    let node = link.props.target,\n      linkWidth = link.props.linkWidth;\n    if (node === target) break;\n    shiftStart -= linkWidth;\n  }\n  return shiftStart;\n}\n\nexport {\n  createGraph,\n  createNodeLinks,\n  createNodeValues,\n  traverseGraph,\n  createNodeDimensions\n};\n","export default {\n  '*.dataset.sankey': function () {\n    let dataset = this,\n      clipCanvas = dataset.getClip('canvas'),\n      clipCanvasInit = dataset.getClip('init');\n\n    return {\n      'linkGroup.appearing': () => {\n        return [{\n          initialAttr: {\n            'clip-rect': clipCanvasInit\n          },\n          finalAttr: {\n            'clip-rect': clipCanvas\n          },\n          slot: 'plot'\n        }];\n      },\n      'nodeGroup.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'axis'\n        }];\n      },\n      'nodeLabelGroup.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      }\n    };\n  }\n};\n","import { componentFactory, pluckNumber, pluck, getDashStyle, DASH_DEF, PXSTRING, parseUnsafeString } from '@fusioncharts/core/src/lib';\n\nconst BOLD = 'bold',\n  NORMAL = 'normal',\n  ITALIC = 'italic';\n\nexport default function (chart) {\n  let dsDef = chart.getDSdef(),\n    chartAttr = chart.getFromEnv('dataSource').chart || {},\n    ds,\n    nodeLabelFontBold,\n    nodeLabelFontItalic,\n    nodeLabelBorderThickness,\n    nodeLabelBorderPadding,\n    nodeLabelBorderRadius,\n    nodeLabelBorderDash,\n    showNodes,\n    { dataLabelStyle } = chart.config,\n    {\n      nodes,\n      links\n    } = chart.getFromEnv('sankey-graph');\n\n  nodeLabelFontBold = pluckNumber(chartAttr.nodelabelfontbold, chartAttr.labelfontbold, 0) ? BOLD : NORMAL;\n  nodeLabelFontItalic = pluckNumber(chartAttr.nodelabelfontitalic, chartAttr.labelfontitalic, 0) ? ITALIC : NORMAL;\n  nodeLabelBorderThickness = pluckNumber(chartAttr.nodelabelborderthickness, chartAttr.labelborderthickness, 1);\n  nodeLabelBorderPadding = pluckNumber(chartAttr.nodelabelborderpadding, chartAttr.labelborderpadding, 2);\n  nodeLabelBorderRadius = pluckNumber(chartAttr.nodelabelborderradius, chartAttr.labelborderradius, 0);\n  nodeLabelBorderDash = pluckNumber(chartAttr.nodelabelborderdashed, chartAttr.labelborderdashed, 0)\n    ? getDashStyle(pluckNumber(chartAttr.nodelabelborderdashlen, chartAttr.labelborderdashlen, 4), pluckNumber(chartAttr.nodelabelborderdashgap, chartAttr.labelborderdashgap, 2))\n    : DASH_DEF;\n\n  showNodes = pluckNumber(chartAttr.shownodes, 1);\n  componentFactory(chart, dsDef, 'dataset', 1);\n  ds = chart.getDatasets()[0];\n  ds.configure({\n    showNodes,\n    nodeWidth: chart.config.nodeWidth,\n    nodeRelaxation: pluckNumber(chartAttr.noderelaxation, 1),\n    nodeSpacing: pluckNumber(chartAttr.nodespacing, 10),\n    labelSepChar: parseUnsafeString(pluck(chartAttr.labelSepChar, ',')),\n    enableDrag: pluckNumber(chartAttr.enabledrag, true),\n    highlightEffect: pluckNumber(chartAttr.highlighteffect, true),\n    style: {\n      node: {\n        label: {\n          fontFamily: pluck(chartAttr.nodelabelfont, chartAttr.labelfont, dataLabelStyle.fontFamily),\n          fontSize: pluck(chartAttr.nodelabelfontsize, chartAttr.labelfontsize, chartAttr.basefontsize, (11 + PXSTRING)),\n          fontWeight: nodeLabelFontBold,\n          fontStyle: nodeLabelFontItalic,\n          borderThickness: nodeLabelBorderThickness,\n          borderPadding: nodeLabelBorderPadding,\n          borderRadius: nodeLabelBorderRadius,\n          borderDash: nodeLabelBorderDash\n        }\n      },\n      link: {}\n    },\n    nodes,\n    links\n  });\n};\n","import Heatmap from '@fusioncharts/powercharts/src/chart/heatmap';\nexport default Heatmap;\n","\nimport MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport HeatMapDataset from '../../dataset/heatmap';\nimport HeatMapGroup from '../../dataset/groups/heatmap';\nimport axisFactory from '../../factories/category-axis';\nimport dataSetFactory from '@fusioncharts/charts/src/factories/multiseries-dataset';\nimport createColorRangeManager from '@fusioncharts/charts/src/factories/colorrange';\nimport decideLegendCreation from '@fusioncharts/charts/src/factories/legendmanager';\nimport {\n  chartPaletteStr,\n  convertColor,\n  hasSVG,\n  pluck,\n  preDefStr,\n  pluckNumber,\n  parseUnsafeString,\n  getFirstValue,\n  pluckFontSizeMaintainUnit\n} from '@fusioncharts/core/src/lib';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\n\nlet defaultFontStr = preDefStr.defaultFontStr,\n  divLineAlpha3DStr = preDefStr.divLineAlpha3DStr,\n  divLineAlphaStr = preDefStr.divLineAlphaStr,\n  altVGridColorStr = preDefStr.altVGridColorStr,\n  altVGridAlphaStr = preDefStr.altVGridAlphaStr,\n  altHGridColorStr = preDefStr.altHGridColorStr,\n  altHGridAlphaStr = preDefStr.altHGridAlphaStr,\n  colorStrings = preDefStr.colors,\n  COLOR_000000 = colorStrings.c000000,\n  EQUAL_STR = ' = ',\n  HEATMAP = 'heatmap',\n  UNDEF,\n  checkValidId = item => (item.id !== UNDEF);\n\nclass HeatMap extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'HeatMap';\n  }\n\n  constructor () {\n    super();\n\n    this.tooltipsepchar = EQUAL_STR;\n    this.hasGradientLegend = true;\n\n    this.registerFactory('axis', axisFactory, ['canvas']);\n    // decide and create legend after creating canvas\n    this.registerFactory('legend', decideLegendCreation, ['canvas']);\n\n    // create color manager after creating legend-decider\n    this.registerFactory('colormanager-decider', createColorRangeManager, ['legend']);\n\n    // create dataset after creating colormanager-decider and vCanvas\n    this.registerFactory('dataset', dataSetFactory, ['colormanager-decider', 'vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'HeatMap';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.isSingleSeries = true;\n    config.hasLegend = true;\n    config.defaultDatasetType = HEATMAP;\n    config.enablemousetracking = true;\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let jsonData = this.getFromEnv('dataSource'),\n      dataset = jsonData.dataset,\n      data,\n      colorrange = jsonData.colorrange;\n    if (dataset) {\n      for (let i = 0; i < dataset.length; i++) {\n        if (dataset[i].data) {\n          data = dataset[i].data;\n          break;\n        }\n      }\n    }\n    if (!dataset || !data || data.length === 0 ||\n       !colorrange || (!colorrange.color && !Number(colorrange.gradient))) {\n      return true;\n    }\n  }\n\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.drawTrendRegion = 0;\n  }\n  configureAttributes (dataObj) {\n    var iapi = this,\n      chartConfig = iapi.config,\n      dataSource = iapi.getFromEnv('dataSource'),\n      skipConfigureIteration = iapi.config.skipConfigureIteration = {}, // eslint-disable-line good-practices/no-single-usage-variable\n      rows,\n      columns,\n      datasetArray = dataObj.dataset,\n      unifiedDataset = [];\n    rows = dataSource.rows && dataSource.rows.row.filter(checkValidId);\n    columns = dataSource.columns && dataSource.columns.column.filter(checkValidId);\n    if (!rows || !columns) {\n      // create unified dataset\n      for (let i = 0; i < datasetArray.length; i++) {\n        for (let j = 0; j < datasetArray[i].data.length; j++) {\n          unifiedDataset.push(datasetArray[i].data[j]);\n        }\n      }\n      if (!rows) {\n        // get unique rows by rowid property\n        rows = unifiedDataset.map(item => getFirstValue(item.rowid)).filter(\n          (value, index, self) => self.indexOf(value) === index);\n      }\n      if (!columns) {\n        // get unique columns by columnid property\n        columns = unifiedDataset.map(item => getFirstValue(item.columnid)).filter(\n          (value, index, self) => self.indexOf(value) === index);\n      }\n    }\n    iapi.parseChartAttr(dataObj);\n\n    iapi.addToEnv('chartColorRange', dataObj.colorrange || {});\n\n    iapi.createComponent(dataObj);\n\n    iapi._feedAxesRawData();\n    skipConfigureIteration.axis = true;\n    iapi.addToEnv('totalRows', rows.length);\n    iapi.addToEnv('totalColumns', columns.length);\n\n    iapi.configureChildren();\n    // after configure chart calls its async draw\n    iapi.asyncDraw();\n    iapi.getFromEnv('toolTipController').setStyle({\n      'backgroundColor': hasSVG ? convertColor((chartConfig.tooltipbgcolor || 'FFF'), (chartConfig.tooltipbgalpha || 100))\n        : (chartConfig.tooltipbgcolor || 'FFF').replace(/\\s+/g, '').replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      'color': (chartConfig.tooltipcolor || chartConfig.basefontcolor || '545454').replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      'borderColor': hasSVG ? convertColor((chartConfig.tooltipbordercolor || '666'), (chartConfig.tooltipborderalpha || 100))\n        : (chartConfig.tooltipbordercolor || '666').replace(/\\s+/g, '').replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      'borderWidth': pluckNumber(chartConfig.tooltipborderthickness, 1) + 'px',\n      'showToolTipShadow': pluckNumber(chartConfig.showtooltipshadow || 0),\n      'borderRadius': pluckNumber(chartConfig.tooltipborderradius, 0) + 'px',\n      'fontSize': pluckNumber(chartConfig.basefontsize, 10) + 'px',\n      'fontFamily': chartConfig.basefont || this.getFromEnv('style').inCanfontFamily,\n      'padding': pluckNumber(chartConfig.tooltippadding || 3) + 'px'\n    });\n  }\n  _postSpaceManagement () {\n    var iapi = this,\n      xAxis = iapi.getChildren('xAxis')[0],\n      legend = iapi.getFromEnv('legend'),\n      xDepth = iapi.config.xDepth; // eslint-disable-line good-practices/no-single-usage-variable\n    iapi.setAxisDimention();\n    xAxis && xAxis.shiftLabels(-xDepth, 0);\n    legend && legend.postSpaceManager();\n\n    iapi.allocateDimensionOfChartMenuBar();\n  }\n\n  /**\n   * Sets dimension of Axis components\n   */\n  setAxisDimention () {\n    let iapi = this,\n      xAxis = iapi.getChildren('xAxis') && iapi.getChildren('xAxis')[0],\n      yAxis = iapi.getChildren('yAxis') && iapi.getChildren('yAxis')[0],\n      chartConfig = iapi.getFromEnv('chartConfig'),\n      canvas = iapi.getChildren('canvas')[0],\n      canvasConfig = canvas.config,\n      {\n        left,\n        top,\n        width,\n        height,\n        paddingLeft,\n        paddingRight\n      } = canvas.getEffectiveDimensions(),\n      canvasBorderWidth = canvasConfig && canvasConfig.canvasBorderWidth,\n      canvasPadding = canvasConfig && canvasConfig.canvasPadding;\n    xAxis && xAxis.setAxisConfig({\n      'canvasPaddingLeft': Math.max(paddingLeft, canvasPadding),\n      'canvasPaddingRight': Math.max(paddingRight, canvasPadding)\n    });\n    xAxis && xAxis.setAxisDimention({\n      x: left,\n      y: xAxis.config.isOpposit ? (top + (chartConfig.shift || 0) - canvasBorderWidth)\n        : (top + height + (chartConfig.shift || 0) + canvasBorderWidth),\n      opposite: xAxis.config.isOpposit ? top + height + canvasBorderWidth\n        : top - canvasBorderWidth,\n      axisLength: width\n    });\n    yAxis && yAxis.setAxisDimention({\n      x: yAxis.config.isOpposit\n        ? left + width + canvasBorderWidth : left - canvasBorderWidth,\n      y: top,\n      opposite: yAxis.config.isOpposit\n        ? left - canvasBorderWidth : left + width + canvasBorderWidth,\n      axisLength: height\n    });\n  }\n  _feedAxesRawData () {\n    var iapi = this,\n      colorM = iapi.getFromEnv('color-manager'),\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = dataObj.chart,\n      xAxisConf,\n      yAxisConf,\n      is3D = iapi.config.is3D,\n      palleteString = is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      xAxisPosition = parseUnsafeString(chartAttrs.xaxisposition).toLowerCase(),\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    xAxisConf = {\n      mapTickValuesById: true,\n      isVertical: false,\n      isReverse: false,\n      isOpposit: pluckNumber(xAxisPosition === 'top' ? true : UNDEF,\n        xAxisPosition === 'bottom' ? false : UNDEF, !!iapi.config.placeAxisLabelsOnTop),\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.xaxisnamepadding,\n      axisValuePadding: pluckNumber(chartAttrs.labelxpadding, chartAttrs.labelpadding, 4),\n      axisNameFont: chartAttrs.xaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.xaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.xaxisnamefontsize,\n      axisNameFontColor: chartAttrs.xaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.xaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.xaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.xaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.xaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.xaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.xaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.xaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.xaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.xaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.xaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.xaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.xaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.xaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.xaxisnameborderdashgap,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: pluck(chartAttrs.vdivlinecolor, chartAttrs.divlinecolor,\n        colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.vdivlinealpha, chartAttrs.divlinealpha,\n        is3D ? colorM.getColor(divLineAlpha3DStr) : colorM.getColor(divLineAlphaStr)),\n      divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed,\n        chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n      alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor(altVGridColorStr)),\n      alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor(altVGridAlphaStr)),\n      numDivLines: chartAttrs.numvdivlines,\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      labelBdrColor: chartAttrs.labelbordercolor,\n      labelBdrAlpha: chartAttrs.labelborderalpha,\n      labelLink: chartAttrs.labellink,\n      labelBgColor: chartAttrs.labelbgcolor,\n      labelBgAlpha: chartAttrs.labelbgalpha,\n      labelBdrThickness: chartAttrs.labelborderthickness,\n      labelBdrPadding: chartAttrs.labelborderpadding,\n      labelBdrRadius: chartAttrs.labelborderradius,\n      labelBdrDashed: chartAttrs.labelborderdashed,\n      labelBdrDashLen: chartAttrs.labelborderdashlen,\n      labelBdrDashGap: chartAttrs.labelborderdashgap,\n      axisName: chartAttrs.xaxisname,\n      axisMinValue: chartAttrs.xaxisminvalue,\n      axisMaxValue: chartAttrs.xaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptivexmin,\n      adjustDiv: chartAttrs.adjustvdiv,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: pluckNumber(chartAttrs.showxaxislabels, chartAttrs.showlabels),\n      rotateLabels: chartAttrs.rotatexaxislabels,\n      slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      maxLabelHeight: chartAttrs.maxlabelheight,\n      showZeroPlane: chartAttrs.showvzeroplane,\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      zeroPlaneThickness: chartAttrs.vzeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, COLOR_000000)\n    };\n    yAxisConf = {\n      mapTickValuesById: true,\n      isVertical: true,\n      isReverse: false,\n      isOpposit: isEqualString(chartAttrs.yaxisposition, 'right'),\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.yaxisnamepadding,\n      axisValuePadding: pluckNumber(chartAttrs.labelypadding, chartAttrs.yaxisvaluespadding, 4),\n      axisNameFont: chartAttrs.yaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.yaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.yaxisnamefontsize,\n      axisNameFontColor: chartAttrs.yaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.yaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.yaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.yaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.yaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.yaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.yaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.yaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.yaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.yaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.yaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.yaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.yaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.yaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.yaxisnameborderdashgap,\n      axisNameWidth: chartAttrs.yaxisnamewidth,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n      axisName: chartAttrs.yaxisname,\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n      alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor(altHGridColorStr)),\n      alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor(altHGridAlphaStr)),\n      numDivLines: chartAttrs.numdivlines,\n      axisMinValue: chartAttrs.yaxisminvalue,\n      axisMaxValue: chartAttrs.yaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptiveymin,\n      adjustDiv: chartAttrs.adjustdiv,\n      labelStep: chartAttrs.yaxisvaluesstep,\n      showLabels: pluckNumber(chartAttrs.showyaxislabels, chartAttrs.showlabels),\n      maxLabelWidthPercent: chartAttrs.maxlabelwidthpercent,\n      showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n      divLineColor: pluck(chartAttrs.hdivlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.hdivlinealpha, colorM.getColor(divLineAlphaStr)),\n      divLineThickness: pluckNumber(chartAttrs.hdivlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.hdivlinedashed, chartAttrs.hdivlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.hdivlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.hdivlinedashgap, 2),\n      // showLimits: chartAttrs.showlimits,\n      // showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n      showZeroPlane: chartAttrs.showzeroplane,\n      zeroPlaneColor: chartAttrs.zeroplanecolor,\n      zeroPlaneThickness: chartAttrs.zeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showyaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, COLOR_000000),\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      labelBdrColor: chartAttrs.labelbordercolor,\n      labelBdrAlpha: chartAttrs.labelborderalpha,\n      labelLink: chartAttrs.labellink,\n      labelBgColor: chartAttrs.labelbgcolor,\n      labelBgAlpha: chartAttrs.labelbgalpha,\n      labelBdrThickness: chartAttrs.labelborderthickness,\n      labelBdrPadding: chartAttrs.labelborderpadding,\n      labelBdrRadius: chartAttrs.labelborderradius,\n      labelBdrDashed: chartAttrs.labelborderdashed,\n      labelBdrDashLen: chartAttrs.labelborderdashlen,\n      labelBdrDashGap: chartAttrs.labelborderdashgap\n    };\n    xAxisConf.vtrendlines = dataObj.vtrendlines;\n    yAxisConf.trendlines = dataObj.trendlines;\n    return {\n      yAxisConf: [yAxisConf],\n      xAxisConf: [xAxisConf]\n    };\n  }\n\n  _setCategories () {\n    var iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      xAxis = iapi.getChildren('xAxis'),\n      yAxis = iapi.getChildren('yAxis'),\n      len,\n      i,\n      k,\n      columnObj,\n      rowObj,\n      columns,\n      rows,\n      columnid,\n      rowid,\n      columnArr = [],\n      rowArr = [],\n      columnFlag,\n      rowFlag,\n      j;\n\n    if (!dataObj.columns || !dataObj.rows) {\n      dataObj.columns = {};\n      dataObj.columns.column = columns = [];\n\n      dataObj.rows = {};\n      dataObj.rows.row = rows = [];\n\n      for (k = 0; k < (dataObj.dataset && dataObj.dataset.length); k++) {\n        len = dataObj.dataset && dataObj.dataset[k].data && dataObj.dataset[k].data.length;\n        for (i = 0; i < len; i++) {\n          columnid = getFirstValue(dataObj.dataset[k].data[i].columnid);\n          rowid = getFirstValue(dataObj.dataset[k].data[i].rowid);\n          columnFlag = true;\n          rowFlag = true;\n\n          for (j = 0; j < columns.length; j++) {\n            if (columnid === columns[j].id) {\n              columnFlag = false;\n            }\n          }\n          if (columnFlag) {\n            columnObj = {\n              id: columnid,\n              label: columnid\n            };\n            dataObj.columns.column.push(columnObj);\n          }\n\n          for (j = 0; j < rows.length; j++) {\n            if (rowid === rows[j].id) {\n              rowFlag = false;\n            }\n          }\n          if (rowFlag) {\n            rowObj = {\n              id: rowid,\n              label: rowid\n            };\n            dataObj.rows.row.push(rowObj);\n          }\n        }\n      }\n    }\n\n    columns = dataObj.columns.column;\n    rows = dataObj.rows.row;\n\n    for (i = 0; i < (columns && columns.length); i++) {\n      columns[i].label = pluck(columns[i].label, columns[i].name, columns[i].id);\n      columnArr.push(columns[i]);\n    }\n    dataObj.columns.column = columnArr;\n\n    for (i = 0; i < (rows && rows.length); i++) {\n      rows[i].label = pluck(rows[i].label, rows[i].name, rows[i].id);\n      rowArr.push(rows[i]);\n    }\n    dataObj.rows.row = rowArr;\n\n    // dataObj.columns && xAxis[0].setAxisPadding(0.5, 0.5);\n    dataObj.columns && xAxis[0].setTickValues(dataObj.columns.column);\n\n    // dataObj.columns && yAxis[0].setAxisPadding(0.5, 0.5);\n    dataObj.rows && yAxis[0].setTickValues(dataObj.rows.row);\n\n    xAxis[0].setAxisConfig({\n      categoryNumDivLines: iapi.getFromEnv('totalColumns') - 1,\n      categoryDivLinesFromZero: 0,\n      showAlternateGridColor: 0\n    });\n\n    yAxis[0].setAxisConfig({\n      categoryNumDivLines: iapi.getFromEnv('totalRows') - 1,\n      categoryDivLinesFromZero: 0,\n      showAlternateGridColor: 0\n    });\n  }\n  getDSdef () {\n    return HeatMapDataset;\n  }\n\n  getDSGroupdef () {\n    return HeatMapGroup;\n  }\n}\nexport default HeatMap;\n","import { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport {\n  pluckNumber,\n  pluck,\n  parseUnsafeString,\n  parseTooltext,\n  getValidValue,\n  getDashStyle,\n  getDefinedColor,\n  BLANK,\n  BLANKSTRING,\n  setLineHeight,\n  preDefStr,\n  toRaphaelColor,\n  isIE,\n  hasTouch,\n  getFirstValue,\n  TOUCH_THRESHOLD_PIXELS,\n  CLICK_THRESHOLD_PIXELS,\n  convertColor, getLightColor, getColumnColor, configureDataLabelStyle\n} from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport heatmapAnimation from './index.animation';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\n\nlet HUNDREDSTRING = '100',\n  PLOTGRADIENTCOLOR = 'plotGradientColor',\n  PLOTBORDERCOLOR = 'plotBorderColor',\n  COLOR_FFFFFF = 'FFFFFF',\n  SHOWSHADOW = 'showShadow',\n  UNDEF,\n  MOUSEOVER = 'mouseOver',\n  MOUSEOUT = 'mouseOut',\n  NORMAL = 'normal',\n  PXSTRING = 'px',\n  pStr = preDefStr.pStr,\n  sStr = preDefStr.sStr,\n  COMMA = ',',\n  BOLDSTARTTAG = '<b>',\n  BOLDENDTAG = '</b>',\n  BREAKSTRING = '<br />',\n  visibleStr = 'visible',\n  miterStr = preDefStr.miterStr,\n  hiddenStr = preDefStr.hiddenStr,\n  showHoverEffectStr = preDefStr.showHoverEffectStr,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_END = preDefStr.POSITION_END,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  SETROLLOVERATTR = 'setRolloverAttr',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  EVENTARGS = 'eventArgs',\n  POINTER = 'pointer',\n  tlLabelStr = 'tlLabel',\n  blLabelStr = 'blLabel',\n  trLabelStr = 'trLabel',\n  brLabelStr = 'brLabel',\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  DEFAULT_CURSOR = preDefStr.DEFAULT,\n  MAX_PERCENT_SPACE = 0.9,\n  POINT_FIVE = 0.5,\n  GUTTER_4 = 4,\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {Object} attr  Attributes to be applied to the group\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (attr, parentContainer, dataset) {\n    return dataset.getFromEnv('animationManager').setAnimation({\n      el: 'group',\n      attr: attr,\n      container: parentContainer,\n      component: dataset,\n      label: 'group'\n    });\n  },\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')', // invisible but clickable\n  HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS\n    : CLICK_THRESHOLD_PIXELS,\n  pInt = function (s, mag) {\n    return parseInt(s, mag || 10);\n  },\n  NONE = 'none',\n  _rolloverResponseSetter = function (chart, data, event, onlyHoverEffect, dataset) {\n    var dataGraphics = data.graphics,\n      animationManager = chart.getFromEnv('animationManager'),\n      elem = dataGraphics && dataGraphics.element,\n      elData = elem && elem.getData();\n    // Check whether the plot is in dragged state or not if\n    // drag then dont fire rolloverevent\n    if (elData.draged !== true) {\n      animationManager.setAnimationState(MOUSEOVER);\n      elem && elData.showHoverEffect !== 0 && animationManager.setAnimation({\n        el: elem,\n        attr: elem.getData().setRolloverAttr,\n        component: dataset\n      });\n      !onlyHoverEffect && elem && chart.plotEventHandler(elem, event, ROLLOVER);\n    }\n  },\n  _rolloutResponseSetter = function (chart, data, event, onlyHoverEffect, dataset) {\n    var dataGraphics = data.graphics,\n      animationManager = chart.getFromEnv('animationManager'),\n      elem = dataGraphics && dataGraphics.element,\n      elData = elem && elem.getData();\n    // Check whether the plot is in draggedstate or not if drag then dont fire rolloutevent\n    if (elData.draged !== true) {\n      animationManager.setAnimationState(MOUSEOUT);\n      elem && elData.showHoverEffect !== 0 && animationManager.setAnimation({\n        el: elem,\n        attr: elem.getData().setRolloutAttr,\n        component: dataset\n      });\n      !onlyHoverEffect && elem && chart.plotEventHandler(elem, event, ROLLOUT);\n    }\n  },\n  mathMax = Math.max,\n  mathMin = Math.min,\n  mathAbs = Math.abs;\naddDep({\n  name: 'heatmapAnimation',\n  type: 'animationRule',\n  extension: heatmapAnimation\n});\nclass HeatMapDataset extends ComponentInterface {\n  constructor () {\n    super();\n\n    this.components = {};\n    this.graphics = {};\n    this.dataSetArray = [];\n    // this.getDataLimits = null;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'heatMap';\n  }\n  /**\n   * Configures the cosmetic of dataset\n   * Creates the empty plotGrid array\n   * Calculates the dataset min and max value\n   * @param {Object} datasetJSON data array containing data information\n   */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      JSONData = conf.JSONData,\n      setDataArr = JSONData.data,\n      len = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      colorM = dataSet.getFromEnv('color-manager'),\n      plotBorderDash = pluckNumber(JSONData.dashed, chartAttr.plotborderdashed), // eslint-disable-line good-practices/no-single-usage-variable\n      setData,\n      setValue,\n      dataObj,\n      config,\n      dataStore = dataSet.components.data,\n      plotGrid = dataSet.components.plotGrid = [],\n      isBar = chart.isBar,\n      is3D = chart.config.is3D,\n      enableAnimation,\n      i,\n      r,\n      c,\n      maxValue = -Infinity,\n      minValue = +Infinity,\n      totalRows = dataSet.getFromEnv('totalRows'), // eslint-disable-line good-practices/no-single-usage-variable\n      totalColumns = dataSet.getFromEnv('totalColumns'); // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (r = 0; r < totalRows; r++) {\n      plotGrid.push([]);\n      for (c = 0; c < totalColumns; c++) {\n        plotGrid[r].push([]);\n      }\n    }\n    dataSet.setState('visible',\n      pluckNumber(dataSet.getState('visible'), dataSet.config.JSONData.visible,\n        !Number(dataSet.config.JSONData.initiallyhidden), 1) === 1);\n    conf.showplotborder = pluckNumber(chartAttr.showplotborder, is3D ? 0 : 1);\n    conf.plotDashLen = pluckNumber(chartAttr.plotborderdashlen, 5);\n    conf.plotDashGap = pluckNumber(chartAttr.plotborderdashgap, 4);\n    conf.showTextOutLine = pluckNumber(chartAttr.textoutline, 0);\n    conf.plotfillAngle = pluckNumber(360 - chartAttr.plotfillangle, (isBar ? 180 : 90));\n    conf.plotFillAlpha = pluck(JSONData.alpha, chartAttr.plotfillalpha, HUNDREDSTRING);\n    conf.plotColor = pluck(JSONData.color, colorM.getPlotColor(dataSet.index || dataSet.positionIndex));\n    conf.isRoundEdges = pluckNumber(chartAttr.useroundedges, 0);\n    conf.plotRadius = pluckNumber(chartAttr.useRoundEdges, conf.isRoundEdges ? 1 : 0);\n    conf.plotFillRatio = pluck(JSONData.ratio, chartAttr.plotfillratio);\n    conf.plotgradientcolor = getDefinedColor(chartAttr.plotgradientcolor,\n      colorM.getColor(PLOTGRADIENTCOLOR));\n    // !usePlotGradientColor && (plotgradientcolor = BLANKSTRING);\n    conf.plotBorderAlpha = conf.showplotborder ? pluck(chartAttr.plotborderalpha,\n      conf.plotFillAlpha, HUNDREDSTRING) : 0;\n    conf.plotBorderColor = pluck(chartAttr.plotbordercolor,\n      is3D ? COLOR_FFFFFF : colorM.getColor(PLOTBORDERCOLOR));\n    conf.plotBorderThickness = pluckNumber(chartAttr.plotborderthickness, 1);\n    conf.plotBorderDashStyle = plotBorderDash\n      ? getDashStyle(conf.plotDashLen, conf.plotDashGap) : NONE;\n    conf.showValues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 1);\n    conf.valuePadding = pluckNumber(chartAttr.valuepadding, 2);\n    conf.enableAnimation = enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n    conf.transposeAnimation =\n                pluckNumber(chartAttr.transposeanimation, enableAnimation);\n    conf.transposeAnimDuration = pluckNumber(chartAttr.transposeanimduration, 0.2) * 1000;\n\n    conf.showShadow = (conf.isRoundEdges || is3D) ? pluckNumber(chartAttr.showshadow, 1)\n      : pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.showHoverEffect = pluckNumber(chartAttr.plothovereffect,\n      chartAttr.showhovereffect, UNDEF);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.definedGroupPadding = Math.max(pluckNumber(chartAttr.plotspacepercent), 0);\n    conf.plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0);\n    conf.maxColWidth = pluckNumber(isBar ? chartAttr.maxbarheight : chartAttr.maxcolwidth, 50);\n    conf.plotPaddingPercent = pluckNumber(chartAttr.plotpaddingpercent);\n    conf.rotateValues = pluckNumber(chartAttr.rotatevalues) ? 270 : 0;\n    conf.placeValuesInside = pluckNumber(chartAttr.placevaluesinside, 0);\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5,\n      top: 0.5,\n      bottom: 0.5\n    };\n\n    conf.use3DLighting = pluckNumber(chartAttr.use3dlighting, 1);\n    conf.parentYAxis = pluck(JSONData.parentyaxis && JSONData.parentyaxis.toLowerCase(),\n      pStr) === sStr ? 1 : 0;\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n\n    // Parsing the attributes and values at set level.\n    for (i = 0; i < len; i++) {\n      setData = setDataArr && setDataArr[i];\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n\n      config.setValue = setValue = dataSet.getFromEnv('number-formatter').getCleanValue(setData.value);\n      maxValue = Math.max(maxValue, setValue);\n      minValue = Math.min(minValue, setValue);\n    }\n\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n\n    dataSet._setConfigure();\n    dataSet.setState('dirty', true);\n  }\n  /**\n   * Attaches legendUpdate event listener to dataset which decides whether to\n   * show/hide particular data in dataset.\n   * Sets the color configuration for each data objects present in dataset.\n   */\n  _setConfigure () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      JSONData = dataSet.config.JSONData,\n      setDataArr = JSONData.data,\n      len = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      chartConfig = dataSet.getFromEnv('chartConfig'),\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      showplotborder = conf.showplotborder,\n      plotColor = conf.plotColor = dataSet.getFromEnv('color-manager').getPlotColor(dataSet.index || dataSet.positionIndex),\n      showTooltip = pluckNumber(chartAttr.showtooltip, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      tooltipSepChar = parseUnsafeString(pluck(chartAttr.tooltipsepchar, ': ')),\n      usePlotGradientColor = pluckNumber(chartAttr.useplotgradientcolor, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      formatedVal,\n      parserConfig,\n      setTooltext,\n      macroIndices,\n      toolText = BLANKSTRING,\n      plotDashLen = conf.plotDashLen,\n      plotDashGap = conf.plotDashGap,\n      plotBorderThickness = conf.plotBorderThickness,\n      isRoundEdges = conf.isRoundEdges,\n      showHoverEffect = conf.showHoverEffect,\n      plotfillAngle = conf.plotfillAngle,\n      plotFillAlpha = conf.plotFillAlpha,\n      plotFillRatio = conf.plotFillRatio,\n      plotBorderAlpha = conf.plotBorderAlpha,\n      plotBorderColor = conf.plotBorderColor,\n      plotBorderDashStyle,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      colorRange = dataSet.getFromEnv('chartColorRange'),\n      column,\n      row,\n      rowid,\n      columnid,\n      mapByPercent = conf.mapByPercent = pluckNumber(colorRange.mapbypercent, 0),\n      mapByCategory = conf.mapByCategory =\n                    pluckNumber(chartAttr.mapbycategory, 0),\n      useColorGradient = colorRange && pluckNumber(colorRange.gradient), // eslint-disable-line good-practices/no-single-usage-variable\n      hoverColor,\n      hoverAlpha,\n      hoverGradientColor,\n      hoverRatio,\n      hoverAngle,\n      hoverBorderColor,\n      hoverBorderAlpha,\n      hoverBorderThickness,\n      hoverBorderDashed,\n      hoverBorderDashGap,\n      hoverBorderDashLen,\n      hoverDashStyle,\n      hoverColorArr,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      setDisplayValue,\n      isBar = chart.isBar,\n      is3D = chart.config.is3D,\n      parentYAxis = conf.parentYAxis,\n      i,\n      maxValue = conf.maxValue, // eslint-disable-line good-practices/no-single-usage-variable\n      minValue = conf.minValue,\n      heatRange,\n      colorObj,\n      tlType = getValidValue(chartAttr.tltype, BLANK),\n      trType = getValidValue(chartAttr.trtype, BLANK),\n      blType = getValidValue(chartAttr.bltype, BLANK),\n      brType = getValidValue(chartAttr.brtype, BLANK),\n      tlLabel,\n      trLabel,\n      blLabel,\n      brLabel,\n      tlTypeToolText = BLANK, // eslint-disable-line good-practices/no-single-usage-variable\n      trTypeToolText = BLANK, // eslint-disable-line good-practices/no-single-usage-variable\n      blTypeToolText = BLANK, // eslint-disable-line good-practices/no-single-usage-variable\n      brTypeToolText = BLANK, // eslint-disable-line good-practices/no-single-usage-variable\n      percentValue,\n      toolTextValue,\n      value,\n      minMaxArray,\n      minMaxArrayLen,\n      toolTipValue,\n      setDataDashed,\n      setDataPlotDashLen,\n      setDataPlotDashGap,\n      colorManager = chart.getFromEnv('colorManager'),\n      font,\n      fontColor,\n      fontSize,\n      fontWeight,\n      fontStyle;\n\n    font = chartConfig.style.inCanfontFamily;\n    fontSize = pInt(chartConfig.style.inCanfontSize, 10);\n    fontColor = chartConfig.style.inCancolor;\n    fontWeight = NORMAL;\n    fontStyle = NORMAL;\n\n    heatRange = maxValue - minValue; // eslint-disable-line good-practices/no-single-usage-variable\n    if (!conf.eventAttached) {\n      // listen to event fired by legends and decide what to do\n      dataSet.addExtEventListener('legendUpdate', function (e, d) {\n        if (d.component === 'legend') {\n          if (d.legendItem.hasState('hidden')) {\n            dataSet.show(d.legendItem, e);\n          } else {\n            dataSet.hide(d.legendItem, e);\n          }\n        } else {\n          minMaxArray = d.maxMinArray;\n          minMaxArrayLen = minMaxArray.length;\n          for (i = 0; i < minMaxArrayLen; i++) {\n            dataSet.updatePlot(minMaxArray[i].min, minMaxArray[i].max);\n          }\n        }\n      }, colorManager);\n      conf.eventAttached = true;\n    }\n\n    if (!useColorGradient || mapByCategory) {\n      conf.colorMap = [];\n      if (colorRange.color) {\n        for (i = 0; i < colorRange.color.length; i++) {\n          conf.colorMap[i] = {\n            config: colorRange.color[i],\n            dataSet: dataSet\n          };\n          conf.colorMap[i].config.visible = true;\n        }\n      }\n    }\n\n    for (i = 0; i < len; i++) {\n      setData = setDataArr && setDataArr[i];\n      dataObj = dataSet.components.data[i];\n      config = dataObj && dataObj.config;\n      setValue = config.setValue;\n      config.showValue = pluckNumber(setData.showvalue, conf.showValues);\n      config.setLink = pluck(setData.link);\n      config.toolTipValue = toolTipValue = numberFormatter.dataLabels(setValue, parentYAxis);\n      config.setDisplayValue = setDisplayValue = parseUnsafeString(setData.displayvalue);\n      config.displayValue = pluck(setDisplayValue, toolTipValue);\n      setDataDashed = pluckNumber(setData.dashed);\n      setDataPlotDashLen = pluckNumber(setData.dashlen, plotDashLen);\n      setDataPlotDashGap = plotDashGap = pluckNumber(setData.dashgap, plotDashGap);\n      config.plotBorderDashStyle = setDataDashed === 1\n        ? getDashStyle(setDataPlotDashLen, setDataPlotDashGap)\n        : (setDataDashed === 0 ? NONE : conf.plotBorderDashStyle);\n      /* @TODO-\n      * Heatmap percentage calculation is done for each dataset individually and shown for ease.\n      * But ideally percentage calculation must be done considering all the datasets.\n      * A heatmap group manager should query each dataset for their local min and max values and\n      * calculate overall range. Then, the group must inform all the dataset the range and the dataset must\n      * calculate the percentage values for each data and then draw itself.\n      */\n      if (mapByPercent) {\n        config.percentValue = percentValue = setData.value && (Math.round((setData.value -\n                                                minValue) / heatRange * 10000) / 100);\n      } else {\n        config.percentValue = UNDEF;\n      }\n\n      config.dataLabelStyle = dataSet._configureDataLabelStyle(setData);\n\n      config.value = value = (mapByCategory /* || !useColorGradient */)\n        ? (setData.colorrangelabel || setData.categoryid) : mapByPercent ? percentValue : config.setValue;\n      colorObj = colorManager.getColor(value);\n      config.colorRangeLabel = setData.colorrangelabel || colorObj.label;\n      dataObj.legendItemIndex = colorObj.seriesIndex;\n      config.legendItemId = colorObj.legendItemId;\n      colorObj && !colorObj.code && (colorObj.code = 'ffffff');\n\n      // alpha at data label > alpha at color object > plotfillalpha\n      config.plotFillAlpha = plotFillAlpha = pluckNumber(setData.alpha, colorObj && colorObj.oriAlpha, conf.plotFillAlpha);\n      plotColor = pluck(setData.color, (colorObj && colorObj.code));\n      if (setValue < 0 && !isRoundEdges) {\n        plotfillAngle = isBar ? 180 - plotfillAngle : 360 - plotfillAngle;\n      }\n      config.colorArr = getColumnColor(\n        plotColor + COMMA + conf.plotgradientcolor,\n        plotFillAlpha.toString(),\n        plotFillRatio,\n        plotfillAngle,\n        isRoundEdges,\n        plotBorderColor,\n        plotBorderAlpha.toString(),\n        (isBar ? 1 : 0),\n        (!!is3D)\n      );\n\n      if (colorObj && colorObj.outOfRange) {\n        config.visible = false;\n        config.displayValue = BLANKSTRING;\n        continue;\n      }\n      config.visible = true;\n\n      config.color = convertColor(plotColor, config.plotFillAlpha);\n      config.rawPlotColor = plotColor;\n\n      // Parsing the hover effects only if showhovereffect is not 0.\n      if (showHoverEffect !== 0) {\n        hoverColor = pluck(setData.hovercolor, JSONData.hovercolor, chartAttr.plotfillhovercolor,\n          chartAttr.columnhovercolor, plotColor);\n        hoverAlpha = pluck(setData.hoveralpha, JSONData.hoveralpha,\n          chartAttr.plotfillhoveralpha, chartAttr.columnhoveralpha, '25');\n        hoverGradientColor = pluck(setData.hovergradientcolor,\n          JSONData.hovergradientcolor, chartAttr.plothovergradientcolor, !usePlotGradientColor && BLANKSTRING);\n        !hoverGradientColor && (hoverGradientColor = BLANKSTRING);\n        hoverRatio = pluck(setData.hoverratio,\n          JSONData.hoverratio, chartAttr.plothoverratio, plotFillRatio);\n        hoverAngle = pluckNumber(360 - setData.hoverangle,\n          360 - JSONData.hoverangle, 360 - chartAttr.plothoverangle, plotfillAngle);\n        hoverBorderColor = pluck(setData.borderhovercolor,\n          JSONData.borderhovercolor, chartAttr.plotborderhovercolor, plotBorderColor);\n        hoverBorderAlpha = pluck(setData.borderhoveralpha,\n          JSONData.borderhoveralpha, chartAttr.plotborderhoveralpha, plotBorderAlpha, plotFillAlpha);\n        hoverBorderThickness = pluckNumber(setData.borderhoverthickness,\n          JSONData.borderhoverthickness, chartAttr.plotborderhoverthickness, plotBorderThickness);\n        hoverBorderDashed = pluckNumber(setData.borderhoverdashed,\n          JSONData.borderhoverdashed, chartAttr.plotborderhoverdashed);\n        hoverBorderDashGap = pluckNumber(setData.borderhoverdashgap,\n          JSONData.borderhoverdashgap, chartAttr.plotborderhoverdashgap, plotDashLen);\n        hoverBorderDashLen = pluckNumber(setData.borderhoverdashlen,\n          JSONData.borderhoverdashlen, chartAttr.plotborderhoverdashlen, plotDashGap);\n        hoverDashStyle = hoverBorderDashed\n          ? getDashStyle(hoverBorderDashLen, hoverBorderDashGap)\n          : conf.plotBorderDashStyle;\n\n        /* If no hover effects are explicitly defined and\n                     * showHoverEffect is not 0 then hoverColor is set.\n                     */\n        if (showHoverEffect === 1 && hoverColor === plotColor) {\n          hoverColor = getLightColor(hoverColor, 70);\n        }\n\n        // setting the hover color array which is always applied except when showHoverEffect is not 0.\n        hoverColorArr = getColumnColor(\n          hoverColor,\n          hoverAlpha,\n          hoverRatio,\n          hoverAngle,\n          isRoundEdges,\n          hoverBorderColor,\n          hoverBorderAlpha.toString(),\n          (isBar ? 1 : 0),\n          (!!is3D)\n        );\n\n        config.setRolloutAttr = {\n          fill: toRaphaelColor(config.color),\n          stroke: (showplotborder && toRaphaelColor(config.colorArr[1])) || TRACKER_FILL,\n          'stroke-width': plotBorderThickness,\n          'stroke-dasharray': plotBorderDashStyle || []\n        };\n        config.setRolloverAttr = {\n          fill: toRaphaelColor(hoverColorArr[0]),\n          stroke: (showplotborder && toRaphaelColor(hoverColorArr[1])) || TRACKER_FILL,\n          'stroke-width': hoverBorderThickness,\n          'stroke-dasharray': hoverDashStyle\n        };\n      }\n\n      mapByPercent && (percentValue = numberFormatter.percentValue(percentValue));\n\n      config.setValue = setValue = numberFormatter.getCleanValue(setData.value);\n      config.toolTipValue = numberFormatter.dataLabels(setValue, parentYAxis);\n      formatedVal = config.toolTipValue;\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext,\n        JSONData.plottooltext, chartAttr.plottooltext), false));\n\n      config.tlLabel = tlLabel = parseUnsafeString(pluck(setData.tllabel, setData.ltlabel));\n      config.trLabel = trLabel = parseUnsafeString(pluck(setData.trlabel, setData.rtlabel));\n      config.blLabel = blLabel = parseUnsafeString(pluck(setData.bllabel, setData.lblabel));\n      config.brLabel = brLabel = parseUnsafeString(pluck(setData.brlabel, setData.rblabel));\n\n      config.tlLabelStyle = {\n        fontFamily: pluck(colorObj.tlLabelFont, chartAttr.tlfont, font),\n        fontSize: pluckNumber(colorObj.tlLabelFontSize, chartAttr.tlfontsize, fontSize) + PXSTRING,\n        color: convertColor(pluck(colorObj.tlLabelFontColor, chartAttr.tlfontcolor, fontColor), 100),\n        fontWeight: fontWeight,\n        fontStyle: fontStyle\n      };\n      setLineHeight(config.tlLabelStyle);\n      config.trLabelStyle = {\n        fontFamily: pluck(colorObj.trLabelFont, chartAttr.trfont, font),\n        fontSize: pluckNumber(colorObj.trLabelFontSize, chartAttr.trfontsize, fontSize) + PXSTRING,\n        color: convertColor(pluck(colorObj.trLabelFontColor, chartAttr.trfontcolor, fontColor), 100),\n        fontWeight: fontWeight,\n        fontStyle: fontStyle\n      };\n\n      config.brLabelStyle = {\n        fontFamily: pluck(colorObj.brLabelFont, chartAttr.brfont, font),\n        fontSize: pluckNumber(colorObj.brLabelFontSize, chartAttr.brfontsize, fontSize) + PXSTRING,\n        color: convertColor(pluck(colorObj.brLabelFontColor, chartAttr.brfontcolor, fontColor), 100),\n        fontWeight: fontWeight,\n        fontStyle: fontStyle\n      };\n\n      config.blLabelStyle = {\n        fontFamily: pluck(colorObj.blLabelFont, chartAttr.blfont, font),\n        fontSize: pluckNumber(colorObj.blLabelFontSize, chartAttr.blfontsize, fontSize) + PXSTRING,\n        color: convertColor(pluck(colorObj.blLabelFontColor, chartAttr.blfontcolor, fontColor), 100),\n        fontWeight: fontWeight,\n        fontStyle: fontStyle\n      };\n\n      setDisplayValue = getValidValue(parseUnsafeString(\n        setData.displayvalue));\n      toolTextValue = mapByCategory\n        ? setDisplayValue : pluck(setData.displayvalue, formatedVal);\n\n      config.displayValue = pluck(setDisplayValue, percentValue, config.toolTipValue);\n\n      if (tlType !== BLANK) {\n        tlTypeToolText = BOLDSTARTTAG + tlType + tooltipSepChar + BOLDENDTAG;\n      }\n      if (trType !== BLANK) {\n        trTypeToolText = BOLDSTARTTAG + trType + tooltipSepChar + BOLDENDTAG;\n      }\n      if (blType !== BLANK) {\n        blTypeToolText = BOLDSTARTTAG + blType + tooltipSepChar + BOLDENDTAG;\n      }\n      if (brType !== BLANK) {\n        brTypeToolText = BOLDSTARTTAG + brType + tooltipSepChar + BOLDENDTAG;\n      }\n      columnid = getFirstValue(setDataArr[i].columnid);\n      rowid = getFirstValue(setDataArr[i].rowid);\n      column = dataSet.getFromEnv('xAxis').getCategoryFromId(columnid.toLowerCase());\n      row = dataSet.getFromEnv('yAxis').getCategoryFromId(rowid.toLowerCase());\n\n      // create the tooltext\n      if (showTooltip) {\n        if (formatedVal === null) {\n          toolText = false;\n        } else if (setTooltext !== UNDEF) {\n          macroIndices = [1, 2, 5, 6, 7, 14, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116,\n            117];\n          parserConfig = {\n            formattedValue: formatedVal,\n            value: setData.value,\n            yaxisName: parseUnsafeString(chartAttr.yaxisname),\n            xaxisName: parseUnsafeString(chartAttr.xaxisname),\n            displayValue: setDisplayValue,\n            percentValue: mapByPercent ? percentValue : BLANK,\n            tlLabel: tlLabel,\n            trLabel: trLabel,\n            blLabel: blLabel,\n            brLabel: brLabel,\n            rowLabel: row.tickObj && row.tickObj.label,\n            columnLabel: column.tickObj && column.tickObj.label,\n            percentDataValue: mapByPercent ? percentValue : BLANK,\n            trtype: trType,\n            tltype: tlType,\n            brType: brType,\n            blType: blType,\n            colorRangeLabel: config.colorRangeLabel\n          };\n          toolText = parseTooltext(setTooltext, macroIndices,\n            parserConfig, setData, chartAttr, parserConfig);\n        } else {\n          toolText = ((mapByPercent ? BOLDSTARTTAG + 'Value' + tooltipSepChar + BOLDENDTAG +\n                            formatedVal +\n                            BREAKSTRING + BOLDSTARTTAG + 'Percentage' + tooltipSepChar + BOLDENDTAG +\n                            percentValue\n            : toolTextValue) +\n                        // Now we add special labels in toolTip\n                        (tlLabel !== BLANK ? BREAKSTRING +\n                            (tlTypeToolText + tlLabel) : BLANK) + (trLabel !== BLANK ? BREAKSTRING +\n                            trTypeToolText + trLabel : BLANK) + (blLabel !== BLANK ? BREAKSTRING +\n                            blTypeToolText + blLabel : BLANK) + (brLabel !== BLANK ? BREAKSTRING +\n                            brTypeToolText + brLabel : BLANK));\n        }\n      }\n      config.toolText = toolText;\n      config.setTooltext = toolText;\n    }\n  }\n  /**\n   * Hides the data objects according to the legend item\n   * @param {Object} item - legend item\n   */\n  hide (item) {\n    var dataset = this,\n      entityComponents = dataset.components.data,\n      colorRange = dataset.getFromEnv('chart').getChildren('colorRange')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      len,\n      config,\n      legendItemColor,\n      colorCode;\n\n    legendItemColor = item.config.datasetObj.code; // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (i = 0, len = entityComponents.length; i < len; i++) { // eslint-disable-line good-practices/no-single-usage-variable\n      if (!Object.keys(entityComponents[i]).length) {\n        continue;\n      }\n      colorCode = colorRange.getColorObj(entityComponents[i].config.value).code;\n      config = entityComponents[i].config;\n\n      if (legendItemColor === colorCode) {\n        entityComponents[i].graphics.element && dataset.getFromEnv('animationManager').setAnimation({\n          el: entityComponents[i].graphics.element,\n          attr: {\n            'fill-opacity': 0,\n            'stroke-width': 0\n          },\n          component: dataset\n        });\n\n        // animFlagHide = false;\n\n        entityComponents[i].graphics.hotElement &&\n                        entityComponents[i].graphics.hotElement.hide();\n        entityComponents[i].graphics.valEle && entityComponents[i].graphics.valEle.hide();\n\n        entityComponents[i].graphics.tlLabel && entityComponents[i].graphics.tlLabel.hide();\n        entityComponents[i].graphics.trLabel && entityComponents[i].graphics.trLabel.hide();\n        entityComponents[i].graphics.blLabel && entityComponents[i].graphics.blLabel.hide();\n        entityComponents[i].graphics.brLabel && entityComponents[i].graphics.brLabel.hide();\n        config.visible = false;\n        entityComponents[i].visible = false;\n      }\n    }\n    item.setLegendState('hidden');\n  }\n  /**\n   * Shows the data objects according to the legend item\n   * @param {Object} item - legend item\n   */\n  show (item) {\n    var dataset = this,\n      entityComponents = dataset.components.data,\n      animationManager = dataset.getFromEnv('animationManager'),\n      config,\n      plotFillAlpha,\n      colorObj,\n      colorRange = dataset.getFromEnv('chart').getChildren('colorRange')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      len,\n      legendItemColor,\n      colorCode;\n\n    legendItemColor = item.config.datasetObj.code; // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (i = 0, len = entityComponents.length; i < len; i++) { // eslint-disable-line good-practices/no-single-usage-variable\n      if (!Object.keys(entityComponents[i]).length) {\n        continue;\n      }\n      config = entityComponents[i].config;\n      plotFillAlpha = config.plotFillAlpha / 100;\n      colorObj = colorRange.getColorObj(entityComponents[i].config.value);\n      //  do not set color for out of range values\n      colorCode = !colorObj.outOfRange && colorObj.code;\n\n      if (legendItemColor === colorCode) {\n        entityComponents[i].graphics.element && animationManager.setAnimation({\n          el: entityComponents[i].graphics.element,\n          attr: {\n            'visibility': visibleStr\n          },\n          component: dataset\n        });\n        entityComponents[i].graphics.element && animationManager.setAnimation({\n          el: entityComponents[i].graphics.element,\n          component: dataset,\n          attr: {\n            'fill-opacity': plotFillAlpha,\n            'stroke-width': dataset.config.plotBorderThickness\n          }\n        });\n\n        // animFlagShow = false;\n\n        entityComponents[i].graphics.hotElement &&\n                        entityComponents[i].graphics.hotElement.show();\n        entityComponents[i].graphics.valEle && entityComponents[i].graphics.valEle.show();\n\n        entityComponents[i].graphics.tlLabel && entityComponents[i].graphics.tlLabel.show();\n        entityComponents[i].graphics.trLabel && entityComponents[i].graphics.trLabel.show();\n        entityComponents[i].graphics.blLabel && entityComponents[i].graphics.blLabel.show();\n        entityComponents[i].graphics.brLabel && entityComponents[i].graphics.brLabel.show();\n        config.visible = true;\n        entityComponents[i].visible = true;\n      }\n    }\n    item && item.removeLegendState('hidden');\n  }\n  /**\n   * updates the plot range when gradient legend is moved\n   */\n  updatePlot (minValue, maxValue) {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      config,\n      plotFillAlpha,\n      entityComponents = dataset.components.data,\n      i,\n      len,\n      value;\n\n    for (i = 0, len = entityComponents.length; i < len; i++) { // eslint-disable-line good-practices/no-single-usage-variable\n      if (!Object.keys(entityComponents[i]).length) {\n        continue;\n      }\n      config = entityComponents[i].config;\n      plotFillAlpha = config.plotFillAlpha / 100;\n\n      value = entityComponents[i].config.value;\n\n      if (value < minValue || value > maxValue) {\n        if (config.visible) {\n          entityComponents[i].graphics.element && animationManager.setAnimation({\n            el: entityComponents[i].graphics.element,\n            attr: {\n              'fill-opacity': 0,\n              'stroke-width': 0\n            },\n            component: dataset\n          });\n\n          entityComponents[i].graphics.hotElement &&\n                            entityComponents[i].graphics.hotElement.hide();\n          entityComponents[i].graphics.valEle && entityComponents[i].graphics.valEle.hide();\n\n          entityComponents[i].graphics.tlLabel && entityComponents[i].graphics.tlLabel.hide();\n          entityComponents[i].graphics.trLabel && entityComponents[i].graphics.trLabel.hide();\n          entityComponents[i].graphics.blLabel && entityComponents[i].graphics.blLabel.hide();\n          entityComponents[i].graphics.brLabel && entityComponents[i].graphics.brLabel.hide();\n          config.visible = false;\n          entityComponents[i].visible = false;\n        }\n      } else {\n        if (!config.visible) {\n          // entityComponents[i].graphics.element && animationManager.registerAnimation([{\n          //   animType: animType,\n          //   data: [{\n          //     el: entityComponents[i].graphics.element,\n          //     attrs: {\n          //       'fill-opacity': plotFillAlpha,\n          //       'stroke-width': conf.plotBorderThickness\n          //     }\n          //   }]\n          // }], 'plot');\n          entityComponents[i].graphics.element && animationManager.setAnimation({\n            el: entityComponents[i].graphics.element,\n            attr: {\n              'fill-opacity': plotFillAlpha,\n              'stroke-width': dataset.config.plotBorderThickness\n            },\n            callback: function () {\n              this.show();\n            },\n            component: dataset\n          });\n\n          entityComponents[i].graphics.hotElement &&\n                            entityComponents[i].graphics.hotElement.show();\n          entityComponents[i].graphics.valEle && entityComponents[i].graphics.valEle.show();\n\n          entityComponents[i].graphics.tlLabel && entityComponents[i].graphics.tlLabel.show();\n          entityComponents[i].graphics.trLabel && entityComponents[i].graphics.trLabel.show();\n          entityComponents[i].graphics.blLabel && entityComponents[i].graphics.blLabel.show();\n          entityComponents[i].graphics.brLabel && entityComponents[i].graphics.brLabel.show();\n          config.visible = true;\n          entityComponents[i].visible = true;\n        }\n      }\n    }\n  }\n\n  _checkPointObj (pX, pY, chartX, chartY) {\n    var dataset = this,\n      plotGrid = dataset.components.plotGrid,\n      pointObj,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      viewPortConfig = chartConfig.viewPortConfig,\n      plotBorderThickness = chartConfig.plotborderthickness,\n      halfPlotBorderThickness,\n      dx,\n      dy,\n      hovered;\n\n    pointObj = plotGrid[pY] && plotGrid[pY][pX];\n    plotBorderThickness = chartConfig.showplotborder ? plotBorderThickness : 0;\n    halfPlotBorderThickness = plotBorderThickness / 2;\n\n    halfPlotBorderThickness = halfPlotBorderThickness % 2 === 0 ? halfPlotBorderThickness + 1\n      : Math.round(halfPlotBorderThickness);\n\n    if (pointObj && pointObj.config && pointObj.config.visible) {\n      dx = chartX - (pointObj._xPos - viewPortConfig.x * viewPortConfig.scaleX) + halfPlotBorderThickness;\n      dy = chartY - pointObj._yPos + halfPlotBorderThickness;\n\n      hovered = dx >= 0 && dx <= pointObj._width + plotBorderThickness && dy >= 0 &&\n                    dy <= pointObj._height + plotBorderThickness;\n\n      if (hovered) {\n        return {\n          pointIndex: pointObj._index,\n          hovered: hovered,\n          pointObj: pointObj\n        };\n      }\n    }\n  }\n  /**\n   *  function to return the hovered data object\n   */\n  _getHoveredPlot (chartXVal, chartYVal) {\n    var dataset = this,\n      chartX = chartXVal,\n      chartY = chartYVal,\n      xAxis = dataset.getFromEnv('xAxis'),\n      yAxis = dataset.getFromEnv('yAxis'),\n      height = dataset.getFromEnv('chartConfig').canvasHeight / dataset.getFromEnv('totalRows'), // eslint-disable-line good-practices/no-single-usage-variable\n      x,\n      y,\n      pX,\n      pY;\n    chartX += xAxis.getTranslation();\n    chartY += yAxis.getTranslation();\n    y = yAxis.getValue(chartY + height / 2);\n    pY = Math.floor(y);\n\n    x = xAxis.getValue(chartX);\n    pX = Math.round(x);\n\n    if (pX - x > 0) {\n      return (y - pY > 0.5) ? (dataset._checkPointObj(pX, pY, chartX, chartY) ||\n                 dataset._checkPointObj(pX - 1, pY, chartX, chartY))\n        : (dataset._checkPointObj(pX, pY - 1, chartX, chartY) ||\n                    dataset._checkPointObj(pX, pY, chartX, chartY));\n    }\n    return (y - pY > 0.5) ? (dataset._checkPointObj(pX + 1, pY, chartX, chartY) ||\n                    dataset._checkPointObj(pX, pY, chartX, chartY))\n      : (dataset._checkPointObj(pX, pY - 1, chartX, chartY) ||\n                    dataset._checkPointObj(pX + 1, pY, chartX, chartY) ||\n                    dataset._checkPointObj(pX, pY, chartX, chartY));\n  }\n\n  /**\n   * Parses the plot attributes\n   *\n   * @param {any} dataObj\n   * @param {any} index\n   * @returns {any}\n   * @memberof HeatMapDataset\n   */\n  parsePlotAttributes (dataObj, index) {\n    var dataSet = this,\n      conf = dataSet.config,\n      setDataArr = dataSet.config.JSONData.data,\n      attr,\n      i = index,\n      chart = dataSet.getFromEnv('chart'),\n      xAxis = dataSet.getFromEnv('xAxis'),\n      yAxis = dataSet.getFromEnv('yAxis'),\n      xPos,\n      yPos,\n      chartConfig = dataSet.getFromEnv('chartConfig'),\n      columnWidth,\n      height,\n      toolText,\n      setLink,\n      setValue,\n      config,\n      plotBorderThickness = conf.plotBorderThickness,\n      plotRadius = conf.plotRadius,\n      colorArr,\n      plotBorderDashStyle,\n      legendActive = chart.getFromEnv('legend') && chart.getFromEnv('legend').config.isActive,\n      plotGrid = dataSet.components.plotGrid, // eslint-disable-line good-practices/no-single-usage-variable\n      width,\n      column,\n      row,\n      columnid,\n      rowid,\n      trackerConfig;\n\n    yAxis.yBasePos = yAxis.getPixel(yAxis.getAxisBase());\n    if (!dataObj || !Object.keys(dataObj).length) {\n      return;\n    }\n    width = chartConfig.canvasWidth / dataSet.getFromEnv('totalColumns');\n    height = chartConfig.canvasHeight / dataSet.getFromEnv('totalRows');\n\n    trackerConfig = dataObj.trackerConfig = {};\n    config = dataObj && dataObj.config;\n    setValue = config.setValue;\n    columnid = getFirstValue(setDataArr[i].columnid);\n    rowid = getFirstValue(setDataArr[i].rowid);\n    column = xAxis.getCategoryFromId(columnid.toLowerCase());\n    row = yAxis.getCategoryFromId(rowid.toLowerCase());\n    if ((column.index !== 0 && !column.index) || (row.index !== 0 && !row.index)) {\n      return;\n    }\n    if (!conf.mapByCategory && setValue === null) {\n      return;\n    }\n\n    setLink = config.setLink;\n    colorArr = config.colorArr;\n\n    // Creating the data structure if not present for storing the graphics elements.\n    if (!dataObj.graphics) {\n      dataSet.components.data[i].graphics = {};\n    }\n\n    xPos = xAxis.getPixel(column.index) - width / 2;\n\n    yPos = yAxis.getPixel(row.index) - height / 2;\n\n    columnWidth = width;\n\n    // Setting the final tooltext.\n    toolText = config.toolText;\n\n    // Setting the event arguments.\n    trackerConfig.eventArgs = {\n      index: i,\n      link: setLink,\n      value: config.percentValue || setValue,\n      displayValue: config.displayValue,\n      columnId: column.tickObj.id,\n      rowId: row.tickObj.id,\n      tlLabel: config.tlLabel,\n      trLabel: config.trLabel,\n      blLabel: config.blLabel,\n      brLabel: config.brLabel,\n      colorRangeLabel: config.colorRangeLabel,\n      color: config.rawPlotColor,\n      alpha: config.plotFillAlpha,\n      showValue: config.showValue,\n      // categoryLabel: categories[i].label,\n      toolText: !toolText ? '' : toolText,\n      id: BLANKSTRING,\n      datasetIndex: legendActive ? dataObj.datasetIndex : UNDEF,\n      datasetName: legendActive ? dataObj.datasetName : UNDEF,\n      visible: dataSet.getState('visible')\n    };\n\n    // Setting the attributes for plot drawing.\n    attr = {\n      x: xPos,\n      y: yPos,\n      width: columnWidth,\n      height: height || 1,\n      r: plotRadius,\n      fill: config.color,\n      stroke: toRaphaelColor(colorArr[1]),\n      'stroke-width': plotBorderThickness,\n      'stroke-dasharray': plotBorderDashStyle,\n      'fill-opacity': config.plotFillAlpha / 100,\n      'stroke-linejoin': miterStr,\n      'visibility': config.visible ? visibleStr : hiddenStr,\n      cursor: setLink ? POINTER : BLANKSTRING\n    };\n\n    // todo- remove _ to make it public\n    dataObj._xPos = xPos;\n    dataObj._yPos = yPos;\n    dataObj._height = height;\n    dataObj._width = columnWidth;\n    dataObj._index = i;\n    plotGrid[row.index][column.index] = dataObj;\n    /*\n    * If the data plots are not present then they are created, else only attributes are set for the\n    * existing plots.\n    */\n    if (!dataObj.graphics.element) {\n      attr['fill-opacity'] = config.plotFillAlpha / 100;\n      attr['stroke-width'] = plotBorderThickness;\n    } else {\n      attr = {\n        x: xPos,\n        y: yPos,\n        width: columnWidth,\n        height: height || 1\n      };\n      attr.fill = config.color;\n      attr.stroke = toRaphaelColor(colorArr[1]);\n      attr['fill-opacity'] = config.visible ? config.plotFillAlpha / 100 : 0;\n      attr['stroke-width'] = config.visible ? plotBorderThickness : 0;\n      attr['stroke-dasharray'] = plotBorderDashStyle;\n      attr['stroke-linejoin'] = miterStr;\n      attr.visibility = config.visible ? visibleStr : hiddenStr;\n      attr.cursor = setLink ? POINTER : BLANKSTRING;\n    }\n\n    if (setLink || chartConfig.showtooltip) {\n      // Fix for touch devices.\n      if (height < HTP) {\n        yPos -= (HTP - height) / 2;\n        height = HTP;\n      }\n\n      // Setting attributes for the tooltip.\n      trackerConfig.attr = {\n        x: xPos,\n        y: yPos,\n        width: columnWidth,\n        height: height,\n        r: plotRadius,\n        cursor: setLink ? POINTER : BLANKSTRING,\n        stroke: TRACKER_FILL,\n        'stroke-width': plotBorderThickness,\n        fill: TRACKER_FILL,\n        'visibility': config.visible ? visibleStr : hiddenStr\n      };\n    }\n\n    config.props = {\n      element: {\n        attr: attr\n      }\n    };\n  }\n\n  /**\n   * Parses and allocate plot cosmetics and position\n   *\n   * @memberof HeatMapDataset\n   */\n  allocatePosition () {\n    var dataSet = this,\n      setDataArr = dataSet.config.JSONData.data,\n      len,\n      i,\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj;\n\n    len = setDataArr && setDataArr.length; // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      dataSet.parsePlotAttributes(dataObj, i);\n      // dataSet.parseLabelAttributes(dataObj, i);\n    }\n  }\n  /**\n   * draws the plot according to the configuration\n   */\n  drawPlots () {\n    var dataSet = this,\n      conf = dataSet.config,\n      setDataArr = dataSet.config.JSONData.data,\n      len,\n      i,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      crispBox,\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      setElement,\n      setValue,\n      config,\n      state,\n      column,\n      row,\n      columnid,\n      rowid,\n      elemIdStore = [], // eslint-disable-line good-practices/no-single-usage-variable\n      elemId,\n      removeDataArrLen = (dataSet.components.removeDataArr || []).length, // eslint-disable-line good-practices/no-single-usage-variable\n      trackerConfig;\n\n    len = setDataArr && setDataArr.length; // eslint-disable-line good-practices/no-single-usage-variable\n\n    // Create plot elements.\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      trackerConfig = dataObj.trackerConfig;\n      config = dataObj && dataObj.config;\n      if (!dataObj.graphics) {\n        continue;\n      }\n      state = !dataObj.graphics.element ? 'appearing' : dataSet.getState('visible') ? 'updating' : 'hiding';\n      setValue = config.setValue;\n      columnid = getFirstValue(setDataArr[i].columnid);\n      rowid = getFirstValue(setDataArr[i].rowid);\n      column = dataSet.getFromEnv('xAxis').getCategoryFromId(columnid.toLowerCase());\n      row = dataSet.getFromEnv('yAxis').getCategoryFromId(rowid.toLowerCase());\n      if ((column.index !== 0 && !column.index) || (row.index !== 0 && !row.index)) {\n        dataObj.graphics.element = dataObj.graphics.element && animationManager.setAnimation({\n          el: dataObj.graphics.element,\n          component: dataSet\n        });\n        continue;\n      }\n\n      if ((!column.tickObj || !row.tickObj || (config.value === BLANKSTRING)) && dataObj.graphics) {\n        dataObj.graphics.element = dataObj.graphics.element && animationManager.setAnimation({\n          el: dataObj.graphics.element,\n          component: dataSet\n        });\n      }\n\n      if (!conf.mapByCategory && setValue === null && dataObj.graphics) {\n        dataObj.graphics.element && dataObj.graphics.element.hide();\n        dataObj.graphics.hotElement && dataObj.graphics.hotElement.hide();\n        continue;\n      }\n\n      elemId = column.index.toString() + row.index.toString();\n\n      elemIdStore.push(elemId);\n\n      /*\n      * If the data plots are not present then they are created, else only attributes are set for the\n      * existing plots.\n      */\n      if (!dataObj.graphics.element) {\n        setElement = dataObj.graphics.element = animationManager.setAnimation({\n          el: 'rect',\n          component: dataSet,\n          attr: config.props.element.attr,\n          label: 'rect',\n          container: dataSet.getContainer('plotGroup')\n        });\n\n        config.elemCreated = true;\n      } else {\n        setElement = dataObj.graphics.element;\n        config.elemCreated = false;\n\n        animationManager.setAnimation({\n          el: setElement,\n          state: state,\n          attr: config.props.element.attr,\n          component: dataSet\n        });\n      }\n\n      // The shadow element is set for the dataplots.\n      setElement\n        .shadow({ opacity: conf.showShadow }, dataSet.getContainer('shadowGroup'))\n        .data('BBox', crispBox);\n\n      dataSet.getFromEnv('chartConfig').enablemousetracking && setElement\n        .data(EVENTARGS, trackerConfig.eventArgs)\n        .data(showHoverEffectStr, conf.showHoverEffect)\n        .data(SETROLLOVERATTR, config.setRolloverAttr || {})\n        .data(SETROLLOUTATTR, config.setRolloutAttr || {});\n    }\n\n    dataSet.drawn ? dataSet.drawLabel() : (dataSet.addJob('labelJob', dataSet.drawLabel.bind(dataSet),\n      priorityList.label));\n    dataSet.drawn = true;\n\n    removeDataArrLen && dataSet.removeDataElems();\n  }\n  /**\n   * Draws the data labels if any\n   */\n  drawLabel () {\n    var dataSet = this,\n      chartConf = dataSet.getFromEnv('chartConfig'),\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      style = chartConf.dataLabelStyle,\n      conf = dataSet.config,\n      len = (dataSet.config.JSONData.data || []).length, // eslint-disable-line good-practices/no-single-usage-variable\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      i,\n      displayValue,\n      graphic,\n      textY,\n      textX,\n      yPos,\n      xPos,\n      attr,\n      dataLabelContainer = dataSet.getContainer('labelGroup'),\n\n      tlLabelContainer = dataSet.graphics.tlLabelContainer,\n      blLabelContainer = dataSet.graphics.blLabelContainer,\n      trLabelContainer = dataSet.graphics.trLabelContainer,\n      brLabelContainer = dataSet.graphics.brLabelContainer,\n      plotLabelStyle,\n      tlStyle,\n      trStyle,\n      blStyle,\n      brStyle,\n      graphicEle,\n      pointW,\n      pointH,\n      pointX,\n      pointY,\n      smartTextObj,\n      tlLabel,\n      trLabel,\n      blLabel,\n      brLabel,\n      isTLLabel,\n      isTRLabel,\n      isBLLabel,\n      isBRLabel,\n      maxWidth,\n      maxHeight,\n      config,\n      setValue,\n      tlLabelCss,\n      trLabelCss,\n      blLabelCss,\n      brLabelCss;\n\n    animationManager.setAnimation({\n      el: dataLabelContainer,\n      attr: {\n        opacity: 1\n      },\n      component: dataSet,\n      label: 'text'\n    });\n\n    if (!tlLabelContainer) {\n      tlLabelContainer = dataSet.graphics.tlLabelContainer =\n                    createGroup({ name: tlLabelStr }, dataLabelContainer, dataSet);\n    }\n\n    if (!blLabelContainer) {\n      blLabelContainer = dataSet.graphics.blLabelContainer =\n                    createGroup({ name: blLabelStr }, dataLabelContainer, dataSet);\n    }\n\n    if (!trLabelContainer) {\n      trLabelContainer = dataSet.graphics.trLabelContainer =\n                    createGroup({ name: trLabelStr }, dataLabelContainer, dataSet);\n    }\n\n    if (!brLabelContainer) {\n      brLabelContainer = dataSet.graphics.brLabelContainer =\n                    createGroup({ name: brLabelStr }, dataLabelContainer, dataSet);\n    }\n\n    smartLabel.useEllipsesOnOverflow(chartConf.useEllipsesWhenOverflow);\n    smartLabel.setStyle(style);\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      // Condition arises when user has removed data in real time update\n      if (dataObj === UNDEF) {\n        continue;\n      }\n      graphic = dataObj.graphics;\n      // Condition arises when feedData enters less number of data in a dataset compared to the other.\n      if (!graphic) {\n        continue;\n      }\n\n      config = dataObj && dataObj.config;\n      setValue = config.setValue;\n\n      if (!conf.mapByCategory && setValue === null) {\n        dataSet.removeLabels(dataObj);\n        continue;\n      }\n\n      displayValue = config.displayValue;\n\n      graphicEle = dataObj.graphics.element;\n\n      pointW = dataObj._width;\n      pointH = dataObj._height;\n      pointX = dataObj._xPos;\n      pointY = dataObj._yPos;\n\n      // Setting style for smartLabel\n      smartLabel.setStyle(style);\n      // Get the displayValue text from smartlabel\n      smartTextObj = smartLabel.getSmartText(displayValue,\n        pointW, pointH, false);\n      displayValue = smartTextObj.text;\n\n      plotLabelStyle = config.dataLabelStyle;\n\n      // Drawing of displayValue\n      if (defined(displayValue) && displayValue !== BLANK && config.showValue) {\n        textY = pointY + (pointH * 0.5);\n        textX = pointX + (pointW * 0.5);\n\n        attr = {\n          text: displayValue,\n          title: (smartTextObj.tooltext || BLANKSTRING),\n          visibility: config.visible ? visibleStr : hiddenStr,\n          fill: plotLabelStyle.color,\n          direction: config.textDirection,\n          x: textX,\n          y: textY,\n          cursor: config.setLink ? POINTER : BLANKSTRING,\n          'text-bound': [plotLabelStyle.backgroundColor, plotLabelStyle.borderColor,\n            style.borderThickness, style.borderPadding,\n            style.borderRadius, style.borderDash\n          ]\n        };\n\n        if (graphicEle) {\n          dataObj.graphics.valEle = animationManager.setAnimation({\n            el: dataObj.graphics.valEle || 'text',\n            container: dataLabelContainer,\n            component: dataSet,\n            label: 'text',\n            attr: attr\n          });\n          dataObj.graphics.valEle.outlineText(conf.showTextOutLine, attr.fill);\n        } else {\n          if (dataObj.graphics.valEle) {\n            dataObj.graphics.valEle = animationManager.setAnimation({\n              el: dataObj.graphics.valEle,\n              component: dataSet\n            });\n          }\n        }\n\n        tlLabel = config.tlLabel;\n        trLabel = config.trLabel;\n        blLabel = config.blLabel;\n        brLabel = config.brLabel;\n\n        tlStyle = config.tlLabelStyle;\n        trStyle = config.trLabelStyle;\n        blStyle = config.blLabelStyle;\n        brStyle = config.brLabelStyle;\n\n        isTLLabel = (defined(tlLabel) &&\n                        tlLabel !== BLANK);\n        isTRLabel = (defined(trLabel) &&\n                        trLabel !== BLANK);\n        isBLLabel = (defined(blLabel) &&\n                        blLabel !== BLANK);\n        isBRLabel = (defined(brLabel) &&\n                        brLabel !== BLANK);\n\n        maxWidth = pointW * (isTLLabel && isTRLabel\n          ? POINT_FIVE : MAX_PERCENT_SPACE);\n        maxHeight = (pointH - ((smartTextObj && smartTextObj.height) || 0)) * 0.5;\n        // For top labels\n        yPos = pointY + GUTTER_4;\n\n        if (isTLLabel) {\n          // Setting style for smartLabel\n          smartLabel.setStyle(tlStyle);\n          smartTextObj = smartLabel.getSmartText(tlLabel,\n            maxWidth, maxHeight, false);\n          displayValue = smartTextObj.text;\n          // Get the x and y position of the dataValue\n          xPos = pointX;\n          attr = {\n            text: displayValue,\n            title: (smartTextObj.tooltext || BLANKSTRING),\n            visibility: config.visible ? visibleStr : hiddenStr,\n            fill: tlStyle.color,\n            'font-family': tlStyle.fontFamily,\n            'font-weight': tlStyle.fontWeight,\n            'line-height': tlStyle.lineHeight,\n            'font-size': tlStyle.fontSize,\n            'text-anchor': POSITION_START,\n            'vertical-align': POSITION_TOP,\n            direction: config.textDirection,\n            x: xPos + GUTTER_4,\n            y: yPos,\n            'text-bound': [tlStyle.backgroundColor, tlStyle.borderColor,\n              tlStyle.borderThickness, tlStyle.borderPadding,\n              tlStyle.borderRadius, tlStyle.borderDash]\n          };\n          tlLabelCss = Object.assign(attr, tlStyle);\n          dataObj.graphics.tlLabel = animationManager.setAnimation({\n            el: dataObj.graphics.tlLabel || 'text',\n            component: dataSet,\n            attr: tlLabelCss,\n            container: tlLabelContainer\n          });\n          dataObj.graphics.tlLabel.outlineText(conf.showTextOutLine, tlLabelCss.fill);\n        } else {\n          if (dataObj.graphics.tlLabel) {\n            dataObj.graphics.tlLabel = animationManager.setAnimation({\n              el: dataObj.graphics.tlLabel,\n              component: dataSet\n            });\n          }\n        }\n\n        if (isTRLabel) {\n          // Setting style for smartRabel\n          smartLabel.setStyle(trStyle);\n          smartTextObj = smartLabel.getSmartText(trLabel,\n            maxWidth, maxHeight, false);\n          displayValue = smartTextObj.text;\n          // Get the x and y position of the dataValue\n          xPos = pointX + pointW;\n          attr = {\n            text: displayValue,\n            title: (smartTextObj.tooltext || BLANKSTRING),\n            visibility: config.visible ? visibleStr : hiddenStr,\n            fill: trStyle.color,\n            'font-family': trStyle.fontFamily,\n            'font-weight': trStyle.fontWeight,\n            'line-height': trStyle.lineHeight,\n            'font-size': trStyle.fontSize,\n            'text-anchor': POSITION_END,\n            'vertical-align': POSITION_TOP,\n            direction: config.textDirection,\n            x: xPos - GUTTER_4,\n            y: yPos,\n            'text-bound': [trStyle.backgroundColor, trStyle.borderColor,\n              trStyle.borderThickness, trStyle.borderPadding,\n              trStyle.borderRadius, trStyle.borderDash]\n          };\n          trLabelCss = Object.assign(attr, trStyle);\n          dataObj.graphics.trLabel = animationManager.setAnimation({\n            el: dataObj.graphics.trLabel || 'text',\n            attr: trLabelCss,\n            container: trLabelContainer,\n            component: dataSet\n          });\n          dataObj.graphics.trLabel.outlineText(conf.showTextOutLine, trLabelCss.fill);\n        } else {\n          if (dataObj.graphics.trLabel) {\n            dataObj.graphics.trLabel = animationManager.setAnimation({\n              el: dataObj.graphics.trLabel,\n              component: dataSet\n            });\n          }\n        }\n\n        // For top labels\n        yPos = (pointY + pointH) - GUTTER_4;\n\n        if (isBLLabel) {\n          // Setting style for smartLabel\n          smartLabel.setStyle(blStyle);\n          smartTextObj = smartLabel.getSmartText(blLabel,\n            maxWidth, maxHeight, false);\n          displayValue = smartTextObj.text;\n          // Get the x and y position of the dataValue\n          xPos = pointX;\n          attr = {\n            text: displayValue,\n            title: (smartTextObj.tooltext || BLANKSTRING),\n            visibility: config.visible ? visibleStr : hiddenStr,\n            fill: blStyle.color,\n            'font-family': blStyle.fontFamily,\n            'font-weight': blStyle.fontWeight,\n            'line-height': blStyle.lineHeight,\n            'font-size': blStyle.fontSize,\n            'text-anchor': POSITION_START,\n            'vertical-align': POSITION_BOTTOM,\n            direction: config.textDirection,\n            x: xPos + GUTTER_4,\n            y: yPos,\n            'text-bound': [blStyle.backgroundColor, blStyle.borderColor,\n              blStyle.borderThickness, blStyle.borderPadding,\n              blStyle.borderRadius, blStyle.borderDash]\n          };\n          blLabelCss = Object.assign(attr, blStyle);\n          dataObj.graphics.blLabel = animationManager.setAnimation({\n            el: dataObj.graphics.blLabel || 'text',\n            component: dataSet,\n            container: blLabelContainer,\n            attr: blLabelCss\n          });\n          dataObj.graphics.blLabel.outlineText(conf.showTextOutLine, blLabelCss.fill);\n        } else {\n          if (dataObj.graphics.blLabel) {\n            dataObj.graphics.blLabel = animationManager.setAnimation({\n              el: dataObj.graphics.blLabel,\n              component: dataSet\n            });\n          }\n        }\n\n        if (isBRLabel) {\n          // Setting style for smartRabel\n          smartLabel.setStyle(blStyle);\n          smartTextObj = smartLabel.getSmartText(brLabel,\n            maxWidth, maxHeight, false);\n          displayValue = smartTextObj.text;\n          // Get the x and y position of the dataValue\n          xPos = pointX + pointW - GUTTER_4;\n          attr = {\n            text: displayValue,\n            title: (smartTextObj.tooltext || BLANKSTRING),\n            visibility: config.visible ? visibleStr : hiddenStr,\n            fill: brStyle.color,\n            'font-family': brStyle.fontFamily,\n            'font-weight': brStyle.fontWeight,\n            'line-height': brStyle.lineHeight,\n            'font-size': brStyle.fontSize,\n            'text-anchor': POSITION_END,\n            'vertical-align': POSITION_BOTTOM,\n            direction: config.textDirection,\n            x: xPos,\n            y: yPos,\n            'text-bound': [brStyle.backgroundColor, brStyle.borderColor,\n              brStyle.borderThickness, brStyle.borderPadding,\n              brStyle.borderRadius, brStyle.borderDash]\n          };\n          brLabelCss = Object.assign(attr, brStyle);\n          dataObj.graphics.brLabel = animationManager.setAnimation({\n            el: dataObj.graphics.brLabel || 'text',\n            attr: brLabelCss,\n            container: brLabelContainer,\n            component: dataSet\n          });\n          dataObj.graphics.brLabel.outlineText(conf.showTextOutLine, brLabelCss.fill);\n        } else {\n          if (dataObj.graphics.brLabel) {\n            dataObj.graphics.brLabel = animationManager.setAnimation({\n              el: dataObj.graphics.brLabel,\n              component: dataSet\n            });\n          }\n        }\n      } else {\n        dataSet.removeLabels(dataObj);\n      }\n    }\n\n    dataSet.labelDrawn = true;\n  }\n\n  removeLabels (dataObj) {\n    let dataSet = this,\n      animationManager = dataSet.getFromEnv('animationManager');\n\n    if (dataObj.graphics.valEle) {\n      dataObj.graphics.valEle = animationManager.setAnimation({\n        el: dataObj.graphics.valEle,\n        component: dataSet\n      });\n    }\n\n    if (dataObj.graphics.tlLabel) {\n      dataObj.graphics.tlLabel = animationManager.setAnimation({\n        el: dataObj.graphics.tlLabel,\n        component: dataSet\n      });\n    }\n\n    if (dataObj.graphics.trLabel) {\n      dataObj.graphics.trLabel = animationManager.setAnimation({\n        el: dataObj.graphics.trLabel,\n        component: dataSet\n      });\n    }\n\n    if (dataObj.graphics.blLabel) {\n      dataObj.graphics.blLabel = animationManager.setAnimation({\n        el: dataObj.graphics.blLabel,\n        component: dataSet\n      });\n    }\n\n    if (dataObj.graphics.brLabel) {\n      dataObj.graphics.brLabel = animationManager.setAnimation({\n        el: dataObj.graphics.brLabel,\n        component: dataSet\n      });\n    }\n  }\n  /**\n   * Function to remove data elements\n   */\n  removeDataElems () {\n    var dataSet = this,\n      components = dataSet.components,\n      removeDataArr = components.removeDataArr,\n      pool = components.pool || (components.pool = {\n        element: [],\n        hotElement: [],\n        label: []\n      }),\n      len = removeDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removeData,\n      ele,\n      graphics,\n      i;\n\n    for (i = 0; i < len; i++) {\n      removeData = removeDataArr[0];\n      removeDataArr.splice(0, 1);\n      // In case of non existing data plot continue;\n      if (!removeData || !removeData.graphics) {\n        continue;\n      }\n\n      graphics = removeData.graphics;\n      for (ele in graphics) {\n        // Stopping any previous animation.\n        if (graphics[ele]) {\n          graphics[ele] = dataSet.getFromEnv('animationManager').setAnimation({\n            el: graphics[ele],\n            component: dataSet\n          });\n        }\n      }\n\n      // Storing the graphic elements for reuse.\n      removeData.graphics.element && (pool.element = pool.element.concat(removeData.graphics.element));\n      removeData.graphics.hotElement && (pool.hotElement = pool.hotElement.concat(removeData.graphics\n        .hotElement));\n      removeData.graphics.label && (pool.label = pool.label.concat(removeData.graphics.label));\n    }\n    components.pool = pool;\n  }\n  /**\n   * @returns {number} axis value padding\n   */\n  getAxisValuePadding () {\n    return this.config.defaultPadding;\n  }\n\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var dataSet = this,\n      dataStore = dataSet.components.data,\n      conf = dataSet.config,\n      i,\n      config,\n      len = dataStore.length, // eslint-disable-line good-practices/no-single-usage-variable\n      setValue,\n      maxValue = -Infinity,\n      minValue = +Infinity;\n\n    for (i = 0; i < len; i++) {\n      if (!dataStore[i] || !Object.keys(dataStore[i]).length) {\n        continue;\n      }\n      config = dataStore[i].config;\n      setValue = config.setValue;\n      if (setValue !== UNDEF && setValue !== null) {\n        maxValue = mathMax(maxValue, setValue);\n        minValue = mathMin(minValue, setValue);\n      }\n    }\n\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n    return {\n      max: conf.maxValue,\n      min: conf.minValue\n    };\n  }\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.config.JSONData) {\n      return;\n    }\n    let dataSet = this,\n      config = dataSet.config,\n      context = config && config.context,\n      prevCatlen = context && context.prevCatlen, // eslint-disable-line good-practices/no-single-usage-variable\n      currCatLen = dataSet.getFromEnv('xAxis').getTicksLen(),\n      catDiff = prevCatlen - currCatLen,\n      prevData = config.JSONData,\n      prevDataLength = prevData.data && prevData.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      currDataLength = (datasetJSON.data && datasetJSON.data.length) || 0,\n      dataDiff = prevDataLength - currDataLength,\n      diff,\n      startIndex;\n\n    if (catDiff > dataDiff) {\n      diff = catDiff;\n      startIndex = currCatLen;\n    } else {\n      diff = dataDiff;\n      startIndex = currDataLength;\n    }\n\n    // Removing data plots if the number of current data plots/categories\n    // is more than the existing ones.\n    if (diff > 0) {\n      this.removeData(startIndex, diff, false);\n    }\n  }\n  /**\n   * Function for drawing 2D columns.\n   * This function is called every time for each dataset when they are initially drawn or shown/hidden from\n   * the drawGraph() function.\n   */\n  draw () {\n    var dataSet = this,\n      xAxis = dataSet.getFromEnv('xAxis'),\n      groupMaxWidth = dataSet.getFromEnv('groupMaxWidth');\n\n    if (!groupMaxWidth) {\n      groupMaxWidth = mathAbs(xAxis.getPixel(1) - xAxis.getPixel(0));\n      dataSet.addToEnv('groupMaxWidth', groupMaxWidth);\n    }\n\n    !dataSet.config.drawn && dataSet.createContainer();\n\n    if (!xAxis.getState('scrolling')) {\n      dataSet.createCoordinates();\n    }\n\n    // Draw all the graphic elements\n    dataSet.drawPlots();\n    // dataSet.updatePlot(conf.minValue, conf.maxValue);\n  }\n  createContainer () {\n    var dataset = this,\n      parent = dataset.getLinkedParent(),\n      group = (dataset.groupName || dataset.dsGroup || dataset.getType()),\n      parentContainer,\n      parentShadowContainer;\n\n    !parent.getChildContainer(group + 'VcanvasGroup') && (group = 'default');\n    parentContainer = parent.getChildContainer(group + 'VcanvasGroup');\n    parentShadowContainer = parent.getChildContainer(group + 'ShadowVcanvasGroup');\n\n    !dataset.getContainer('shadowGroup') && dataset.addContainer('shadowGroup',\n      createGroup({ name: 'shadow-group' }, parentShadowContainer, dataset));\n\n    !dataset.getContainer('errorShadowGroup') && dataset.addContainer('errorShadowGroup',\n      createGroup({ name: 'error-shadow-group' }, parentShadowContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('commonElemsGroup',\n      createGroup({ name: 'common-elems-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('plotGroup') && dataset.addContainer('plotGroup',\n      createGroup({ name: 'plot-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('errorPlotGroup') && dataset.addContainer('errorPlotGroup',\n      createGroup({ name: 'error-plot-group' }, parentContainer, dataset));\n    (dataset.getFromEnv('chart').hasAnchor) && dataset.getContainer('errorPlotGroup').insertBefore(dataset.getContainer('plotGroup'));\n    !dataset.getContainer('labelGroup') && dataset.addContainer('labelGroup',\n      createGroup({\n        name: 'label-group',\n        'class': 'fusioncharts-datalabels'\n      }, parent.getChildContainer('vcanvasLabelGroup'), dataset));\n  }\n  /**\n   * Create pixel coordinates for the plots\n   */\n  createCoordinates () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      isBar = chart.isBar,\n      yAxis = dataSet.getFromEnv('yAxis'),\n      xAxis = dataSet.getFromEnv('xAxis'),\n      yBasePos = yAxis.getPixel(yAxis.getAxisBase()), // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      config,\n      previousY,\n      i,\n      Px,\n      Py,\n      Pb,\n      xDepth = chart.config.xDepth || 0,\n      yDepth = chart.config.yDepth || 0,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      groupManager = dataSet.getLinkedParent(),\n      stackConf = groupManager.getstackConf && groupManager.getstackConf(),\n      dataStore = dataSet.components.data; // eslint-disable-line good-practices/no-single-usage-variable\n\n    !isBar && (xDepth = -xDepth);\n    isBar && (yDepth = -yDepth);\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (dataObj === UNDEF) {\n        continue;\n      }\n      previousY = config._b;\n      Px = xAxis.getPixel((stackConf && stackConf[i].x) || config._x) + xDepth;\n      Py = yAxis.getPixel(config._y) + yDepth;\n      Pb = (previousY ? yAxis.getPixel(previousY) : yBasePos) + yDepth;\n\n      if (xAxis.config.isVertical) {\n        config._Px = Py;\n        config._Py = Px;\n        config._Pby = Px;\n        config._Pbx = Pb;\n      } else {\n        config._Px = Px;\n        config._Py = Py;\n        config._Pby = Pb;\n        config._Pbx = Px;\n      }\n      if (dataSet.getLineShift) {\n        config._Py += dataSet.getLineShift('y');\n      }\n    }\n  }\n  /**\n   * Helper function of _firePlotEvent which decides single/consolidated tooltip\n   * @param {number} plotIndex      plot index\n   * @param {Object} e              reference of the original mouse event\n   * @param {Object} datasets            column datasets\n   */\n  _decideTooltipType (plotIndex, e) {\n    var dataset = this,\n      drawTrendRegion = dataset.getFromEnv('chartConfig').drawTrendRegion,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      data = dataset.components.data[plotIndex],\n      toolText = data && (data.config.finalTooltext || data.config.toolText),\n      element = data && (data.graphics.element || dataset.graphics.sharedAnchor.element), // eslint-disable-line good-practices/no-single-usage-variable\n      currentToolTip = dataset.config.currentToolTip,\n      originalEvent = e.originalEvent;\n\n    if (drawTrendRegion && element) {\n      dataset.config.currentToolTip =\n      dataset.getLinkedParent()._drawTooltip(plotIndex, dataset.config.index, originalEvent, currentToolTip);\n    } else if (toolText && !drawTrendRegion) {\n      if (currentToolTip) {\n        toolTipController.draw(originalEvent, toolText, currentToolTip);\n      } else {\n        currentToolTip = dataset.config.currentToolTip =\n          toolTipController.draw(originalEvent, toolText);\n      }\n    }\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType    name of the event\n   * @param {number} plotIndex    index of the plot where this event has been occured\n   * @param {Event}  e            reference of the original mouse event\n   * @param {Event}  datasets     column dataset\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      data = dataset.components.data[plotIndex],\n      setElement = data.graphics.element,\n      labelElement = data.graphics.label,\n      // originalEvent = e.originalEvent,\n      config,\n      setLink;\n\n    if (setElement) {\n      config = data.config;\n      setLink = config.setLink;\n      switch (eventType) {\n        case 'fc-mouseover' :\n          dataset._decideTooltipType(plotIndex, e);\n          _rolloverResponseSetter(chart, data, e, UNDEF, dataset);\n          if (setLink) {\n            setElement.css({ 'cursor': POINTER });\n            // labelElement is undefined in dataset graphics so checking for labelElement added\n            labelElement && (labelElement.css({ 'cursor': POINTER }));\n          }\n          break;\n        case 'fc-mouseout' :\n          dataset.getFromEnv('toolTipController').hide(dataset.config.currentToolTip);\n          _rolloutResponseSetter(chart, data, e, UNDEF, dataset);\n          if (setLink) {\n            setElement.css({ 'cursor': DEFAULT_CURSOR });\n            // labelElement is undefined in dataset graphics so checking for labelElement added\n            labelElement && (labelElement.css({ 'cursor': DEFAULT_CURSOR }));\n          }\n          break;\n        case 'fc-click' :\n          chart.plotEventHandler(setElement, e);\n          break;\n        case 'fc-mousemove' :\n          dataset._decideTooltipType(plotIndex, e);\n      }\n    }\n  }\n  /**\n   * Function to remove a data with a given index.\n   * @param {number}  indexVal     from which index data would be removed\n   * @param {number}  stretchVal   delete count\n   * @param {boolean} draw      whether draw or not\n   */\n  removeData (indexVal, stretchVal, draw) {\n    var dataSet = this,\n      index = indexVal,\n      stretch = stretchVal,\n      components = dataSet.components,\n      dataStore = components.data,\n      removeDataArr = components.removeDataArr || (components.removeDataArr = []),\n      conf = dataSet.config,\n      i,\n      config,\n      len,\n      maxminFlag = dataSet.maxminFlag;\n\n    stretch === UNDEF && (stretch = 1);\n    index = index || 0;\n\n    // Storing the direction of input data for the type of animation to be done during remove.\n    if ((index + stretch) === dataStore.length || !dataSet.getFromEnv('chart').isRealTime) {\n      dataSet.endPosition = true;\n    } else if (index === 0 || index === UNDEF) {\n      dataSet.endPosition = false;\n    }\n    components.removeDataArr = removeDataArr = removeDataArr.concat(dataStore.splice(index, stretch));\n    len = removeDataArr.length;\n\n    for (i = len - 1; i >= 0; i--) {\n      if (!removeDataArr[i]) {\n        removeDataArr.splice(i, 1);\n        continue;\n      }\n      config = removeDataArr[i].config;\n      if (config.setValue === conf.maxValue || config.setValue === conf.minValue) {\n        maxminFlag = dataSet.maxminFlag = true;\n      }\n      // Update the x position for this removed elements outside of the canvas\n      config._x -= stretch;\n      if (maxminFlag) {\n        break;\n      }\n    }\n    dataSet.removeDataLen = len;\n    dataSet.resetCatPos && dataSet.resetCatPos();\n    maxminFlag && dataSet.getDataLimits && dataSet.getDataLimits();\n    draw && dataSet.asyncDraw();\n  }\n}\n\nHeatMapDataset.prototype._configureDataLabelStyle = configureDataLabelStyle;\n\nexport default HeatMapDataset;\n","export default {\n  'initial.dataset.heatMap': function () {\n    return {\n      'rect.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'plot'\n        }];\n      },\n      'text.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\n\nclass HeatMapGroup extends ComponentInterface {\n  /**\n   * constructor function this class\n   */\n  constructor () {\n    super();\n    this.setState('visible', true);\n    this.getDataLimits = null;\n  }\n\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'group';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'heatMapGroup';\n  }\n\n  /**\n   * Create child containers\n   */\n  createContainer () {\n    let manager = this,\n      key,\n      parent = manager.getLinkedParent(),\n      animationManager = manager.getFromEnv('animationManager'),\n      pContainer,\n      parentChildContainers = parent.getChildContainer();\n\n    for (key in parentChildContainers) {\n      pContainer = parentChildContainers[key];\n\n      !manager.getChildContainer(key) && manager.addChildContainer(key,\n        animationManager.setAnimation({\n          el: 'group',\n          attr: { name: 'manager-' + key },\n          container: pContainer,\n          component: manager,\n          label: 'group'\n        }));\n    }\n  }\n\n  getLimits (allVisible) {\n    let manager = this,\n      min = +Infinity,\n      max = -Infinity,\n      maxminObj,\n      numOfColumns = 0,\n      getMaxMin = function (_maxminObj) {\n        max = Math.max(max, _maxminObj.max);\n        min = Math.min(min, _maxminObj.min);\n      };\n\n    manager._mapChildren((child) => {\n      if (child.getState('removed') || (child.getState('visible') === false)) {\n        if (allVisible) {\n          maxminObj = child.getDataLimits(allVisible);\n          getMaxMin(maxminObj);\n        }\n        return;\n      }\n      numOfColumns++;\n      maxminObj = child.getDataLimits(allVisible);\n      getMaxMin(maxminObj);\n    });\n    if (!numOfColumns) {\n      manager.setState('visible', false);\n    } else {\n      manager.setState('visible', true);\n    }\n    if (!this.config.range) {\n      this.config.range = {};\n      this.config.range.min = this.config.dataMin;\n      this.config.range.max = this.config.dataMax;\n    }\n    return { max, min };\n  }\n  /**\n   * function call sync draw of its children\n   */\n  draw () {\n    var manager = this,\n      range = manager.getLimits(true);\n    manager.addToEnv('datasetMinValue', range.min);\n    manager.addToEnv('datasetMaxValue', range.max);\n    this.createContainer();\n  }\n\n  getAxisValuePadding () {\n    let paddingObj = {},\n      axisPaddingLeft = -Infinity,\n      axisPaddingRight = -Infinity,\n      axisPaddingTop = -Infinity,\n      axisPaddingBottom = -Infinity;\n    this._mapChildren((child) => {\n      if (child.getState('removed')) {\n        return;\n      }\n      paddingObj = (child.getAxisValuePadding && child.getAxisValuePadding()) || {};\n      axisPaddingLeft = Math.max(axisPaddingLeft, paddingObj.left || -Infinity);\n      axisPaddingRight = Math.max(axisPaddingRight, paddingObj.right || -Infinity);\n      axisPaddingTop = Math.max(axisPaddingTop, paddingObj.top || -Infinity);\n      axisPaddingBottom = Math.max(axisPaddingBottom, paddingObj.bottom || -Infinity);\n    });\n    if (axisPaddingLeft === -Infinity) {\n      axisPaddingLeft = 0;\n    }\n    if (axisPaddingRight === -Infinity) {\n      axisPaddingRight = 0;\n    }\n    if (axisPaddingTop === -Infinity) {\n      axisPaddingTop = 0;\n    }\n    if (axisPaddingBottom === -Infinity) {\n      axisPaddingBottom = 0;\n    }\n    if (!this.config.padding) {\n      this.config.padding = {};\n      this.config.padding.left = axisPaddingLeft;\n      this.config.padding.right = axisPaddingRight;\n      this.config.padding.top = axisPaddingTop;\n      this.config.padding.bottom = axisPaddingBottom;\n    }\n    return {\n      left: axisPaddingLeft,\n      right: axisPaddingRight,\n      top: axisPaddingTop,\n      bottom: axisPaddingBottom\n    };\n  }\n}\nexport default HeatMapGroup;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport CategoryAxis from '@fusioncharts/core/src/axis/category';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n    zoomObj = {\n      zoomable: true,\n      pannable: true\n    },\n    config = chart._feedAxesRawData(),\n    yAxis,\n    xAxis,\n    redraw = () => axisRefVisualCartesian.asyncDraw();\n\n  componentFactory(chart, CategoryAxis, 'yAxis', 1, config.yAxisConf);\n  componentFactory(chart, CategoryAxis, 'xAxis', 1, config.xAxisConf);\n\n  yAxis = chart.getChildren('yAxis')[0];\n  xAxis = chart.getChildren('xAxis')[0];\n  yAxis.setLinkedItem('canvas', canvas);\n  xAxis.setLinkedItem('canvas', canvas);\n  axisRefVisualCartesian.setLinkedItem(yAxis.getId(), yAxis);\n  axisRefVisualCartesian.setLinkedItem(xAxis.getId(), xAxis);\n\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, xAxis);\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, yAxis);\n\n  canvas.attachAxis(xAxis, false, chart.zoomX ? zoomObj : {});\n  canvas.attachAxis(yAxis, true, chart.zoomY ? zoomObj : {});\n\n  chart._setCategories();\n}\n","import Radar from '@fusioncharts/powercharts/src/chart/radar';\nexport default Radar;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Area from '@fusioncharts/charts/src/chart/msarea';\nimport RadarDataset from '../../dataset/radar';\nimport axisFactory from '../../factories/radar-axis';\nimport canvasFactory from '../../factories/polar-canvas';\nimport { pluckNumber, pluck, chartPaletteStr, preDefStr, UNDEF, POSITION_TOP, pluckFontSizeMaintainUnit } from '@fusioncharts/core/src/lib';\n\nconst POLAR = 'polar';\n/**\n * Creates radar class\n * @class\n */\nclass Radar extends Area {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.registerFactory('canvas', canvasFactory);\n    this.registerFactory('axis', axisFactory, ['canvas']);\n  }\n  configureAttributes (obj) {\n    // overriding the user given drawfullareaborder value since\n    // it is not valid for radar\n    this.config.drawfullareaborder = 1;\n    this.config.radarRadius = pluckNumber(obj.chart.radarradius);\n\n    super.configureAttributes(obj);\n    this.config.alignLegendWithCanvas = 0;\n    // as  no canvas is there as per behaviour of Radar chart\n  }\n  /**\n   * Sets the default configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.axisType = POLAR;\n    config.axisValuePadding = 10;\n    config.gridLineWidth = 1;\n    config.showRadarBorder = 1;\n    config.showvalues = 0;\n    config.radarBorderThickness = 2;\n    config.skipCanvasDrawing = true;\n    config.useplotgradientcolor = 0;\n    config.plotfillalpha = 50;\n  }\n  /**\n   * Sets dimension of Axis components\n   */\n  setAxisDimention () {\n    this.getChildren('yAxis');\n  }\n  /**\n   * function to parse JSON data for configurations of axis\n   * @return {Object} configurations of axes\n   */\n  _feedAxesRawData () {\n    var iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      xAxisConf,\n      yAxisConf;\n\n    xAxisConf = iapi.getSpecificxAxisConf();\n    yAxisConf = iapi.getSpecificyAxisConf();\n\n    xAxisConf.vtrendlines = dataObj.vtrendlines;\n    yAxisConf.trendlines = dataObj.trendlines;\n    return {\n      xAxisConf: [xAxisConf],\n      yAxisConf: [yAxisConf]\n    };\n  }\n\n  /**\n   * Returns x-axis configuration for chart.\n   * @return {Object} configurations of x-axis.\n   */\n  getSpecificxAxisConf () {\n    var iapi = this,\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      xAxisConf = this.getBasexAxisConf();\n\n    xAxisConf.isReverse = iapi.config.reverseXAxis;\n    xAxisConf.axisLineColor = pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, '#000000');\n    xAxisConf.showAlternateGridColor = pluckNumber(chartAttrs.showalternatevgridcolor, 1);\n    xAxisConf.numDivLines = chartAttrs.numvdivlines;\n    xAxisConf.axisName = chartAttrs.xaxisname;\n    xAxisConf.setAdaptiveMin = chartAttrs.setadaptivexmin;\n    xAxisConf.showLimits = chartAttrs.showvlimits;\n    xAxisConf.showDivLineValues = pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues);\n    xAxisConf.zeroPlaneThickness = chartAttrs.vzeroplanethickness;\n    xAxisConf.zeroPlaneAlpha = chartAttrs.vzeroplanealpha;\n    xAxisConf.showZeroPlaneValue = chartAttrs.showvzeroplanevalue;\n    xAxisConf.showAxisLine = pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines, chartAttrs.drawAxisLines, 0);\n    xAxisConf.showRadarBorder = chartAttrs.showradarborder;\n    xAxisConf.radarBorderColor = chartAttrs.radarbordercolor;\n    xAxisConf.radarBorderThickness = chartAttrs.radarborderthickness;\n    xAxisConf.radarBorderAlpha = chartAttrs.radarborderalpha;\n    xAxisConf.radarFillColor = chartAttrs.radarfillcolor;\n    xAxisConf.radarFillAlpha = chartAttrs.radarfillalpha;\n    xAxisConf.radarSpikeColor = chartAttrs.radarspikecolor;\n    xAxisConf.radarSpikeThickness = chartAttrs.radarspikethickness;\n    xAxisConf.radarSpikeAlpha = chartAttrs.radarspikealpha;\n    xAxisConf.radarInLineAlpha = chartAttrs.radarinlinealpha;\n    xAxisConf.showTooltip = pluckNumber(chartAttrs.showtooltip, 1);\n\n    return xAxisConf;\n  }\n\n  /**\n   * Returns y-axis configuration for chart.\n   * @return {Object} configurations of y-axis.\n   */\n  getSpecificyAxisConf () {\n    var iapi = this,\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      chartConfig = iapi.config,\n      palleteString = chartConfig.is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      colorM = iapi.getFromEnv('color-manager'),\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    return {\n      isVertical: true,\n      isReverse: !chartConfig.isInverse,\n      isOpposit: false,\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, 'Verdana,sans'),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.yaxisnamepadding,\n      axisValuePadding: chartAttrs.yaxisvaluespadding,\n      axisNameFont: chartAttrs.yaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.yaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.yaxisnamefontsize,\n      axisNameFontColor: chartAttrs.yaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.yaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.yaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.yaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.yaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.yaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.yaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.yaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.yaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.yaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.yaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.yaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.yaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.yaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.yaxisnameborderdashgap,\n      axisNameWidth: chartAttrs.yaxisnamewidth,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n      divLineColor: pluck(chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.divlinealpha, colorM.getColor('divLineAlpha')),\n      divLineThickness: pluckNumber(chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n      alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor('altHGridColor')),\n      alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor('altHGridAlpha')),\n      numDivLines: chartAttrs.numdivlines,\n      axisMinValue: chartAttrs.yaxisminvalue,\n      axisMaxValue: chartAttrs.yaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptiveymin,\n      adjustDiv: chartAttrs.adjustvdiv,\n      labelStep: chartAttrs.yaxisvaluesstep,\n      showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n      showLimits: pluckNumber(chartAttrs.showyaxislimits, chartAttrs.showlimits, iapi.showLimits),\n      showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n      // showZeroPlane: chartAttrs.showzeroplane,\n      zeroPlaneColor: chartAttrs.zeroplanecolor,\n      zeroPlaneThickness: pluckNumber(chartAttrs.zeroplanethickness, chartAttrs.divlinethickness, 2),\n      zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, '#000000'),\n      showTooltip: pluckNumber(chartAttrs.showtooltip, 1)\n    };\n  }\n\n  /**\n   * space manager for radar\n   */\n  _spaceManager () {\n    // todo marge _allocateSpace and _spacemanager\n    var spaceForActionBar,\n      actionBarSpace,\n      availableWidth,\n      availableHeight,\n      iapi = this,\n      config = iapi.config,\n      chartAttr = iapi.getFromEnv('chart-attrib'),\n      // components = iapi.components,\n      radarBorderThickness = config.radarBorderThickness,\n      legendPosition = config.legendPosition ? config.legendposition.split('-') : [],\n      xAxis = iapi.getChildren('xAxis') && iapi.getChildren('xAxis')[0],\n      yAxisArr = (iapi.getChildren('yAxis') && iapi.getChildren('yAxis')) || [], // eslint-disable-line good-practices/no-single-usage-variable\n      yAxis = yAxisArr[0],\n      legend = iapi.getChildren('legend') && iapi.getChildren('legend')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      allottedSpace,\n      decreaseCanvasBy,\n      POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n      math = Math,\n      mathMin = math.min,\n      mathMax = math.max,\n      mathAbs = math.abs,\n      remainingSpace,\n      radarRadius;\n\n    config.radarRadius = pluckNumber(chartAttr.radarradius);\n    // If Radar radius is user defined\n    if (config.radarRadius !== UNDEF) {\n      config.radarRadius = config.radarRadius > mathMin(config.canvasHeight, config.canvasWidth) / 2 ? mathMin(config.canvasHeight, config.canvasWidth) / 2 : config.radarRadius;\n      config.availableHeight = availableHeight = config.canvasHeight - (config.radarRadius * 2);\n      config.availableWidth = availableWidth = config.canvasWidth - (config.radarRadius * 2);\n    } else { // Calculate the Radar radius\n      config.availableHeight = availableHeight = config.canvasHeight * 0.7;\n      config.availableWidth = availableWidth = config.canvasWidth * 0.7;\n    }\n\n    // Place legend\n    allottedSpace = (legendPosition[0] === POSITION_TOP || legendPosition[0] === POSITION_BOTTOM ? availableHeight : availableWidth) * 0.3;\n    allottedSpace = (legendPosition[0] === POSITION_TOP || legendPosition[0] === POSITION_BOTTOM ? availableHeight : availableWidth);\n    // No space is allocated for legend drawing in single series charts\n    if (((config.hasLegend !== false) && xAxis) && config.showLegend) {\n      remainingSpace = legend._manageLegendPosition(allottedSpace);\n      remainingSpace.bottom = mathMin(mathMax(remainingSpace.bottom, 0), allottedSpace);\n      remainingSpace.right = mathMin(mathMax(remainingSpace.right, 0), allottedSpace);\n      remainingSpace.top = mathMin(mathMax(remainingSpace.top, 0), allottedSpace);\n      remainingSpace.left = mathMin(mathMax(remainingSpace.left, 0), allottedSpace);\n      iapi._allocateSpace(remainingSpace);\n    }\n\n    if (xAxis) {\n      remainingSpace = xAxis.placeAxis(config.availableWidth, config.availableHeight);\n      iapi._allocateSpace(remainingSpace);\n    }\n\n    if (yAxis) {\n      remainingSpace = yAxis.placeAxis(config.canvasWidth);\n    }\n\n    // A space manager that manages the space for the tools as well as the captions.\n    remainingSpace = iapi._manageChartMenuBar(config.availableHeight);\n\n    spaceForActionBar = config.availableHeight * 0.225; // eslint-disable-line good-practices/no-single-usage-variable\n    actionBarSpace = iapi._manageActionBarSpace && (iapi._manageActionBarSpace(spaceForActionBar) || {}); // eslint-disable-line good-practices/no-single-usage-variable\n    iapi._allocateSpace(actionBarSpace);\n\n    // For rader make the canvas square with the minimum of width and height\n    radarRadius = config.radarRadius > 0 ? config.radarRadius * 2 : mathMin(config.canvasHeight, config.canvasWidth);\n\n    if (config.canvasHeight > radarRadius) {\n      decreaseCanvasBy = mathAbs((config.canvasHeight - radarRadius) / 2);\n      iapi._allocateSpace({\n        top: decreaseCanvasBy,\n        bottom: decreaseCanvasBy\n      });\n    }\n    if (config.canvasWidth > radarRadius) {\n      decreaseCanvasBy = mathAbs((config.canvasWidth - radarRadius) / 2);\n      iapi._allocateSpace({\n        left: decreaseCanvasBy,\n        right: decreaseCanvasBy\n      });\n    }\n    radarRadius = radarRadius / 2;\n\n    yAxis.setAxisDimention({\n      x: config.canvasLeft + config.canvasWidth / 2,\n      y: config.canvasTop + config.canvasHeight / 2 - (radarRadius - radarBorderThickness / 2),\n      axisLength: radarRadius - (radarBorderThickness / 2)\n    });\n\n    xAxis.setAxisConfig({\n      radius: radarRadius - (radarBorderThickness / 2)\n    });\n\n    xAxis.setAxisDimention({\n      x: config.canvasLeft + config.canvasWidth / 2,\n      y: config.canvasTop + config.canvasHeight / 2\n    });\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  static getName () {\n    return 'Radar';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Radar';\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @return {string} dataset defination\n   */\n  getDSdef () {\n    return RadarDataset;\n  }\n}\nexport default Radar;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport AreaDataset from '@fusioncharts/charts/src/dataset/area';\nimport radarAnimation from './index.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport { getCoordinates, getPlotFromPixel } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport { BLANKSTRING, pluck, toRaphaelColor, getFirstValue, regex,\n  getLightColor, HASHSTRING, extend2, pluckNumber } from '@fusioncharts/core/src/lib';\n\nvar COMMASTRING = ',',\n  UNDEF,\n  M = 'M',\n  L = 'L',\n  Z = 'Z',\n  dropHash = regex.dropHash;\naddDep({\n  name: 'radarAnimation',\n  type: 'animationRule',\n  extension: radarAnimation\n});\n/**\n * Creates the Radar Dataset\n * @class\n */\nclass RadarDataset extends AreaDataset {\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.getPathArr = function () {\n      var pathObj = this,\n        pathArr = pathObj.pathArr,\n        path2Arr = pathObj.path2Arr;\n\n      if (pathArr.length || path2Arr.length) {\n        return pathArr.concat(path2Arr);\n      }\n      return [];\n    };\n  }\n  /**\n   * return name\n   * @return {string} - component name\n   */\n  getName () {\n    return 'radar';\n  }\n  /**\n   * Create pixel coordinates for the plots\n   */\n  createCoordinates () {\n    var dataSet = this,\n      chartConfig = dataSet.getFromEnv('chartConfig'),\n      dataObj,\n      config,\n      previousY,\n      i,\n      Px,\n      Py,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      xPos,\n      yPos,\n      setValue;\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n      setValue = config.setValue;\n\n      if (dataObj === UNDEF) {\n        continue;\n      }\n\n      yPos = dataSet.getFromEnv('yAxis').getPixel(setValue + (previousY || 0));\n      xPos = getCoordinates({\n        radius: (chartConfig.canvasTop + chartConfig.canvasHeight / 2) - yPos,\n        theta: i\n      }, dataSet.getFromEnv('xAxis'));\n      // xPos = xAxis.getPixel(i, (chartConfig.canvasTop + chartConfig.canvasHeight / 2) - yPos);\n      Py = xPos.y;\n      Px = xPos.x;\n\n      config._Px = Px;\n      config._Py = Py;\n      config._Pbx = Px;\n      config._Pby = Py;\n    }\n  }\n  /**\n   * Gets the path for the line plot.\n   * @param {Object} data data object\n   * @param {Object} positions position object\n   * @param {boolean} type represents whether it is of type 'base'\n   * @return {Object} path details\n   */\n  getLinePath (data, positions, type) {\n    var dataset = this,\n      chartConfig = dataset.getFromEnv('chartConfig'), // eslint-disable-line good-practices/no-single-usage-variable\n      obj = {},\n      // Used for determining whether the last value was valid\n      // Initially it is false\n      lastValidValue = obj.lastValidValue || false,\n      temp = obj.temp || [],\n      temp2 = obj.temp2 || [], // eslint-disable-line good-practices/no-single-usage-variable\n      pathArr = obj.pathArr || [],\n      i,\n      config,\n      xPos,\n      yPos,\n      pointsJoined = obj.pointsJoined || 0,\n      dataObj,\n      setValue,\n      startPos = (positions && positions.begin) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      endPos = (positions && positions.end) || data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      step = chartConfig.viewPortConfig.step || 1, // eslint-disable-line good-practices/no-single-usage-variable\n      yAxis = dataset.getFromEnv('yAxis'),\n      xAxis = dataset.getFromEnv('xAxis'),\n      baseZero = yAxis.getPixel(0), // eslint-disable-line good-practices/no-single-usage-variable\n      removeDataLen = dataset.removeDataLen || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      dataWithRemovedPaths = [];\n    // Added current dataStore to arr\n    dataWithRemovedPaths = dataWithRemovedPaths.concat(data);\n\n    for (i = startPos; i < endPos + removeDataLen; i += step) {\n      dataObj = dataWithRemovedPaths[i];\n      if (!dataObj) {\n        continue;\n      }\n\n      config = dataObj.config;\n      setValue = config.setValue;\n      if (setValue === null || (config && config.isSkipped === true)) {\n        // xPos = xAxis.getPixel(xAxis.getLimit().min).x;\n        xPos = getCoordinates({\n          theta: xAxis.getLimit().min\n        }, xAxis).x;\n        yPos = yAxis.getPixel(yAxis.config.axisRange.min);\n      } else {\n        xPos = config._Px;\n        yPos = config._Py;\n      }\n\n      // take base or zero y value for animation\n      if (type === 'zero') {\n        yPos = baseZero;\n      } else if (type === 'base') {\n        yPos = config._Pby;\n      }\n      if (lastValidValue) {\n        if (temp.length) {\n          pathArr = pathArr.concat(temp);\n          temp = [];\n          pointsJoined++;\n        }\n        // Push the upper x and y position to pathArr\n        pathArr.push([L, xPos, yPos]);\n      } else {\n        // Push the upper x and y positions of area plot to temp\n        temp.push([M, xPos, yPos]);\n        // No points are joined when starting a new path\n        pointsJoined = 0;\n        lastValidValue = true;\n      }\n    }\n    // If path is not closed and any points are joined then close the path\n    if (pathArr[pathArr.length - 1] !== Z && pointsJoined > 0) {\n      pathArr.push(Z);\n    }\n    return {\n      pathArr: pathArr,\n      path2Arr: [],\n      lastValidValue: lastValidValue,\n      pointsJoined: pointsJoined,\n      temp: temp,\n      temp2: temp2,\n      getPathArr: dataset.getPathArr\n    };\n  }\n  /**\n   * Parses all the attributes for dataset level and set level\n   * Called from init function of area class and line class\n   * Both line and area attributes configuration is done here\n   * @param {Object} datasetJSON the data provided by user\n   * @return {boolean} false if datasetJSON is undefined\n   */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.JSONData = datasetJSON;\n    var dataset = this,\n      conf = dataset.config,\n      chart = dataset.getFromEnv('chart'), // eslint-disable-line good-practices/no-single-usage-variable\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      JSONData = dataset.JSONData,\n      plotColor = dataset.getFromEnv('color-manager').getPlotColor(dataset.index);\n    super.configureAttributes(datasetJSON);\n    conf.defaultPadding = {\n      left: 0,\n      right: 0\n    };\n    conf.plotfillcolor = pluck(JSONData.color,\n      chartAttr.plotfillcolor, plotColor);\n    conf.plotbordercolor = pluck(JSONData.plotbordercolor, chartAttr.plotbordercolor,\n      chartAttr.areabordercolor, plotColor).split(COMMASTRING)[0];\n\n    conf.plotborderColorObject = {\n      color: conf.plotbordercolor,\n      alpha: conf.plotborderalpha,\n      angle: conf.plotfillangle\n    };\n    conf.fillColor = {\n      color: conf.plotfillcolor + (conf.plotgradientcolor\n        ? COMMASTRING + conf.plotgradientcolor : BLANKSTRING),\n      alpha: conf.plotfillalpha,\n      angle: conf.plotfillangle\n    };\n    conf.legendSymbolColor = conf.plotfillcolor;\n  }\n  /**\n   * Function that return the nearest plot details\n   * @param   {number} chartX x-axis position of the mouse cordinate\n   * @param   {number} chartY y-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest plot and whether it is\n   *                   hovered or not\n   */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      xAxis = dataset.getFromEnv('xAxis'),\n      dataStore = dataset.components.data,\n      pointObj,\n      xMin,\n      xMax,\n      len = dataStore.length,\n      returnValue,\n      conf = dataset.config,\n      divAngle = 360 / len,\n      i;\n\n    xMin = Math.floor(Math.max(getPlotFromPixel({ // eslint-disable-line good-practices/no-single-usage-variable\n      x: chartX - conf.maxRadius,\n      y: chartY\n    }, xAxis) / divAngle - 1, 0));\n\n    xMax = Math.floor(Math.max(getPlotFromPixel({ // eslint-disable-line good-practices/no-single-usage-variable\n      x: chartX + conf.maxRadius,\n      y: chartY\n    }, xAxis) / divAngle, len - 1));\n\n    for (i = xMax; i >= xMin; i--) {\n      pointObj = dataStore[i];\n      if (pointObj) {\n        returnValue = dataset.isWithinShape(pointObj, i, chartX, chartY);\n        if (returnValue) {\n          break;\n        }\n      }\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * function to check if the context of dataset is chanegd or not\n   * if changed then it will return staus true. It is for further infomormation to redraw a dataset\n   *\n   * @returns {boolean} status of context change\n   * @memberof RadarDataset\n   */\n  _contextChanged () {\n    if (!this.config.context) {\n      this.config.context = {};\n    }\n    var dataset = this,\n      status,\n      context = dataset.config.context,\n      oldAxisCenterX = context.axisCenterX, // eslint-disable-line good-practices/no-single-usage-variable\n      newAxisCenterX;\n\n    // Find new center of polar category axis.\n    newAxisCenterX = dataset.getFromEnv('xAxis').config.axisDimention.centerX;\n    // If new center of polar category axis is different from old center, redraw is needed.\n    status = !(newAxisCenterX === oldAxisCenterX); // eslint-disable-line good-practices/no-single-usage-variable\n    context.axisCenterX = newAxisCenterX;\n\n    return status || super._contextChanged();\n  }\n  /**\n   * Returns the details of the plot in the category band that the givennt x and y co-ordinates\n   * are in.\n   *\n   * @param {number} [chartX=0] x-axis position of the mouse cordinate\n   * @param {number} [chartY=0] y-axis position of the mouse cordinate\n   *\n   * @return {Object} Return an object with details of nearest plot in the category band.\n   */\n  getPlotInCategoryAt (chartX, chartY) {\n    let plots = this.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      categoryAxis = this.getFromEnv('xAxis'),\n      isDatasetVisible = this.getState('visible'),\n      hoveredCategoryIndex = Math.round(getPlotFromPixel({\n        x: chartX,\n        y: chartY\n      }, categoryAxis)),\n      foundPlot = plots.find((plot, idx, plotArr) => {\n        let plotCategoryIndex,\n          nextPlotCategoryIndex,\n          prevPlotCategoryIndex,\n          halfCategoryDiff,\n          nextPlot,\n          prevPlot;\n\n        if (idx === 0) {\n          nextPlot = plotArr[idx + 1];\n          // For the first plot, the previous plot will be the last plot in the array of plots\n          prevPlot = plotArr[plotArr.length - 1];\n        } else if (idx === plotArr.length - 1) {\n          // For the last plot, the next plot will be the first plot in the array of plots\n          nextPlot = plotArr[0];\n          prevPlot = plotArr[plotArr.length - 2];\n        } else {\n          // For any other plot just select the plot immediately before and after the current plot\n          nextPlot = plotArr[idx + 1];\n          prevPlot = plotArr[idx - 1];\n        }\n        // plotCategoryIndex = categoryAxis.getAngle(plot.config._Px, plot.config._Py);\n        plotCategoryIndex = getPlotFromPixel({ // eslint-disable-line good-practices/no-single-usage-variable\n          x: plot.config._Px,\n          y: plot.config._Py\n        }, categoryAxis);\n\n        // For the last plot, the category band will end at 360 degrees\n        nextPlotCategoryIndex = idx === plotArr.length - 1\n          ? 360\n          // categoryAxis.getAngle(nextPlot.config._Px, nextPlot.config._Py);\n          : getPlotFromPixel({\n            x: nextPlot.config._Px,\n            y: nextPlot.config._Py\n          }, categoryAxis);\n        // prevPlotCategoryIndex = categoryAxis.getAngle(prevPlot.config._Px, prevPlot.config._Py);\n        prevPlotCategoryIndex = getPlotFromPixel({ // eslint-disable-line good-practices/no-single-usage-variable\n          x: prevPlot.config._Px,\n          y: prevPlot.config._Py\n        }, categoryAxis);\n        // The angle at which the category ends and the next category starts\n        halfCategoryDiff = (nextPlotCategoryIndex - plotCategoryIndex) / 2;\n\n        if (hoveredCategoryIndex <= 0 + halfCategoryDiff) {\n          // If the mouse is over an angle less than where the first category ends\n          return (hoveredCategoryIndex >= 0 && hoveredCategoryIndex <= 0 + halfCategoryDiff);\n        } else if (hoveredCategoryIndex > 360 - halfCategoryDiff) {\n          // If the mouse is over an angle greater than where the last category band ends\n          return hoveredCategoryIndex >= 360 - halfCategoryDiff && hoveredCategoryIndex <= 360;\n        }\n        return (\n          hoveredCategoryIndex >= prevPlotCategoryIndex + halfCategoryDiff &&\n            hoveredCategoryIndex <= nextPlotCategoryIndex - halfCategoryDiff\n        );\n      }),\n      hoveredPlotInfo = this._getHoveredPlot(chartX, chartY);\n\n    if (isDatasetVisible && hoveredPlotInfo) {\n      // If dataset is visible and the mouse is exactly over a plot\n      return hoveredPlotInfo;\n    } else if (isDatasetVisible && foundPlot) {\n      // If dataset is visible and the mouse is over a category band\n      return {\n        pointIndex: foundPlot._index,\n        hovered: false,\n        pointObj: foundPlot\n      };\n    }\n    // If dataset is not visible and no relevant plot was found\n    return false;\n  }\n\n  /**\n   * Function to register datasets in the internal data store of legend class.\n   */\n  _addLegend () {\n    var dataset = this,\n      strokeColor,\n      fillColor,\n      conf = dataset.config,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      legendItem,\n      legend = dataset.getFromEnv('legend'),\n      color = conf.legendSymbolColor,\n      lightColor,\n      use3DLighting = pluckNumber(chartAttr.use3dlighting, chartAttr.useplotgradientcolor, 1); // eslint-disable-line good-practices/no-single-usage-variable\n    strokeColor = getLightColor(color, 60).replace(dropHash, HASHSTRING); // eslint-disable-line good-practices/no-single-usage-variable\n    if (use3DLighting) {\n      lightColor = getLightColor(color, 40);\n      fillColor = {\n        FCcolor: {\n          color: color + ',' + color + ',' + lightColor + ',' + color + ',' + color,\n          ratio: '0,70,30',\n          angle: 270,\n          alpha: '100,100,100,100,100'\n        }\n      };\n    } else {\n      fillColor = {\n        FCcolor: {\n          color: color,\n          angle: 0,\n          ratio: '0',\n          alpha: '100'\n        }\n      };\n    }\n    if (conf.includeinlegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      }\n      legendItem.configure({\n        enabled: conf.includeInLegend,\n        type: dataset.type,\n        label: getFirstValue(dataset.JSONData.seriesname),\n        legendIconAlpha: pluckNumber(dataset.JSONData.legendiconalpha),\n        usePattern: conf.usePattern,\n        patternAttr: {\n          patternType: conf.patternType,\n          patternAngle: conf.patternAngle,\n          patternDensity: conf.patternDensity,\n          patternSize: conf.patternSize,\n          color: conf.plotColor,\n          patternAlpha: conf.patternAlpha,\n          patternBgColor: conf.patternBgColor,\n          alpha: conf.plotfillalpha\n        }\n      });\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor(fillColor),\n          bgAlpha: pluckNumber(dataset.JSONData.legendiconbgalpha, dataset.JSONData.legendiconalpha, chartAttr.legendiconbgalpha, chartAttr.legendiconalpha, conf.plotfillalpha),\n          borderAlpha: pluckNumber(dataset.JSONData.legendiconborderalpha, dataset.JSONData.legendiconalpha, chartAttr.legendiconborderalpha, chartAttr.legendiconalpha, '100'),\n          rawFillColor: color,\n          stroke: toRaphaelColor(strokeColor)\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item is dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n  /**\n   * Calculate current pos w.r.t prev for an array\n   * @param   {Object}  pathVal   current path\n   * @param   {Object}  lim    x,y axis limits\n   * @return {Array}          Old path\n   */\n  getOldPath (pathVal, lim) {\n    var dataSet = this,\n      path = pathVal,\n      xLim = lim.x,\n      yLim = lim.y,\n      oldLim = dataSet.config && dataSet.config.prevLim,\n      oldLimX = oldLim.x,\n      oldLimY = oldLim.y,\n      i = 0,\n      ii = path.pathArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      item,\n      getOldValX = function (value) {\n        // getting ratio by pixels\n        let val = value;\n        val = (val - oldLimX.minPixel.x) / (oldLimX.maxPixel.x - oldLimX.minPixel.x);\n        // ratio to value\n        val = val * (oldLimX.max - oldLimX.min) + oldLimX.min;\n        // value in old ratio\n        val = (val - xLim.min) / (xLim.max - xLim.min);\n        // return position in previous\n        return val * ((xLim.maxPixel.x - xLim.minPixel.x)) + xLim.minPixel.x + 1;\n      },\n      getOldValY = function (value) {\n        let val = value;\n        if ((val < oldLimY.base && val > yLim.base) ||\n                        (val > oldLimY.base && val < yLim.base)) {\n          val = yLim.base;\n        }\n        return val - 1;\n      },\n      getOldValYBase = function (val) {\n        if (val === oldLimY.base) {\n          return yLim.base;\n        }\n        return getOldValY(val);\n      };\n    if (oldLimY.min === yLim.min && oldLimX.min === xLim.min &&\n                oldLimY.max === yLim.max && oldLimX.max === xLim.max) {\n      return path;\n    }\n    path = extend2({}, path);\n    if (!oldLim) {\n      return [];\n    }\n    // generating new copy of array\n    path.pathArr = path.pathArr.slice(0);\n    path.path2Arr = path.path2Arr.slice(0);\n    for (i = ii; i--;) {\n      item = path.pathArr[i].slice(0);\n      // check if array\n      if (!item[1] || !item.join) {\n        continue;\n      }\n      item[1] = getOldValX(item[1]);\n      item[2] = getOldValYBase(item[2]);\n      path.pathArr[i] = item;\n    }\n    for (i = path.path2Arr.length; i--;) {\n      item = path.path2Arr[i].slice(0);\n      // check if array\n      if (!item[1] || !item.join) {\n        continue;\n      }\n      item[1] = getOldValX(item[1]);\n      item[2] = getOldValYBase(item[2]);\n      path.path2Arr[i] = item;\n    }\n    return path;\n  }\n  /**\n   * Configure data level\n   */\n  _setConfigure () {\n    var dataSet = this,\n      conf = dataSet.config,\n      setDataArr = dataSet.config.JSONData.data || [],\n      setData,\n      dataObj,\n      len = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      dataStore,\n      i;\n\n    conf.imageCount = 0;\n    dataStore = dataSet.components.data;\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n    conf.maxRadius = -Infinity;\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      setData = (setDataArr && setDataArr[i]) || {};\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {};\n      }\n\n      if (!dataObj.config) {\n        dataStore[i].config = {};\n      }\n\n      if (!dataObj.graphics) {\n        dataObj.graphics = {};\n      }\n      dataSet._plotConfigure(i, setData);\n    }\n  }\n}\nexport default RadarDataset;\n","import { getCoordinates } from '@fusioncharts/utils/src/scale-utils/polar-util';\n\nexport default {\n  'initial.dataset.radar': function () {\n    return {\n      'anchor.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          startEnd: {\n            start: 0.5,\n            end: 1\n          },\n          slot: 'plot'\n        }];\n      },\n      'anchor.updating': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      'anchor.disappearing': () => {\n        return [{\n          finalAttr: {\n            opacity: 0,\n            'fill-opacity': 0,\n            'stroke-opacity': 0\n          },\n          slot: 'final'\n        }];\n      },\n      'line.appearing': (inputJSON) => {\n        let dataset = inputJSON.component,\n          xAxis = dataset.getFromEnv('xAxis'),\n          yAxis = dataset.getFromEnv('yAxis'),\n          catLen = xAxis.getTicksLen(),\n          chartConfig = dataset.getFromEnv('chartConfig'),\n          finalAttr = inputJSON.attr,\n          value = (chartConfig.canvasTop + chartConfig.canvasHeight / 2),\n          initialPath = [],\n          i;\n        for (i = 0; i < catLen; i++) {\n          initialPath.push(i ? 'L' : 'M');\n          initialPath.push(getCoordinates({\n            radius: value,\n            theta: 0\n          }, xAxis).x);\n          initialPath.push(yAxis.getPixel(0));\n        }\n        initialPath.push('Z');\n        return [{\n          initialAttr: {\n            opacity: 0,\n            path: initialPath\n          },\n          finalAttr: {\n            opacity: 1,\n            path: finalAttr.path\n          },\n          startEnd: {\n            start: 0,\n            end: 0.5\n          },\n          slot: 'middle'\n        }];\n      },\n      'label.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        finalAttr: {\n          opacity: 1\n        },\n        slot: 'final'\n      }],\n      '*': null\n    };\n  }\n};\n","import NumericAxis from '@fusioncharts/core/src/axis/numeric';\nimport PolarAxis from '@fusioncharts/core/src/axis/polar';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    config = chart._feedAxesRawData(),\n    axisRefVisual = canvas.getChildren('axisRefVisualPolar')[0],\n    yAxis,\n    xAxis,\n    redraw = () => axisRefVisual.asyncDraw();\n  componentFactory(chart, NumericAxis, 'yAxis', 1, config.yAxisConf);\n  componentFactory(chart, PolarAxis, 'xAxis', 1, config.xAxisConf);\n\n  yAxis = chart.getChildren('yAxis')[0];\n  xAxis = chart.getChildren('xAxis')[0];\n\n  yAxis.setLinkedItem('canvas', canvas);\n  axisRefVisual.setLinkedItem(yAxis.getId(), yAxis);\n  axisRefVisual.setLinkedItem(xAxis.getId(), xAxis);\n\n  axisRefVisual.addExtEventListener('visiblerangeset', redraw, xAxis);\n  axisRefVisual.addExtEventListener('visiblerangeset', redraw, yAxis);\n\n  canvas.attachAxis(xAxis, false, {});\n  canvas.attachAxis(yAxis, true, {});\n\n  chart._setCategories();\n}\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Axis from './axis';\nimport { BLANKSTRING, pluckNumber, setLineHeight, getDashStyle, convertColor,\n  pluck, preDefStr, PXSTRING } from '../lib';\nimport { polarToCartesian } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport diff from '@fusioncharts/utils/src/scale-utils/array/diff';\nimport range from '@fusioncharts/utils/src/scale-utils/array/range';\nimport polarAnimation from './polar.animation';\nimport { addDep } from '../dependency-manager';\nimport ScaleCategory from '@fusioncharts/utils/src/scales/category';\nimport { setTickValues, shiftLabels,\n  _createContainer, setAxisPadding, getPixel, getLabel } from './common-api';\n\nvar UNDEF,\n  DASH_DEF = 'none',\n  // PXSTRING = 'px',\n  POINTER = 'pointer',\n  NORMALSTRING = 'normal',\n  EVENTARGS = 'eventArgs',\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  POSITION_END = preDefStr.POSITION_END,\n  // M = 'M',\n  math = Math,\n  mathMin = math.min,\n  pi = math.PI,\n  pi2 = 2 * pi;\n  // pInt = function (s, mag) {\n  //   return parseInt(s, mag || 10);\n  // },\n  // labelFontBdrColor,\n\naddDep({\n  name: 'polarAnimation',\n  type: 'animationRule',\n  extension: polarAnimation\n});\n\n/**\n * Creates the Polar axis class\n * @class\n */\nclass Polar extends Axis {\n  /**\n   * adding animation rules\n   */\n  constructor () {\n    super();\n    this.config.scale = new ScaleCategory();\n    this.config.referenceInfo = [];\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'polarCategory';\n  }\n\n  /**\n   * Sets default config\n   *\n   * @memberof Polar\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.drawPlotBands = false;\n    this.config.forceZeroTick = false;\n  }\n\n  /**\n   * Prepare the axis attributes for use by the chart drawing. It applies default values to the\n   * options that are undefined.\n   * @param  {Object}  rawAttr The raw attributes to be set\n   */\n  configureAttributes (rawAttr) {\n    let axis = this,\n      axisConfig = axis.config,\n      axisAttr = rawAttr,\n      chart = axis.getFromEnv('chart'),\n      jsonData = chart.getFromEnv('dataSource'),\n      FCChartObj = jsonData.chart,\n      colorM = axis.getFromEnv('color-manager');\n    super.configureAttributes(rawAttr);\n    axisConfig.gridLineColor = convertColor(pluck(axisAttr.radarSpikeColor,\n      colorM.getColor('divLineColor')),\n    pluckNumber(axisAttr.radarSpikeAlpha, axisAttr.radarInLineAlpha,\n      colorM.getColor('divLineAlpha')));\n    axisConfig.radarSpikeThickness = pluckNumber(FCChartObj.radarspikethickness, 1);\n    // labelFontBdrColor = labelFontBdrColor ? convertColor(\n    //   labelFontBdrColor, pluckNumber(FCChartObj.labelborderalpha,\n    //     FCChartObj.labelalpha, 100)) : BLANKSTRING;\n    // axisConfig.labels.style = {\n    //   fontFamily: pluck(axisAttr.labelFont, axisAttr.outCanfontFamily),\n    //   fontSize: pluckNumber(axisAttr.labelFontSize, pInt(axisAttr.outCanfontSize)) + PXSTRING,\n    //   fontWeight: pluckNumber(axisAttr.labelFontBold) ? 'bold' :\n    //     NORMALSTRING,\n    //   fontStyle: pluckNumber(axisAttr.labelFontItalic) ? 'italic' :\n    //     NORMALSTRING,\n    //   color: convertColor(pluck(axisAttr.labelFontColor, axisAttr.outCancolor),\n    //     pluckNumber(axisAttr.labelFontAlpha, 100)),\n    //   labelLink: FCChartObj.labellink,\n    //   border: labelFontBdrColor || FCChartObj.labelbgcolor ?\n    //     (pluckNumber(FCChartObj.labelborderthickness, 1) + 'px solid') : '',\n    //   borderColor: labelFontBdrColor,\n    //   borderThickness: pluckNumber(FCChartObj.labelborderthickness, 1),\n    //   borderPadding: pluckNumber(FCChartObj.labelborderpadding, 2),\n    //   borderRadius: pluckNumber(FCChartObj.labelborderradius, 0),\n    //   backgroundColor: FCChartObj.labelbgcolor ?\n    //     convertColor(FCChartObj.labelbgcolor,\n    //       pluckNumber(FCChartObj.labelbgalpha, FCChartObj.labelalpha,\n    //         100)) : BLANKSTRING,\n    //   borderDash: pluckNumber(FCChartObj.labelborderdashed, 0) ?\n    //     getDashStyle(pluckNumber(FCChartObj.labelborderdashlen, 4),\n    //       pluckNumber(FCChartObj.labelborderdashgap, 2)) : DASH_DEF\n    // };\n    // axisConfig.categoryNumDivLines = pluckNumber(axisConfig.numDivLines, 0);\n  }\n\n  /**\n   * Function set the starting point for drawing the axis and the axis drawing width/height\n   * @param {Object} data Contains the x, y, length and whether the axis is drawn on the opposite side\n   */\n  setAxisDimention (data) {\n    let axis = this,\n      scale = axis.getScale(),\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      startAngle = axisConfig.startAngle || -pi / 2,\n      totalAngle = axisConfig.totalAngle || -pi2,\n      endAngle = startAngle + totalAngle,\n      rangeArr,\n      category = axisConfig.tickValues.tickValue || [],\n      anglePerSlice = totalAngle / (category.length || 1),\n      axisDimention = axisConfig.axisDimention || (axisConfig.axisDimention = {});\n\n    axisDimention.opposite = pluckNumber(data.opposite, axisDimention.opposite);\n    axisDimention.centerX = pluckNumber(data.x, axisDimention.x, chartConfig.canvasLeft);\n    axisDimention.centerY = pluckNumber(data.y, axisDimention.y, chartConfig.canvasTop);\n    axisDimention.axisLength = pi2;\n\n    endAngle -= anglePerSlice;\n    rangeArr = axisConfig.clockWise ? [endAngle, startAngle] : [startAngle, endAngle];\n    scale.setRange(rangeArr);\n  }\n  /**\n   * Parse category line attributes\n   *\n   * @memberof Polar\n   */\n  _parseCategoryPlotLine () {\n    var axis = this,\n      axisConfig = axis.config,\n      tickValue = axisConfig.tickValues.tickValue,\n      plotLineColor = axisConfig.gridLineColor,\n      plotLineWidth = axisConfig.radarSpikeThickness,\n      axisAttrObj,\n      referenceInfo = axisConfig.referenceInfo,\n      i,\n      value;\n\n    axisAttrObj = {\n      stroke: plotLineColor,\n      'stroke-width': plotLineWidth\n      // 'stroke-dasharray': plotLineDashStyle\n    };\n    // checking for pure tickValue axis exclude bubble scatter\n    if (tickValue[0] && (tickValue[0].x !== UNDEF || tickValue[0].y !== UNDEF)) {\n      return;\n    }\n    // checking if lines are to be drawn user can decide\n    if (axisConfig.lines.isDraw && axisConfig.numDivLines) {\n      for (i = 0; i < tickValue.length; ++i) {\n        value = i;\n\n        referenceInfo.push({\n          from: value,\n          type: 'line',\n          layer: 1,\n          attr: axisAttrObj\n        });\n      }\n    }\n  }\n  /**\n   * Function called by the chart when there is requirement to calculate or recalculate the space\n   * management this function must be called every time when chart dimension is changed\n   * @param {number} width The maximum width that is available for space management\n   * @param {number} height The maximum height that is available for space management\n   * @return {Object} Left and right defining how much space is used in left and right\n   */\n  placeAxis (width, height) {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      smartLabel = chart.getFromEnv('smartLabel'),\n      labelStyle = axisConfig.labels.style,\n      categories = chart.getFromEnv('dataSource').categories,\n      axisValuePadding = axisConfig.labelPadding = pluckNumber(axisConfig.rawAttr.axisValuePadding, 10),\n      useEllipsesWhenOverflow = axisConfig.useEllipsesWhenOverflow,\n      top = 0,\n      left = 0,\n      right = 0,\n      bottom = 0,\n      avalTop = height / 2,\n      avalBottom = height / 2,\n      avalRight = width / 2,\n      avalLeft = width / 2,\n      i,\n      // text,\n      // allCategories = axisConfig.categories && axisConfig.categories.category,\n      allCategories = axisConfig.tickValues && axisConfig.tickValues.tickValue,\n      categoryLength,\n      singleCategory,\n      smartLabelText,\n      categoriesStyle,\n      categoryStyle,\n      smartLabelStyle,\n      smartLabelStyleLineHeight,\n      lineHeight;\n    // TODO : so space management for category\n\n    axisConfig.labels.isDraw = 1;\n    axisConfig.labels.drawNormalVal = 1;\n    axisConfig.labels.drawLimitVal = 1;\n\n    if (!axis.components) {\n      axis.components = {};\n    }\n    axis.components.labels = [];\n    // The style for the catergories\n    if (axisConfig.showLabels) {\n      if (categories) {\n        let firstCategory = categories[0];\n        categoriesStyle = {\n          fontFamily: firstCategory.font,\n          fontSize: firstCategory.fontsize,\n          color: firstCategory.fontcolor\n        };\n      }\n      for (i = 0, categoryLength = allCategories.length; i < categoryLength; i++) {\n        singleCategory = allCategories[i];\n        // Style for the individuel category\n        categoryStyle = {\n          fontFamily: singleCategory.font,\n          fontSize: singleCategory.fontsize,\n          fontWeight: singleCategory.fontbold ? 'bold' : NORMALSTRING,\n          fontStyle: singleCategory.fontitalic ? 'italic' : NORMALSTRING\n        };\n        // the final style for smart label of that individual category label\n        smartLabelStyle = {\n          fontFamily: pluck(categoryStyle.fontFamily, categoriesStyle.fontFamily,\n            labelStyle.fontFamily),\n          fontSize: pluck(categoryStyle.fontSize, categoriesStyle.fontSize,\n            this.computeFontSize(labelStyle.fontSizeWithUnit) + PXSTRING),\n          fontWeight: pluck(categoryStyle.fontWeight, labelStyle.fontWeight),\n          fontStyle: pluck(categoryStyle.fontStyle, labelStyle.fontStyle)\n        };\n\n        smartLabelStyleLineHeight = setLineHeight(smartLabelStyle);\n        lineHeight = smartLabelStyleLineHeight.replace(/px/ig, '');\n        smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n        smartLabel.setStyle(smartLabelStyle);\n\n        // Make a copy of actual category label\n        singleCategory.oriLabel === UNDEF && (singleCategory.oriLabel = singleCategory.label);\n        if (i === 0) {\n          smartLabelText = smartLabel.getSmartText(singleCategory.oriLabel, width,\n            mathMin(lineHeight, avalTop), useEllipsesWhenOverflow);\n\n          singleCategory.label = smartLabelText.text;\n          singleCategory.tooltext = smartLabelText.tooltext;\n\n          smartLabelText.width += smartLabelText.width ? axisValuePadding : 0;\n          smartLabelText.height += smartLabelText.height ? axisValuePadding : 0;\n\n          if (smartLabelText.height > top) {\n            top = smartLabelText.height;\n            bottom = top;\n          }\n        } else if (i === categoryLength / 2) {\n          smartLabelText = smartLabel.getSmartText(singleCategory.oriLabel, width,\n            mathMin(lineHeight, avalBottom), useEllipsesWhenOverflow);\n\n          singleCategory.label = smartLabelText.text;\n          singleCategory.tooltext = smartLabelText.tooltext;\n\n          smartLabelText.width += smartLabelText.width ? axisValuePadding : 0;\n          smartLabelText.height += smartLabelText.height ? axisValuePadding : 0;\n\n          if (smartLabelText.height > bottom) {\n            bottom = smartLabelText.height;\n          }\n        } else if (i < categoryLength / 2) {\n          smartLabelText = smartLabel.getSmartText(singleCategory.oriLabel, avalLeft,\n            smartLabelStyleLineHeight, useEllipsesWhenOverflow);\n\n          singleCategory.label = smartLabelText.text;\n          singleCategory.tooltext = smartLabelText.tooltext;\n\n          smartLabelText.width += smartLabelText.width ? axisValuePadding : 0;\n          smartLabelText.height += smartLabelText.height ? axisValuePadding : 0;\n\n          if (smartLabelText.width > left) {\n            left = smartLabelText.width;\n          }\n        } else {\n          smartLabelText = smartLabel.getSmartText(singleCategory.oriLabel, avalRight,\n            smartLabelStyleLineHeight, useEllipsesWhenOverflow);\n\n          singleCategory.label = smartLabelText.text;\n          singleCategory.tooltext = smartLabelText.tooltext;\n\n          smartLabelText.width += smartLabelText.width ? axisValuePadding : 0;\n          smartLabelText.height += smartLabelText.height ? axisValuePadding : 0;\n\n          if (smartLabelText.width > right) {\n            right = smartLabelText.width;\n          }\n        }\n\n        // Store width and height of labels\n        axis.components.labels.push({\n          config: {\n            width: smartLabelText.width,\n            height: smartLabelText.height,\n            props: {\n              label: {\n                attr: {}\n              }\n            }\n          }\n        });\n      }\n    } else {\n      for (i = 0, categoryLength = allCategories.length; i < categoryLength; i++) {\n        axis.components.labels.push({\n          config: {\n            width: 0,\n            height: 0,\n            props: {\n              label: {\n                attr: {}\n              }\n            }\n          }\n        });\n      }\n    }\n    return {\n      top: top,\n      left: left,\n      right: right,\n      bottom: bottom\n    };\n  }\n  /**\n   * Calculates the parameters necessary to draw the components of the chart.\n   * In addition, it also calculates and draws the axis labels and ticks\n   */\n  _drawComponents () {\n    var axis = this,\n      axisConfig = axis.config;\n    axisConfig.drawLabels && axisConfig.hasCategory && axis._drawCategory();\n  }\n\n  /**\n   * Parses axis cosmetics and positions during post space management\n   *\n   * @memberof Polar\n   */\n  allocatePosition () {\n    var axis = this,\n      axisConfig = axis.config;\n\n    axisConfig.drawLabels && axisConfig.hasCategory && axis._parseCategory();\n  }\n  /**\n   * Parses the position and parsing of categories during post space management\n   *\n   * @memberof Polar\n   */\n  _parseCategory () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      isOpposit = axisConfig.isOpposit,\n      labels = axisConfig.labels,\n      style = labels.style,\n      categoryLabel = axis.config.categoryLabel || (axis.config.categoryLabel = {}),\n      categories = chart.getFromEnv('dataSource').categories,\n      category = axisConfig.tickValues.tickValue,\n      axisPadding = axisConfig.labelPadding,\n      categoriesStyle = {},\n      categoryStyle = {},\n      centerX = axisConfig.axisDimention.centerX,\n      centerY = axisConfig.axisDimention.centerY,\n      i,\n      max,\n      min,\n      curCategory,\n      text,\n      labelRotation,\n      labelLineHeight,\n      addCategoryPadding,\n      css,\n      axisAttrObj,\n      fontColor,\n      pos,\n      curCategoryValue,\n      posX,\n      posY,\n      radius,\n      radiusXY,\n      theta,\n      axisScale = axis.getScale(),\n      catStyle,\n      id,\n      textId;\n\n    radius = pluckNumber(axisConfig.radius, 0);\n    min = 0;\n    max = category ? category.length - 1 : 0;\n\n    // checking if labels are to be drawn user can decide or can be decided by axis placeAxis function\n    if (axisConfig.labels.isDraw) {\n      if (categories) {\n        let cat0 = categories[0];\n        categoriesStyle.fontFamily = cat0.font;\n        categoriesStyle.fontSize = cat0.fontsize;\n        categoriesStyle.color = cat0.fontcolor;\n      }\n\n      // recalculating font size in case of chart resize\n      style.fontSize = this.computeFontSize(style.fontSizeWithUnit);\n\n      // main loop where the drawing starts\n      for (i = min; i <= max; i++) {\n        curCategory = category[i];\n        // TODO : need to\n        curCategoryValue = pluckNumber(curCategory.x, curCategory.y, i);\n        // if values are not limit value and label drawing is off other\n        // than limit increment it and continue\n        if (!axisConfig.labels.drawNormalVal && !(axisConfig.labels.drawLimitVal && (i === min ||\n                            curCategoryValue === max))) {\n          continue;\n        }\n        if (!axisConfig.labels.drawNormalVal && !(curCategoryValue === min ||\n                            curCategoryValue === max)) {\n          continue;\n        }\n        // if value are limit value but limit value are not mean to be drawn\n        if (!axisConfig.labels.drawLimitVal && (curCategoryValue === min || curCategoryValue === max)) {\n          continue;\n        }\n        categoryStyle = {\n          fontFamily: pluck(curCategory.font, curCategory.labelfont),\n          fontSize: pluck(curCategory.fontsize, curCategory.labelfontsize),\n          fontWeight: pluckNumber(curCategory.fontbold, curCategory.labelfontbold, 0)\n            ? 'bold' : UNDEF,\n          fontStyle: pluckNumber(curCategory.fontitalic, curCategory.labelfontitalic, 0)\n            ? 'italic' : UNDEF\n        };\n\n        fontColor = convertColor(pluck(curCategory.fontcolor, curCategory.labelfontcolor,\n          categoriesStyle.color, style.color), pluckNumber(curCategory.labelalpha,\n          axisConfig.rawAttr.labelFontAlpha, 100));\n        css = {\n          fontFamily: pluck(categoryStyle.fontFamily, categoriesStyle.fontFamily, style.fontFamily),\n          fontSize: pluck(categoryStyle.fontSize, categoriesStyle.fontSize, style.fontSize),\n          fontWeight: pluck(categoryStyle.fontWeight, style.fontWeight),\n          fontStyle: pluck(categoryStyle.fontStyle, style.fontStyle)\n        };\n\n        css.lineHeight = setLineHeight(css);\n\n        if (css.lineHeight) {\n          labelLineHeight = css.lineHeight;\n          if (labelLineHeight.indexOf('px') !== -1) {\n            labelLineHeight = labelLineHeight.replace(/px/i, '');\n            labelLineHeight = parseFloat(labelLineHeight);\n          }\n        }\n\n        // make the attribute ready to use\n        // y-axis\n        theta = axisScale.getRangeValue(curCategoryValue);\n        pos = polarToCartesian(radius + axisPadding, theta);\n        pos.x += centerX;\n        pos.y += centerY;\n        posX = pos.x;\n        posY = pos.y;\n\n        text = curCategory.label || '';\n        if (pluckNumber(curCategory.showlabel, 1) === 0 || axisConfig.showLabels === 0) {\n          text = '';\n        }\n        addCategoryPadding = curCategory.labelPadding || 0;\n        axisAttrObj = {\n          fill: fontColor,\n          'line-height': labelLineHeight,\n          'font-size': style.fontSize,\n          'text': text,\n          cursor: curCategory.link ? POINTER : 'default',\n          'x': posX,\n          'y': posY\n        };\n        if (addCategoryPadding) {\n          axisAttrObj.y += addCategoryPadding;\n        }\n        if (labelRotation) {\n          axisAttrObj['text-anchor'] = isOpposit ? POSITION_START : POSITION_END;\n          axisAttrObj['vertical-align'] = POSITION_MIDDLE;\n        } else {\n          axisAttrObj['vertical-align'] = isOpposit ? POSITION_BOTTOM : POSITION_TOP;\n        }\n\n        if (i === 0) {\n          axisAttrObj['text-anchor'] = POSITION_MIDDLE;\n          axisAttrObj['vertical-align'] = POSITION_BOTTOM;\n        } else if (i === (max + 1) / 2) {\n          axisAttrObj['text-anchor'] = POSITION_MIDDLE;\n          axisAttrObj['vertical-align'] = POSITION_TOP;\n        } else if (i < (max + 1) / 2) {\n          axisAttrObj['text-anchor'] = POSITION_END;\n          axisAttrObj['vertical-align'] = POSITION_MIDDLE;\n        } else {\n          axisAttrObj['text-anchor'] = POSITION_START;\n          axisAttrObj['vertical-align'] = POSITION_MIDDLE;\n        }\n\n        theta = axisScale.getRangeValue(curCategoryValue);\n        radiusXY = polarToCartesian(radius, theta);\n        radiusXY.x += centerX;\n        radiusXY.y += centerY;\n        // If labels shift is applicable (Specially for 3D) then apply the changes\n        if (labels.shiftX) {\n          axisAttrObj.x += labels.shiftX;\n        }\n        if (labels.shiftY) {\n          axisAttrObj.y += labels.shiftY;\n        }\n\n        // CategoryLabel is not present, create it.\n        categoryLabel = axisConfig.categoryLabel = categoryLabel || {};\n        // Create/reuse category label\n        textId = 'Label' + (id || i);\n\n        categoryLabel[textId] = categoryLabel[textId] || {};\n        categoryLabel[textId].config = categoryLabel[textId].config || {};\n\n        categoryLabel[textId].config.labelBox = catStyle = {\n          label: text,\n          lineHeight: css.lineHeight,\n          border: pluckNumber(curCategory.borderthickness, curCategory.labelborderthickness)\n            ? (pluckNumber(curCategory.borderthickness, curCategory.labelborderthickness, 1) +\n                                'px solid') : '',\n          borderColor: curCategory.bordercolor || curCategory.labelbordercolor\n            ? convertColor(curCategory.bordercolor || curCategory.labelbordercolor,\n              pluckNumber(curCategory.borderalpha, curCategory.labelborderalpha, curCategory.alpha,\n                curCategory.labelalpha, 100)) : BLANKSTRING,\n          borderThickness: pluckNumber(curCategory.borderthickness, curCategory.labelborderthickness),\n          borderPadding: pluckNumber(curCategory.borderpadding, curCategory.labelborderpadding),\n          borderRadius: pluckNumber(curCategory.borderradius, curCategory.labelborderradius),\n          backgroundColor: curCategory.bgcolor || curCategory.labelbgcolor\n            ? convertColor(curCategory.bgcolor || curCategory.labelbgcolor,\n              pluckNumber(curCategory.bgalpha, curCategory.labelbgalpha,\n                curCategory.alpha, curCategory.labelalpha, 100))\n            : BLANKSTRING,\n          borderDash: pluckNumber(curCategory.borderdashed, curCategory.labelborderdashed, 0)\n            ? getDashStyle(pluckNumber(curCategory.borderdashlen, curCategory.labelborderdashlen, 4),\n              pluckNumber(curCategory.borderdashgap, curCategory.labelborderdashgap, 2))\n            : pluckNumber(curCategory.borderdashed, curCategory.labelborderdashed) ===\n                                0 ? DASH_DEF : style.borderDash\n        };\n        // Set the categorylabel text-bound cosmetics\n        categoryLabel[textId].config.labelBox['text-bound'] = !text\n          ? []\n          : [pluck(catStyle.backgroundColor, style.backgroundColor),\n            pluck(catStyle.borderColor, style.borderColor),\n            pluck(catStyle.borderThickness, style.borderThickness),\n            pluck(catStyle.borderPadding, style.borderPadding),\n            pluck(catStyle.borderRadius, style.borderRadius),\n            pluck(catStyle.borderDash, style.borderDash)];\n\n        axisAttrObj['text-bound'] = categoryLabel[textId].config.labelBox['text-bound'];\n\n        axis.components.labels[i].config.props.label.css = css;\n        axis.components.labels[i].config.props.label.attr = Object.assign(\n          axis.components.labels[i].config.props.label.attr,\n          axisAttrObj\n        );\n      }\n    }\n  }\n  /**\n   * Draws the category labels of the axis\n   */\n  _drawCategory () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      animationManager = chart.getFromEnv('animationManager'),\n      labels = axisConfig.labels,\n      style = labels.style,\n      axisContainer = axisConfig.axisContainer,\n      category = axisConfig.tickValues.tickValue,\n      raiseEvent = function (event) {\n        return function (data) {\n          var ele = this;\n          chart.plotEventHandler(ele, data, event);\n        };\n      },\n      toolTipController = axis.getFromEnv('toolTipController'),\n      counter = 0,\n      i,\n      max,\n      min,\n      curCategory,\n      textElement,\n      textElemCheck,\n      css,\n      axisAttrObj,\n      curCategoryValue,\n      removeElem,\n      id,\n      textId,\n      mapArr = [],\n      removeElementsArr,\n      /**\n       * Removes element which are required anymore.\n       * @param {any} arrOfId array\n       */\n      removeElements = arrOfId => {\n        for (i = 0; i < arrOfId.length; ++i) {\n          removeElem = axis.getGraphicalElement(arrOfId[i]);\n          removeElem && axis.removeGraphicalElement(removeElem);\n        }\n      };\n\n    min = 0;\n    max = category ? category.length - 1 : 0;\n\n    // checking if labels are to be drawn user can decide or can be decided by axis placeAxis function\n    if (axisConfig.labels.isDraw) {\n      // main loop where the drawing starts\n      for (i = min, counter = 0; i <= max; i++) {\n        curCategory = category[i];\n        // TODO : need to\n        curCategoryValue = pluckNumber(curCategory.x, curCategory.y, i);\n        // if values are not limit value and label drawing is off other\n        // than limit increment it and continue\n        if (!axisConfig.labels.drawNormalVal && !(axisConfig.labels.drawLimitVal && (i === min ||\n                            curCategoryValue === max))) {\n          continue;\n        }\n        if (!axisConfig.labels.drawNormalVal && !(curCategoryValue === min ||\n                            curCategoryValue === max)) {\n          continue;\n        }\n        // if value are limit value but limit value are not mean to be drawn\n        if (!axisConfig.labels.drawLimitVal && (curCategoryValue === min || curCategoryValue === max)) {\n          continue;\n        }\n        textId = 'Label' + (id || i);\n        mapArr.push(textId);\n\n        axisAttrObj = axis.components.labels[i].config.props.label.attr;\n        css = axis.components.labels[i].config.props.label.css;\n\n        textElemCheck = axis.getGraphicalElement(textId);\n        textElement = animationManager.setAnimation({\n          css,\n          el: textElemCheck || 'text',\n          attr: axisAttrObj,\n          container: axisContainer,\n          component: axis,\n          label: 'polarLabel'\n        });\n\n        // Attach/remove tooltip\n        if (axisConfig.showTooltip && curCategory.tooltext) {\n          toolTipController.enableToolTip(textElement, curCategory.tooltext);\n        } else {\n          toolTipController.disableToolTip(textElement);\n        }\n\n        textElement.data(EVENTARGS, {\n          link: curCategory.link || curCategory.labellink || style.labelLink,\n          text: axisAttrObj.text,\n          index: counter\n        });\n        if (!textElemCheck) {\n          axis.addGraphicalElement(textId, textElement);\n          // Attach event handler to category label\n          textElement.on('fc-click', raiseEvent('datalabelclick'))\n            .hover(raiseEvent('dataLabelRollOver'), raiseEvent('dataLabelRollOut'));\n        }\n\n        counter += 1;\n      }\n\n      axisConfig.labelMap = axisConfig.labelMap || [];\n      removeElementsArr = diff(axisConfig.labelMap, mapArr);\n    } else {\n      removeElementsArr = mapArr;\n    }\n    axisConfig.labelMap = mapArr;\n    removeElements(removeElementsArr);\n  }\n\n  /**\n   * translation wil be for radar\n   * @return {number} value 0\n   */\n  getTranslation () {\n    if (this) return 0;\n  }\n\n  /**\n   * returns the reference info\n   * @return {Array} array of object\n  */\n  getReferenceInfo () {\n    return this.config.referenceInfo;\n  }\n\n  /**\n   * Sets the visible range of the axis. Also sets axis's reference values and re-calculates PVR.\n   * @param  {number} minValue The minimum value of the area to be visible\n   * @param  {number} maxValue The maximum value of the area to be visible\n   * @return {boolean} Whether the visible range of the axis was successfully set or not\n   */\n  setVisibleConfig (minValue, maxValue) {\n    let axis = this,\n      axisConfig = axis.config,\n      scale = axis.getScale(),\n      domain;\n\n    if (minValue >= maxValue ||\n      minValue < axisConfig.axisRange.min ||\n      maxValue > axisConfig.axisRange.max) {\n      return false;\n    }\n\n    domain = scale.setDomain([minValue, maxValue]).getDomain();\n    axisConfig.visibleMin = domain[0];\n    axisConfig.visibleMax = domain[1];\n\n    axis.clearReferenceInfo();\n\n    axis._parseReferenceVisuals();\n\n    axis.fireEvent('visiblerangeset', { minValue, maxValue });\n    axis.asyncDraw();\n\n    return true;\n  }\n\n  /**\n   * will call api for parsing reference visuals\n  */\n  _parseReferenceVisuals () {\n    this.config.drawPlotlines && this._parseCategoryPlotLine();\n  }\n\n  /**\n   * will clear the reference visuals\n  */\n  clearReferenceInfo () {\n    let axisConfig = this.config;\n    axisConfig.referenceInfo = [];\n  }\n  _setAxisRange (data) {\n    var min = data.min,\n      max = data.max,\n      axisConfig = this.config,\n      axisRange = axisConfig.axisRange,\n      divGap = data.divGap,\n      step;\n\n    if (min > max) {\n      return;\n    }\n\n    step = (max - min) / (axisConfig.categoryNumDivLines + 1);\n\n    this.getScale().setDomain([min, max]);\n    axisConfig.ticks = range(min, max, step).concat(max);\n    axisConfig._allTicks = axisConfig.ticks.slice();\n    axisRange.min = min;\n    axisRange.max = max;\n    axisRange.tickInterval = divGap || step;\n\n    this.setVisibleConfig(axisRange.min, axisRange.max);\n  }\n}\n\nPolar.prototype.setTickValues = setTickValues;\nPolar.prototype.shiftLabels = shiftLabels;\nPolar.prototype._createContainer = _createContainer;\nPolar.prototype.setAxisPadding = setAxisPadding;\nPolar.prototype.getPixel = getPixel;\nPolar.prototype.getLabel = getLabel;\n\nexport default Polar;\n","import fadeInAtAxis from './polar-axis.animation';\nexport default {\n  'initial.axis.polar': function () {\n    return {\n      'path.appearing': fadeInAtAxis,\n      'text.appearing': fadeInAtAxis\n    };\n  }\n};\n","import polarCanvas from '../_internal/components/canvases/polar-canvas';\nimport axisRefVisualPolar from '@fusioncharts/core/src/axis-ref-visuals/axis-ref-polar-component';\n// import axisRefVisual from '../components/axis-ref-visuals-polar';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n\n/**\n * polarCanvas factory creates polarCanvas for radar chart\n *\n * @export\n * @param {any} chart chartAPI\n */\nexport default function (chart) {\n  let pCanvas;\n  componentFactory(chart, polarCanvas, 'canvas', chart.config.showVolumeChart ? 2 : 1);\n  pCanvas = chart.getChildren('canvas');\n  for (let i = 0, len = pCanvas.length; i < len; i++) {\n    pCanvas[i].configure();\n    componentFactory(pCanvas[i], axisRefVisualPolar, 'axisRefVisualPolar');\n  }\n}\n","import Canvas from '@fusioncharts/charts/src/_internal/components/canvases/canvas';\nimport { polarToCartesian } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport { pluckNumber, pluck, convertColor } from '@fusioncharts/core/src/lib';\n\nclass PolarCanvas extends Canvas {\n  /**\n   * Returns name of component\n   *\n   * @return {any}\n   * @memberof polarCanvas\n   */\n  getName () {\n    return 'polarCanvas';\n  }\n\n  /**\n   * Returns type of component\n   *\n   * @return {any}\n   * @memberof polarCanvas\n   */\n  getType () {\n    return 'canvas';\n  }\n\n  configureAttributes () {\n    super.configureAttributes();\n    let canvas = this,\n      canvasConfig = canvas.config,\n      chart = canvas.getFromEnv('chart'),\n      JSONData = chart.getFromEnv('dataSource'),\n      FCChartObj = JSONData.chart,\n      colorM = chart.getFromEnv('color-manager');\n\n    canvasConfig.radarBorderColor = convertColor(pluck(FCChartObj.radarbordercolor,\n      colorM.getColor('divLineColor')),\n    pluckNumber(FCChartObj.radarborderalpha, 100));\n    canvasConfig.radarFillColor = convertColor(pluck(FCChartObj.radarfillcolor,\n      colorM.getColor('altHGridColor')),\n    pluckNumber(FCChartObj.radarfillalpha, colorM.getColor('altHGridAlpha')));\n    canvasConfig.radarBorderThickness = pluckNumber(FCChartObj.radarborderthickness, 2);\n    canvasConfig.showRadarBorder = pluckNumber(FCChartObj.showradarborder, 1);\n  }\n\n  /**\n   * Draws group and canvas\n   *\n   * @memberof polarCanvas\n   */\n  draw () {\n    this.createGroup();\n    this.drawCanvas();\n  }\n\n  /**\n   * Draws the radar border and background\n   *\n   * @memberof polarCanvas\n   */\n  drawCanvas () {\n    let canvas = this,\n      canvasConfig = this.config,\n      chart = canvas.getFromEnv('chart'),\n      chartConfig = chart.config,\n      axis = chart.getChildren('xAxis')[0],\n      animationManager = chart.getFromEnv('animationManager'),\n      radarBorderContainerDummy = canvas.getContainer('radarBorderContainer'),\n      radarBorderContainer,\n      canvasGroup = canvas.getContainer('canvasGroup'),\n      axisConfig = axis.config,\n      radarBorderAttrObj = {\n        stroke: canvasConfig.radarBorderColor,\n        fill: canvasConfig.radarFillColor,\n        'stroke-width': canvasConfig.radarBorderThickness,\n        path: []\n      },\n      i,\n      category = axisConfig.tickValues.tickValue,\n      min,\n      max,\n      theta,\n      axisScale = axis.getScale(),\n      radiusXY,\n      radius,\n      radBorderDummy = canvas.getGraphicalElement('radarBorder'),\n      radarBorder,\n      centerX = axisConfig.axisDimention.centerX,\n      centerY = axisConfig.axisDimention.centerY;\n\n    radius = pluckNumber(axisConfig.radius, 0);\n    min = 0;\n    max = category ? category.length - 1 : 0;\n\n    canvasConfig.canvasLeft = canvasConfig.canvasLeft || chartConfig.canvasLeft;\n    canvasConfig.canvasTop = canvasConfig.canvasTop || chartConfig.canvasTop;\n    canvasConfig.canvasWidth = canvasConfig.canvasWidth || chartConfig.canvasWidth;\n    canvasConfig.canvasHeight = canvasConfig.canvasHeight || chartConfig.canvasHeight;\n\n    if (canvasConfig.showRadarBorder !== 0) {\n      radarBorderAttrObj.path.push('M');\n      for (i = min; i <= max; i++) {\n        theta = axisScale.getRangeValue(i);\n        radiusXY = polarToCartesian(radius, theta);\n        radiusXY.x += centerX;\n        radiusXY.y += centerY;\n        radarBorderAttrObj.path.push(radiusXY.x, radiusXY.y, 'L');\n      }\n      radarBorderAttrObj.path.pop();\n      radarBorderAttrObj.path.push('Z');\n    }\n\n    radarBorderContainer = animationManager.setAnimation({\n      el: radarBorderContainerDummy || 'group',\n      attr: {\n        name: 'radarBorderContainer'\n      },\n      container: canvasGroup,\n      component: canvas,\n      label: 'group'\n    });\n\n    if (!radarBorderContainerDummy) {\n      canvas.addContainer('radarBorderContainer', radarBorderContainer);\n    }\n    // Create/Reuse rabBorder0\n    radarBorder = animationManager.setAnimation({\n      el: radBorderDummy || 'path',\n      attr: radarBorderAttrObj,\n      container: radarBorderContainer,\n      component: axis,\n      label: 'path'\n    });\n\n    if (!radBorderDummy) {\n      canvas.addGraphicalElement('radarBorder', radarBorder);\n    }\n    // axis.config.radarBorder = radarBorder;\n  }\n}\n\nexport default PolarCanvas;\n","import AxisRefComponent from './axis-ref-component';\nimport { getCoordinates } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport { pluckNumber } from '../lib';\nimport { addDep } from '../dependency-manager';\nimport axisRefPolarAnimation from './axis-ref-polar.animation';\n\nconst M = 'M',\n  Z = 'Z',\n  L = 'L',\n  getRadius = (axis, point) => {\n    let scale = axis.getScale(),\n      range = axis.config.axisRange;\n\n    return Math.abs(scale.getRangeValue(point) - scale.getRangeValue(range.min));\n  };\naddDep({\n  name: 'axisRefPolarAnimation',\n  type: 'animationRule',\n  extension: axisRefPolarAnimation\n});\nclass AxisRefPolarVisual extends AxisRefComponent {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'axisRefVisuals';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'axisRefVisualsPolar';\n  }\n  /**\n   * Decides the type of line to draw\n   *\n   * @param {any} lineInfo\n   * @param {any} axis\n   * @memberof AxisRefPolarVisual\n   */\n  createLine (lineInfo, axis) {\n    let axisRef = this;\n    if (axis.getName() === 'polarCategory') {\n      return axisRef.createNormalLine(lineInfo, axis);\n    } else if (axis.getName() === 'numeric') {\n      return axisRef.createRadialLine(lineInfo, axis);\n    }\n  }\n\n  /**\n   * Creates radial line\n   *\n   * @param {any} lineInfo\n   * @param {any} axis\n   * @returns {any}\n   * @memberof AxisRefPolarVisual\n   */\n  createRadialLine (lineInfo, axis) {\n    let axisRef = this,\n      xAxis = axisRef.getFromEnv('xAxis')[0],\n      xAxisConfig = xAxis.config,\n      category = xAxisConfig.tickValues.tickValue,\n      yAxis = axis,\n      axisRefConfig = axisRef.config,\n      containersArr = axisRefConfig.containers,\n      container = containersArr[lineInfo.layer],\n      animationManager = axisRef.getFromEnv('animationManager'),\n      toolTipController = axisRef.getFromEnv('toolTipController'),\n      i,\n      key,\n      min,\n      max,\n      radius,\n      lineAttr = lineInfo.attr,\n      pathAr = [M],\n      coordinate,\n      compId = yAxis.getId(),\n      eleId = lineInfo.id || lineInfo.from,\n      lineEleId = compId + '_' + eleId,\n      handlers = lineInfo.handlers,\n      element = axisRef.getGraphicalElement(lineEleId);\n\n    radius = getRadius(yAxis, lineInfo.from);\n    min = 0;\n    max = category ? category.length - 1 : 0;\n\n    for (i = min; i <= max; i++) {\n      coordinate = getCoordinates({\n        radius: radius,\n        theta: i\n      }, xAxis);\n      pathAr.push(coordinate.x, coordinate.y, L);\n    }\n    pathAr.pop();\n    pathAr.push(Z);\n\n    lineAttr.path = pathAr;\n\n    element = axisRef.addGraphicalElement(lineEleId, animationManager.setAnimation({\n      container,\n      el: element || 'path',\n      attr: lineAttr,\n      component: axisRef,\n      label: 'path'\n    }));\n\n    if (lineInfo.toolText) {\n      toolTipController.enableToolTip(element, lineInfo.toolText);\n    } else {\n      toolTipController.disableToolTip(element);\n    }\n\n    for (key in handlers) {\n      if (handlers.hasOwnProperty(key)) {\n        element.on(key, handlers[key].bind(axis));\n      }\n    }\n    return [lineEleId];\n  }\n\n  /**\n   * Draws normal line\n   *\n   * @param {any} lineInfo\n   * @param {any} axis\n   * @memberof AxisRefPolarVisual\n   */\n  createNormalLine (lineInfo, axis) {\n    let axisRef = this,\n      axisRefConfig = axisRef.config,\n      axisConfig = axis.config,\n      radius = pluckNumber(axisConfig.radius, 0),\n      pathAr = [M],\n      containersArr = axisRefConfig.containers,\n      container = containersArr[lineInfo.layer],\n      animationManager = axisRef.getFromEnv('animationManager'),\n      toolTipController = axisRef.getFromEnv('toolTipController'),\n      coordinate,\n      key,\n      centerX = axisConfig.axisDimention.centerX,\n      centerY = axisConfig.axisDimention.centerY,\n      compId = axis.getId(),\n      eleId = lineInfo.id || lineInfo.from,\n      lineEleId = compId + '_' + eleId,\n      handlers = lineInfo.handlers,\n      element = axisRef.getGraphicalElement(lineEleId);\n\n    pathAr.push(centerX, centerY, L);\n    coordinate = getCoordinates({\n      radius: radius,\n      theta: lineInfo.from\n    }, axis);\n\n    pathAr.push(coordinate.x, coordinate.y);\n    lineInfo.attr.path = pathAr;\n\n    element = axisRef.addGraphicalElement(lineEleId, animationManager.setAnimation({\n      container,\n      el: element || 'path',\n      attr: lineInfo.attr,\n      component: axisRef,\n      label: 'path'\n    }));\n\n    if (lineInfo.toolText) {\n      toolTipController.enableToolTip(element, lineInfo.toolText);\n    } else {\n      toolTipController.disableToolTip(element);\n    }\n\n    for (key in handlers) {\n      if (handlers.hasOwnProperty(key)) {\n        element.on(key, handlers[key].bind(axis));\n      }\n    }\n    return [lineEleId];\n  }\n  // eslint-disable-next-line\n  createBand () {\n    // super.createBand(x, y);\n    return [];\n  }\n}\n\nexport default AxisRefPolarVisual;\n","import fadeInAtAxis from '../axis/polar-axis.animation';\nexport default {\n  'initial.axis.axisRefVisualsPolar': function () {\n    return {\n      'path.appearing': fadeInAtAxis,\n      'text.appearing': fadeInAtAxis\n    };\n  }\n};\n","import Chord from '@fusioncharts/powercharts/src/chart/chord';\nexport default Chord;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport CommonAPI from '@fusioncharts/charts/src/chart/_internal/commonchartapi';\nimport arrayHasContent from '@fusioncharts/utils/src/type/array-has-content';\nimport isObject from '@fusioncharts/utils/src/type/is-object';\nimport legendItemFactory from '@fusioncharts/charts/src/factories/chord-legend';\nimport nodelinkManagerFactor from '../../factories/node-link-manager';\nimport LinearScale from '@fusioncharts/utils/src/scales/linear';\nimport {\n  parseUnsafeString,\n  pluck,\n  convertColor,\n  getDarkColor,\n  pluckNumber,\n  UNDEF,\n  NORMAL,\n  pluckFontSize,\n  BOLD,\n  hashify,\n  BLANKSTRING\n} from '@fusioncharts/core/src/lib';\nimport equal from '@fusioncharts/utils/src/string/equal';\nimport safeMax from '@fusioncharts/utils/src/array/safe-max';\nimport NodeLinkManager from '../../dataset/chord/node-link-manager';\nimport { _manageLegendSpace } from '@fusioncharts/charts/src/chart/_internal/legend-spacemanager';\n\nconst CHART_STR = 'Chord',\n  POST = 'post',\n  PRE = 'pre',\n  DEFAULT_PALETTE_COLOR = [\n    '1E77B4',\n    'FF7F0E',\n    '2BA02C',\n    'D62728',\n    '9466BD',\n    '8C564B',\n    'E376C2',\n    '7F7F7F',\n    'BCBD22',\n    '17BECF'\n  ],\n  DEACTIVE_COLOR = '#c4c4c4',\n  DEFAULT_BG_COLOR = 'FFFFFF,FFFFFF',\n  TANGENTIAL = 'tangential',\n  OUTSIDE = 'outside',\n  INSIDE = 'inside',\n  DEF_FONT_FAMILY = 'Verdana,sans',\n  ITALIC = 'italic',\n  NODE_LABEL_COLOR = '#5F5F5F',\n  LABEL_POSITIONS = [TANGENTIAL, OUTSIDE, INSIDE],\n  isValidLink = obj => isObject(obj) &&\n    parseUnsafeString(obj.from) &&\n    parseUnsafeString(obj.to),\n  isValidNode = (obj, nodeMap) => isObject(obj) && parseUnsafeString(obj.label) && nodeMap[obj.label];\n\n/**\n * Creates radar class\n * @class\n */\nclass Chord extends CommonAPI {\n  constructor (id) {\n    super(id);\n    const chart = this;\n    chart.deregisterFactory('canvas');\n    chart.registerFactory('legend', legendItemFactory);\n    chart.registerFactory('nodelinkManager', nodelinkManagerFactor);\n    chart.defaultPaletteOptions = {\n      // Store colors now\n      paletteColors:\n        [\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR\n        ],\n      bgColor: [\n        DEFAULT_BG_COLOR,\n        DEFAULT_BG_COLOR,\n        DEFAULT_BG_COLOR,\n        DEFAULT_BG_COLOR,\n        DEFAULT_BG_COLOR\n      ]\n    };\n  }\n\n  /**\n   * Sets the default configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    const config = this.config;\n    // for skipping drawing of canvas\n    config.skipCanvasDrawing = true;\n    config.friendlyName = CHART_STR;\n    config.nodes = {};\n    config.mode = POST;\n    config.isPost = true;\n    config.nodeSpacing = 2;\n    config.minNodeSize = 0.01;\n    config.startingAngle = 0;\n    config.links = {};\n    config.linksOrder = [];\n    config.nodesOrder = [];\n    config.totalAngle = 360;\n    config.clockwise = 1;\n    config.nodeLabelGap = 10;\n    config.nodeLabelPosition = 10;\n    config.nodeThickness = 12;\n    // config.total = 0;\n    config.nodeLinkPadding = 3;\n    config.linkAlpha = 70;\n    config.linkBorderAlpha = 100;\n    config.linkBorderThickness = 1;\n    config.nodeHoverAlpha = 100;\n    config.linkHoverAlpha = 100;\n    config.nodeHoverColor = UNDEF;\n    config.linkHoverColor = UNDEF;\n    config.showNodeLabels = 1;\n    config.showNodeBorder = 1;\n    config.showLinkBorder = 1;\n    config.nodeBorderColor = UNDEF;\n    config.nodeBorderThickness = 1;\n    config.nodeBorderDashed = 0;\n    config.nodeBorderDashedLen = 2;\n    config.nodeBorderDashedGap = 1;\n    config.nodeBorderAlpha = 100;\n    config.showLinkValueOnHover = 1;\n    config.nodeAlpha = 70;\n    config.nodeLabelPosition = TANGENTIAL;\n    config.nodeLabelFont = DEF_FONT_FAMILY;\n    config.nodeLabelFontSize = 12;\n    config.nodeLabelFontBold = NORMAL;\n    config.nodeLabelFontItalic = NORMAL;\n    config.highlightEffect = 1;\n    config.enableToggle = 1;\n    config.chordradius = 100;\n    config.nodeLabelColor = NODE_LABEL_COLOR;\n    config.unfocussedAlpha = 35;\n    config.deactiveNodeColor = DEACTIVE_COLOR;\n    config.sortOrder = UNDEF;\n    config.tooltipsepchar = BLANKSTRING;\n    config.linkColorByDominance = 1;\n    config.useEllipsesOnOverflow = 1;\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    let chart = this,\n      config = chart.config,\n      { nodes, links } = config,\n      nodesArr = config.nodesOrder,\n      linksArr = config.linksOrder,\n      connectors = config.connectors = dataObj.links,\n      len = connectors.length,\n      numberFormatter = chart.getFromEnv('number-formatter'),\n      chartAttrs = dataObj.chart,\n      colorM = chart.getFromEnv('color-manager'),\n      i;\n\n    config.mode = chartAttrs.mode === PRE ? PRE : POST;\n    config.isPost = equal(config.mode, POST);\n\n    // Parse chart attributes\n    config.minNodeSize = pluckNumber(chartAttrs.minnodesize, config.minNodeSize);\n    config.startingAngle = pluckNumber(chartAttrs.startingangle, config.startingAngle);\n    config.totalAngle = pluckNumber(chartAttrs.totalangle, config.totalAngle);\n    config.nodeLabelGap = pluckNumber(chartAttrs.nodelabelpadding, config.nodeLabelGap);\n    config.nodeThickness = pluckNumber(chartAttrs.nodethickness, config.nodeThickness);\n    config.nodeSpacing = pluckNumber(chartAttrs.nodespacing, config.nodeSpacing);\n    config.clockwise = pluckNumber(chartAttrs.clockwise, config.clockwise);\n    config.nodeLinkPadding = pluckNumber(chartAttrs.nodelinkpadding, config.nodeLinkPadding);\n    config.linkAlpha = pluckNumber(chartAttrs.linkalpha, config.linkAlpha);\n    config.linkBorderAlpha = pluckNumber(chartAttrs.linkborderalpha, config.linkBorderAlpha);\n    config.linkBorderThickness = pluckNumber(chartAttrs.linkborderthickness, config.linkBorderThickness);\n    config.nodeHoverAlpha = pluckNumber(chartAttrs.nodehoveralpha, config.nodeHoverAlpha);\n    config.linkHoverAlpha = pluckNumber(chartAttrs.linkhoveralpha, config.linkHoverAlpha);\n    config.showLinkValueOnHover = pluckNumber(chartAttrs.showlinkvalueonhover, config.showLinkValueOnHover);\n    // config.nodeHoverColor = pluck(chartAttrs.nodehovercolor, config.nodeHoverColor);\n    // config.linkHoverColor = pluck(chartAttrs.linkhovercolor, config.linkHoverColor);\n    config.showNodeLabels = pluckNumber(chartAttrs.shownodelabels, config.showNodeLabels);\n    config.showNodeBorder = pluckNumber(chartAttrs.shownodeborder, config.showNodeBorder);\n    config.showLinkBorder = pluckNumber(chartAttrs.showlinkborder, config.showLinkBorder);\n    config.nodeBorderColor = pluck(chartAttrs.nodebordercolor, config.nodeBorderColor);\n    config.nodeBorderThickness = pluckNumber(chartAttrs.nodeborderthickness, config.nodeBorderThickness);\n    config.nodeBorderDashed = pluckNumber(chartAttrs.nodeborderdashed, config.nodeBorderDashed);\n    config.nodeBorderDashedLen = pluckNumber(chartAttrs.nodeborderdashedlen, config.nodeBorderDashedLen);\n    config.nodeBorderDashedGap = pluckNumber(chartAttrs.nodeborderdashedgap, config.nodeBorderDashedGap);\n    config.nodeBorderAlpha = pluckNumber(chartAttrs.nodeborderalpha, config.nodeBorderAlpha);\n    config.nodeAlpha = pluckNumber(chartAttrs.nodealpha, config.nodeAlpha);\n    config.nodeLabelPosition = LABEL_POSITIONS.includes(chartAttrs.nodelabelposition) ? chartAttrs.nodelabelposition : config.nodeLabelPosition;\n    config.nodeLabelFont = pluck(chartAttrs.nodelabelfont, chartAttrs.basefont, config.nodeLabelFont);\n    config.nodeLabelFontSize = pluckFontSize(chartAttrs.nodelabelfontsize,\n      this.computeFontSize(chartAttrs.basefontsize), config.nodeLabelFontSize);\n    config.nodeLabelFontBold = pluckNumber(chartAttrs.nodelabelfontbold, 0) ? BOLD : NORMAL;\n    config.nodeLabelColor = pluck(chartAttrs.nodelabelcolor, chartAttrs.basefontcolor, config.nodeLabelColor);\n    config.nodeLabelFontItalic = pluckNumber(chartAttrs.nodelabelfontitalic, 0) ? ITALIC : NORMAL;\n    config.highlightEffect = pluckNumber(chartAttrs.highlighteffect, config.highlightEffect);\n    config.enableToggle = pluckNumber(chartAttrs.enabletoggle, config.enableToggle);\n    config.chordradius = Math.max(pluckNumber(chartAttrs.chordradius, config.chordradius), 0);\n    config.unfocussedAlpha = pluckNumber(chartAttrs.unfocussedalpha, config.unfocussedAlpha);\n    config.deactiveNodeColor = pluck(chartAttrs.deactivenodecolor, config.deactiveNodeColor);\n    config.sortOrder = pluck(chartAttrs.sortorder, config.sortOrder);\n    config.linkColorByDominance = pluckNumber(chartAttrs.linkcolorbydominance, config.linkColorByDominance);\n    config.textOutline = pluckNumber(chartAttrs.textoutline, 0);\n    config.useEllipsesOnOverflow = pluckNumber(chartAttrs.useellipsesonoverflow, config.useEllipsesOnOverflow);\n    config.datalabelStyle = {\n      'font-size': config.nodeLabelFontSize,\n      'font-family': config.nodeLabelFont,\n      'font-weight': config.nodeLabelFontBold,\n      'font-style': config.nodeLabelFontItalic\n    };\n\n    // when labels are kept inside the there is no node label gap\n    if (config.nodeLabelPosition === INSIDE) {\n      config.nodeLabelGap = 0;\n    }\n\n    // creating valid nodes link\n    for (i = 0; i < len; ++i) {\n      if (isValidLink(connectors[i])) {\n        let connector = connectors[i],\n          { from, to, value, tooltext } = connector,\n          sanitisedValue = safeMax([numberFormatter.getCleanValue(value), 0], Number),\n          key,\n          link;\n        from = parseUnsafeString(from);\n        to = parseUnsafeString(to);\n        key = [from, to].sort().toString();\n        if (!nodes[from]) {\n          nodes[from] = {\n            index: nodesArr.push(from) - 1,\n            total: 0,\n            adjustedTotal: 0,\n            nodeCovered: 0,\n            label: from,\n            linkedLinks: [],\n            scale: new LinearScale(),\n            active: true,\n            nodeLabelGap: config.nodeLabelGap,\n            unfocussed: false,\n            hovered: false,\n            toolTipSepChar: config.tooltipsepchar,\n            showToolTip: config.showToolTip\n          };\n        }\n        if (!nodes[to]) {\n          nodes[to] = {\n            index: nodesArr.push(to) - 1,\n            total: 0,\n            adjustedTotal: 0,\n            nodeCovered: 0,\n            label: to,\n            linkedLinks: [],\n            scale: new LinearScale(),\n            active: true,\n            nodeLabelGap: config.nodeLabelGap,\n            unfocussed: false,\n            hovered: false,\n            toolTipSepChar: config.tooltipsepchar,\n            showToolTip: config.showToolTip\n          };\n        }\n        if (!links[key]) {\n          link = links[key] = {\n            key,\n            points: [],\n            dominantNode: [],\n            subservientNode: [],\n            subservientFlowDataValue: [],\n            dominantFlowDataValue: [],\n            dominantNodeColor: [],\n            subservientNodeColor: [],\n            index: linksArr.push(key) - 1,\n            linkedNodes: config.isPost ? [to, from] : [from, to],\n            tooltip: {},\n            visible: true,\n            tooltext: tooltext,\n            unfocussed: false,\n            hovered: false,\n            focussedState: {},\n            unfocussedState: {},\n            normalState: {},\n            sanitisedValue: 0,\n            toolTipSepChar: config.tooltipsepchar,\n            showToolTip: config.showToolTip\n          };\n          nodes[from].linkedLinks.push(key);\n          nodes[to].linkedLinks.push(key);\n          link.alpha = pluckNumber(connector.alpha, config.linkAlpha);\n          link.hoverAlpha = pluckNumber(connector.hoveralpha, config.linkHoverAlpha);\n          link.borderAlpha = pluckNumber(connector.borderalpha, config.linkBorderAlpha);\n          link.tooltext = pluck(connector.tooltext, config.linktooltext, UNDEF);\n          link.showBorder = config.showLinkBorder;\n          link.borderThickness = config.linkBorderThickness;\n          link.unfocussedAlpha = pluckNumber(connector.unfocussedAlpha, config.unfocussedAlpha);\n          link.style = config.datalabelStyle;\n        } else {\n          link = links[key];\n        }\n\n        nodes[config.isPost ? to : from].total += sanitisedValue;\n        // config.total += sanitisedValue;\n        link.tooltip[`${from} to ${to}`] = {\n          value: numberFormatter.dataLabels(sanitisedValue)\n        };\n        link.showLinkValueOnHover = config.showLinkValueOnHover;\n        link[config.isPost ? to : from] = sanitisedValue;\n        links[key].sanitisedValue += sanitisedValue;\n      }\n    }\n\n    for (const key in links) {\n      if (links.hasOwnProperty(key) && links[key].sanitisedValue === 0) {\n        delete links[key];\n        config.linksOrder = linksArr = linksArr.filter(link => link !== key);\n        key.split(',').forEach(label => {\n          nodes[label].linkedLinks =\n            nodes[label].linkedLinks.filter(linkedLink => linkedLink !== key);\n        });\n      }\n    }\n\n    // copying all the node level configurations in valid nodes\n    if (arrayHasContent(dataObj.nodes)) {\n      dataObj.nodes.forEach(node => {\n        if (isValidNode(node, nodes)) {\n          let label = parseUnsafeString(node.label);\n          nodes[label] = Object.assign({}, node, nodes[label]);\n        }\n      });\n    }\n\n    // require good name and value\n    if (config.sortOrder === 'ascending') {\n      nodesArr.sort((key1, key2) => nodes[key1].total - nodes[key2].total);\n    } else if (config.sortOrder === 'descending') {\n      nodesArr.sort((key1, key2) => nodes[key2].total - nodes[key1].total);\n    }\n\n    // Parse node cosmetics\n    nodesArr.forEach((label, index) => {\n      let node = nodes[label],\n        resolvedStrokeWidth = (config.showNodeBorder ? config.nodeBorderThickness : 0) || 0;\n      node.index = index;\n      node.label = parseUnsafeString(node.label);\n      node.alpha = pluckNumber(node.alpha, config.nodeAlpha);\n      node.borderAlpha = pluckNumber(node.borderalpha, config.nodeBorderAlpha);\n      node.hoverAlpha = pluckNumber(node.hoveralpha, config.nodeHoverAlpha);\n      node.borderDashedLen = pluckNumber(node.borderdashedlen, config.nodeBorderDashedLen);\n      node.borderDashedGap = pluckNumber(node.borderdashedgap, config.nodeBorderDashedGap);\n      node.borderDashed = pluckNumber(node.borderdashed, config.nodeBorderDashed) ? [node.borderDashedLen, node.borderDashedGap] : 'none';\n\n      node.rawColor = pluck(node.color, colorM.getPlotColor(index));\n      node.unfocussedAlpha = pluckNumber(node.unfocussedalpha, config.unfocussedAlpha);\n      node.borderColor = pluck(node.bordercolor, config.nodeBorderColor, getDarkColor(node.rawColor, 80));\n      node.tooltext = pluck(node.tooltext, chartAttrs.plottooltext, UNDEF);\n\n      node.color = hashify(node.rawColor);\n      node.labelPosition = pluck(node.labelposition, config.nodeLabelPosition);\n      node.nodeLabelGap = config.nodeLabelGap;\n      // Export error when textPaths are used\n      if (pluckNumber(chartAttrs.exportenabled) && (node.labelPosition === OUTSIDE || node.labelPosition === INSIDE)) {\n        node.showLabel = 0;\n      } else {\n        node.showLabel = pluckNumber(node.showlabel, config.showNodeLabels);\n      }\n      node.showBorder = config.showNodeBorder;\n      node.labelColor = pluck(node.labelcolor, config.nodeLabelColor);\n      node.style = config.datalabelStyle;\n\n      node.focussedState = {\n        fill: convertColor(node.rawColor, node.hoverAlpha),\n        stroke: convertColor(node.borderColor, node.borderAlpha),\n        'stroke-width': resolvedStrokeWidth,\n        'stroke-dasharray': node.borderDashed\n      };\n      node.normalState = {\n        fill: convertColor(node.rawColor, node.alpha),\n        stroke: convertColor(node.borderColor, node.borderAlpha),\n        'stroke-width': resolvedStrokeWidth,\n        'stroke-dasharray': node.borderDashed\n      };\n      node.unfocussedState = {\n        fill: convertColor(node.rawColor, node.unfocussedAlpha),\n        stroke: convertColor(node.borderColor, node.unfocussedAlpha),\n        'stroke-width': resolvedStrokeWidth,\n        'stroke-dasharray': node.borderDashed\n      };\n      node.deactiveState = {\n        fill: config.deactiveNodeColor,\n        stroke: config.deactiveNodeColor,\n        'stroke-width': resolvedStrokeWidth,\n        'stroke-dasharray': node.borderDashed\n      };\n      node.linkedLinks.forEach(key => {\n        const startsWithRegex = new RegExp(`^${node.label}`),\n          tooltip = links[key].tooltip;\n        for (let toolKey in tooltip) {\n          if (tooltip.hasOwnProperty(toolKey) && startsWithRegex.test(toolKey)) {\n            tooltip[toolKey].color = node.color;\n          }\n        }\n      });\n    });\n    linksArr.forEach(key => {\n      let link = links[key],\n        [from, to] = link.linkedNodes;\n\n      if (from === to) {\n        link.dominantNode.push(from);\n        link.subservientNode.push(from);\n        link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n        link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n        link.dominantNodeColor.push(nodes[from].color);\n        link.subservientNodeColor.push(nodes[from].color);\n        // for equal contributing nodes\n      } if (link[to] === link[from]) {\n        link.dominantNode.push(from, to);\n        link.subservientNode.push(to, from);\n        link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[to]));\n        link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n        link.dominantNodeColor.push(nodes[from].color, nodes[to].color);\n        link.subservientNodeColor.push(nodes[to].color, nodes[from].color);\n      } else {\n        if (config.isPost) {\n          if ((link[to] || 0) > (link[from] || 0)) {\n            config.linkColorByDominance ? link.dominantNode.push(to) : link.dominantNode.push(from);\n            config.linkColorByDominance ? link.subservientNode.push(from) : link.subservientNode.push(to);\n            config.linkColorByDominance ? link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[to])) : link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n            config.linkColorByDominance ? link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[from])) : link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[to]));\n            config.linkColorByDominance ? link.dominantNodeColor.push(nodes[to].color) : link.dominantNodeColor.push(nodes[from].color);\n            config.linkColorByDominance ? link.subservientNodeColor.push(nodes[from].color) : link.subservientNodeColor.push(nodes[to].color);\n          } else {\n            config.linkColorByDominance ? link.dominantNode.push(from) : link.dominantNode.push(to);\n            config.linkColorByDominance ? link.subservientNode.push(to) : link.subservientNode.push(from);\n            config.linkColorByDominance ? link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from])) : link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[to]));\n            config.linkColorByDominance ? link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[to])) : link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n            config.linkColorByDominance ? link.dominantNodeColor.push(nodes[from].color) : link.dominantNodeColor.push(nodes[to].color);\n            config.linkColorByDominance ? link.subservientNodeColor.push(nodes[to].color) : link.subservientNodeColor.push(nodes[from].color);\n          }\n        } else {\n          if ((link[to] || 0) > (link[from] || 0)) {\n            config.linkColorByDominance ? link.dominantNode.push(from) : link.dominantNode.push(to);\n            config.linkColorByDominance ? link.subservientNode.push(to) : link.subservientNode.push(from);\n            config.linkColorByDominance ? link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from])) : link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[to]));\n            config.linkColorByDominance ? link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[to])) : link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n            config.linkColorByDominance ? link.dominantNodeColor.push(nodes[from].color) : link.dominantNodeColor.push(nodes[to].color);\n            config.linkColorByDominance ? link.subservientNodeColor.push(nodes[to].color) : link.subservientNodeColor.push(nodes[from].color);\n          } else {\n            config.linkColorByDominance ? link.dominantNode.push(to) : link.dominantNode.push(from);\n            config.linkColorByDominance ? link.subservientNode.push(from) : link.subservientNode.push(to);\n            config.linkColorByDominance ? link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[to])) : link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n            config.linkColorByDominance ? link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[from])) : link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[to]));\n            config.linkColorByDominance ? link.dominantNodeColor.push(nodes[to].color) : link.dominantNodeColor.push(nodes[from].color);\n            config.linkColorByDominance ? link.subservientNodeColor.push(nodes[from].color) : link.subservientNodeColor.push(nodes[to].color);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  static getName () {\n    return 'Chord';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Chord';\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @return {string} dataset defination\n   */\n  getDSdef () {\n    return NodeLinkManager;\n  }\n\n  /**\n   * function to calculate and allote space for legend\n   */\n  _manageLegendSpace () {\n    _manageLegendSpace.call(this);\n  }\n\n  _spaceManager () {\n    let chart = this,\n      config = chart.config,\n      height,\n      width,\n      cx,\n      cy,\n      nodesLinkManager = chart.getChildren('node-link-manager')[0],\n      maxNodeDim,\n      maxRadius,\n      minRadius,\n      maxSpace;\n\n    config.showLegend && chart._manageLegendSpace();\n    chart._manageChartMenuBar(config.availableHeight * 0.6);\n    chart.allocateDimensionOfChartMenuBar();\n    chart.config.showLegend && chart.getChildren('legend') && chart.getChildren('legend')[0].postSpaceManager();\n\n    height = config.canvasHeight;\n    width = config.canvasWidth;\n    cx = config.canvasLeft + width / 2;\n    cy = config.canvasTop + height / 2;\n    maxRadius = Math.min(height, width) / 2;\n    minRadius = maxRadius * 0.3;\n    maxSpace = maxRadius - minRadius - config.nodeLabelGap;\n\n    maxNodeDim = nodesLinkManager._manageSpace({\n      maxSpace\n    });\n\n    chart.config.cx = cx;\n    chart.config.cy = cy;\n\n    const nodeOuterRadius = Math.max((maxRadius - maxNodeDim.width - config.nodeLabelGap) * config.chordradius / 100, minRadius),\n      nodeInnerRadius = nodeOuterRadius - config.nodeThickness,\n      ribbonRadius = nodeInnerRadius - config.nodeLinkPadding;\n\n    config.ribbonRadius = ribbonRadius;\n\n    nodesLinkManager.setDimension({ nodeOuterRadius, nodeInnerRadius, ribbonRadius });\n    nodesLinkManager.setTranslation(cx, cy);\n  }\n  /**\n   * Function to check if the chart has the proper data or not\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidData () {\n    const chartInstance = this.getFromEnv('chartInstance');\n\n    // Checking if the chart has proper data\n    if (!arrayHasContent(this.getFromEnv('dataSource').links)) {\n      chartInstance.__state.dataReady = false;\n      chartInstance.jsVars.hasNativeMessage = true;\n      chartInstance.jsVars.drawCount += 1;\n\n      return true;\n    }\n    return !this;\n  }\n\n  _checkInvalidSpecificData () {\n    // temp code\n    return !this;\n  }\n}\nexport default Chord;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport LegendClass from '../_internal/components/legend/discrete';\n\nexport default function (chart) {\n  let legend,\n    count = chart.config.showLegend ? 1 : 0;\n\n  componentFactory(chart, LegendClass, 'legend', count, [{}]);\n\n  legend = chart.getChildren('legend');\n  if (legend && legend[0] && !legend[0].getState('removed')) {\n    chart.addToEnv('legend', legend[0]);\n  } else {\n    chart.deleteFromEnv('legend');\n  }\n}\n","import { componentFactory } from '@fusioncharts/core/src/lib/index.js';\nimport NodeLinkManager from '../dataset/chord/node-link-manager.js';\nexport default function (chart) {\n  let config = chart.config;\n  componentFactory(chart, NodeLinkManager, 'node-link-manager', 1, [{\n    nodes: config.nodes,\n    links: config.links,\n    nodesOrder: config.nodesOrder,\n    linksOrder: config.linksOrder,\n    nodeLabelGap: config.nodeLabelGap,\n    nodeLinkPadding: config.nodeLinkPadding,\n    showLegend: config.showLegend,\n    totalAngle: config.totalAngle,\n    nodeSpacing: config.nodeSpacing,\n    isPost: config.isPost,\n    matrix: config.matrix,\n    startingAngle: config.startingAngle,\n    minNodeSize: config.minNodeSize,\n    highlightEffect: config.highlightEffect,\n    enableToggle: config.enableToggle,\n    datalabelStyle: config.datalabelStyle\n    // total: config.total\n  }]);\n  config.showLegend && chart.getChildren('node-link-manager')[0]._addLegend();\n}\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport nodeFactory from '../../factories/chord-node-factory';\nimport linkFactory from '../../factories/chord-link-factory';\nimport { convertColor, toPrecision, pluckNumber } from '@fusioncharts/core/src/lib';\n\nconst comparator = (a, b) => a - b;\n\nclass NodeLinkManager extends SmartRenderer {\n  constructor (id) {\n    super(id);\n    this.registerFactory('chord-node-factory', nodeFactory);\n    this.registerFactory('chord-link-factory', linkFactory);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.total = 0;\n    config.adjustedTotal = 0;\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    Object.assign(this.config, dataObj);\n    let manager = this,\n      config = manager.config,\n      total,\n      { totalAngle, startingAngle, nodesOrder, nodes, linksOrder, links } = config;\n\n    totalAngle -= (config.nodeSpacing * nodesOrder.length);\n\n    total = config.total = nodesOrder.reduce((acc, label) => acc + nodes[label].total, 0);\n\n    config.adjustedTotal = nodesOrder.reduce((acc, label) => {\n      let node = nodes[label];\n      if (node.total / (total || 1) < config.minNodeSize) {\n        node.adjustedTotal = (total || 1) * config.minNodeSize;\n      } else {\n        node.adjustedTotal = node.total;\n      }\n      return acc + node.adjustedTotal;\n    }, 0);\n\n    config.interactiveLegend = pluckNumber(manager.getFromEnv('chart-attrib').interactivelegend, 1);\n\n    const angleRatio = totalAngle / config.adjustedTotal;\n\n    nodesOrder.forEach(label => {\n      let node = nodes[label];\n      node.startingAngle = startingAngle;\n      node.arcAngle = node.adjustedTotal * angleRatio;\n      node.endingAngle = startingAngle + node.arcAngle;\n      node.scale.setRange([node.startingAngle, node.endingAngle])\n        .setDomain([0, node.adjustedTotal]);\n      startingAngle = node.endingAngle + config.nodeSpacing;\n    });\n\n    linksOrder.forEach(key => {\n      if (links[key].visible) {\n        let link = links[key],\n          from = config.isPost ? link.linkedNodes[1] : link.linkedNodes[0],\n          to = config.isPost ? link.linkedNodes[0] : link.linkedNodes[1],\n          firstNode = nodes[from],\n          secondNode = nodes[to],\n          firstScale = firstNode.scale,\n          secondScale = secondNode.scale,\n          p1 = firstScale.getRangeValue(firstNode.nodeCovered),\n          p2 = firstScale.getRangeValue(firstNode.nodeCovered += (link[from] || 0)),\n          p3,\n          p4;\n        if (link.points.length) {\n          link.points.length = 0;\n        }\n        if (from === to) {\n          p3 = p1;\n          p4 = p2;\n        } else {\n          p3 = secondScale.getRangeValue(secondNode.nodeCovered);\n          p4 = secondScale.getRangeValue(secondNode.nodeCovered += (link[to] || 0));\n        }\n        link.points.push(p1, p2, p3, p4);\n      }\n    });\n\n    // Parse link cosmetics\n    linksOrder.forEach((key) => {\n      let link = links[key],\n        dominantNode = link.dominantNode;\n      link.angles = link.points.slice(0).sort(comparator);\n\n      if (dominantNode.length > 1 && nodes[dominantNode[0]].rawColor !== nodes[dominantNode[1]].rawColor) {\n        const linkArray = nodes[dominantNode[0]].index > nodes[dominantNode[1]].index\n          ? [nodes[dominantNode[1]], nodes[dominantNode[0]]]\n          : [nodes[dominantNode[0]], nodes[dominantNode[1]]];\n        link.rawColor = [linkArray[0].rawColor, linkArray[1].rawColor];\n      } else {\n        link.normalState.fill = convertColor(nodes[dominantNode[0]].rawColor, link.alpha);\n        link.normalState.stroke = convertColor(nodes[dominantNode[0]].rawColor, link.borderAlpha);\n        link.focussedState.fill = convertColor(nodes[dominantNode[0]].rawColor, link.hoverAlpha);\n        link.focussedState.stroke = link.focussedState.fill;\n        link.unfocussedState.fill = convertColor(nodes[dominantNode[0]].rawColor, link.unfocussedAlpha);\n        link.unfocussedState.stroke = link.unfocussedState.fill;\n      }\n    });\n  }\n\n  setDimension (dim) {\n    const manager = this,\n      config = manager.config;\n\n    Object.assign(config, dim);\n\n    manager.getChildren('node') && manager.getChildren('node').forEach(node =>\n      !node.getState('removed') && node.setDimension({\n        outerRadius: config.nodeOuterRadius,\n        innerRadius: config.nodeInnerRadius\n      })\n    );\n    manager.getChildren('ribbon') && manager.getChildren('ribbon').forEach(link =>\n      !link.getState('removed') && link.setDimension({\n        radius: config.ribbonRadius\n      })\n    );\n  }\n\n  _manageSpace (spaceArguments) {\n    const manager = this,\n      widths = manager.getChildren('node').map(node => {\n        return node._manageSpace(spaceArguments);\n      }),\n      maxWidth = Math.max(...widths);\n    return {\n      width: maxWidth,\n      height: maxWidth\n    };\n  }\n\n  _createContainer () {\n    const manager = this,\n      config = manager.config;\n    manager.addGraphicalElement({\n      el: 'group',\n      container: {\n        id: 'plotGroup',\n        isParent: true\n      },\n      component: manager,\n      label: 'link-container',\n      id: 'link-container',\n      attr: {\n        name: 'link-container',\n        transform: config.translate\n      }\n    });\n\n    manager.addGraphicalElement({\n      el: 'group',\n      container: {\n        id: 'plotGroup',\n        isParent: true\n      },\n      component: manager,\n      label: 'node-container',\n      id: 'node-container',\n      attr: {\n        name: 'node-container',\n        transform: config.translate,\n        ...config.datalabelStyle\n      }\n    });\n  }\n\n  draw () {\n    this._createContainer();\n  }\n\n  getName () {\n    return 'node-link-manager';\n  }\n\n  getType () {\n    return 'node-link-manager';\n  }\n\n  _addLegend () {\n    let manager = this,\n      config = manager.config,\n      { nodes, nodesOrder } = config,\n      legend = manager.getFromEnv('legend'),\n      legendItem,\n      legendItemId,\n      legendItemMap = config.legendItemMap || (config.legendItemMap = {}),\n      curLegendItems = new Set();\n\n    Object.keys(legendItemMap).forEach(key => curLegendItems.add(legendItemMap[key]));\n    nodesOrder.forEach(label => {\n      let node = nodes[label];\n      legendItemId = legendItemMap[label];\n      legendItem = legend.getItem(legendItemId);\n      if (!legendItem) {\n        legendItemId = legend.createItem();\n        legendItem = legend.getItem(legendItemId);\n        legendItemMap[label] = legendItemId;\n        manager.addExtEventListener('fc-click', function () {\n          if (manager.config.interactiveLegend) {\n            let clickedNode = manager.config.nodes[label],\n              item = legend.getItem(legendItemMap[label]);\n            manager.nodeClicked(clickedNode.label, item);\n          }\n        }, legendItem);\n        manager.addExtEventListener('fc-mouseover', function () {\n          if (manager.config.interactiveLegend) {\n            manager.nodeHoverIn(label);\n          }\n        }, legendItem);\n        manager.addExtEventListener('fc-mouseout', function () {\n          if (manager.config.interactiveLegend) {\n            manager.nodeHoverOut(label);\n          }\n        }, legendItem);\n      } else {\n        legendItem.removeLegendState('hidden');\n        curLegendItems['delete'](legendItemId);\n      }\n\n      legendItem.configure({\n        enabled: true,\n        label: label\n      });\n\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          rawFillColor: node.color,\n          rawStrokeColor: node.color,\n          fill: node.color,\n          stroke: node.color\n        }\n      });\n    });\n\n    curLegendItems.forEach(item => {\n      legend.disposeItem(item);\n    });\n  }\n\n  nodeClicked (clickedNodeLabel, legendItem) {\n    if (this.config.enableToggle) {\n      let config = this.config,\n        { nodes, nodesOrder, links } = config,\n        clickedNode = nodes[clickedNodeLabel],\n        linkedLinks = clickedNode.linkedLinks,\n        isActive = clickedNode.active;\n\n      if (clickedNode.active) {\n        legendItem && legendItem.setLegendState('hidden');\n      } else {\n        legendItem && legendItem.removeLegendState('hidden');\n      }\n\n      clickedNode.active = !isActive;\n      linkedLinks.forEach(key => {\n        let link = links[key],\n          from = config.isPost ? link.linkedNodes[1] : link.linkedNodes[0],\n          to = config.isPost ? link.linkedNodes[0] : link.linkedNodes[1],\n          fromNode = nodes[from],\n          toNode = nodes[to],\n          isVisisble = link.visible;\n        link.visible = fromNode.active && toNode.active;\n        if (link.visible !== isVisisble) {\n          if (link.visible) {\n            fromNode.total = toPrecision(fromNode.total + (link[from] || 0), 4);\n            if (to !== from) {\n              toNode.total = toPrecision(toNode.total + (link[to] || 0), 4);\n            }\n          } else {\n            fromNode.total = toPrecision(fromNode.total - (link[from] || 0), 4);\n            if (to !== from) {\n              toNode.total = toPrecision(toNode.total - (link[to] || 0), 4);\n            }\n          }\n        }\n      });\n      nodesOrder.forEach(label => (nodes[label].nodeCovered = 0));\n      if (isActive) {\n        this.nodeHoverOut(clickedNodeLabel, false);\n      } else {\n        this.nodeHoverIn(clickedNodeLabel, false);\n      }\n      this.setData({}, true);\n      this.setDimension();\n    }\n  }\n\n  linkHoverIn (linkKey, registerDraw = true) {\n    if (this.config.highlightEffect) {\n      let manager = this,\n        config = manager.config,\n        { links, nodes, nodesOrder, linksOrder } = config,\n        hoveredLink = links[linkKey],\n        hoveredNodes = hoveredLink.linkedNodes;\n\n      nodesOrder.forEach(label => {\n        let node = nodes[label],\n          child = manager.getChild(label);\n        if (!child || child.getState('removed')) {\n          return;\n        }\n        if (hoveredNodes.includes(label)) {\n          node.hovered = true;\n          node.unfocussed = false;\n        } else {\n          node.hovered = false;\n          node.unfocussed = true;\n        }\n        registerDraw && child.setData({\n          hovered: node.hovered,\n          unfocussed: node.unfocussed\n        }, true);\n      });\n      linksOrder.forEach(key => {\n        let link = links[key],\n          child = manager.getChild(key);\n        if (!child || child.getState('removed')) {\n          return;\n        }\n        if (key === linkKey) {\n          link.hovered = true;\n          link.unfocussed = false;\n        } else {\n          link.hovered = false;\n          link.unfocussed = true;\n        }\n        registerDraw && child.setData({\n          hovered: link.hovered,\n          unfocussed: link.unfocussed\n        }, true);\n      });\n      registerDraw && this.setDimension();\n    }\n  }\n  resetEffect (registerDraw = true) {\n    let manager = this,\n      config = manager.config,\n      { links, nodes, nodesOrder, linksOrder } = config;\n\n    nodesOrder.forEach(label => {\n      let node = nodes[label],\n        child = manager.getChild(label);\n      if (!child || child.getState('removed')) {\n        return;\n      }\n      node.hovered = false;\n      node.unfocussed = false;\n      registerDraw && child.setData({\n        hovered: node.hovered,\n        unfocussed: node.unfocussed\n      }, true);\n    });\n    linksOrder.forEach(key => {\n      let link = links[key],\n        child = manager.getChild(key);\n      if (!child || child.getState('removed')) {\n        return;\n      }\n      link.hovered = false;\n      link.unfocussed = false;\n      registerDraw && child.setData({\n        hovered: link.hovered,\n        unfocussed: link.unfocussed\n      }, true);\n    });\n    this.setDimension();\n  }\n  linkHoverOut (linkKey, registerDraw = true) {\n    if (this.config.highlightEffect) {\n      this.resetEffect(registerDraw);\n    }\n  }\n  nodeHoverIn (labelKey, registerDraw = true) {\n    if (this.config.highlightEffect) {\n      let manager = this,\n        config = manager.config,\n        { links, nodes, nodesOrder, linksOrder } = config,\n        hoveredNode = nodes[labelKey],\n        hoveredLinks = hoveredNode.linkedLinks,\n        affectedNodes = hoveredLinks.map(key => links[key].linkedNodes[0] === labelKey\n          ? links[key].linkedNodes[1]\n          : links[key].linkedNodes[0]);\n      affectedNodes.push(labelKey);\n\n      nodesOrder.forEach(label => {\n        let node = nodes[label],\n          child = manager.getChild(label);\n        if (!child || child.getState('removed')) {\n          return;\n        }\n        if (affectedNodes.includes(label)) {\n          node.hovered = true;\n          node.unfocussed = false;\n        } else {\n          node.hovered = false;\n          node.unfocussed = true;\n        }\n        registerDraw && hoveredNode.active && child.setData({\n          hovered: node.hovered,\n          unfocussed: node.unfocussed\n        }, true);\n      });\n      linksOrder.forEach(key => {\n        let link = links[key],\n          child = manager.getChild(key);\n        if (!child || child.getState('removed')) {\n          return;\n        }\n        if (hoveredLinks.includes(key)) {\n          link.hovered = true;\n          link.unfocussed = false;\n        } else {\n          link.hovered = false;\n          link.unfocussed = true;\n        }\n        registerDraw && hoveredNode.active && child.setData({\n          hovered: link.hovered,\n          unfocussed: link.unfocussed\n        }, true);\n      });\n      registerDraw && hoveredNode.active && this.setDimension();\n    }\n  }\n  nodeHoverOut (labelKey, registerDraw = true) {\n    if (this.config.highlightEffect) {\n      this.resetEffect(registerDraw);\n    }\n  }\n}\n\nexport default NodeLinkManager;\n","import Node from '../dataset/chord/node.js';\n\n/**\n * function to instatiate node and get attached to manager\n * @param {Object} manager manager API\n */\nexport default function (manager) {\n  const config = manager.config;\n\n  config.nodesOrder.forEach(label => {\n    manager.attachChild(Node, 'node', label)\n      .configure(config.nodes[label]);\n  });\n}\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport { polarToCartesian, deg2Rad, rad2Deg } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport { normaliseAngle, M, A, L, Z, getArcLength, getTextRotationByQuadrant, isAngleInLeftHemisphere, getCartesianDistance, isAngleInTopHemisphere, SMALLSQUARE, MEDIUMSQUARE } from '../../chart/chord/utils';\nimport { getSuggestiveRotation, isIpad, convertColor, POINTER, BLANKSTRING, MIDDLESTR, TEXTANCHOR, setLineHeight, toPrecision, isIE11, UNDEF, parseTooltext } from '@fusioncharts/core/src/lib';\nimport { getQuadrant, getCleanAngle } from '@fusioncharts/charts/src/dataset/pie2d/pie-label-utils';\n\nconst nodeGenerator = (_startAngle, _endAngle, arc, outerRadius, innerRadius) => {\n    let startAngle = normaliseAngle(_startAngle),\n      endAngle = normaliseAngle(_endAngle),\n      { x: x1, y: y1 } = polarToCartesian(outerRadius, startAngle, false),\n      { x: x2, y: y2 } = polarToCartesian(outerRadius, endAngle, false),\n      { x: x3, y: y3 } = polarToCartesian(innerRadius, startAngle, false),\n      { x: x4, y: y4 } = polarToCartesian(innerRadius, endAngle, false);\n\n    x1 = toPrecision(x1, 4);\n    y1 = toPrecision(y1, 4);\n    x2 = toPrecision(x2, 4);\n    y2 = toPrecision(y2, 4);\n    x3 = toPrecision(x3, 4);\n    y3 = toPrecision(y3, 4);\n    x4 = toPrecision(x4, 4);\n    y4 = toPrecision(y4, 4);\n\n    return [\n      M, x1, y1,\n      A, outerRadius, outerRadius, 0, arc > 180 ? 1 : 0, 1, x2, y2,\n      L, x4, y4,\n      A, innerRadius, innerRadius, 0, arc > 180 ? 1 : 0, 0, x3, y3,\n      Z\n    ];\n  },\n  labelPathGenerator = (_startAngle, _endAngle, arc, radius) => {\n    const { x: x1, y: y1 } = polarToCartesian(\n        radius,\n        normaliseAngle(_startAngle),\n        false\n      ),\n      { x: x2, y: y2 } = polarToCartesian(\n        radius,\n        normaliseAngle(_endAngle),\n        false\n      );\n\n    return `M ${x1} ${y1} A ${radius} ${radius} ${0} ${arc > 180 ? 1 : 0} ${\n      _startAngle > _endAngle ? 0 : 1\n    } ${x2} ${y2}`;\n  },\n  RED = '#ff0000',\n  LABEL_POSITION_TANGENTIAL = 'tangential',\n  LABEL_POSITION_OUTSIDE = 'outside',\n  LABEL_POSITION_INSIDE = 'inside',\n  START = 'start',\n  PADDING = 4,\n  clickFn = function (e) {\n    const node = this,\n      manager = node.getLinkedParent(),\n      legend = node.getFromEnv('legend'),\n      chart = node.getFromEnv('chart'),\n      legendItem = legend ? legend.getItem(manager.config.legendItemMap[node.config.label]) : null;\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    manager.nodeClicked(node.config.label, legendItem);\n    chart.plotEventHandler(null, e, 'dataplotclick', eventArgs);// event args need to be passed\n  },\n  END = 'end',\n  mouseOverFn = function (e) {\n    const node = this,\n      chart = node.getFromEnv('chart');\n    this.getLinkedParent().nodeHoverIn(this.config.label);\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    chart.plotEventHandler(null, e, 'DataPlotRollOver', eventArgs);\n  },\n  mouseOutFn = function (e) {\n    const node = this,\n      chart = node.getFromEnv('chart');\n    this.getLinkedParent().nodeHoverOut(this.config.label);\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    chart.plotEventHandler(null, e, 'DataPlotRollOut', eventArgs);\n  },\n  setEventArgs = function (eventArgs, node) {\n    // RED-8927: Support for plot click,label click and link click  events for Chord Diagram\n    // sets the Arguments for mouse click/over/out events.\n    let manager = node.getLinkedParent();\n    eventArgs.label = node.config.label;\n    eventArgs.color = node.config.color;\n    eventArgs.alpha = node.config.alpha;\n    eventArgs.links = {};\n    eventArgs.value = node.config.total;\n    eventArgs.displayValue = node.config.formattedValue;\n    eventArgs.nodeValue = node.config.nodevalue;\n    eventArgs.nodeDataValue = node.config.nodedatavalue;\n    eventArgs.plotFillColor = node.config.plotfillcolor;\n    eventArgs.toolText = node.config.tooltext;\n    var i;\n    // RED-8927: for loop is used to get link values for the current node.\n\n    for (i = 0; i < node.config.linkedLinks.length; i++) {\n      let j = node.config.linkedLinks[i],\n        obj = manager.config.links[j],\n        arrValues = [],\n        currentnodelabel = eventArgs.label,\n        currentnodevalue = {},\n        linkednodelabel,\n        linkednodevalue = {};\n      currentnodevalue[currentnodelabel] = obj[currentnodelabel];\n      linkednodelabel = (j.replace(currentnodelabel, '')).replace(',', '');\n      linkednodevalue[linkednodelabel] = obj[linkednodelabel];\n      arrValues.push(currentnodevalue);\n      if (linkednodelabel !== currentnodelabel && !(obj[linkednodelabel] === UNDEF)) { arrValues.push(linkednodevalue); }\n      eventArgs.links[j] = arrValues;\n    }\n  },\n  getTooltext = (config, node, chartConfig) => {\n    let uniChar = isIpad ? SMALLSQUARE : MEDIUMSQUARE,\n      macroIndices = [3, 133, 134, 143, 144, 145],\n      basefontsize = node.computeFontSize(\n        chartConfig.style.inCanfontSizeWithUnit),\n      manager = node.getLinkedParent(),\n      drawCustomLegendIcon = chartConfig && chartConfig.drawcustomlegendicon,\n      legend = node.getFromEnv('legend'),\n      pathArr,\n      newPathArr = [],\n      i,\n      j,\n      symbolBBox,\n      legendItemSymbol,\n      plotToolText,\n      pathStart = [],\n      finalPath,\n      legendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? legend.getItem(manager.config.legendItemMap[node.config.label]) : null,\n      graphicalElement = legendItem && legendItem.getGraphicalElement(),\n      parserConfig,\n      toolText;\n    finalPath = BLANKSTRING;\n    if (legendItem) {\n      legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol;\n      pathArr = legendItemSymbol && legendItemSymbol.attrs.path.split(/(?=[LMCA])/);\n      symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox();\n      if (pathArr && pathArr.length) {\n        for (i = 0; i < pathArr.length; i++) {\n          pathStart.push(pathArr[i][0]);\n          pathArr[i] = pathArr[i].substring(1, pathArr[i].length);\n          if (i === (pathArr.length - 1)) {\n            pathArr[i] = pathArr[i].substring(0, pathArr[i].length - 1);\n          }\n          newPathArr[i] = pathArr[i].split(',');\n        }\n      }\n      if (newPathArr && newPathArr.length) {\n        for (i = 0; i < newPathArr.length; i++) {\n          if (newPathArr[i].length) {\n            for (j = 0; j < newPathArr[i].length; j++) {\n              newPathArr[i][j] = Number(newPathArr[i][j]);\n              if (pathStart[i] !== 'A') {\n                if (j === 0) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 1) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              } else if (pathStart[i] === 'A') {\n                if (j === 5) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 6) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              }\n            }\n          }\n          finalPath += pathStart[i] + newPathArr[i].toString();\n        }\n      }\n      finalPath = finalPath + 'Z';\n    }\n    parserConfig = {\n      label: config.label,\n      value: config.total,\n      nodeValue: config.total,\n      nodeDataValue: config.formattedValue,\n      plotFillColor: config.color,\n      plotFillAlpha: config.alpha,\n      plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n      stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n      stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n    </svg>` : `<span style='color: ${config.color};'>${uniChar}&nbsp;</span>`\n    };\n\n    toolText = parseTooltext(config.tooltext, macroIndices,\n      parserConfig, {\n        label: config.label,\n        value: config.formattedValue,\n        nodeValue: config.total,\n        nodeDataValue: config.formattedValue,\n        plotFillColor: config.color,\n        plotFillAlpha: config.alpha,\n        plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n        stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n        stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n      </svg>` : `<span style='color: ${config.color};'>${uniChar}&nbsp;</span>`\n      }\n    );\n\n    plotToolText = parseTooltext(config.tooltext, macroIndices,\n      parserConfig, {\n        label: config.label,\n        value: config.formattedValue,\n        nodeValue: config.total,\n        nodeDataValue: config.formattedValue,\n        plotFillColor: config.color,\n        plotFillAlpha: config.alpha,\n        plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n        stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n        stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n      </svg>` : `<span style='color: ${config.color};'>${uniChar}&nbsp;</span>`\n      }\n    );\n\n    config.setToolText = toolText;\n    config.setPlotTooltext = config.setToolText ? config.setToolText : plotToolText;\n\n    if (!config.tooltext) {\n      return (\n        `<div style='padding: 2px; vertical-align: middle; font-size: ${basefontsize}px;'>\n          <span style='color: ${config.color};'>\n              ${uniChar}\n          </span>\n          ${config.label + config.toolTipSepChar}\n          &nbsp;\n          ${config.formattedValue}\n        </div>`\n      );\n    }\n    return (\n      `<div style='padding: 2px; vertical-align: middle; font-size: ${basefontsize}px;'>\n        <span style='color: ${config.color};'>\n            ${uniChar}\n        </span>\n        ${config.setPlotTooltext}\n      </div>`\n    );\n  };\n\nclass Node extends SmartRenderer {\n  constructor (id) {\n    super(id);\n    this.addEventListener('fc-click', clickFn);\n    // this.addEventListener('fc-click', dataPlotClickfn);\n    this.addEventListener('fc-mouseover', mouseOverFn);\n    this.addEventListener('fc-mouseout', mouseOutFn);\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    const config = this.config;\n    config.styles = {\n      fill: RED,\n      stroke: RED,\n      'fill-alpha': 0.7\n    };\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    Object.assign(this.config, dataObj);\n    const node = this;\n    node.config.formattedValue = node.getFromEnv('number-formatter').dataLabels(node.config.total);\n    node.config.formattedNodeDataValue = node.getFromEnv('number-formatter').dataLabels(node.config.nodedatavalue);\n  }\n\n  setDimension (dim) {\n    Object.assign(this.config, dim);\n  }\n\n  allocatePosition () {\n    let node = this,\n      config = node.config,\n      label = config.label,\n      { canvasHeight, canvasWidth, cx, cy, style } = node.getFromEnv('chartConfig'),\n      slope,\n      labelOrientation = config.labelPosition,\n      applicableRadius = config.outerRadius + config.nodeLabelGap,\n      smartLabel = node.getFromEnv('smartLabel'),\n      startingAngle = normaliseAngle(config.startingAngle),\n      endingAngle = normaliseAngle(config.endingAngle),\n      labelAttrs = {},\n      smartLabelOutput,\n      fontSize,\n      lineHeight,\n      labelCatersianPosition;\n\n    // Setting font size & line height for when the chart is resized\n    config.style['font-size'] = fontSize = this.computeFontSize(style.inCanfontSizeWithUnit);\n    lineHeight = setLineHeight({ fontSize: fontSize }).replace(/px/ig, BLANKSTRING);\n    smartLabel.setStyle(config.style);\n    smartLabel.useEllipsesOnOverflow(node.getFromEnv('chartConfig').useEllipsesOnOverflow);\n    /*\n      * RED-8797\n      * SVG cartesian system is not same as general cartesian system\n      * But since slope is calculated down, it must be corrected as per\n      * general cartesian system.\n      * Followed by that if-else conditions are also matched with general\n      * cartesian system.\n      * Note: CASE 0, 1, 2, 3 still map to SVG cartesian system.\n    */\n    switch (labelOrientation) {\n      case LABEL_POSITION_TANGENTIAL: {\n        let labelAngleCenter = ((startingAngle + endingAngle) / 2) % 360,\n          x2, y2,\n          spaceRemaining = 0;\n\n        labelCatersianPosition = polarToCartesian(applicableRadius, labelAngleCenter, false);\n        const quadrant = getQuadrant(deg2Rad(labelAngleCenter));\n        switch (quadrant) {\n          case 0:\n            x2 = canvasWidth / 2;\n            y2 = canvasHeight / 2;\n            slope = Math.tan(deg2Rad(360 - labelAngleCenter));\n            if (Math.abs(x2 * slope) <= y2) {\n              // intersects with right line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx + x2, cy - x2 * slope);\n            } else {\n              // intersects with bottom line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx - (y2 / slope), cy + y2);\n            }\n            break;\n\n          case 1:\n            x2 = (-1 * canvasWidth / 2);\n            y2 = (canvasHeight / 2);\n            slope = Math.tan(deg2Rad(180 + labelAngleCenter));\n\n            if (Math.abs(x2 * slope) <= Math.abs(y2)) {\n              // intersects with left line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx + x2, cy + x2 * slope);\n            } else {\n              // intersects with bottom line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx + (y2 / slope), cy + y2);\n            }\n            break;\n\n          case 2:\n            x2 = (-1 * canvasWidth / 2);\n            y2 = -1 * (canvasHeight / 2);\n            slope = Math.tan(deg2Rad(360 - labelAngleCenter));\n\n            if (Math.abs(x2 * slope) <= Math.abs(y2)) {\n              // intersects with left line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx + x2, cy - x2 * slope);\n            } else {\n              // intersects with top line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx - (y2 / slope), cy + y2);\n            }\n            break;\n\n          case 3:\n            x2 = canvasWidth / 2;\n            y2 = -1 * (canvasHeight / 2);\n            slope = Math.tan(deg2Rad(-1 * labelAngleCenter));\n\n            if (Math.abs(x2 * slope) <= Math.abs(y2)) {\n              // intersects with right line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx + x2, cy - x2 * slope);\n            } else {\n              // intersects with top line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx - (y2 / slope), cy + y2);\n            }\n            break;\n\n          default: ;\n        }\n\n        smartLabelOutput = smartLabel.getSmartText(label, spaceRemaining, lineHeight);\n        labelAttrs.transform = getSuggestiveRotation(\n          getTextRotationByQuadrant(labelAngleCenter),\n          labelCatersianPosition.x, labelCatersianPosition.y);\n\n        if (isAngleInLeftHemisphere(labelAngleCenter)) {\n          labelAttrs['text-anchor'] = END;\n        }\n\n        labelAttrs.x = labelCatersianPosition.x;\n        labelAttrs.y = labelCatersianPosition.y;\n        break;\n      }\n      case LABEL_POSITION_OUTSIDE: {\n        let labelAngleCenterDeg = ((startingAngle + endingAngle) / 2) % 360,\n          labelAngleCenterRad = deg2Rad(labelAngleCenterDeg),\n          labelAngleCenterCleanRad = getCleanAngle(labelAngleCenterRad),\n          labelAngleCenterCleanDeg = rad2Deg(labelAngleCenterCleanRad),\n          isLabelCenterInTopHemisphere = isAngleInTopHemisphere(labelAngleCenterCleanDeg),\n          arcLength = getArcLength(\n            applicableRadius,\n            startingAngle,\n            endingAngle\n          ),\n          textPathStartAngle = isLabelCenterInTopHemisphere\n            ? config.startingAngle\n            : config.endingAngle,\n          textPathEndAngle = isLabelCenterInTopHemisphere\n            ? config.endingAngle\n            : config.startingAngle;\n        smartLabelOutput = smartLabel.getSmartText(label, arcLength - PADDING, lineHeight);\n        // dy attribute of tspan not supported in IE, so path calculation changed\n        if (isIE11) {\n          if (!isLabelCenterInTopHemisphere) {\n            applicableRadius += smartLabelOutput.height * 0.7;\n          }\n        }\n\n        labelAttrs.textpath = {\n          path: labelPathGenerator(\n            textPathStartAngle,\n            textPathEndAngle,\n            config.arcAngle,\n            applicableRadius\n          ),\n          startOffset: '50%'\n        };\n\n        labelAttrs[TEXTANCHOR] = MIDDLESTR;\n        labelAttrs['vertical-align'] = isLabelCenterInTopHemisphere\n          ? 'top'\n          : 'bottom';\n\n        labelAttrs.transform = null;\n        labelAttrs.x = 0;\n        labelAttrs.y = 0;\n        break;\n      }\n      case LABEL_POSITION_INSIDE:\n      default: {\n        let labelAngleCenterDeg = ((startingAngle + endingAngle) / 2) % 360,\n          labelAngleCenterRad = deg2Rad(labelAngleCenterDeg),\n          labelAngleCenterCleanRad = getCleanAngle(labelAngleCenterRad),\n          labelAngleCenterCleanDeg = rad2Deg(labelAngleCenterCleanRad),\n          isLabelCenterInTopHemisphere = isAngleInTopHemisphere(labelAngleCenterCleanDeg),\n          middleRadius = (config.outerRadius + config.innerRadius) / 2,\n          arcLength = getArcLength(\n            middleRadius,\n            startingAngle,\n            endingAngle\n          ),\n          textPathStartAngle = isLabelCenterInTopHemisphere\n            ? config.startingAngle\n            : config.endingAngle,\n          textPathEndAngle = isLabelCenterInTopHemisphere\n            ? config.endingAngle\n            : config.startingAngle;\n\n        smartLabelOutput = smartLabel.getSmartText(label, arcLength - PADDING, lineHeight);\n        // IE doesn't support dy attribute of tspan, so path calculation changed\n        if (isIE11) {\n          if (isLabelCenterInTopHemisphere) {\n            middleRadius -= smartLabelOutput.height * 0.3;\n          } else {\n            middleRadius += smartLabelOutput.height * 0.3;\n          }\n        }\n        labelAttrs.textpath = {\n          path: labelPathGenerator(\n            textPathStartAngle,\n            textPathEndAngle,\n            config.arcAngle,\n            middleRadius\n          ),\n          startOffset: '50%'\n        };\n\n        labelAttrs[TEXTANCHOR] = MIDDLESTR;\n        labelAttrs['vertical-align'] = MIDDLESTR;\n\n        labelAttrs.transform = null;\n        labelAttrs.x = 0;\n        labelAttrs.y = 0;\n        break;\n      }\n    }\n\n    labelAttrs.fill = convertColor(config.labelColor, 100);\n    labelAttrs.text = smartLabelOutput.text;\n    labelAttrs.cursor = POINTER;\n    labelAttrs['text-anchor'] = labelAttrs['text-anchor'] || START;\n    node.config.labelAttrs = labelAttrs;\n    node.config.path = nodeGenerator(config.startingAngle, config.endingAngle, config.arcAngle,\n      config.outerRadius, config.innerRadius);\n    node.config.focussedState.path = node.config.path;\n    node.config.normalState.path = node.config.path;\n    node.config.unfocussedState.path = node.config.path;\n    node.config.deactiveState.path = node.config.path;\n  }\n\n  draw () {\n    const node = this,\n      config = node.config,\n      chartConfig = node.getFromEnv('chartConfig'),\n      tooltext = config.showToolTip ? getTooltext(config, this, chartConfig) : BLANKSTRING;\n    let nodeAttr;\n\n    if (node.config.active) {\n      nodeAttr = config.hovered ? config.focussedState : config.unfocussed ? config.unfocussedState : config.normalState;\n    } else {\n      nodeAttr = config.deactiveState;\n    }\n\n    nodeAttr.cursor = POINTER;\n\n    node.addGraphicalElement({\n      el: 'group',\n      container: {\n        id: 'node-container',\n        isParent: true\n      },\n      tooltext,\n      component: node,\n      label: 'text-path-container',\n      id: 'text-path-container',\n      attr: {\n        name: 'text-path-container'\n      }\n    });\n\n    node.addGraphicalElement({\n      el: 'path',\n      label: 'node',\n      tooltext,\n      container: {\n        id: 'text-path-container'\n      },\n      attr: nodeAttr,\n      component: node\n    }, true);\n\n    if (config.showLabel) {\n      node.addGraphicalElement({\n        el: 'text',\n        label: 'node-label',\n        container: {\n          id: 'text-path-container'\n        },\n        attr: config.labelAttrs,\n        outlineText: !!chartConfig.textOutline,\n        css: {},\n        tooltext,\n        component: node\n      }, true);\n    }\n  }\n\n  _manageSpace (spaceArguments) {\n    const node = this,\n      config = node.config,\n      smartLabel = node.getFromEnv('smartLabel');\n\n    let oriSize,\n      smartText,\n      spaceRequired;\n\n    smartLabel.setStyle(config.style);\n    oriSize = smartLabel.getOriSize(config.label);\n\n    if (!config.showLabel) {\n      return 0;\n    }\n\n    if (config.labelPosition === LABEL_POSITION_TANGENTIAL) {\n      if (oriSize.width > spaceArguments.maxSpace) {\n        smartText = smartLabel.getSmartText(config.label, spaceArguments.maxSpace, oriSize.height);\n        spaceRequired = smartText.width;\n      } else {\n        spaceRequired = oriSize.width;\n      }\n    } else if (config.labelPosition === LABEL_POSITION_OUTSIDE) {\n      spaceRequired = oriSize.height;\n    } else {\n      spaceRequired = 0;\n    }\n\n    return spaceRequired;\n  }\n\n  getName () {\n    return 'node';\n  }\n\n  getType () {\n    return 'dataset';\n  }\n}\n\nexport default Node;\n","\nconst NOMRALIZE_CONSTANT = 90,\n  M = 'M',\n  A = 'A',\n  L = 'L',\n  Z = 'Z',\n  C = 'C',\n  PI = Math.PI,\n  SIN = Math.sin,\n  COS = Math.cos,\n  PI2 = PI * 2,\n  HALF_PI = PI / 2,\n  SMALLSQUARE = '&#9632;',\n  MEDIUMSQUARE = '&#9724;';\n\nfunction normaliseAngle (angle) {\n  return angle - NOMRALIZE_CONSTANT;\n}\n\nfunction isAngleInLeftHemisphere (_rotationAngle) {\n  return Math.abs(_rotationAngle) > 90 && Math.abs(_rotationAngle) < 270;\n}\n\nfunction isAngleInTopHemisphere (_angle) {\n  return Math.abs(_angle) > 180 && Math.abs(_angle) < 360;\n}\n\nfunction getCartesianDistance (x1, y1, x2, y2) {\n  return Math.sqrt(\n    ((\n      x2 - x1) * (x2 - x1)\n    ) +\n    ((\n      y2 - y1) * (y2 - y1)\n    ));\n}\n\nfunction getArcLength (_radius, _startAngle, _endAngle) {\n  return PI2 * _radius * (Math.abs(_endAngle - _startAngle)) / 360;\n}\n\n/**\n * Text is rotated according to which quadrant of the circle it is\n * currently placed in\n */\nfunction getTextRotationByQuadrant (_angle) {\n  let rotationAngle = _angle;\n  if (isAngleInLeftHemisphere(rotationAngle)) {\n    rotationAngle = (rotationAngle - 180);\n  }\n\n  return rotationAngle;\n}\n\nexport {\n  M,\n  A,\n  L,\n  Z,\n  C,\n  PI,\n  SIN,\n  COS,\n  PI2,\n  HALF_PI,\n  SMALLSQUARE,\n  MEDIUMSQUARE,\n  normaliseAngle,\n  getArcLength,\n  getTextRotationByQuadrant,\n  isAngleInLeftHemisphere,\n  isAngleInTopHemisphere,\n  getCartesianDistance\n};\n","import Ribbon from '../dataset/chord/ribbon';\n\n/**\n * function to instatiate ribbon and get attached to manager\n * @param {Object} manager manager API\n */\nexport default function (manager) {\n  let links = manager.config.links;\n  for (let key in links) {\n    if (links.hasOwnProperty(key)) {\n      if (links[key].visible) {\n        manager.attachChild(Ribbon, 'ribbon', key).configure(links[key]);\n      }\n    }\n  }\n}\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport { deg2Rad, polarToCartesian } from '@fusioncharts/utils/src/scale-utils/polar-util.js';\nimport { toRaphaelColor, isIpad, BLANKSTRING, toPrecision, rgbaToHex, parseTooltext } from '@fusioncharts/core/src/lib';\nimport { M, A, C, HALF_PI, PI, PI2, SMALLSQUARE, MEDIUMSQUARE } from '../../chart/chord/utils';\n\nconst normalizeAngles = radians => radians - HALF_PI,\n  ribbonGenerator = (points, radius, startAngle) => {\n    const corners = points.map((p, i) => {\n      let angle = deg2Rad(p),\n        { x, y } = polarToCartesian(radius, normalizeAngles(deg2Rad(startAngle)) + angle),\n        curveFactor = 0.6,\n        distance = Math.abs(deg2Rad(points[3 - i]) - angle),\n        nextPointDist = Math.abs(deg2Rad(points[(i + 1) % 4]) - angle);\n      if (distance > PI) {\n        distance = PI2 - distance;\n      }\n      if (distance * radius < radius) {\n        curveFactor *= distance;\n      }\n\n      x = toPrecision(x, 4);\n      y = toPrecision(y, 4);\n\n      return {\n        x: x,\n        y: y,\n        cpX: (1 - curveFactor) * x,\n        cpY: (1 - curveFactor) * y,\n        arc: nextPointDist\n      };\n    });\n    return [\n      M,\n      corners[0].x, corners[0].y,\n      A, radius, radius, 0, corners[0].arc > PI ? 1 : 0, 1, corners[1].x, corners[1].y,\n      C, corners[1].cpX, corners[1].cpY, corners[2].cpX, corners[2].cpY, corners[2].x, corners[2].y,\n      A, radius, radius, 0, corners[2].arc > PI ? 1 : 0, 1, corners[3].x, corners[3].y,\n      C, corners[3].cpX, corners[3].cpY, corners[0].cpX, corners[0].cpY, corners[0].x, corners[0].y\n    ].join(` `);\n  },\n  mouseOverFn = function () {\n    const node = this,\n      chart = node.getFromEnv('chart');\n    this.getLinkedParent().linkHoverIn(this.config.key);\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    chart.fireChartInstanceEvent('linkRollOver', eventArgs);\n  },\n  mouseOutFn = function () {\n    const node = this,\n      chart = node.getFromEnv('chart');\n    this.getLinkedParent().linkHoverOut(this.config.key);\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    chart.fireChartInstanceEvent('linkRollOut', eventArgs);\n  },\n  mouseClickFn = function () {\n    const node = this,\n      chart = node.getFromEnv('chart');\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    chart.fireChartInstanceEvent('linkClick', eventArgs);\n  },\n  setEventArgs = function (eventArgs, node) {\n    // RED-8927: Support for plot click,label click and link click  events for Chord Diagram\n    // sets the Arguments for mouse click/over/out events.\n    eventArgs.dominantFlowValue = node.config[node.config.dominantNode[0]];\n    let i;\n    // RED-8927stores the index of subservient node.\n    for (i = 0; i < node.config.linkedNodes.length; i++) {\n      if (node.config.linkedNodes[i] !== node.config.dominantNode[0]) {\n        break;\n      }\n    }\n\n    eventArgs.subservientFlowValue = node.config[node.config.linkedNodes[i]];\n    eventArgs.linkedNodes = node.config.linkedNodes;\n    if (eventArgs.dominantFlowValue === eventArgs.subservientFlowValue) {\n      eventArgs.color = node.config.rawColor || rgbaToHex(node.config.normalState.fill);\n    } else {\n      eventArgs.color = rgbaToHex(node.config.normalState.fill);\n    }\n    eventArgs.alpha = node.config.alpha;\n  },\n  getUniqueNodes = (nodeArr) => {\n    let resultingNodes = [];\n    if (nodeArr.length === 0) {\n      return [];\n    } else if (nodeArr.length === 1) {\n      return ([nodeArr[0]]);\n    }\n    resultingNodes = nodeArr.filter((c, index) => {\n      return nodeArr.indexOf(c) === index;\n    });\n    return (resultingNodes);\n  },\n  getDominantFlowValue = (_config, _nodeArr) => {\n    let i,\n      config = _config,\n      nodeArr = _nodeArr,\n      resultValues = [];\n    if (!nodeArr.length) {\n      return [];\n    }\n    if (nodeArr.length === 1) {\n      return config[nodeArr[0]];\n    }\n    for (i = 0; i < nodeArr.length; i++) {\n      resultValues.push(config[nodeArr[i]]);\n    }\n    return resultValues;\n  },\n  getPlotIdentifier = (colorArr, uniChar, legendItem, finalPath) => {\n    let body = BLANKSTRING,\n      graphicalElement,\n      symbolBBox,\n      i;\n    if (finalPath !== '' && legendItem && legendItem.length) {\n      if (legendItem.length === 1) {\n        graphicalElement = legendItem[0].getGraphicalElement();\n        symbolBBox = graphicalElement.legendItemSymbol.node.getBBox();\n        return (`<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n        stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n        stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n      </svg>`);\n      }\n      for (i = 0; i < legendItem.length; i++) {\n        graphicalElement = legendItem[i].getGraphicalElement();\n        symbolBBox = graphicalElement.legendItemSymbol.node.getBBox();\n        body += `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n          <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n          stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n          stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n        </svg>`;\n      }\n    } else if (colorArr.length) {\n      for (i = 0; i < colorArr.length; i++) {\n        body += `\n            <span style='color: ${colorArr[i]};'>\n              ${uniChar}\n            </span>`;\n      }\n    }\n    return body;\n  },\n  getLegendItems = (legend, manager, dominantNodes) => {\n    let legendItems = [],\n      i;\n    if (dominantNodes && dominantNodes.length) {\n      if (dominantNodes.length === 1) {\n        return ([legend.getItem(manager.config.legendItemMap[dominantNodes[0]])]);\n      }\n      for (i = 0; i < dominantNodes.length; i++) {\n        legendItems.push(legend.getItem(manager.config.legendItemMap[dominantNodes[i]]));\n      }\n    }\n    return legendItems;\n  },\n  getTooltext = (config, chartConfig, basefontsize, ribbon) => {\n    let uniChar = isIpad ? SMALLSQUARE : MEDIUMSQUARE,\n      key,\n      body = BLANKSTRING,\n      drawCustomLegendIcon = chartConfig && chartConfig.drawcustomlegendicon,\n      macroIndices = [135, 136, 137, 138, 139, 140, 146, 147],\n      manager = ribbon.getLinkedParent(),\n      legend = ribbon.getFromEnv('legend'),\n      pathArr,\n      newPathArr = [],\n      graphicalElement,\n      legendItemSymbol,\n      i,\n      j,\n      symbolBBox,\n      pathStart = [],\n      finalPath,\n      dominantLegendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? getLegendItems(legend, manager, getUniqueNodes(config.dominantNode)) : null,\n      subservientLegendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? getLegendItems(legend, manager, getUniqueNodes(config.subservientNode)) : null,\n      parserConfig,\n      linkToolText;\n    finalPath = BLANKSTRING;\n    if (dominantLegendItem && dominantLegendItem.length) {\n      graphicalElement = dominantLegendItem && dominantLegendItem[0] && dominantLegendItem[0].getGraphicalElement();\n      legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol;\n      pathArr = legendItemSymbol && legendItemSymbol.attrs.path.split(/(?=[LMCA])/);\n      symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox();\n      if (pathArr && pathArr.length) {\n        for (i = 0; i < pathArr.length; i++) {\n          pathStart.push(pathArr[i][0]);\n          pathArr[i] = pathArr[i].substring(1, pathArr[i].length);\n          if (i === (pathArr.length - 1)) {\n            pathArr[i] = pathArr[i].substring(0, pathArr[i].length - 1);\n          }\n          newPathArr[i] = pathArr[i].split(',');\n        }\n      }\n      if (newPathArr && newPathArr.length) {\n        for (i = 0; i < newPathArr.length; i++) {\n          if (newPathArr[i].length) {\n            for (j = 0; j < newPathArr[i].length; j++) {\n              newPathArr[i][j] = Number(newPathArr[i][j]);\n              if (pathStart[i] !== 'A') {\n                if (j === 0) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 1) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              } else if (pathStart[i] === 'A') {\n                if (j === 5) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 6) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              }\n            }\n          }\n          finalPath += pathStart[i] + newPathArr[i].toString();\n        }\n      }\n      finalPath = finalPath + 'Z';\n    }\n    parserConfig = {\n      toolText: config.tooltext,\n      dominantNode: getUniqueNodes(config.dominantNode),\n      subservientNode: getUniqueNodes(config.subservientNode),\n      dominantFlowDataValue: getUniqueNodes(config.dominantFlowDataValue),\n      subservientFlowDataValue: getUniqueNodes(config.subservientFlowDataValue)\n    };\n    ;\n    parserConfig.dominantFlowValue = getDominantFlowValue(config, parserConfig.dominantNode);\n    parserConfig.subservientFlowValue = getDominantFlowValue(config, parserConfig.subservientNode);\n    parserConfig.dominantPlotIdentifier = getPlotIdentifier(getUniqueNodes(config.dominantNodeColor), uniChar, dominantLegendItem, finalPath);\n    parserConfig.subservientPlotIdentifier = getPlotIdentifier(getUniqueNodes(config.subservientNodeColor), uniChar, subservientLegendItem, finalPath);\n\n    linkToolText = parseTooltext(config.tooltext, macroIndices,\n      parserConfig, config);\n    config.setLinkToolText = linkToolText;\n\n    for (key in config.tooltip) {\n      if (config.tooltip.hasOwnProperty(key)) {\n        body += `\n          <span style='color: ${config.tooltip[key].color};'>\n            ${uniChar}\n          </span>\n          ${key + config.toolTipSepChar}\n          ${config.showLinkValueOnHover ? ` &nbsp;` : ''}\n          ${config.showLinkValueOnHover ? config.tooltip[key].value : ''}\n        <br>`;\n      }\n    }\n\n    if (!config.tooltext) {\n      return (\n        `<div style='padding: 2px; vertical-align: middle; font-size: ${basefontsize}px;'>\n          ${body}\n        </div>`\n      );\n    }\n    return (\n      `<div style='padding: 2px; vertical-align: middle; font-size: ${basefontsize}px;'>\n        ${config.setLinkToolText}\n      </div>`\n    );\n  };\nclass Ribbon extends SmartRenderer {\n  constructor (id) {\n    super(id);\n    this.addEventListener('fc-mouseover', mouseOverFn);\n    this.addEventListener('fc-mouseout', mouseOutFn);\n    this.addEventListener('fc-click', mouseClickFn);\n  }\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    Object.assign(this.config, dataObj);\n  }\n\n  setDimension (dim) {\n    this.config.radius = dim.radius;\n  }\n\n  allocatePosition () {\n    let config = this.config;\n    config.path = ribbonGenerator(config.points, config.radius, 0);\n    config.ribbonAttrs = config.hovered ? config.focussedState : config.unfocussed ? config.unfocussedState : config.normalState;\n    config.ribbonAttrs.path = config.path;\n    config.ribbonAttrs['stroke-width'] = (config.showBorder ? config.borderThickness : 0) || 0;\n  }\n\n  draw () {\n    const ribbon = this,\n      chartConfig = ribbon.getFromEnv('chart').config,\n      height = chartConfig.canvasHeight,\n      width = chartConfig.canvasWidth,\n      cx = chartConfig.canvasLeft + width / 2,\n      cy = chartConfig.canvasTop + height / 2,\n      chartWidth = chartConfig.width,\n      chartHeight = chartConfig.height,\n      ribbonRadius = chartConfig.ribbonRadius,\n      config = ribbon.config,\n      angles = config.angles,\n      tooltext = config.showToolTip ? getTooltext(config, chartConfig, chartConfig.style.baseFontSize, ribbon) : BLANKSTRING,\n      { x: x1, y: y1 } = polarToCartesian(ribbonRadius, normalizeAngles(deg2Rad(angles[0]))),\n      { x: x2, y: y2 } = polarToCartesian(ribbonRadius, normalizeAngles(deg2Rad(angles[3])));\n    if (config.dominantNode.length > 1 && config.rawColor) {\n      config.ribbonAttrs.fill = toRaphaelColor({\n        color: `${config.rawColor[0]},${config.rawColor[1]}`,\n        alpha: config.hovered ? config.hoverAlpha : config.unfocussed ? config.unfocussedAlpha : config.alpha,\n        x1: (x1 + cx) / chartWidth,\n        y1: (y1 + cy) / chartHeight,\n        x2: (x2 + cx) / chartWidth,\n        y2: (y2 + cy) / chartHeight\n      });\n      config.ribbonAttrs.stroke = toRaphaelColor({\n        color: `${config.rawColor[0]},${config.rawColor[1]}`,\n        alpha: config.hovered ? config.hoveredAlpha : config.unfocussed ? config.unfocussedAlpha : config.borderAlpha,\n        x1: (x1 + cx) / chartWidth,\n        y1: (y1 + cy) / chartHeight,\n        x2: (x2 + cx) / chartWidth,\n        y2: (y2 + cy) / chartHeight\n      });\n    }\n    ribbon.addGraphicalElement({\n      el: 'path',\n      label: 'ribbon',\n      tooltext,\n      attr: config.ribbonAttrs,\n      container: {\n        id: 'link-container',\n        isParent: true\n      },\n      component: ribbon\n    });\n  }\n\n  getName () {\n    return 'ribbon';\n  }\n\n  getType () {\n    return 'dataset';\n  }\n}\n\nexport default Ribbon;\n","import Dragarea from '@fusioncharts/powercharts/src/chart/dragarea';\nexport default Dragarea;\n","import Multicanvascrosslinemanager from '@fusioncharts/features/src/multicanvas-crossline-manager';\nexport default Multicanvascrosslinemanager;\n","import Spline from '../viz/spline';\nimport Logmscolumn2d from '../viz/logmscolumn2d';\nimport Logmsline from '../viz/logmsline';\nimport LogStackedColumn2d from '../viz/logstackedcolumn2d';\nimport Splinearea from '../viz/splinearea';\nimport Msspline from '../viz/msspline';\nimport MSSplineDy from '../viz/mssplinedy';\nimport Mssplinearea from '../viz/mssplinearea';\nimport Errorbar2d from '../viz/errorbar2d';\nimport Errorline from '../viz/errorline';\nimport Errorscatter from '../viz/errorscatter';\nimport Inversemsarea from '../viz/inversemsarea';\nimport Inversemscolumn2d from '../viz/inversemscolumn2d';\nimport Inversemsline from '../viz/inversemsline';\nimport Dragcolumn2d from '../viz/dragcolumn2d';\nimport Dragline from '../viz/dragline';\nimport Kagi from '../viz/kagi';\nimport WaterFall2D from '../viz/waterfall2d';\nimport SelectScatter from '../viz/selectscatter';\nimport MultilevelPie from '../viz/multilevelpie';\nimport Sunburst from '../viz/sunburst';\nimport MultiAxisLine from '../viz/multiaxisline';\nimport MSStepLine from '../viz/msstepline';\nimport DragNode from '../viz/dragnode';\nimport CandleStick from '../viz/candlestick';\nimport BoxAndWhisker2D from '../viz/boxandwhisker2d';\nimport Sankey from '../viz/sankey';\nimport HeatMap from '../viz/heatmap';\nimport Radar from '../viz/radar';\nimport Chord from '../viz/chord';\n// import TreeMap from '../viz/treemap';\nimport DragArea from '../viz/dragarea';\nimport CrossLine from '../features/crossline';\nimport MultiCanvasCrossLine from '../features/multicanvas-crossline-manager';\n\nexport {\n  Spline,\n  Logmscolumn2d,\n  LogStackedColumn2d,\n  Logmsline,\n  Splinearea,\n  MSSplineDy,\n  Msspline,\n  Mssplinearea,\n  Errorbar2d,\n  Errorline,\n  Errorscatter,\n  Inversemsarea,\n  Inversemscolumn2d,\n  Inversemsline,\n  Dragcolumn2d,\n  Dragline,\n  Kagi,\n  WaterFall2D,\n  SelectScatter,\n  MultilevelPie,\n  Sunburst,\n  MultiAxisLine,\n  MSStepLine,\n  DragNode,\n  CandleStick,\n  BoxAndWhisker2D,\n  Sankey,\n  HeatMap,\n  Radar,\n  // TreeMap,\n  DragArea,\n  Chord\n};\n\nexport default {\n  name: 'powercharts',\n  type: 'package',\n  requiresFusionCharts: true,\n  extension: FusionCharts => {\n    FusionCharts.addDep(CrossLine);\n    FusionCharts.addDep(MultiCanvasCrossLine);\n\n    FusionCharts.addDep(Spline);\n    FusionCharts.addDep(Logmscolumn2d);\n    FusionCharts.addDep(LogStackedColumn2d);\n    FusionCharts.addDep(Logmsline);\n    FusionCharts.addDep(Splinearea);\n    FusionCharts.addDep(MSSplineDy);\n    FusionCharts.addDep(Msspline);\n    FusionCharts.addDep(Mssplinearea);\n    FusionCharts.addDep(Errorbar2d);\n    FusionCharts.addDep(Errorline);\n    FusionCharts.addDep(Errorscatter);\n    FusionCharts.addDep(Inversemsarea);\n    FusionCharts.addDep(Inversemscolumn2d);\n    FusionCharts.addDep(Inversemsline);\n    FusionCharts.addDep(Dragcolumn2d);\n    FusionCharts.addDep(Dragline);\n    FusionCharts.addDep(Kagi);\n    FusionCharts.addDep(WaterFall2D);\n    FusionCharts.addDep(SelectScatter);\n    FusionCharts.addDep(MultilevelPie);\n    FusionCharts.addDep(Sunburst);\n    FusionCharts.addDep(MultiAxisLine);\n    FusionCharts.addDep(MSStepLine);\n    FusionCharts.addDep(DragNode);\n    FusionCharts.addDep(CandleStick);\n    FusionCharts.addDep(BoxAndWhisker2D);\n    FusionCharts.addDep(Sankey);\n    FusionCharts.addDep(HeatMap);\n    FusionCharts.addDep(Radar);\n    FusionCharts.addDep(Chord);\n    // FusionCharts.addDep(TreeMap);\n    FusionCharts.addDep(DragArea);\n  }\n};\n","import Logmscolumn2d from '@fusioncharts/powercharts/src/chart/logmscolumn2d';\nexport default Logmscolumn2d;\n","import MSLog from '../_internal/mslog';\nimport MultiSeriesManager from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\n\nconst COLUMN = 'column';\nclass LogMSColumn2d extends MSLog {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'LogMSColumn2d';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'LogMSColumn2d';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = COLUMN;\n    config.enablemousetracking = true;\n  }\n  getDSGroupdef () {\n    return MultiSeriesManager;\n  }\n  getDSdef () {\n    return ColumnDataset;\n  }\n}\nexport default LogMSColumn2d;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport logAxisFactory from '../../factories/log-axis';\nimport { pluckNumber, pluck, chartPaletteStr, pluckFontSizeMaintainUnit } from '@fusioncharts/core/src/lib';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\n\nclass MsLog extends MSCartesian {\n  constructor () {\n    super();\n    this.registerFactory('axis', logAxisFactory, ['canvas']);\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MsLog';\n  }\n\n  _feedAxesRawData () {\n    var iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      xAxisConf,\n      yAxisConf;\n\n    xAxisConf = iapi.getSpecificxAxisConf();\n    yAxisConf = iapi.getSpecificyAxisConf();\n\n    if (yAxisConf.base === '1') {\n      yAxisConf.base = 10;\n      yAxisConf.logBase = 10;\n    }\n    yAxisConf.minorDivlinecolor = pluck(chartAttrs.minordivlinecolor, yAxisConf.divLineColor);\n    yAxisConf.minorDivLineThickness = pluck(chartAttrs.minordivlinethickness, 1);\n    yAxisConf.minorDivLineAlpha = pluck(chartAttrs.minordivlinealpha,\n      yAxisConf.divLineAlpha / 2);\n    xAxisConf.vtrendlines = dataObj.vtrendlines;\n    yAxisConf.trendlines = dataObj.trendlines;\n\n    return {\n      yAxisConf: [yAxisConf],\n      xAxisConf: [xAxisConf]\n    };\n  }\n\n  /**\n   * Returns x-axis configuration for chart.\n   * @return {Object} configurations of x-axis.\n   */\n  getSpecificxAxisConf () {\n    var iapi = this,\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      xAxisConf = iapi.getBasexAxisConf();\n\n    xAxisConf.showZeroPlane = chartAttrs.showvzeroplane;\n    xAxisConf.zeroPlaneThickness = chartAttrs.vzeroplanethickness;\n    xAxisConf.zeroPlaneAlpha = chartAttrs.vzeroplanealpha;\n    xAxisConf.showAxisLine = pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines, chartAttrs.drawAxisLines, 0);\n    xAxisConf.axisLineColor = pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, '#000000');\n    xAxisConf.isReverse = false;\n    xAxisConf.showAlternateGridColor = pluckNumber(chartAttrs.showalternatevgridcolor, 0);\n    xAxisConf.numDivLines = chartAttrs.numvdivlines;\n    xAxisConf.maxLabelHeight = chartAttrs.maxlabelheight;\n    xAxisConf.axisName = chartAttrs.xaxisname;\n    xAxisConf.setAdaptiveMin = chartAttrs.setadaptivexmin;\n    xAxisConf.showLimits = chartAttrs.showvlimits;\n    xAxisConf.showDivLineValues = pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues);\n\n    return xAxisConf;\n  }\n\n  /**\n   * Returns y-axis configuration for chart.\n   * @return {Object} configurations of y-axis.\n   */\n  getSpecificyAxisConf () {\n    var iapi = this,\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      palleteString = iapi.config.is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      invertYAxis = !!pluckNumber(chartAttrs.invertyaxis, 0), // eslint-disable-line good-practices/no-single-usage-variable\n      colorM = iapi.getFromEnv('color-manager'),\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    return {\n      isVertical: true,\n      isReverse: !invertYAxis,\n      isOpposit: isEqualString(chartAttrs.yaxisposition, 'right'),\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, 'Verdana,sans'),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.yaxisnamepadding,\n      axisValuePadding: chartAttrs.yaxisvaluespadding,\n      axisNameFont: chartAttrs.yaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.yaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.yaxisnamefontsize,\n      axisNameFontColor: chartAttrs.yaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.yaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.yaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.yaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.yaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.yaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.yaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.yaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.yaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.yaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.yaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.yaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.yaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.yaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.yaxisnameborderdashgap,\n      axisNameWidth: chartAttrs.yaxisnamewidth,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n      axisName: chartAttrs.yaxisname,\n      divLineColor: pluck(chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.divlinealpha, colorM.getColor('divLineAlpha')),\n      divLineThickness: pluckNumber(chartAttrs.divlinethickness, 2),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n      alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor('altHGridColor')),\n      alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor('altHGridAlpha')),\n      numDivLines: chartAttrs.numdivlines,\n      axisMinValue: chartAttrs.yaxisminvalue,\n      axisMaxValue: chartAttrs.yaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptiveymin,\n      adjustDiv: chartAttrs.adjustdiv,\n      labelStep: chartAttrs.yaxisvaluesstep,\n      showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n      showLimits: pluckNumber(chartAttrs.showyaxislimits, chartAttrs.showlimits, iapi.showLimits),\n      showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n      showZeroPlane: chartAttrs.showzeroplane,\n      zeroPlaneColor: chartAttrs.zeroplanecolor,\n      zeroPlaneThickness: chartAttrs.zeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showyaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n      base: chartAttrs.base,\n      logBase: chartAttrs.logbase,\n      axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, '#000000'),\n      showMinorDivLineValues: pluckNumber(chartAttrs.showminordivlinevalues, 0),\n      numMinorDivLines: chartAttrs.numminordivlines,\n      labelFont: chartAttrs.yaxisvaluefont,\n      labelFontSize: this.computeFontSize(chartAttrs.yaxisvaluefontsize),\n      labelFontSizeWithUnit: chartAttrs.yaxisvaluefontsize,\n      labelFontColor: chartAttrs.yaxisvaluefontcolor,\n      labelAlpha: chartAttrs.yaxisvaluealpha,\n      labelFontBold: chartAttrs.yaxisvaluefontbold,\n      labelFontItalic: chartAttrs.yaxisvaluefontitalic,\n      labelBdrColor: chartAttrs.yaxisvaluebordercolor,\n      labelBdrAlpha: chartAttrs.yaxisvalueborderalpha,\n      labelBgAlpha: chartAttrs.yaxisvaluebgalpha,\n      labelLink: chartAttrs.yaxisvaluelink,\n      labelBgColor: chartAttrs.yaxisvaluebgcolor,\n      labelBdrThickness: chartAttrs.yaxisvalueborderthickness,\n      labelBdrPadding: chartAttrs.yaxisvalueborderpadding,\n      labelBdrRadius: chartAttrs.yaxisvalueborderradius,\n      labelBdrDashed: chartAttrs.yaxisvalueborderdashed,\n      labelBdrDashLen: chartAttrs.yaxisvalueborderdashlen,\n      labelBdrDashGap: chartAttrs.yaxisvalueborderdashgap\n    };\n  }\n}\nexport default MsLog;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\n// import CartesianAxis from '../axis/cartesian';\nimport LogAxis from '@fusioncharts/core/src/axis/log';\nimport CategoryAxis from '@fusioncharts/core/src/axis/category';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n    zoomObj = {\n      zoomable: true,\n      pannable: true\n    },\n    config = chart._feedAxesRawData(),\n    yAxis,\n    xAxis,\n    redraw = () => axisRefVisualCartesian.asyncDraw();\n\n  componentFactory(chart, LogAxis, 'yAxis', 1, config.yAxisConf);\n  componentFactory(chart, CategoryAxis, 'xAxis', 1, config.xAxisConf);\n\n  yAxis = chart.getChildren('yAxis')[0];\n  xAxis = chart.getChildren('xAxis')[0];\n  yAxis.setLinkedItem('canvas', canvas);\n  xAxis.setLinkedItem('canvas', canvas);\n  axisRefVisualCartesian.setLinkedItem(yAxis.getId(), yAxis);\n  axisRefVisualCartesian.setLinkedItem(xAxis.getId(), xAxis);\n\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, xAxis);\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, yAxis);\n\n  canvas.attachAxis(xAxis, false, chart.zoomX ? zoomObj : {});\n  canvas.attachAxis(yAxis, true, chart.zoomY ? zoomObj : {});\n\n  chart._setCategories();\n}\n","import ScaleLog from '@fusioncharts/utils/src/scales/log';\nimport diff from '@fusioncharts/utils/src/scale-utils/array/diff';\nimport extent from '@fusioncharts/utils/src/array/extent';\nimport CartesianAxis from './cartesian';\nimport {\n  UNDEF,\n  pluckNumber,\n  pluck,\n  preDefStr,\n  getSuggestiveRotation,\n  convertColor\n} from '../lib';\nimport { getTrendLineLimits } from './common-api';\n\nvar validate = function (param) {\n    if (param === null || param === UNDEF || param === '' || isNaN(param)) {\n    // Variable is not specified - so return false.\n      return false;\n    }\n    // Variable is specified - so return true.\n    return true;\n  },\n  queryOptions = { wrtVisible: true },\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  POSITION_END = preDefStr.POSITION_END,\n  LABEL_ID = '_label',\n  BLANKSTRING = '',\n  EVENTARGS = 'eventArgs',\n  NOSTRING = 'none',\n  POINTER = 'pointer',\n  logTicksMerge = function (majorTickArr = [], minorTickArr = []) {\n    if (majorTickArr.length === 0) return [];\n    let majorArrlen = majorTickArr.length,\n      minorArrLen = minorTickArr.length,\n      k = majorArrlen - 1,\n      l = minorArrLen - 1,\n      mergedArr = [majorTickArr[k]];\n    k--;\n    while (k >= 0) {\n      if (minorTickArr[l] > majorTickArr[k]) {\n        mergedArr.push(minorTickArr[l]);\n        l--;\n      } else {\n        mergedArr.push(majorTickArr[k]);\n        k--;\n      }\n    }\n    return mergedArr;\n  };\nclass LogAxis extends CartesianAxis {\n  constructor () {\n    super();\n    this.config.scale = new ScaleLog();\n    this.config.labelMap = [];\n  }\n\n  /**\n   * Sets the default configuration of the axis\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.base = 10;\n    config.showMinorDivLineValues = 1;\n    config.numMinorDivLines = UNDEF;\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'log';\n  }\n\n  /**\n   * Prepare the axis attributes for use by the chart drawing. It applies some log specific\n   * values to the axis' configuration.\n   * @param  {Object}  rawAttr The raw attributes to be set\n   */\n  configureAttributes (rawAttr) {\n    var axis = this,\n      axisConfig = axis.config,\n      numberFormatter = axis.getFromEnv('number-formatter'),\n      colorM = axis.getFromEnv('color-manager'),\n      axisAttr;\n\n    super.configureAttributes(rawAttr);\n    axisAttr = axisConfig.rawAttr;\n\n    axisConfig.minorDivlinecolor = convertColor(pluck(axisAttr.minorDivlinecolor,\n      colorM.getColor('divLineColor')),\n    pluckNumber(axisAttr.minorDivLineAlpha, colorM.getColor('divLineAlpha') / 2));\n    axisConfig.axisMinValue = numberFormatter.getCleanValue(axisAttr.axisMinValue);\n    axisConfig.axisMaxValue = numberFormatter.getCleanValue(axisAttr.axisMaxValue);\n    axisConfig.minorTicks = [];\n\n    if (axisConfig.axisMinValue <= 0) {\n      axisConfig.axisMinValue = UNDEF;\n    }\n\n    if (axisConfig.axisMaxValue <= 0) {\n      axisConfig.axisMaxValue = UNDEF;\n    }\n    axis.getScale().setBase(axisConfig.base);\n    axisConfig.minorDivLineThickness = pluckNumber(axisAttr.minorDivLineThickness, 1);\n    axisConfig.band.isDraw = 0;\n  }\n\n  generateTicks () {\n    let ticks = this.getScale().ticks();\n    this.config._allTicks = ticks.slice();\n    return ticks;\n  }\n\n  /**\n   * Generates minor ticks between every majot tick visible in the current visible range\n   */\n  generateMinorTicks () {\n    return this.getScale()\n      .minorTicks(this.config.numMinorDivLines);\n  }\n\n  _setAxisRange ({ min = 0.1, max = 1 }) {\n    var scale = this.getScale().setDomain([min, max]).nice(),\n      axisConfig = this.config,\n      axisRange = axisConfig.axisRange;\n\n    axisConfig.ticks = this.generateTicks();\n    axisConfig.minorTicks = this.generateMinorTicks();\n\n    // eslint-disable-next-line\n    [min, max] = scale.getDomain();\n    axisRange.max = max;\n    axisRange.min = min;\n\n    this.setVisibleConfig(min, max);\n  }\n\n  setDataLimit (_max, _min) {\n    var axis = this,\n      max = _max,\n      min = _min,\n      axisConfig = axis.config,\n      AxisMaxValue = axisConfig.axisMaxValue,\n      AxisMinValue = axisConfig.axisMinValue,\n      trendMin,\n      trendMax;\n\n    if (validate(AxisMinValue) && Number(AxisMinValue) <= min) {\n      min = AxisMinValue;\n    }\n    if (validate(AxisMaxValue) && Number(AxisMaxValue) >= max) {\n      max = AxisMaxValue;\n    }\n\n    if (min === 0) {\n      min = 1;\n    }\n    if (max === 0) {\n      max = axisConfig.base;\n    }\n\n    [trendMin, trendMax] = axis.getTrendLineLimits();\n\n    [min, max] = extent([trendMin, trendMax, min, max], a => Number(a));\n\n    this._setAxisRange({min, max});\n  }\n\n  _parseLabel () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      axisRange = axisConfig.axisRange,\n      isOpposit = axisConfig.isOpposit,\n      increment,\n      labels = axisConfig.labels,\n      style = labels.style,\n      i,\n      isVertical = axisConfig.isVertical,\n      max = axisRange.max,\n      min = axisRange.min,\n      canvasBottom = chartConfig.canvasBottom,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasRight = chartConfig.canvasRight,\n      canvasTop = chartConfig.canvasTop,\n      axisPadding = axisConfig.labelPadding,\n      numberFormatter = axis.getFromEnv('number-formatter'),\n      axisValueMaxH = axisConfig.labelMaxH,\n      axisValueMaxW = axisConfig.labelMaxW,\n      axisStartPosition = axisConfig.axisStartPosition,\n      text,\n      getLimit,\n      labelRotation,\n      labelLineHeight,\n      numberFormatterFn,\n      addCategoryPadding,\n      axisAttrObj,\n      allTicks,\n      ticksLen,\n      tickVal,\n      tickInPx,\n      prevPos,\n      labelMaxProp,\n      labelArr,\n      axisComp = axis.components,\n      minorTicks = axisConfig.minorTicks,\n      checkForLimit;\n\n    if (style.lineHeight) {\n      labelLineHeight = style.lineHeight;\n      if (labelLineHeight.indexOf('px') !== -1) {\n        labelLineHeight = labelLineHeight.replace('px', '');\n        labelLineHeight = parseFloat(labelLineHeight);\n      }\n    }\n    // checking if labels are to be drawn user can decide or can be decided by axis placeAxis function\n    if (axisConfig.labels.isDraw) {\n      checkForLimit = axis.getZoom() !== 1;\n\n      labelArr = axisComp.labels;\n\n      // initialize the increment by taking account the label step\n      axisConfig.labels.step ? increment = axisRange.tickInterval * axisConfig.labels.step\n        : increment = axisRange.tickInterval;\n      labelRotation = axisConfig.labels.rotation;\n      // intelligently calculate the loop max and loop min from the visual active dataset\n      // get the visible configuration means the value between the dataset is visible\n      getLimit = this.getVisibleConfig();\n\n      axisComp.labelIndexArr = [];\n\n      axisConfig.allTicks = allTicks = logTicksMerge(axisConfig.ticks, axisConfig.minorTicks);\n\n      labelMaxProp = isVertical ? axisValueMaxH : axisValueMaxW;\n\n      ticksLen = allTicks.length;\n      for (i = 0; i < ticksLen; i++) {\n        tickVal = allTicks[i];\n        tickInPx = axis.getPixel(tickVal, queryOptions);\n        // if minor div and minor value is set to display none\n        if (minorTicks.indexOf(tickVal) >= 0 && !axisConfig.showMinorDivLineValues) {\n          continue;\n        }\n        // check for overlap\n        if (prevPos) {\n          if (tickInPx > prevPos - labelMaxProp &&\n                            tickInPx < prevPos + labelMaxProp) {\n            continue;\n          }\n        }\n        // if value is not between the visual limit increment it and continue\n        if (checkForLimit && (tickVal < getLimit.minValue || tickVal > getLimit.maxValue)) {\n          continue;\n        }\n        // if values are not limit value and label drawing is off other\n        // than limit increment it and continue\n        if (!axisConfig.labels.drawNormalVal && !(axisConfig.labels.drawLimitVal &&\n                        (tickVal === min || tickVal === max))) {\n          continue;\n        }\n        if (!axisConfig.labels.drawNormalVal && !(tickVal === min || tickVal === max)) {\n          continue;\n        }\n        // if value are limit value but limit value are not mean to be drawn\n        if (!axisConfig.labels.drawLimitVal && (tickVal === min || tickVal === max)) {\n          continue;\n        }\n        // if value is zero and show zero plane is off\n        if (axisConfig.showZeroPlaneValue === 0 && axisConfig.showZeroPlane === 0 && tickVal === 0) {\n          continue;\n        }\n        // For overlapping of 0 and other value give priority to zero value\n        if (axisConfig.showZeroPlane === 1 && axisConfig.showZeroPlaneValue === 1 &&\n                            ((tickVal < 0 && (tickVal + increment) > 0) ||\n                                (tickVal > 0 && (tickVal - increment) < 0))) {\n          if (isVertical) {\n            if ((tickInPx + axisValueMaxH) >=\n                                axis.getPixel(0, queryOptions) && axis.getPixel(0, queryOptions) >=\n                                (tickInPx - axisValueMaxH)) {\n              continue;\n            }\n          } else {\n            if ((tickInPx + axisValueMaxW) >=\n                                axis.getPixel(0, queryOptions) && axis.getPixel(0, queryOptions) >=\n                                (tickInPx - axisValueMaxW)) {\n              continue;\n            }\n          }\n        }\n        // Common style attribute for both axis\n        axisAttrObj = {\n          fill: style.color,\n          'font-size': style.fontSize,\n          'cursor': style.labelLink ? POINTER : ''\n        };\n        // make the attribute ready to use\n        // y-axis\n        if (isVertical) {\n          if (axisConfig.numberFormatterFn) {\n            numberFormatterFn = numberFormatter[axisConfig.numberFormatterFn];\n          } else if (axisConfig.isPercent) {\n            numberFormatterFn = numberFormatter.percentValue;\n          } else {\n            numberFormatterFn = numberFormatter.yAxis;\n          }\n          text = '' + numberFormatterFn.call(numberFormatter, tickVal);\n          // @temp\n          addCategoryPadding = axisConfig.hasCategory\n            ? axisConfig.categories.category[i].labelPadding || 0 : 0;\n          axisAttrObj['text-anchor'] = isOpposit ? POSITION_START : POSITION_END;\n          axisAttrObj.text = text;\n          axisAttrObj.x = isOpposit ? (axisStartPosition || canvasRight) + axisPadding\n            : (axisStartPosition || canvasLeft) - axisPadding;\n          axisAttrObj.y = addCategoryPadding ? tickInPx + addCategoryPadding\n            : tickInPx;\n          prevPos = axisAttrObj.y;\n          // x-axis\n        } else {\n          if (axisConfig.numberFormatterFn) {\n            numberFormatterFn = numberFormatter[axisConfig.numberFormatterFn];\n          } else if (axisConfig.isPercent) {\n            numberFormatterFn = numberFormatter.percentValue;\n          } else {\n            numberFormatterFn = numberFormatter.xAxis;\n          }\n          text = '' + numberFormatterFn.call(numberFormatter, tickVal);\n          // @temp\n          addCategoryPadding = axisConfig.hasCategory\n            ? Number(axisConfig.categories.category[i].labelPadding) || 0 : 0;\n          axisAttrObj.text = text;\n          axisAttrObj.x = tickInPx;\n          axisAttrObj.y = isOpposit ? (axisStartPosition || canvasTop) - axisPadding\n            : (axisStartPosition || canvasBottom) + axisPadding;\n          if (addCategoryPadding) {\n            axisAttrObj.y += addCategoryPadding;\n          }\n          if (labelRotation) {\n            axisAttrObj['text-anchor'] = isOpposit ? POSITION_START : POSITION_END;\n            axisAttrObj['vertical-align'] = 'middle';\n          } else {\n            axisAttrObj['vertical-align'] = isOpposit ? POSITION_BOTTOM : POSITION_TOP;\n          }\n          prevPos = axisAttrObj.x;\n        }\n\n        // If labels shift is applicable (Specially for 3D) then apply the changes\n        if (labels.shiftX) {\n          axisAttrObj.x += labels.shiftX;\n        }\n        if (labels.shiftY) {\n          axisAttrObj.y += labels.shiftY;\n        }\n        axisAttrObj.transform = getSuggestiveRotation(labelRotation,\n          axisAttrObj.x, axisAttrObj.y);\n        // check if extra label element is present don't draw it just use it by changing the attributes\n        axisComp.labelIndexArr.push(i);\n        labelArr[i] = labelArr[i] ||\n          {\n            config: {\n              props: {\n                label: {\n                }\n              }\n            }\n          };\n        if (typeof tickVal === 'undefined') {\n          axisAttrObj['text-bound'] = [];\n        } else {\n          axisAttrObj['text-bound'] = [pluck(style.backgroundColor, BLANKSTRING),\n            pluck(style.borderColor, BLANKSTRING),\n            pluck(style.borderThickness, BLANKSTRING),\n            pluck(style.borderPadding, 0),\n            pluck(style.borderRadius, 0),\n            pluck(style.borderDash, NOSTRING)];\n        }\n        labelArr[i].config.props.label.attr = axisAttrObj;\n        labelArr[i].config.props.label.css = text.css;\n        labelArr[i].config.value = tickVal;\n      }\n    }\n  }\n  _drawLabel () {\n    var axis = this,\n      axisConfig = axis.config,\n      animationManager = axis.getFromEnv('animationManager'),\n      chart = axis.getFromEnv('chart'),\n      labels = axisConfig.labels,\n      style = labels.style,\n      i,\n      j,\n      axisContainer = axisConfig.axisContainer,\n      id,\n      mapArr = [],\n      removeElementsArr,\n      removeElem,\n      textElement,\n      axisComp = axis.components,\n      labelIndexArr = axisComp.labelIndexArr,\n      css = {\n        fontFamily: style.fontFamily,\n        fontSize: style.fontSize,\n        fontWeight: style.fontWeight,\n        fontStyle: style.fontStyle,\n        lineHeight: style.lineHeight\n      },\n      labelArrLen,\n      ticksVal,\n      labelArr,\n      raiseEvent = function (event) {\n        return function (data) {\n          var ele = this;\n          chart.plotEventHandler(ele, data, event);\n        };\n      },\n      removeElements = arrOfId => {\n        for (i = 0; i < arrOfId.length; ++i) {\n          removeElem = axis.getGraphicalElement(arrOfId[i]);\n          removeElem && axis.removeGraphicalElement(removeElem);\n        }\n      };\n\n    // checking if labels are to be drawn user can decide or can be decided by axis placeAxis function\n    if (axisConfig.labels.isDraw) {\n      labelArr = axisComp.labels;\n\n      axisContainer.css(css);\n\n      labelArrLen = labelIndexArr.length;\n      for (j = 0; j < labelArrLen; j++) {\n        i = labelIndexArr[j];\n        ticksVal = labelArr[i].config.value;\n\n        id = ticksVal + LABEL_ID;\n        textElement = axis.getGraphicalElement(id);\n        mapArr.push(id);\n        textElement = this.addGraphicalElement(id, animationManager.setAnimation({\n          container: axisContainer,\n          el: textElement || 'text',\n          attr: labelArr[i].config.props.label.attr,\n          data: {\n            value: ticksVal\n          },\n          component: this,\n          label: 'text',\n          css: labelArr[i].config.props.label.css\n        }));\n        textElement.on('fc-click', raiseEvent('dataLabelClick'))\n          .hover(raiseEvent('dataLabelRollOver'), raiseEvent('dataLabelRollOut'));\n\n        textElement.data(EVENTARGS, {\n          link: style.labelLink,\n          text: labelArr[i].config.props.label.attr.text,\n          index: i\n        });\n      }\n      removeElementsArr = diff(axisConfig.labelMap, mapArr);\n    } else {\n      removeElementsArr = axisConfig.labelMap;\n    }\n    axisConfig.labelMap = mapArr;\n    removeElements(removeElementsArr);\n  }\n\n  _getVMaxLabelDimention () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      smartLabel = axis.getFromEnv('smartLabel'),\n      numberFormatter = axis.getFromEnv('number-formatter'),\n      labelStyle = axisConfig.labels.style,\n      maxTextSize = 0,\n      divArr,\n      divArrLen,\n      maxTextDim,\n      i,\n      text,\n      dimention,\n      numberFormatterFn,\n      curDiv;\n\n    smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n    smartLabel.setStyle({\n      fontSize: labelStyle.fontSize,\n      fontFamily: labelStyle.fontFamily,\n      lineHeight: labelStyle.lineHeight,\n      fontWeight: labelStyle.fontWeight\n    });\n\n    if (axisConfig.isPercent) {\n      numberFormatterFn = numberFormatter.percentValue;\n    } else {\n      numberFormatterFn = numberFormatter.xAxis;\n    }\n\n    axisConfig.allTicks = divArr = logTicksMerge(axisConfig.ticks, axisConfig.minorTicks);\n    divArrLen = divArr.length;\n\n    for (i = 0; i < divArrLen; i++) {\n      curDiv = divArr[i];\n      text = '' + numberFormatterFn.call(numberFormatter, curDiv);\n\n      dimention = smartLabel.getOriSize(text);\n      axis.components.labels[i] = {\n        config: {\n          width: dimention.width,\n          height: dimention.height,\n          props: {\n            label: {\n            }\n          }\n        }\n      };\n      if (text.length > maxTextSize) {\n        maxTextDim = dimention;\n        maxTextSize = text.length;\n      }\n    }\n    return maxTextDim;\n  }\n  _getHMaxLabelDimention () {\n    // since there is no difference between vertival and horizontal label dimentions api in log axis yet\n    return this._getVMaxLabelDimention();\n  }\n  getCleanValue (_num) {\n    var axis = this,\n      num = _num,\n      value = null;\n    num = Math.abs(num);\n    if (num > 0) {\n      value = axis.getFromEnv('number-formatter').getCleanValue(num);\n    }\n    return value;\n  }\n}\n\nLogAxis.prototype.getTrendLineLimits = getTrendLineLimits;\n\nexport default LogAxis;\n","import Logmsline from '@fusioncharts/powercharts/src/chart/logmsline';\nexport default Logmsline;\n","import MSLog from '../_internal/mslog';\nimport LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\n\nlet LINE = 'line';\n\nclass LogMSLine extends MSLog {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'LogMSLine';\n  }\n\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'LogMSLine';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = LINE;\n    config.zeroplanethickness = 1;\n    config.enablemousetracking = true;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n    _setDefaultConfig.call(this);\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n  getDSdef () {\n    return LineDataset;\n  }\n}\nexport default LogMSLine;\n","import Logstackedcolumn2d from '@fusioncharts/powercharts/src/chart/logstackedcolumn2d';\nexport default Logstackedcolumn2d;\n","import LogMSColumn2d from '../logmscolumn2d';\nimport StackManager from '@fusioncharts/charts/src/dataset/groups/cartesian-stack';\n\nclass LogStackedColumn2d extends LogMSColumn2d {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'LogStackedColumn2d';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'LogStackedColumn2d';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.isstacked = true;\n  }\n  getDSGroupdef () {\n    return StackManager;\n  }\n}\nexport default LogStackedColumn2d;\n","import Errorbar2d from '@fusioncharts/powercharts/src/chart/errorbar2d';\nexport default Errorbar2d;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport MultiSeriesManager from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\nimport ErrorBar2DDataset from '../../dataset/errorbar2d';\n\nconst ERRORBAR_2D = 'errorbar2d';\nclass ErrorBar2D extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ErrorBar2D';\n  }\n\n  constructor () {\n    super();\n    this.showValues = 0;\n    this.isErrorChart = true;\n    // this.fireGroupEvent = true;\n    this.eiMethods = { };\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ErrorBar2D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.hasLegend = true;\n    config.defaultDatasetType = ERRORBAR_2D;\n    config.enablemousetracking = true;\n  }\n  getDSGroupdef () {\n    return MultiSeriesManager;\n  }\n  getDSdef () {\n    return ErrorBar2DDataset;\n  }\n}\nexport default ErrorBar2D;\n","import { preDefStr, parseTooltext, pluck, getValidValue, pluckNumber, getFirstValue, HUNDREDSTRING,\n  parseUnsafeString, convertColor, getFirstAlpha, getFirstColor } from '@fusioncharts/core/src/lib';\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport errorbarAnimation from './index.animation';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_AAAAAA = colorStrings.AAAAAA,\n  ROUND = preDefStr.ROUND,\n  MOUSEOVER = 'mouseOver',\n  MOUSEOUT = 'mouseOut',\n  PERCENTAGESTRING = preDefStr.PERCENTAGESTRING,\n  pStr = preDefStr.pStr,\n  sStr = preDefStr.sStr,\n  BLANKSTRING = '',\n  UNDEF,\n  removePlots,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  COMMASPACE = ', ',\n  // showHoverEffectStr = preDefStr.showHoverEffectStr,\n  // SETROLLOVERATTR = preDefStr.setRolloverAttrStr,\n  // SETROLLOUTATTR = preDefStr.setRolloutAttrStr,\n  DEFAULT_CURSOR = 'default',\n\n  POINTER = 'pointer',\n  EVENTARGS = 'eventArgs',\n  GROUPID = 'groupId',\n  M = 'M',\n  H = 'H',\n  V = 'V',\n  _getHoveredPlot,\n  _firePlotEvent,\n  _checkPointerOverPlot,\n  _checkPointerOverErrorBar,\n  _rolloverResponseSetter = function (chart, data, event, dataset) {\n    var dataGraphics = data.graphics,\n      elem = dataGraphics && dataGraphics.element,\n      animationManager = chart.getFromEnv('animationManager');\n\n    if (!data.errorBarHovered && elem && elem.getData().showHoverEffect !== 0) {\n      animationManager.setAnimationState(MOUSEOVER);\n      animationManager.setAnimation({\n        el: elem,\n        label: 'rect',\n        component: dataset,\n        attr: elem.getData().setRolloverAttr,\n        doNotRemove: true\n      });\n    }\n    elem && chart.plotEventHandler(elem, event, ROLLOVER);\n  },\n  _rolloutResponseSetter = function (chart, data, event, dataset) {\n    var dataGraphics = data.graphics,\n      elem = dataGraphics && dataGraphics.element,\n      animationManager = chart.getFromEnv('animationManager');\n\n    if (!data.errorBarHovered && elem && elem.getData().showHoverEffect !== 0) {\n      animationManager.setAnimationState(MOUSEOUT);\n      animationManager.setAnimation({\n        el: elem,\n        label: 'rect',\n        component: dataset,\n        attr: elem.getData().setRolloutAttr,\n        doNotRemove: true\n      });\n    }\n    elem && chart.plotEventHandler(elem, event, ROLLOUT);\n  };\naddDep({\n  name: 'errorbar2DColumnAnimation',\n  type: 'animationRule',\n  extension: errorbarAnimation.column\n});\naddDep({\n  name: 'errorbar2DErrorAnimation',\n  type: 'animationRule',\n  extension: errorbarAnimation.error\n});\nclass ErrorBar2DDataset extends ColumnDataset {\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.drawCallBackFn = (state) => {\n      return function () {\n        if (state === 'disappearing') {\n          this.hide();\n        } else {\n          this.show();\n        }\n      };\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'errorBar2D';\n  }\n  /*\n   * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n   * This function is called once from the init() function of the Column class.\n   */\n  ErrorValueConfigure () {\n    var dataSet = this,\n      conf = dataSet.config,\n      // fcJSON = dataSet.fcJSON,\n      JSONData = conf.JSONData,\n      setDataArr = JSONData.data,\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      setData,\n      dataObj,\n      config,\n      dataStore = dataSet.components.data,\n      toolText,\n      seriesNameInTooltip = pluckNumber(chartAttr.seriesnameintooltip, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      seriesname,\n      tooltipSepChar = parseUnsafeString(pluck(chartAttr.tooltipsepchar, COMMASPACE)),\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      errorInPercent,\n      macroIndices,\n      parserConfig,\n      toolTipValue,\n      errorBarAlpha,\n      setErrorValue,\n      setPositiveErrorValue,\n      setNegativeErrorValue,\n      formatedVal,\n      setTooltext,\n      errorBarShadow,\n      maxValue = -Infinity,\n      minValue = Infinity,\n      parentYAxis,\n      setValue,\n      errorValue,\n      maxErrorValue,\n      catLen = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      len = Math.min(catLen, setDataArr && setDataArr.length), // eslint-disable-line good-practices/no-single-usage-variable\n      minErrorValue,\n      halfErrorBar,\n      positiveErrorValue,\n      negativeErrorValue,\n      cumulativeValueOnErrorBar,\n      positiveCumulativeErrorTooltext,\n      negativeCumulativeErrorTooltext,\n      getTooltext = function (setToolText) {\n        var tooltext;\n\n        if (!conf.showTooltip) {\n          tooltext = false;\n        } else {\n          if (formatedVal === null) {\n            tooltext = false;\n          } else if (setToolText !== UNDEF) {\n            macroIndices = [1, 2, 3, 4, 5, 6, 7, 99, 100, 101, 102, 120, 121, 131, 132];\n            parserConfig = {\n              yaxisName: parseUnsafeString(chartAttr.yaxisname),\n              xaxisName: parseUnsafeString(chartAttr.xaxisname),\n              formattedValue: config.toolTipValue,\n              errorValue: setErrorValue,\n              errorDataValue: config.errorToolTipValue,\n              errorPercentValue: config.errorPercentValue,\n              errorPercentDataValue: config.errorPercentValue,\n              positiveErrorValue: setPositiveErrorValue,\n              negativeErrorValue: setNegativeErrorValue,\n              positiveErrorDataValue: config.positiveErrorToolTipValue,\n              negativeErrorDataValue: config.negativeErrorToolTipValue,\n              label: config.label\n            };\n            tooltext = parseTooltext(setToolText, macroIndices,\n              parserConfig, setData, chartAttr, JSONData);\n          } else {\n            if (seriesNameInTooltip) {\n              seriesname = getFirstValue(JSONData && JSONData.seriesname);\n            }\n            tooltext = seriesname ? seriesname + tooltipSepChar : BLANKSTRING;\n            tooltext += config.label ? config.label + tooltipSepChar : BLANKSTRING;\n          }\n        }\n        return tooltext;\n      },\n      positiveErrorToolText,\n      negativeErrorToolText,\n      i;\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.errorInPercent = errorInPercent = pluckNumber(JSONData.errorinpercent, chartAttr.errorinpercent);// eslint-disable-line good-practices/no-single-usage-variable\n    conf.showValues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 0);\n    conf.errorBarShadow = errorBarShadow = pluckNumber(chartAttr.errorbarshadow, chartAttr.showshadow, 1);// eslint-disable-line good-practices/no-single-usage-variable\n    conf.ignoreEmptyDatasets = pluckNumber(JSONData.ignoreemptydatasets, 0);\n    halfErrorBar = pluckNumber(chartAttr.halferrorbar, 1);// eslint-disable-line good-practices/no-single-usage-variable\n    conf.notHalfErrorBar = !pluckNumber(chartAttr.halferrorbar, 1);\n\n    errorBarAlpha = getFirstAlpha(pluck(\n      JSONData.errorbaralpha, chartAttr.errorbaralpha, conf.plotfillalpha));\n    conf.errorBarWidthPercent = pluckNumber(\n      JSONData.errorbarwidthpercent, chartAttr.errorbarwidthpercent, 70);\n    conf.errorBarColor = convertColor(getFirstColor(\n      pluck(JSONData.errorbarcolor, chartAttr.errorbarcolor,\n        COLOR_AAAAAA)), errorBarAlpha);\n    conf.errorBarThickness = pluckNumber(\n      JSONData.errorbarthickness, chartAttr.errorbarthickness, 1);\n    conf.shadowOpacity = errorBarShadow ? (errorBarAlpha / 250) : 0;\n    conf.parentYAxis =\n      parentYAxis = pluck(JSONData.parentyaxis && JSONData.parentyaxis.toLowerCase(), pStr) === sStr ? 1 : 0;\n    conf.cumulativeValueOnErrorBar = pluckNumber(JSONData.cumulativevalueonerrorbar, chartAttr.cumulativevalueonerrorbar, 1);\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (!dataObj) {\n        continue;\n      }\n      setData = setDataArr && setDataArr[i];\n      config = dataObj && dataObj.config;\n      positiveErrorToolText = UNDEF;\n      negativeErrorToolText = UNDEF;\n\n      if (pluckNumber(setData.value) === UNDEF) {\n        continue;\n      }\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n      setValue = config.setValue;\n      config.setErrorValue = setErrorValue = numberFormatter.getCleanValue(setData.errorvalue);\n      config.errorInPercent = pluckNumber(setData.errorinpercent, errorInPercent, 0);\n      setPositiveErrorValue = numberFormatter.getCleanValue(pluckNumber(setData.positiveerrorvalue, setErrorValue));\n      setNegativeErrorValue = numberFormatter.getCleanValue(pluckNumber(setData.negativeerrorvalue, setErrorValue));\n\n      config.errorInPercent &&\n                (config.setErrorValue = setErrorValue = pluckNumber(((setErrorValue / 100) * setValue).toFixed(2)));\n\n      config.cumulativeValueOnErrorBar =\n                    pluckNumber(setData.cumulativevalueonerrorbar, conf.cumulativeValueOnErrorBar, 1);\n\n      config.positiveErrorValue =\n                    numberFormatter.getCleanValue(pluckNumber(setData.positiveerrorvalue, setData.errorvalue));\n\n      (config.errorInPercent && config.positiveErrorValue) &&\n                (config.positiveErrorValue = pluckNumber(((config.positiveErrorValue / 100) *\n                    setValue).toFixed(2)));\n      config.positiveCumulativeErrorValue = setValue +\n                    pluckNumber(config.positiveErrorValue, config.setErrorValue);\n\n      config.negativeErrorValue =\n                    numberFormatter.getCleanValue(pluckNumber(setData.negativeerrorvalue, setData.errorvalue));\n\n      (config.errorInPercent && config.negativeErrorValue) &&\n                (config.negativeErrorValue = pluckNumber(((config.negativeErrorValue / 100) *\n                    setValue).toFixed(2)));\n\n      config.negativeCumulativeErrorValue = setValue -\n                    pluckNumber(config.negativeErrorValue, config.setErrorValue);\n\n      config.errorToolTipValue = numberFormatter.dataLabels(setErrorValue, parentYAxis);\n\n      config.negativeErrorToolTipValue =\n                    numberFormatter.dataLabels(config.negativeErrorValue, parentYAxis);\n\n      config.negativeCumulativeErrorTooltipValue =\n                    numberFormatter.dataLabels(config.negativeCumulativeErrorValue, parentYAxis);\n\n      config.positiveErrorToolTipValue =\n                    numberFormatter.dataLabels(config.positiveErrorValue, parentYAxis);\n\n      config.positiveCumulativeErrorTooltipValue =\n                    numberFormatter.dataLabels(config.positiveCumulativeErrorValue, parentYAxis);\n\n      config.errorPercentValue =\n        (Math.round(((setErrorValue / setValue) * HUNDREDSTRING) * HUNDREDSTRING) / HUNDREDSTRING) + PERCENTAGESTRING;\n\n      cumulativeValueOnErrorBar = config.cumulativeValueOnErrorBar;\n\n      config.notHalfErrorBar = conf.notHalfErrorBar;\n      config.halfErrorBar = halfErrorBar;\n\n      config.showValue = pluckNumber(setData.showvalue, conf.showValues);\n      config.hasErrorValue = pluckNumber(setData.errorvalue) !== UNDEF ? 1 : 0;\n\n      errorValue = config.errorValue = setErrorValue;\n\n      toolTipValue = config.errorToolTipValue;\n\n      formatedVal = toolTipValue;\n\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext,\n        formatedVal), false));\n\n      toolText = getTooltext(setTooltext);\n\n      positiveErrorToolText = negativeErrorToolText = UNDEF;\n\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext,\n        config.positiveErrorToolTipValue), false));\n\n      (setTooltext && config.positiveErrorToolTipValue) &&\n                    (positiveErrorToolText = getTooltext(setTooltext));\n\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext,\n        config.negativeErrorToolTipValue), false));\n\n      (setTooltext && config.negativeErrorToolTipValue) &&\n                    (negativeErrorToolText = getTooltext(setTooltext));\n\n      if (cumulativeValueOnErrorBar) {\n        setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext,\n          config.positiveCumulativeErrorTooltipValue), false));\n\n        (setTooltext && config.positiveCumulativeErrorTooltipValue) &&\n                        (positiveCumulativeErrorTooltext = getTooltext(setTooltext));\n\n        setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext,\n          config.negativeCumulativeErrorTooltipValue), false));\n\n        (setTooltext && config.negativeCumulativeErrorTooltipValue) &&\n                        (negativeCumulativeErrorTooltext = getTooltext(setTooltext));\n      }\n\n      positiveErrorValue = config.positiveErrorValue;\n\n      negativeErrorValue = config.negativeErrorValue;\n\n      if (setData.positiveerrorvalue || setData.negativeerrorvalue) {\n        config.halfErrorBar = 0;\n        config.notHalfErrorBar = true;\n      }\n\n      maxErrorValue = setValue + (positiveErrorValue !== null ? positiveErrorValue : setErrorValue);\n      minErrorValue = setValue - (config.halfErrorBar ? 0 : ((negativeErrorValue < 0 && setValue < 0) ? 0\n        : (negativeErrorValue !== null ? negativeErrorValue : setErrorValue)));\n\n      maxValue = Math.max(maxValue, maxErrorValue, minErrorValue);\n      minValue = Math.min(minValue, maxErrorValue, minErrorValue);\n\n      config.errorValueArr = [];\n      (config.positiveErrorValue === null) && (config.positiveErrorValue = UNDEF);\n      errorValue = -config.positiveErrorValue;\n      config.errorValueArr.push({\n        errorValue: errorValue,\n        tooltext: cumulativeValueOnErrorBar ? positiveCumulativeErrorTooltext\n          : (positiveErrorToolText || toolText),\n        errorEdgeBar: true\n      });\n\n      config.errorValueArr.push({\n        errorValue: errorValue,\n        tooltext: positiveErrorToolText || toolText\n      });\n\n      if (config.notHalfErrorBar) {\n        errorValue = config.negativeErrorValue;\n        config.errorValueArr.push({\n          errorValue: errorValue,\n          tooltext: cumulativeValueOnErrorBar ? negativeCumulativeErrorTooltext\n            : (negativeErrorToolText || toolText),\n          errorEdgeBar: true\n        });\n        config.errorValueArr.push({\n          errorValue: errorValue,\n          tooltext: negativeErrorToolText || toolText\n        });\n      }\n      config.toolText = getTooltext(config.setTooltext);\n    }\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n  }\n  drawErrorValue () {\n    var dataSet = this,\n      conf = dataSet.config,\n      attr,\n      i,\n      k,\n      visible = dataSet.getState('visible'),\n      yAxis = dataSet.getFromEnv('yAxis'),\n      errorBarThickness = conf.errorBarThickness,\n      errorBarColor = conf.errorBarColor,\n\n      setLink,\n      xPos,\n      yPos,\n\n      dataObj,\n      setValue,\n      config,\n      animState,\n      scrollMaxVal = conf.scrollMaxVal, // eslint-disable-line good-practices/no-single-usage-variable\n      crispY,\n      crispX,\n      errorPath,\n      errorValPos,\n      errorValuePosFactor,\n      errorValueArr,\n      errorValueObj,\n      errorValue,\n      errorStartPos,\n      errorLen,\n      errorBarWidth,\n      halfErrorBarW,\n      groupId,\n      errorLineElem,\n      isNegative,\n      barXpos,\n      barYpos,\n      barWidth,\n      barHeight,\n      errorStartValue,\n      trackerConfig,\n      trackerTolerance,\n      errorTrackerConfig,\n      animationManager = dataSet.getFromEnv('animationManager');\n\n    // Loop through each data points\n    for (i = conf.scrollMinVal; i < scrollMaxVal; i++) {\n      dataObj = dataSet.components.data[i];\n      if (!dataObj) {\n        continue;\n      }\n      trackerConfig = dataObj.trackerConfig;\n      errorTrackerConfig = dataObj.errorTrackerConfig = {};\n      errorTrackerConfig.errorTrackerArr = [];\n      config = dataObj && dataObj.config;\n      setValue = config && config.setValue;\n      // If plot value is found \"null\", continue the loop to next iteration.\n      if (dataObj === UNDEF) {\n        continue;\n      } else if (dataObj && ((setValue === UNDEF || setValue === null) || (config.errorValue === BLANKSTRING ||\n        config.errorValue === UNDEF || (config.errorValue === null && config.positiveErrorValue === null &&\n        config.negativeErrorValue === null)))) {\n        // hide error bars\n        errorLen = dataObj.graphics.error && dataObj.graphics.error.length;\n        for (k = 0; k < errorLen; k++) {\n          if (dataObj.graphics.error && dataObj.graphics.error[k]) {\n            animationManager.setAnimation({\n              el: dataObj.graphics.error[k],\n              label: 'path',\n              callback: dataSet.drawCallBackFn('disappearing')\n            });\n            dataObj.graphics.error[k].shadow({ opacity: 0 });\n          }\n        }\n        continue;\n      }\n\n      dataObj.errorBar && (delete dataObj.errorBar);\n\n      errorValueArr = config.errorValueArr;\n      errorTrackerConfig.errorLen = errorLen = errorValueArr.length;\n\n      !dataObj.graphics.error && (dataObj.graphics.error = []);\n\n      groupId = dataSet.getJSONIndex() + '_' + i;\n\n      setLink = config.setLink;\n\n      isNegative = (setValue < 0);\n\n      barXpos = dataObj._xPos;\n      barYpos = dataObj._yPos;\n      barWidth = dataObj._width;\n      barHeight = dataObj._height;\n\n      yPos = isNegative ? (barYpos + barHeight) : barYpos;\n      xPos = barXpos + (barWidth / 2);\n\n      dataObj.errorBar || (dataObj.errorBar = []);\n\n      // Loop through errorValue array\n      while (errorLen--) {\n        errorLineElem = null;\n\n        errorTrackerConfig.errorTrackerArr[errorLen] = {};\n\n        errorValueObj = errorValueArr[errorLen];\n        errorTrackerConfig.errorTrackerArr[errorLen].tooltext = errorValueObj.tooltext;\n        errorStartValue = errorValueObj.errorStartValue;\n        errorStartPos = !isNaN(errorStartValue)\n          ? yAxis.getPixel(errorStartValue) : yPos;\n        errorValue = errorValueObj.errorValue;\n        if (errorValue === null || isNaN(errorValue)) {\n          if (dataObj.graphics.error && dataObj.graphics.error[errorLen]) {\n            animationManager.setAnimation({\n              el: dataObj.graphics.error[errorLen],\n              label: 'path',\n              doNotRemove: true,\n              callback: dataSet.drawCallBackFn('disappearing')\n            }).shadow({ opacity: 0 });\n          }\n\n          continue;\n        }\n        errorBarWidth = barWidth * (conf.errorBarWidthPercent / 100);\n        halfErrorBarW = errorBarWidth / 2;\n\n        errorValuePosFactor = visible ? -1 : 0;\n        // Vertical Error drawing\n        errorValPos = yAxis.getPixel(yAxis.getValue(!isNaN(errorStartValue) ? errorStartPos : barYpos) +\n          (errorValue * errorValuePosFactor), { wrtVisible: true });\n        (isNegative) && (errorValPos = errorValPos + barHeight);\n        crispY = errorValPos;\n        crispX = xPos;\n        errorBarThickness = pluckNumber(errorValueObj.errorBarThickness, errorBarThickness);\n        trackerTolerance = errorBarThickness > 5 ? (errorBarThickness / 2) : 2.5;\n        crispY = Math.round(errorValPos) +\n                            (errorBarThickness % 2 / 2);\n        crispX = Math.round(xPos) +\n                            (errorBarThickness % 2 / 2);\n        dataObj.errorBar[errorLen] || (dataObj.errorBar[errorLen] = []);\n        if (errorValueObj.errorEdgeBar) {\n          errorPath = [\n            M, crispX - halfErrorBarW, crispY,\n            H, (crispX + halfErrorBarW)\n          ];\n          dataObj.errorBar[errorLen][1] = {\n            _xPos: crispX - halfErrorBarW - trackerTolerance,\n            _yPos: crispY - trackerTolerance,\n            _height: 2 * trackerTolerance,\n            _width: 2 * (halfErrorBarW + trackerTolerance),\n            _toolText: errorValueObj.tooltext\n          };\n        } else {\n          errorPath = [\n            M, crispX, errorStartPos,\n            V, crispY\n          ];\n          dataObj.errorBar[errorLen][0] = {\n            _xPos: crispX - trackerTolerance,\n            _yPos: crispY < errorStartPos ? crispY : errorStartPos,\n            _height: Math.abs(errorStartPos - crispY),\n            _width: 2 * trackerTolerance,\n            _toolText: errorValueObj.tooltext\n          };\n        }\n        errorBarColor = pluck(errorValueObj.errorBarColor, errorBarColor);\n        attr = {\n          path: errorPath,\n          stroke: errorBarColor,\n          'stroke-width': errorBarThickness,\n          'cursor': setLink ? POINTER : BLANKSTRING,\n          'stroke-linecap': ROUND\n        };\n        animState = !dataObj.graphics.error[errorLen] && visible ? 'appearing' : visible ? 'updating' : 'disappearing';\n        errorLineElem = dataObj.graphics.error[errorLen] = animationManager.setAnimation({\n          el: dataObj.graphics.error[errorLen] || 'path',\n          container: dataSet.getContainer('errorPlotGroup'),\n          component: dataSet,\n          attr: attr,\n          label: 'path',\n          state: animState,\n          callback: dataSet.drawCallBackFn(animState)\n        }).shadow({ opacity: conf.shadowOpacity }, dataSet.getContainer('errorShadowGroup'));\n\n        dataSet.getFromEnv('chartConfig').enablemousetracking && errorLineElem\n          .data(GROUPID, groupId)\n          .data(EVENTARGS, trackerConfig.eventArgs);\n      }\n\n      if (!config.notHalfErrorBar) {\n        for (k = 2; k < 4; k++) {\n          dataObj.graphics.error && dataObj.graphics.error[k] && animationManager.setAnimation({\n            el: dataObj.graphics.error[k],\n            label: 'path',\n            doNotRemove: true,\n            callback: dataSet.drawCallBackFn('disappearing')\n          }).shadow({ opacity: 0 });\n        }\n      }\n    }\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {String} eventType name of the event\n   * @param {number} plotIndex index of the plot where this event has been occured\n   * @param {Event} originalEvent reference of the original mouse event\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      data = dataset.components.data[plotIndex],\n      setElement = data.graphics.element,\n      labelElement = data.graphics.label,\n      errorBarHovered = data.errorBarHovered,\n      setLink = data.config.setLink;\n\n    if (setElement) {\n      switch (eventType) {\n        case 'fc-mouseover' :\n          dataset._decideTooltipType(plotIndex, e);\n          _rolloverResponseSetter(chart, data, e, this);\n          if (setLink) {\n            setElement.css({ 'cursor': POINTER });\n            // labelElement is undefined in dataset graphics so checking for labelElement added\n            labelElement && (labelElement.css({ 'cursor': POINTER }));\n          }\n          break;\n        case 'fc-mouseout' :\n          dataset.getFromEnv('toolTipController').hide(dataset.config.currentToolTip);\n          _rolloutResponseSetter(chart, data, e, this);\n          if (setLink) {\n            setElement.css({ 'cursor': DEFAULT_CURSOR });\n            // labelElement is undefined in dataset graphics so checking for labelElement added\n            labelElement && (labelElement.css({ 'cursor': DEFAULT_CURSOR }));\n          }\n          break;\n        case 'fc-click' :\n          chart.plotEventHandler(setElement, e);\n          break;\n        case 'fc-mousemove' :\n          dataset._decideTooltipType(plotIndex, e);\n          if (errorBarHovered && !data._isRollover) {\n            setElement.showHoverEffect !== 0 && setElement.attr(setElement.getData().setRolloutAttr);\n            data._isRollover = true;\n            data._isRollout = false;\n          } else if (!errorBarHovered && !data._isRollout) {\n            setElement.showHoverEffect !== 0 &&\n                                 setElement.attr(setElement.getData().setRolloverAttr);\n            data._isRollover = false;\n            data._isRollout = true;\n          }\n      }\n    }\n  }\n  // Helper function of _checkPointerOverPlot().\n  _checkPointerOverErrorBar (pX, chartX, chartY) {\n    var dataStore = this.components.data,\n      pointObj = dataStore[pX],\n      hovered,\n      errorBarArr,\n      errorBarCompArr,\n      len,\n      errorBarCompLen,\n      toolText,\n      xPos,\n      yPos,\n      height,\n      width;\n\n    if (!pointObj) {\n      return;\n    }\n\n    errorBarArr = pointObj.errorBar;\n\n    if (!errorBarArr) {\n      return;\n    }\n\n    len = errorBarArr && errorBarArr.length;\n    while (len--) {\n      errorBarCompArr = errorBarArr[len];\n      errorBarCompLen = errorBarCompArr && errorBarCompArr.length;\n      while (errorBarCompLen--) {\n        if (!(errorBarCompArr[errorBarCompLen] && errorBarCompArr[errorBarCompLen]._xPos)) {\n          continue;\n        }\n        xPos = errorBarCompArr[errorBarCompLen]._xPos;\n        yPos = errorBarCompArr[errorBarCompLen]._yPos;\n        height = errorBarCompArr[errorBarCompLen]._height;\n        width = errorBarCompArr[errorBarCompLen]._width;\n        toolText = errorBarCompArr[errorBarCompLen]._toolText;\n\n        hovered = chartX >= xPos && chartX <= xPos + width &&\n                        chartY >= yPos && chartY <= yPos + height;\n\n        if (hovered) {\n          return {\n            pointIndex: pX,\n            hovered: hovered,\n            pointObj: dataStore[pX],\n            toolText: toolText\n          };\n        }\n      }\n    }\n  }\n  // Helper function of _getHoverPlot()\n  _checkPointerOverPlot (pX, chartX, chartY) {\n    var dataSet = this,\n      data = dataSet.components.data[pX],\n      config = data && data.config,\n      tooltipValueAtEnd,\n      hoverInfo;\n\n    if (!data) {\n      return;\n    }\n    tooltipValueAtEnd = (!dataSet.config.JSONData.plottooltext && !dataSet.getFromEnv('chart-attrib').plottooltext) ? config.toolTipValue : BLANKSTRING; // eslint-disable-line good-practices/no-single-usage-variable\n    hoverInfo = dataSet._checkPointerOverErrorBar(pX, chartX, chartY);\n    if (hoverInfo) {\n      data.errorBarHovered = true;\n      config.finalTooltext = hoverInfo.toolText;\n    } else {\n      hoverInfo = dataSet._checkPointerOverColumn(pX, chartX, chartY);\n      data.errorBarHovered = false;\n\n      hoverInfo && (config.finalTooltext = (config.toolText !== false) &&\n                                            (config.toolText + tooltipValueAtEnd));\n    }\n\n    return hoverInfo;\n  }\n  /**\n         * Function that retunr the nearest plot details\n         * @param {number} x x-axis position of the mouse cordinate\n         * @param {number} y y-axis position of the mouse cordinate\n         * @return {object} return an object with details of nearest polt and whether it is hovered or not\n         */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      x,\n      pX;\n\n    x = dataset.getFromEnv('xAxis').getValue(chartX);\n    pX = Math.round(x);\n\n    // Checking for overlap between two cosecutive column plots along x-axis\n    return (pX - x > 0 ? dataset._checkPointerOverPlot(pX, chartX, chartY) ||\n                dataset._checkPointerOverPlot(pX - 1, chartX, chartY)\n      : dataset._checkPointerOverPlot(pX + 1, chartX, chartY) ||\n                        dataset._checkPointerOverPlot(pX, chartX, chartY));\n  }\n  // Function to remove a data from a dataset during real time update.\n  removePlots () {\n    var dataSet = this,\n      components = dataSet.components,\n      removeDataArr = components.removeDataArr,\n      pool = components.pool || (components.pool = {\n        element: [],\n        hotElement: [],\n        label: []\n      }),\n      len = removeDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removeData,\n      graphics,\n      i,\n      k;\n\n    for (i = 0; i < len; i++) {\n      removeData = removeDataArr[0];\n      removeDataArr.splice(0, 1);\n      // In case of non existing data plot continue;\n      if (!removeData || !removeData.graphics) {\n        continue;\n      }\n\n      graphics = removeData.graphics;\n\n      graphics.element && graphics.element.hide() && graphics.element.shadow({ opacity: 0 });\n      for (k = 0; k < 4; k++) {\n        if (graphics.error && graphics.error[k]) {\n          dataSet.getFromEnv('animationManager').setAnimation({\n            el: graphics.error[k],\n            label: 'path'\n          });\n        }\n      }\n\n      // Storing the graphic elements for reuse.\n      removeData.graphics.element && (pool.element = pool.element.concat(removeData.graphics.element));\n      removeData.graphics.hotElement && (pool.hotElement = pool.hotElement.concat(removeData.graphics\n        .hotElement));\n      removeData.graphics.label && (pool.label = pool.label.concat(removeData.graphics.label));\n    }\n    components.pool = pool;\n  }\n}\nremovePlots = ErrorBar2DDataset.prototype.removePlots;\n_getHoveredPlot = ErrorBar2DDataset.prototype._getHoveredPlot;\n_firePlotEvent = ErrorBar2DDataset.prototype._firePlotEvent;\n_checkPointerOverPlot = ErrorBar2DDataset.prototype._checkPointerOverPlot;\n_checkPointerOverErrorBar = ErrorBar2DDataset.prototype._checkPointerOverErrorBar;\nexport { _getHoveredPlot, removePlots, _rolloverResponseSetter, _rolloutResponseSetter, _firePlotEvent, _checkPointerOverErrorBar,\n  _checkPointerOverPlot };\nexport default ErrorBar2DDataset;\n","import columnAnimation from '@fusioncharts/charts/src/dataset/column/index.animation';\nexport default {\n  column: { 'initial.dataset.errorBar2D': columnAnimation['initial.dataset.column'] },\n  error: {\n    'initial.dataset.errorBar2D': function () {\n      return {\n        'path.appearing': [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }]\n      };\n    }\n  }\n};\n","import Errorline from '@fusioncharts/powercharts/src/chart/errorline';\nexport default Errorline;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\nimport ErrorLineDataset from '../../dataset/errorline';\n\nconst ERRORLINE = 'errorline';\nclass ErrorLine extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ErrorLine';\n  }\n\n  constructor () {\n    super();\n    this.useErrorGroup = true;\n    this.isErrorChart = true;\n    this.hasAnchor = true;\n    // this.fireGroupEvent = true;\n    this.defaultPlotShadow = 1;\n    this.axisPaddingLeft = 0;\n    this.axisPaddingRight = 0;\n    this.canvasPaddingModifiers = ['anchor', 'errorbar'];\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ErrorLine';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = ERRORLINE;\n    _setDefaultConfig.call(this);\n    this.zeroplanethickness = 1;\n    this.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.defaultcrosslinethickness = 1;\n    config.enablemousetracking = true;\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n  getDSdef () {\n    return ErrorLineDataset;\n  }\n}\nexport default ErrorLine;\n","import { preDefStr, parseTooltext, pluck, getValidValue, pluckNumber, getFirstValue, isIE, HUNDREDSTRING, hasTouch,\n  TOUCH_THRESHOLD_PIXELS, CLICK_THRESHOLD_PIXELS, parseUnsafeString, convertColor, getFirstColor,\n  getFirstAlpha } from '@fusioncharts/core/src/lib';\nimport { _getHoveredPlot, _firePlotEvent, _checkPointerOverErrorBar,\n  removePlots } from '../errorbar2d';\nimport LINEDataset from '@fusioncharts/charts/src/dataset/line';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport errorlineErrorAnimation from './error.animation';\nimport errorlineLineAnimation from './line.animation';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_AAAAAA = colorStrings.AAAAAA,\n\n  // errorBarStr = preDefStr.errorBarStr,\n  // errorShadowStr = preDefStr.errorShadowStr,\n  ROUND = preDefStr.ROUND,\n  PERCENTAGESTRING = preDefStr.PERCENTAGESTRING,\n  BLANKSTRING = '',\n  UNDEF,\n  COMMASPACE = ', ',\n  POINTER = 'pointer',\n\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')', // invisible but clickable\n\n  M = 'M',\n  H = 'H',\n  V = 'V',\n  math = Math,\n  mathRound = math.round,\n  mathMin = math.min,\n  mathMax = math.max,\n  mathAbs = math.abs,\n  HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS : CLICK_THRESHOLD_PIXELS;\naddDep({\n  name: 'errorlineErrorAnimation',\n  type: 'animationRule',\n  extension: errorlineErrorAnimation\n});\naddDep({\n  name: 'errorlineLineAnimation',\n  type: 'animationRule',\n  extension: errorlineLineAnimation\n});\nclass ErrorLineDataset extends LINEDataset {\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.drawCallbackFn = (state) => {\n      return function () {\n        if (state === 'disappearing') {\n          this.hide();\n        }\n      };\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'errorLine';\n  }\n  /*\n   * Parses all the attributes for dataset level and set level\n   * Called from init function of area class and line class\n   * Both line and area attributes configuration is done here\n   */\n\n  ErrorValueConfigure () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      parentYAxis = conf.parentYAxis,\n      JSONData = conf.JSONData,\n      setDataArr = JSONData.data,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      len = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      setData,\n      dataObj,\n      config,\n      dataStore = dataSet.components.data,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      toolTipValue,\n      errorBarAlpha,\n      errorBarThickness,\n      setErrorValue,\n      formatedVal,\n      setTooltext,\n      setNegativeErrorValue,\n      setPositiveErrorValue,\n      positiveCumulativeErrorTooltext,\n      negativeCumulativeErrorTooltext,\n      positiveErrorToolText,\n      negativeErrorToolText,\n      errorBarShadow,\n      lineThickness = conf.linethickness,\n      maxValue = -Infinity,\n      minValue = Infinity,\n      maxErrorValue,\n      minErrorValue,\n      setValue,\n      errorValue,\n      cumulativeValueOnErrorBar,\n      tooltipSepChar = pluck(chartAttr.tooltipsepchar, COMMASPACE),\n      macroIndices,\n      parserConfig,\n      seriesname,\n      errorInPercent,\n      errorToolText,\n      seriesNameInTooltip = pluckNumber(chartAttr.seriesnameintooltip, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      getTooltext = function (setToolText) {\n        var toolText;\n\n        if (!chart.config.showtooltip) {\n          toolText = false;\n        } else {\n          if (formatedVal === null) {\n            toolText = false;\n          } else if (setToolText !== UNDEF) {\n            macroIndices = [1, 2, 3, 4, 5, 6, 7, 99, 100, 101, 102, 120, 121, 131, 132];\n            parserConfig = {\n              yaxisName: parseUnsafeString(chartAttr.yaxisname),\n              xaxisName: parseUnsafeString(chartAttr.xaxisname),\n              formattedValue: config.toolTipValue,\n              errorValue: setErrorValue,\n              errorDataValue: config.errorToolTipValue,\n              errorPercentValue: config.errorPercentValue,\n              errorPercentDataValue: config.errorPercentValue,\n              positiveErrorValue: setPositiveErrorValue,\n              negativeErrorValue: setNegativeErrorValue,\n              positiveErrorDataValue: config.positiveErrorToolTipValue,\n              negativeErrorDataValue: config.negativeErrorToolTipValue,\n              label: config.label\n            };\n            toolText = parseTooltext(setToolText, macroIndices,\n              parserConfig, setData, chartAttr, JSONData);\n          } else {\n            if (seriesNameInTooltip) {\n              seriesname = getFirstValue(JSONData && JSONData.seriesname);\n            }\n            toolText = seriesname ? seriesname + tooltipSepChar : BLANKSTRING;\n            toolText += config.label ? config.label + tooltipSepChar : BLANKSTRING;\n          }\n        }\n        return toolText;\n      },\n      i;\n\n    conf.errorBarShadow = errorBarShadow = pluckNumber(chartAttr.errorbarshadow, chartAttr.showshadow, 1); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.ignoreEmptyDatasets = pluckNumber(JSONData.ignoreemptydatasets, 0);\n    // halfErrorBar = pluckNumber(chartAttr.halferrorbar, 1);\n    conf.notHalfErrorBar = !pluckNumber(chartAttr.halferrorbar, 1);\n\n    errorBarAlpha = getFirstAlpha(pluck(\n      JSONData.errorbaralpha, chartAttr.errorbaralpha, conf.alpha));\n    conf.errorBarWidth = pluckNumber(JSONData.errorbarwidth,\n      chartAttr.errorbarwidth, 5);\n    conf.errorBarColor = convertColor(getFirstColor(\n      pluck(JSONData.errorbarcolor, chartAttr.errorbarcolor,\n        COLOR_AAAAAA)), errorBarAlpha);\n    errorBarThickness = pluckNumber(\n      JSONData.errorbarthickness, chartAttr.errorbarthickness, 1);\n    conf.errorBarThickness = errorBarThickness > lineThickness ? lineThickness\n      : errorBarThickness;\n    conf.shadowOpacity = errorBarShadow ? (errorBarAlpha / 250) : 0;\n\n    conf.errorInPercent = errorInPercent = pluckNumber(JSONData.errorinpercent, chartAttr.errorinpercent); // eslint-disable-line good-practices/no-single-usage-variable\n\n    conf.cumulativeValueOnErrorBar =\n                pluckNumber(JSONData.cumulativevalueonerrorbar, chartAttr.cumulativevalueonerrorbar, 1);\n\n    for (i = 0; i < len; i++) {\n      setData = setDataArr && setDataArr[i];\n\n      if (!setDataArr || !setData) {\n        continue;\n      }\n\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n\n      setValue = config.setValue;\n\n      config.notHalfErrorBar = conf.notHalfErrorBar;\n      setErrorValue = numberFormatter.getCleanValue(setData.errorvalue);\n      config.errorToolTipValue = numberFormatter.dataLabels(setErrorValue, parentYAxis);\n      setPositiveErrorValue = numberFormatter.getCleanValue(pluckNumber(setData.positiveerrorvalue, setErrorValue));\n      setNegativeErrorValue = numberFormatter.getCleanValue(pluckNumber(setData.negativeerrorvalue, setErrorValue));\n      // errorPercentValue = (mathRound(((setErrorValue / setValue) * HUNDREDSTRING) * HUNDREDSTRING) /\n      //               HUNDREDSTRING) + PERCENTAGESTRING;\n      config.setErrorValue = config.errorValue = errorValue = setErrorValue;\n      config.hasErrorValue = pluckNumber(setData.errorvalue) !== UNDEF ? 1 : 0;\n\n      toolTipValue = config.errorToolTipValue;\n\n      formatedVal = toolTipValue;\n\n      // Parsing tooltext against various configurations provided by the user.\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext, formatedVal), false));\n\n      errorToolText = getTooltext(setTooltext);\n\n      config.errorInPercent = pluckNumber(setData.errorinpercent, errorInPercent, 0);\n\n      config.errorInPercent &&\n                (config.setErrorValue = setErrorValue = pluckNumber(((setErrorValue / 100) * setValue).toFixed(2)));\n\n      config.cumulativeValueOnErrorBar = cumulativeValueOnErrorBar =\n                    pluckNumber(setData.cumulativevalueonerrorbar, conf.cumulativeValueOnErrorBar, 1);\n\n      config.positiveErrorValue =\n                    numberFormatter.getCleanValue(pluckNumber(setData.positiveerrorvalue, setData.errorvalue));\n\n      (config.errorInPercent && config.positiveErrorValue) &&\n                (config.positiveErrorValue = pluckNumber(((config.positiveErrorValue / 100) *\n                    setValue).toFixed(2)));\n\n      config.positiveCumulativeErrorValue = setValue +\n                    pluckNumber(config.positiveErrorValue, config.setErrorValue);\n\n      config.negativeErrorValue =\n                    numberFormatter.getCleanValue(pluckNumber(setData.negativeerrorvalue, setData.errorvalue));\n\n      (config.errorInPercent && config.negativeErrorValue) &&\n                (config.negativeErrorValue = pluckNumber(((config.negativeErrorValue / 100) *\n                    setValue).toFixed(2)));\n\n      config.negativeCumulativeErrorValue = setValue -\n                    pluckNumber(config.negativeErrorValue, config.setErrorValue);\n\n      config.errorToolTipValue = numberFormatter.dataLabels(setErrorValue, parentYAxis);\n\n      config.negativeErrorToolTipValue =\n                    numberFormatter.dataLabels(config.negativeErrorValue, parentYAxis);\n\n      config.negativeCumulativeErrorTooltipValue =\n                    numberFormatter.dataLabels(config.negativeCumulativeErrorValue, parentYAxis);\n\n      config.positiveErrorToolTipValue =\n                    numberFormatter.dataLabels(config.positiveErrorValue, parentYAxis);\n\n      config.positiveCumulativeErrorTooltipValue =\n                    numberFormatter.dataLabels(config.positiveCumulativeErrorValue, parentYAxis);\n\n      config.errorPercentValue = (mathRound(((setErrorValue / setValue) * HUNDREDSTRING) * HUNDREDSTRING) /\n                    HUNDREDSTRING) + PERCENTAGESTRING;\n\n      positiveErrorToolText = negativeErrorToolText = UNDEF;\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext,\n        config.positiveErrorToolTipValue), false));\n\n      (setTooltext && config.positiveErrorToolTipValue) &&\n                    (positiveErrorToolText = getTooltext(setTooltext));\n\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext,\n        config.negativeErrorToolTipValue), false));\n\n      (setTooltext && config.negativeErrorToolTipValue) &&\n                    (negativeErrorToolText = getTooltext(setTooltext));\n\n      if (setData.positiveerrorvalue || setData.negativeerrorvalue) {\n        config.halfErrorBar = 0;\n        config.notHalfErrorBar = true;\n      }\n\n      if (cumulativeValueOnErrorBar) {\n        setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext,\n          config.positiveCumulativeErrorTooltipValue), false));\n\n        (setTooltext && config.positiveCumulativeErrorTooltipValue) &&\n                        (positiveCumulativeErrorTooltext = getTooltext(setTooltext));\n\n        setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext,\n          config.negativeCumulativeErrorTooltipValue), false));\n\n        (setTooltext && config.negativeCumulativeErrorTooltipValue) &&\n                        (negativeCumulativeErrorTooltext = getTooltext(setTooltext));\n      }\n      maxErrorValue = setValue + (config.positiveErrorValue !== null\n        ? config.positiveErrorValue : setErrorValue);\n      minErrorValue = setValue - (config.halfErrorBar ? 0 : ((config.negativeErrorValue < 0 && setValue < 0) ? 0\n        : (config.negativeErrorValue !== null ? config.negativeErrorValue : setErrorValue)));\n\n      maxValue = mathMax(maxValue, maxErrorValue, minErrorValue);\n      minValue = mathMin(minValue, maxErrorValue, minErrorValue);\n\n      if (setErrorValue === null) {\n        setErrorValue = UNDEF;\n      }\n\n      config.errorValueArr = [];\n      (config.positiveErrorValue === null) && (config.positiveErrorValue = UNDEF);\n      errorValue = -config.positiveErrorValue;\n      config.errorValueArr.push({\n        errorValue: errorValue,\n        tooltext: cumulativeValueOnErrorBar ? positiveCumulativeErrorTooltext\n          : positiveErrorToolText || errorToolText,\n        errorEdgeBar: true\n      });\n\n      config.errorValueArr.push({\n        errorValue: errorValue,\n        tooltext: positiveErrorToolText || errorToolText\n      });\n\n      if (config.notHalfErrorBar) {\n        errorValue = config.negativeErrorValue;\n        config.errorValueArr.push({\n          errorValue: errorValue,\n          tooltext: cumulativeValueOnErrorBar ? negativeCumulativeErrorTooltext\n            : negativeErrorToolText || errorToolText,\n          errorEdgeBar: true\n        });\n        config.errorValueArr.push({\n          errorValue: errorValue,\n          tooltext: negativeErrorToolText || errorToolText\n        });\n      }\n\n      config.toolText = getTooltext(config.setTooltext); // toolText;\n    }\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n  }\n  /*\n         * Initialization of line dataset\n         * @param {Object} chart - chart object of fusioncharts\n         * @param {number} datasetIndex - index of line dataset\n         * @param {boolean} isLineSet - Whether it is a lineset or a dataset\n         * Called from draw graph of line\n         */\n  /*\n   * Makes a dataset visible when clicked on its respective legend\n   * Fired every time a deactivated legend is clicked\n   */\n  _show () {\n    var dataSet = this,\n      chart = dataSet.chart,\n      container = dataSet.graphics && dataSet.graphics.container,\n      dataLabelContainer = dataSet.graphics && dataSet.graphics.dataLabelContainer, // eslint-disable-line good-practices/no-single-usage-variable\n      errorGroupContainer = dataSet.graphics && dataSet.graphics.errorGroupContainer,\n      errorShadowContainer = dataSet.graphics && dataSet.graphics.errorShadowContainer;\n\n    chart._chartAnimation();\n    container.lineGroup.show();\n    container.anchorGroup.show();\n    container.anchorShadowGroup.show();\n    container.lineShadowGroup.show();\n    dataLabelContainer.show();\n    dataSet.setState('visible', true);\n    errorGroupContainer && errorGroupContainer.show();\n    errorShadowContainer && errorShadowContainer.show();\n    dataSet._conatinerHidden = false;\n\n    chart._setAxisLimits();\n    dataSet.yAxis.draw();\n    // Calling the draw function for redrawing the dataset\n    chart._drawDataset();\n  }\n\n  /*\n   * Hides when clicked on its respective legend\n   * Fired every time an activated legend is clicked\n   */\n  _hide () {\n    var dataSet = this,\n      chart = dataSet.chart;\n\n    chart._chartAnimation();\n    dataSet.setState('visible', false);\n\n    chart._setAxisLimits();\n    dataSet.yAxis.draw();\n    chart._drawDataset();\n  }\n\n  draw () {\n    super.draw();\n    this.drawErrorValue();\n  }\n  drawErrorValue () {\n    var dataSet = this,\n      conf = dataSet.config,\n      // parentContainer = chart.graphics.datasetGroup,\n      len = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      attr,\n      i,\n      j,\n      k,\n      state,\n      visible = dataSet.getState('visible'),\n      yAxis = dataSet.getFromEnv('yAxis'),\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      // animObj = animationObj.animObj,\n      // dummyObj = animationObj.dummyObj,\n      // animationDuration = animationObj.duration,\n\n      errorBarThickness = conf.errorBarThickness,\n      setLink,\n      xPos,\n      yPos,\n      dataObj,\n      setValue,\n      // groupId,\n      config,\n      // eventArgs,\n      crispY,\n      crispX,\n      errorPath,\n      errorValPos,\n      errorValuePosFactor,\n      errorValueArr,\n      errorValueObj,\n      errorValue,\n      errorStartPos,\n      errorLen,\n      halfErrorBarW,\n      errorLineElem,\n      plotXpos,\n      trackerTolerance = errorBarThickness > 5 ? (errorBarThickness / 2) : 2.5,\n      plotYpos,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      errorTrackerConfig;\n\n    // Loop through each data points\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n      setValue = config && config.setValue;\n\n      // If plot value is found \"null\", continue the loop to next iteration.\n      if (dataObj === UNDEF || setValue === UNDEF || setValue === null) {\n        if (dataObj && dataObj.graphics.error) {\n          for (j = 0; j < dataObj.graphics.error.length; j++) {\n            dataObj.graphics.error && dataObj.graphics.error[j] && animationManager.setAnimation({\n              el: dataObj.graphics.error[j] || 'path',\n              label: 'path',\n              component: dataSet,\n              doNotRemove: true,\n              callback: dataSet.drawCallbackFn('disappearing')\n            }).shadow({ opacity: 0 });\n          }\n        }\n        continue;\n      }\n      errorTrackerConfig = dataObj.errorTrackerConfig = {};\n      errorTrackerConfig.errorTrackerArr = [];\n\n      errorValueArr = config.errorValueArr;\n      errorTrackerConfig.errorLen = errorLen = errorValueArr.length;\n\n      !dataObj.graphics.error && (dataObj.graphics.error = []);\n      !dataObj.graphics.errorTracker && (dataObj.graphics.errorTracker = []);\n\n      if ((config.errorValue === BLANKSTRING || config.errorValue === UNDEF ||\n                    (config.errorValue === null && config.positiveErrorValue === null &&\n                    config.negativeErrorValue === null))) {\n        for (k = 0; k < errorLen; k++) {\n          dataObj.graphics.error && dataObj.graphics.error[k] && animationManager.setAnimation({\n            el: dataObj.graphics.error[k] || 'path',\n            label: 'path',\n            component: dataSet,\n            callback: dataSet.drawCallbackFn('disappearing')\n          }).shadow({ opacity: 0 });\n        }\n        continue;\n      }\n      setLink = config.setLink;\n\n      plotXpos = dataObj._xPos;\n      plotYpos = dataObj._yPos;\n\n      yPos = plotYpos;\n      xPos = plotXpos;\n\n      dataObj.errorBar && (delete dataObj.errorBar);\n      dataObj.errorBar = [];\n\n      // Loop through errorValue array\n      while (errorLen--) {\n        errorLineElem = null;\n        errorTrackerConfig.errorTrackerArr[errorLen] = {};\n        errorValueObj = errorValueArr[errorLen];\n        errorTrackerConfig.errorTrackerArr[errorLen].tooltext = errorValueObj.tooltext;\n        errorStartPos = yPos;\n        errorValue = errorValueObj.errorValue;\n        if (errorValue === null || isNaN(errorValue)) {\n          if (dataObj.graphics.error && dataObj.graphics.error[errorLen]) {\n            dataObj.graphics.error[errorLen].hide();\n            dataObj.graphics.error[errorLen].shadow({ opacity: 0 });\n          }\n          continue;\n        }\n        halfErrorBarW = conf.errorBarWidth / 2;\n\n        errorValuePosFactor = (!visible) ? 0 : 1;\n        // Vertical Error drawing\n        errorValPos = plotYpos +\n                        ((yAxis.getPixel(0) - yAxis.getPixel(1)) * errorValue * errorValuePosFactor);\n        crispY = errorValPos;\n        crispX = xPos;\n        crispY = mathRound(errorValPos) +\n                            (errorBarThickness % 2 / 2);\n        crispX = mathRound(xPos) +\n                            (errorBarThickness % 2 / 2);\n\n        dataObj.errorBar[errorLen] || (dataObj.errorBar[errorLen] = []);\n        if (!errorValueObj.errorEdgeBar) {\n          errorPath = [\n            M, crispX, errorStartPos,\n            V, crispY\n          ];\n          dataObj.errorBar[errorLen][0] = {\n            _xPos: crispX - trackerTolerance,\n            _yPos: crispY < errorStartPos ? crispY : errorStartPos,\n            _height: mathAbs(errorStartPos - crispY),\n            _width: 2 * trackerTolerance,\n            _toolText: errorValueObj.tooltext\n          };\n        } else {\n          errorPath = [\n            M, crispX - halfErrorBarW, crispY,\n            H, (crispX + halfErrorBarW)\n          ];\n          dataObj.errorBar[errorLen][1] = {\n            _xPos: crispX - halfErrorBarW - trackerTolerance,\n            _yPos: crispY - trackerTolerance,\n            _height: 2 * trackerTolerance,\n            _width: 2 * (halfErrorBarW + trackerTolerance),\n            _toolText: errorValueObj.tooltext\n          };\n        }\n\n        attr = {\n          path: errorPath,\n          stroke: conf.errorBarColor,\n          'stroke-width': errorBarThickness,\n          'cursor': setLink ? POINTER : BLANKSTRING,\n          'stroke-linecap': ROUND\n        };\n        state = !dataObj.graphics.error[errorLen] && visible ? 'appearing' : visible ? 'updating' : 'disappearing';\n        errorLineElem = dataObj.graphics.error[errorLen] = animationManager.setAnimation({\n          el: dataObj.graphics.error[errorLen] || 'path',\n          state: state,\n          attr: attr,\n          label: 'path',\n          component: dataSet,\n          container: dataSet.getContainer('errorPlotGroup'),\n          callback: dataSet.drawCallbackFn(state)\n        });\n        state !== 'disappearing' && errorLineElem.show();\n\n        errorLineElem && errorLineElem\n          .shadow({ opacity: conf.shadowOpacity }, dataSet.getContainer('errorShadowGroup'));\n\n        errorTrackerConfig.errorTrackerArr[errorLen].attr = {\n          path: errorPath,\n          stroke: TRACKER_FILL,\n          'stroke-width': (errorBarThickness < HTP) ? HTP : errorBarThickness,\n          'cursor': setLink ? POINTER : BLANKSTRING\n        };\n      }\n      if (!config.notHalfErrorBar) {\n        for (k = 2; k < 4; k++) {\n          dataObj.graphics.error && dataObj.graphics.error[k] && animationManager.setAnimation({\n            el: dataObj.graphics.error[k] || 'path',\n            label: 'path',\n            component: dataSet,\n            doNotRemove: true,\n            callback: dataSet.drawCallbackFn('disappearing')\n          }).shadow({ opacity: 0 });\n        }\n      }\n    }\n  }\n  _firePlotEvent (eventType, plotIndex, e) {\n    _firePlotEvent.call(this, eventType, plotIndex, e);\n  }\n  _checkPointerOverErrorBar (pX, chartX, chartY) {\n    return _checkPointerOverErrorBar.call(this, pX, chartX, chartY);\n  }\n  // Helper function of _getHoverPlot()\n  _checkPointerOverPlot (pX, chartX, chartY) {\n    var dataSet = this,\n      data = dataSet.components.data[pX],\n      config = data && data.config,\n      hoverInfo;\n    if (!data) {\n      return;\n    }\n\n    hoverInfo = dataSet.isWithinShape(data, pX, chartX, chartY);\n\n    if (hoverInfo) {\n      data.errorBarHovered = false;\n      config.finalTooltext = (config.toolText !== false) && config.toolText;\n    } else {\n      hoverInfo = dataSet._checkPointerOverErrorBar(pX, chartX, chartY);\n      if (hoverInfo) {\n        data.errorBarHovered = true;\n        config.finalTooltext = hoverInfo.toolText;\n      }\n    }\n\n    return hoverInfo;\n  }\n  _getHoveredPlot (chartX, chartY) {\n    return _getHoveredPlot.call(this, chartX, chartY);\n  }\n  /*\n   * This functions calculate the space required for a dataset and return that to the chart\n   *\n   */\n  getCanvasPadding () {\n    var dataset = this,\n      halfErrorBarW = dataset.config.errorBarWidth * 0.5,\n      chart = dataset.getFromEnv('chart'),\n      dataLabelStyle = chart.config.dataLabelStyle,\n      data = (dataset.components && dataset.components.data) || [],\n      firstData = data[0],\n      lastData = data[data.length - 1],\n      dataConf,\n      label,\n      dataAnchorConf,\n      labelDim = {},\n      padding,\n      labelSpace,\n      showValue,\n      SmartLabel = chart.getFromEnv('smartLabel'),\n      retrunDimension = {\n        paddingLeft: 0,\n        paddingRight: 0\n      };\n\n    // @todo also calculate the space for the labels\n\n    if (firstData) {\n      dataConf = firstData.config;\n      showValue = dataConf.showValue;\n      dataAnchorConf = (dataConf && dataConf.anchorProps) || {};\n      if (showValue) {\n        label = dataConf.displayValue;\n        SmartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n        SmartLabel.setStyle(dataLabelStyle);\n        labelDim = SmartLabel.getOriSize(label);\n      }\n      if (dataConf.setValue) {\n        padding = mathMax(pluckNumber(dataAnchorConf.radius, 0), halfErrorBarW) +\n                    pluckNumber(dataAnchorConf.borderThickness, 0);\n        labelSpace = (labelDim.width || 0) / 2;\n      }\n\n      retrunDimension.paddingLeft = mathMax(padding, labelSpace);\n    }\n\n    if (lastData) {\n      dataConf = lastData.config;\n      showValue = dataConf.showValue;\n      dataAnchorConf = (dataConf && dataConf.anchorProps) || {};\n      if (showValue) {\n        label = dataConf.displayValue;\n        SmartLabel.setStyle(dataLabelStyle);\n        labelDim = SmartLabel.getOriSize(label);\n      }\n      if (dataConf.setValue) {\n        padding = mathMax(pluckNumber(dataAnchorConf.radius, 0), halfErrorBarW) +\n                        pluckNumber(dataAnchorConf.borderThickness, 0);\n        labelSpace = (labelDim.width || 0) / 2;\n      }\n\n      retrunDimension.paddingRight = mathMax(padding, labelSpace);\n    }\n\n    return retrunDimension;\n  }\n  /**\n * method to remove data from the dataset during update\n */\n  removePlots () {\n    removePlots.call(this);\n  }\n}\nexport default ErrorLineDataset;\n","export default {\n  'initial.dataset.errorLine': function () {\n    return {\n      'path.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          startEnd: {\n            start: 0.5,\n            end: 1\n          },\n          slot: 'plot'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\nexport default {\n  '*.dataset.errorLine': lineAnimation['*.dataset.line']\n};\n","import Errorscatter from '@fusioncharts/powercharts/src/chart/errorscatter';\nexport default Errorscatter;\n","import ScatterBase from '@fusioncharts/charts/src/chart/_internal/scatterbase';\nimport ErrorScatterDataset from '../../dataset/errorscatter';\n\nconst ERRORSCATTER = 'errorscatter';\nclass ErrorScatter extends ScatterBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ErrorScatter';\n  }\n\n  constructor () {\n    super();\n    this.isXY = true;\n    this.defaultZeroPlaneHighlighted = false;\n    this.useErrorGroup = true;\n    this.isErrorChart = true;\n    this.hasAnchor = true;\n    // this.fireGroupEvent = true;\n    this.initAnimation = true;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ErrorScatter';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = ERRORSCATTER;\n    config.enablemousetracking = true;\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n  getDSdef () {\n    return ErrorScatterDataset;\n  }\n}\nexport default ErrorScatter;\n","import ScatterDataset from '@fusioncharts/charts/src/dataset/scatter';\nimport { preDefStr, parseTooltext, pluck, getValidValue, pluckNumber,\n  HUNDREDSTRING, getFirstValue, convertColor, getFirstColor, getFirstAlpha,\n  parseUnsafeString } from '@fusioncharts/core/src/lib';\nimport KdTree from '@fusioncharts/charts/src/dataset/_internal/kdtree';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport errorscatterAnimation from './line.animation';\nimport errorscatterErrorAnimation from './error.animation';\nvar colorStrings = preDefStr.colors,\n  COLOR_AAAAAA = colorStrings.AAAAAA,\n  ROUND = preDefStr.ROUND,\n  PERCENTAGESTRING = preDefStr.PERCENTAGESTRING,\n  BLANK = '',\n  UNDEF,\n  COMMASPACE = ', ',\n  POINTER = 'pointer',\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n  OPTIONAL = 'optional',\n  // TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')', // invisible but clickable\n  M = 'M',\n  H = 'H',\n  V = 'V';\nconst DISAPPEARING = 'disappearing',\n  APPEARING = 'appearing',\n  UPDATING = 'updating';\n// HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS : CLICK_THRESHOLD_PIXELS,\naddDep({\n  name: 'errorscatterAnimation',\n  type: 'animationRule',\n  extension: errorscatterAnimation\n});\naddDep({\n  name: 'errorscatterErrorAnimation',\n  type: 'animationRule',\n  extension: errorscatterErrorAnimation\n});\nclass ErrorScatter extends ScatterDataset {\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.drawCallbackFn = (state) => {\n      return function () {\n        if (state === 'disappearing') {\n          this.hide();\n        }\n      };\n    };\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.removeCallbackFn = function () {\n      this.hide();\n      this.shadow({ opacity: 0 });\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'errorScatter';\n  }\n  ErrorValueConfigure () {\n    var dataSet = this,\n      conf = dataSet.config,\n      JSONData = conf.JSONData,\n      categories = dataSet.getFromEnv('dataSource').categories && dataSet.getFromEnv('dataSource').categories[0].category,\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      setDataArr = JSONData.data,\n      setDataLen = (setDataArr && setDataArr.length) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      setData,\n      dataObj,\n      config,\n      dataStore = dataSet.components.data,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      errorBarAlpha,\n      errorBarThickness,\n      errorBarShadow,\n      errorBarWidth,\n      errorBarColor,\n      halfHorizontalErrorBar,\n      halfVerticalErrorBar,\n      horizontalErrorBarAlpha,\n      verticalErrorBarAlpha,\n      horizontalErrorBarColor,\n      verticalErrorBarColor,\n      horizontalErrorBarThickness,\n      verticalErrorBarThickness,\n      hErrorValue,\n      vErrorValue,\n      hErrorToolTipValue,\n      vErrorToolTipValue,\n      tooltipSepChar = pluck(chartAttr.tooltipsepchar, COMMASPACE),\n      yAxisName = parseUnsafeString(chartAttr.yaxisname),\n      xAxisName = parseUnsafeString(chartAttr.xaxisname),\n\n      parentYAxis = conf.parentYAxis,\n      setValue,\n      formatedVal,\n      toolText,\n      horizontalErrorPercent,\n      verticalErrorPercent,\n      macroIndices,\n      parserConfig,\n      seriesname,\n      infMin = -Infinity,\n      infMax = +Infinity,\n      maxErrorValue,\n      minErrorValue,\n      horizontal,\n      vertical,\n      vPositiveErrorValue,\n      hNegativeErrorValue,\n      hPositiveErrorValue,\n      hPositiveSetTooltext,\n      hPositiveErrorToolTipValue,\n      hCPErrorToolText,\n      hCPErrorToolTipValue,\n      hNegativeErrorToolTipValue,\n      hCNErrorToolTipValue,\n      vPositiveErrorToolTipValue,\n      hNegativeSetTooltext,\n      vCPErrorToolTipValue,\n      vNegativeErrorValue,\n      vCNErrorToolText,\n      vCNErrorToolTipValue,\n      vPositiveSetTooltext,\n      hCNErrorToolText,\n      vCPErrorToolText,\n      cumulativeValueOnErrorBar,\n      vNegativeSetTooltext,\n      vNegativeErrorToolTipValue,\n      yMax = infMin,\n      yMin = infMax,\n      xMin = infMax,\n      xMax = infMin,\n      getTooltext = function (setTooltext, errorValue) {\n        var tooltext;\n\n        if (!conf.showTooltip) {\n          tooltext = false;\n        } else {\n          if (formatedVal === null) {\n            tooltext = false;\n          } else if (setTooltext !== UNDEF) {\n            macroIndices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130];\n            parserConfig = {\n              yaxisName: yAxisName,\n              xaxisName: xAxisName,\n              yDataValue: formatedVal,\n              xDataValue: config.label,\n              formattedValue: config.toolTipValue,\n              horizontalErrorValue: hErrorValue,\n              horizontalErrorDataValue: hErrorToolTipValue,\n              verticalErrorValue: vErrorValue,\n              verticalErrorDataValue: vErrorToolTipValue,\n              horizontalErrorPercentValue: horizontalErrorPercent,\n              verticalErrorPercentValue: verticalErrorPercent,\n              label: config.label,\n              // positiveErrorValue: hPositiveErrorToolTipValue,\n              // negativeErrorValue: hNegativeErrorToolTipValue,\n              horizontalPositiveErrorValue: config.useHorizontalErrorBar ? hPositiveErrorValue : UNDEF,\n              horizontalPositiveErrorDataValue: config.useHorizontalErrorBar ? hPositiveErrorToolTipValue : UNDEF,\n              horizontalNegativeErrorValue: halfHorizontalErrorBar ? UNDEF : hNegativeErrorValue,\n              horizontalNegativeErrorDataValue: halfHorizontalErrorBar ? UNDEF : hNegativeErrorToolTipValue,\n              verticalPositiveErrorValue: config.useVerticalErrorBar ? vPositiveErrorValue : UNDEF,\n              verticalPositiveErrorDataValue: config.useVerticalErrorBar ? vPositiveErrorToolTipValue : UNDEF,\n              verticalNegativeErrorValue: halfVerticalErrorBar ? UNDEF : vNegativeErrorValue,\n              verticalNegativeErrorDataValue: halfVerticalErrorBar ? UNDEF : vNegativeErrorToolTipValue,\n              errorValue: errorValue,\n              errorDataValue: errorValue,\n              errorPercentValue: config.errorPercentValue,\n              errorPercentDataValue: config.errorPercentValue\n            };\n            tooltext = parseTooltext(setTooltext, macroIndices,\n              parserConfig, setData, chartAttr, JSONData);\n          } else {\n            if (formatedVal === null) {\n              tooltext = false;\n            } else {\n              if (conf.seriesNameInTooltip) {\n                seriesname = getFirstValue(JSONData && JSONData.seriesname);\n              }\n              tooltext = seriesname ? seriesname + tooltipSepChar : BLANK;\n              tooltext += setValue.x ? numberFormatter.xAxis(setValue.x) + tooltipSepChar : BLANK;\n              tooltext += config.toolTipValue;\n            }\n          }\n        }\n        return tooltext;\n      },\n      i;\n\n    conf.errorBarShadow = errorBarShadow = pluckNumber(chartAttr.errorbarshadow, chartAttr.showshadow, 0);\n    conf.ignoreEmptyDatasets = pluckNumber(JSONData.ignoreemptydatasets, 0);\n    conf.notHalfErrorBar = !pluckNumber(chartAttr.halferrorbar, 1);\n\n    conf.errorBarAlpha = getFirstAlpha(pluck(\n      JSONData.errorbaralpha, chartAttr.errorbaralpha));\n    conf.errorBarWidth = errorBarWidth = pluckNumber(JSONData.errorbarwidth,\n      chartAttr.errorbarwidth, 5);\n    conf.errorBarColor = errorBarColor = convertColor(getFirstColor(\n      pluck(JSONData.errorbarcolor, chartAttr.errorbarcolor,\n        COLOR_AAAAAA)), errorBarAlpha);\n    conf.errorBarThickness = errorBarThickness = pluckNumber(\n      JSONData.errorbarthickness, chartAttr.errorbarthickness, 1);\n    conf.shadowOpacity = errorBarShadow ? (errorBarAlpha / 250) : 0;\n\n    conf.halfHorizontalErrorBar = halfHorizontalErrorBar = pluckNumber(chartAttr.halfhorizontalerrorbar, 1); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.halfVerticalErrorBar = halfVerticalErrorBar = pluckNumber(chartAttr.halfverticalerrorbar, 1); // eslint-disable-line good-practices/no-single-usage-variable\n\n    (conf.initAnimation === UNDEF) && (conf.initAnimation = dataSet.getFromEnv('chart').initAnimation);\n\n    horizontalErrorBarAlpha =\n                    pluck(JSONData.horizontalerrorbaralpha,\n                      JSONData.errorbaralpha,\n                      chartAttr.horizontalerrorbaralpha, errorBarAlpha);\n\n    verticalErrorBarAlpha = pluckNumber(\n      JSONData.verticalerrorbaralpha, JSONData.errorbaralpha,\n      chartAttr.verticalerrorbaralpha, errorBarAlpha);\n\n    horizontalErrorBarColor = convertColor(pluck(\n      JSONData.horizontalerrorbarcolor, JSONData.errorbarcolor,\n      chartAttr.horizontalerrorbarcolor, errorBarColor),\n    horizontalErrorBarAlpha\n    );\n\n    verticalErrorBarColor = convertColor(pluck(\n      JSONData.verticalerrorbarcolor, JSONData.errorbarcolor,\n      chartAttr.verticalerrorbarcolor, errorBarColor),\n    verticalErrorBarAlpha\n    );\n\n    horizontalErrorBarThickness = pluckNumber(\n      JSONData.horizontalerrorbarthickness,\n      JSONData.errorbarthickness,\n      chartAttr.horizontalerrorbarthickness,\n      errorBarThickness);\n\n    verticalErrorBarThickness = pluckNumber(\n      JSONData.verticalerrorbarthickness,\n      JSONData.errorbarthickness,\n      chartAttr.verticalerrorbarthickness,\n      errorBarThickness);\n\n    conf.horizontalErrorBarWidth = pluckNumber(\n      JSONData.horizontalerrorbarwidth,\n      chartAttr.horizontalerrorbarwidth,\n      errorBarWidth);\n\n    conf.verticalErrorBarWidth = pluckNumber(\n      JSONData.verticalerrorbarwidth,\n      chartAttr.verticalerrorbarwidth,\n      errorBarWidth);\n\n    conf.cumulativeValueOnErrorBar =\n                pluckNumber(JSONData.cumulativevalueonerrorbar, chartAttr.cumulativevalueonerrorbar, 1);\n\n    for (i = 0; i < setDataLen; i++) {\n      if (!setDataArr) {\n        continue;\n      }\n\n      setData = setDataArr && setDataArr[i];\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n\n      // setErrorValue = numberFormatter.getCleanValue(setData.errorvalue);\n\n      setValue = config.setValue;\n      config.errorValue = setData.errorvalue;\n\n      config.cumulativeValueOnErrorBar = cumulativeValueOnErrorBar =\n                    pluckNumber(setData.cumulativevalueonerrorbar, conf.cumulativeValueOnErrorBar, 1);\n\n      config.hErrorValue = hErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.horizontalerrorvalue, setData.errorvalue));\n      hErrorToolTipValue = numberFormatter.xAxis(hErrorValue);\n\n      config.vErrorValue = vErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.verticalerrorvalue, setData.errorvalue));\n      vErrorToolTipValue = numberFormatter.dataLabels(vErrorValue);\n\n      config.hPositiveErrorValue = hPositiveErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.horizontalpositiveerrorvalue, setData.positiveerrorvalue, hErrorValue));\n      config.hNegativeErrorValue = hNegativeErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.horizontalnegativeerrorvalue, setData.negativeerrorvalue, hErrorValue));\n\n      config.vPositiveErrorValue = vPositiveErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.verticalpositiveerrorvalue, setData.positiveerrorvalue, vErrorValue));\n      config.vNegativeErrorValue = vNegativeErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.verticalnegativeerrorvalue, setData.negativeerrorvalue, vErrorValue));\n\n      horizontalErrorPercent = (Math.round(((hErrorValue / setValue.x) * HUNDREDSTRING) * HUNDREDSTRING) /\n        HUNDREDSTRING) + PERCENTAGESTRING;\n\n      verticalErrorPercent = (Math.round(((vErrorValue / setValue.y) * HUNDREDSTRING) * HUNDREDSTRING) /\n        HUNDREDSTRING) + PERCENTAGESTRING;\n\n      hPositiveErrorToolTipValue =\n                    numberFormatter.dataLabels(hPositiveErrorValue, parentYAxis);\n\n      hPositiveSetTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext, hPositiveErrorToolTipValue), false));\n\n      hNegativeErrorToolTipValue =\n                    numberFormatter.dataLabels(hNegativeErrorValue, parentYAxis);\n\n      hNegativeSetTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext, hNegativeErrorToolTipValue), false));\n\n      vPositiveErrorToolTipValue =\n                    numberFormatter.dataLabels(vPositiveErrorValue, parentYAxis);\n\n      vPositiveSetTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext, vPositiveErrorToolTipValue), false));\n\n      vNegativeErrorToolTipValue =\n                    numberFormatter.dataLabels(vNegativeErrorValue, parentYAxis);\n\n      vNegativeSetTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext, vNegativeErrorToolTipValue), false));\n      hCPErrorToolText = hCNErrorToolText = vCPErrorToolText = vCNErrorToolText = UNDEF;\n      if (cumulativeValueOnErrorBar) {\n        hCPErrorToolTipValue =\n                        numberFormatter.dataLabels(setValue.x + hPositiveErrorValue, parentYAxis);\n        hCPErrorToolText = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext, hCPErrorToolTipValue), false));\n\n        hCNErrorToolTipValue =\n                        numberFormatter.dataLabels(setValue.x - hNegativeErrorValue, parentYAxis);\n        hCNErrorToolText = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext, hCNErrorToolTipValue), false));\n\n        vCPErrorToolTipValue =\n                        numberFormatter.dataLabels(setValue.y + vPositiveErrorValue, parentYAxis);\n        vCPErrorToolText = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext, vCPErrorToolTipValue), false));\n\n        vCNErrorToolTipValue =\n                        numberFormatter.dataLabels(setValue.y - vNegativeErrorValue, parentYAxis);\n        vCNErrorToolText = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext, vCNErrorToolTipValue), false));\n      }\n\n      categories && categories[i] && (config.label =\n                    getValidValue(parseUnsafeString(pluck(categories[i].tooltext, categories[i].label))));\n\n      if (setData.horizontalpositiveerrorvalue || setData.positiveerrorvalue ||\n                    setData.horizontalnegativeerrorvalue || setData.negativeerrorvalue) {\n        config.halfHorizontalErrorBar = halfHorizontalErrorBar = 0;\n      } else {\n        config.halfHorizontalErrorBar = halfHorizontalErrorBar = conf.halfHorizontalErrorBar;\n      }\n\n      if (setData.verticalpositiveerrorvalue || setData.positiveerrorvalue ||\n                    setData.verticalnegativeerrorvalue || setData.negativeerrorvalue) {\n        config.halfVerticalErrorBar = halfVerticalErrorBar = 0;\n      } else {\n        config.halfVerticalErrorBar = halfVerticalErrorBar = conf.halfVerticalErrorBar;\n      }\n\n      if (setValue.x !== null) {\n        maxErrorValue = setValue.x + Number(hPositiveErrorValue);\n        minErrorValue = setValue.x - (halfHorizontalErrorBar ? 0 : Number(hNegativeErrorValue));\n\n        xMax = Math.max(xMax, maxErrorValue, minErrorValue);\n        xMin = Math.min(xMin, maxErrorValue, minErrorValue);\n      }\n\n      if (setValue.y !== null) {\n        maxErrorValue = setValue.y + Number(vPositiveErrorValue);\n        minErrorValue = setValue.y - (halfVerticalErrorBar ? 0 : Number(vNegativeErrorValue));\n\n        yMax = Math.max(yMax, maxErrorValue, minErrorValue);\n        yMin = Math.min(yMin, maxErrorValue, minErrorValue);\n      }\n\n      config.useHorizontalErrorBar = pluckNumber(setData.usehorizontalerrorbar,\n        JSONData.usehorizontalerrorbar, chartAttr.usehorizontalerrorbar, 0);\n\n      config.useVerticalErrorBar = pluckNumber(setData.useverticalerrorbar,\n        JSONData.useverticalerrorbar, chartAttr.useverticalerrorbar, 1);\n\n      config.errorValueConf = {};\n      // horizontal error bar related segments\n      horizontal = config.errorValueConf.horizontal = {};\n      // this segments are mandatory as this part will show regardless show half error value is true or false\n      horizontal.mandatory = {};\n      // marker is one of the segment of error bar which denotes the error value\n      horizontal.mandatory.marker = {\n        errorValue: -(hPositiveErrorValue === null ? UNDEF : hPositiveErrorValue),\n        tooltext: getTooltext(hPositiveSetTooltext, hPositiveErrorToolTipValue),\n        errorBarColor: horizontalErrorBarColor,\n        isHorizontal: true,\n        errorBarThickness: horizontalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (horizontalErrorBarAlpha / 250) : 0\n      };\n      // limit denotes the error value or cummulative value of the error bar thats why we are calling it limit\n      // as it conveys that the end of error bar\n      horizontal.mandatory.limit = {\n        errorValue: -(hPositiveErrorValue === null ? UNDEF : hPositiveErrorValue),\n        tooltext: cumulativeValueOnErrorBar ? getTooltext(hCPErrorToolText, hCPErrorToolTipValue)\n          : getTooltext(hPositiveSetTooltext, hPositiveErrorToolTipValue),\n        errorBarColor: horizontalErrorBarColor,\n        isHorizontal: true,\n        errorBarThickness: horizontalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (horizontalErrorBarAlpha / 250) : 0,\n        errorEdgeBar: true\n      };\n      // this segments are option as this part will show only show half error value is true\n      horizontal.optional = {};\n      // marker is one of the segment of error bar which denotes the error value\n      horizontal.optional.marker = {\n        errorValue: hNegativeErrorValue,\n        tooltext: getTooltext(hNegativeSetTooltext, hNegativeErrorToolTipValue),\n        errorBarColor: horizontalErrorBarColor,\n        isHorizontal: true,\n        errorBarThickness: horizontalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (horizontalErrorBarAlpha / 250) : 0\n      };\n      // limit denotes the error value or cummulative value of the error bar thats why we are calling it limit\n      // as it conveys that the end of error bar\n      horizontal.optional.limit = {\n        errorValue: hNegativeErrorValue,\n        tooltext: cumulativeValueOnErrorBar ? getTooltext(hCNErrorToolText, hCNErrorToolTipValue)\n          : getTooltext(hNegativeSetTooltext, hNegativeErrorToolTipValue),\n        errorBarColor: horizontalErrorBarColor,\n        isHorizontal: true,\n        errorBarThickness: horizontalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (horizontalErrorBarAlpha / 250) : 0,\n        errorEdgeBar: true\n      };\n      // vertical error bar related segments\n      vertical = config.errorValueConf.vertical = {};\n      // this segments are mandatory as this part will show regardless show half error value is true or false\n      vertical.mandatory = {};\n      // marker is one of the segment of error bar which denotes the error value\n      vertical.mandatory.marker = {\n        errorValue: -(vPositiveErrorValue === null ? UNDEF : vPositiveErrorValue),\n        tooltext: getTooltext(vPositiveSetTooltext, vPositiveErrorToolTipValue),\n        errorBarColor: verticalErrorBarColor,\n        errorBarThickness: verticalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (verticalErrorBarAlpha / 250) : 0\n      };\n      // limit denotes the error value or cummulative value of the error bar thats why we are calling it limit\n      // as it conveys that the end of error bar\n      vertical.mandatory.limit = {\n        errorValue: -(vPositiveErrorValue === null ? UNDEF : vPositiveErrorValue),\n        tooltext: cumulativeValueOnErrorBar ? getTooltext(vCPErrorToolText, vCPErrorToolTipValue)\n          : getTooltext(vPositiveSetTooltext, vPositiveErrorToolTipValue),\n        errorBarColor: verticalErrorBarColor,\n        errorBarThickness: verticalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (verticalErrorBarAlpha / 250) : 0,\n        errorEdgeBar: true\n      };\n      // this segments are option as this part will show only show half error value is true\n      vertical.optional = {};\n      // marker is one of the segment of error bar which denotes the error value\n      vertical.optional.marker = {\n        errorValue: vNegativeErrorValue,\n        tooltext: getTooltext(vNegativeSetTooltext, vNegativeErrorToolTipValue),\n        errorBarColor: verticalErrorBarColor,\n        errorBarThickness: verticalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (verticalErrorBarAlpha / 250) : 0\n      };\n      // limit denotes the error value or cummulative value of the error bar thats why we are calling it limit\n      // as it conveys that the end of error bar\n      vertical.optional.limit = {\n        errorValue: vNegativeErrorValue,\n        tooltext: cumulativeValueOnErrorBar ? getTooltext(vCNErrorToolText, vCNErrorToolTipValue)\n          : getTooltext(vNegativeSetTooltext, vNegativeErrorToolTipValue),\n        errorBarColor: verticalErrorBarColor,\n        errorBarThickness: verticalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (verticalErrorBarAlpha / 250) : 0,\n        errorEdgeBar: true\n      };\n\n      setValue = config.setValue;\n\n      // errorPercentValue = (Math.round(((setErrorValue / setValue) * HUNDREDSTRING) * HUNDREDSTRING) /\n      //               HUNDREDSTRING) + PERCENTAGESTRING;\n\n      formatedVal = config.formatedVal;\n\n      // Initial tooltext parsing\n      if (!conf.showTooltip) {\n        toolText = false;\n      } else if (config.setTooltext !== UNDEF) {\n        macroIndices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130];\n        parserConfig = {\n          yaxisName: yAxisName,\n          xaxisName: xAxisName,\n          yDataValue: formatedVal,\n          xDataValue: config.label,\n          formattedValue: config.toolTipValue,\n          horizontalErrorValue: hErrorValue,\n          horizontalErrorDataValue: hErrorToolTipValue,\n          verticalErrorValue: vErrorValue,\n          verticalErrorDataValue: vErrorToolTipValue,\n          horizontalErrorPercentValue: horizontalErrorPercent,\n          verticalErrorPercentValue: verticalErrorPercent,\n          label: config.label,\n          // positiveErrorValue: hPositiveErrorToolTipValue,\n          // negativeErrorValue: hNegativeErrorToolTipValue,\n          horizontalPositiveErrorValue: config.useHorizontalErrorBar ? hPositiveErrorValue : UNDEF,\n          horizontalPositiveErrorDataValue: config.useHorizontalErrorBar ? hPositiveErrorToolTipValue : UNDEF,\n          horizontalNegativeErrorValue: halfHorizontalErrorBar ? UNDEF : hNegativeErrorValue,\n          horizontalNegativeErrorDataValue: halfHorizontalErrorBar ? UNDEF : hNegativeErrorToolTipValue,\n          verticalPositiveErrorValue: config.useVerticalErrorBar ? vPositiveErrorValue : UNDEF,\n          verticalPositiveErrorDataValue: config.useVerticalErrorBar ? vPositiveErrorToolTipValue : UNDEF,\n          verticalNegativeErrorValue: halfVerticalErrorBar ? UNDEF : vNegativeErrorValue,\n          verticalNegativeErrorDataValue: halfVerticalErrorBar ? UNDEF : vNegativeErrorToolTipValue,\n          errorValue: config.errorValue,\n          errorDataValue: numberFormatter.dataLabels(config.errorValue, conf.parentYAxis)\n        };\n        toolText = parseTooltext(config.setTooltext, macroIndices, parserConfig, setData, chartAttr,\n          JSONData);\n      } else {\n        // determine the default tooltext then.\n        if (formatedVal === null) {\n          toolText = false;\n        } else {\n          if (conf.seriesNameInTooltip) {\n            seriesname = getFirstValue(JSONData && JSONData.seriesname);\n          }\n          toolText = seriesname ? seriesname + tooltipSepChar : BLANK;\n          toolText += setValue.x ? numberFormatter.xAxis(setValue.x) + tooltipSepChar : BLANK;\n          toolText += config.toolTipValue;\n        }\n      }\n      config.toolText = toolText;\n    }\n\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    conf.yMin = yMin;\n    conf.yMax = yMax;\n  }\n\n  drawErrorValue () {\n    var dataSet = this,\n      conf = dataSet.config,\n      setDataArr = dataSet.config.JSONData.data,\n      dataSetLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      attr,\n      i,\n      errorGraphicsString,\n      visible = dataSet.getState('visible'),\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      graphics,\n      // yAxisPVR = yAxis.getPVR(),\n      // xAxisPVR = xAxis.getPVR(),\n      isHorizontal,\n      errorBarThickness,\n      errorBarWidth,\n      errorBarColor,\n      setLink,\n      xPos,\n      yPos,\n      useCrispErrorPath = 1,\n      dataObj,\n      setValue,\n      animState,\n      config,\n      notRequiredHEB,\n      notRequiredVEB,\n      isHalfHorizontalErrorBar,\n      isHalfVertictalErrorBar,\n      crispY,\n      crispX,\n      errorPath,\n      errorValPos,\n      errorValuePosFactor,\n      subType,\n      errorBar,\n      subErrorBar,\n      segment,\n      segmentType,\n      currErrorTracker,\n      errorValue,\n      errorStartPos,\n      halfErrorBarW,\n      errorLineElem,\n      plotXpos,\n      plotYpos,\n      errorBarSegmentLen,\n      errorBarSegmentStartPos,\n      l,\n      k,\n      errorValueConf,\n      errorBarType,\n      trackerTolerance,\n      keys,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      searchDataArr = [],\n      errorTrackerConfig;\n\n    // Loop through each data points\n    for (i = 0; i < dataSetLen; i++) {\n      dataObj = dataStore[i];\n      errorTrackerConfig = dataObj.errorTrackerConfig = {};\n      errorTrackerConfig.errorTrackerArr = [];\n      config = dataObj && dataObj.config;\n      setValue = config && config.setValue;\n\n      errorValueConf = config.errorValueConf;\n\n      // If plot value is found \"null\", continue the loop to next iteration.\n      if (dataObj === UNDEF || setValue === UNDEF || setValue === null || !errorValueConf) {\n        continue;\n      }\n      keys = Object.keys(graphics = dataObj.graphics);\n      if (config.vErrorValue === null &&\n                    config.vPositiveErrorValue === null && config.vNegativeErrorValue === null) {\n        for (k = 0; k < keys.length; k++) {\n          if (keys[k].match(/error-horizontal-/)) {\n            animationManager.setAnimation({\n              el: graphics[keys[k]],\n              state: 'disappearing',\n              callback: dataSet.drawCallbackFn('disappearing')\n            });\n            graphics[keys[k]].shadow({ opacity: 0 });\n          }\n        }\n      }\n\n      if (config.hErrorValue === null &&\n                    config.hPositiveErrorValue === null && config.vPositiveErrorValue === null) {\n        for (k = 0; k < keys.length; k++) {\n          if (keys[k].match(/error-vertical-/)) {\n            animationManager.setAnimation({\n              el: graphics[keys[k]],\n              state: 'disappearing',\n              callback: dataSet.drawCallbackFn('disappearing')\n            });\n            graphics[keys[k]].shadow({ opacity: 0 });\n          }\n        }\n      }\n\n      if (config.hErrorValue === null && config.vErrorValue === null && config.hPositiveErrorValue &&\n                    config.hNegativeErrorValue && config.vPositiveErrorValue && config.vNegativeErrorValue) {\n        continue;\n      }\n\n      setLink = config.setLink;\n\n      plotXpos = dataObj._xPos;\n      plotYpos = dataObj._yPos;\n\n      yPos = plotYpos;\n      xPos = plotXpos;\n      // errorBarType := horizontal / vertical\n      for (errorBarType in errorValueConf) {\n        if (!errorValueConf.hasOwnProperty(errorBarType)) {\n          continue;\n        }\n        errorBar = errorValueConf[errorBarType];\n        // subType := mandatory / optional\n        for (subType in errorBar) {\n          if (!errorBar.hasOwnProperty(subType)) {\n            continue;\n          }\n          subErrorBar = errorBar[subType];\n          // segmentType := marker / limit\n          for (segmentType in subErrorBar) {\n            if (!subErrorBar.hasOwnProperty(segmentType)) {\n              continue;\n            }\n            animState = UNDEF;\n            segment = subErrorBar[segmentType];\n            attr = {};\n            currErrorTracker = errorTrackerConfig.errorTrackerArr[0] = {};\n            errorLineElem = null;\n\n            currErrorTracker.tooltext = segment.tooltext;\n            errorStartPos = yPos;\n            errorValue = segment.errorValue;\n\n            notRequiredHEB = !config.useHorizontalErrorBar && errorBarType === HORIZONTAL;\n            notRequiredVEB = !config.useVerticalErrorBar && errorBarType === VERTICAL;\n            isHalfHorizontalErrorBar = config.halfHorizontalErrorBar && errorBarType === HORIZONTAL && subType === OPTIONAL;\n            isHalfVertictalErrorBar = config.halfVerticalErrorBar && errorBarType === VERTICAL && subType === OPTIONAL;\n            if (notRequiredHEB || notRequiredVEB || isHalfHorizontalErrorBar || isHalfVertictalErrorBar) {\n              animState = DISAPPEARING;\n            } else if (errorValue === null || errorValue === UNDEF || isNaN(errorValue)) {\n              animState = DISAPPEARING;\n            } else {\n              errorBarColor = segment.errorBarColor;\n              isHorizontal = segment.isHorizontal;\n              errorBarThickness = segment.errorBarThickness;\n\n              errorBarWidth = isHorizontal ? conf.horizontalErrorBarWidth : conf.verticalErrorBarWidth;\n\n              halfErrorBarW = (!visible) ? 0 : (errorBarWidth / 2);\n\n              errorValuePosFactor = (!visible) ? 0 : -1;\n\n              trackerTolerance = errorBarThickness > 5 ? (errorBarThickness) / 2 + 0.5 : 5.5 / 2;\n\n              if (isHorizontal) {\n                errorValPos = dataSet.getFromEnv('xAxis').getPixel(dataObj.config._x + (errorValue * errorValuePosFactor));\n                crispY = errorValPos;\n                crispX = xPos;\n\n                if (useCrispErrorPath) {\n                  crispY = Math.round(errorStartPos) + (errorBarThickness % 2 / 2);\n                  crispX = Math.round(errorValPos) + (errorBarThickness % 2 / 2);\n                }\n\n                if (segment.errorEdgeBar) {\n                  errorPath = [\n                    M, crispX, crispY - halfErrorBarW,\n                    V, (crispY + halfErrorBarW)\n                  ];\n\n                  errorBarSegmentLen = 2 * halfErrorBarW;\n                  errorBarSegmentStartPos = crispY - halfErrorBarW;\n                  for (l = trackerTolerance; l < errorBarSegmentLen; l += (2 * trackerTolerance)) {\n                    searchDataArr.push({\n                      x: crispX,\n                      y: errorBarSegmentStartPos + l,\n                      r: trackerTolerance,\n                      index: i,\n                      data: dataObj,\n                      toolText: segment.tooltext,\n                      barType: 'h'\n                    });\n                  }\n                } else {\n                  errorPath = [\n                    M, xPos, crispY,\n                    H, crispX\n                  ];\n\n                  errorBarSegmentLen = Math.abs(xPos - crispX);\n                  errorBarSegmentStartPos = xPos > crispX ? crispX : xPos;\n                  for (l = trackerTolerance; l < errorBarSegmentLen; l += (2 * trackerTolerance)) {\n                    searchDataArr.push({\n                      x: errorBarSegmentStartPos + l,\n                      y: crispY,\n                      r: trackerTolerance,\n                      index: i,\n                      data: dataObj,\n                      toolText: segment.tooltext,\n                      barType: 'h'\n                    });\n                  }\n                }\n              } else {\n                // Vertical Error drawing\n                errorValPos = dataSet.getFromEnv('yAxis').getPixel(dataObj.config._y + (errorValue * errorValuePosFactor));\n                crispY = errorValPos;\n                crispX = xPos;\n                if (useCrispErrorPath) {\n                  crispY = Math.round(errorValPos) + (errorBarThickness % 2 / 2);\n                  crispX = Math.round(xPos) + (errorBarThickness % 2 / 2);\n                }\n\n                if (segment.errorEdgeBar) {\n                  errorPath = [\n                    M, crispX - halfErrorBarW, crispY,\n                    H, (crispX + halfErrorBarW)\n                  ];\n\n                  errorBarSegmentLen = 2 * halfErrorBarW;\n                  errorBarSegmentStartPos = crispX - halfErrorBarW;\n                  for (l = trackerTolerance; l <= errorBarSegmentLen; l += (2 * trackerTolerance)) {\n                    searchDataArr.push({\n                      x: errorBarSegmentStartPos + l,\n                      y: crispY,\n                      r: trackerTolerance,\n                      index: i,\n                      data: dataObj,\n                      toolText: segment.tooltext,\n                      barType: 'v'\n                    });\n                  }\n                } else {\n                  errorPath = [\n                    M, crispX, errorStartPos,\n                    V, crispY\n                  ];\n\n                  errorBarSegmentLen = Math.abs(errorStartPos - crispY);\n                  errorBarSegmentStartPos = errorStartPos > crispY ? crispY : errorStartPos;\n                  for (l = trackerTolerance; l <= errorBarSegmentLen; l += (2 * trackerTolerance)) {\n                    searchDataArr.push({\n                      x: crispX,\n                      y: errorBarSegmentStartPos + l,\n                      r: trackerTolerance,\n                      index: i,\n                      data: dataObj,\n                      toolText: segment.tooltext,\n                      barType: 'v'\n                    });\n                  }\n                }\n              }\n              attr = {\n                path: errorPath,\n                'stroke-width': visible ? errorBarThickness : 0,\n                stroke: errorBarColor,\n                'cursor': setLink ? POINTER : BLANK,\n                'stroke-linecap': ROUND\n              };\n            }\n            errorGraphicsString = ['error', errorBarType, subType, segmentType].join('-');\n            if (!animState) {\n              if (graphics[errorGraphicsString]) {\n                animState = UPDATING;\n              } else {\n                animState = APPEARING;\n              }\n            }\n            if (!graphics[errorGraphicsString] && animState === 'disappearing') {\n              continue;\n            }\n            errorLineElem = graphics[errorGraphicsString] = animationManager.setAnimation({\n              el: graphics[errorGraphicsString] || 'path',\n              container: dataSet.getContainer('errorPlotGroup'),\n              component: dataSet,\n              attr: attr,\n              state: animState,\n              label: 'path',\n              callback: dataSet.drawCallbackFn(animState)\n            });\n            (animState !== 'disappearing') && errorLineElem.show();\n            // @todo has to validate how it works\n            // why we need to set opacity while it is follower to main element\n            errorLineElem.shadow({ opacity: animState === 'disappearing' ? 0 : conf.shadowOpacity }, dataSet.getContainer('errorShadowGroup'));\n          }\n        }\n      }\n    }\n    searchDataArr.length && (this.config.dataTreeB = new KdTree().buildKdTree(searchDataArr));\n    conf.initAnimation = false;\n  }\n\n  /*\n         * Using kdtree algo for searching\n        */\n  _getHoveredPlot (x, y) {\n    var res,\n      res1,\n      tooltext,\n      errorBarToolText,\n      hoverEffects,\n      element;\n\n    res = this.config.dataTree.getNeighbour({\n      x: x,\n      y: y\n    }, true);\n\n    // searching neighbour from Kdtree with basic search flag on\n    if (res) {\n      tooltext = res.data.config.toolText;\n      res.data.config.finalTooltext = tooltext;\n      hoverEffects = res.data.config.hoverEffects;\n      element = res.data.graphics.element;\n      element.data('hoverEnabled', hoverEffects.enabled);\n      hoverEffects.enabled && element.attr(element.getData().setRolloverAttr);\n      return {\n        pointIndex: res.index,\n        hovered: true,\n        pointObj: res.data\n      };\n    }\n    res1 = this.config.dataTreeB && this.config.dataTreeB.getNeighbour({\n      x: x,\n      y: y\n    }, true);\n    if (res1) {\n      if (res1.barType === 'h') {\n        errorBarToolText = res1.toolText;\n      } else if (res1.barType === 'v') {\n        errorBarToolText = res1.toolText;\n      }\n      res1.data.config.finalTooltext = errorBarToolText;\n      element = res1.data.graphics.element;\n      element.data('hoverEnabled', false);\n      element.attr(element.getData().setRolloutAttr);\n      return {\n        pointIndex: res1.index,\n        hovered: true,\n        pointObj: res1.data\n      };\n    }\n  }\n  // Function to remove a data from a dataset during real time update.\n  removePlots () {\n    var dataSet = this,\n      components = dataSet.components,\n      removeDataArr = components.removeDataArr,\n      pool = components.pool || (components.pool = {\n        element: [],\n        hotElement: [],\n        label: []\n      }),\n      len = removeDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removeData,\n      graphics,\n      i,\n      key;\n\n    for (i = 0; i < len; i++) {\n      removeData = removeDataArr[0];\n      removeDataArr.splice(0, 1);\n      // In case of non existing data plot continue;\n      if (!removeData || !removeData.graphics) {\n        continue;\n      }\n\n      graphics = removeData.graphics;\n\n      for (key in graphics) {\n        if (graphics.hasOwnProperty(key)) {\n          dataSet.getFromEnv('animationManager').setAnimation({\n            el: graphics[key],\n            component: dataSet,\n            attr: {},\n            state: 'disappering',\n            callback: dataSet.removeCallbackFn\n          });\n        }\n      }\n\n      // Storing the graphic elements for reuse.\n      removeData.graphics.element && (pool.element = pool.element.concat(removeData.graphics.element));\n      removeData.graphics.label && (pool.label = pool.label.concat(removeData.graphics.label));\n    }\n    components.pool = pool;\n  }\n}\nexport default ErrorScatter;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  'initial.dataset.errorScatter': lineAnimation['initial.dataset.line']\n};\n","import errorAnimation from '../errorline/line.animation';\n\nexport default {\n  'initial.dataset.errorScatter': errorAnimation['initial.dataset.errorLine']\n};\n","import Inversemsarea from '@fusioncharts/powercharts/src/chart/inversemsarea';\nexport default Inversemsarea;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport AreaDataset from '@fusioncharts/charts/src/dataset/area';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\n\nconst AREA = 'area';\nclass InverseMSArea extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'InverseMSArea';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'InverseMSArea';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = AREA;\n    config.isInverse = true;\n    config.zeroplanethickness = 2;\n    config.zeroplanealpha = 80;\n    config.showzeroplaneontop = 1;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n    _setDefaultConfig.call(this);\n  }\n  getDSdef () {\n    return AreaDataset;\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n}\nexport default InverseMSArea;\n","import Inversemscolumn2d from '@fusioncharts/powercharts/src/chart/inversemscolumn2d';\nexport default Inversemscolumn2d;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport MultiSeriesManager from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\nlet COLUMN = 'column';\n\nclass InverseMSColumn2d extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'InverseMSColumn2d';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'InverseMSColumn2d';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = COLUMN;\n    config.isInverse = true;\n    config.enablemousetracking = true;\n  }\n  getDSdef () {\n    return ColumnDataset;\n  }\n  getDSGroupdef () {\n    return MultiSeriesManager;\n  }\n}\nexport default InverseMSColumn2d;\n","import Inversemsline from '@fusioncharts/powercharts/src/chart/inversemsline';\nexport default Inversemsline;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\nlet LINE = 'line';\nclass InverseMSLine extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'InverseMSLine';\n  }\n\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'InverseMSLine';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n\n    config.defaultDatasetType = LINE;\n    config.isInverse = true;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 4;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n    _setDefaultConfig.call(this);\n  }\n  getDSdef () {\n    return LineDataset;\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n}\nexport default InverseMSLine;\n","import Dragcolumn2d from '@fusioncharts/powercharts/src/chart/dragcolumn2d';\nexport default Dragcolumn2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport DragBase from '../_internal/dragbase';\nimport DragColumnDataset from '../../dataset/dragcolumn';\nimport DragColumnMultiseriesGroup from '../../dataset/groups/dragcolumn-multiseries';\nimport LimitUpdaterFactory from '../../factories/limit-updater';\nimport dragtrackerFactory from '../../factories/drag-tracker';\n\n/**\n * API class of dragcolumn inheriting from column class\n */\nclass DragColumn extends DragBase {\n  /**\n   * constructor to register limit updater\n   */\n  constructor () {\n    super();\n    this.registerFactory('limitUpdater', LimitUpdaterFactory, ['axis']);\n    this.registerFactory('dragTracker', dragtrackerFactory, ['canvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'DragColumn2D';\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'DragColumn2D';\n  }\n\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object}       Multiseries Dragcolumn group definition\n   */\n  getDSGroupdef () {\n    return DragColumnMultiseriesGroup;\n  }\n\n  /**\n   * Function to parse chart specific configurations.\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.isDrag = true;\n  }\n  /**\n   * Function to return the dataset liked with the current API\n   * @return {Object} The DragColumnDataset class\n   */\n  getDSdef () {\n    return DragColumnDataset;\n  }\n}\nexport default DragColumn;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  getMouseCoordinate,\n  getValidValue,\n  pluck,\n  pluckNumber,\n  preDefStr,\n  MOUSEOUT,\n  MOUSEMOVE,\n  ZEROSTRING,\n  extend2,\n  BLANKSTRING,\n  _manageInteractiveSpace\n} from '@fusioncharts/core/src/lib';\nimport safeMax from '@fusioncharts/utils/src/array/safe-max';\nimport safeMin from '@fusioncharts/utils/src/array/safe-min';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport MSColumn2D from '@fusioncharts/charts/src/chart/mscolumn2d';\nimport _getData from '@fusioncharts/core/src/_internal/misc/fetch-data';\nimport { getDepsByType } from '@fusioncharts/core/src/dependency-manager';\nimport { submitData } from './editable-charts';\n\nlet UNDEF,\n  transcoders = getDepsByType('transcoder'),\n  UNDERSCORE = preDefStr.UNDERSCORE,\n  BLANK = BLANKSTRING,\n  count = 0,\n  updateDataLimit = function (e) {\n    let iapi = e.sender.apiInstance,\n      canvas = iapi.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      vCanvas = canvas.getChildren('vCanvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      iapiConf = iapi.config,\n      dataLimit,\n      data = e.data,\n      endValue = data && data.endValue,\n      startValue = data && data.startValue;\n    if (endValue > iapiConf.yMax || endValue < iapiConf.yMin || startValue === iapiConf.yMin || startValue === iapiConf.yMax) {\n      dataLimit = vCanvas.getDataLimits();\n      iapiConf.yMax = dataLimit.max;\n      iapiConf.yMin = dataLimit.min;\n    }\n  },\n  /**\n   * sanitise the format given by the user\n   * @param {string} str value to be sanitised\n   * @return {string} a string in lower case\n   */\n  sanitiseFormatStr = str => str.toString().toLowerCase();\n\n/**\n * API class of dragcolumn inheriting from column class\n */\nclass DragBase extends MSColumn2D {\n  /**\n   * constructor to define the ei methods\n   */\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.getDataWithId = function () {\n      var chartInstance = this,\n        dataObj = chartInstance.apiInstance && chartInstance.apiInstance.getJSONData(),\n        returnObj = [\n          [BLANK]\n        ],\n        datasets = dataObj.dataset,\n        catArr = (dataObj.categories && dataObj.categories[0] &&\n                dataObj.categories[0].category),\n        i = (datasets && datasets.length) || 0,\n        vLinePassed = 0,\n        setArr,\n        catName,\n        catObj,\n        set,\n        DS,\n        item,\n        dsID,\n        id,\n        j,\n        ln;\n\n      while (i--) {\n        DS = datasets[i];\n        if (DS) {\n          returnObj[0][i + 1] = DS.id || DS.seriesname;\n          dsID = DS.id || (i + 1);\n          set = DS.data;\n          ln = (set && set.length) || 0;\n          for (j = 0; j < ln; j += 1) {\n            item = j + 1;\n            if (!returnObj[item]) {\n              catObj = (catArr && catArr[j + vLinePassed]) || {};\n              while (catObj.vline) {\n                vLinePassed += 1;\n                catObj = catArr[j + vLinePassed] || {};\n              }\n              catName = catObj.label || catObj.name || BLANK;\n              returnObj[item] = [catName];\n            }\n            setArr = returnObj[item];\n            id = set[j].id || (item + UNDERSCORE + dsID);\n            setArr[i + 1] = [id, Number(set[j].value)];\n          }\n        }\n      }\n\n      return returnObj;\n    };\n    /**\n     * Data of the chart in format user wants or in a 2d array\n     * @param {string} [format] in which the data will be returned\n     * @return {string | Object} chart data\n     */\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.getData = function (format) {\n      var chartInstance = this,\n        jsonData = chartInstance.apiInstance && chartInstance.apiInstance.getJSONData(),\n        returnData,\n        datasets = jsonData.dataset,\n        len = (datasets && datasets.length) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n        i = 0,\n        transcoderObjSource,\n        sanitisedFormat;\n\n      // When a format is provided\n      if (format) {\n        sanitisedFormat = sanitiseFormatStr(format);\n        // no transcoding needed for json\n        if (/^json$/ig.test(sanitisedFormat)) {\n          returnData = jsonData;\n        } else {\n          transcoderObjSource = transcoders[sanitisedFormat]();\n          returnData = transcoderObjSource.fromJSON(jsonData, chartInstance).data;\n        }\n      } else {\n        returnData = _getData.call(chartInstance.apiInstance);\n        returnData.unshift([BLANK]);\n        while (i < len) {\n          returnData[0][i + 1] = datasets[i++].seriesname;\n        }\n      }\n      return returnData;\n    };\n    /**\n     * Function to set the upper limit of the chart\n     * @param {number} limit new upper limit for the chart\n     * @param {Function} callback is the function which gets the return value in its paramter if\n     * @return {number} value of the returned function\n     */\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.setUpperLimit = function (limit, callback) {\n      var iapi = this.apiInstance,\n        output;\n\n      if (callback) {\n        iapi.addJob(`setUpperLimitId${count++}`, function () {\n          output = iapi.changeUpperLimits(limit); // eslint-disable-line good-practices/no-single-usage-variable\n          if (typeof callback === 'function') {\n            callback(output);\n          }\n        }, priorityList.postRender);\n      } else {\n        return iapi.changeUpperLimits(limit);\n      }\n    };\n    /**\n     * Function to set the lower limit of the chart\n     * @param {number} limit new lower limit for the chart\n     * @param {Function} callback is the function which gets the return value in its paramter if\n     * @return {number} value of the returned function\n     */\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.setLowerLimit = function (limit, callback) {\n      var iapi = this.apiInstance,\n        output;\n\n      if (callback) {\n        iapi.addJob(`setLowerLimitId${count++}`, function () {\n          output = iapi.changeLowerLimits(limit); // eslint-disable-line good-practices/no-single-usage-variable\n          if (typeof callback === 'function') {\n            callback(output);\n          }\n        }, priorityList.postRender);\n      } else {\n        return iapi.changeLowerLimits(limit);\n      }\n    };\n    /**\n     * Function to get the lower limit of the chart\n     * @param {Function} callback is the function which gets the return value in its paramter if\n     * @return {number} lower limit value\n     */\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.getLowerLimit = function (callback) {\n      var iapi = this.apiInstance,\n        yAxis = iapi.getChildren('yAxis')[0];\n\n      if (yAxis) {\n        if (callback) {\n          iapi.addJob(`getLowerLimitId${count++}`, function () {\n            if (typeof callback === 'function') {\n              callback(yAxis.config.axisRange.min);\n            }\n          }, priorityList.postRender);\n        } else {\n          return yAxis.config.axisRange.min;\n        }\n      }\n    };\n    /**\n     * Function to get the upper limit of the chart\n     * @param {Function} callback is the function which gets the return value in its paramter if\n     * @return {number} upper limit value\n     */\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.getUpperLimit = function (callback) {\n      var iapi = this.apiInstance,\n        yAxis = iapi.getChildren('yAxis')[0];\n\n      if (yAxis) {\n        if (callback) {\n          iapi.addJob(`getUpperLimitId${count++}`, function () {\n            if (typeof callback === 'function') {\n              callback(yAxis.config.axisRange.max);\n            }\n          }, priorityList.postRender);\n        } else {\n          return yAxis.config.axisRange.max;\n        }\n      }\n    };\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'DragBase';\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    this.getName() !== 'DragNode' &&\n      this.getFromEnv('chartInstance').addEventListener('dataplotdragend', updateDataLimit);\n  }\n\n  mouseoutHandler (e, _lastDatasetIndex, _lastPointIndex) {\n    let chart = this,\n      datasets = chart.config.datasetOrder || chart.getDatasets(),\n      mouseTracker = chart.getChildren('mouseTracker')[0];\n    // check if the data plot exists. else hide all existing tooltips.\n    if (datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex].components.data[_lastPointIndex]) {\n      datasets[_lastDatasetIndex]._firePlotEvent(MOUSEOUT, _lastPointIndex, e);\n    } else {\n      chart.getFromEnv('toolTipController').hideAll();\n    }\n    // delete stored last ds details\n    delete mouseTracker._lastDatasetIndex;\n    delete mouseTracker._lastPointIndex;\n  }\n\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'DragBase';\n  }\n\n  /**\n   * Function which determines on which particular data of a dataset the mouse pointer is hovered\n   * @param {Object} e A wrapper over the original event\n   * @param  {Object} data The Data Object\n   */\n  _mouseEvtHandler (e, data) {\n    var chart = this,\n      mouseTracker = data.mouseTracker,\n      datasets = chart.config.datasetOrder || chart.getDatasets(),\n      coordinate = getMouseCoordinate(chart.getFromEnv('chart-container'), e.originalEvent, chart),\n      dataset,\n      hoveredInfo,\n      pointFound = false,\n      i = datasets.length,\n      j,\n      l,\n      derivedEvensInfo,\n      _lastDatasetIndex = mouseTracker._lastDatasetIndex,\n      _lastPointIndex = mouseTracker._lastPointIndex,\n      dragStart,\n      eventType;\n\n    (_lastPointIndex !== UNDEF) && datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex].components.data[_lastPointIndex] &&\n        (dragStart = datasets[_lastDatasetIndex].components.data[_lastPointIndex].config.dragStart);\n    if (!dragStart) {\n    // @todo we have to implement this for charts with more than one canvas like candle stick\n      while (i-- && !pointFound) {\n        dataset = datasets[i];\n        if (dataset && dataset.getState('visible')) {\n          hoveredInfo = dataset._getHoveredPlot && dataset._getHoveredPlot(coordinate.chartX, coordinate.chartY);\n          if (hoveredInfo && hoveredInfo.hovered) {\n            pointFound = true;\n            hoveredInfo.datasetIndex = i;\n            derivedEvensInfo = mouseTracker.getMouseEvents(e, hoveredInfo.datasetIndex,\n              hoveredInfo.pointIndex);\n          }\n        }\n      }\n    }\n\n    // for drag event\n    if (dragStart && _lastDatasetIndex !== UNDEF) {\n      eventType = (e.type === MOUSEOUT) ? MOUSEMOVE : e.type;\n      datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex]._firePlotEvent &&\n              datasets[_lastDatasetIndex]._firePlotEvent(eventType, _lastPointIndex, e);\n    }\n    // @todo instead of sending event names, create a event object of that type and send it\n    // fire out on last hovered plot\n    if (!dragStart && (!pointFound || (derivedEvensInfo && derivedEvensInfo.fireOut)) &&\n                _lastDatasetIndex !== UNDEF) {\n      if (datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex]._firePlotEvent) {\n        // when mouseout is fired and there aren't any events that need to be fired over the current plot,\n        // call mouseouthamndler through settimeout.\n        if (derivedEvensInfo && !derivedEvensInfo.events.length) {\n          mouseTracker.mouseoutTimer = setTimeout(function () {\n            chart.mouseoutHandler(e, _lastDatasetIndex, _lastPointIndex);\n          }, 20);\n        } else {\n          chart.mouseoutHandler(e, _lastDatasetIndex, _lastPointIndex);\n          clearTimeout(mouseTracker.mouseoutTimer);\n        }\n      }\n    }\n    // fire remaining events\n    if (pointFound) {\n      l = derivedEvensInfo.events && derivedEvensInfo.events.length;\n      // Update only when events for current plot are present.\n      // Reason: When cursor is present in territory of line/area plot but not directly over it, then\n      // the fireOut of current plot was happening instead of the actual last plot.\n      if (l) {\n      // store the index of the hovered DS and plot\n        mouseTracker._lastDatasetIndex = hoveredInfo.datasetIndex;\n        _lastPointIndex = mouseTracker._lastPointIndex = hoveredInfo.pointIndex;\n      }\n      for (j = 0; j < l; j += 1) {\n        dataset && dataset._firePlotEvent && dataset._firePlotEvent(derivedEvensInfo.events[j],\n          _lastPointIndex, e);\n      }\n    }\n  }\n\n  /**\n   * Configure function calls the parent configure function and adds eventListener to needed children\n   * @param {Object} dataObj contains json data of the chart\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    var chart = this,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      chartConfig;\n    chartConfig = chart.config;\n    chartConfig.formAction = getValidValue(chartAttr.formaction);\n\n    if (chartAttr.submitdataasxml === ZEROSTRING && !chartAttr.formdataformat) {\n      chartAttr.formdataformat = transcoders.csv().format;\n    }\n\n    chartConfig.formDataFormat = pluck(chartAttr.formdataformat,\n      transcoders.xml().format);\n    chartConfig.formTarget = pluck(chartAttr.formtarget, '_self');\n    chartConfig.formMethod = pluck(chartAttr.formmethod, 'POST');\n    chartConfig.submitFormAsAjax = pluckNumber(chartAttr.submitformusingajax, 1);\n    chartConfig.restoreBtnTitle = pluck(\n      chartAttr.restoretext,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE restorebtntitle parsing after two releases from 3.13.0\n      chartAttr.restorebtntitle,\n      'Restore'\n    );\n    chartConfig.submitBtnTitle = pluck(\n      chartAttr.submittext,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE formbtntitle parsing after two releases from 3.13.0\n      chartAttr.formbtntitle,\n      'Submit'\n    );\n\n    // Form Button\n    chartConfig.showFormBtn = pluckNumber(\n      chartAttr.enablesubmit,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE showformbtn parsing after two releases from 3.13.0\n      chartAttr.showformbtn,\n      1\n    ) && chartConfig.formAction;\n    chartConfig.showRestoreBtn = pluckNumber(\n      chartAttr.enablerestore,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE showrestorebtn parsing after two releases from 3.13.0\n      chartAttr.showrestorebtn,\n      1\n    );\n    chartConfig.formBtnTitle = pluck(chartAttr.formbtntitle, 'Submit');\n    chartConfig.formBtnStyle = {\n      fontSize: chartConfig.style.outCanfontSize,\n      fontFamily: chartConfig.style.outCanfontFamily,\n      fontWeight: 'bold'\n    };\n    chartConfig.restoreBtnWidth = pluckNumber(chartAttr.restorebtnwidth, 0);\n    chartConfig.allowAxisChange = pluckNumber(chartAttr.allowaxischange, 1);\n    if (chartAttr.toolbary || chartAttr.toolbarx) {\n      chartConfig.spaceHardCoded = true;\n    } else {\n      delete chartConfig.spaceHardCoded;\n    }\n    chartConfig.drawTrendRegion = pluckNumber(chartAttr.drawcrossline, 0);\n  }\n\n  /**\n   * Function to store the initial axis value\n   * @param {Number} min is minimum data limit\n   * @param {Number} max is maximum data limit\n   */\n  _storeIntialLimit (min, max) {\n    this.config.axisInitialLimit = { min, max };\n  }\n\n  /**\n   * Over-writing mscartesian createToolBoxMenu function\n   */\n  attachMenuButtons () {\n    super.attachMenuButtons();\n    this.addConfigureOptions();\n  }\n  /**\n   * Function for adding menu otions to be shown in the drop-down menu\n   */\n  addConfigureOptions () {\n    var chart = this,\n      toolbar = chart.getFromEnv('toolbar'),\n      hamburgerMenu = toolbar.getChild(`hamburgerMenu-${toolbar.getId()}-${chart.getId()}-0`), // eslint-disable-line good-practices/no-single-usage-variable\n      chartConf = chart.config,\n      restore,\n      submit,\n      configureTools = [\n        {\n          name: 'Increase Upper Limit',\n          handler: function () {\n            var axisRange = chart.getChildren('yAxis')[0].getLimit();\n            chart.changeUpperLimits(axisRange.max + axisRange.tickInterval);\n          },\n          action: 'click'\n        },\n        {\n          name: 'Increase Lower Limit',\n          handler: function () {\n            var axisRange = chart.getChildren('yAxis')[0].getLimit();\n            chart.changeLowerLimits(axisRange.min + axisRange.tickInterval);\n          },\n          action: 'click'\n        },\n        {\n          name: 'Decrease Upper Limit',\n          handler: function () {\n            var axisRange = chart.getChildren('yAxis')[0].getLimit();\n            chart.changeUpperLimits(axisRange.max - axisRange.tickInterval);\n          },\n          action: 'click'\n        },\n        {\n          name: 'Decrease Lower Limit',\n          handler: function () {\n            var axisRange = chart.getChildren('yAxis')[0].getLimit();\n            chart.changeLowerLimits(axisRange.min - axisRange.tickInterval);\n          },\n          action: 'click'\n        }\n      ];\n\n    if (chartConf.showFormBtn) {\n      submit = {\n        name: chartConf.submitBtnTitle,\n        handler: function () {\n          submitData.call(chart);\n        },\n        action: 'click'\n      };\n      configureTools.push(submit);\n    }\n\n    if (chartConf.showRestoreBtn) {\n      restore = {\n        name: chartConf.restoreBtnTitle,\n        handler: function () {\n          chart.restoreData();\n        },\n        action: 'click'\n      };\n      configureTools.push(restore);\n    }\n\n    if (chartConf.allowAxisChange) {\n      hamburgerMenu.appendInMenu(configureTools);\n    }\n  }\n\n  /**\n   * Function to restore all the data to the original json Data\n   */\n  restoreData () {\n    var chart = this,\n      yAxis = chart.getChildren('yAxis')[0],\n      chartAttr = chart.getFromEnv('chart-attrib'),\n      axisInitialLimit = chart.config.axisInitialLimit;\n    // eslint-disable-next-line good-practices/no-function-dependency\n    chart.iterateComponents((child) => {\n      let data;\n      // eslint-disable-next-line good-practices/no-single-usage-variable\n      if ((data = child.getChildren('dataset'))) {\n        data.forEach(function (dataset) {\n          dataset.restore();\n        });\n      }\n    });\n    yAxis.resetStoredLimits();\n    yAxis.setAxisConfig({\n      axisMaxValue: chartAttr.yaxismaxvalue,\n      axisMinValue: chartAttr.yaxisminvalue\n    });\n    yAxis.setDataLimit(axisInitialLimit.max, axisInitialLimit.min);\n    chart.fireChartInstanceEvent('dataRestored', {});\n    chart._manageInteractiveSpace();\n  }\n\n  /**\n   * Function to change the lowerLimit of the axis using the drop down menu item\n   * @param {number} lowerLimit The limit to which lower limit of the axis has to be extended\n   * @return {boolean} if axis limit is changed\n   */\n  changeLowerLimits (lowerLimit) {\n    var chart = this,\n      yAxis = chart.getChildren('yAxis')[0],\n      axisRange = yAxis.getLimit(),\n      min = axisRange.min,\n      config = chart.config,\n      minValue = safeMin([config.yMin, yAxis.getTrendLineLimits()[0]]), // eslint-disable-line good-practices/no-single-usage-variable\n      limitchanged = false,\n      max = axisRange.max;\n    chart.getFromEnv('animationManager').setAnimationState('update');\n    if ((lowerLimit !== UNDEF) && lowerLimit < minValue && lowerLimit !== axisRange.min && config.allowAxisChange) {\n      min = lowerLimit;\n      limitchanged = true;\n    }\n\n    if (limitchanged) {\n      yAxis.resetStoredLimits();\n      yAxis.setAxisConfig({\n        axisMaxValue: max,\n        axisMinValue: min,\n        showLowerLimit: true\n      });\n      yAxis.setDataLimit(max, min);\n      chart._manageInteractiveSpace();\n    }\n    return limitchanged;\n  }\n\n  /**\n   * Function to change the upperLimit of the axis using the drop down menu item\n   * @param {number} upperLimit The limit to which upper limit of the axis has to be extended\n   * @return {boolean} if axis limit is changed\n   */\n  changeUpperLimits (upperLimit) {\n    var chart = this,\n      // components = chart.components,\n      yAxis = chart.getChildren('yAxis')[0],\n      axisRange = yAxis.getLimit(),\n      min = axisRange.min,\n      config = chart.config,\n      maxValue = safeMax([config.yMax, yAxis.getTrendLineLimits()[1]]), // eslint-disable-line good-practices/no-single-usage-variable\n      limitchanged = false,\n      max;\n\n    chart.getFromEnv('animationManager').setAnimationState('update');\n\n    if ((upperLimit !== UNDEF) && upperLimit > maxValue && upperLimit !== axisRange.max && config.allowAxisChange) {\n      max = upperLimit;\n      limitchanged = true;\n    }\n\n    if (limitchanged) {\n      yAxis.resetStoredLimits();\n      yAxis.setAxisConfig({\n        axisMaxValue: max,\n        axisMinValue: min,\n        showUpperLimit: true\n      });\n      yAxis.setDataLimit(max, min);\n      chart._manageInteractiveSpace();\n    }\n    return limitchanged;\n  }\n\n  /**\n   * Function to get the jsonData\n   * @return {Object} the jsonData\n   */\n  getJSONData () {\n    var chart = this,\n      canvas = chart.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      vCanvas = canvas.getChildren('vCanvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      rawObj = chart.getFromEnv('dataSource'), // eslint-disable-line good-practices/no-single-usage-variable\n      groupManager,\n      datasetsArr = [],\n      dataset,\n      datasets,\n      dataObj,\n      i,\n      len,\n      jsonObj;\n\n    vCanvas.iterateComponents(component => {\n      if (component.getType() === 'group') {\n        groupManager = component;\n      }\n    });\n\n    if (groupManager) {\n      datasetsArr = groupManager.getJSONData && groupManager.getJSONData();\n    } else {\n      datasets = chart.getDatasets();\n      len = datasets.length;\n      for (i = 0; i < len; i++) {\n        dataset = datasets[i];\n        dataObj = {\n          'seriesname': dataset.config.seriesname,\n          'data': dataset.getJSONData().data\n        };\n        datasetsArr.push(dataObj);\n      }\n    }\n\n    jsonObj = extend2({}, rawObj);\n    jsonObj.dataset = datasetsArr;\n    return jsonObj;\n  }\n}\nDragBase.prototype._manageInteractiveSpace = _manageInteractiveSpace;\nexport default DragBase;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Ajax from '@fusioncharts/core/src/ajax';\nimport { getDepsByType } from '@fusioncharts/core/src/dependency-manager';\nimport { xssEncode } from '@fusioncharts/core/src/lib';\n\nlet UNDEF,\n  transcoders = getDepsByType('transcoder');\n\n/**\n * Call back function when submit button is pressed.\n */\nfunction submitData () {\n  var chart = this,\n    // iapi = chart.apiInstance,\n    ajaxObj = new Ajax(),\n    chartConf = chart.config,\n    json = transcoders.json(),\n    csv = (transcoders.csv && transcoders.csv()) || 'csv',\n    xml = transcoders.xml(),\n    url = chartConf.formAction,\n    chartInstance = chart.getFromEnv('chartInstance'),\n    requestType,\n    data,\n    paramObj,\n    tempSpan,\n    formEle;\n\n  if (chartConf.formDataFormat === json.format) {\n    requestType = json.format;\n    if (chart.getJSONData) {\n      data = JSON.stringify(chart.getJSONData());\n    }\n    if (chart.getCollatedData) {\n      data = JSON.stringify(chart.getCollatedData());\n    }\n  } else if (chartConf.formDataFormat && chartConf.formDataFormat === csv.format) {\n    requestType = csv.format;\n    data = chart.getCSVString && chart.getCSVString();\n    if (data === UNDEF || data === '') {\n      if (chart.getJSONData) {\n        data = csv.fromJSON(chart.getJSONData()).data;\n      }\n      if (chart.getCollatedData) {\n        data = csv.fromJSON(chart.getCollatedData()).data;\n      }\n    }\n  } else {\n    requestType = xml.format;\n    if (chart.getCollatedData) {\n      data = xml.fromJSON(chart.getCollatedData()).data;\n    }\n    if (chart.getJSONData) {\n      data = xml.fromJSON(chart.getJSONData()).data;\n    }\n  }\n\n  // cancel data submit function added in event options\n  /**\n    * For interative charts like `Select Scatter`, `DragNode`, `Dragable Column2D ` and etc., data\n    * points value can be selected for `Scatter Chart` and values can be changed for dragable charts by\n    * clicking and dragging the data points whose data point values can be sent to an URL by ajax POST.\n    * This is the first event raised when `Submit` button is clicked where the current chart data is\n    * about to be sent to the set URL.\n    *\n    * @event FusionCharts#beforeDataSubmit\n    * @group chart-powercharts\n    *\n    * @param {string} data - Contains the XML string with complete chart data at it's current state.\n    *\n    */\n  chart.fireChartInstanceEvent('beforeDataSubmit', {\n    data: data\n  }, UNDEF, function () {\n    // After the collation is done, we have to submit the data using\n    // ajax or form submit method.\n    if (!chartConf.submitFormAsAjax) {\n      // Create a hidden form with data inside it.\n      tempSpan = window.document.createElement('span');\n      tempSpan.innerHTML = '<form style=\"display:none\" action=\"' +\n        url + '\" method=\"' + chartConf.formMethod + '\" target=\"' + chartConf.formTarget +\n        '\"> <input type=\"hidden\" name=\"strXML\" value=\"' +\n        xssEncode(data) + '\"><input type=\"hidden\" name=\"dataFormat\" value=\"' +\n        requestType.toUpperCase() + '\" /></form>';\n\n      formEle = tempSpan.removeChild(tempSpan.firstChild);\n\n      // Append the form to body and then submit it.\n      window.document.body.appendChild(formEle);\n      formEle.submit && formEle.submit();\n      // cleanup\n      formEle.parentNode.removeChild(formEle);\n      tempSpan = formEle = null;\n    } else {\n      // eslint-disable-next-line\n      ajaxObj.onError = function (response, wrapper, ajaxData, url) {\n      /**\n        * For interative charts like `Select Scatter`, `DragNode`, `Dragable Column2D ` and etc.,\n        * data points value can be selected for `Scatter Chart` and values can be changed for\n        * dragable charts by clicking and dragging the data points whose data point values can be\n        * sent to an URL by ajax POST. This event is raised if there is an ajax error in sending\n        * the chart XML data.\n        *\n        * @event FusionCharts#dataSubmitError\n        * @group chart-powercharts\n        *\n        * @param {string} data - Contains the XML string with complete chart data.\n        * @param {number} httpStatus - Tells the status code of the ajax POST request\n        * @param {string} statusText - Contains the ajax error message.\n        * @param {string} url - URL to which the data is sent as ajax POST request.\n        * @param {object} xhrObject - XMLHttpRequest object which takes care of sending the XML\n        * chart data. In case of error, this object won't be defined.\n        */\n        chart.fireChartInstanceEvent('dataSubmitError', {\n          xhrObject: wrapper.xmlhttp,\n          url: url,\n          statusText: response,\n          httpStatus: (wrapper.xmlhttp && wrapper.xmlhttp.status)\n            ? wrapper.xmlhttp.status : -1,\n          data: data\n        }, [chartInstance.id, response, wrapper.xmlhttp && wrapper.xmlhttp.status]);\n      };\n      // eslint-disable-next-line\n      ajaxObj.onSuccess = function (response, wrapper, ajaxData, url) {\n      /**\n        * For interative charts like `Select Scatter`, `DragNode`, `Dragable Column2D ` and etc.,\n        * data points value can be selected for `Scatter Chart` and values can be changed for\n        * dragable charts by clicking and dragging the data points whose data point values can be\n        * sent to an URL by ajax POST. This event is raised when the ajax POST request is\n        * successfully completed.\n        *\n        * @event FusionCharts#dataSubmitted\n        * @group chart-powercharts\n        *\n        * @param {string} data - Contains the XML string with complete chart data.\n        * @param {string} reponse - Contains the reponse returned by the web server to which the\n        * HTTP POST request was submitted.\n        * @param {string} url - URL to which the data is sent as HTTP POST request.\n        * @param {object} xhrObject - XMLHttpRequest object which takes care of sending the XML\n        * chart data\n        */\n        chart.fireChartInstanceEvent('dataSubmitted', {\n          xhrObject: ajaxObj,\n          response: response,\n          url: url,\n          data: data\n        }, [chartInstance.id, response]);\n      };\n\n      paramObj = {};\n      paramObj['str' + requestType.toUpperCase()] = data;\n\n      if (ajaxObj.open) {\n        ajaxObj.abort();\n      }\n      ajaxObj.post(url, paramObj);\n    }\n  }, function () {\n    /**\n      * For interative charts like `Select Scatter`, `DragNode`, `Dragable Column2D ` and etc.,\n      * data points value can be selected for `Scatter Chart` and values can be changed for\n      * dragable charts by clicking and dragging the data points whose data point values can be\n      * sent to an URL by ajax POST. This event is raised when `preventDefault()` method is called\n      * from the `eventObject` of FusionCharts#beforeDataSubmit event.\n      *\n      * @event FusionCharts#dataSubmitCancelled\n      * @group chart-powercharts\n      *\n      * @param {string} data - Contains the XML string with complete chart data.\n      * @param {number} httpStatus - Tells the status code of the ajax POST request\n      * @param {string} statusText - Contains the ajax error message.\n      * @param {string} url - URL to which the data is sent as ajax POST request.\n      * @param {object} xhrObject - XMLHttpRequest object which takes care of sending the XML\n      * chart data. In case of error, this object won't be defined.\n      * @example\n      * FusionCharts.addEventListener('beforeDataSubmit', function(eventObject, parameterObject) {\n      *  eventObject.preventDefault();\n      * }\n      */\n    chart.fireChartInstanceEvent('dataSubmitCancelled', {\n      data: data\n    });\n  });\n}\n\nexport { submitData };\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport { hasSVG, getMouseCoordinate, pluck, pluckNumber, getValidValue, parseUnsafeString,\n  mathAbs, preDefStr, parseTooltext, snapPoint } from '@fusioncharts/core/src/lib';\nimport dragColumnAnimation from './index.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\n\nlet SETROLLOVERATTR = preDefStr.setRolloverAttrStr,\n  SETROLLOUTATTR = preDefStr.setRolloutAttrStr,\n  ROLLOUT = 'DataPlotRollOut',\n  ROLLOVER = 'DataPlotRollOver',\n  MOUSEOVER = 'mouseOver',\n  MOUSEOUT = 'mouseOut',\n  DEFAULT = 'default',\n  DATAPLOTCLICK = preDefStr.DATAPLOTCLICK,\n  dragMouseAttr = (hasSVG && 'ns-resize') || 'n-resize',\n  _getJSONData,\n  _restore,\n  UNDEF,\n  updateDataValue = function (event, chart) {\n    let element = this,\n      yAxis = chart.getChildren('yAxis')[0],\n      container = chart.getFromEnv('chart-container'),\n      eventArgs = element.data('eventArgs'),\n      mouseCoordinate;\n\n    mouseCoordinate = getMouseCoordinate(container, event, chart);\n    eventArgs.value = yAxis.getValue(mouseCoordinate.chartY);\n\n    element.data('eventArgs', eventArgs);\n  };\naddDep({\n  name: 'dragColumnAnimation',\n  type: 'animationRule',\n  extension: dragColumnAnimation\n});\n\n/**\n * dataset class of dragcolumn inheriting from column class\n */\nclass DragColumnDataset extends ColumnDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragColumn';\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    */\n  configureAttributes (datasetJSON) {\n    var dataset = this,\n      conf = dataset.config,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      JSONData = conf.JSONData;\n\n    conf.allowDrag = pluckNumber(JSONData.allowdrag, 1);\n    conf.allowNegDrag = pluckNumber(JSONData.allownegativedrag, 1);\n    conf.allowAxisChange = pluckNumber(chartAttr.allowaxischange, 1);\n    conf.snapToDivOnly = pluckNumber(chartAttr.snaptodivonly, 0);\n    conf.snapToDiv = conf.snapToDivOnly ? 1 : pluckNumber(chartAttr.snaptodiv, 1);\n    conf.doNotSnap = pluckNumber(chartAttr.donotsnap, 0);\n    conf.snapToDivRelaxation = pluckNumber(chartAttr.snaptodivrelaxation, 10);\n    if (conf.doNotSnap) {\n      conf.snapToDiv = conf.snapToDivOnly = 0;\n    }\n    super.configureAttributes(datasetJSON);\n  }\n  /**\n   * method to configure a particular data plot object\n   * @param {number} i index of the data object to be configured\n   * @param {Object} setData particular plot information in of i'th index in input json\n   */\n  _plotConfigure (i, setData) {\n    let conf = this.config,\n      dataStore = this.components.data,\n      dataObj,\n      config;\n    super._plotConfigure(i, setData);\n    dataObj = dataStore[i];\n    config = dataObj.config;\n    config.allowDrag = pluckNumber(setData.allowdrag, conf.allowDrag);\n    config.allowNegDrag = pluckNumber(setData.allownegativedrag, conf.allowNegDrag);\n  }\n\n  /**\n  * Function called when drag is triggered over the datasets\n  * @param {String} action dragstart/dragmove/dragend action\n  * @param {*} oriEvent The original mouse event\n  * @param {*} index the index of the data over which drag is triggered\n  * @param {*} coordinateData the mouse-coordinate wrt to the chart container\n  */\n  drag (action, oriEvent, index, coordinateData) {\n    var dataset = this,\n      coordinate = coordinateData,\n      datasetConf = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = chart.config,\n      canvasTop = chartConfig.canvasTop,\n      canvasBottom = chartConfig.canvasBottom,\n      setElement,\n      config,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      NumberFormatter = dataset.getFromEnv('number-formatter'),\n      dataStore = dataset.components.data,\n      yActual,\n      value,\n      formattedVal,\n      allowNegDrag,\n      yPos,\n      angle,\n      height,\n      rolloverdata,\n      lowerDragBoundary,\n      chartY,\n      fill,\n      rolloutedata,\n      canvas = dataset.getFromEnv('paper').canvas,\n      style = canvas.style,\n      yAxis = dataset.getFromEnv('yAxis'),\n      yBasePos = yAxis.yBasePos,\n      plotIndex,\n      eventArgs,\n      eventArgsArr,\n      yaxisName = chartConfig.yaxisname,\n      xaxisName = chartConfig.xaxisname,\n      parserConfig = {\n        xaxisName,\n        yaxisName\n      },\n      ticks = yAxis.getTicks(),\n      data,\n      tolerance = chartConfig.dragTolerance + 1,\n      setTooltext,\n      toolText,\n      allowDrag,\n      pointerMouseAttr = DEFAULT,\n      macroIndices = [1, 2, 3, 4, 5, 6, 7],\n      JSONData = datasetConf.JSONData,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      useplotgradientcolor = chartConfig.useplotgradientcolor,\n      useroundedges = chartConfig.useroundedges,\n      chartContainer = dataset.getFromEnv('chart-container'),\n      snapToDivRelaxation = mathAbs(yAxis.getValue(yAxis.getPixel(0) - datasetConf.snapToDivRelaxation)),\n      snapPixel = datasetConf.snapToDivOnly\n        ? (mathAbs(ticks[1] - ticks[0]) * 0.5) : snapToDivRelaxation;\n\n    coordinate = coordinate || getMouseCoordinate(chartContainer, oriEvent, chart);\n\n    switch (action) {\n      case 'dragstart':\n        data = dataStore[index];\n        config = data.config;\n        setElement = data.graphics.element;\n        yPos = data._yPos;\n        height = data._height;\n        yActual = (config.setValue < 0) ? (yPos + height) : yPos;\n        allowDrag = config.allowDrag;\n        chartY = coordinate.chartY;\n        if (allowDrag && chartY >= yActual - tolerance &&\n          chartY <= yActual + tolerance) {\n          // set drag flag\n          config.dragStart = true;\n          config._pointerDy = 0;\n          config._dragStartY = chartY;\n          // difference on actualY and chartY\n          config._dragBuffer = yActual - chartY;\n\n          data.startValue = config.setValue;\n          data.name = datasetConf.seriesname;\n          data.datasetIndex = datasetConf.index;\n          data.dragged = true;\n        } else {\n          config.dragStart = false;\n        }\n        break;\n\n      case 'dragmove':\n        data = dataStore[index];\n        config = data.config;\n        if (config.dragStart) {\n          setElement = data.graphics.element;\n          plotIndex = config.plotIndex;\n          allowNegDrag = config.allowNegDrag;\n          lowerDragBoundary = allowNegDrag ? canvasBottom : yBasePos;\n          chartY = coordinate.chartY;\n          config._rollOverResponseSetterFire = false;\n          style.cursor = dragMouseAttr;\n          // counter on drag move\n          config._pointerDy++;\n          // calculate chartY with _dragBuffer\n          chartY += config._dragBuffer;\n          // update chartY on canvas edge crossing\n          if (chartY < canvasTop) {\n            chartY = canvasTop;\n          } else if (chartY > lowerDragBoundary) {\n            chartY = lowerDragBoundary;\n          }\n          // calculate yPos\n          yPos = yBasePos < chartY ? yBasePos : chartY;\n          // calculate height\n          height = mathAbs(yBasePos - chartY);\n          data._yPos = yPos;\n          data._height = height;\n          yActual = (yPos >= yBasePos) ? (yPos + height) : yPos;\n          config._y = value = config.setValue = yAxis.getValue(yActual);\n          formattedVal = NumberFormatter.dataLabels(value);\n          config.toolTipValue = formattedVal;\n          config.displayValue = pluck(config.setDisplayValue, formattedVal);\n          if (useplotgradientcolor && !useroundedges) {\n            config.colorArr[0].FCcolor.angle = angle = yPos < yBasePos ? 90 : 270;\n          }\n\n          setElement.attr({\n            y: data._yPos,\n            height: data._height\n          });\n\n          dataset.parseLabelAttributes(data);\n          dataset.drawLabel(plotIndex, plotIndex + 1);\n          data.graphics.element = setElement;\n          toolTipController.hide(datasetConf.currentToolTip);\n\n          // fire dataplotDragStart event\n          if (config._pointerDy === 1) {\n            eventArgs = {\n              index: index,\n              dataIndex: index,\n              datasetIndex: data.datasetIndex,\n              startValue: data.startValue,\n              datasetName: data.name,\n              color: config.originalPlotColor,\n              gradientColor: datasetConf.plotgradientcolor,\n              alpha: config.plotFillAlpha,\n              borderColor: datasetConf.plotbordercolor,\n              borderAlpha: config.plotBorderAlpha,\n              borderThickness: chartConfig.plotborderthickness,\n              borderDashed: config.dashed,\n              hoverColor: config.hoverColor,\n              hoverAlpha: config.hoverAlpha,\n              borderHoverColor: config.hoverBorderColor,\n              borderHoverAlpha: config.hoverBorderAlpha\n            };\n            chart.fireChartInstanceEvent('dataplotDragStart', eventArgs);\n          }\n        }\n        break;\n      case 'dragend':\n        let plotHeight;\n        data = dataStore[index];\n        config = data.config;\n        plotHeight = data._height;\n        if (config.dragStart) {\n          yPos = data._yPos;\n          setElement = data.graphics.element;\n          setTooltext = getValidValue(parseUnsafeString(pluck(data.tooltext,\n            JSONData.plottooltext, chartAttr.plottooltext), false));\n          chartY = coordinate.chartY;\n          dataset.setMaxMin(data);\n          // chart._setDataLimits();\n          if (config.givenPlotShowValue === 0) {\n            config.showValue = 0;\n          } else if (config.givenPlotShowValue === 1) {\n            config.showValue = 1;\n          } else if (config.givenPlotShowValue !== 1 && datasetConf.showValues) {\n            if (Math.sqrt(plotHeight * plotHeight) < config.minplotheightforvalue) {\n              config.showValue = 0;\n            } else {\n              config.showValue = 1;\n            }\n          }\n          if (datasetConf.snapToDiv || datasetConf.snapToDivOnly) {\n            config.setValue = snapPoint({ snapPixel, datasetConf }, ticks, data);\n            chartY = yAxis.getPixel(config.setValue);\n            yPos = yBasePos < chartY ? yBasePos : chartY;\n            // calculate height\n            height = mathAbs(yBasePos - chartY);\n            data._yPos = yPos;\n            data._height = height;\n            setElement.attr({\n              y: yPos,\n              height: height\n            });\n            formattedVal = NumberFormatter.dataLabels(config.setValue);\n            config.toolTipValue = formattedVal;\n            config.displayValue = pluck(config.setDisplayValue, formattedVal);\n            dataset.parseLabelAttributes(data);\n            dataset.drawLabel(plotIndex, plotIndex + 1);\n          }\n\n          eventArgs = {\n            index: index,\n            dataIndex: index,\n            datasetIndex: data.datasetIndex,\n            startValue: data.startValue,\n            endValue: config.setValue,\n            datasetName: data.name,\n            color: config.originalPlotColor,\n            gradientColor: datasetConf.plotgradientcolor,\n            alpha: config.plotFillAlpha,\n            borderColor: datasetConf.plotbordercolor,\n            borderAlpha: config.plotBorderAlpha,\n            borderThickness: chartConfig.plotborderthickness,\n            borderDashed: config.dashed,\n            hoverColor: config.hoverColor,\n            hoverAlpha: config.hoverAlpha,\n            borderHoverColor: config.hoverBorderColor,\n            borderHoverAlpha: config.hoverBorderAlpha,\n            id: config.id\n          };\n          eventArgsArr = [\n            chart.getFromEnv('chartInstance').id,\n            eventArgs.dataIndex,\n            eventArgs.datasetIndex,\n            eventArgs.datasetName,\n            eventArgs.startValue,\n            eventArgs.endValue\n          ];\n\n          // Update dataValue\n          updateDataValue.call(setElement, oriEvent, chart);\n          if (config._pointerDy) {\n            chart.fireChartInstanceEvent('dataplotDragEnd', eventArgs);\n\n            // Fire the ChartUpdated event\n            chart.fireChartInstanceEvent('chartupdated', eventArgs, eventArgsArr);\n          }\n          if (useplotgradientcolor && !useroundedges) {\n            angle = yPos >= yBasePos ? 90 : 270;\n            if ((rolloverdata = setElement.data(SETROLLOVERATTR)) && rolloverdata.fill) {\n              fill = rolloverdata.fill;\n              fill = fill.split('-');\n              fill[0] = angle;\n              rolloverdata.fill = fill.join('-');\n            }\n            if ((rolloutedata = setElement.data(SETROLLOUTATTR)) && rolloutedata.fill) {\n              fill = rolloutedata.fill;\n              fill = fill.split('-');\n              fill[0] = angle;\n              rolloutedata.fill = fill.join('-');\n            }\n          }\n          // difference on actualY and chartY\n          config._dragBuffer = 0;\n          // counter on drag move\n          config._pointerDy = 0;\n          if (setTooltext !== UNDEF) {\n            parserConfig.formattedValue = config.toolTipValue;\n            parserConfig.label = config.label;\n            toolText = parseTooltext(setTooltext, macroIndices,\n              parserConfig, { value: config.toolTipValue }, UNDEF, JSONData);\n            config.setTooltext = toolText;\n            setTooltext = toolText;\n            config.toolText = toolText;\n          }\n          toolText = config.finalTooltext = config.toolText !== false ? (config.toolText +\n            (setTooltext ? '' : config.toolTipValue)) : '';\n          if (!(chartY >= yActual - tolerance &&\n                  chartY <= yActual + tolerance)) {\n            style.cursor = pointerMouseAttr;\n          }\n          config.dragStart = false;\n        }\n    }\n  }\n\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType name of the event\n   * @param {number} plotIndex index of the plot where this event has been occured\n   * @param {Event} e reference of the original mouse event\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      datasetConf = dataset.config,\n      currentToolTip = datasetConf.currentToolTip,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      drawTrendRegion = chartConfig.drawTrendRegion,\n      // chartComp = chart.components,\n      paper = dataset.getFromEnv('paper'),\n      canvas = paper.canvas,\n      style = canvas.style,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      data = dataset.components.data[plotIndex],\n      config = data.config,\n      setElement = data.graphics.element,\n      toolText = config.finalTooltext || config.toolText,\n      // tip = lib.toolTip,\n      originalEvent = e.originalEvent,\n      pointerMouseAttr = DEFAULT,\n      tolerance,\n      coordinate = getMouseCoordinate(dataset.getFromEnv('chart-container'), originalEvent, chart),\n      chartY = coordinate.chartY,\n      yPos = data._yPos,\n      height = data._height,\n      yAxis = dataset.getFromEnv('yAxis'),\n      yBasePos = yAxis.yBasePos,\n      allowDrag = config.allowDrag,\n      yActual,\n      colTop = yPos,\n      colBottom = yPos + height;\n\n    tolerance = chartConfig.dragTolerance + 1;\n\n    yActual = (yPos >= yBasePos) ? (yPos + height) : yPos;\n    if (setElement) {\n      switch (eventType) {\n        case 'fc-mouseover' :\n          if (chartY <= colBottom - tolerance && chartY >= colTop + tolerance && !drawTrendRegion && toolText) {\n            if (currentToolTip) {\n              toolTipController.draw(originalEvent, toolText, currentToolTip);\n            } else {\n              currentToolTip = datasetConf.currentToolTip = toolTipController.draw(originalEvent, toolText);\n            }\n          }\n\n          // fire _rollOverResponseSetter if its not already fired and\n          // cursor position is on column body\n          if (!config._rollOverResponseSetterFire && chartY <= colBottom && chartY >= colTop) {\n            DragColumnDataset._rolloverResponseSetter(chart, setElement, e, this);\n            // set flag true as _rollOverResponseSetter is fired\n            config._rollOverResponseSetterFire = true;\n          }\n          break;\n\n        case 'fc-mouseout' :\n          style.cursor = pointerMouseAttr;\n          // fire _rolloutResponseSetter if _rolloverResponseSetter is fired\n          config._rollOverResponseSetterFire &&\n          DragColumnDataset._rolloutResponseSetter(chart, setElement, e, this);\n          // set flag false as _rolloutResponseSetter is fired\n          config._rollOverResponseSetterFire = false;\n          toolTipController.hide(datasetConf.currentToolTip);\n          break;\n\n        case 'fc-click' :\n          chart.plotEventHandler(setElement, e, DATAPLOTCLICK);\n          break;\n\n        case 'fc-mousemove' :\n          if (!config.dragStart) {\n            yActual = (config.setValue < 0) ? (yPos + height) : yPos;\n            if (allowDrag && chartY >= yActual - tolerance && chartY <= yActual + tolerance) {\n              style.cursor = dragMouseAttr;\n              toolTipController.hide(datasetConf.currentToolTip);\n            } else {\n              style.cursor = pointerMouseAttr;\n              if (config._rollOverResponseSetterFire && !drawTrendRegion && toolText) {\n                if (currentToolTip) {\n                  toolTipController.draw(originalEvent, toolText, currentToolTip);\n                } else {\n                  currentToolTip = datasetConf.currentToolTip = toolTipController.draw(originalEvent, toolText);\n                }\n              }\n            }\n            // fire _rollOverResponseSetter if its not already fired and\n            // cursor position is on column body\n            if (!config._rollOverResponseSetterFire && chartY <= colBottom && chartY >= colTop) {\n              DragColumnDataset._rolloverResponseSetter(chart, setElement, e);\n              config._rollOverResponseSetterFire = true;\n            } else if (config._rollOverResponseSetterFire &&\n              !(chartY <= colBottom && chartY >= colTop)) {\n              toolTipController.hide(datasetConf.currentToolTip);\n              config._rollOverResponseSetterFire = false;\n              DragColumnDataset._rolloutResponseSetter(chart, setElement, e, this);\n            }\n          }\n          break;\n      }\n    }\n  }\n\n  /**\n   * Function called as a callback when mouse pointer hovers over a graphic element\n   * @param {Object} chart The chart object\n   * @param {Object} elem The graphic element for which the function is called\n   * @param {Object} event The event against which the function is called.\n   * @param {Component} dataset - dataset component\n   */\n  static _rolloverResponseSetter (chart, elem, event, dataset) {\n    let elData = elem && elem.getData(),\n      animationManager = chart.getFromEnv('animationManager');\n    // Check whether the plot is in dragged state or not if\n    // drag then dont fire rolloverevent\n    if (elem && elData.showHoverEffect !== 0 && elData.draged !== true && elem) {\n      animationManager.setAnimationState(MOUSEOVER);\n      animationManager.setAnimation({\n        el: elem,\n        label: 'rect',\n        component: dataset,\n        attr: elem.getData().setRolloverAttr\n      });\n      chart.plotEventHandler(elem, event, ROLLOVER);\n    }\n  }\n\n  /**\n   * Function called as a callback when mouse pointer hovers out a graphic element\n   * @param {Object} chart The chart object\n   * @param {Object} elem The graphic element for which the function is called\n   * @param {Object} event The event against which the function is called.\n   * @param {Component} dataset - dataset component\n   */\n  static _rolloutResponseSetter (chart, elem, event, dataset) {\n    let elData = elem && elem.getData(),\n      animationManager = chart.getFromEnv('animationManager');\n    // Check whether the plot is in draggedstate or not if drag then dont fire rolloutevent\n    if (elem && elData.showHoverEffect !== 0 && elData.draged !== true) {\n      animationManager.setAnimationState(MOUSEOUT);\n      animationManager.setAnimation({\n        el: elem,\n        label: 'rect',\n        component: dataset,\n        attr: elem.getData().setRolloutAttr\n      });\n      chart.plotEventHandler(elem, event, ROLLOUT);\n    }\n  }\n\n  /**\n   * Fucntion to get the updated values of data when they are dragged.\n   * @return {Object} The corresponding data Array of the dataset containing the values of all the sets.\n   */\n  getJSONData () {\n    var dataset = this,\n      JSONData = dataset.config.JSONData.data,\n      dataStore = dataset.components.data,\n      dataArr = [],\n      obj = {},\n      updatedDataObj,\n      dataObj,\n      prop,\n      len,\n      i;\n\n    for (i = 0, len = JSONData.length; i < len; i++) {\n      dataObj = JSONData[i];\n      updatedDataObj = dataStore[i];\n      obj = {};\n      for (prop in dataObj) {\n        if (prop === 'value') {\n          obj[prop] = updatedDataObj.config.setValue;\n        } else {\n          obj[prop] = dataObj[prop];\n        }\n      }\n      dataArr.push(obj);\n    }\n    return {\n      data: dataArr\n    };\n  }\n\n  /**\n   * Function to restore the values of the dataset to its original\n   */\n  restore () {\n    var dataset = this;\n    dataset.setData(dataset.config.JSONData, true);\n  }\n}\n_getJSONData = DragColumnDataset.prototype.getJSONData;\n_restore = DragColumnDataset.prototype.restore;\nexport default DragColumnDataset;\nexport { _getJSONData, _restore, updateDataValue };\n","import columnAnimation from '@fusioncharts/charts/src/dataset/column/index.animation';\nexport default {\n  'initial.dataset.dragColumn': columnAnimation['initial.dataset.column']\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ColumnMultiSeriesgroup from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\nimport { extend2 } from '@fusioncharts/core/src/lib';\n\n/**\n * Group for drag column, area and line charts.\n */\nclass DragColumnMultiseriesGroup extends ColumnMultiSeriesgroup {\n  /**\n  * Function to get the jsonData from the datasets\n  * @return {Object} data from the dataset\n  */\n  getJSONData () {\n    var manager = this,\n      datasets = manager.getChildren('dataset'),\n      jsonData = [],\n      dataset,\n      datasetObj,\n      rawDataset,\n      i,\n      len = datasets.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i++) {\n      dataset = datasets[i];\n      rawDataset = extend2({}, manager.getFromEnv('dataSource').dataset[i]);\n      // Here the actual data is deleted and modified data is fetched from each datasets\n      delete rawDataset.data;\n      datasetObj = dataset.getJSONData();\n      jsonData.push(extend2(rawDataset, datasetObj));\n    }\n    return jsonData;\n  }\n}\n\nexport default DragColumnMultiseriesGroup;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport LimitUpdater from '@fusioncharts/core/src/axis/limit-updater';\nexport default function (chart) {\n  let numericAxis = chart.getChildren('yAxis')[0],\n    limitUpdaterArr,\n    limitUpdater;\n  componentFactory(numericAxis, LimitUpdater, 'limitUpdater', chart.config.allowAxisChange ? 1 : 0);\n  limitUpdaterArr = numericAxis.getChildren('limitUpdater');\n  limitUpdater = limitUpdaterArr && limitUpdaterArr[0];\n  limitUpdater && limitUpdater.configure();\n}\n","import { ComponentInterface } from '../component-interface';\nimport domEvtHandler from '../dom-event';\nimport { createElement, hashify, extend2, isIE, hasSVG, rgbaToHex, hasTouch } from '../lib';\n\nconst ENTER_CODE = 13,\n  ESCAPE_CODE = 27;\n\nlet linkedAxis;\n\nfunction getCharCode (e) {\n  return (typeof e.which === 'number') ? e.which : e.keyCode;\n}\n\nfunction onMouseUp (e) {\n  var ele = e.target;\n  if (ele.justFocussed) {\n    ele.justFocussed = false;\n    if (!hasTouch) {\n      ele.select();\n    }\n  }\n}\n\nfunction doAxisUpdate (value, oldvalue, isMax) {\n  var success = false,\n    axisParent = this.config.linkedAxis.getLinkedParent();\n  // do not update if value has not changed\n  if (value === oldvalue + '') {\n    return;\n  }\n\n  if (isMax) {\n    success = axisParent.changeUpperLimits && axisParent.changeUpperLimits(Number(value));\n  } else {\n    success = axisParent.changeLowerLimits && axisParent.changeLowerLimits(Number(value));\n  }\n\n  // if (!success && showRangeError) {\n  //   chart.showMessage('Sorry! Not enough range gap to modify axis limit to ' +\n  //     (Number(value) || '0') +\n  //     '.<br />Please modify the data values to be within range.<br />&nbsp;<br />' +\n  //     '(click anywhere on the chart to close this message)', true);\n  // }\n\n  return success;\n}\n\nfunction onFocus (e) {\n  var ele = e.target,\n    styleObj = {\n      opacity: 1,\n      filter: 'alpha(opacity=100)', // IE opacity\n      color: rgbaToHex(ele.axisLabel.attr('fill'))\n    },\n    item;\n\n  for (item in styleObj) {\n    ele.style[item] = styleObj[item];\n  }\n\n  ele.value = ele.dataValue;\n\n  ele.justFocussed = true;\n  // for IE\n  ele.hasFocus = true;\n  ele.axisLabel && ele.axisLabel.hide();\n  // if (!chart.graphics.hiddenAxisLabels) {\n  //   chart.graphics.hiddenAxisLabels = [];\n  // }\n  // chart.graphics.hiddenAxisLabels.push(ele.axisLabel);\n}\n\nfunction onBlur (e) {\n  var ele = e.target,\n    newValue = ele.value,\n    oldValue = ele.oldValue,\n    isMaxLabel = ele.isMaxLabel;\n    // success = doAxisUpdate(newValue, oldValue, isMaxLabel);\n\n  doAxisUpdate.call(this, newValue, oldValue, isMaxLabel);\n  // if (success !== true) {\n  ele.style.opacity = 0;\n  ele.style.filter = 'alpha(opacity=0)';\n  // IE opacity\n  ele.axisLabel && ele.axisLabel.show();\n  // }\n\n  if (isIE) {\n    // To call the actual blur on the element in case of IE\n    document.getElementsByTagName('body')[0].focus &&\n    document.getElementsByTagName('body')[0].focus();\n  }\n\n  ele.justFocussed = false;\n  ele.hasFocus = false;\n}\n\nfunction onKeyUp (e) {\n  var ele = e.target,\n    keyCode = getCharCode(e.originalEvent),\n    newValue = ele.value,\n    oldValue = ele.oldValue,\n    isMaxLabel = ele.isMaxLabel,\n    success;\n\n  if (keyCode === ENTER_CODE) {\n    success = doAxisUpdate.call(this, newValue, oldValue, isMaxLabel);\n    if (success === false) {\n      ele.style.color = '#dd0000';\n    } else {\n      domEvtHandler.fire(ele, 'blur', e);\n    }\n  } else if (keyCode === ESCAPE_CODE) {\n    ele.value = oldValue;\n    domEvtHandler.fire(ele, 'blur', e);\n  }\n}\n\nfunction defaultHandler (inputElement) {\n  return function (e) {\n    if (inputElement.parentNode) {\n      domEvtHandler.fire(inputElement, 'blur', e);\n    }\n  };\n}\n\nfunction defaultIEHandler (inputElement) {\n  return function (e) {\n    if (e.target !== inputElement && inputElement.hasFocus) {\n      domEvtHandler.fire(inputElement, 'blur', e);\n    }\n  };\n}\n\nfunction destroyHandler (inputElement, defaultAction) {\n  domEvtHandler.unlisten(this.config.linkedAxis.getLinkedParent(), 'defaultprevented', defaultAction);\n  inputElement.parentNode.removeChild(inputElement);\n}\n\nfunction destroyIEHandler (inputElement, defaultAction) {\n  return function () {\n    domEvtHandler.unlisten(linkedAxis.getLinkedParent().getLinkedItem('container'), 'mousedown', defaultAction);\n    inputElement.parentNode.removeChild(inputElement);\n  };\n}\n\nclass LimitUpdater extends ComponentInterface {\n  configureAttributes () {\n    this.config.linkedAxis = this.getLinkedParent();\n    linkedAxis = this.config.linkedAxis;\n    this.config.onKeyUp = onKeyUp.bind(this);\n    this.config.onBlur = onBlur.bind(this);\n    this.config.onFocus = onFocus.bind(this);\n    this.config.onMouseUp = onMouseUp.bind(this);\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'helper';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'limitUpdater';\n  }\n\n  draw () {\n    // draw this component;\n    let limitUpdater = this,\n      chartConf = limitUpdater.getFromEnv('chartConfig'),\n      axis = limitUpdater.config.linkedAxis,\n      extremeLabels = axis.getAxisConfig('extremeLabels'),\n      axisLimits = axis.getLimit(),\n      chartContainer = limitUpdater.getFromEnv('chart-container'),\n      chartCanvasStyle = limitUpdater.getFromEnv('style').inCanvasStyle,\n      inputStyle = extend2({\n        outline: 'none', // prevent chrome outlining\n        '-webkit-appearance': 'none', // disable ios background\n        filter: 'alpha(opacity=0)', // IE opacity\n        position: 'absolute',\n        background: 'transparent',\n        border: '1px solid #cccccc',\n        textAlign: 'right',\n        top: 0,\n        left: 0,\n        width: 50,\n        zIndex: 20,\n        opacity: 0,\n        borderRadius: 0,\n        display: 'block'\n      }, chartCanvasStyle),\n      labelObj = {\n        max: {\n          element: extremeLabels.lastLabel.graphic,\n          value: axisLimits.max\n        },\n        min: {\n          element: extremeLabels.firstLabel.graphic,\n          value: axisLimits.min\n        }\n      },\n      inputElement,\n      inputElementName,\n      labelElement,\n      key,\n      styleKey,\n      labelBox,\n      isMaxLabel,\n      labelValue,\n      closedDefaultHandler,\n      inputWidth,\n      inputLeft,\n      closedDefaultIEHandler;\n\n    inputStyle.color = hashify(inputStyle.color);\n    inputStyle.fontSize = `${inputStyle.fontSize}px`;\n\n    for (key in labelObj) {\n      if (labelObj.hasOwnProperty(key)) {\n        labelElement = labelObj[key].element;\n        labelBox = labelElement && labelElement.getBBox();\n        labelValue = labelObj[key].value;\n        isMaxLabel = (key === 'max');\n\n        inputElementName = `${key}Input`;\n        inputElement = limitUpdater.getGraphicalElement(inputElementName);\n        if (!(labelBox && labelElement)) {\n          if (inputElement) {\n            inputElement.style.display = 'none';\n          }\n          continue;\n        }\n        if (!inputElement) {\n          inputElement = limitUpdater.addGraphicalElement(inputElementName, createElement('input', {\n            type: 'text',\n            value: labelValue,\n            id: `fc-updater-${key}`\n          }, chartContainer));\n        }\n\n        // Add events to make the textboxes visible on focus and hide when not.\n        domEvtHandler.listen(inputElement, ['focus', 'mouseup', 'blur', 'keyup'], [this.config.onFocus, this.config.onMouseUp, this.config.onBlur, this.config.onKeyUp]);\n\n        if (hasSVG) {\n          domEvtHandler.listen(chartContainer, 'defaultprevented', closedDefaultHandler = defaultHandler(inputElement));\n          // cleanup handlers\n          domEvtHandler.listen(chartContainer, 'destroy', destroyHandler.bind(this, inputElement, closedDefaultHandler));\n        } else {\n          domEvtHandler.listen(chartContainer, 'mousedown', closedDefaultIEHandler = defaultIEHandler(inputElement));\n          // cleanup handlers\n          domEvtHandler.listen(chartContainer, 'destroy', destroyIEHandler(inputElement, closedDefaultIEHandler));\n        }\n\n        inputWidth = labelBox.x + labelBox.width - chartConf.marginLeft;\n        inputLeft = chartConf.marginLeft;\n\n        inputStyle.top = `${labelBox.y}px`;\n        inputStyle.left = `${inputLeft}px`;\n        inputStyle.width = `${inputWidth}px`;\n\n        for (styleKey in inputStyle) {\n          if (inputStyle.hasOwnProperty(styleKey)) {\n            inputElement.style[styleKey] = inputStyle[styleKey];\n          }\n        }\n\n        inputElement.dataValue = labelValue;\n        inputElement.value = labelValue;\n        inputElement.oldValue = labelValue;\n        inputElement.name = labelValue || '';\n        inputElement.axisLabel = labelElement;\n        inputElement.isMaxLabel = isMaxLabel;\n      }\n    }\n  }\n\n  /**\n   * Generalised function for removing an entire instance of a component\n   */\n  removingDraw () {\n    let graphics = this.getGraphicalElement(),\n      key,\n      element;\n    for (key in graphics) {\n      if (graphics.hasOwnProperty(key)) {\n        element = graphics[key];\n        element && element.parentNode && element.parentNode.removeChild(element);\n        delete graphics[key];\n      }\n    }\n  }\n}\n\nexport default LimitUpdater;\n","import DragTracker from '../chart/_internal/drag-tracker';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\nexport default function (chart) {\n  componentFactory(chart, DragTracker, 'dragTracker');\n  chart.getChildren('dragTracker')[0].addEvents();\n}\n","import { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { getMouseCoordinate } from '@fusioncharts/core/src/lib';\n\nlet dragstart = function (dragTracker) {\n    return function (oriEvent) {\n      let chart = dragTracker.getFromEnv('chart'),\n        config = dragTracker.config,\n        datasets = chart.config.datasetOrder || chart.getDatasets(),\n        coordinate = getMouseCoordinate(chart.getFromEnv('chart-container'), oriEvent, chart),\n        pointFound,\n        hoveredInfo,\n        i = datasets.length,\n        dataset;\n\n      while (i-- && !pointFound) {\n        dataset = datasets[i];\n        if (dataset && dataset.getState('visible')) {\n          hoveredInfo = dataset._getHoveredPlot && dataset._getHoveredPlot(coordinate.chartX, coordinate.chartY);\n          if (hoveredInfo && hoveredInfo.hovered) {\n            pointFound = true;\n            config.dragStart = true;\n            config.hoveredInfo = hoveredInfo;\n            config.hoveredDS = dataset;\n            dataset.drag('dragstart', oriEvent, hoveredInfo.pointIndex, coordinate);\n          }\n        }\n      }\n    };\n  },\n  dragmove = function (dragTracker) {\n    return function (oriEvent) {\n      let config = dragTracker.config;\n      config.dragStart && config.hoveredDS.drag('dragmove', oriEvent, config.hoveredInfo.pointIndex);\n    };\n  },\n  dragend = function (dragTracker) {\n    return function (oriEvent) {\n      let config = dragTracker.config;\n      config.dragStart && config.hoveredDS.drag('dragend', oriEvent, config.hoveredInfo.pointIndex);\n      config.dragStart = false;\n    };\n  },\n  eventList = ['fc-dragstart', 'fc-dragmove', 'fc-dragend'];\n\n/**\n * This class manages the drag-interaction over draggable charts\n */\nclass DragTracker extends ComponentInterface {\n  constructor () {\n    super();\n    this.config.eventCb = {\n      'fc-dragstart': dragstart(this),\n      'fc-dragmove': dragmove(this),\n      'fc-dragend': dragend(this)\n    };\n  }\n\n  /**\n   * Function to add events on the canvas for drag\n   */\n  addEvents () {\n    var dragTracker = this,\n      allCanvas = dragTracker.getFromEnv('chart').getChildren('canvas'); // eslint-disable-line good-practices/no-single-usage-variable\n    dragTracker.removeEvents();\n    allCanvas.forEach(canvas => {\n      eventList.forEach(events => {\n        canvas.addEventListener(events, dragTracker.config.eventCb[events]);\n      });\n    });\n  }\n\n  /**\n   * Function to remove drag events on the canvas\n   */\n  removeEvents () {\n    var dragTracker = this,\n      allCanvas = dragTracker.getFromEnv('chart').getChildren('canvas'); // eslint-disable-line good-practices/no-single-usage-variable\n\n    allCanvas.forEach(canvas => {\n      eventList.forEach(events => {\n        canvas.removeEventListener(events, dragTracker.config.eventCb[events]);\n      });\n    });\n  }\n\n  /**\n   * This method is used to remove all event listeners attached by MouseTracker to the chart.\n   */\n  _dispose () {\n    this.removeEvents();\n    super._dispose();\n  }\n}\n\nexport default DragTracker;\n","import Dragline from '@fusioncharts/powercharts/src/chart/dragline';\nexport default Dragline;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport DragLineDataset from '../../dataset/dragline';\nimport DragArea from '../dragarea';\n/**\n * API class of dragcolumn inheriting from area class\n */\nclass DragLine extends DragArea {\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'DragLine';\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'DragLine';\n  }\n\n  /**\n   * Function to parse chart specific configurations. It first calls the __setDefaultConfig of areabase class.\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    var config = this.config;\n    config.isDrag = true;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n  }\n  /**\n   * Function to return the dataset liked with the current API\n   * @return {Object} The DragLineDataset class\n   */\n  getDSdef () {\n    return DragLineDataset;\n  }\n}\nexport default DragLine;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport { __firePlotEvent, configurer, _updateImage, _drag } from '../dragarea';\nimport { pluckNumber } from '@fusioncharts/core/src/lib';\nimport { _restore, _getJSONData } from '../dragcolumn';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport draglineAnimation from './index.animation';\n\naddDep({\n  name: 'dragLineAnimation',\n  type: 'animationRule',\n  extension: draglineAnimation\n});\n/**\n * dataset class of dragcolumn inheriting from column class\n */\nclass DragLineDataset extends LineDataset {\n  /**\n   * Using fireplotevent of dragarea.\n   */\n  _firePlotEvent () {\n    __firePlotEvent.apply(this, arguments);\n  }\n\n  /**\n   * Function to update image while dragging.\n   * @param {Object} dataObj The object by which the dataset is to be updated.\n   */\n  updateImage (dataObj) {\n    _updateImage.call(this, dataObj);\n  }\n\n  /**\n   * Function to manage drag over the datasets\n   */\n  drag () {\n    _drag.apply(this, arguments);\n  }\n\n  /**\n   * Calling the configureAttributes of drag area.\n   */\n  configureAttributes () {\n    configurer.apply(this, arguments);\n  }\n  /**\n   * method to configure a particular data plot object\n   * @param {number} i index of the data object to be configured\n   * @param {Object} setData particular plot information in of i'th index in input json\n   */\n  _plotConfigure (i, setData) {\n    let conf = this.config,\n      dataStore = this.components.data,\n      dataObj,\n      config;\n    super._plotConfigure(i, setData);\n    dataObj = dataStore[i];\n    config = dataObj.config;\n    config.allowDrag = pluckNumber(setData.allowdrag, conf.allowDrag);\n    config.allowNegDrag = pluckNumber(setData.allownegativedrag, conf.allowNegDrag);\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragLine';\n  }\n  /**\n   * Function to restore the values of the dataset to its original\n   */\n  restore () {\n    _restore.call(this);\n  }\n\n  /**\n   * Fucntion to get the updated values of data when they are dragged.\n   * @return {Object} The corresponding data Array of the dataset containing the values of all the sets.\n   */\n  getJSONData () {\n    return _getJSONData.call(this);\n  }\n}\nexport default DragLineDataset;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport AreaDataset from '@fusioncharts/charts/src/dataset/area';\nimport {\n  hasSVG, getMouseCoordinate, mathAbs, pluck, pluckNumber, getValidValue, parseUnsafeString,\n  parseTooltext, polyPathToPath, snapPoint\n} from '@fusioncharts/core/src/lib';\nimport { _restore, _getJSONData, updateDataValue } from '../dragcolumn';\nimport dragAreaAnimation from './index.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\n\nlet SETROLLOVERATTR = 'setRolloverAttr',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  ROLLOUT = 'DataPlotRollOut',\n  ROLLOVER = 'DataPlotRollOver',\n  DRAGLINE = 'dragLine',\n  DRAGAREA = 'dragArea',\n  DATAPLOTCLICK = 'dataplotclick',\n  DEFAULT = 'default',\n  dragMouseAttr = (hasSVG && 'ns-resize') || 'n-resize',\n  mathMin = Math.min,\n  mathMax = Math.max,\n  isVML = false,\n  _updateImage,\n  _configure,\n  __firePlotEvent,\n  _drag,\n  UNDEF;\n\naddDep({\n  name: 'dragAreaAnimation',\n  type: 'animationRule',\n  extension: dragAreaAnimation\n});\n/**\n * dataset class of dragcolumn inheriting from column class\n */\nclass DragAreaDataset extends AreaDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragArea';\n  }\n  /**\n  * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n  * This function is called once from the init() function of the Column class.\n  * @param  {Object} datasetJSON JSON for dataset configurations\n  */\n  configureAttributes (datasetJSON) {\n    var dataset = this,\n      conf = dataset.config,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      JSONData = conf.JSONData;\n\n    conf.allowDrag = pluckNumber(JSONData.allowdrag, 1);\n    conf.allowNegDrag = pluckNumber(JSONData.allownegativedrag, 1);\n    conf.allowAxisChange = pluckNumber(chartAttr.allowaxischange, 1);\n    conf.snapToDivOnly = pluckNumber(chartAttr.snaptodivonly, 0);\n    conf.doNotSnap = pluckNumber(chartAttr.donotsnap, 0);\n    conf.snapToDiv = pluckNumber(chartAttr.snaptodiv, 1);\n    conf.snapToDivRelaxation = pluckNumber(chartAttr.snaptodivrelaxation, 10);\n    if (conf.doNotSnap) {\n      conf.snapToDiv = conf.snapToDivOnly = 0;\n    }\n    super.configureAttributes(datasetJSON);\n  }\n  /**\n   * method to configure a particular data plot object\n   * @param {number} i index of the data object to be configured\n   * @param {Object} setData particular plot information in of i'th index in input json\n   */\n  _plotConfigure (i, setData) {\n    let conf = this.config,\n      dataObj,\n      config;\n    super._plotConfigure(i, setData);\n    dataObj = this.components.data[i]; // eslint-disable-line good-practices/no-single-usage-variable\n    config = dataObj.config;\n    config.allowDrag = pluckNumber(setData.allowdrag, conf.allowDrag);\n    config.allowNegDrag = pluckNumber(setData.allownegativedrag, conf.allowNegDrag);\n  }\n\n  /**\n   * Function to update image while dragging.\n   * @param {Object} dataObj The object by which the dataset is to be updated.\n   */\n  static updateImage (dataObj) {\n    var graphics = dataObj.graphics,\n      image = graphics.image || graphics.element,\n      config = dataObj.config,\n      anchorProps = config.anchorProps,\n      hoverEffects = config.hoverEffects,\n      imgRef = image && image.data('imgRef'),\n      scale = anchorProps.imageScale,\n      imgH = imgRef.height * scale * 0.01,\n      imgW = imgRef.width * scale * 0.01,\n      x = dataObj._xPos,\n      y = dataObj._yPos,\n      hoverScale = hoverEffects.imageHoverScale,\n      hotW = (imgRef.width * hoverScale * 0.01), // eslint-disable-line good-practices/no-single-usage-variable\n      hotH = (imgRef.height * hoverScale * 0.01), // eslint-disable-line good-practices/no-single-usage-variable\n      markerRadius = anchorProps.radius = anchorProps.isAnchorRadius // eslint-disable-line good-practices/no-single-usage-variable\n        ? anchorProps.radius : mathMin(imgW, imgH) / 2,\n      imagePadding = anchorProps.imagePadding,\n      rolloutClipRadius = markerRadius - imagePadding - anchorProps.borderThickness * 0.5,\n      rolloverClipRadius = hoverEffects.radius -\n        imagePadding - hoverEffects.anchorBorderThickness * 0.5,\n      symbol = anchorProps.symbol[1],\n      imageRollOverPath = polyPathToPath([symbol || 2, x, y, // eslint-disable-line good-practices/no-single-usage-variable\n        rolloverClipRadius > 0 ? rolloverClipRadius : 0, hoverEffects.startAngle, hoverEffects.dip]),\n      setRolloverAttr,\n      imageRolloutPath = polyPathToPath([symbol || 2, x, y, // eslint-disable-line good-practices/no-single-usage-variable\n        rolloutClipRadius > 0 ? rolloutClipRadius : 0, anchorProps.startAngle, 0]),\n      setRolloutAttr = {\n        x: x - imgRef.width * scale * 0.005,\n        y: y - imgRef.height * scale * 0.005,\n        width: imgW,\n        height: imgH,\n        alpha: 100\n      };\n\n    if (!isVML) {\n      setRolloutAttr['clip-path'] = imageRolloutPath;\n    }\n    setRolloverAttr = {\n      x: x - imgRef.width * hoverScale * 0.005,\n      y: y - imgRef.height * hoverScale * 0.005,\n      width: hotW,\n      height: hotH,\n      alpha: 100\n    };\n\n    if (!isVML) {\n      setRolloverAttr['clip-path'] = imageRollOverPath;\n    }\n    image.attr(setRolloutAttr);\n    image.data(SETROLLOVERATTR, setRolloverAttr);\n    image.data(SETROLLOUTATTR, setRolloutAttr);\n  }\n\n  /**\n  * Function called when drag is triggered over the datasets\n  * @param {String} action dragstart/dragmove/dragend action\n  * @param {*} oriEvent The original mouse event\n  * @param {*} index the index of the data over which drag is triggered\n  * @param {*} coordinateData the mouse-coordinate wrt to the chart container\n  */\n  drag (action, oriEvent, index, coordinateData) {\n    let dataset = this,\n      coordinate = coordinateData,\n      datasetConf = dataset.config,\n      datasetIndex = datasetConf.index,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = chart.config,\n      canvasTop = chartConfig.canvasTop,\n      plotItem,\n      element,\n      config,\n      dataStore = dataset.components.data,\n      value,\n      formattedVal,\n      yPos,\n      rolloverdata,\n      lowerDragBoundary,\n      chartY,\n      canvas = dataset.getFromEnv('paper').canvas, // eslint-disable-line good-practices/no-single-usage-variable\n      style = canvas.style,\n      yAxis = dataset.getFromEnv('yAxis'),\n      ticks = yAxis.getTicks(),\n      snapToDivRelaxation = mathAbs(yAxis.getValue(yAxis.getPixel(0) - datasetConf.snapToDivRelaxation)),\n      snapPixel = datasetConf.snapToDivOnly\n        ? (mathAbs(ticks[1] - ticks[0]) * 0.5) : snapToDivRelaxation,\n      plotIndex,\n      eventArgs,\n      parserConfig = {\n        xaxisName: chartConfig.xaxisname,\n        yaxisName: chartConfig.yaxisname\n      },\n      anchorProps,\n      datasetGraphics = dataset.getGraphicalElement(), // eslint-disable-line good-practices/no-single-usage-variable\n      mainLineElement = datasetGraphics.lineElement,\n      chartX,\n      tolerance = chartConfig.dragTolerance + 1,\n      setTooltext,\n      toolText,\n      allowDrag,\n      xPos,\n      rolloutdata,\n      image,\n      startIndex,\n      endIndex,\n      allowNegDrag,\n      pathArr,\n      anchorElement,\n      anchorImageUrl,\n      isHoverEnabled,\n      hoverEffects,\n      anchorStartAngle,\n      eventArgsArr,\n      hoverEnabled,\n      datasetName = dataset.getName(),\n      isDragLine = (datasetName === DRAGLINE) || (datasetName === DRAGAREA), // eslint-disable-line good-practices/no-single-usage-variable\n      pointerMouseAttr = DEFAULT,\n      macroIndices = [1, 2, 3, 4, 5, 6, 7], // eslint-disable-line good-practices/no-single-usage-variable\n      JSONData = datasetConf.JSONData,\n      chartContainer = dataset.getFromEnv('chart-container');\n\n    coordinate = coordinate || getMouseCoordinate(chartContainer, oriEvent, chart);\n\n    switch (action) {\n      case 'dragstart':\n        plotItem = dataStore[index];\n        config = plotItem.config;\n        yPos = plotItem._yPos;\n        xPos = plotItem._xPos;\n        allowDrag = config.allowDrag;\n        chartY = coordinate.chartY;\n        chartX = coordinate.chartX;\n        if (allowDrag &&\n          chartY >= yPos - tolerance && chartY <= yPos + tolerance &&\n          chartX <= xPos + tolerance && chartX >= xPos - tolerance) {\n          config.dragStart = true;\n          config._pointerDy = 0;\n          config._dragStartY = chartY;\n          config._dragBuffer = yPos - chartY;\n          plotItem.dragged = true;\n\n          plotItem.startValue = config.setValue;\n          plotItem.name = datasetConf.seriesname;\n          plotItem.datasetIndex = datasetConf.index;\n          anchorProps = config.anchorProps;\n          hoverEffects = config.hoverEffects;\n          eventArgs = {\n            index: plotIndex + 1,\n            dataIndex: plotIndex + 1,\n            datasetIndex: plotItem.datasetIndex,\n            startValue: plotItem.startValue,\n            datasetName: plotItem.name,\n            color: config.color,\n            alpha: config.alpha,\n            anchorBgColor: anchorProps.bgColor,\n            anchorBgAlpha: anchorProps.anchorBgAlpha,\n            anchorAlpha: anchorProps.anchorAlpha,\n            anchorBorderColor: anchorProps.borderColor,\n            anchorBorderThickness: anchorProps.borderThickness,\n            anchorRadius: anchorProps.radius,\n            anchorSides: anchorProps.sides,\n            anchorStartAngle: anchorProps.startAngle,\n            anchorHoverColor: hoverEffects.anchorColor,\n            anchorHoverAlpha: hoverEffects.anchorAlpha,\n            anchorHoverSides: hoverEffects.anchorSides,\n            dashed: config.dashed,\n            valuePosition: config.valuePosition,\n            id: config.id\n          };\n          config.dragStart = true;\n        } else {\n          config.dragStart = false;\n        }\n        break;\n\n      case 'dragmove':\n        plotItem = dataStore[index];\n        config = plotItem.config;\n        if (config.dragStart) {\n          chartY = coordinate.chartY;\n          config.allowDrag && (style.cursor = dragMouseAttr);\n          element = plotItem.graphics.element;\n          config._pointerDy++;\n          image = plotItem.graphics.image;\n          xPos = plotItem._xPos;\n          anchorElement = element;\n          chartY += config._dragBuffer;\n          allowNegDrag = config.allowNegDrag;\n          lowerDragBoundary = allowNegDrag ? chartConfig.canvasBottom : yAxis.yBasePos;\n          anchorProps = config.anchorProps;\n          anchorStartAngle = anchorProps.startAngle || 90;\n          hoverEffects = config.hoverEffects;\n          isHoverEnabled = config.hoverEffects && config.hoverEffects.enabled;\n          anchorImageUrl = anchorProps.imageUrl;\n          if (chartY < canvasTop) {\n            chartY = canvasTop;\n          } else if (chartY > lowerDragBoundary) {\n            chartY = lowerDragBoundary;\n          }\n          plotItem._yPos = yPos = chartY;\n          config._y = value = config.setValue = yAxis.getValue(yPos);\n          config._Py = yAxis.getPixel(config._y);\n          formattedVal = dataset.getFromEnv('number-formatter').dataLabels(value);\n          config.toolTipValue = formattedVal;\n          config.displayValue = formattedVal;\n\n          dataset.parseLabelAttributes(plotItem, plotIndex);\n          dataset.drawLabel(plotIndex, plotIndex + 1);\n          plotItem.graphics.element = element;\n          dataset.getFromEnv('toolTipController').hide(datasetConf.currentToolTip);\n\n          if (isVML && anchorImageUrl) {\n            image = anchorElement;\n          } else {\n            if (isHoverEnabled && (rolloverdata = anchorElement.data(SETROLLOVERATTR))) {\n              rolloverdata.path = polyPathToPath([hoverEffects.anchorSides || 2, xPos, yPos, hoverEffects.anchorRadius, hoverEffects.startAngle, hoverEffects.dip]);\n            }\n            if (isHoverEnabled && (rolloutdata = anchorElement.data(SETROLLOUTATTR))) {\n              rolloutdata.path = polyPathToPath([anchorProps.symbol[1] || 2, xPos, yPos, anchorProps.radius, anchorProps.startAngle, config.dip || 0]);\n            }\n\n            anchorElement && anchorElement.attr(rolloutdata || {\n              path: polyPathToPath([anchorProps.symbol[1] || 2, xPos, yPos,\n                anchorProps.radius, anchorStartAngle, 0])\n            });\n          }\n\n          if (image) {\n            DragAreaDataset.updateImage(plotItem);\n          }\n\n          if (isDragLine) {\n            dataset.drawCommonElements();\n          }\n\n          if (mainLineElement) {\n            datasetConf = dataset.config;\n            startIndex = config.pathStartIndex;\n            endIndex = config.pathEndIndex;\n            pathArr = config.lastPath;\n            pathArr = dataset.getLinePath(dataStore, {\n              begin: startIndex,\n              end: endIndex\n            });\n            mainLineElement.attr({\n              path: pathArr.getPathArr()\n            });\n          }\n\n          if (config._pointerDy === 1) {\n            eventArgs = {\n              index: index,\n              dataIndex: index,\n              datasetIndex: datasetIndex,\n              startValue: plotItem.startValue,\n              datasetName: plotItem.name,\n              color: config.color,\n              alpha: config.alpha,\n              anchorBgColor: anchorProps.bgColor,\n              anchorBgAlpha: anchorProps.anchorBgAlpha,\n              anchorAlpha: anchorProps.anchorAlpha,\n              anchorBorderColor: anchorProps.borderColor,\n              anchorBorderThickness: anchorProps.borderThickness,\n              anchorRadius: anchorProps.radius,\n              anchorSides: anchorProps.sides,\n              anchorStartAngle: anchorProps.startAngle,\n              anchorHoverColor: hoverEffects.anchorColor,\n              anchorHoverAlpha: hoverEffects.anchorAlpha,\n              anchorHoverSides: hoverEffects.anchorSides,\n              dashed: config.dashed,\n              valuePosition: config.valuePosition,\n              id: config.id\n            };\n            chart.fireChartInstanceEvent('dataplotDragStart', eventArgs);\n          }\n        }\n        break;\n\n      case 'dragend':\n        plotItem = dataStore[index];\n        config = plotItem.config;\n        if (config.dragStart) {\n          dataset.setMaxMin(plotItem);\n          if (datasetConf.snapToDiv || datasetConf.snapToDivOnly) {\n            element = plotItem.graphics.element;\n            image = plotItem.graphics.image;\n            xPos = plotItem._xPos;\n            anchorElement = element;\n            anchorProps = config.anchorProps;\n            anchorStartAngle = anchorProps.startAngle || 90;\n            hoverEffects = config.hoverEffects;\n            isHoverEnabled = config.hoverEffects && config.hoverEffects.enabled;\n            anchorImageUrl = anchorProps.imageUrl;\n            config.setValue = snapPoint({ snapPixel, datasetConf }, ticks, plotItem);\n            chartY = yAxis.getPixel(config.setValue);\n            plotItem._yPos = yPos = chartY;\n            config._y = value = config.setValue;\n            config._Py = yAxis.getPixel(config._y);\n            formattedVal = dataset.getFromEnv('number-formatter').dataLabels(value);\n            config.toolTipValue = formattedVal;\n            config.displayValue = formattedVal;\n            dataset.parseLabelAttributes(plotItem, plotIndex);\n            dataset.drawLabel(plotIndex, plotIndex + 1);\n            plotItem.graphics.element = element;\n            // toolTipController.hide(datasetConf.currentToolTip);\n            if (isVML && anchorImageUrl) {\n              image = anchorElement;\n            } else {\n              if (isHoverEnabled && (rolloverdata = anchorElement.data(SETROLLOVERATTR))) {\n                rolloverdata.path = polyPathToPath([hoverEffects.anchorSides || 2, xPos, yPos, hoverEffects.anchorRadius, hoverEffects.startAngle, hoverEffects.dip]);\n              }\n              if (isHoverEnabled && (rolloutdata = anchorElement.data(SETROLLOUTATTR))) {\n                rolloutdata.path = polyPathToPath([anchorProps.symbol[1] || 2, xPos, yPos, anchorProps.radius, anchorProps.startAngle, config.dip || 0]);\n              }\n\n              anchorElement && anchorElement.attr(rolloutdata || {\n                path: polyPathToPath([anchorProps.symbol[1] || 2, xPos, yPos,\n                  anchorProps.radius, anchorStartAngle, 0])\n              });\n            }\n            if (image) {\n              DragAreaDataset.updateImage(plotItem);\n            }\n\n            if (isDragLine) {\n              dataset.drawCommonElements();\n            }\n            if (mainLineElement) {\n              datasetConf = dataset.config;\n              startIndex = config.pathStartIndex;\n              endIndex = config.pathEndIndex;\n              pathArr = config.lastPath;\n              pathArr = dataset.getLinePath(dataStore, {\n                begin: startIndex,\n                end: endIndex\n              });\n              mainLineElement.attr({\n                path: pathArr.getPathArr()\n              });\n            }\n          }\n          eventArgs = {\n            index: index,\n            dataIndex: index,\n            datasetIndex: datasetIndex,\n            startValue: plotItem.startValue,\n            endValue: config.setValue,\n            datasetName: plotItem.name,\n            color: config.color,\n            alpha: config.alpha,\n            anchorBgColor: anchorProps.bgColor,\n            anchorBgAlpha: anchorProps.anchorBgAlpha,\n            anchorAlpha: anchorProps.anchorAlpha,\n            anchorBorderColor: anchorProps.borderColor,\n            anchorBorderThickness: anchorProps.borderThickness,\n            anchorRadius: anchorProps.radius,\n            anchorSides: anchorProps.sides,\n            anchorStartAngle: anchorProps.startAngle,\n            anchorHoverColor: hoverEffects.anchorColor,\n            anchorHoverAlpha: hoverEffects.anchorAlpha,\n            anchorHoverSides: hoverEffects.anchorSides,\n            dashed: config.dashed,\n            valuePosition: config.valuePosition,\n            id: config.id\n          };\n          eventArgsArr = [\n            chart.getFromEnv('chartInstance').id,\n            eventArgs.dataIndex,\n            eventArgs.datasetIndex,\n            eventArgs.datasetName,\n            eventArgs.startValue,\n            eventArgs.endValue\n          ];\n\n          element && updateDataValue.call(element, oriEvent, chart); // Update dataValue\n          if (config._pointerDy) {\n            hoverEnabled && dataset._hoverPlotAnchor(plotItem, ROLLOUT);\n            chart.fireChartInstanceEvent('dataplotDragEnd', eventArgs);\n            // Fire the ChartUpdated event\n            chart.fireChartInstanceEvent('chartupdated', eventArgs, eventArgsArr);\n          }\n\n          setTooltext = getValidValue(parseUnsafeString(pluck(plotItem.tooltext,\n            JSONData.plottooltext, dataset.getFromEnv('chart-attrib').plottooltext), false));\n\n          if (setTooltext !== UNDEF) {\n            parserConfig.formattedValue = config.toolTipValue;\n            parserConfig.label = config.label;\n            toolText = parseTooltext(setTooltext, macroIndices,\n              parserConfig, { value: config.toolTipValue }, UNDEF, JSONData);\n            config.setTooltext = toolText;\n            setTooltext = toolText;\n            config.toolText = toolText;\n          }\n          toolText = config.finalTooltext = config.toolText !== false ? (\n            (setTooltext ||\n              config.toolText.substring(0, config.toolText.indexOf(config.formatedVal)) +\n              config.toolTipValue)) : '';\n\n          if (!(chartY >= yPos - tolerance && chartY <= yPos + tolerance &&\n            chartX <= xPos + tolerance && chartX >= xPos - tolerance)) {\n            style.cursor = pointerMouseAttr;\n          }\n          config._dragBuffer = 0;\n          config._pointerDy = 0;\n          config.dragStart = false;\n        }\n        break;\n      default: break;\n    }\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType name of the event\n   * @param {number} plotIndex index of the plot where this event has been occured\n   * @param {Event} e reference of the original mouse event\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      dataSetConf = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      drawTrendRegion = chartConfig.drawTrendRegion,\n      // chartComp = chart.components,\n      paper = dataset.getFromEnv('paper'),\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      canvas = paper.canvas,\n      style = canvas.style,\n      datasetComp = dataset.components,\n      plotItem = datasetComp.data[plotIndex],\n      currentToolTip = dataSetConf.currentToolTip,\n      originalEvent = e.originalEvent,\n      pointerMouseAttr = DEFAULT,\n      tolerance,\n      coordinate,\n      chartY,\n      chartX,\n      yPos,\n      xPos,\n      element,\n      hoverEnabled,\n      toolText,\n      eventArgs,\n      config,\n      changedTouch,\n      anchorProps;\n\n    if (eventType === 'touchend') {\n      changedTouch = originalEvent.changedTouches[0];\n      originalEvent.pageX = changedTouch && changedTouch.pageX;\n      originalEvent.pageY = changedTouch && changedTouch.pageY;\n    }\n    coordinate = getMouseCoordinate(chart.getFromEnv('chart-container'), originalEvent, chart);\n    chartY = coordinate.chartY;\n    chartX = coordinate.chartX;\n\n    if (plotItem) {\n      element = plotItem.graphics.element;\n      config = plotItem.config;\n      anchorProps = config.anchorProps;\n      toolText = config.finalTooltext;\n      hoverEnabled = config.hoverEffects.enabled;\n      eventArgs = config.eventArgs;\n      yPos = plotItem._yPos;\n      xPos = plotItem._xPos;\n      config.dragTolerance = config.dragTolerance < anchorProps.markerRadius\n        ? anchorProps.markerRadius + 0.5 : config.dragTolerance;\n      tolerance = mathMax(config.dragTolerance, config.hoverEffects.anchorRadius || 0) + 1;\n\n      switch (eventType) {\n        case 'fc-mouseover':\n          if (config.allowDrag) {\n            style.cursor = dragMouseAttr;\n          }\n          if (!config.dragStart && toolText && !config.dragStart && !drawTrendRegion) {\n            if (currentToolTip) {\n              toolTipController.draw(originalEvent, toolText, currentToolTip);\n            } else {\n              currentToolTip = dataSetConf.currentToolTip = toolTipController.draw(originalEvent, toolText);\n            }\n          }\n          if (!config.dragStart) {\n            hoverEnabled && dataset._hoverPlotAnchor(plotItem, ROLLOVER);\n            element && chart.plotEventHandler(element, e, ROLLOVER, eventArgs);\n          }\n          break;\n\n        case 'fc-mouseout':\n          style.cursor = pointerMouseAttr;\n\n          hoverEnabled && dataset._hoverPlotAnchor(plotItem, ROLLOUT);\n          element && chart.plotEventHandler(element, e, ROLLOUT, eventArgs);\n          toolTipController.hide(dataSetConf.currentToolTip);\n          break;\n\n        case 'fc-mousemove':\n          if (!config.dragStart && toolText &&\n            chartY >= yPos - tolerance && chartY <= yPos + tolerance &&\n            chartX <= xPos + tolerance && chartX >= xPos - tolerance) {\n            config.allowDrag && (style.cursor = dragMouseAttr);\n            if (currentToolTip) {\n              toolTipController.draw(originalEvent, toolText, currentToolTip);\n            } else {\n              currentToolTip = dataSetConf.currentToolTip = toolTipController.draw(originalEvent, toolText);\n            }\n          } else {\n            toolTipController.hide(dataSetConf.currentToolTip);\n          }\n\n          break;\n\n        case 'fc-click':\n          element && chart.plotEventHandler(element, e, DATAPLOTCLICK, eventArgs);\n          break;\n        default: break;\n      }\n    }\n  }\n\n  /**\n   * Function to restore the values of the dataset to its original\n   */\n  restore () {\n    _restore.call(this);\n  }\n\n  /**\n   * Fucntion to get the updated values of data when they are dragged.\n   * @return {Object} The corresponding data Array of the dataset containing the values of all the sets.\n   */\n  getJSONData () {\n    return _getJSONData.call(this);\n  }\n}\n_updateImage = DragAreaDataset.prototype.updateImage;\n__firePlotEvent = DragAreaDataset.prototype._firePlotEvent;\n_configure = DragAreaDataset.prototype.configureAttributes;\n_drag = DragAreaDataset.prototype.drag;\n\nexport { __firePlotEvent, _configure as configurer, _updateImage, _drag };\nexport default DragAreaDataset;\n","import areaAnimationRules from '@fusioncharts/charts/src/dataset/area/index.animation';\n\nexport default {\n  '*.dataset.dragArea': areaAnimationRules['*.dataset.area']\n};\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  '*.dataset.dragLine': lineAnimation['*.dataset.line']\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport DragColumn from '../dragcolumn2d';\nimport DragAreaDataset from '../../dataset/dragarea';\nimport { HUNDREDSTRING } from '@fusioncharts/core/src/lib';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\n/**\n * API class of dragcolumn inheriting from area class\n */\nclass DragArea extends DragColumn {\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'DragArea';\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'DragArea';\n  }\n\n  // eslint-disable-next-line\n  getDSGroupdef () {}\n  /**\n   * Function to parse chart specific configurations. It first calls the __setDefaultConfig of areabase class.\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    var chart = this,\n      config = chart.config;\n    _setDefaultConfig.call(chart);\n    config.isDrag = true;\n    config.anchoralpha = HUNDREDSTRING;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n  }\n  /**\n   * Function to return the dataset liked with the current API\n   * @return {Object} The DragAreaDataset class\n   */\n  getDSdef () {\n    return DragAreaDataset;\n  }\n}\nexport default DragArea;\n","import Kagi from '@fusioncharts/powercharts/src/chart/kagi';\nexport default Kagi;\n","import WaterFall2D from '../waterfall2d';\nimport KagiDataset from '../../dataset/kagi';\nimport {\n  pluckNumber,\n  pluck,\n  toPrecision\n} from '@fusioncharts/core/src/lib';\nlet UNDEF,\n  HUNDREDSTRING = '100',\n  SEVENTYSTRING = '70',\n  KAGI = 'kagi';\n\nclass Kagi extends WaterFall2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Kagi';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Kagi';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.singleseries = true;\n    config.hasLegend = false;\n    config.defaultDatasetType = KAGI;\n    config.setAdaptiveMin = true;\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEF;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEF;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEF;\n    config.anchorbordercolor = UNDEF;\n    config.anchorradius = 3;\n    config.showvalues = 1;\n    config.plotfillalpha = SEVENTYSTRING;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEF;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n    config.zeroplanethickness = 1;\n    config.enablemousetracking = true;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n  }\n\n  _getDataset () {\n    var dataSetArr = [];\n\n    this.iterateComponents((child) => {\n      if ((child.getType && child.getType() === 'dataset')) {\n        dataSetArr.push(child);\n      }\n    });\n    return dataSetArr;\n  }\n\n  _postSpaceManagement () {\n    var iapi = this,\n      config = iapi.config,\n      xAxis = iapi.getChildren('xAxis')[0],\n      yAxis = iapi.getChildren('yAxis')[0],\n      canvas = iapi.getChildren('canvas')[0],\n      canvasConfig = canvas.config,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      canvasPadding = pluckNumber(canvasConfig.canvasPadding, 15),\n      canvasPaddingTop = canvasConfig.canvasPaddingTop,\n      canvasPaddingBottom = canvasConfig.canvasPaddingBottom, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasPaddingLeft = canvasConfig.canvasPaddingLeft, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasPaddingRight = canvasConfig.canvasPaddingRight, // eslint-disable-line good-practices/no-single-usage-variable\n      chartAttrs = iapi.getFromEnv('dataSource').chart, // eslint-disable-line good-practices/no-single-usage-variable\n      series = iapi._getDataset()[0].config,\n      shiftCount = series && series.shiftCount,\n      min = pluckNumber(xAxis.getAxisConfig('axisMinValue'), 0), // eslint-disable-line good-practices/no-single-usage-variable\n      max = pluckNumber(xAxis.getAxisConfig('axisMaxValue'), shiftCount - 1),\n      // plot area will not be less then 10 px\n      // leftPixelPad = mathMin(pluckNumber(chartAttrs.canvaspadding, 0), (canvasWidth / 2) - 10),\n      // rightPixelPad = leftPixelPad,\n      // The maximum horizontal shift in percentage of the\n      // available canvas width\n      maxHShiftPercent = pluckNumber(chartAttrs.maxhshiftpercent, 10),\n      effectiveCanvasWidth = iapi.config.canvasWidth - canvasPadding * 2,\n      shift = config.shift || 0,\n      xShiftLength;\n\n    yAxis && yAxis.setAxisDimention({\n      x: yAxis.config.isOpposit\n        ? config.canvasRight + canvasBorderWidth : config.canvasLeft - canvasBorderWidth,\n      y: config.canvasTop + canvasPaddingTop,\n      opposite: yAxis.config.isOpposit\n        ? config.canvasLeft - canvasBorderWidth : config.canvasRight + canvasBorderWidth,\n      axisLength: config.canvasHeight - canvasPaddingTop - canvasPaddingBottom\n    });\n\n    iapi._setPosition();\n    if (series) {\n      // maxHShiftPercent can not be < 0\n      maxHShiftPercent = maxHShiftPercent <= 0\n        ? 10 : maxHShiftPercent;\n      xShiftLength = series.xShiftLength =\n                  Math.min(effectiveCanvasWidth / shiftCount,\n                    maxHShiftPercent * effectiveCanvasWidth / 100);\n      // leftPixelPad = canvasPadding + xShiftLength / 2;\n      // canvasWidth - ((xShiftLength *\n      // // handling single value rendering issue in Kagi\n      // mathMax((shiftCount - 1), 1)) + leftPixelPad);\n      // Fix for Kagi chart single value rendering issue\n      // If there is a single value, we use xAxis max value\n      // as 1 not as 0\n      max = Math.max(max, 1);\n    }\n\n    // function for adjusting value padding depending upon data and axis labels.\n    canvas.setCanvasPadding();\n    xAxis && xAxis.setAxisConfig({\n      'canvasPaddingLeft': Math.max(canvasPaddingLeft, canvasPadding) + (xShiftLength / 2),\n      'canvasPaddingRight': Math.max(canvasPaddingRight, canvasPadding) + (xShiftLength / 2)\n    });\n    xAxis && xAxis.setAxisDimention({\n      x: iapi.config.canvasLeft + canvasPadding + (xShiftLength / 2),\n      axisLength: xShiftLength * (max - min),\n      y: xAxis.config.isOpposit\n        ? config.canvasTop - canvasBorderWidth\n        : config.canvasBottom + shift + canvasBorderWidth,\n      opposite: xAxis.config.isOpposit\n        ? config.canvasBottom + shift + canvasBorderWidth\n        : config.canvasTop - canvasBorderWidth\n    });\n\n    iapi.allocateDimensionOfChartMenuBar();\n  }\n\n  _setPosition () {\n    var i,\n      point,\n      yValue,\n      isRally,\n      lastHigh,\n      lastLow,\n      isRallyInitialised,\n      lastPoint,\n      iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      dataSet = iapi._getDataset()[0],\n      categories = dataObj.data || (dataSet && dataSet[0] && dataSet[0].data),\n      setDataArr = dataSet.components.data,\n      dataSetLen = setDataArr && setDataArr.length,\n      yAxis = iapi.getChildren('yAxis')[0],\n      xValue = 0,\n      plotX = xValue, // eslint-disable-line good-practices/no-single-usage-variable\n      catArr = [];\n    // create plot elements\n    for (i = 0; i < dataSetLen; i++) {\n      point = setDataArr[i].config;\n      yValue = point.setValue;\n\n      dataObj = setDataArr[i];\n\n      // Creating the data object if not created\n      if (!dataObj) {\n        dataObj = setDataArr[i] = {\n          graphics: {}\n        };\n      }\n      if (!point.isDefined) {\n        yValue = point.plotValue;\n      }\n\n      // Getting appropiate value for the current plot point.\n      yValue = pluck(point.plotValue, yValue);\n\n      // Set the y position.\n      point.plotY = toPrecision(yAxis.getPixel(point.setValue), 2);\n\n      // Store value textbox y position.\n      point.graphY = yValue && toPrecision(yAxis.getPixel(yValue), 2);\n\n      // Abscissa of the point on the kagi line.\n      point.plotX = plotX;\n      // If there is a horizontal shift, then abscissa of the kagi\n      // line and as such all points on it shifts to the right by a\n      // slab more.\n      if (point.isShift) {\n        xValue += 1;\n        plotX = xValue;\n        categories && catArr.push(categories[i]);\n      } else if (i === (dataSetLen - 1)) {\n        categories && catArr.push(categories[i]);\n      }\n\n      if (i) {\n        lastPoint = setDataArr[i - 1].config;\n\n        // Getting the previously bundled up properties in local\n        // variables.\n        isRally = point && point.objParams && point.objParams.isRally;\n        lastHigh = point && point.objParams && point.objParams.lastHigh;\n        lastLow = point && point.objParams && point.objParams.lastLow;\n        isRallyInitialised = point && point.objParams &&\n                      point.objParams.isRallyInitialised;\n\n        // To find if there is a change in trend towards the current\n        // plot.\n        if (lastPoint && isRallyInitialised &&\n                      lastPoint.isRally !== point.isRally) {\n          // Setting in this.data for the plot, to be used for.\n          // Setting the color/thickness the graph segments.\n          point.isChanged = true;\n\n          // To get the pixel position of the transtion point and\n          // storing in data point for the plot.\n          point.ty = toPrecision(yAxis.getPixel((isRally\n            ? lastHigh : lastLow)), 2);\n        } else {\n          // Setting in this.data for the plot.\n          point.isChanged = false;\n        }\n      }\n    }\n    // end of previous translation\n  }\n\n  getDSdef () {\n    return KagiDataset;\n  }\n}\nexport default Kagi;\n","import SSCartesian from '@fusioncharts/charts/src/chart/_internal/sscartesian';\nimport WaterFall2DDataset from '../../dataset/waterfall2d';\n\nconst WATERFALL_2D = 'Waterfall2D';\nclass WaterFall2D extends SSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'WaterFall2D';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'WaterFall2D';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.singleseries = true;\n    config.hasLegend = false;\n    config.defaultDatasetType = WATERFALL_2D;\n    config.enablemousetracking = true;\n  }\n\n  getDSdef () {\n    return WaterFall2DDataset;\n  }\n}\nexport default WaterFall2D;\n","import {\n  pluckNumber,\n  pluck,\n  parseTooltext,\n  parseUnsafeString,\n  getDashStyle,\n  getDefinedColor,\n  getValidValue,\n  toRaphaelColor,\n  getCrispValue,\n  getFirstValue,\n  hashify,\n  convertColor, getLightColor, getColumnColor\n} from '@fusioncharts/core/src/lib';\n\nimport ColumnDataset, { PATTERN_TYPES } from '@fusioncharts/charts/src/dataset/column';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport waterFall2DAnimation from './index.animation';\n\nlet HUNDREDSTRING = '100',\n  PLOTBORDERCOLOR = 'plotBorderColor',\n  PLOTGRADIENTCOLOR = 'plotGradientColor',\n  COMMA = ',',\n  BLANK = '',\n  SHOWSHADOW = 'showShadow',\n  NONE = 'none',\n  MAX_MITER_LINEJOIN = 2,\n  M = 'M',\n  H = 'H',\n  UNDEF;\naddDep({\n  name: 'waterFall2DAnimation',\n  type: 'animationRule',\n  extension: waterFall2DAnimation\n});\nclass WaterFall2DDataset extends ColumnDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'waterFall2D';\n  }\n  configure (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    var catData,\n      catObj,\n      dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      // logic = chart.logic,\n      conf = dataSet.config,\n      // fcJSON = dataSet.fcJSON,\n      JSONData = dataSet.config.JSONData,\n      setDataArr = JSONData.data,\n      setDataLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      catLen = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      len = Math.min(catLen, setDataLen),\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      colorM = dataSet.getFromEnv('color-manager'),\n      showplotborder,\n      plotColor = colorM.getPlotColor(dataSet.index || dataSet.positionIndex),\n      plotBorderDash = pluckNumber(JSONData.dashed, chartAttr.plotborderdashed, 0),\n      chartConfig = chart.config,\n      usePlotGradientColor = chartConfig.useplotgradientcolor, // eslint-disable-line good-practices/no-single-usage-variable\n      showTooltip = pluckNumber(chartAttr.showtooltip, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      tooltipSepChar = parseUnsafeString(pluck(chartAttr.tooltipsepchar, ', ')), // eslint-disable-line good-practices/no-single-usage-variable\n      formatedVal,\n      parserConfig,\n      setTooltext,\n      // seriesname,\n      macroIndices,\n      // tempPlotfillAngle,\n      toolText,\n      plotDashLen,\n      plotDashGap,\n      plotBorderThickness,\n      isRoundEdges,\n      showHoverEffect,\n      plotfillAngle,\n      plotFillAlpha,\n      plotFillRatio,\n      plotgradientcolor,\n      plotBorderAlpha,\n      plotBorderColor,\n      plotBorderDashStyle,\n      initailPlotBorderDashStyle,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      // label,\n      colorArr,\n      hoverColor,\n      hoverAlpha,\n      hoverGradientColor,\n      hoverRatio,\n      hoverAngle,\n      hoverBorderColor,\n      hoverBorderAlpha,\n      hoverBorderThickness,\n      hoverBorderDashed,\n      hoverBorderDashGap,\n      hoverBorderDashLen,\n      hoverDashStyle,\n      hoverColorArr,\n      dataStore = dataSet.components.data,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      toolTipValue,\n      setDisplayValue,\n      // isBar = chart.isBar,\n      // is3D = chart.config.is3D,\n      // isStacked = chart.isStacked,\n      isBar = false,\n      is3D = false,\n      isStacked = false,\n      stack100Percent,\n      enableAnimation,\n      parentYAxis,\n      setDataDashed,\n      setDataPlotDashLen,\n      setDataPlotDashGap,\n      i,\n      reflowData = /* logic.chartInstance.jsVars._reflowData */ {},\n      reflowDataObj = reflowData.dataObj || (reflowData.dataObj = {}),\n      reflowChartObj = reflowDataObj.chart || (reflowDataObj.chart = {}),\n\n      // fcJSON = dataSet.fcJSON,\n      // isSingleSeries = chart.config.singleseries,\n      lineThickness = pluck(chartAttr.connectorthickness, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      showSum,\n      dataLabel,\n      showLabel,\n      itemValue,\n      maxValue = -Infinity,\n      minValue = Infinity,\n      seriesSum = 0,\n      total = 0,\n      lastComTotal = 0,\n      issum,\n      zLine,\n      setColor,\n      cumulative,\n      sumObj,\n      countPoint,\n      plotfillangle;\n\n    conf.minAbsNonZeroValue = Infinity;\n    conf.minAbsNonZeroData = {};\n    dataSet.setState('visible',\n      pluckNumber(JSONData.visible, !Number(JSONData.initiallyhidden), 1) === 1);\n    // dataplot border width. Managing for 3D too\n    showplotborder = conf.showplotborder = pluckNumber(chartAttr.showplotborder, is3D ? 0 : 1);\n    // waterfall2D chart doesn't show the plotborder by default until we set showplotborder true\n    conf.plotBorderThickness = plotBorderThickness = showplotborder ? (is3D ? 1 : pluckNumber(\n      chartAttr.plotborderthickness, 1)) : 0;\n    // whether to use round edges or not in the waterfall2D\n    conf.isRoundEdges = isRoundEdges = pluckNumber(chartAttr.useroundedges, 0);\n    // dataplot border alpha\n    conf.plotBorderAlpha = plotBorderAlpha = showplotborder ? pluck(chartAttr.plotborderalpha,\n      plotFillAlpha, HUNDREDSTRING) : 0;\n    // dataplot border color\n    conf.plotbordercolor = plotBorderColor = pluck(chartAttr.plotbordercolor,\n      is3D ? '#ffffff' : colorM.getColor(PLOTBORDERCOLOR).split(COMMA)[0]);\n    // GradientColor of the plot fill\n    conf.plotgradientcolor = plotgradientcolor = usePlotGradientColor ? getDefinedColor(\n      chartAttr.plotgradientcolor, colorM.getColor(PLOTGRADIENTCOLOR)) : BLANK;\n    conf.plotDashLen = plotDashLen = pluckNumber(chartAttr.plotborderdashlen, 6);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.plotDashGap = plotDashGap = pluckNumber(chartAttr.plotborderdashgap, 3);\n    // use3DLighting to show gredient color effect in waterfall2D charts\n    conf.use3DLighting = pluckNumber(chartAttr.use3dlighting, 1);\n    conf.showSum = showSum = pluckNumber(chartAttr.showsumatend, 1);\n    conf.plotColor = plotColor = pluck(JSONData.color, plotColor);\n    // defaultAngle depend upon item value\n    conf.plotfillAngle = plotfillAngle = pluckNumber(360 - chartAttr.plotfillangle, 90);\n    conf.showShadow = (isRoundEdges || is3D) ? pluckNumber(chartAttr.showshadow, 1)\n      : pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.usePattern = pluckNumber(chartConfig.usePattern, 0);\n    conf.patternType = PATTERN_TYPES.includes(JSONData.patterntype)\n      ? JSONData.patterntype\n      : chartConfig.patternType;\n    conf.patternDensity = pluckNumber(JSONData.patterndensity, chartConfig.patternDensity);\n    conf.patternAlpha = pluckNumber(JSONData.patternalpha, chartConfig.patternAlpha);\n    conf.patternBgColor = pluck(JSONData.patternbgcolor, conf.patternBgColor);\n    conf.showHoverEffect = showHoverEffect = pluckNumber(chartAttr.plothovereffect,\n      chartAttr.showhovereffect, UNDEF);\n\n    conf.usePattern && (conf.showHoverEffect = showHoverEffect = 0);\n\n    // todo start - **Needs to remove them if not required in waterfall2D*****************\n    conf.plotFillAlpha = plotFillAlpha = pluck(JSONData.alpha, chartAttr.plotfillalpha, HUNDREDSTRING);\n    conf.plotRadius = pluckNumber(chartAttr.useRoundEdges, conf.isRoundEdges ? 1 : 0);\n    conf.plotFillRatio = plotFillRatio = pluck(JSONData.ratio, chartAttr.plotfillratio);\n    conf.dashed = plotBorderDash;\n    conf.plotBorderDashStyle = initailPlotBorderDashStyle = plotBorderDash // eslint-disable-line good-practices/no-single-usage-variable\n      ? getDashStyle(plotDashLen, plotDashGap) : 'none';\n    conf.showValues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 1);\n    conf.valuePadding = pluckNumber(chartAttr.valuepadding, 2);\n    conf.enableAnimation = enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n    reflowChartObj.transposeAnimation = conf.transposeAnimation =\n                pluckNumber(chartAttr.transposeanimation, reflowChartObj.transposeAnimation, enableAnimation);\n    conf.transposeAnimDuration = pluckNumber(chartAttr.transposeanimduration, 0.2) * 1000;\n\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.stack100Percent = stack100Percent =\n                pluckNumber(chart.stack100percent, chartAttr.stack100percent, 0);\n    conf.definedGroupPadding = Math.max(pluckNumber(chartAttr.plotspacepercent), 0);\n    conf.plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0);\n    conf.maxColWidth = pluckNumber(isBar ? chartAttr.maxbarheight : chartAttr.maxcolwidth, 50);\n    conf.showPercentValues = pluckNumber(chartAttr.showpercentvalues, (isStacked && stack100Percent)\n      ? 1 : 0);\n    conf.showPercentInToolTip = pluckNumber(chartAttr.showpercentintooltip,\n      (isStacked && stack100Percent) ? 1 : 0);\n    conf.plotPaddingPercent = pluckNumber(chartAttr.plotpaddingpercent);\n    conf.rotateValues = pluckNumber(chartAttr.rotatevalues) ? 270 : 0;\n    conf.placeValuesInside = pluckNumber(chartAttr.placevaluesinside, 0);\n    /* conf.zeroPlaneColor = chart.options.chart.zeroPlaneColor;\n    conf.zeroPlaneBorderColor = chart.options.chart.zeroPlaneBorderColor;\n    conf.zeroPlaneShowBorder = chart.options.chart.zeroPlaneShowBorder; */\n    conf.parentYAxis = parentYAxis = pluck(JSONData.parentyaxis && JSONData.parentyaxis.toLowerCase(), // eslint-disable-line good-practices/no-single-usage-variable\n      'p') === 's' ? 1 : 0;\n    // todo end ***************\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n\n    dataSet.setState('dirty', true);\n\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n    // storing the configurations for z-line.\n    conf.zLine = zLine = {\n      step: true,\n      data: [],\n      dashStyle: chartAttr.connectordashed === '1' ? getDashStyle(\n        pluckNumber(chartAttr.connectordashlen, 2), pluckNumber(\n          chartAttr.connectordashgap, 2)) : NONE,\n      useForwardSteps: true,\n      color: convertColor(pluck(chartAttr.connectorcolor, '000000'), pluck(chartAttr.connectoralpha,\n        100)),\n      lineWidth: lineThickness\n    };\n    // calculate sum\n    for (i = 0; i < len; i += 1) {\n      // individual set level data\n      setData = setDataArr[i];\n      itemValue = numberFormatter.getCleanValue(setData.value);\n      issum = pluckNumber(setData.issum, 0);\n      // If its vline then don't calculate\n      if (setData.vline || issum) {\n        delete setData._value;\n        continue;\n      }\n      seriesSum += itemValue;\n      setData._value = itemValue;\n    }\n    // Is we have to show sum at end then create a dummy set for total\n    if (showSum) {\n      // converts the truty value of showSum to Boolean TRUE flag.\n      showSum = true;\n      len += 1;\n      sumObj = {\n        label: getFirstValue(chartAttr.sumlabel, 'Total'),\n        // todo remove _value if not required.\n        _value: seriesSum,\n        value: seriesSum,\n        issum: 1,\n        cumulative: 1\n      };\n    }\n    // Iterate through all level data\n    // Managing the data value labels and other cosmetics inside this loop\n    for (i = 0, countPoint = 0; i < len; i += 1) {\n      // individual data obj\n      setData = setDataArr[i];\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n      if (!setData && showSum) {\n        setData = setDataArr[i] = sumObj;\n      }\n      plotColor = pluck(setData.color, colorM.getPlotColor(i));\n      // Managing vLines in between <set> elements\n      // If its vline\n      // we call the grid manager addVline function, that creates vline\n      // and we stop execution here and continue the loop to next data\n      if (dataObj.vline) {\n        // todo need to validate with axis module and add vline.\n        continue;\n      }\n      // get the valid value\n      // parsePointValue check the its a value value of not and return\n      // the valid value\n      itemValue = setData._value;\n      delete setData._value;\n      config.issum = (issum = pluckNumber(setData.issum, 0));\n      cumulative = (config.isCumulative = pluckNumber(setData.cumulative, 1));\n      if (issum) {\n        itemValue = cumulative ? total : (total === lastComTotal ? total : (total - lastComTotal));\n        config.lastComTotal = lastComTotal;\n        lastComTotal = total;\n        zLine.data.push({\n          y: null,\n          x: countPoint - 0.5\n        });\n      } else {\n        total += itemValue;\n      }\n\n      config.valuePadding = pluckNumber(setData.valuepadding, conf.valuePadding);\n\n      maxValue = Math.max(maxValue, total);\n      minValue = Math.min(minValue, total);\n      if (itemValue !== 0 && conf.minAbsNonZeroValue > Math.abs(itemValue)) {\n        conf.minAbsNonZeroValue = Math.abs(itemValue);\n        conf.minAbsNonZeroData = config;\n      }\n      // store the cumulative total\n      config.total = total;\n      // we check showLabel in individual data\n      // if its set to 0 than we do not show the particular label\n      showLabel = config.showLabel = pluckNumber(setData.showlabel, chartAttr.showlabels, 1);\n      // Label of the data\n      // getFirstValue returns the first defined value in arguments\n      // we check if showLabel is not set to 0 in data\n      // then we take the label given in data, it can be given using label as well as name too\n      // we give priority to label if label is not there, we check the name attribute\n      dataLabel = config.dataLabel = parseUnsafeString(!showLabel ? BLANK : getFirstValue(setData.label,\n        setData.name));\n\n      // <set> cosmetics\n      // Color of the particular data\n      if (itemValue > 0) {\n        setColor = pluck(setData.color, chartAttr.positivecolor, plotColor);\n        if (showHoverEffect !== 0) {\n          hoverColor = pluck(setData.positivehovercolor, chartAttr.positivehovercolor,\n            chartAttr.plotfillhovercolor, chartAttr.columnhovercolor, setColor);\n        }\n      } else {\n        setColor = pluck(setData.color, chartAttr.negativecolor, plotColor);\n        if (showHoverEffect !== 0) {\n          hoverColor = pluck(setData.negativehovercolor, chartAttr.negativehovercolor,\n            chartAttr.plotfillhovercolor, chartAttr.columnhovercolor, setColor);\n        }\n      }\n      // Setting the angle for plot fill for negative data\n      if (itemValue < 0) {\n        plotfillangle = 360 - plotfillAngle;\n      } else {\n        plotfillangle = plotfillAngle;\n      }\n      plotFillAlpha = pluck(setData.alpha, conf.plotFillAlpha);\n      config.dashed = setDataDashed = pluckNumber(setData.dashed, conf.dashed);\n      setDataPlotDashLen = pluckNumber(setData.dashlen, plotDashLen);\n      setDataPlotDashGap = plotDashGap = pluckNumber(setData.dashgap, plotDashGap);\n\n      config.plotFillAlpha = plotFillAlpha;\n      config.plotBorderAlpha = plotBorderAlpha;\n      config.showValue = pluckNumber(setData.showvalue, conf.showValues);\n      // todo clean the variables\n      config.setValue = setValue = itemValue;\n      config.setLink = pluck(setData.link);\n      config.toolTipValue = toolTipValue = numberFormatter.dataLabels(setValue, parentYAxis);\n      config.setDisplayValue = setDisplayValue = getValidValue(parseUnsafeString(setData.displayvalue));\n      config.displayValue = pluck(setDisplayValue, toolTipValue);\n\n      config.plotBorderDashStyle = plotBorderDashStyle = setDataDashed === 1\n        ? getDashStyle(setDataPlotDashLen, setDataPlotDashGap)\n        : (setDataDashed === 0 ? 'none' : initailPlotBorderDashStyle);\n\n      config.shadow = {\n        opacity: conf.showShadow ? plotFillAlpha / 100 : 0\n      };\n\n      config.dataLabelStyle = dataSet._configureDataLabelStyle(setData);\n\n      config.patternType = PATTERN_TYPES.includes(setData.patterntype)\n        ? setData.patterntype\n        : conf.patternType;\n      config.patternAngle = pluckNumber(setData.patternangle, JSONData.patternangle,\n        chartAttr.patternangle, config.patternType === PATTERN_TYPES[0] ? 40 : 0);\n      config.patternDensity = pluckNumber(setData.patterndensity, conf.patternDensity);\n      config.patternSize = pluckNumber(setData.patternsize, JSONData.patternsize,\n        config.patternType === PATTERN_TYPES[0] ? 2 : 4);\n      config.patternAlpha = pluckNumber(setData.patternalpha, conf.patternAlpha);\n      config.patternBgColor = pluck(setData.patternbgcolor, conf.patternBgColor);\n\n      // Setting the color Array to be applied to the bar/column.\n      config.colorArr = colorArr = getColumnColor(\n        setColor + COMMA + plotgradientcolor.replace(/,+?$/, ''), plotFillAlpha, plotFillRatio,\n        plotfillangle, isRoundEdges, plotBorderColor,\n        // todo remove the toString() by plucking string only.\n        plotBorderAlpha.toString(),\n        // todo remove this dirty checks and set the flag value as required.\n        (isBar ? 1 : 0), (!!is3D));\n\n      // Parsing the hover effects only if showhovereffect is not 0.\n      if (showHoverEffect !== 0) {\n        // Alpha of the data\n        hoverAlpha = pluck(setData.alpha, setData.hoveralpha, JSONData.hoveralpha,\n          chartAttr.plotfillhoveralpha, chartAttr.columnhoveralpha, plotFillAlpha);\n        hoverGradientColor = pluck(setData.hovergradientcolor,\n          JSONData.hovergradientcolor, chartAttr.plothovergradientcolor, plotgradientcolor);\n        !hoverGradientColor && (hoverGradientColor = '');\n        // Fill ratio of the data\n        hoverRatio = pluck(setData.hoverratio, JSONData.hoverratio, setData.ratio,\n          chartAttr.plothoverratio, plotFillRatio);\n        hoverAngle = pluckNumber(360 - setData.hoverangle,\n          360 - JSONData.hoverangle, 360 - chartAttr.plothoverangle, plotfillangle);\n        hoverBorderColor = pluck(setData.borderhovercolor,\n          JSONData.borderhovercolor, chartAttr.plotborderhovercolor, plotBorderColor);\n        hoverBorderAlpha = pluck(setData.borderhoveralpha,\n          JSONData.borderhoveralpha, chartAttr.plotborderhoveralpha, plotBorderAlpha, plotFillAlpha);\n        hoverBorderThickness = pluckNumber(setData.borderhoverthickness,\n          JSONData.borderhoverthickness, chartAttr.plotborderhoverthickness, plotBorderThickness);\n        hoverBorderDashed = pluckNumber(setData.borderhoverdashed,\n          JSONData.borderhoverdashed, chartAttr.plotborderhoverdashed);\n        hoverBorderDashGap = pluckNumber(setData.borderhoverdashgap,\n          JSONData.borderhoverdashgap, chartAttr.plotborderhoverdashgap, plotDashLen);\n        hoverBorderDashLen = pluckNumber(setData.borderhoverdashlen,\n          JSONData.borderhoverdashlen, chartAttr.plotborderhoverdashlen, plotDashGap);\n        hoverDashStyle = hoverBorderDashed\n          ? getDashStyle(hoverBorderDashLen, hoverBorderDashGap)\n          : plotBorderDashStyle;\n\n        /* If no hover effects are explicitly defined and\n                     * showHoverEffect is not 0 then hoverColor is set.\n                     */\n        if (showHoverEffect === 1 && hoverColor === plotColor) {\n          hoverColor = getLightColor(hoverColor, 70);\n        }\n        config.hoverColor = hoverColor;\n        config.hoverAlpha = hoverAlpha;\n        config.hoverBorderColor = hoverBorderColor;\n        config.hoverBorderAlpha = hoverBorderAlpha;\n        // setting the hover color array which is always applied except when showHoverEffect is not 0.\n        hoverColorArr = getColumnColor(\n          hoverColor + ',' + hoverGradientColor,\n          hoverAlpha,\n          hoverRatio,\n          hoverAngle,\n          isRoundEdges,\n          hoverBorderColor,\n          hoverBorderAlpha.toString(),\n          (isBar ? 1 : 0),\n          (!!is3D)\n        );\n\n        config.setRolloutAttr = {\n          fill: !is3D ? toRaphaelColor(colorArr[0])\n            : [toRaphaelColor(colorArr[0]), !conf.use3DLighting],\n          stroke: showplotborder && toRaphaelColor(colorArr[1]),\n          'stroke-width': plotBorderThickness,\n          'stroke-dasharray': plotBorderDashStyle\n        };\n        config.setRolloverAttr = {\n          fill: !is3D ? toRaphaelColor(hoverColorArr[0])\n            : [toRaphaelColor(hoverColorArr[0]), !conf.use3DLighting],\n          stroke: showplotborder && toRaphaelColor(hoverColorArr[1]),\n          'stroke-width': hoverBorderThickness,\n          'stroke-dasharray': hoverDashStyle\n        };\n      }\n      /*\n                todo: Was in the old architechture and need to be validated and included in the new architechture.\n                // Used to set alpha of the shadow\n                    pointShadow = {\n                        opacity: setAlpha / 100,\n                        inverted: isBar\n                    };\n                // get per-point dash-style\n                    pointDashStyle = setBorderDashed ?\n                        getDashStyle(setBorderDashLen, setBorderDashGap, setBorderWidth) :\n                        DASH_DEF;\n                */\n      // todo removing this category tooltext. Needs a validation.\n      // label = getValidValue(parseUnsafeString(pluck (categories[i].tooltext, categories[i].label)));\n\n      formatedVal = config.toolTipValue;\n\n      // Parsing tooltext against various configurations provided by the user.\n      config.origToolText = setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext, JSONData.plottooltext,\n        chartAttr.plottooltext), false));\n      // create the tooltext\n      if (!showTooltip) {\n        toolText = false;\n      } else if (setTooltext !== UNDEF) {\n        macroIndices = [1, 2, 3, 5, 6, 7, 20, 21, 24, 25];\n        parserConfig = {\n          formattedValue: formatedVal,\n          label: dataLabel,\n          yaxisName: parseUnsafeString(chartAttr.yaxisname),\n          xaxisName: parseUnsafeString(chartAttr.xaxisname),\n          cumulativeValue: total,\n          cumulativeDataValue: numberFormatter.dataLabels(total),\n          sum: numberFormatter.dataLabels(seriesSum),\n          unformattedSum: seriesSum\n        };\n        toolText = parseTooltext(setTooltext, macroIndices, parserConfig, setData, chartAttr, JSONData);\n      } else { // determine the dispalay value then\n        toolText = formatedVal === null ? false\n          : (dataLabel !== BLANK) ? dataLabel + tooltipSepChar : '';\n      }\n      // create the displayvalue\n      // if (!config.showValue) {\n      //   displayValue = BLANK;\n      // } else if (setDisplayValue !== UNDEF) {\n      //   displayValue = setDisplayValue;\n      // } else { // determine the dispalay value then\n      //   displayValue = formatedVal;\n      // }\n      zLine.data.push({\n        y: (itemValue === null) ? null : total,\n        x: countPoint\n      });\n      countPoint += 1;\n\n      config.originalPlotColor = hashify(plotColor);\n\n      config.toolText = toolText;\n      config.setTooltext = toolText;\n\n      config._x = i;\n      config._y = setValue;\n\n      // if (!config.issum) {\n      //   config._y = dataStore[i - 1] && dataStore[i - 1].config.total;\n      // } else if (!config.isCumulative) {\n      //   config._y = config.lastComTotal;\n      // }\n    }\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n    conf.connectNullData = pluckNumber(chartAttr.connectnulldata, 0);\n    conf.showConnectors = pluckNumber(chartAttr.showconnectors, 1);\n    // reconfiguring the category object for the axis module\n    catData = JSONData.catData;\n    for (i = 0; i < catData.length; i += 1) {\n      catObj = catData[i];\n      setDataArr.splice(catObj.index, 0, catObj.data);\n    }\n    dataSet.getFromEnv('xAxis').setTickValues(setDataArr);\n    // No real time max min calculations are required during resize.\n    dataSet.config.maxminFlag = false;\n  }\n\n  // Create pixel coordinates for the plots\n  createCoordinates () {\n    var dataSet = this,\n      isBar = dataSet.getFromEnv('chart').isBar,\n      yAxis = dataSet.getFromEnv('yAxis'),\n      xAxis = dataSet.getFromEnv('xAxis'),\n      yBase = yAxis.getAxisBase(), // eslint-disable-line good-practices/no-single-usage-variable\n      yBasePos = yAxis.getPixel(yBase), // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      config,\n      previousY,\n      i,\n      Px,\n      Py,\n      Pb,\n      yVal,\n      chartConfig = dataSet.getFromEnv('chartConfig'),\n      xDepth = chartConfig.xDepth || 0,\n      yDepth = chartConfig.yDepth || 0,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      groupManager = dataSet.groupManager,\n      stackConf = groupManager && groupManager.stackConf,\n      dataStore = dataSet.components.data;\n\n    !isBar && (xDepth = -xDepth);\n    isBar && (yDepth = -yDepth);\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (dataObj === UNDEF) {\n        continue;\n      }\n      yVal = config._y;\n      if (!config.issum) {\n        previousY = dataStore[i - 1] && dataStore[i - 1].config.total;\n        previousY && (yVal += previousY);\n      } else if (!config.isCumulative) {\n        previousY = config.lastComTotal;\n        yVal += config.lastComTotal;\n      } else {\n        previousY = null;\n      }\n\n      Px = xAxis.getPixel((stackConf && stackConf[i].x) || config._x) + xDepth;\n      Py = yAxis.getPixel(yVal) + yDepth;\n      Pb = (previousY ? yAxis.getPixel(previousY) : yBasePos) + yDepth;\n      if (xAxis.config.isVertical) {\n        config._Px = Py;\n        config._Py = Px;\n        config._Pby = Px;\n        config._Pbx = Pb;\n      } else {\n        config._Px = Px;\n        config._Py = Py;\n        config._Pby = Pb;\n        config._Pbx = Px;\n      }\n    }\n  }\n\n  getDataLimits () {\n    var dataSet = this,\n      dataStore = dataSet.components.data,\n      conf = dataSet.config,\n      i,\n      config,\n      len = dataStore.length, // eslint-disable-line good-practices/no-single-usage-variable\n      setValue,\n      maxValue = -Infinity,\n      minValue = +Infinity;\n\n    for (i = 0; i < len; i++) {\n      if (!dataStore[i]) {\n        continue;\n      }\n      config = dataStore[i].config;\n      setValue = config.total;\n      if (setValue !== UNDEF) {\n        maxValue = Math.max(maxValue, setValue);\n        minValue = Math.min(minValue, setValue);\n      }\n    }\n\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n    return {\n      max: conf.maxValue,\n      min: conf.minValue\n    };\n  }\n\n  drawPlots (anim) {\n    var dataSet = this;\n    super.drawPlots(anim);\n    if (dataSet.config.showConnectors) {\n      dataSet.drawLine();\n    } else {\n      dataSet.getContainer('commonElemsGroup').hide();\n    }\n  }\n\n  drawLine () {\n    var dataSet = this,\n      conf = dataSet.config,\n      i,\n      yPos,\n      xPos,\n      yAxis = dataSet.getFromEnv('yAxis'),\n      yBase = yAxis.getAxisBase(), // eslint-disable-line good-practices/no-single-usage-variable\n      yBasePos = yAxis.getPixel(yBase), // eslint-disable-line good-practices/no-single-usage-variable\n      lineContainer = dataSet.getContainer('commonElemsGroup'),\n      groupNetHalfWidth = dataSet.getFromEnv('columnWidth') / 2,\n      zLineConf = conf.zLine,\n      data = zLineConf.data,\n      set,\n      y,\n      x,\n      ln = data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      seriesLineWidth = zLineConf.lineWidth,\n      lastXPos,\n      zLineDummy = dataSet._graphics.zLine,\n      zLine,\n      lastYPos = null,\n      linePath = [],\n      lastMoveCommand = [];\n\n    yAxis.yBasePos = yBasePos;\n    lineContainer.toFront().show();\n\n    for (i = 0; i < ln; i += 1) {\n      set = data[i];\n      y = set.y;\n      if (y === null) {\n        lastMoveCommand.length = 0;\n        if (conf.connectNullData === 0) {\n          lastYPos = null;\n        }\n      } else {\n        x = pluckNumber(set.x, i);\n        // Multi series related management.\n        yPos = yAxis.getPixel(y);\n        xPos = dataSet.getFromEnv('xAxis').getPixel(x);\n        // crisp line positions\n        xPos = getCrispValue(xPos, seriesLineWidth, seriesLineWidth).position;\n        yPos = getCrispValue(yPos, seriesLineWidth, seriesLineWidth).position;\n\n        if (lastYPos !== null) {\n          if (lastMoveCommand.length) {\n            linePath = linePath.concat(lastMoveCommand);\n            lastMoveCommand.length = 0;\n          }\n          linePath.push(M, lastXPos, lastYPos, 'm', -groupNetHalfWidth, 0, H, xPos, 'h',\n            groupNetHalfWidth, 'm', 0, yPos - lastYPos);\n        } else {\n          lastMoveCommand.push(M, xPos, yPos);\n        }\n\n        lastXPos = xPos;\n        lastYPos = yPos;\n      }\n    }\n    // If zLine is not present, create it\n    zLine = dataSet.getFromEnv('animationManager').setAnimation({ // eslint-disable-line good-practices/no-single-usage-variable\n      el: zLineDummy || 'path',\n      attr: {\n        path: linePath,\n        'stroke-linecap': 'round',\n        'stroke-opacity': 1,\n        'stroke-dasharray': zLineConf.dashStyle,\n        'stroke': zLineConf.color,\n        'stroke-linejoin': seriesLineWidth >= MAX_MITER_LINEJOIN ? 'round' : 'miter',\n        'stroke-width': seriesLineWidth\n      },\n      container: lineContainer,\n      component: dataSet,\n      label: 'path'\n    });\n\n    // If zline is not present previously, add to _graphics of dataset\n    if (!zLineDummy) {\n      dataSet.addGraphicalElement('zLine', zLine);\n    }\n  }\n}\nexport default WaterFall2DDataset;\n","import columnAnimation from '@fusioncharts/charts/src/dataset/column/index.animation';\n\nexport default {\n  'initial.dataset.waterFall2D': columnAnimation['initial.dataset.column']\n};\n","import LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport {\n  pluck,\n  pluckNumber,\n  toRaphaelColor,\n  getDashStyle,\n  hasTouch,\n  TOUCH_THRESHOLD_PIXELS,\n  CLICK_THRESHOLD_PIXELS,\n  stubFN,\n  fcEach,\n  BLANKSTRING,\n  polyPathToPath\n} from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport kagiAnimation from './index.animation';\nlet POSITION_TOP = 'top',\n  POSITION_BOTTOM = 'bottom',\n  POSITION_MIDDLE = 'middle',\n  POSITION_RIGHT = 'right',\n  ROUND = 'round',\n  UNDEF,\n  EVENTARGS = 'eventArgs',\n  SETROLLOVERATTR = 'setRolloverAttr',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  M = 'M',\n  H = 'H',\n  V = 'V',\n  GUTTER_4 = 4,\n  GUTTER_2 = 2,\n  CENTER = 'center',\n  HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS\n    : CLICK_THRESHOLD_PIXELS,\n  NONE = 'none';\naddDep({\n  name: 'kagiAnimation',\n  type: 'animationRule',\n  extension: kagiAnimation\n});\nclass KagiDataset extends LineDataset {\n  constructor () {\n    super();\n    this.manageSpace = stubFN;\n    this.drawCommonElements = stubFN;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'kagi';\n  }\n  _parseShadowOptions () {\n    var dataSet = this,\n      chartAttr = dataSet.getFromEnv('chart').getFromEnv('dataSource').chart; // eslint-disable-line good-practices/no-single-usage-variable\n    return {\n      opacity: pluckNumber(chartAttr.showshadow, 1) ? dataSet.config.alpha / 100 : 0\n    };\n  }\n  configureAttributes (datasetJSON) {\n    super.configureAttributes(datasetJSON);\n    var dataSetComponents,\n      datasetObj = this,\n      removeDataArr,\n      chart = datasetObj.getFromEnv('chart'), // eslint-disable-line good-practices/no-single-usage-variable\n      temp = 0,\n      data,\n      catArr = [],\n      series,\n      JSONData,\n      FCChartObj,\n      isRallyInitialised,\n      shiftCounter,\n      reversalValue,\n      reversalPercentage,\n      rallyDashLen,\n      rallyDashGap,\n      declineDashLen,\n      declineDashGap,\n      lastPlotValue,\n      setShowLabel,\n      length,\n      index,\n      fcIndex,\n      fcDataObj,\n      lastShift,\n      prevDataObj,\n      plotValue,\n      dataObj,\n      nextDataValue,\n      valueDifference,\n      dataValue,\n      isRally,\n      lastLow,\n      lastHigh,\n      isMovingUp,\n      isShift,\n      checkValue,\n      t,\n      count = 0,\n      vAlign,\n      // canvasPadding,\n      align;\n\n    dataSetComponents = datasetObj.components;\n    data = dataSetComponents.data;\n    series = datasetObj.config;\n    JSONData = datasetObj.config.JSONData.data;\n    FCChartObj = chart.getFromEnv('dataSource').chart;\n    removeDataArr = dataSetComponents.removeDataArr || (dataSetComponents.removeDataArr = []); // eslint-disable-line good-practices/no-single-usage-variable\n    // First vertical point for shift is yet to be obtained\n    isRallyInitialised = false;\n    // Initialised to one to avoid zero dividing the width of the canvas\n    // (as the case may be) to get the xShiftLength\n    shiftCounter = 0; // eslint-disable-line good-practices/no-single-usage-variable\n    // The value which determines whether to make a horizontal shift\n    // to deal with the next point\n    reversalValue = pluckNumber(FCChartObj.reversalvalue, -1);\n    // The percentage of the range of values, which determines whether\n    // to make a horizontal shift to deal with the next point\n    reversalPercentage = pluckNumber(FCChartObj.reversalpercentage, 5); // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (index = 0; index < data.length; index += 1) {\n      data[index].config.__nullCount = count;\n      if (data[index].config.setValue === null) {\n        removeDataArr.push(data.splice(index, 1)[0]);\n        count++;\n        index -= 1;\n      }\n    }\n    if (data.length) {\n      // Color of line denoting rally\n      series.rallyColor = pluck(FCChartObj.rallycolor, 'FF0000');\n      series.rallyAlpha = pluckNumber(FCChartObj.rallyalpha,\n        FCChartObj.linealpha, 100);\n      // color of line denoting decline\n      series.declineColor = pluck(FCChartObj.declinecolor, '0000FF');\n      series.declineAlpha = pluckNumber(FCChartObj.declinealpha,\n        FCChartObj.linealpha, 100);\n      // Default canvasPadding is 15.\n      series.canvasPadding = pluckNumber(FCChartObj.canvaspadding, 15);\n      // The maximum horizontal shift in percentage of the\n      // available canvas width\n      series.maxHShiftPercent = pluckNumber(FCChartObj.maxhshiftpercent, 10);\n      // effectiveCanvasWidth = canvasWidth - canvasPadding * 2;\n      // Thickness of line denoting rally\n      series.rallyThickness = pluckNumber(FCChartObj.rallythickness,\n        FCChartObj.linethickness, 2);\n      // length of the dash\n      rallyDashLen = pluckNumber(FCChartObj.rallydashlen,\n        FCChartObj.linedashlen, 5);\n      // distance between dash\n      rallyDashGap = pluckNumber(FCChartObj.rallydashgap,\n        FCChartObj.linedashgap, 4);\n\n      // Thickness of line denoting decline\n      series.declineThickness = pluckNumber(FCChartObj.declinethickness,\n        FCChartObj.linethickness, 2);\n      // length of the dash\n      declineDashLen = pluckNumber(FCChartObj.declinedashlen,\n        FCChartObj.linedashlen, 5);\n      // distance between dash\n      declineDashGap = pluckNumber(FCChartObj.declinedashgap,\n        FCChartObj.linedashgap, 4);\n\n      series.lineDashed = {\n        'true': pluckNumber(FCChartObj.rallydashed,\n          FCChartObj.linedashed, 0),\n        'false': pluckNumber(FCChartObj.declinedashed,\n          FCChartObj.linedashed, 0)\n      };\n\n      // Storing dashStyle in series to be use while drawing graph and\n      series.rallyDashed = pluckNumber(FCChartObj.rallydashed,\n        FCChartObj.linedashed, 0) ? getDashStyle(rallyDashLen, rallyDashGap) : NONE;\n      series.declineDashed = pluckNumber(FCChartObj.declinedashed,\n        FCChartObj.linedashed, 0) ? getDashStyle(declineDashLen, declineDashGap) : NONE;\n\n      // canvasPadding to be use by Kagi chart Drawing\n      series.canvasPadding = pluckNumber(FCChartObj.canvaspadding,\n        this.canvasPadding, 15);\n\n      // setting the reversal value\n      reversalValue = (reversalValue > 0)\n        ? reversalValue : reversalPercentage * (series.maxValue - series.minValue) / 100;\n\n      // Initialised by the first data value\n      lastPlotValue = data[0].config.setValue;\n      // Local function to set anchor and value visibility of\n      // unwanted points, after the first point is found to draw\n      // vertical kagi line\n      setShowLabel = function (id, _isRally) {\n        // Initial data value\n        var dataXValue, r = 1,\n          data1Value = data[0].config.setValue;\n        // Looping to check for unwanted points\n        while (r < id) {\n          // Value of point under check\n          dataXValue = data[r].config.setValue;\n          // If current trend is rally\n          if (_isRally) {\n            if (dataXValue <= data1Value) {\n              data[r].config.isDefined = false;\n            }\n            // Else current trend is decline\n          } else {\n            if (dataXValue >= data1Value) {\n              data[r].config.isDefined = false;\n            }\n          }\n          r += 1;\n        }\n        // Setting alignment of value for the first data\n        data[0].config.vAlign = (_isRally) ? POSITION_BOTTOM\n          : POSITION_TOP;\n        data[0].config.align = CENTER;\n      };\n\n      length = JSONData.length;\n      // iterating to set values of properties in data for each respective\n      // point (main algorithm of KagiChart)\n      // loop counter starts from 2 since data for plot 1 is unique\n      for (index = 0, fcIndex = 0; fcIndex < length; fcIndex += 1, index += 1) {\n        fcDataObj = JSONData[fcIndex];\n        // Calculation of vLine based on hShift.\n        if (fcDataObj && fcDataObj.vline) {\n          continue;\n        }\n        dataObj = data[index] && data[index].config;\n        // lastFcDataObj = JSONData[fcIndex];\n        // Special handling for vLines\n        if (lastShift) {\n          lastShift = false;\n          // vLinePosition += 0.5;\n        }\n        dataObj && (dataObj.isDefined = true);\n        if (index && dataObj) {\n          dataObj.isShift = UNDEF;\n\n          prevDataObj = data[index - 1].config;\n          dataObj.vAlign = POSITION_MIDDLE;\n          dataObj.align = POSITION_RIGHT;\n          dataObj.showLabel = false;\n          // initialised to null each time\n          plotValue = null;\n          // data value of plot under current loop\n          dataValue = dataObj.setValue;\n          // data value of previous plot\n          // lastDataValue = data[i-1].y;\n          // data value of next plot\n          nextDataValue = data[index + 1] && data[index + 1].config.setValue;\n          valueDifference = Math.abs(lastPlotValue - dataValue);\n\n          // if current plot is yet render the trend,then care is taken\n          // to make few initial assumptions as algorithm starts with it\n          if (!isRallyInitialised) {\n            // if current plot is higher than the last plotted one\n            // (first data) by significant amount\n            if (dataValue > lastPlotValue && valueDifference > reversalValue) {\n              // is assumed to be true\n              isRally = true;\n              // value of last low point of swing (assumed)\n              lastLow = lastPlotValue;\n              // none assumed\n              lastHigh = null;\n              // kagi rising\n              isMovingUp = true;\n              // first vertical point for shift is obtained\n              isRallyInitialised = true;\n              // call of local function to set visibility false for\n              // anchors and values of unwanted points\n              setShowLabel(index, isRally);\n              // if current plot is lower than the last plotted one\n              // (first data) by significant amount\n            } else if (dataValue < lastPlotValue && valueDifference > reversalValue) {\n              // is assumed to be false\n              isRally = false;\n              // none assumed\n              lastLow = null;\n              // value of last high point of swing (assumed)\n              lastHigh = lastPlotValue;\n              // kagi falling\n              isMovingUp = false;\n              // first vertical point for shift is obtained\n              isRallyInitialised = true;\n              // call of local function to set visibility false for\n              // anchors and values of unwanted points\n              setShowLabel(index, isRally);\n              // else, point under loop is not significant to\n              // draw the first vertical kagi line to\n            } else {\n              // is set to null\n              isRally = null;\n              // vertical shifting direction is set to null\n              isMovingUp = null;\n              // first vertical point for shift is yet to be obtained\n              isRallyInitialised = false;\n            }\n            // trend property for plot 1 is set\n            if (defined(prevDataObj)) {\n              prevDataObj.isRally = isRally;\n            }\n            if (isRally !== null) {\n              // to get the initial horizontal line in trend color\n              // (in case data[1].value = data[2].value=... so on or not)\n              data[0].config.isRally = isRally;\n            }\n            // else, for plot 3 and above, only trend is evaluated\n          } else {\n            // setting trends by concept of Kagi Chart\n            if (dataValue < lastLow && isRally) {\n              isRally = false;\n            } else if (dataValue > lastHigh && !isRally) {\n              isRally = true;\n            }\n            // else isRally remains unchanged\n          }\n\n          // Setting in data for the plot\n          dataObj.isRally = isRally;\n          // To check for having horizontal shift or not,\n          // we need to use the pertinent value\n          if ((isMovingUp && dataValue < lastPlotValue) ||\n                            (!isMovingUp && dataValue > lastPlotValue)) {\n            plotValue = lastPlotValue;\n          }\n          // To find if there is a horizontal shift associated\n          // with this plot\n          checkValue = (plotValue) || dataValue;\n          valueDifference = Math.abs(checkValue - nextDataValue);\n          // if the line is static till now\n          if (isMovingUp === null) {\n            isShift = null;\n            // if the line is rising\n          } else if (isMovingUp) {\n            isShift = (checkValue > nextDataValue && valueDifference >= reversalValue);\n            // else if the line is falling\n          } else {\n            isShift = (checkValue < nextDataValue && valueDifference >= reversalValue);\n          }\n\n          // To get the last extremes preceding the current point\n          // and setting the vertical/horizontal\n          // alignment of the value to be shown for it.\n          if (prevDataObj && prevDataObj.isShift) {\n            if (isMovingUp) {\n              lastLow = lastPlotValue;\n              vAlign = POSITION_BOTTOM;\n            } else if (!isMovingUp) {\n              lastHigh = lastPlotValue;\n              vAlign = POSITION_TOP;\n            }\n            align = CENTER;\n            // looping to get the actual plot corresponding to the\n            // maxima/minima and setting label properties for the same\n            for (t = index; t > 1; t -= 1) {\n              if (data[t].y === lastPlotValue) {\n                data[t].vAlign = vAlign;\n                data[t].align = align;\n                data[t].showLabel = true;\n                // extreme obtained and thus stop looping\n                break;\n              }\n            }\n          }\n          // if there is a horizontal shift, then\n          if (isShift) {\n            // updating counter to have to total number of horizontal\n            // shifts in the total plot.This is vital for calculation\n            // of the length of each horizontal shifts.\n            shiftCounter += 1;\n            // vLinePosition += 0.5;\n            lastShift = true;\n            // updating the flag by reversing the boolean\n            // value of the flag itself\n            isMovingUp = !isMovingUp;\n            // setting in data for the plot, to be used for\n            // drawing the graph\n            dataObj.isShift = true;\n            // updating last plotting value\n            lastPlotValue = checkValue;\n            catArr.push(JSONData[index + dataObj.__nullCount]);\n            temp = datasetObj._appendCategory(temp, index, catArr, 0);\n          } else if ((isMovingUp && dataValue > lastPlotValue) ||\n                            (!isMovingUp && dataValue < lastPlotValue)) {\n            // updating last plotting value\n            lastPlotValue = dataValue;\n            // if cuurent data value is to be skipped for plotting\n          } else {\n            // setting the value to be plotted\n            // (virtually drawing pen stays still due to this)\n            plotValue = lastPlotValue;\n          }\n          // plotValue assigned is either defined or set to null\n          dataObj.plotValue = plotValue;\n          // few local variables are bundled together in an object to be\n          // used later-on to work around a Catch-22 problem\n          dataObj.objParams = {\n            isRally: isRally,\n            lastHigh: lastHigh,\n            lastLow: lastLow,\n            isRallyInitialised: isRallyInitialised\n          };\n        }\n      }\n      // insert if any remaining categories to be appended.\n      datasetObj._appendCategory(temp, index, catArr, 1);\n      // insert the categories before setting the final category.\n      catArr.push(fcDataObj);\n      datasetObj.getFromEnv('xAxis').setTickValues(catArr);\n      series.shiftCount = shiftCounter + 1;\n    }\n  }\n  _appendCategory (tempData, index, catArr, lineposition) {\n    var i,\n      catObj,\n      temp = tempData,\n      catData,\n      refIndex,\n      catOnlyData = this.config.JSONData.catData;\n    if (temp < catOnlyData.length) {\n      for (i = temp; i < catOnlyData.length; i += 1, temp = i) {\n        catObj = catOnlyData[i];\n        catData = catObj.data;\n        refIndex = catObj.index - (i + 1);\n        if (refIndex < index) {\n          catData.lineposition = pluckNumber(catData.lineposition, lineposition);\n        } else if (refIndex > index) {\n          break;\n        }\n        catArr.push(catData);\n      }\n    }\n    return temp;\n  }\n  _getHoveredPlot (chartXVal, chartYVal) {\n    var dataset = this,\n      chartX = chartXVal,\n      chartY = chartYVal,\n      xAxis = dataset.getFromEnv('xAxis'),\n      conf = dataset.config,\n      trackIndex = conf.trackIndex, // eslint-disable-line good-practices/no-single-usage-variable\n      dataStore = dataset.components.data,\n      len = dataStore.length,\n      i,\n      j,\n      index,\n      returnValue,\n      xMin,\n      xMax,\n      pointObjs;\n\n    // getting new chart XY accordint to Translation of axis\n    chartX += xAxis.getTranslation();\n\n    xMin = Math.floor(Math.max(xAxis.getValue(chartX - conf.maxRadius), 0)); // eslint-disable-line good-practices/no-single-usage-variable\n    xMax = Math.ceil(Math.min(xAxis.getValue(chartX + conf.maxRadius), len - 1)); // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (j = xMax; j >= xMin; j--) {\n      pointObjs = trackIndex[j];\n      len = pointObjs && pointObjs.length;\n      // search point objects under current value\n      for (i = len; i >= 0; i--) {\n        index = pointObjs[i];\n        returnValue = dataset.isWithinShape(dataStore[index], index, chartX, chartY);\n        if (returnValue) {\n          return returnValue;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns the clip path for kagi\n   *\n   * @param {any} type type of clip-rect\n   * @memberof KagiDataset\n   */\n  getClip (type) {\n    let canvasConfig = this.getFromEnv('chart').getChildren('canvas')[0].config,\n      clipRect = [\n        canvasConfig.canvasLeft,\n        canvasConfig.canvasTop,\n        0,\n        canvasConfig.canvasTop + canvasConfig.canvasHeight\n      ];\n\n    clipRect[2] += type === 'init' ? 0 : canvasConfig.canvasLeft + canvasConfig.canvasWidth;\n    return clipRect;\n  }\n\n  /**\n   * Parses the plot attributes\n   *\n   * @param {any} pointData\n   * @param {any} index\n   * @memberof KagiDataset\n   */\n  parsePlotAttributes (pointData, index) {\n    let i = index,\n      point = pointData,\n      trackerConfig,\n      dataSet = this,\n      xPos,\n      yPos,\n      eventArgs,\n      dataObj,\n      setRolloutAttr,\n      setRolloverAttr,\n      anchorRadius,\n      hoverEffects,\n      anchorProps = {},\n      symbol,\n      config,\n      visible = dataSet.getState('visible'),\n      attr;\n\n    point = point.config;\n    dataObj = dataSet.components.data[i];\n    config = dataObj.config;\n    trackerConfig = point.trackerConfig = {}; // eslint-disable-line good-practices/no-single-usage-variable\n    hoverEffects = config.hoverEffects;\n    xPos = (dataObj._xPos = dataSet.getFromEnv('xAxis').getPixel(point.plotX));\n    yPos = (dataObj._yPos = point.plotY);\n\n    dataObj._index = point.plotX;\n    anchorProps = config.anchorProps;\n    symbol = anchorProps.symbol; // eslint-disable-line good-practices/no-single-usage-variable\n    point.finalTooltext = point.toolText;\n\n    if (yPos !== UNDEF && !isNaN(yPos) && point.isDefined) {\n      // Storing the event arguments\n      eventArgs = point.eventArgs = point.eventArgs || {};\n\n      // Storing the event arguments\n      Object.assign(eventArgs, {\n        index: i,\n        link: config.setLink,\n        value: config.setValue,\n        displayValue: config.displayValue,\n        categoryLabel: config.label,\n        toolText: point.finalTooltext,\n        id: dataSet.config.userID,\n        datasetIndex: 0,\n        datasetName: dataSet.config.JSONData.seriesname,\n        visible,\n        color: config.color,\n        alpha: config.alpha,\n        anchorBgColor: anchorProps.bgColor,\n        anchorBgAlpha: anchorProps.anchorBgAlpha,\n        anchorAlpha: anchorProps.anchorAlpha,\n        anchorBorderColor: anchorProps.borderColor,\n        anchorBorderThickness: anchorProps.borderThickness,\n        anchorRadius: anchorProps.radius,\n        anchorSides: anchorProps.sides,\n        anchorStartAngle: anchorProps.startAngle,\n        anchorHoverColor: hoverEffects.anchorColor,\n        anchorHoverAlpha: hoverEffects.anchorAlpha,\n        anchorHoverSides: hoverEffects.anchorSides,\n        dashed: config.dashed,\n        valuePosition: config.valuePosition\n      });\n\n      // Hover consmetics\n      setRolloutAttr = setRolloverAttr = {};\n\n      if (anchorProps.imageUrl) {\n        config.anchorImageLoaded = false;\n      }\n      attr = {\n        path: polyPathToPath([symbol[1] || 2, xPos, yPos, anchorProps.radius,\n          anchorProps.startAngle, 0]),\n        fill: toRaphaelColor({\n          color: anchorProps.bgColor,\n          alpha: anchorProps.bgAlpha\n        }),\n        stroke: toRaphaelColor({\n          color: anchorProps.borderColor,\n          alpha: anchorProps.borderAlpha\n        }),\n        'stroke-width': anchorProps.borderThickness,\n        visibility: !anchorProps.radius ? 'hidden' : visible\n      };\n      anchorRadius = Math.max(anchorProps.radius,\n        (hoverEffects && hoverEffects.anchorRadius) || 0, HTP) + anchorProps.borderThickness / 2;\n\n      trackerConfig.trackerRadius = anchorRadius;\n\n      // Parsing cosmectics to be applied when element is hovered on.\n      if (hoverEffects.enabled) {\n        setRolloverAttr = {\n          path: polyPathToPath([hoverEffects.anchorSides || 2,\n            xPos, yPos,\n            hoverEffects.anchorRadius,\n            hoverEffects.startAngle,\n            hoverEffects.dip\n          ]),\n          fill: toRaphaelColor({\n            color: hoverEffects.anchorColor,\n            alpha: hoverEffects.anchorBgAlpha\n          }),\n          stroke: toRaphaelColor({\n            color: hoverEffects.anchorBorderColor,\n            alpha: hoverEffects.anchorBorderAlpha\n          }),\n          'stroke-width': hoverEffects.anchorBorderThickness\n        };\n        setRolloutAttr = {\n          path: polyPathToPath([anchorProps.sides, xPos, yPos,\n            anchorProps.radius, anchorProps.startAngle, 0\n          ]),\n          fill: toRaphaelColor({\n            color: anchorProps.bgColor,\n            alpha: anchorProps.bgAlpha\n          }),\n          stroke: toRaphaelColor({\n            color: anchorProps.borderColor,\n            alpha: anchorProps.borderAlpha\n          }),\n          'stroke-width': anchorProps.borderThickness\n        };\n        // set hover effect on each data set\n        hoverEffects.attrs = {\n          'hoverEnabled': hoverEffects.enabled,\n          'anchorRadius': anchorProps.radius,\n          'anchorHoverRadius': hoverEffects.anchorRadius\n        };\n\n        hoverEffects.attrs[SETROLLOVERATTR] = setRolloverAttr;\n        hoverEffects.attrs[SETROLLOUTATTR] = setRolloutAttr;\n\n        anchorProps.isAnchorHoverRadius = hoverEffects.attrs.anchorRadius;\n      }\n    }\n\n    point.props = {\n      element: {\n        attr: attr\n      }\n    };\n  }\n\n  /**\n   * Parses label attributes and position\n   *\n   * @param {any} dataObj\n   * @param {any} index\n   * @memberof KagiDataset\n   */\n  parseLabelAttributes (dataObj, index) {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      style = chart.config.dataLabelStyle,\n      displayValue = BLANKSTRING,\n      rotateValues = chartConfig.rotatevalues ? 270 : 0,\n      canvasTop = chartConfig.canvasTop,\n      canvasHeight = chartConfig.canvasHeight, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasBottom = canvasTop + canvasHeight,\n      valuePadding,\n      bBoxObj,\n      graphic,\n      textHeight,\n      origTextHeight,\n      textY,\n      textX,\n      yAdjust,\n      nextPoint = {}, // eslint-disable-line good-practices/no-single-usage-variable\n      prevPoint = {},\n      config,\n      decidingDimention,\n      xPos,\n      yPos,\n      value,\n      anchorRadius,\n      i = index,\n      plotLabelStyle,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      setValue,\n      attr;\n\n    config = dataObj && dataObj.config;\n    setValue = config && config.setValue;\n\n    if (dataObj === UNDEF || setValue === UNDEF || setValue === null || config.labelSkip === true) {\n      config && (delete config.labelSkip);\n      return;\n    }\n\n    if (index > 0) {\n      prevPoint = {\n        x: dataSet.components.data[i - 1]._xPos,\n        y: dataSet.components.data[i - 1]._yPos\n      };\n    }\n\n    if (index < len - 1) {\n      nextPoint = {\n        x: dataSet.components.data[i + 1]._xPos,\n        y: dataSet.components.data[i + 1]._yPos\n      };\n    }\n\n    graphic = dataObj.graphics;\n    yPos = dataObj._yPos || dataObj.config._Py;\n    xPos = dataObj._xPos || dataObj.config._Px; // eslint-disable-line good-practices/no-single-usage-variable\n    anchorRadius = graphic.element ? (graphic.image && // eslint-disable-line good-practices/no-single-usage-variable\n                  graphic.element.attr('height') * 0.5) || config.anchorProps.radius - 3 : 0;\n\n    valuePadding = config.valuePadding + GUTTER_2 + anchorRadius;\n\n    displayValue = config.displayValue;\n    // Drawing label only if displayvalue is defined and not blank and setValue is not null\n    if (defined(displayValue) && displayValue !== '' && value !== null && config.showValue) {\n      plotLabelStyle = config.dataLabelStyle;\n      attr = {\n        text: displayValue,\n        fill: plotLabelStyle.color,\n        'text-bound': [plotLabelStyle.backgroundColor, plotLabelStyle.borderColor,\n          style.borderThickness, style.borderPadding,\n          style.borderRadius, style.borderDash\n        ]\n      };\n\n      bBoxObj = dataSet.getFromEnv('smartLabel').getOriSize(displayValue);\n\n      if (rotateValues) {\n        // If rotated values we use the width of\n        // the text as height\n\n        config._state = {\n          // If label is already rotated then we take the width as labelWidth\n          labelWidth: bBoxObj.height,\n          labelHeight: bBoxObj.width\n        };\n        config._rotated = true;\n      } else {\n        config._state = {\n          // If label is already rotated then we take the height as labelWidth\n          labelWidth: bBoxObj.width,\n          labelHeight: bBoxObj.height\n        };\n        config._rotated = false;\n      }\n\n      // Calculating the total text height\n      textHeight = origTextHeight = (rotateValues ? bBoxObj.width\n        : bBoxObj.height);\n      textHeight += valuePadding;\n      yAdjust = (origTextHeight * 0.5) + valuePadding;\n      textY = yPos;\n      textX = xPos;\n      textHeight = textHeight + GUTTER_4;\n      decidingDimention = Number(rotateValues) >= 1 ? bBoxObj.height : bBoxObj.width;\n      config._valueBelowPoint = 0;\n\n      // Positioning of data labels\n      if (nextPoint.y > textY) {\n        // nextPoint is below than current point\n        if (prevPoint.y < textY) {\n          // place aside anchor if not enough space is available in bottom\n          textX -= (valuePadding + 3 + decidingDimention * 0.5);\n        } else {\n          // previous point is below current point\n          if (yPos - textHeight < canvasTop) {\n            // place aside anchor if not enough space is available on top\n            textX -= (valuePadding + 3 + decidingDimention * 0.5);\n            textY = canvasTop + textHeight / 2;\n          } else {\n            // else place vertically above anchor\n            textY -= yAdjust;\n          }\n        }\n      } else {\n        // nextpoint is above the current point\n        if (prevPoint.y > textY) {\n          // place aside anchor if not enough space is available in bottom\n          textX -= (valuePadding + 3 + decidingDimention * 0.5);\n        } else {\n          // previous point is above current point\n          if (yPos + textHeight > canvasBottom) {\n            // place aside anchor if not enough space is available in bottom\n            textX -= (valuePadding + 3 + decidingDimention * 0.5);\n            textY = canvasBottom - textHeight / 2;\n          } else {\n            // else place vertically below anchor\n            textY += yAdjust + GUTTER_2;\n            config._valueBelowPoint = 1;\n          }\n        }\n      }\n\n      attr.x = textX;\n      attr.y = textY;\n    }\n\n    config.props = config.props || {};\n    config.props.label = {\n      attr: attr\n    };\n  }\n  /**\n   * Parses anchor position and cosmetics during post space management\n   *\n   * @returns {any}\n   * @memberof KagiDataset\n   */\n  allocatePosition () {\n    let i,\n      dataSet = this,\n      conf = dataSet.config,\n      setDataArr = dataSet.components.data,\n      dataSetLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      xAxis = dataSet.getFromEnv('xAxis'),\n      setValue,\n      dataStore = dataSet.components.data,\n      dataObj,\n      xAxisZeroPos = xAxis.getPixel(0),\n      xAxisFirstPos = xAxis.getPixel(1), // eslint-disable-line good-practices/no-single-usage-variable\n      pointDistance = xAxisFirstPos - xAxisZeroPos,\n      thickness = {\n        'true': conf.rallyThickness,\n        'false': conf.declineThickness\n      },\n      rallyPath,\n      declinePath,\n      xValue = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      plotX = xAxis.getPixel(xValue),\n      isRally = setDataArr[0] && !!setDataArr[0].isRally,\n      nextPointIsRally,\n      startX = xAxisZeroPos - (pointDistance / 2),\n      plotY,\n      crispY,\n      nextPoint,\n      path;\n\n    conf.imagesLoaded = 0;\n    if (!setDataArr.length) {\n      return;\n    }\n\n    rallyPath = conf.rallyPath = [];\n    declinePath = conf.declinePath = [];\n    // Set components.data to blank array if dataStore is not present\n    dataStore = dataSet.components.data = dataStore || [];\n\n    // Special situation for first null data.\n    if (!setDataArr[0].config.setValue) {\n      for (i = 1; i < dataSetLen; i += 1) {\n        setValue = setDataArr[i].config.setValue;\n        if (setValue) {\n          // Get the first valid value.\n          plotY = setDataArr[i].config.plotY;\n          break;\n        }\n      }\n    } else {\n      plotY = setDataArr[0].config.plotY;\n    }\n    isRally = !!setDataArr[0].config.isRally;\n    // drawing starts with an initial half horizontal-shift\n    crispY = Math.round(plotY) + (thickness[isRally] % 2 / 2);\n    if (isRally) {\n      rallyPath.push(M, startX, crispY, H, plotX);\n    } else {\n      declinePath.push(M, startX, crispY, H, plotX);\n    }\n\n    fcEach(setDataArr, function (pointData, ii) {\n      let point = pointData;\n      point = point.config;\n      dataObj = dataStore[ii];\n      setValue = dataObj.config.setValue;\n      // looping to draw the plots\n      nextPoint = (setDataArr[ii + 1] && setDataArr[ii + 1].config) || {};\n      if (nextPoint) {\n        path = [M, plotX, plotY];\n        isRally = point.isRally;\n        // if there is a shift corresponding to this point\n        if (point.isShift) {\n          plotX += pointDistance;\n          plotY = point.graphY;\n          path.push(H, plotX);\n          path[2] = Math.round(path[2]) +\n                            (thickness[isRally] % 2 / 2);\n          path = path.toString();\n          // draw the path\n          if (isRally) {\n            rallyPath.push(path);\n          } else {\n            declinePath.push(path);\n          }\n          path = [M, plotX, plotY];\n        }\n        // if there is a change in trend between the current and\n        // the next points\n        if (nextPoint.isChanged) {\n          plotY = nextPoint.ty;\n          path.push(V, plotY);\n          path[1] = Math.round(path[1]) + (thickness[!!isRally] % 2 / 2);\n          path = path.toString();\n          if (isRally) {\n            rallyPath.push(path);\n          } else {\n            declinePath.push(path);\n          }\n          path = [M, plotX, plotY];\n        }\n\n        nextPointIsRally = nextPoint.isRally;\n        // TODO: If path contains move to and line to at the same point line is not visible in\n        //       native VML brewers need to remove this code when this issue in fixed in core.\n\n        if (nextPoint.graphY !== path[2] && nextPoint.graphY !== UNDEF) {\n          path.push(V, nextPoint.graphY);\n          path[1] = Math.round(path[1]) + (thickness[!!nextPointIsRally] % 2 / 2);\n          path = path.toString();\n          if (nextPointIsRally) {\n            rallyPath.push(path);\n          } else {\n            declinePath.push(path);\n          }\n        }\n        // updating value\n        nextPoint.graphY && (plotY = nextPoint.graphY);\n      }\n      dataSet.parsePlotAttributes(dataObj, ii);\n    });\n\n    for (i = 0; i < setDataArr.length; i++) {\n      dataSet.parseLabelAttributes(dataStore[i], i);\n    }\n  }\n  /**\n   * Draw the plots of kagi chart\n   *\n   * @memberof KagiDataset\n   */\n  drawPlots () {\n    let graphics,\n      dataSet = this,\n      datasetGraphics = dataSet.getGraphicalElement(),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      conf = dataSet.config,\n      // temp hardcoded.\n      trackIndex = conf.trackIndex = {},\n      setDataArr = dataSet.components.data,\n      yPos,\n      setElement,\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      hoverEffects,\n      shadow = conf.shadow,\n      anchorProps = {},\n      config,\n      rallyThickness = conf.rallyThickness,\n      declineThickness = conf.declineThickness,\n      rallyAttr = {\n        stroke: toRaphaelColor({\n          color: conf.rallyColor,\n          alpha: conf.rallyAlpha\n        }),\n        'stroke-linecap': ROUND,\n        'stroke-linejoin': ROUND,\n        'stroke-width': rallyThickness,\n        'stroke-dasharray': conf.rallyDashed\n      },\n      declineAttr = {\n        stroke: toRaphaelColor({\n          color: conf.declineColor,\n          alpha: conf.declineAlpha\n        }),\n        'stroke-linecap': ROUND,\n        'stroke-linejoin': ROUND,\n        'stroke-width': declineThickness,\n        'stroke-dasharray': conf.declineDashed\n      },\n      rallyElemDummy = datasetGraphics.rallyElem,\n      rallyElem,\n      declineElemDummy = datasetGraphics.declineElem,\n      declineElem,\n      attr,\n      commonElemGroup = dataSet.getContainer('commonElemsGroup'),\n      plotGroup = dataSet.getContainer('plotGroup'), // eslint-disable-line good-practices/no-single-usage-variable\n      shadowGroup = dataSet.getContainer('shadowGroup'),\n      imageElement;\n\n    // save the world if no valid data is there.\n    if (!setDataArr.length) {\n      rallyElem && rallyElem.hide();\n      declineElem && declineElem.hide();\n      return;\n    }\n    rallyElem && rallyElem.show();\n    declineElem && declineElem.show();\n\n    fcEach(setDataArr, function (pointData, i) {\n      let point = pointData;\n      point = point.config;\n      dataObj = dataStore[i];\n      config = dataObj.config;\n      graphics = dataObj.graphics;\n      imageElement = graphics.image;\n      hoverEffects = config.hoverEffects;\n      yPos = dataObj._yPos;\n\n      if (!trackIndex[point.plotX]) {\n        trackIndex[point.plotX] = [];\n      }\n      trackIndex[point.plotX].push(i);\n      dataObj._index = point.plotX;\n      anchorProps = config.anchorProps;\n\n      if (yPos !== UNDEF && !isNaN(yPos) && point.isDefined) {\n        if (anchorProps.imageUrl) {\n          dataSet.drawAnchorImage(dataObj);\n        } else {\n          imageElement && imageElement.hide();\n          setElement = graphics.element;\n          attr = point.props.element.attr;\n\n          // create/reuse setElement\n          setElement = graphics.element = animationManager.setAnimation({\n            el: setElement || 'path',\n            attr: attr,\n            container: plotGroup,\n            component: dataSet,\n            label: 'anchor'\n          });\n          // Set properties to the data of element\n          setElement.show()\n            .shadow(anchorProps.shadow, shadowGroup)\n            .data('anchorRadius', anchorProps.radius)\n            .data('anchorHoverRadius', hoverEffects.anchorRadius)\n            .data('hoverEnabled', hoverEffects.enabled)\n            .data(EVENTARGS, point.eventArgs);\n        }\n\n        // Parsing cosmectics to be applied when element is hovered on.\n        if (hoverEffects.enabled) {\n          setElement && setElement\n            .data('anchorRadius', anchorProps.radius)\n            .data('anchorHoverRadius', hoverEffects.anchorRadius)\n            .data('hoverEnabled', hoverEffects.enabled)\n            .data(SETROLLOVERATTR, hoverEffects.attrs[SETROLLOVERATTR])\n            .data(SETROLLOUTATTR, hoverEffects.attrs[SETROLLOUTATTR])\n            .data(EVENTARGS, point.eventArgs);\n        }\n      } else {\n        graphics.element && graphics.element.hide();\n        imageElement && imageElement.hide();\n      }\n    });\n\n    // Create/reuse rally element\n    rallyAttr.path = conf.rallyPath;\n    rallyElem = animationManager.setAnimation({\n      el: rallyElemDummy || 'path',\n      attr: rallyAttr,\n      container: commonElemGroup,\n      component: dataSet,\n      label: 'line'\n    });\n    rallyElem\n      .shadow(rallyThickness && shadow, shadowGroup);\n    if (!rallyElemDummy) {\n      dataSet.addGraphicalElement('rallyElem', rallyElem);\n    }\n\n    // create/reuse decline element\n    declineAttr.path = conf.declinePath;\n    declineElem = animationManager.setAnimation({\n      el: declineElemDummy || 'path',\n      attr: declineAttr,\n      container: commonElemGroup,\n      component: dataSet,\n      label: 'line'\n    });\n    declineElem\n      .shadow(declineThickness && shadow, shadowGroup);\n    if (!declineElemDummy) {\n      dataSet.addGraphicalElement('declineElem', declineElem);\n    }\n  }\n}\nexport default KagiDataset;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\nexport default {\n  '*.dataset.kagi': lineAnimation['*.dataset.line']\n};\n","import Waterfall2d from '@fusioncharts/powercharts/src/chart/waterfall2d';\nexport default Waterfall2d;\n","import Selectscatter from '@fusioncharts/powercharts/src/chart/selectscatter';\nexport default Selectscatter;\n","import {\n  getValidValue,\n  toRaphaelColor,\n  isIE,\n  extend2,\n  pluck,\n  pluckNumber,\n  hasSVG\n} from '@fusioncharts/core/src/lib';\nimport ScatterBase from '@fusioncharts/charts/src/chart/_internal/scatterbase';\nimport SelectScatterDataset from '../../dataset/selectscatter';\nimport { getDep } from '@fusioncharts/core/src/dependency-manager';\nimport { submitData } from '../_internal/editable-charts';\nimport raphaelShapesButton from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.button';\n\nlet Raphael = getDep('redraphael', 'plugin'),\n  UNDEF,\n  COMMA = ',',\n  configStr = 'config',\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')',\n  VISIBLE = 'visible',\n  HIDDEN = 'hidden',\n  ROUND = 'round',\n  POINTER = 'pointer',\n  SELECTSCATTER = 'selectScatter',\n  resizeInnerSymbolColor = '#999999',\n  resizeOuterSymbolColor = '#777777',\n  NULLSTR = 'null',\n  closeButtonRadius = 6,\n  trackerRadius = 12,\n  deg2rad = Math.PI / 180,\n  checkObjectLength = (item) => {\n    return Object.keys(item).length;\n  },\n  getArcPath = function (endX, endY, rX, rY, isClockWise, isLargeArc) {\n    return ['A', rX, rY, 0, isLargeArc, isClockWise, endX, endY];\n  },\n  M = 'M',\n  L = 'L',\n  Z = 'Z',\n  t = 't';\n\n// Resolve dependency to draw button shape\nraphaelShapesButton(Raphael);\n\nfunction createSelectionBox (event) {\n  var chart = event.chart,\n    paper = chart.getFromEnv('paper'),\n    chartConfig = chart.config,\n    yAxis = chart.getChildren('yAxis')[0],\n    xAxis = chart.getChildren('xAxis')[0],\n    x = event.selectionLeft,\n    y = event.selectionTop,\n    width = event.selectionWidth,\n    height = event.selectionHeight,\n    x2 = x + width,\n    y2 = y + height,\n    TRACKER_WIDTH = 12,\n    TRACKER_HALF_WIDTH = TRACKER_WIDTH * 0.5,\n    cornerSymbolRadius = 15,\n    isSmall = width > cornerSymbolRadius &&\n                height > cornerSymbolRadius,\n    selectEleObj = {\n      resizeEleRadius: cornerSymbolRadius,\n      canvasTop: chartConfig.canvasTop,\n      canvasRight: chartConfig.canvasLeft + chartConfig.canvasWidth,\n      canvasLeft: chartConfig.canvasLeft,\n      canvasBottom: chartConfig.canvasTop + chartConfig.canvasHeight\n    },\n    selectEleArr = chartConfig._selectEleArr || (chartConfig._selectEleArr = []),\n    selectBoxG;\n\n  // var TRACKER_FILL = 'rgba(255,0,0,0.3)';\n\n  selectEleObj.index = selectEleArr.length;\n  selectEleObj.id = 'SELECT_' + selectEleObj.index;\n\n  selectEleObj.selectBoxG = selectBoxG = paper.group('selection-box',\n    chart.getChildContainer('trackerGroup')).toFront();\n\n  // Drawing the main box element\n  selectEleObj.selectBoxTracker = paper.rect(x, y, width, height, selectBoxG)\n    .attr({\n      'stroke-width': 1,\n      stroke: toRaphaelColor(chartConfig.selectBorderColor),\n      fill: chartConfig.selectFillColor\n    })\n    .css({\n      cursor: 'move'\n    });\n  selectEleObj.selectBoxTracker.node._isTrackerElem = true;\n\n  selectEleObj.selectBoxTracker.data(configStr, {\n    position: 6, // MOVE\n    selectEleObj: selectEleObj,\n    chart: chart,\n    xChange: true,\n    yChange: true\n  });\n\n  // Draw top tracker element\n  selectEleObj.topTracker = paper.rect(x, y -\n            TRACKER_HALF_WIDTH, width, TRACKER_WIDTH, selectBoxG)\n    .attr({\n      'stroke-width': 0,\n      fill: TRACKER_FILL\n    })\n    .css('cursor', (hasSVG && 'ns-resize') || 'n-resize');\n  selectEleObj.topTracker.node._isTrackerElem = true;\n  selectEleObj.topTracker.data(configStr, {\n    position: 1, // TOP\n    selectEleObj: selectEleObj,\n    yChange: true,\n    chart: chart\n  });\n\n  // Draw right tracker element\n  selectEleObj.rightTracker = paper.rect(x + width -\n            TRACKER_HALF_WIDTH, y, TRACKER_WIDTH, height, selectBoxG)\n    .attr({\n      'stroke-width': 0,\n      fill: TRACKER_FILL\n    })\n    .css('cursor', (hasSVG && 'ew-resize') || 'w-resize');\n  selectEleObj.rightTracker.node._isTrackerElem = true;\n  selectEleObj.rightTracker.data(configStr, {\n    position: 2, // RIGHT\n    chart: chart,\n    selectEleObj: selectEleObj,\n    xChange: true\n  });\n\n  // Draw bottom tracker element\n  selectEleObj.bottomTracker = paper.rect(x, y + height -\n            TRACKER_HALF_WIDTH, width, TRACKER_WIDTH, selectBoxG)\n    .attr({\n      'stroke-width': 0,\n      fill: TRACKER_FILL\n    })\n    .css('cursor', (hasSVG && 'ns-resize') || 'n-resize');\n  selectEleObj.bottomTracker.node._isTrackerElem = true;\n  selectEleObj.bottomTracker.data(configStr, {\n    position: 3, // BOTTOM\n    chart: chart,\n    selectEleObj: selectEleObj,\n    yChange: true\n  });\n\n  // Draw left tracker element\n  selectEleObj.leftTracker = paper.rect(x - TRACKER_HALF_WIDTH, y,\n    TRACKER_WIDTH, height, selectBoxG)\n    .attr({\n      'stroke-width': 0,\n      fill: TRACKER_FILL\n    })\n    .css('cursor', (hasSVG && 'ew-resize') || 'e-resize');\n  selectEleObj.leftTracker.node._isTrackerElem = true;\n  selectEleObj.leftTracker.data(configStr, {\n    position: 4, // LEFT\n    chart: chart,\n    selectEleObj: selectEleObj,\n    xChange: true\n  });\n\n  selectEleObj.cornerInnerSymbol = paper.symbol('resizeIcon', 0, 0,\n    cornerSymbolRadius, selectBoxG)\n    .attr({\n      transform: t + x2 + COMMA + y2,\n      'stroke-width': 1,\n      visibility: isSmall ? VISIBLE : HIDDEN,\n      stroke: resizeInnerSymbolColor\n    });\n  selectEleObj.cornerInnerSymbol.node._isTrackerElem = true;\n\n  selectEleObj.cornerOuterSymbol = paper.symbol('resizeIcon', 0, 0, -cornerSymbolRadius * 0.8, selectBoxG)\n    .attr({\n      transform: t + x2 + COMMA + y2,\n      strokeWidth: 1,\n      visibility: !isSmall ? VISIBLE : HIDDEN,\n      stroke: resizeOuterSymbolColor\n    });\n  selectEleObj.cornerOuterSymbol.node._isTrackerElem = true;\n\n  selectEleObj.resizeTracker = paper.circle(x2, y2, trackerRadius, selectBoxG)\n    .attr({\n      'stroke-width': 1,\n      stroke: TRACKER_FILL,\n      fill: TRACKER_FILL\n    })\n    .css('cursor', (hasSVG && 'nwse-resize') || 'nw-resize');\n  selectEleObj.resizeTracker.node._isTrackerElem = true;\n  selectEleObj.resizeTracker.data(configStr, {\n    position: 5, // Corner\n    chart: chart,\n    selectEleObj: selectEleObj,\n    yChange: true,\n    xChange: true\n  });\n\n  selectEleObj.closeButton = paper.symbol('closeIcon', 0, 0, closeButtonRadius, selectBoxG)\n    .attr({\n      transform: 't' + x2 + COMMA + y,\n      'stroke-width': 2,\n      stroke: chartConfig.selectionCancelButtonBorderColor,\n      fill: chartConfig.selectionCancelButtonFillColor,\n      'stroke-linecap': ROUND,\n      'stroke-linejoin': ROUND\n    })\n    .css({\n      cursor: POINTER,\n      _cursor: 'hand'\n    })\n    .on('fc-click', function () { // Delete the selection\n      chart.deleteSelection(this, chart);\n    });\n  selectEleObj.closeButton.node._isTrackerElem = true;\n  selectEleObj.closeButton.data(configStr, {\n    chart: chart,\n    index: selectEleObj.index\n  });\n\n  // Previously wrong calculations were done. Fixed it.\n  selectEleObj.startX = xAxis.getValue(x);\n  selectEleObj.startY = yAxis.getValue(y);\n  selectEleObj.endX = xAxis.getValue(x2);\n  selectEleObj.endY = yAxis.getValue(y2);\n  selectEleObj.isVisible = true;\n\n  selectEleArr.push(selectEleObj);\n  chart.bindDragEvent(selectEleObj);\n}\n\nfunction deleteSelection (ele, chart) {\n  var index = ele.data(configStr).index, // eslint-disable-line good-practices/no-single-usage-variable\n    selectEleArr = chart.config._selectEleArr,\n    selectEleObj,\n    selectEleItem,\n    xAxis = chart.getChildren('xAxis')[0],\n    yAxis = chart.getChildren('yAxis')[0],\n    items,\n    bBox,\n    eventArgs;\n  selectEleObj = selectEleArr.find(function (item) {\n    return item.index === index;\n  });\n  bBox = selectEleObj.selectBoxTracker.getBBox();\n  eventArgs = { // eslint-disable-line good-practices/no-single-usage-variable\n    selectionLeft: bBox.x,\n    selectionTop: bBox.y,\n    selectionWidth: bBox.width,\n    selectionHeight: bBox.height,\n    startXValue: xAxis.getValue(bBox.x, 1),\n    startYValue: yAxis.getValue(bBox.y, 1),\n    endXValue: xAxis.getValue(bBox.x + bBox.width, 1),\n    endYValue: yAxis.getValue(bBox.y + bBox.height, 1),\n    data: chart.getCollatedData(),\n    id: selectEleObj.id\n  };\n\n  for (items in selectEleObj) {\n    if (selectEleObj.hasOwnProperty(items)) {\n      selectEleItem = selectEleObj[items];\n      selectEleItem.remove && selectEleItem.remove();\n      delete selectEleObj[items];\n    }\n  }\n  // splice out the last removed slection box\n  selectEleArr = selectEleArr.filter(checkObjectLength);\n  /**\n   * This event is raised when the selection of a SelectScatter chart is removed. This happens when one\n   * clicks the close button on a selection that one has made on the chart.\n   *\n   * @event FusionCharts#selectionRemoved\n   * @group chart-powercharts:selectscatter\n   *\n   * @param {Object} data - This returns the subset of data that was selected.\n   */\n  chart.fireChartInstanceEvent('selectionRemoved', eventArgs);\n}\n\nRaphael.addSymbol({\n  resizeIcon: function (xVal, yVal, rad) {\n    var\n      radius = rad,\n      x = xVal,\n      y = yVal,\n      LINE_GAP = pluckNumber(radius, 15) / 3,\n      LINE_DIS = 3,\n      paths = [],\n      i;\n\n    if (LINE_GAP < 0) {\n      LINE_GAP = -LINE_GAP;\n      radius = -radius;\n      x += radius - LINE_GAP / 2;\n      y += radius - LINE_GAP / 2;\n    }\n\n    for (i = 3; i > 0; i -= 1) {\n      paths.push(M, x - LINE_GAP * i, y - LINE_DIS,\n        L, x - LINE_DIS, y - LINE_GAP * i);\n    }\n    return paths;\n  },\n  closeIcon: function (x, y, r) {\n    var\n      icoX = x,\n      icoY = y,\n      rad = r * 1.3,\n      startAngle = 43 * deg2rad,\n      // to prevent cos and sin of start and end from becoming\n      // equal on 360 arcs\n      endAngle = 48 * deg2rad,\n      startX = icoX + rad * Math.cos(startAngle), // eslint-disable-line good-practices/no-single-usage-variable\n      startY = icoY + rad * Math.sin(startAngle), // eslint-disable-line good-practices/no-single-usage-variable\n      endX = icoX + rad * Math.cos(endAngle), // eslint-disable-line good-practices/no-single-usage-variable\n      endY = icoY + rad * Math.sin(endAngle), // eslint-disable-line good-practices/no-single-usage-variable\n      paths,\n      r1 = 0.71 * (r - 2), // (r - 2) * 0.5,\n      r2 = 0.71 * (r - 2), // (r - 2) * 0.87,\n\n      arcPath = getArcPath(endX, endY, rad, rad, 0, 1); // eslint-disable-line good-practices/no-single-usage-variable\n\n    paths = [M, startX, startY];\n    paths = paths.concat(arcPath);\n    paths = paths.concat([\n      M, x + r1, y - r2,\n      L, x - r1, y + r2,\n      M, x - r1, y - r2,\n      L, x + r1, y + r2\n    ]);\n\n    return paths;\n  },\n  configureIcon: function (x, y, rVal) {\n    var k = 0.5,\n      r = rVal - 1,\n      l = 0.25,\n      r1 = r * 0.71,\n      r2 = (r + 2) * 0.71,\n      x1 = x - r,\n      y1 = y - r,\n      x2 = x + r,\n      y2 = y + r,\n      x3 = x + k,\n      y3 = y + k,\n      x4 = x - k,\n      y4 = y - k,\n\n      x5 = x1 - 2,\n      y5 = y1 - 2,\n      x6 = x2 + 2,\n      y6 = y2 + 2,\n      x7 = x + r1,\n      y7 = y + r1,\n      x8 = x - r1,\n      y8 = y - r1,\n      x9 = x + r2,\n      y9 = y + r2,\n      x10 = x - r2,\n      y10 = y - r2,\n      paths;\n    // eslint-disable-next-line good-practices/no-single-usage-variable\n    paths = [M, x1, y3, L, x5, y3, x5, y4, x1, y4,\n      x8 - l, y8 + l, x10 - l, y10 + l, x10 + l, y10 - l, x8 + l, y8 - l,\n      x4, y1, x4, y5, x3, y5, x3, y1,\n      x7 - l, y8 - l, x9 - l, y10 - l, x9 + l, y10 + l, x7 + l, y8 + l,\n      x2, y4, x6, y4, x6, y3, x2, y3,\n      x7 + l, y7 - l, x9 + l, y9 - l, x9 - l, y9 + l, x7 - l, y7 + l,\n      x3, y2, x3, y6, x4, y6, x4, y2,\n      x8 + l, y7 + l, x10 + l, y9 + l, x10 - l, y9 - l, x8 - l, y7 - l, Z\n    ];\n    return paths;\n  },\n  axisIcon: function (x, y, rVal) {\n    var\n      r = rVal - 1,\n      r1 = r * 0.33,\n      r2 = r / 2,\n      x1 = x - r,\n      y1 = y - r,\n      x2 = x + r2,\n      y2 = y + r,\n      x3 = x - r2,\n      y3 = y + r1,\n      y4 = y - r1,\n      paths;\n    // eslint-disable-next-line good-practices/no-single-usage-variable\n    paths = [M, x1, y1, L, x2, y1, x2, y2, x1, y2, M, x3, y3, L, x2, y3,\n      M, x3, y4, L, x2, y4\n    ];\n    return paths;\n  },\n  loggerIcon: function (xVal, yVal, rVal) {\n    var\n      r = rVal - 1,\n      y = yVal - r,\n      x = xVal - r,\n      r2 = r * 2, // eslint-disable-line good-practices/no-single-usage-variable\n      x1 = x + r2,\n      x2 = x + 2,\n      x3 = x1 - 2,\n      y1 = y + 2,\n      y2 = y1 + r,\n      y3 = y2 + 2,\n      paths;\n    // eslint-disable-next-line good-practices/no-single-usage-variable\n    paths = [M, x, y, L, x1, y, x1, y1, x3, y1, x3, y2, x1, y2, x1, y3,\n      x, y3, x, y2, x2, y2, x2, y1, x, y1, x, y\n    ];\n    return paths;\n  }\n});\n\nclass SelectScatter extends ScatterBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'SelectScatter';\n  }\n\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.formBtnTitle = pluck(\n      dataObj.chart.submittext,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE formbtntitle parsing after two releases from 3.13.0\n      dataObj.chart.formbtntitle,\n      'Submit'\n    );\n    this.config.restoreBtnTitle = pluck(\n      dataObj.chart.restoretext,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE restorebtntitle parsing after two releases from 3.13.0\n      dataObj.chart.restorebtntitle,\n      'Restore'\n    );\n  }\n\n  constructor () {\n    super();\n    this.isXY = true;\n\n    this.defaultZeroPlaneHighlighted = false;\n    this.eiMethods = {\n      // eslint-disable-next-line good-practices/no-function-dependency\n      getData: function (format) {\n        var apiInstance = this.apiInstance;\n        return apiInstance && apiInstance.getData(format);\n      },\n      // eslint-disable-next-line good-practices/no-function-dependency\n      restoreData: function () {\n        var apiInstance = this.apiInstance;\n        return apiInstance && apiInstance.restoreData();\n      },\n      // eslint-disable-next-line good-practices/no-function-dependency\n      submitData: function () {\n        var apiInstance = this.apiInstance;\n        return apiInstance && apiInstance.submitData();\n      }\n    };\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'SelectScatter';\n  }\n\n  /**\n   * Configures and parses chart attributes.\n   *\n   * @param {any} dataObj json data\n   * @memberof SelectScatter\n   */\n  configureAttributes (dataObj) {\n    var iapi = this,\n      chartConfig = iapi.getFromEnv('chart').config,\n      chartAttr = iapi.getFromEnv('dataSource').chart || {};\n\n    chartConfig.formAction = getValidValue(chartAttr.formaction);\n    chartConfig.enableSubmit = pluckNumber(\n      chartAttr.enablesubmit,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE showformbtn parsing after two releases from 3.13.0\n      chartAttr.showformbtn,\n      1\n    ) && chartConfig.formAction;\n    chartConfig.enableRestore = pluckNumber(\n      chartAttr.enablerestore,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE showrestorebtn parsing after two releases from 3.13.0\n      chartAttr.showrestorebtn,\n      1\n    );\n    super.configureAttributes(dataObj);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.hasLegend = true;\n    config.defaultDatasetType = SELECTSCATTER;\n    config.allowreversexaxis = true;\n    config.enablemousetracking = true;\n  }\n\n  attachMenuButtons () {\n    super.attachMenuButtons();\n    var iapi = this,\n      chartConfig = iapi.getFromEnv('chartConfig'),\n      toolbar = iapi.getFromEnv('toolbar'),\n      hamburgerMenu = toolbar.getChild(`hamburgerMenu-${toolbar.getId()}-${iapi.getId()}-0`), // eslint-disable-line good-practices/no-single-usage-variable\n      list = [],\n      tempObj;\n\n    chartConfig.enableRestore && list.push({\n      name: chartConfig.restoreBtnTitle,\n      handler: function () {\n        iapi.restoreData();\n      },\n      action: 'click'\n    });\n\n    if (chartConfig.enableSubmit) {\n      tempObj = {\n        name: chartConfig.formBtnTitle,\n        handler: function () {\n          submitData.call(iapi);\n        },\n        action: 'click'\n      };\n      list.push(tempObj);\n    }\n\n    list.length > 0 && hamburgerMenu.appendInMenu(list);\n  }\n\n  getData (format) {\n    // create a two dimensional array as given in the docs\n    var iapi = this,\n      dataObj = iapi.getCollatedData(),\n      returnObj = [],\n      datasets = dataObj.dataset,\n      length = (datasets && datasets.length) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      index = 0,\n      dsInd = 0,\n      setLen,\n      set,\n      j;\n\n    // When a format is provided\n    if (format) {\n      // no transcoding needed for json\n      if (/^json$/ig.test(format)) {\n        returnObj = dataObj;\n      } else if (/^csv$/ig.test(format)) {\n        returnObj = iapi.getCSVString();\n      } else {\n        returnObj = global.core.transcodeData(dataObj,\n          'json', format);\n      }\n    } else {\n      // if no format has been specified, return data as 2d array.\n      // while (length--) {\n      for (; index < length; index += 1) {\n        set = datasets[index];\n        if (set) {\n          set = datasets[index] && datasets[index].data;\n          j = setLen = (set && set.length) || 0;\n          j && (returnObj[dsInd] || (returnObj[dsInd] = [getValidValue(datasets[index].id,\n            NULLSTR)]));\n          while (j--) {\n            returnObj[dsInd][j + 1] = getValidValue(set[j].id, NULLSTR);\n          }\n\n          setLen && (dsInd += 1);\n        }\n      }\n    }\n    return returnObj;\n  }\n\n  getCSVString () {\n    var dataObj = this.getData(),\n      i = dataObj.length;\n\n    while (i--) {\n      dataObj[i] = dataObj[i].join(COMMA);\n    }\n\n    return dataObj.join('|');\n  }\n\n  /**\n   * Takes datasource and finds out all the points present in the selection box.\n   * @returns {Object} origChartData - Final data\n   * @memberof SelectScatter\n   */\n  getCollatedData (incomingJSON) {\n    var api = this,\n      dataset = this.getDatasets(), // eslint-disable-line good-practices/no-single-usage-variable\n      selectedArr = api.config._selectEleArr,\n      len = (selectedArr && selectedArr.length) || 0,\n      jsonData = incomingJSON || api.getFromEnv('dataSource'),\n      origChartData = extend2({}, jsonData),\n      origDataSets = origChartData.dataset,\n      xPos,\n      yPos,\n      oriDataArr,\n      selectionBoxObj,\n      lenDS = origDataSets && origDataSets.length,\n      isSelected = false, // eslint-disable-line good-practices/no-single-usage-variable\n      dataIndex,\n      setObj,\n      dataLen,\n      startX,\n      endX,\n      startY,\n      endY,\n      selectedData = [];\n\n    if (!len || !lenDS) {\n      return jsonData;\n    }\n    while (len--) {\n      selectionBoxObj = selectedArr[len];\n      if (!selectionBoxObj) {\n        continue;\n      }\n      startX = selectionBoxObj.startX;\n      endX = selectionBoxObj.endX;\n      startY = selectionBoxObj.startY;\n      endY = selectionBoxObj.endY;\n      dataIndex = lenDS;\n      while (dataIndex--) {\n        if (!dataset[dataIndex].getState('visible')) {\n          continue;\n        }\n        selectedData[dataIndex] || (selectedData[dataIndex] = {\n          data: []\n        });\n        oriDataArr = origDataSets[dataIndex].data;\n        dataLen = oriDataArr && oriDataArr.length;\n        while (dataLen--) {\n          setObj = oriDataArr[dataLen];\n          xPos = setObj.x;\n          yPos = setObj.y;\n          if (xPos > startX && xPos < endX &&\n                          yPos < startY && yPos > endY) {\n            selectedData[dataIndex].data[dataLen] = isSelected = true;\n          }\n        }\n      }\n    }\n\n    while (lenDS--) {\n      oriDataArr = origDataSets[lenDS].data;\n      dataLen = oriDataArr && oriDataArr.length;\n      while (dataLen--) {\n        if (!(selectedData[lenDS] && selectedData[lenDS].data[dataLen])) {\n          oriDataArr.splice(dataLen, 1);\n        }\n      }\n    }\n    return isSelected ? origChartData : jsonData;\n  }\n\n  createSelectionBox (event) {\n    createSelectionBox.call(this, event);\n  }\n\n  _deleteAllSelection () {\n    var chart = this,\n      selectEleArr = chart.config._selectEleArr,\n      selectEleObj,\n      i,\n      ii,\n      selectEleItem,\n      items1;\n\n    if (selectEleArr) {\n      for (i = 0, ii = selectEleArr.length; i < ii; i++) {\n        selectEleObj = selectEleArr[i];\n        for (items1 in selectEleObj) {\n          if (selectEleObj.hasOwnProperty(items1)) {\n            selectEleItem = selectEleObj[items1];\n            selectEleItem.remove && selectEleItem.remove();\n            delete selectEleObj[items1];\n          }\n        }\n      }\n      delete chart.config._selectEleArr;\n    }\n  }\n\n  deleteSelection (ele, chart) {\n    deleteSelection.call(this, ele, chart);\n  }\n\n  bindDragEvent (selectEleObj) {\n    var chart = this,\n      // logic = chart.logic,\n      item;\n    for (item in selectEleObj) {\n      /Tracker/.test(item) && selectEleObj[item].drag(chart.move,\n        chart.start, chart.up);\n    }\n  }\n\n  start () {\n    var ele = this,\n      data = ele.data(configStr), // eslint-disable-line good-practices/no-single-usage-variable\n      selectEleObj = data.selectEleObj,\n\n      topT = selectEleObj.topTracker,\n      rightT = selectEleObj.rightTracker,\n      bottomT = selectEleObj.bottomTracker,\n      leftT = selectEleObj.leftTracker,\n      resizeT = selectEleObj.resizeTracker,\n\n      topTData = topT.data(configStr),\n      rightTData = rightT.data(configStr),\n      bottomTData = bottomT.data(configStr),\n      leftTData = leftT.data(configStr),\n      resizeTData = resizeT.data(configStr),\n      selectTData = selectEleObj.selectBoxTracker.data(configStr),\n      bBox = selectEleObj.selectBoxTracker.getBBox();\n\n    topTData.ox = bBox.x;\n    topTData.oy = bBox.y;\n\n    rightTData.ox = bBox.x2;\n    rightTData.oy = bBox.y;\n\n    bottomTData.ox = bBox.x;\n    bottomTData.oy = bBox.y2;\n\n    leftTData.ox = bBox.x;\n    leftTData.oy = bBox.y;\n\n    topTData.ox = bBox.x;\n    topTData.oy = bBox.y;\n\n    resizeTData.ox = bBox.x2;\n    resizeTData.oy = bBox.y2;\n\n    selectTData.ox = bBox.x;\n    selectTData.oy = bBox.y;\n    selectTData.ow = bBox.width;\n    selectTData.oh = bBox.height;\n    selectTData.ox2 = bBox.x2;\n    selectTData.oy2 = bBox.y2;\n    // on click take the selection box on top.\n    selectEleObj.selectBoxG.toFront();\n\n    topT.hide();\n    rightT.hide();\n    bottomT.hide();\n    leftT.hide();\n    resizeT.hide();\n    ele.show();\n  }\n\n  move (evt) {\n    var ele = this,\n      data = ele.data(configStr),\n      selectEleObj = data.selectEleObj,\n      chart = data.chart,\n      topT = selectEleObj.topTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      rightT = selectEleObj.rightTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      bottomT = selectEleObj.bottomTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      leftT = selectEleObj.leftTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      resizeT = selectEleObj.resizeTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      selectT = selectEleObj.selectBoxTracker,\n      canvasLeft = selectEleObj.canvasLeft, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasRight = selectEleObj.canvasRight, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasTop = selectEleObj.canvasTop, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasBottom = selectEleObj.canvasBottom, // eslint-disable-line good-practices/no-single-usage-variable\n      HALF_T_WID = -6,\n      xAxis = chart.getChildren('xAxis')[0],\n      yAxis = chart.getChildren('yAxis')[0],\n      selectTData = selectT.data(configStr),\n      attrib = {},\n      bBox,\n      dx = evt.data[0],\n      dy = evt.data[1],\n      eventArgs,\n      x,\n      y;\n\n    dx = data.xChange ? dx : 0;\n    dy = data.yChange ? dy : 0;\n\n    x = dx + data.ox;\n    y = dy + data.oy;\n\n    x = Math.min(canvasRight - (data.ow || 0), Math.max(x, canvasLeft));\n    y = Math.min(canvasBottom - (data.oh || 0), Math.max(y, canvasTop));\n\n    switch (data.position) {\n      case 1: // TOP\n        attrib.y = Math.min(selectTData.oy2, y);\n        attrib.height = Math.abs(selectTData.oy2 - y) || 1;\n        topT.attr({\n          y: y + HALF_T_WID\n        });\n        break;\n      case 2: // Right\n        attrib.x = Math.min(selectTData.ox, x);\n        attrib.width = Math.abs(selectTData.ox - x) || 1;\n        rightT.attr({\n          x: x + HALF_T_WID\n        });\n        break;\n      case 3: // Bottom\n        attrib.y = Math.min(selectTData.oy, y);\n        attrib.height = Math.abs(selectTData.oy - y) || 1;\n        bottomT.attr({\n          y: y + HALF_T_WID\n        });\n        break;\n      case 4: // Left\n        attrib.x = Math.min(selectTData.ox2, x);\n        attrib.width = Math.abs(selectTData.ox2 - x) || 1;\n        leftT.attr({\n          x: x + HALF_T_WID\n        });\n        break;\n      case 5: // Corner\n        attrib.x = Math.min(selectTData.ox, x);\n        attrib.width = Math.abs(selectTData.ox - x) || 1;\n        attrib.y = Math.min(selectTData.oy, y);\n        attrib.height = Math.abs(selectTData.oy - y) || 1;\n        resizeT.attr({\n          cx: x,\n          cy: y\n        });\n        break;\n      default:\n        attrib.x = x;\n        attrib.y = y;\n        break;\n    }\n\n    if (!ele.data('dragStarted')) {\n      bBox = selectT.getBBox();\n\n      eventArgs = {\n        selectionLeft: bBox.x,\n        selectionTop: bBox.y,\n        selectionWidth: bBox.width,\n        selectionHeight: bBox.height,\n        startXValue: xAxis.getValue(bBox.x),\n        startYValue: yAxis.getValue(bBox.y),\n        endXValue: xAxis.getValue(bBox.x + bBox.width),\n        endYValue: yAxis.getValue(bBox.y + bBox.height),\n        id: selectEleObj.id\n      };\n\n      chart.fireChartInstanceEvent('BeforeSelectionUpdate', eventArgs);\n      ele.data('dragStarted', 1);\n    }\n\n    selectT.animate(attrib);\n\n    if (selectEleObj.isVisible) {\n      selectEleObj.closeButton.hide();\n      selectEleObj.cornerInnerSymbol.hide();\n      selectEleObj.cornerOuterSymbol.hide();\n      selectEleObj.isVisible = false;\n    }\n  }\n\n  up () {\n    var ele = this,\n      data = ele.data(configStr),\n      selectEleObj = data.selectEleObj,\n      chart = data.chart,\n      xAxis = chart.getChildren('xAxis')[0],\n      yAxis = chart.getChildren('yAxis')[0],\n      topT = selectEleObj.topTracker,\n      rightT = selectEleObj.rightTracker,\n      bottomT = selectEleObj.bottomTracker,\n      leftT = selectEleObj.leftTracker,\n      resizeT = selectEleObj.resizeTracker,\n      selectT = selectEleObj.selectBoxTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      RESIZE_T_RADIUS = 15,\n      HALF_T_WID = -6,\n      bBox,\n      eventArgs;\n\n    // using setTimeout to fix for the issue #RED-476.\n    setTimeout(function () {\n      bBox = selectT.getBBox();\n\n      selectEleObj.startX = xAxis.getValue(bBox.x);\n      selectEleObj.startY = yAxis.getValue(bBox.y);\n      selectEleObj.endX = xAxis.getValue(bBox.x2);\n      selectEleObj.endY = yAxis.getValue(bBox.y2);\n\n      topT.attr({\n        x: bBox.x,\n        y: bBox.y + HALF_T_WID,\n        width: bBox.width\n      });\n      rightT.attr({\n        x: bBox.x2 + HALF_T_WID,\n        y: bBox.y,\n        height: bBox.height\n      });\n      bottomT.attr({\n        x: bBox.x,\n        y: bBox.y2 + HALF_T_WID,\n        width: bBox.width\n      });\n      leftT.attr({\n        x: bBox.x + HALF_T_WID,\n        y: bBox.y,\n        height: bBox.height\n      });\n      resizeT.attr({\n        cx: bBox.x2,\n        cy: bBox.y2\n      });\n\n      selectEleObj.closeButton.transform(t + bBox.x2 + COMMA + bBox.y);\n      selectEleObj.cornerInnerSymbol.transform(t + bBox.x2 + COMMA + bBox.y2);\n      selectEleObj.cornerOuterSymbol.transform(t + bBox.x2 + COMMA + bBox.y2);\n      selectEleObj.closeButton.show();\n      if (bBox.width < RESIZE_T_RADIUS || bBox.height < RESIZE_T_RADIUS) {\n        selectEleObj.cornerInnerSymbol.hide();\n        selectEleObj.cornerOuterSymbol.show();\n      } else {\n        selectEleObj.cornerInnerSymbol.show();\n        selectEleObj.cornerOuterSymbol.hide();\n      }\n      selectEleObj.isVisible = true;\n\n      topT.show();\n      rightT.show();\n      bottomT.show();\n      leftT.show();\n      resizeT.show();\n\n      if (ele.data('dragStarted')) {\n        eventArgs = {\n          selectionLeft: bBox.x,\n          selectionTop: bBox.y,\n          selectionWidth: bBox.width,\n          selectionHeight: bBox.height,\n          startXValue: xAxis.getValue(bBox.x),\n          startYValue: yAxis.getValue(bBox.y),\n          endXValue: xAxis.getValue(bBox.x + bBox.width),\n          endYValue: yAxis.getValue(bBox.y + bBox.height),\n          data: chart.getCollatedData(),\n          id: selectEleObj.id\n        };\n        chart.fireChartInstanceEvent('SelectionUpdated', eventArgs);\n        ele.data('dragStarted', 0);\n      }\n    }, 100);\n  }\n\n  restoreData () {\n    var chart = this,\n      datasets = [],\n      i;\n\n    chart.iterateComponents((child) => {\n      if ((child.getType && child.getType() === 'dataset')) {\n        datasets.push(child);\n      }\n    });\n\n    chart._deleteAllSelection();\n    for (i = 0; i < datasets.length; i++) {\n      datasets[i].asyncDraw();\n    }\n    chart.fireChartInstanceEvent('dataRestored', {});\n    return true;\n  }\n\n  _postSpaceManagement () {\n    super._postSpaceManagement();\n    this._deleteAllSelection();\n  }\n\n  getDSdef () {\n    return SelectScatterDataset;\n  }\n  // This method return the dataset-group definations for this charts\n  getDSGroupdef () {\n    return UNDEF;\n  }\n}\n\nexport default SelectScatter;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ScatterDataset from '@fusioncharts/charts/src/dataset/scatter';\nimport { preDefStr, extend2, pluck, pluckNumber,\n  ZEROSTRING, bindSelectionEvent, getMouseCoordinate, convertColor } from '@fusioncharts/core/src/lib';\nimport { getDepsByType, addDep } from '@fusioncharts/core/src/dependency-manager';\nimport selectScatterAnimation from './index.animation';\n\nvar COLOR_FFFFFF = 'FFFFFF',\n  XY_STR = 'xy',\n  altHGridColorStr = preDefStr.altHGridColorStr,\n  altHGridAlphaStr = preDefStr.altHGridAlphaStr;\n\naddDep({\n  name: 'selectScatterAnimation',\n  type: 'animationRule',\n  extension: selectScatterAnimation\n});\n/**\n * Creates dataset class of Select scatter\n */\nclass SelectScatterDataset extends ScatterDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'selectScatter';\n  }\n  /**\n   * Configure default settings for datasets\n   * @param {Object} datasetJSON dataset json\n   */\n  configure (datasetJSON) {\n    super.configure(datasetJSON);\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      colorM = dataSet.getFromEnv('color-manager'),\n      borderColor = pluck(chartAttr.selectbordercolor,\n        colorM.getColor('canvasBorderColor')),\n      borderAlpha = pluckNumber(chartAttr.selectborderalpha,\n        colorM.getColor('canvasBorderAlpha'));\n\n    chartConfig.selectBorderColor = // convertColor(borderColor, borderAlpha);\n    {\n      FCcolor: {\n        color: borderColor,\n        alpha: borderAlpha\n      }\n    };\n    chartConfig.selectFillColor = convertColor(\n      pluck(chartAttr.selectfillcolor,\n        colorM.getColor(altHGridColorStr)),\n      pluckNumber(chartAttr.selectfillalpha,\n        colorM.getColor(altHGridAlphaStr)));\n\n    chartConfig.selectionCancelButtonBorderColor = convertColor(pluck(\n      chartAttr.selectioncancelbuttonbordercolor, borderColor),\n    pluckNumber(chartAttr.selectioncancelbuttonborderalpha, borderAlpha));\n    chartConfig.selectionCancelButtonFillColor = convertColor(pluck(\n      chartAttr.selectioncancelbuttonfillcolor, COLOR_FFFFFF),\n    pluckNumber(chartAttr.selectioncancelbuttonfillalpha, 100));\n    chartConfig.connativeZoom = false;\n    chartConfig.zoomType = XY_STR;\n\n    if (chartAttr.submitdataasxml === ZEROSTRING && !chartAttr.formdataformat) {\n      chartAttr.formdataformat = getDepsByType('transcoder').csv && 'csv';\n    }\n    // @ temp will work after transcoder fix\n    // chartConfig.formDataFormat = pluck(chartAttr.formdataformat,\n    //             global.dataFormats.XML);\n    chartConfig.formDataFormat = pluck(chartAttr.formdataformat);\n    chartConfig.formTarget = pluck(chartAttr.formtarget, '_self');\n    chartConfig.formMethod = pluck(chartAttr.formmethod, 'POST');\n    chartConfig.submitFormAsAjax = pluckNumber(chartAttr.submitformusingajax, 1);\n  }\n  /**\n   * Draws plot graphics\n   */\n  draw () {\n    super.draw();\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      container = chart.getFromEnv('chart-container'),\n      xAxis = dataSet.getFromEnv('xAxis'),\n      yAxis = dataSet.getFromEnv('yAxis');\n\n    bindSelectionEvent(chart, {\n      selectionStart: function (data) {\n        var pos = getMouseCoordinate(container, data.originalEvent, chart), // eslint-disable-line good-practices/no-single-usage-variable\n          eventArgs = extend2({ // eslint-disable-line good-practices/no-single-usage-variable\n            selectionLeft: data.selectionLeft,\n            selectionTop: data.selectionTop,\n            selectionWidth: data.selectionWidth,\n            selectionHeight: data.selectionHeight,\n            startXValue: xAxis.getValue(data.selectionLeft, 1),\n            startYValue: yAxis.getValue(data.selectionTop, 1)\n          }, pos);\n        /**\n         * Raised when user starts to draw a selection box on a `selectScatter` chart.\n         * @event FusionCharts#selectionStart\n         *\n         * @param {number} chartX - The x-coordinate of the mouse with respect to the chart.\n         * @param {number} chartY - The y-coordinate of the mouse with respect to the chart.\n         * @param {number} pageX - The x-coordinate of the mouse with respect to the page.\n         * @param {number} pageY - The y-coordinate of the mouse with respect to the page.\n         * @param {number} startXValue - The value on the canvas x-axis where the selection started.\n         * @param {number} startYValue - The value on the canvas y-axis where the selection started.\n         */\n        data.chart.fireChartInstanceEvent('selectionStart', eventArgs);\n      },\n      selectionEnd: function (data) {\n        var pos = getMouseCoordinate(container, data.originalEvent, chart), // eslint-disable-line good-practices/no-single-usage-variable\n          eventArgs = extend2({ // eslint-disable-line good-practices/no-single-usage-variable\n            selectionLeft: data.selectionLeft,\n            selectionTop: data.selectionTop,\n            selectionWidth: data.selectionWidth,\n            selectionHeight: data.selectionHeight,\n            startXValue: xAxis.getValue(data.selectionLeft, 1),\n            startYValue: yAxis.getValue(data.selectionTop, 1),\n            endXValue: xAxis.getValue(data.selectionLeft + data.selectionWidth, 1),\n            endYValue: yAxis.getValue(data.selectionTop + data.selectionHeight, 1)\n          }, pos);\n\n        /**\n         * Raised when user completes a selection box on a `selectScatter` chart.\n         * @event FusionCharts#selectionEnd\n         *\n         * @param {number} chartX - The x-coordinate of the mouse with respect to the chart.\n         * @param {number} chartY - The y-coordinate of the mouse with respect to the chart.\n         * @param {number} pageX - The x-coordinate of the mouse with respect to the page.\n         * @param {number} pageY - The y-coordinate of the mouse with respect to the page.\n         * @param {number} startXValue - The value on the canvas x-axis where the selection started.\n         * @param {number} startYValue - The value on the canvas y-axis where the selection started.\n         * @param {number} endXValue - The value on the canvas x-axis where the selection ended.\n         * @param {number} endYValue - The value on the canvas y-axis where the selection ended.\n         * @param {number} selectionLeft - The x-coordinate from where selection started with\n         * respect to the chart.\n         * @param {number} selectionTop - The y-coordinate from where selection started with\n         * respect to the chart.\n         * @param {number} selectionWidth - The width of the selection in pixels.\n         * @param {number} selectionHeight - The height of the selection box in pixels.\n         */\n        data.chart.fireChartInstanceEvent('selectionEnd', eventArgs);\n        data.chart.createSelectionBox(data);\n      }\n    });\n  }\n}\n\nexport default SelectScatterDataset;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  '*.dataset.selectScatter': lineAnimation['*.dataset.line']\n};\n","import Multilevelpie from '@fusioncharts/powercharts/src/chart/multilevelpie';\nexport default Multilevelpie;\n","import CommonAPI from '@fusioncharts/charts/src/chart/_internal/commonchartapi';\nimport datasetFactory from '../../factories/mlpie-dataset';\nconst MULTILEVELPIE = 'multiLevelPie';\nclass MultilevelPie extends CommonAPI {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MultilevelPie';\n  }\n\n  constructor () {\n    super();\n    this.defaultPaletteOptions = null;\n    this.registerFactory('dataset', datasetFactory, ['canvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MultilevelPie';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = false;\n    config.hasLegend = false;\n    config.defaultDatasetType = MULTILEVELPIE;\n    config.valuefontbold = 0;\n    config.skipCanvasDrawing = true;\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let categories = this.getFromEnv('dataSource').category;\n    if (!(categories && categories[0]) || !Array.isArray(categories)) {\n      return true;\n    }\n  }\n\n  _spaceManager () {\n    var availableHeight,\n      iapi = this,\n      config = iapi.config;\n    //* ***** Manage space\n    iapi._allocateSpace((iapi._manageActionBarSpace &&\n              iapi._manageActionBarSpace(config.availableHeight * 0.225)) || {});\n    availableHeight = config.canvasHeight * 0.7; // eslint-disable-line good-practices/no-single-usage-variable\n    // a space manager that manages the space for the tools as well as the captions.\n    iapi._manageChartMenuBar(availableHeight);\n    iapi.allocateDimensionOfChartMenuBar();\n  }\n}\nexport default MultilevelPie;\n","import { datasetFactory } from '@fusioncharts/core/src/lib';\nimport MultiLevelPieDataset from '../dataset/multilevelpie';\n/**\n * function to  create dataset, groupmaneger.\n * assign dataset to group manager.\n **/\nexport default function (chart) {\n  let categories,\n    catLength,\n    length,\n    datasetJSON = {}; // eslint-disable-line good-practices/no-single-usage-variable\n\n  categories = (chart.config.categories = chart.getFromEnv('dataSource').category || []);\n  catLength = categories.length;\n\n  if (!length && catLength) {\n    datasetJSON = categories;\n    length = catLength;\n  }\n  // if the data has no categories in them.\n  if (!catLength) {\n    chart.setChartMessage();\n    return;\n  }\n  datasetFactory(chart, MultiLevelPieDataset, 'dataset', length, [datasetJSON]);\n}\n","import Pie2DDataset from '@fusioncharts/charts/src/dataset/pie2d';\nimport { PATTERN_TYPES } from '@fusioncharts/charts/src/dataset/column';\nimport { COMMASPACE, ZEROSTRING, pluck, pluckNumber,\n  toRaphaelColor, parseUnsafeString, getDashStyle, getValidValue,\n  parseTooltext, getFirstValue, convertColor, TRACKER_FILL, hashify,\n  BLANKSTRING, extend2, getSuggestiveRotation } from '@fusioncharts/core/src/lib';\nimport { addDep, getDep } from '@fusioncharts/core/src/dependency-manager';\nimport multilevelpieAnimation from './index.animation';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport raphaelShapesRingpath from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.ringpath';\n\nlet Raphael = getDep('redraphael', 'plugin'),\n  BLANK = '',\n  NORMALSTRING = 'normal',\n  COLOR_FFFFFF = 'FFFFFF',\n  COLOR_000000 = '000000',\n  HUNDRED_PERCENT = '100%',\n  ZERO_STR = '0',\n  pInt = function (s, mag) {\n    return parseInt(s, mag || 10);\n  },\n  DASH_DEF = 'none',\n  UNDEF,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  POINTER = 'pointer',\n  EVENTARGS = 'eventArgs',\n  PX = 'px',\n  INNERRADIUS = /^[0-9]+\\%?$|^([0-9]+[.][0-9]+)\\%?$/,\n  calculateInnerRadius = function (innerRadius, pieRadius) {\n    let innerRadiusLength = innerRadius && innerRadius.length, // eslint-disable-line good-practices/no-single-usage-variable\n      calculatedInnerRadius;\n    if (!innerRadius) {\n      return 0;\n    }\n    if (innerRadius.charAt(innerRadiusLength - 1) === '%') {\n      // execute when innerRadius is given as percentage\n      calculatedInnerRadius = pluckNumber(pieRadius) * (pluckNumber(innerRadius.split('%')[0]) / 100);\n    } else {\n      // execute when innerRadius is given in pixels.\n      calculatedInnerRadius = pluckNumber(innerRadius);\n    }\n\n    if (calculatedInnerRadius < pieRadius) {\n      return calculatedInnerRadius;\n    } return 0;\n  };\naddDep({\n  name: 'multilevelpieAnimation',\n  type: 'animationRule',\n  extension: multilevelpieAnimation\n});\n\n// Adding required shapes for chart.\nraphaelShapesRingpath(Raphael);\nclass MultiLevelPieDataset extends Pie2DDataset {\n  constructor () {\n    super();\n\n    this.components = {\n      data: []\n    };\n    this.graphics = {\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'multiLevelPie';\n  }\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.config.JSONData = datasetJSON;\n    var fontBdrColor,\n      dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      dataSetConfig = dataSet.config || (dataSet.config = {}),\n      dataLabels = dataSetConfig.dataLabelOptions || (dataSetConfig.dataLabelOptions = {}),\n      piePlotOptions = dataSetConfig.piePlotOptions,\n      style = chart.config.style,\n      chartAttrs = chart.getFromEnv('dataSource').chart,\n      centerAngle = pluckNumber(-chartAttrs.centerangle, 180),\n      totalAngle = pluckNumber(chartAttrs.totalangle, 360),\n      tranverseToRoot = function (dataInstance, evtType) {\n        let dataObj = dataInstance;\n        while (dataObj.graphics.element) {\n          (dataObj.graphics.element).attr({\n            fill: evtType === 'mouseover' ? dataSetConfig.hoverFillColor : (dataObj.config || this.data('plotItem')).color\n          });\n          dataObj = dataObj.config.parent;\n        }\n      },\n      traverseAllChildren = function (dataObj, evtType) {\n        var k;\n        (dataObj.graphics.element).attr({\n          fill: evtType === 'mouseover' ? dataSetConfig.hoverFillColor : (dataObj.config || this.data('plotItem')).color\n        });\n        for (k = 0; k < (dataObj.components.data && dataObj.components.data.length); k++) {\n          traverseAllChildren.call(this, dataObj.components.data[k], evtType);\n        }\n      },\n      mouseEvtHandler = function (evtType) {\n        if (!dataSetConfig.useHoverColor) {\n          return;\n        }\n        var point = this.data('plotItem'),\n          selfRef = point.selfRef;\n\n        if (!dataSetConfig.highlightParentPieSlices && !dataSetConfig.highlightChildPieSlices) {\n          (selfRef.graphics.element).attr({\n            fill: evtType === 'mouseover' ? dataSetConfig.hoverFillColor : (selfRef.config || point).color\n          });\n        } else if (!dataSetConfig.highlightParentPieSlices && dataSetConfig.highlightChildPieSlices) {\n          traverseAllChildren.call(this, selfRef, evtType);\n        } else if (dataSetConfig.highlightParentPieSlices && !dataSetConfig.highlightChildPieSlices) {\n          tranverseToRoot.call(this, selfRef, evtType);\n        } else if (dataSetConfig.highlightParentPieSlices && dataSetConfig.highlightChildPieSlices) {\n          tranverseToRoot.call(this, selfRef, evtType);\n          traverseAllChildren.call(this, selfRef, evtType);\n        }\n      };\n    dataSetConfig.usePattern = pluckNumber(chartConfig.usePattern, 0);\n    dataSetConfig.patternType = PATTERN_TYPES.includes(datasetJSON.patterntype)\n      ? datasetJSON.patterntype\n      : chartConfig.patternType;\n    dataSetConfig.patternDensity = pluckNumber(datasetJSON.patterndensity, chartConfig.patternDensity);\n    dataSetConfig.patternAlpha = pluckNumber(datasetJSON.patternalpha, chartConfig.patternAlpha);\n    dataSetConfig.patternBgColor = pluck(datasetJSON.patternbgcolor, dataSetConfig.patternBgColor);\n    dataSetConfig.enableAnimation = pluckNumber(chartAttrs.animation,\n      chartAttrs.defaultanimation, 1);\n    dataSetConfig.animation = !dataSetConfig.enableAnimation ? false : {\n      duration: pluckNumber(chartAttrs.animationduration, chartAttrs.moveduration, 1) * 1000\n    };\n    dataSetConfig.showShadow = pluckNumber(chartAttrs.showshadow, 0);\n    dataSetConfig.useHoverColor = Boolean(pluckNumber(chartAttrs.usehovercolor, 1));\n    if (dataSetConfig.usePattern) {\n      dataSetConfig.useHoverColor = 0;\n    }\n    dataSetConfig.showTextOutline = Boolean(pluckNumber(chartAttrs.textoutline, 0));\n    dataSetConfig.hoverFillColor = convertColor(pluck(chartAttrs.hoverfillcolor,\n      'FF5904'), pluckNumber(chartAttrs.hoverfillalpha, 100));\n    fontBdrColor = getFirstValue(chartAttrs.valuebordercolor, BLANK);\n    fontBdrColor = fontBdrColor ? convertColor(\n      fontBdrColor, pluckNumber(chartAttrs.valueborderalpha, chartAttrs.valuebgalpha,\n        chartAttrs.valuealpha, 100)) : BLANK;\n    // create the style object if required.\n    // fix for multilevel pie datavalue cosmetics issue RED-1594\n    !dataLabels.style && (dataLabels.style = {\n      fontFamily: pluck(chartAttrs.valuefont, style.fontFamily),\n      fontSize: pluckNumber(this.computeFontSize(chartAttrs.valuefontsize),\n        pInt(style.fontSize, 10)) + PX,\n      color: convertColor(pluck(chartAttrs.valuefontcolor, style.color),\n        pluckNumber(chartAttrs.valuefontalpha,\n          chartAttrs.valuealpha, 100)),\n      fontWeight: pluckNumber(chartAttrs.valuefontbold) ? 'bold' : NORMALSTRING,\n      fontStyle: pluckNumber(chartAttrs.valuefontitalic) ? 'italic' : NORMALSTRING,\n      backgroundColor: chartAttrs.valuebgcolor\n        ? convertColor(chartAttrs.valuebgcolor,\n          pluckNumber(chartAttrs.valuebgalpha, chartAttrs.valuealpha, 100)) : BLANK,\n      border: fontBdrColor || chartAttrs.valuebgcolor\n        ? (pluckNumber(chartAttrs.valueborderthickness, 1) + 'px solid') : BLANK,\n      borderPadding: pluckNumber(chartAttrs.valueborderpadding, 2),\n      borderThickness: pluckNumber(chartAttrs.valueborderthickness, style.borderThickness, 1),\n      borderRadius: pluckNumber(chartAttrs.valueborderradius, style.borderRadius, 0),\n      borderColor: fontBdrColor,\n      borderDash: pluckNumber(chartAttrs.valueborderdashed, 0)\n        ? getDashStyle(pluckNumber(chartAttrs.valueborderdashlen, 4),\n          pluckNumber(chartAttrs.valueborderdashgap, 2)) : DASH_DEF\n    });\n\n    // stop point slicing\n    !piePlotOptions && (piePlotOptions = (dataSetConfig.piePlotOptions = {}));\n    piePlotOptions.allowPointSelect = false;\n    dataSetConfig.borderAlpha = pluck(chartAttrs.plotborderalpha, chartAttrs.pieborderalpha, 100);\n    dataSetConfig.borderColor = convertColor(pluck(chartAttrs.plotbordercolor,\n      chartAttrs.piebordercolor, COLOR_FFFFFF), chartAttrs.showplotborder !== ZEROSTRING\n      ? pluck(chartAttrs.plotborderalpha, chartAttrs.pieborderalpha, 100) : 0);\n    dataSetConfig.rawborderColor = pluck(chartAttrs.plotbordercolor,\n      chartAttrs.piebordercolor, COLOR_FFFFFF);\n    dataSetConfig.showplotborder = pluckNumber(chartAttrs.showplotborder, 1);\n    dataSetConfig.showTooltip = pluckNumber(chartAttrs.showtooltip, 1);\n\n    dataSetConfig.borderWidth = pluckNumber(chartAttrs.pieborderthickness,\n      chartAttrs.plotborderthickness, 1);\n\n    piePlotOptions.startingAngle = 0; // set the chart's startingAngle as 0 [alwase]\n    piePlotOptions.size = HUNDRED_PERCENT;\n\n    dataSetConfig.highlightParentPieSlices = pluckNumber(chartAttrs.highlightparentpieslices,\n      chartAttrs.highlightparentpienodes, 1);\n    dataSetConfig.highlightChildPieSlices = pluckNumber(chartAttrs.highlightchildpieslices,\n      chartAttrs.highlightchildpienodes, 0);\n\n    dataSetConfig.showLabels = pluckNumber(chartAttrs.showlabels, 1);\n    dataSetConfig.showValues = pluckNumber(chartAttrs.showvalues, 0);\n    dataSetConfig.showValuesInTooltip = pluckNumber(chartAttrs.showvaluesintooltip,\n      chartAttrs.showvalues, 0);\n    dataSetConfig.showPercentValues = pluckNumber(chartAttrs.showpercentvalues,\n      chartAttrs.showpercentagevalues, 0);\n    dataSetConfig.showPercentInTooltip = pluckNumber(chartAttrs.showpercentintooltip, 0);\n    dataSetConfig.toolTipSepChar = pluck(chartAttrs.tooltipsepchar, chartAttrs.hovercapsepchar, COMMASPACE);\n    dataSetConfig.labelSepChar = parseUnsafeString(pluck(chartAttrs.labelsepchar, dataSetConfig.toolTipSepChar));\n    dataSetConfig.tooltext = chartAttrs.plottooltext;\n    dataSetConfig.alpha = pluck(chartAttrs.plotfillalpha, chartAttrs.piefillalpha, 100);\n    dataSetConfig.startAngle = (centerAngle - (totalAngle / 2)) * (Math.PI / 180);\n    dataSetConfig.endtAngle = (centerAngle + (totalAngle / 2)) * (Math.PI / 180);\n    dataSetConfig.initialAngle = dataSetConfig.endtAngle;\n    dataSetConfig.originX = pluckNumber(chartAttrs.originx);\n    dataSetConfig.originY = pluckNumber(chartAttrs.originy);\n\n    dataSetConfig.events = {\n      mouseOver: function () {\n        mouseEvtHandler.call(this, 'mouseover');\n      },\n      mouseOut: function () {\n        mouseEvtHandler.call(this, 'mouseout');\n      }\n    };\n\n    // remove the plotboder\n    chartConfig.plotBorderWidth = 0;\n\n    // get the label rotation, overlap and ellipses attributes if present\n    dataSetConfig.autoRotateLabels = (chartConfig.autorotatelabels) ? pluckNumber(chartConfig.autorotatelabels) : 0;\n    dataSetConfig.useEllipsesWhenOverflow = (chartConfig.useellipseswhenoverflow) ? pluckNumber(chartConfig.useellipseswhenoverflow) : 1;\n    dataSetConfig.skipOverlapLabels = (chartConfig.skipoverlaplabels) ? pluckNumber(chartConfig.skipoverlaplabels) : 0;\n\n    // remove the plotboder\n    chartConfig.plotBorderWidth = 0;\n    dataSetConfig.maxLevel = dataSet.addMSPieCat(dataSet.config.JSONData, 1, dataSet, dataSetConfig.startAngle,\n      dataSetConfig.endtAngle);\n    dataSetConfig.pieRadius = parseInt(chartAttrs.pieradius, 10);\n\n    // dataSetConfig.innerRadius = pluckNumber(Number(pluck(chartAttrs.innerradius, '0%').split('%')[0]), 0);\n    dataSetConfig.innerRadius = ZERO_STR;\n    (INNERRADIUS.test(chartAttrs.innerradius)) && (dataSetConfig.innerRadius = pluck(chartAttrs.innerradius));\n\n    dataLabels.distance = 0;\n    dataLabels.placeLabelsInside = true;\n  }\n  // doHide is a Boolean Flag to hide the element or not.\n  // All the graphical elements in excess are pushed to the graphics pool. They are hidden only after the\n  // entire draw is complete.\n  removalFn (ele, prop) {\n    var dataSet = this,\n      // eslint-disable-next-line good-practices/no-function-dependency\n      hideFN = function () {\n        this.remove();\n      };\n\n    dataSet.getFromEnv('animationManager').setAnimation({\n      el: ele,\n      label: prop === 'element' ? 'ringpath' : 'label',\n      component: dataSet,\n      callback: hideFN\n    });\n  }\n  removeGraphics (obj) {\n    var i,\n      prop,\n      dataSet = this,\n      childData = obj.components && obj.components.data,\n      len,\n      graphics = obj.graphics;\n    if (childData) {\n      len = childData.length;\n      for (i = 0; i < len; i += 1) {\n        dataSet.removeGraphics(childData[i]);\n      }\n    }\n\n    if (obj.graphics) {\n      for (prop in graphics) {\n        if (graphics.hasOwnProperty(prop)) {\n          dataSet.removalFn(obj.graphics[prop], prop);\n        }\n      }\n    }\n  }\n  removeChild (removalStore, doHide, type) {\n    var i,\n      elemObj,\n      dataSet = this;\n    if (removalStore.length) {\n      for (i = 0; i < removalStore.length; i += 1) {\n        elemObj = removalStore[i];\n        if (type) {\n          dataSet.removalFn(elemObj, doHide, type);\n        } else {\n          dataSet.removeGraphics(elemObj, doHide);\n        }\n      }\n    } else {\n      // if the removalStore is in the Object structure.\n      for (i in removalStore) {\n        dataSet.removeChild(removalStore[i], doHide, i);\n      }\n    }\n  }\n  addMSPieCat (catArr, level, parentObj, startAngle, endAngle) {\n    var dataObj,\n      dataObjLen,\n      cat = extend2([], catArr),\n      catObjLen,\n      catLen = cat.length,\n      dataSet = this,\n      data = parentObj.components.data,\n      dataSetConfig = dataSet.config,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      sharePercent,\n      totalValue = 0,\n      catObj,\n      catVal,\n      i,\n      label,\n      labelSepChar = dataSetConfig.labelSepChar,\n      fillalpha,\n      valueStr,\n      pValueStr,\n      toolText,\n      displayValue,\n      rawColor,\n      showLabel,\n      patternType,\n      patternAngle,\n      patternDensity,\n      patternSize,\n      patternAlpha,\n      patternBgColor,\n      showPlotBorder,\n      maxLevel = level,\n      dataLength = data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removalFn = function () {\n        dataSet.removeChild.apply(dataSet, arguments);\n      },\n      catLength = cat.length,\n      totAngle = endAngle - startAngle, // eslint-disable-line good-practices/no-single-usage-variable\n      tempAngle,\n      cumilative = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      preDataOldEndAngle;\n\n    for (i = 0; i < catLen; i += 1) {\n      // store for letter use\n      catObj = cat[i];\n      catObj._userValue = numberFormatter.getCleanValue(catObj.value, true);\n      catObj._value = pluckNumber(catObj._userValue, 1);\n      totalValue += catObj._value;\n    }\n    // Total value can't be zero, since its used in denominator to find ratio.\n    totalValue = totalValue || 1;\n    // add the category\n    sharePercent = totAngle / totalValue; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = catLen - 1; i >= 0; i -= 1) {\n      catObj = cat[i];\n      catVal = sharePercent * catObj._value;\n      label = parseUnsafeString(pluck(catObj.label, catObj.name));\n      valueStr = catObj._userValue !== null\n        ? numberFormatter.dataLabels(catObj._userValue) : BLANK;\n      pValueStr = numberFormatter.percentValue((catObj._value /\n                    totalValue) * 100);\n      // pointIndex = sLevel.length - 1;\n      fillalpha = pluckNumber(catObj.alpha, dataSetConfig.alpha);\n      showLabel = pluckNumber(catObj.showlabel, dataSetConfig.showLabels);\n      showPlotBorder = pluckNumber(dataSetConfig.showplotborder, 1);\n      displayValue = (showLabel === 1) ? label : BLANK;\n\n      if (pluckNumber(catObj.showvalue, dataSetConfig.showValues) === 1) {\n        if (dataSetConfig.showPercentValues) {\n          displayValue += displayValue !== BLANK ? (labelSepChar + pValueStr) : pValueStr;\n        } else if (valueStr !== UNDEF && valueStr !== BLANK) {\n          displayValue += displayValue !== BLANK ? (labelSepChar + valueStr) : valueStr;\n        }\n      }\n      toolText = dataSetConfig.showTooltip ? parseUnsafeString(pluck(catObj.tooltext, catObj.hovertext,\n        dataSetConfig.tooltext), false) : UNDEF;\n      if (toolText === BLANK) {\n        toolText = label;\n        if (dataSetConfig.showValuesInTooltip) {\n          if (dataSetConfig.showPercentInTooltip) {\n            toolText += toolText !== BLANK ? (labelSepChar + pValueStr) : pValueStr;\n          } else if (valueStr !== UNDEF && valueStr !== BLANK) {\n            toolText += toolText !== BLANK ? (labelSepChar + valueStr) : valueStr;\n          }\n        }\n      } else {\n        toolText = parseTooltext(toolText, [1, 2, 3, 14], {\n          percentValue: pValueStr,\n          label: label,\n          formattedValue: valueStr\n        }, catObj);\n      }\n\n      dataObj = data[i];\n      tempAngle = startAngle + cumilative;\n      cumilative += catVal;\n      if (!dataObj) {\n        dataObj = data[i] = {\n          components: {\n            data: []\n          },\n          config: {},\n          graphics: {}\n        };\n      }\n      // store old end angle for newly added element's aimation position\n      if (dataObj.graphics.element) {\n        preDataOldEndAngle = dataObj.config.startAngle + dataObj.config.angleStrech;\n      }\n      patternType = PATTERN_TYPES.includes(catObj.patterntype)\n        ? catObj.patterntype\n        : dataSetConfig.patternType;\n      patternAngle = pluckNumber(catObj.patternangle,\n        dataSet.getFromEnv('chart-attrib').patternangle, patternType === PATTERN_TYPES[0] ? 40 : 0);\n      patternDensity = pluckNumber(catObj.patterndensity, dataSetConfig.patternDensity);\n      patternSize = pluckNumber(catObj.patternsize,\n        patternType === PATTERN_TYPES[0] ? 2 : 4);\n      patternAlpha = pluckNumber(catObj.patternalpha, dataSetConfig.patternAlpha);\n      patternBgColor = pluck(catObj.patternbgcolor, dataSetConfig.patternBgColor);\n      rawColor = catObj.color || dataSet.getFromEnv('color-manager').getPlotColor();\n      dataObj.config = {\n        patternType,\n        patternAngle,\n        patternDensity,\n        patternSize,\n        patternAlpha,\n        patternBgColor,\n        initialAngle: preDataOldEndAngle || (parentObj.config || parentObj.config).initialAngle,\n        startAngle: tempAngle,\n        alpha: fillalpha,\n        angleStrech: catVal,\n        level: level,\n        displayValue: displayValue,\n        showLabel: showLabel,\n        showPlotBorder: showPlotBorder,\n        toolText: toolText,\n        link: getValidValue(catObj.link),\n        rawColor,\n        doNotSlice: true, // added to stop slicing\n        color: convertColor(rawColor, fillalpha),\n        borderAlpha: pluck(catObj.plotborderalpha, dataSetConfig.borderAlpha),\n        borderWidth: pluckNumber(catObj.borderwidth, dataSetConfig.borderWidth),\n        borderColor: pluck(catObj.bordercolor, dataSetConfig.borderColor),\n        rawborderColor: pluck(catObj.bordercolor, dataSetConfig.rawborderColor),\n        dashStyle: pluckNumber(catObj.valueborderdashed, 0)\n          ? getDashStyle(pluckNumber(catObj.borderdashlen, 4),\n            pluckNumber(catObj.borderdashgap, 2)) : DASH_DEF,\n        shadow: {\n          opacity: Math.round(fillalpha > 50 ? fillalpha * fillalpha * fillalpha * 0.0001\n            : fillalpha * fillalpha * 0.01) * 0.01\n        },\n        isSingleTon: !((catLen > 1))\n      };\n      if (dataSetConfig.usePattern) {\n        dataObj.config.borderColor = dataObj.config.color;\n        dataObj.config.rawborderColor = hashify(rawColor);\n      }\n      dataObj.config.parent = parentObj;\n\n      dataObj.config.dataLabelStyle = dataSet._configureDataLabelStyle(catObj);\n\n      if (catObj.category) {\n        maxLevel = Math.max(maxLevel, dataSet.addMSPieCat(catObj.category, level + 1,\n          dataObj, tempAngle, (catVal + tempAngle)));\n        if ((dataObjLen = dataObj.components.data.length) > (catObjLen = catObj.category.length)) {\n          removalFn(dataObj.components.data.splice(dataObjLen - 1, catObjLen));\n        }\n      } else {\n        dataObjLen = dataObj.components.data.length;\n        if (dataObjLen) {\n          // no child category, recursively remove existing childs (dataObj.components.data)\n          removalFn(dataObj.components.data.splice(0, dataObjLen));\n        }\n      }\n    }\n    // remove estra data\n    if (dataLength > catLength) {\n      // recursively remove elements with child\n      removalFn(data.splice(catLength));\n    }\n    return maxLevel;\n  }\n\n  parsePlotAttributes (parentInstance) {\n    var angle,\n      parentObj = parentInstance,\n      _textAttrs,\n      centerDistance,\n      level,\n      dataSet = this,\n      dataSetConfig = dataSet.config || {},\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      seriesDataLabelsStyle = chartConfig.dataLabelStyle,\n      setDataLabelStyle,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasHeight = chartConfig.canvasHeight,\n      cx = pluckNumber(dataSetConfig.originX, chartConfig.canvasLeft + canvasWidth * 0.5),\n      cy = pluckNumber(dataSetConfig.originY, chartConfig.canvasTop + canvasHeight * 0.5),\n      r,\n      r2,\n      color,\n      val,\n      displayValue,\n      setLink,\n      angle1,\n      angle2,\n      i,\n      setGraphics,\n      setConfig,\n      element,\n      pieSize = pluckNumber(dataSetConfig.pieRadius * 2, Math.min(canvasWidth, canvasHeight)),\n      // innerRadius in diameter of inner circle\n      innerRadius = calculateInnerRadius(dataSetConfig.innerRadius, pieSize / 2),\n      pool = dataSet.config.pool || (dataSet.config.pool = {}),\n      // either the user-specified size is chosen or the minimum aspect dimension is choosen\n      // pieSize is diameter of full pie\n      seriesHalfWidth = (pieSize - 2 * innerRadius) / (2 * dataSetConfig.maxLevel);\n    dataSetConfig.innerSize = innerRadius * 2;\n    if (!parentObj) {\n      parentObj = dataSet;\n    }\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.parsePlotAttributes(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    level = setConfig.level;\n    if (level) {\n      r = ((level) * seriesHalfWidth) + innerRadius;\n      r2 = ((level - 1) * seriesHalfWidth) + innerRadius;\n\n      // Save the radius value for later thickness calculation\n      setConfig.outerRadius = r;\n      setConfig.innerRadius = r2;\n\n      setGraphics = parentObj.graphics;\n      val = setConfig.angleStrech;\n      displayValue = setConfig.displayValue;\n      // toolText = setConfig.toolText;\n      setLink = !!setConfig.link;\n      color = setConfig.color;\n\n      angle1 = setConfig.startAngle;\n      angle2 = angle1 + setConfig.angleStrech;\n      element = setGraphics.element;\n      if (pool.element && pool.element.length) {\n        element = setGraphics.element = element || pool.element.shift();\n      }\n      setConfig.plotItem = {\n        chart: chart,\n        link: setConfig.link,\n        value: val,\n        color: color,\n        labelText: displayValue,\n        graphics: {\n          element: element\n        },\n        selfRef: parentObj\n      };\n      setConfig.eventArgs = {\n        alpha: setConfig.alpha,\n        borderAlpha: setConfig.borderAlpha,\n        link: setConfig.link,\n        label: setConfig.displayValue,\n        showLabel: setConfig.showLabel,\n        toolText: setConfig.toolText,\n        color: setConfig.rawColor,\n        borderColor: setConfig.rawborderColor,\n        borderThickness: setConfig.borderWidth,\n        showPlotBorder: setConfig.showPlotBorder\n      };\n      if (dataSetConfig.usePattern) {\n        setConfig.eventArgs.pattern = {\n          patternType: setConfig.patternType,\n          patternColor: setConfig.rawColor,\n          patternBgColor: setConfig.patternBgColor === TRACKER_FILL ? UNDEF : setConfig.patternBgColor\n        };\n        delete setConfig.eventArgs.color;\n      }\n      setConfig.props = {\n        element: {\n          attr: {\n            ringpath: [cx, cy, r, r2, angle1, angle2],\n            'stroke-width': setConfig.borderWidth,\n            'stroke': setConfig.borderColor,\n            fill: toRaphaelColor(setConfig.color),\n            'stroke-dasharray': setConfig.dashStyle,\n            cursor: setLink ? POINTER : BLANKSTRING\n          }\n        }\n      };\n\n      setConfig.props.element.patternAttr = {\n        patternType: setConfig.patternType,\n        patternAngle: setConfig.patternAngle,\n        patternDensity: setConfig.patternDensity,\n        patternSize: setConfig.patternSize,\n        color: setConfig.color,\n        patternAlpha: setConfig.patternAlpha,\n        patternBgColor: setConfig.patternBgColor,\n        alpha: setConfig.alpha,\n        x: cx,\n        y: cy\n      };\n      if ((displayValue !== UNDEF) && (displayValue !== BLANKSTRING)) {\n        angle = (angle1 + angle2) / 2;\n        // for the innermost Concentric circle the center distance is presumed to be zero\n        centerDistance = ((r2 === 0) && setConfig.isSingleTon) ? 0 : r2 + ((r - r2) / 2);\n        if (!(_textAttrs = setConfig._textAttrs)) {\n          _textAttrs = setConfig._textAttrs = {};\n        }\n\n        setDataLabelStyle = setConfig.dataLabelStyle;\n\n        _textAttrs.text = displayValue;\n        _textAttrs.fill = setDataLabelStyle.color || COLOR_000000;\n        _textAttrs.direction = chartConfig.textDirection;\n        _textAttrs.cursor = setLink ? POINTER : BLANKSTRING;\n        _textAttrs.x = cx + (centerDistance * Math.cos(angle));\n        _textAttrs.y = cy + (centerDistance * Math.sin(angle));\n        _textAttrs['line-height'] = seriesDataLabelsStyle.lineHeight;\n        _textAttrs['text-bound'] = [setDataLabelStyle.backgroundColor,\n          setDataLabelStyle.borderColor,\n          seriesDataLabelsStyle.borderThickness,\n          seriesDataLabelsStyle.borderPadding,\n          seriesDataLabelsStyle.borderRadius,\n          seriesDataLabelsStyle.borderDash];\n      }\n    }\n  }\n\n  /**\n   * Parses label attributes and position during post space management\n   *\n   * @param {any} parentObj\n   * @memberof MultiLevelPieDataset\n   */\n  parseLabelAttributes (parentInstance) {\n    var dataSet = this,\n      parentObj = parentInstance,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      displayValue,\n      i,\n      setConfig;\n\n    // dataLabelsLayer.show();\n    !parentObj && (parentObj = dataSet);\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.parseLabelAttributes(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    // plotItem = setConfig.plotItem;\n    displayValue = setConfig.displayValue;\n    if (setConfig.level) {\n      if ((displayValue !== UNDEF) && (displayValue !== BLANKSTRING)) {\n        setConfig.props.label = {\n          attr: setConfig._textAttrs\n        };\n      }\n    }\n  }\n\n  draw (parentInstance) {\n    var dataSet = this,\n      parentObj = parentInstance,\n      dataSetConfig = dataSet.config,\n      chart = dataSet.getFromEnv('chart'),\n      dataSetComponents = dataSet.components,\n      len = dataSetComponents.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      setGraphics,\n      setConfig,\n      element,\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n      events = dataSetConfig.events || {},\n      plotHoverFN = function (e) {\n        var o = this,\n          mouseOver = events.mouseOver,\n          plotItem = o.plotItem || o.data('plotItem'),\n          dataset = plotItem.chart.getDatasets()[0]; // eslint-disable-line good-practices/no-single-usage-variable\n        chart.plotEventHandler(o, e, ROLLOVER);\n        mouseOver && mouseOver.call(o);\n        dataset.fireEvent('datasetrollover', { pValue: plotItem.pValue, value: plotItem.value, displayValue: setConfig.displayValue });\n      },\n      plotMouseOut = function (e) {\n        var o = this,\n          mouseOut = events.mouseOut,\n          plotItem = o.plotItem || o.data('plotItem'),\n          chartAPI = plotItem.chart,\n          dataset = chartAPI.getDatasets()[0]; // eslint-disable-line good-practices/no-single-usage-variable\n        chartAPI.plotEventHandler(o, e, ROLLOUT);\n        mouseOut && mouseOut.call(o);\n        dataset.fireEvent('datasetrollout', { pValue: plotItem.pValue, value: plotItem.value, displayValue: setConfig.displayValue });\n      },\n      // Fired when clicked over the hot elements.\n      clickFunc = function (setDataArr) {\n        var ele = this; // eslint-disable-line good-practices/no-single-usage-variable\n        chart.plotEventHandler(ele, setDataArr);\n      },\n      pool = dataSet.config.pool || (dataSet.config.pool = {}),\n      removeDataArr = dataSetComponents.removeDataArr;\n    // dataSetConfig.innerSize = innerRadius * 2;\n\n    removeDataArr && removeDataArr.length && dataSet.removeElement();\n    if (!parentObj) {\n      parentObj = dataSet;\n      dataLabelsLayer.css(chart.config.dataLabelStyle);\n    }\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.draw(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    if (setConfig.level) {\n      setGraphics = parentObj.graphics;\n      element = setGraphics.element;\n      if (pool.element && pool.element.length) {\n        element = setGraphics.element = element || pool.element.shift();\n      }\n      // Create/reuse element\n      element = setGraphics.element = dataSet.getFromEnv('animationManager').setAnimation({\n        el: setGraphics.element || 'ringpath',\n        attr: setConfig.props.element.attr,\n        container: chart.getChildContainer('plotGroup'),\n        component: dataSet,\n        state: 'appearing',\n        label: 'ringpath'\n      });\n\n      element.addPattern(setConfig.props.element.patternAttr, dataSetConfig.usePattern);\n\n      element.shadow(dataSetConfig.showShadow && !!setConfig.shadow)\n        .data('plotItem', setConfig.plotItem)\n        .data(EVENTARGS, setConfig.eventArgs)\n        .on('fc-mouseover', plotHoverFN)\n        .on('fc-mouseout', plotMouseOut)\n        .on('fc-click', clickFunc);\n      dataSet.getFromEnv('toolTipController').enableToolTip(element, setConfig.toolText);\n\n      if (!i && !dataSetConfig._drawn) {\n        dataSetConfig._drawn = true;\n        dataLabelsLayer.show();\n        dataSet.addJob('labelJob', dataSet.drawLabel.bind(dataSet), priorityList.label);\n      }\n    } else {\n      // If the chart is already drawn, then instead of sheduling the label drawing, directly draw the\n      // labels.\n      dataSetConfig._drawn && dataSet.drawLabel();\n      // at the end of all the tree structure, hide all the pool elements.\n      dataSet.removeChild(dataSet.config.pool, true);\n    }\n  }\n  drawLabel (parentInstance) {\n    var dataSet = this,\n      config = dataSet.config,\n      parentObj = parentInstance,\n      chart = dataSet.getFromEnv('chart'),\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      labelSmartObj,\n      angle,\n      angleStretch,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      chartConfig = chart.config,\n      labelAttrs,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      tooltipOptions = chartConfig.tooltip || {},\n      isTooltip = tooltipOptions && tooltipOptions.enabled !== false, // eslint-disable-line good-practices/no-single-usage-variable\n      toolText,\n      displayValue,\n      tempLabel,\n      i,\n      setGraphics,\n      setConfig,\n      label,\n      events = (config || {}).events || {},\n      labelHoverFN = function (e) {\n        var o = this,\n          mouseOver = events.mouseOver;\n        chart.plotEventHandler(o, e, ROLLOVER);\n        mouseOver && mouseOver.call(o);\n      },\n      labelOutFN = function (e) {\n        var o = this,\n          mouseOut = events.mouseOut;\n        chart.plotEventHandler(o, e, ROLLOUT);\n        mouseOut && mouseOut.call(o);\n      },\n      // Fired when clicked over the hot elements.\n      clickFunc = function (setDataArr) {\n        var ele = this; // eslint-disable-line good-practices/no-single-usage-variable\n        chart.plotEventHandler(ele, setDataArr);\n      },\n      pool = config.pool || (config.pool = {}),\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup');\n\n    dataLabelsLayer.show();\n    !parentObj && (parentObj = dataSet);\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.drawLabel(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    displayValue = setConfig.displayValue;\n    if (setConfig.level) {\n      setGraphics = parentObj.graphics;\n      tempLabel = setGraphics.label;\n      angleStretch = setConfig.angleStrech;\n      // Condition to check if skipOverlapLabels is set to true\n      if ((displayValue !== UNDEF) && (displayValue !== BLANKSTRING) && (!config.skipOverlapLabels || (config.skipOverlapLabels && angleStretch > 0.1))) {\n        label = setGraphics.label;\n        if (pool.label && pool.label.length) {\n          label = setGraphics.label = label || pool.label.shift();\n        }\n        labelAttrs = setConfig.props.label.attr;\n\n        if (config.autoRotateLabels) {\n          // Angle calculation for label rotation\n          angle = ((setConfig.startAngle + angleStretch / 2) * 180 / Math.PI);\n          if (Math.abs(angle) > 90 && Math.abs(angle) < 180) {\n            angle = -(180 - angle);\n          }\n          if (Math.floor(angleStretch * 180 / Math.PI) === 360) {\n            angle = 0;\n          }\n          // Use smart label when autoRotateLabels is set to true\n          smartLabel.useEllipsesOnOverflow(config.useEllipsesWhenOverflow);\n          smartLabel.setStyle(chartConfig.dataLabelStyle);\n          labelSmartObj = smartLabel.getSmartText(displayValue,\n            (setConfig.outerRadius - setConfig.innerRadius - 10), smartLabel._lineHeight);\n          labelAttrs.text = labelSmartObj.text;\n          labelAttrs.transform = getSuggestiveRotation(\n            parseFloat(angle),\n            labelAttrs.x, labelAttrs.y);\n        } else {\n          labelAttrs.transform = getSuggestiveRotation(\n            0,\n            labelAttrs.x, labelAttrs.y);\n        }\n        // Create/Reuse label\n        label = setGraphics.label = animationManager.setAnimation({\n          el: tempLabel || 'text',\n          attr: labelAttrs,\n          container: dataLabelsLayer,\n          component: dataSet,\n          state: 'appearing',\n          label: 'text'\n        });\n        label.outlineText(config.showTextOutline, labelAttrs.fill);\n        if (!tempLabel) {\n          label.on('fc-click', clickFunc)\n            .on('fc-mouseout', labelOutFN)\n            .on('fc-mouseover', labelHoverFN);\n        }\n        label.data('plotItem', setConfig.plotItem)\n          .data(EVENTARGS, setConfig.eventArgs);\n\n        isTooltip && dataSet.getFromEnv('toolTipController').enableToolTip(label, toolText);\n      } else {\n        // In case of extra labels, hide them\n        tempLabel && animationManager.setAnimation({\n          el: tempLabel,\n          component: dataSet,\n          label: 'text'\n        });\n        delete setGraphics.label;\n      }\n    } else {\n      // at the end of all the tree structure, hide all the pool elements.\n      dataSet.removeChild(dataSet.config.pool, true);\n    }\n  }\n}\nexport default MultiLevelPieDataset;\n","export default {\n  'initial.dataset.multiLevelPie': function () {\n    let datasetConf = this.config,\n      ringpath;\n\n    return {\n      'ringpath.appearing': function (inputJSON) {\n        ringpath = inputJSON.attr.ringpath;\n        return [\n          {\n            initialAttr: {\n              ringpath: [ringpath[0], ringpath[1], ringpath[2], ringpath[3],\n                datasetConf.initialAngle, datasetConf.initialAngle]\n            },\n            slot: 'plot'\n          }\n        ];\n      },\n      'text.appearing': () => {\n        return [\n          {\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'final'\n          }\n        ];\n      }\n    };\n  }\n};\n","import Sunburst from '@fusioncharts/powercharts/src/chart/sunburst';\nexport default Sunburst;\n","import datasetFactory from '../../factories/sunburst-dataset';\nimport MultilevelPie from '../multilevelpie';\nimport { pluckNumber, extend2 } from '@fusioncharts/core/src/lib';\n\nconst DEFAULT_PALETTE_COLOR = [\n    '1E77B4',\n    'FF7F0E',\n    '2BA02C',\n    'D62728',\n    '9466BD',\n    '8C564B',\n    'E376C2',\n    '7F7F7F',\n    'BCBD22',\n    '17BECF'\n  ],\n  DEFAULT_BG_COLOR = 'FFFFFF,FFFFFF';\n\nclass Sunburst extends MultilevelPie {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Sunburst';\n  }\n\n  constructor () {\n    super();\n    this.defaultPaletteOptions = {\n      // Store colors now\n      paletteColors:\n        [\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR\n        ],\n      bgColor: [DEFAULT_BG_COLOR, DEFAULT_BG_COLOR, DEFAULT_BG_COLOR, DEFAULT_BG_COLOR, DEFAULT_BG_COLOR]\n    };\n    this.registerFactory('dataset', datasetFactory, ['canvas']);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.allowdrilltonode = 1;\n    this.config.showvaluesintooltip = 1;\n  }\n\n  configureAttributes (dataSource) {\n    super.configureAttributes(dataSource);\n    let chart = this;\n    chart.config.allowdrilltonode = pluckNumber(dataSource.chart.allowdrilltonode, 1);\n\n    if (chart.config.allowdrilltonode) {\n      chart.addToEnv('linkClickFN', function () { return null; });\n    }\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Sunburst';\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    const parsedDS = this.parseAndSanitizeData();\n    let i = 0;\n\n    if (!parsedDS || !Array.isArray(parsedDS) || parsedDS.length === 0) {\n      return true;\n    }\n\n    for (; i < parsedDS.length; i++) {\n      if (parsedDS[i].category && parsedDS[i].category.length === 0 && !parsedDS[i].value) {\n        return true;\n      }\n    }\n  }\n\n  parseAndSanitizeData () {\n    let categories = [],\n      flatInput = [],\n      tempMap = {},\n      chart = this,\n      dataSource = extend2({}, chart.getFromEnv('dataSource'));\n\n    if (dataSource && dataSource.data && Array.isArray(dataSource.data)) {\n      flatInput = dataSource.data.map(item => {\n        tempMap[item.id] = item;\n        !item.parent && (item.isRootNode = true);\n        !item.categories && (item.category = []);\n        return item;\n      }).filter(item => {\n        if (item.id && (!item.value || !isNaN(+item.value))) {\n          if (!item.parent || (item.parent && tempMap[item.parent])) {\n            return true;\n          }\n        }\n        delete tempMap[item.id];\n        return false;\n      });\n\n      for (let key in tempMap) {\n        if (tempMap.hasOwnProperty(key)) {\n          let item = tempMap[key];\n          if (item.parent) {\n            tempMap[item.parent].category.push(item);\n          }\n          if (item.isRootNode) {\n            categories.push(item);\n          }\n        }\n      }\n\n      chart.addToEnv('parsedDataSource', categories);\n    }\n    return flatInput;\n  }\n}\nexport default Sunburst;\n","import { datasetFactory } from '@fusioncharts/core/src/lib';\nimport SunburstDataset from '../dataset/sunburst';\n\nconst depthFirstVisit = function (arr) {\n  let sumOfVisit = 0;\n  arr.forEach(c => {\n    let givenValue = c.value ? (+c.value) : 0,\n      applicableValue = c.category.length > 0 ? depthFirstVisit(c.category) : givenValue;\n\n    if (applicableValue > givenValue) {\n      c.value = applicableValue;\n    } else {\n      c.value = givenValue;\n      applicableValue = givenValue;\n    }\n\n    sumOfVisit += applicableValue;\n  });\n\n  return sumOfVisit;\n};\n\n/**\n * function to  create dataset, group manager.\n * assign dataset to group manager.\n **/\nexport default (chart) => {\n  let categories = chart.getFromEnv('parsedDataSource') || [],\n    length;\n\n  categories.forEach(function depthFirstVisitRunner (e) {\n    let sum = depthFirstVisit(e.category);\n    !e.value && (e.value = 0);\n    if (sum > (+e.value)) {\n      e.value = sum;\n    }\n  });\n\n  chart.config.categories = categories;\n  length = categories.length;\n\n  // if the data has no categories in them.\n  if (!length) {\n    chart.setChartMessage();\n    return;\n  }\n\n  datasetFactory(chart, SunburstDataset, 'dataset', length, [{\n    inputTree: categories\n  }]);\n};\n","import {\n  COMMASPACE, pluck, pluckNumber,\n  toRaphaelColor, parseUnsafeString, getDashStyle, getValidValue,\n  parseTooltext, getFirstValue, convertColor, getSuggestiveRotation,\n  BLANKSTRING, extend2\n} from '@fusioncharts/core/src/lib';\nimport { addDep, getDep } from '@fusioncharts/core/src/dependency-manager';\nimport sunburstAnimation from './index.animation';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport raphaelShapesRingpath from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.ringpath';\nimport MultiLevelPieDataset from '../multilevelpie';\n\nlet Raphael = getDep('redraphael', 'plugin'),\n  BLANK = '',\n  NORMALSTRING = 'normal',\n  COLOR_FFFFFF = 'FFFFFF',\n  COLOR_000000 = '000000',\n  HUNDRED_PERCENT = '100%',\n  ZERO_STR = '0',\n  FOREST_INNER_RADIUS = '30',\n  pInt = function (s, mag) {\n    return parseInt(s, mag || 10);\n  },\n  DASH_DEF = 'none',\n  UNDEF,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  POINTER = 'pointer',\n  EVENTARGS = 'eventArgs',\n  PX = 'px',\n  INNERRADIUS = /^[0-9]+\\%?$|^([0-9]+[.][0-9]+)\\%?$/,\n  calculateInnerRadius = function (innerRadius, pieRadius) {\n    let innerRadiusLength = innerRadius && innerRadius.length, // eslint-disable-line good-practices/no-single-usage-variable\n      calculatedInnerRadius;\n    if (!innerRadius) {\n      return 0;\n    }\n    if (innerRadius.charAt(innerRadiusLength - 1) === '%') {\n      // execute when innerRadius is given as percentage\n      calculatedInnerRadius = pluckNumber(pieRadius) * (pluckNumber(innerRadius.split('%')[0]) / 100);\n    } else {\n      // execute when innerRadius is given in pixels.\n      calculatedInnerRadius = pluckNumber(innerRadius);\n    }\n\n    if (calculatedInnerRadius < pieRadius) {\n      return calculatedInnerRadius;\n    } return 0;\n  };\naddDep({\n  name: 'sunburstAnimation',\n  type: 'animationRule',\n  extension: sunburstAnimation\n});\n\n// Adding required shapes for chart.\nraphaelShapesRingpath(Raphael);\nclass SunburstDataset extends MultiLevelPieDataset {\n  constructor () {\n    super();\n    let dataset = this;\n    dataset.components = {\n      data: []\n    };\n    dataset.graphics = {\n    };\n    dataset.elementClickedFn = function (e) {\n      let ele = this,\n        chart = dataset.getFromEnv('chart'),\n        eventArgs = ele.data(EVENTARGS);\n      chart.plotEventHandler(ele, e);\n      if (chart.config.allowdrilltonode) {\n        dataset.chartDrillDown(eventArgs.nodeId, eventArgs.nodeParentId, eventArgs.childrenCount);\n      }\n    };\n    dataset.drillDownToId = UNDEF;\n    dataset.nodeColorMap = {};\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'multiLevelPie';\n  }\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n\n    this.config.JSONData = datasetJSON;\n    this.config.inputTree = datasetJSON.inputTree || [];\n    this.config.isDrilledDown = datasetJSON.isDrilledDown;\n\n    var fontBdrColor,\n      dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      dataSetConfig = dataSet.config || (dataSet.config = {}),\n      dataLabels = dataSetConfig.dataLabelOptions || (dataSetConfig.dataLabelOptions = {}),\n      piePlotOptions = dataSetConfig.piePlotOptions,\n      style = chart.config.style,\n      chartAttrs = chart.getFromEnv('dataSource').chart,\n      centerAngle = pluckNumber(-chartAttrs.centerangle, 180),\n      totalAngle = pluckNumber(chartAttrs.totalangle, 360),\n      tranverseToRoot = function (dataInstance, evtType) {\n        let dataObj = dataInstance;\n        travserseAllElements(dataSet, evtType);\n        while (dataObj.graphics.element) {\n          (dataObj.graphics.element).attr({\n            fill: (evtType === 'mouseover' && dataSetConfig.hoverFillColor)\n              ? convertColor(dataSetConfig.hoverFillColor)\n              : (dataObj.config || this.data('plotItem')).color,\n            'fill-opacity': evtType === 'mouseover' ? dataSetConfig.hoverFillAlpha\n              : (dataObj.config || this.data('plotItem')).alpha\n          });\n          dataObj = dataObj.config.parent;\n        }\n      },\n      travserseAllElements = function (ds, evtType) {\n        let dsArr = ds.components.data;\n        if (dsArr) {\n          for (let i = 0; i < dsArr.length; i++) {\n            if (dsArr[i].graphics && dsArr[i].graphics.element) {\n              dsArr[i].graphics.element.attr({\n                fill: (dsArr[i].config || this.data('plotItem')).color,\n                'fill-opacity': evtType === 'mouseover' ? dataSetConfig.unFocussedAlpha\n                  : (dsArr[i].config || this.data('plotItem')).alpha\n              });\n            }\n          }\n        }\n        if (ds.components && dsArr) {\n          for (let i = 0; i < dsArr.length; i++) {\n            travserseAllElements(dsArr[i], evtType);\n          }\n        }\n      },\n      traverseAllChildren = function (dataObj, evtType) {\n        var k;\n        (dataObj.graphics.element).attr({\n          fill: evtType === 'mouseover' ? dataSetConfig.hoverFillColor\n            : (dataObj.config || this.data('plotItem')).color\n        });\n        for (k = 0; k < (dataObj.components.data && dataObj.components.data.length); k++) {\n          traverseAllChildren.call(this, dataObj.components.data[k], evtType);\n        }\n      },\n      mouseEvtHandler = function (evtType) {\n        if (!dataSetConfig.useHoverColor) {\n          return;\n        }\n        var point = this.data('plotItem'),\n          selfRef = point.selfRef;\n\n        if (!dataSetConfig.highlightParentPieSlices && !dataSetConfig.highlightChildPieSlices) {\n          (selfRef.graphics.element).attr({\n            fill: evtType === 'mouseover' ? dataSetConfig.hoverFillColor : (selfRef.config || point).color\n          });\n        } else if (!dataSetConfig.highlightParentPieSlices && dataSetConfig.highlightChildPieSlices) {\n          traverseAllChildren.call(this, selfRef, evtType);\n        } else if (dataSetConfig.highlightParentPieSlices && !dataSetConfig.highlightChildPieSlices) {\n          tranverseToRoot.call(this, selfRef, evtType);\n        } else if (dataSetConfig.highlightParentPieSlices && dataSetConfig.highlightChildPieSlices) {\n          tranverseToRoot.call(this, selfRef, evtType);\n          traverseAllChildren.call(this, selfRef, evtType);\n        }\n      };\n    dataSetConfig.isSingleRootNode = dataSetConfig.inputTree.length === 1;\n    dataSetConfig.enableAnimation = pluckNumber(chartAttrs.animation,\n      chartAttrs.defaultanimation, 1);\n    dataSetConfig.animation = !dataSetConfig.enableAnimation ? false : {\n      duration: pluckNumber(chartAttrs.animationduration, chartAttrs.moveduration, 1) * 1000\n    };\n    dataSetConfig.showShadow = pluckNumber(chartAttrs.showshadow, 0);\n    dataSetConfig.useHoverColor = Boolean(pluckNumber(chartAttrs.usehovercolor, 1));\n    dataSetConfig.showTextOutline = Boolean(pluckNumber(chartAttrs.textoutline, 0));\n    dataSetConfig.hoverFillAlpha = pluckNumber(chartAttrs.hoverfillalpha, 80);\n    dataSetConfig.hoverFillColor = chartAttrs.hoverfillcolor;\n    dataSetConfig.unFocussedAlpha = pluck(chartAttrs.unfocussedalpha, '0.35');\n    fontBdrColor = getFirstValue(chartAttrs.valuebordercolor, BLANK);\n    fontBdrColor = fontBdrColor ? convertColor(\n      fontBdrColor, pluckNumber(chartAttrs.valueborderalpha, chartAttrs.valuebgalpha,\n        chartAttrs.valuealpha, 100)) : BLANK;\n    // create the style object if required.\n    // fix for multilevel pie datavalue cosmetics issue RED-1594\n    !dataLabels.style && (dataLabels.style = {\n      fontFamily: pluck(chartAttrs.valuefont, style.fontFamily),\n      fontSize: pluckNumber(this.computeFontSize(chartAttrs.valuefontsize),\n        pInt(style.fontSize, 10)) + PX,\n      color: convertColor(pluck(chartAttrs.valuefontcolor, style.color),\n        pluckNumber(chartAttrs.valuefontalpha,\n          chartAttrs.valuealpha, 100)),\n      fontWeight: pluckNumber(chartAttrs.valuefontbold) ? 'bold' : NORMALSTRING,\n      fontStyle: pluckNumber(chartAttrs.valuefontitalic) ? 'italic' : NORMALSTRING,\n      backgroundColor: chartAttrs.valuebgcolor\n        ? convertColor(chartAttrs.valuebgcolor,\n          pluckNumber(chartAttrs.valuebgalpha, chartAttrs.valuealpha, 100)) : BLANK,\n      border: fontBdrColor || chartAttrs.valuebgcolor\n        ? (pluckNumber(chartAttrs.valueborderthickness, 1) + 'px solid') : BLANK,\n      borderPadding: pluckNumber(chartAttrs.valueborderpadding, 2),\n      borderThickness: pluckNumber(chartAttrs.valueborderthickness, style.borderThickness, 1),\n      borderRadius: pluckNumber(chartAttrs.valueborderradius, style.borderRadius, 0),\n      borderColor: fontBdrColor,\n      borderDash: pluckNumber(chartAttrs.valueborderdashed, 0)\n        ? getDashStyle(pluckNumber(chartAttrs.valueborderdashlen, 4),\n          pluckNumber(chartAttrs.valueborderdashgap, 2)) : DASH_DEF\n    });\n\n    // stop point slicing\n    !piePlotOptions && (piePlotOptions = (dataSetConfig.piePlotOptions = {}));\n    piePlotOptions.allowPointSelect = false;\n    dataSetConfig.borderAlpha = pluck(chartAttrs.plotborderalpha, chartAttrs.pieborderalpha, 100);\n    dataSetConfig.borderColor = convertColor(pluck(chartAttrs.plotbordercolor,\n      chartAttrs.piebordercolor, COLOR_FFFFFF), +chartAttrs.showplotborder !== 0\n      ? pluck(chartAttrs.plotborderalpha, chartAttrs.pieborderalpha, 100) : 0);\n    dataSetConfig.rawborderColor = pluck(chartAttrs.plotbordercolor,\n      chartAttrs.piebordercolor, COLOR_FFFFFF);\n    dataSetConfig.showplotborder = pluckNumber(chartAttrs.showplotborder, 1);\n    dataSetConfig.showTooltip = pluckNumber(chartAttrs.showtooltip, 1);\n\n    dataSetConfig.borderWidth = pluckNumber(chartAttrs.pieborderthickness,\n      chartAttrs.plotborderthickness, 1);\n\n    piePlotOptions.startingAngle = 0; // set the chart's startingAngle as 0 [alwase]\n    piePlotOptions.size = HUNDRED_PERCENT;\n\n    dataSetConfig.highlightParentPieSlices = pluckNumber(chartAttrs.highlightparentpieslices,\n      chartAttrs.highlightparentpienodes, 1);\n    dataSetConfig.highlightChildPieSlices = pluckNumber(chartAttrs.highlightchildpieslices,\n      chartAttrs.highlightchildpienodes, 0);\n\n    dataSetConfig.showLabels = pluckNumber(chartAttrs.showlabels, 1);\n    dataSetConfig.showValues = pluckNumber(chartAttrs.showvalues, 0);\n    dataSetConfig.showValuesInTooltip = pluckNumber(chartConfig.showvaluesintooltip,\n      chartAttrs.showvaluesintooltip,\n      chartAttrs.showvalues, 0);\n    dataSetConfig.showPercentValues = pluckNumber(chartAttrs.showpercentvalues,\n      chartAttrs.showpercentagevalues, 0);\n    dataSetConfig.showPercentInTooltip = pluckNumber(chartAttrs.showpercentintooltip, 0);\n    dataSetConfig.toolTipSepChar = pluck(chartAttrs.tooltipsepchar, chartAttrs.hovercapsepchar, COMMASPACE);\n    dataSetConfig.labelSepChar = parseUnsafeString(pluck(chartAttrs.labelsepchar, dataSetConfig.toolTipSepChar));\n    dataSetConfig.tooltext = chartAttrs.plottooltext;\n    dataSetConfig.alpha = pluck(chartAttrs.plotfillalpha, chartAttrs.piefillalpha, 100);\n    dataSetConfig.startAngle = (centerAngle - (totalAngle / 2)) * (Math.PI / 180);\n    dataSetConfig.endtAngle = (centerAngle + (totalAngle / 2)) * (Math.PI / 180);\n    dataSetConfig.initialAngle = dataSetConfig.endtAngle;\n    dataSetConfig.originX = pluckNumber(chartAttrs.originx);\n    dataSetConfig.originY = pluckNumber(chartAttrs.originy);\n\n    dataSetConfig.events = {\n      mouseOver: function () {\n        mouseEvtHandler.call(this, 'mouseover');\n      },\n      mouseOut: function () {\n        mouseEvtHandler.call(this, 'mouseout');\n      }\n    };\n\n    // remove the plotboder\n    chartConfig.plotBorderWidth = 0;\n\n    // remove the plotboder\n    chartConfig.plotBorderWidth = 0;\n    dataSetConfig.maxLevel = dataSet.addMSPieCat(dataSet.config.inputTree, 1, dataSet, dataSetConfig.startAngle,\n      dataSetConfig.endtAngle);\n    dataSetConfig.pieRadius = parseInt(chartAttrs.pieradius, 10);\n\n    // dataSetConfig.innerRadius = pluckNumber(Number(pluck(chartAttrs.innerradius, '0%').split('%')[0]), 0);\n    dataSetConfig.innerRadius = dataSetConfig.isSingleRootNode ? ZERO_STR : FOREST_INNER_RADIUS;\n    (INNERRADIUS.test(chartAttrs.innerradius)) &&\n      (!dataSetConfig.isSingleRootNode ? +(dataSetConfig.innerRadius) < +(chartAttrs.innerradius) &&\n        (dataSetConfig.innerRadius = pluck(chartAttrs.innerradius))\n        : (dataSetConfig.innerRadius = pluck(chartAttrs.innerradius)));\n\n    dataLabels.distance = 0;\n    dataLabels.placeLabelsInside = true;\n  }\n  // doHide is a Boolean Flag to hide the element or not.\n  // All the graphical elements in excess are pushed to the graphics pool. They are hidden only after the\n  // entire draw is complete.\n  removalFn (ele, prop) {\n    var dataSet = this,\n      // eslint-disable-next-line good-practices/no-function-dependency\n      hideFN = function () {\n        this.remove();\n      };\n\n    dataSet.getFromEnv('animationManager').setAnimation({\n      el: ele,\n      label: prop === 'element' ? 'ringpath' : 'label',\n      component: dataSet,\n      callback: hideFN\n    });\n  }\n  removeGraphics (obj) {\n    var i,\n      prop,\n      dataSet = this,\n      childData = obj.components && obj.components.data,\n      len,\n      graphics = obj.graphics;\n    if (childData) {\n      len = childData.length;\n      for (i = 0; i < len; i += 1) {\n        dataSet.removeGraphics(childData[i]);\n      }\n    }\n\n    if (obj.graphics) {\n      for (prop in graphics) {\n        if (graphics.hasOwnProperty(prop)) {\n          dataSet.removalFn(obj.graphics[prop], prop);\n        }\n      }\n    }\n  }\n  removeChild (removalStore, doHide, type) {\n    var i,\n      elemObj,\n      dataSet = this;\n    if (removalStore.length) {\n      for (i = 0; i < removalStore.length; i += 1) {\n        elemObj = removalStore[i];\n        if (type) {\n          dataSet.removalFn(elemObj, doHide, type);\n        } else {\n          dataSet.removeGraphics(elemObj, doHide);\n        }\n      }\n    } else {\n      // if the removalStore is in the Object structure.\n      // eslint-disable-next-line guard-for-in\n      for (i in removalStore) {\n        dataSet.removeChild(removalStore[i], doHide, i);\n      }\n    }\n  }\n  addMSPieCat (catArr, level, parentObj, startAngle, endAngle, totalValueParam = null) {\n    var dataObj,\n      dataObjLen,\n      cat = extend2([], catArr),\n      catObjLen,\n      catLen = cat.length,\n      dataSet = this,\n      data = parentObj.components.data,\n      dataSetConfig = dataSet.config,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      sharePercent,\n      currentLevelValue = 0,\n      totalValue,\n      catObj,\n      catVal,\n      i,\n      label,\n      labelSepChar = dataSetConfig.labelSepChar,\n      fillalpha,\n      valueStr,\n      pValueStr,\n      toolText,\n      displayValue,\n      rawColor,\n      showLabel,\n      showPlotBorder,\n      maxLevel = level,\n      dataLength = data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removalFn = function () {\n        dataSet.removeChild.apply(dataSet, arguments);\n      },\n      catLength = cat.length,\n      totAngle = endAngle - startAngle, // eslint-disable-line good-practices/no-single-usage-variable\n      tempAngle,\n      cumilative = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      preDataOldEndAngle;\n\n    for (i = 0; i < catLen; i += 1) {\n      // store for later use\n      catObj = cat[i];\n      catObj._userValue = numberFormatter.getCleanValue(catObj.value, true);\n      catObj._value = pluckNumber(catObj._userValue, 1);\n      currentLevelValue += catObj._value;\n    }\n    // Total value can't be zero, since its used in denominator to find ratio.\n    totalValue = totalValueParam || (currentLevelValue || 1);\n    // add the category\n    sharePercent = totAngle / totalValue; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = catLen - 1; i >= 0; i -= 1) {\n      catObj = cat[i];\n      catVal = sharePercent * catObj._value;\n      label = parseUnsafeString(pluck(catObj.label, catObj.name));\n      valueStr = catObj._userValue !== null\n        ? numberFormatter.dataLabels(catObj._userValue) : BLANK;\n      pValueStr = numberFormatter.percentValue((catObj._value /\n        totalValue) * 100);\n      // pointIndex = sLevel.length - 1;\n      fillalpha = pluckNumber(catObj.alpha, dataSetConfig.alpha);\n      showLabel = pluckNumber(catObj.showlabel, dataSetConfig.showLabels);\n      showPlotBorder = pluckNumber(dataSetConfig.showplotborder, 1);\n      displayValue = (showLabel === 1) ? label : BLANK;\n\n      if (pluckNumber(catObj.showvalue, dataSetConfig.showValues) === 1) {\n        if (dataSetConfig.showPercentValues) {\n          displayValue += displayValue !== BLANK ? (labelSepChar + pValueStr) : pValueStr;\n        } else if (valueStr !== UNDEF && valueStr !== BLANK) {\n          displayValue += displayValue !== BLANK ? (labelSepChar + valueStr) : valueStr;\n        }\n      }\n      toolText = dataSetConfig.showTooltip ? parseUnsafeString(pluck(catObj.tooltext, catObj.hovertext,\n        dataSetConfig.tooltext), false) : UNDEF;\n      if (toolText === BLANK) {\n        toolText = label;\n        if (dataSetConfig.showValuesInTooltip) {\n          if (dataSetConfig.showPercentInTooltip) {\n            toolText += toolText !== BLANK ? (labelSepChar + pValueStr) : pValueStr;\n          } else if (valueStr !== UNDEF && valueStr !== BLANK) {\n            toolText += toolText !== BLANK ? (labelSepChar + valueStr) : valueStr;\n          }\n        }\n      } else {\n        toolText = parseTooltext(toolText, [1, 2, 3, 14], {\n          percentValue: pValueStr,\n          label: label,\n          formattedValue: valueStr\n        }, catObj);\n      }\n\n      dataObj = data[i];\n      tempAngle = startAngle + cumilative;\n      cumilative += catVal;\n      if (!dataObj) {\n        dataObj = data[i] = {\n          components: {\n            data: []\n          },\n          config: {},\n          graphics: {}\n        };\n      }\n      // store old end angle for newly added element's aimation position\n      if (dataObj.graphics.element) {\n        preDataOldEndAngle = dataObj.config.startAngle + dataObj.config.angleStrech;\n      }\n      rawColor = catObj.color\n        ? catObj.color\n        : level > (dataSetConfig.isSingleRootNode ? 2 : 1)\n          ? parentObj.config.rawColor\n          : dataSet.config.isDrilledDown && dataSet.nodeColorMap[catObj.id]\n            ? dataSet.nodeColorMap[catObj.id]\n            : dataSet.getFromEnv('color-manager').getPlotColor();\n      dataSet.nodeColorMap[catObj.id] = rawColor;\n      dataObj.config = {\n        initialAngle: preDataOldEndAngle || (parentObj.config || parentObj.config).initialAngle,\n        startAngle: tempAngle,\n        alpha: fillalpha,\n        angleStrech: catVal,\n        level: level,\n        displayValue: displayValue,\n        showLabel: showLabel,\n        showPlotBorder: showPlotBorder,\n        toolText: toolText,\n        link: getValidValue(catObj.link),\n        drillDownToId: catObj.id,\n        drillDownParent: catObj.parent,\n        childrenCount: catObj.category ? catObj.category.length : 0,\n        rawColor,\n        doNotSlice: true, // added to stop slicing\n        color: convertColor(rawColor, fillalpha),\n        borderAlpha: pluck(catObj.plotborderalpha, dataSetConfig.borderAlpha),\n        borderWidth: pluckNumber(catObj.borderwidth, dataSetConfig.borderWidth),\n        borderColor: pluck(catObj.bordercolor, dataSetConfig.borderColor),\n        rawborderColor: pluck(catObj.bordercolor, dataSetConfig.rawborderColor),\n        dashStyle: pluckNumber(catObj.valueborderdashed, 0)\n          ? getDashStyle(pluckNumber(catObj.borderdashlen, 4),\n            pluckNumber(catObj.borderdashgap, 2)) : DASH_DEF,\n        shadow: {\n          opacity: Math.round(fillalpha > 50 ? fillalpha * fillalpha * fillalpha * 0.0001\n            : fillalpha * fillalpha * 0.01) * 0.01\n        },\n        isSingleTon: !((catLen > 1))\n      };\n      dataObj.config.parent = parentObj;\n\n      dataObj.config.dataLabelStyle = dataSet._configureDataLabelStyle(catObj);\n\n      if (catObj.category && catObj.category.length > 0) {\n        maxLevel = Math.max(maxLevel, dataSet.addMSPieCat(catObj.category, level + 1,\n          dataObj, tempAngle, (catVal + tempAngle), catObj._value));\n        if ((dataObjLen = dataObj.components.data.length) > (catObjLen = catObj.category.length)) {\n          removalFn(dataObj.components.data.splice(dataObjLen - 1, catObjLen));\n        }\n      } else {\n        dataObjLen = dataObj.components.data.length;\n        if (dataObjLen) {\n          // no child category, recursively remove existing childs (dataObj.components.data)\n          removalFn(dataObj.components.data.splice(0, dataObjLen));\n        }\n      }\n    }\n    // remove extra data\n    if (dataLength > catLength) {\n      // recursively remove elements with child\n      removalFn(data.splice(catLength));\n    }\n    return maxLevel;\n  }\n\n  chartDrillDown (drillDownToId, parentId, childrenCount) {\n    const dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      tree = chart.getFromEnv('parsedDataSource'),\n      stack = [...tree],\n      toolTipController = dataset.getFromEnv('toolTipController');\n\n    let idToSearch = dataset.drillDownToId === drillDownToId ? parentId : drillDownToId,\n      searchedItem = null;\n\n    if (childrenCount > 0) {\n      if (idToSearch) {\n        while (stack.length > 0) {\n          var top = stack.pop();\n          if (top.id !== idToSearch) {\n            stack.push(...top.category);\n          } else {\n            searchedItem = top;\n          }\n        }\n      } else {\n        dataset.setData({\n          isDrilledDown: true,\n          inputTree: tree\n        }, true);\n        dataset.drillDownToId = UNDEF;\n        toolTipController.hideAll();\n        return;\n      }\n\n      if (searchedItem.length > 0 || searchedItem.category.length > 0) {\n        dataset.drillDownToId = idToSearch;\n        dataset.setData({\n          isDrilledDown: true,\n          inputTree: [searchedItem]\n        }, true);\n        toolTipController.hideAll();\n      }\n    }\n  }\n\n  parsePlotAttributes (parentInstance) {\n    var angle,\n      parentObj = parentInstance,\n      _textAttrs,\n      centerDistance,\n      level,\n      dataSet = this,\n      dataSetConfig = dataSet.config || {},\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      seriesDataLabelsStyle = chartConfig.dataLabelStyle,\n      setDataLabelStyle,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasHeight = chartConfig.canvasHeight,\n      cx = pluckNumber(dataSetConfig.originX, chartConfig.canvasLeft + canvasWidth * 0.5),\n      cy = pluckNumber(dataSetConfig.originY, chartConfig.canvasTop + canvasHeight * 0.5),\n      r,\n      r2,\n      color,\n      val,\n      displayValue,\n      clickablePath,\n      angle1,\n      angle2,\n      i,\n      setGraphics,\n      setConfig,\n      element,\n      pieSize = pluckNumber(dataSetConfig.pieRadius * 2, Math.min(canvasWidth, canvasHeight)),\n      // innerRadius in diameter of inner circle\n      innerRadius = calculateInnerRadius(dataSetConfig.innerRadius, pieSize / 2),\n      pool = dataSet.config.pool || (dataSet.config.pool = {}),\n      // either the user-specified size is chosen or the minimum aspect dimension is choosen\n      // pieSize is diameter of full pie\n      seriesHalfWidth = (pieSize - 2 * innerRadius) / (2 * dataSetConfig.maxLevel);\n    dataSetConfig.innerSize = innerRadius * 2;\n    if (!parentObj) {\n      parentObj = dataSet;\n    }\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.parsePlotAttributes(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    level = setConfig.level;\n    if (level) {\n      r = ((level) * seriesHalfWidth) + innerRadius;\n      r2 = ((level - 1) * seriesHalfWidth) + innerRadius;\n\n      setConfig.outerRadius = r;\n      setConfig.innerRadius = r2;\n\n      setGraphics = parentObj.graphics;\n      val = setConfig.angleStrech;\n      displayValue = setConfig.displayValue;\n      // toolText = setConfig.toolText;\n      clickablePath = (!!chart.config.allowdrilltonode && setConfig.childrenCount > 0) || !!setConfig.link;\n      color = setConfig.color;\n\n      angle1 = setConfig.startAngle;\n      angle2 = angle1 + setConfig.angleStrech;\n      element = setGraphics.element;\n      if (pool.element && pool.element.length) {\n        element = setGraphics.element = element || pool.element.shift();\n      }\n      setConfig.plotItem = {\n        chart: chart,\n        link: setConfig.link,\n        value: val,\n        color: color,\n        labelText: displayValue,\n        graphics: {\n          element: element\n        },\n        selfRef: parentObj\n      };\n      setConfig.eventArgs = {\n        alpha: setConfig.alpha,\n        borderAlpha: setConfig.borderAlpha,\n        link: setConfig.link,\n        label: setConfig.displayValue,\n        showLabel: setConfig.showLabel,\n        toolText: setConfig.toolText,\n        color: setConfig.rawColor,\n        borderColor: setConfig.rawborderColor,\n        borderThickness: setConfig.borderWidth,\n        showPlotBorder: setConfig.showPlotBorder,\n        nodeId: setConfig.drillDownToId,\n        nodeParentId: setConfig.drillDownParent,\n        childrenCount: setConfig.childrenCount\n      };\n      setConfig.props = {\n        element: {\n          attr: {\n            ringpath: [cx, cy, r, r2, angle1, angle2],\n            'stroke-width': setConfig.borderWidth,\n            'stroke': setConfig.borderColor,\n            fill: toRaphaelColor(setConfig.color),\n            'stroke-dasharray': setConfig.dashStyle,\n            cursor: clickablePath ? POINTER : 'initial'\n          }\n        }\n      };\n      if ((displayValue !== UNDEF) && (displayValue !== BLANKSTRING)) {\n        angle = (angle1 + angle2) / 2;\n        // for the innermost Concentric circle the center distance is presumed to be zero\n        centerDistance = ((r2 === 0) && setConfig.isSingleTon) ? 0 : r2 + ((r - r2) / 2);\n        if (!(_textAttrs = setConfig._textAttrs)) {\n          _textAttrs = setConfig._textAttrs = {};\n        }\n\n        setDataLabelStyle = setConfig.dataLabelStyle;\n\n        _textAttrs.text = displayValue;\n        _textAttrs.fill = setDataLabelStyle.color || COLOR_000000;\n        _textAttrs.direction = chartConfig.textDirection;\n        _textAttrs.cursor = clickablePath ? POINTER : 'initial';\n        _textAttrs.x = cx + (centerDistance * Math.cos(angle));\n        _textAttrs.y = cy + (centerDistance * Math.sin(angle));\n        _textAttrs['line-height'] = seriesDataLabelsStyle.lineHeight;\n        _textAttrs['text-bound'] = [setDataLabelStyle.backgroundColor,\n          setDataLabelStyle.borderColor,\n          seriesDataLabelsStyle.borderThickness,\n          seriesDataLabelsStyle.borderPadding,\n          seriesDataLabelsStyle.borderRadius,\n          seriesDataLabelsStyle.borderDash];\n      }\n    }\n  }\n\n  /**\n   * Parses label attributes and position during post space management\n   *\n   * @param {any} parentObj\n   * @memberof SunburstDataset\n   */\n  parseLabelAttributes (parentInstance) {\n    var dataSet = this,\n      parentObj = parentInstance,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      displayValue,\n      i,\n      setConfig;\n\n    // dataLabelsLayer.show();\n    !parentObj && (parentObj = dataSet);\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.parseLabelAttributes(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    // plotItem = setConfig.plotItem;\n    displayValue = setConfig.displayValue;\n    if (setConfig.level) {\n      if ((displayValue !== UNDEF) && (displayValue !== BLANKSTRING)) {\n        setConfig.props.label = {\n          attr: setConfig._textAttrs\n        };\n      }\n    }\n  }\n\n  draw (parentInstance) {\n    var dataSet = this,\n      parentObj = parentInstance,\n      dataSetConfig = dataSet.config || {},\n      chart = dataSet.getFromEnv('chart'),\n      dataSetComponents = dataSet.components,\n      len = dataSetComponents.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      setGraphics,\n      setConfig,\n      element,\n      elementCheck,\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n      events = dataSetConfig.events || {},\n      plotHoverFN = function (e) {\n        var o = this,\n          mouseOver = events.mouseOver,\n          plotItem = o.plotItem || o.data('plotItem'),\n          dataset = plotItem.chart.getDatasets()[0]; // eslint-disable-line good-practices/no-single-usage-variable\n        chart.plotEventHandler(o, e, ROLLOVER);\n        mouseOver && mouseOver.call(o);\n        dataset.fireEvent('datasetrollover', { pValue: plotItem.pValue, value: plotItem.value, displayValue: setConfig.displayValue });\n      },\n      plotMouseOut = function (e) {\n        var o = this,\n          mouseOut = events.mouseOut,\n          plotItem = o.plotItem || o.data('plotItem'),\n          chartAPI = plotItem.chart,\n          dataset = chartAPI.getDatasets()[0]; // eslint-disable-line good-practices/no-single-usage-variable\n        chartAPI.plotEventHandler(o, e, ROLLOUT);\n        mouseOut && mouseOut.call(o);\n        dataset.fireEvent('datasetrollout', { pValue: plotItem.pValue, value: plotItem.value, displayValue: setConfig.displayValue });\n      },\n      removeDataArr = dataSetComponents.removeDataArr;\n    // dataSetConfig.innerSize = innerRadius * 2;\n\n    removeDataArr && removeDataArr.length && dataSet.removeElement();\n    if (!parentObj) {\n      parentObj = dataSet;\n      dataLabelsLayer.css(chart.config.dataLabelStyle);\n    }\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.draw(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    if (setConfig.level) {\n      setGraphics = parentObj.graphics;\n      elementCheck = setGraphics.element;\n      // Create/reuse element\n      element = setGraphics.element = dataSet.getFromEnv('animationManager').setAnimation({\n        el: elementCheck || 'ringpath',\n        attr: setConfig.props.element.attr,\n        container: chart.getChildContainer('plotGroup'),\n        component: dataSet,\n        state: 'appearing',\n        label: 'ringpath'\n      });\n\n      if (!elementCheck) {\n        element.on('fc-mouseover', plotHoverFN)\n          .on('fc-mouseout', plotMouseOut);\n      }\n      element.shadow(dataSetConfig.showShadow && !!setConfig.shadow)\n        .data('plotItem', setConfig.plotItem)\n        .data(EVENTARGS, setConfig.eventArgs);\n\n      // On click, the chart is drilled down and drawn again\n      // The event handler callback is attached n number of times\n      // Thus removing old handlers\n      element.off('fc-click', dataSet.elementClickedFn);\n      element.on('fc-click', dataSet.elementClickedFn);\n\n      dataSet.getFromEnv('toolTipController').enableToolTip(element, setConfig.toolText);\n\n      if (!i && !dataSetConfig._drawn) {\n        dataSetConfig._drawn = true;\n        dataLabelsLayer.show();\n        dataSet.addJob('labelJob', dataSet.drawLabel.bind(dataSet), priorityList.label);\n      }\n    } else {\n      // If the chart is already drawn, then instead of sheduling the label drawing, directly draw the\n      // labels.\n      dataSetConfig._drawn && dataSet.drawLabel();\n    }\n  }\n  drawLabel (parentInstance) {\n    var dataSet = this,\n      angle,\n      angleStretch,\n      config = dataSet.config,\n      parentObj = parentInstance,\n      chart = dataSet.getFromEnv('chart'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      labelSmartObj,\n      chartConfig = chart.config,\n      labelAttrs,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      tooltipOptions = chartConfig.tooltip || {},\n      isTooltip = tooltipOptions && tooltipOptions.enabled !== false, // eslint-disable-line good-practices/no-single-usage-variable\n      toolText,\n      displayValue,\n      tempLabel,\n      i,\n      setGraphics,\n      setConfig,\n      label,\n      events = (config || {}).events || {},\n      labelHoverFN = function (e) {\n        var o = this,\n          mouseOver = events.mouseOver;\n        chart.plotEventHandler(o, e, ROLLOVER);\n        mouseOver && mouseOver.call(o);\n      },\n      labelOutFN = function (e) {\n        var o = this,\n          mouseOut = events.mouseOut;\n        chart.plotEventHandler(o, e, ROLLOUT);\n        mouseOut && mouseOut.call(o);\n      },\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup');\n\n    dataLabelsLayer.show();\n    !parentObj && (parentObj = dataSet);\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.drawLabel(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    angleStretch = setConfig.angleStrech;\n\n    angle = ((setConfig.startAngle + angleStretch / 2) * 180 / Math.PI);\n    if (Math.abs(angle) > 90 && Math.abs(angle) < 270) {\n      angle = -(180 - angle);\n    }\n    if (Math.floor(angleStretch * 180 / Math.PI) === 360) {\n      angle = 0;\n    }\n\n    displayValue = setConfig.displayValue;\n    smartLabel.useEllipsesOnOverflow(true);\n    smartLabel.setStyle(chartConfig.dataLabelStyle);\n    labelSmartObj = smartLabel.getSmartText(displayValue,\n      (setConfig.outerRadius - setConfig.innerRadius - 10), smartLabel._lineHeight);\n    if (setConfig.level) {\n      setGraphics = parentObj.graphics;\n      tempLabel = setGraphics.label;\n      if ((displayValue !== UNDEF) &&\n        (displayValue !== BLANKSTRING) &&\n        angleStretch > 0.1) {\n        label = setGraphics.label;\n        labelAttrs = setConfig.props.label.attr;\n        labelAttrs.text = labelSmartObj.text;\n        labelAttrs.transform = getSuggestiveRotation(\n          parseFloat(angle),\n          labelAttrs.x, labelAttrs.y);\n        // Create/Reuse label\n        label = setGraphics.label = animationManager.setAnimation({\n          el: tempLabel || 'text',\n          attr: labelAttrs,\n          container: dataLabelsLayer,\n          component: dataSet,\n          state: 'appearing',\n          label: 'text'\n        });\n        label.outlineText(config.showTextOutline, labelAttrs.fill);\n        if (!tempLabel) {\n          label.on('fc-mouseout', labelOutFN)\n            .on('fc-mouseover', labelHoverFN);\n\n          // On click, the chart is drilled down and drawn again\n          // The event handler callback is attached n number of times\n          // Thus removing old handlers\n          label.off('fc-click', dataSet.elementClickedFn);\n          label.on('fc-click', dataSet.elementClickedFn);\n        }\n        label.data('plotItem', setConfig.plotItem)\n          .data(EVENTARGS, setConfig.eventArgs);\n\n        isTooltip && dataSet.getFromEnv('toolTipController').enableToolTip(label, toolText);\n      } else {\n        // In case of extra labels, hide them\n        tempLabel && animationManager.setAnimation({\n          el: tempLabel,\n          component: dataSet,\n          label: 'text'\n        });\n        delete setGraphics.label;\n      }\n    }\n  }\n}\nexport default SunburstDataset;\n","export default {\n  'initial.dataset.multiLevelPie': function () {\n    let datasetConf = this.config,\n      ringpath;\n\n    return {\n      'ringpath.appearing': function (inputJSON) {\n        ringpath = inputJSON.attr.ringpath;\n        return [\n          {\n            initialAttr: {\n              ringpath: [ringpath[0], ringpath[1], ringpath[2], ringpath[3],\n                datasetConf.initialAngle, datasetConf.initialAngle]\n            },\n            slot: 'plot'\n          }\n        ];\n      },\n      'text.appearing': () => {\n        return [\n          {\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'final'\n          }\n        ];\n      }\n    };\n  }\n};\n","import Multiaxisline from '@fusioncharts/powercharts/src/chart/multiaxisline';\nexport default Multiaxisline;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport AreaBase from '@fusioncharts/charts/src/chart/_internal/areabase';\nimport axisFactory from '../../factories/multiaxis-axis';\nimport vCanvasFactory from '../../factories/multiaxis-vcanvas';\nimport datasetFactory from '../../factories/multiaxis-dataset';\nimport { getDep } from '@fusioncharts/core/src/dependency-manager';\nimport raphaelShapesButton from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.button';\n\nimport { pluckNumber, extend2, pluck, chartPaletteStr, preDefStr, POSITION_TOP, POSITION_LEFT, POSITION_RIGHT, pluckFontSizeMaintainUnit } from '@fusioncharts/core/src/lib';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\n\nconst MULTIAXISLINE = 'multiaxisline';\nlet defaultFontStr = preDefStr.defaultFontStr,\n  divLineAlphaStr = preDefStr.divLineAlphaStr,\n  altVGridColorStr = preDefStr.altVGridColorStr,\n  altVGridAlphaStr = preDefStr.altVGridAlphaStr,\n  COLOR_000000 = preDefStr.colors.c000000,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  divLineAlpha3DStr = preDefStr.divLineAlpha3DStr,\n  Raphael = getDep('redraphael', 'plugin');\n\n// Resolve dependency to draw button shape\nraphaelShapesButton(Raphael);\n\n/**\n * Class for MultiAxisLine chartAPI\n */\nclass MultiAxisLine extends AreaBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MultiAxisLine';\n  }\n\n  /**\n   * Constructor function of MultiAxisLine chartAPI\n   */\n  constructor () {\n    super();\n    var iapi = this;\n    iapi.defaultPlotShadow = 1;\n    iapi.axisPaddingLeft = 0;\n    iapi.axisPaddingRight = 0;\n    this.registerFactory('axis', axisFactory, ['canvas']);\n    this.registerFactory('vCanvas', vCanvasFactory, ['axis']);\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * This sets default configuration\n   * @memberof MultiAxisLine\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = MULTIAXISLINE;\n    config.defaultcrosslinethickness = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MultiAxisLine';\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let jsonData = this.getFromEnv('dataSource');\n    if (!jsonData.axis || !jsonData.categories) {\n      return true;\n    }\n  }\n\n  /**\n   * Function to configure the axis\n   * @return {Object} configurations of axes\n   */\n  _feedAxesRawData () {\n    var iapi = this,\n      chartConfig = iapi.config,\n      colorM = iapi.getFromEnv('color-manager'),\n      numberFormatter = iapi.getFromEnv('number-formatter'), // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = dataObj.chart,\n      xAxisConf,\n      yAxisConf,\n      is3D = iapi.config.is3D,\n      palleteString = is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10),\n      axes,\n      i,\n      len,\n      isOpposit,\n      axisJson,\n      plotColor,\n      leftAxes,\n      rightAxes,\n      axisHEXColor,\n      gridLineWidth,\n      tickWidth,\n      axisLineThickness,\n      yAxisConfigure = [],\n      setAxisConfig = {},\n      xAxisConfigure = [],\n      j,\n      jlen;\n\n    xAxisConf = { // eslint-disable-line good-practices/no-single-usage-variable\n      isVertical: false,\n      isReverse: false,\n      isOpposit: isEqualString(chartAttrs.xaxisposition, 'top'),\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.xaxisnamepadding,\n      axisValuePadding: chartAttrs.labelpadding,\n      axisNameFont: chartAttrs.xaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.xaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.xaxisnamefontsize,\n      axisNameFontColor: chartAttrs.xaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.xaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.xaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.xaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.xaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.xaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.xaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.xaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.xaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.xaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.xaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.xaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.xaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.xaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.xaxisnameborderdashgap,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: pluck(chartAttrs.vdivlinecolor, chartAttrs.divlinecolor,\n        colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.vdivlinealpha, chartAttrs.divlinealpha,\n        is3D ? colorM.getColor(divLineAlpha3DStr) : colorM.getColor(divLineAlphaStr)),\n      divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed,\n        chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n      alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor(altVGridColorStr)),\n      alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor(altVGridAlphaStr)),\n      numDivLines: chartAttrs.numvdivlines,\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      labelBdrColor: chartAttrs.labelbordercolor,\n      labelBdrAlpha: chartAttrs.labelborderalpha,\n      labelLink: chartAttrs.labellink,\n      labelBgColor: chartAttrs.labelbgcolor,\n      labelBgAlpha: chartAttrs.labelbgalpha,\n      labelBdrThickness: chartAttrs.labelborderthickness,\n      labelBdrPadding: chartAttrs.labelborderpadding,\n      labelBdrRadius: chartAttrs.labelborderradius,\n      labelBdrDashed: chartAttrs.labelborderdashed,\n      labelBdrDashLen: chartAttrs.labelborderdashlen,\n      labelBdrDashGap: chartAttrs.labelborderdashgap,\n      maxLabelHeight: chartAttrs.maxlabelheight,\n      axisName: chartAttrs.xaxisname,\n      axisMinValue: chartAttrs.xaxisminvalue,\n      axisMaxValue: chartAttrs.xaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptivexmin,\n      adjustDiv: chartAttrs.adjustvdiv,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: chartAttrs.showlabels,\n      rotateLabels: chartAttrs.rotatelabels,\n      slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      showLimits: chartAttrs.showvlimits,\n      showDivLineValues: pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues),\n      showZeroPlane: chartAttrs.showvzeroplane,\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      zeroPlaneThickness: chartAttrs.vzeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, COLOR_000000)\n    };\n    xAxisConfigure.push(xAxisConf);\n    yAxisConf = {\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig, '#$1'),\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      showAlternateGridColor: 0,\n      axisNameFont: chartAttrs.yaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.yaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.yaxisnamefontsize,\n      axisNameFontColor: chartAttrs.yaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.yaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.yaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.yaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.yaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.yaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.yaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.yaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.yaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.yaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.yaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.yaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.yaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.yaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.yaxisnameborderdashgap,\n      labelFont: chartAttrs.yaxisvaluefont,\n      labelFontSize: this.computeFontSize(chartAttrs.yaxisvaluefontsize),\n      labelFontSizeWithUnit: chartAttrs.yaxisvaluefontsize,\n      labelFontColor: chartAttrs.yaxisvaluefontcolor,\n      labelAlpha: chartAttrs.yaxisvaluealpha,\n      labelFontBold: chartAttrs.yaxisvaluefontbold,\n      labelFontItalic: chartAttrs.yaxisvaluefontitalic,\n      labelBdrColor: chartAttrs.yaxisvaluebordercolor,\n      labelBdrAlpha: chartAttrs.yaxisvalueborderalpha,\n      labelLink: chartAttrs.yaxisvaluelink,\n      labelBgColor: chartAttrs.yaxisvaluebgcolor,\n      labelBgAlpha: chartAttrs.yaxisvaluebgalpha,\n      labelBdrThickness: chartAttrs.yaxisvalueborderthickness,\n      labelBdrPadding: chartAttrs.yaxisvalueborderpadding,\n      labelBdrRadius: chartAttrs.yaxisvalueborderradius,\n      labelBdrDashed: chartAttrs.yaxisvalueborderdashed,\n      labelBdrDashLen: chartAttrs.yaxisvalueborderdashlen,\n      labelBdrDashGap: chartAttrs.yaxisvalueborderdashgap\n    };\n\n    leftAxes = {\n      'side': 'l',\n      axesConf: []\n    };\n    rightAxes = {\n      'side': 'r',\n      axesConf: []\n    };\n\n    axes = dataObj.axis || [];\n    for (i = 0, len = axes.length; i < len; i++) { // eslint-disable-line good-practices/no-single-usage-variable\n      setAxisConfig = {};\n      axisJson = axes[i];\n      setAxisConfig.checkBoxChecked = false;\n      for (j = 0, jlen = axisJson.dataset ? axisJson.dataset.length : 0; j < jlen; j += 1) {\n        if (Number(axisJson.dataset[j].visible) !== 0) {\n          setAxisConfig.checkBoxChecked = true;\n        }\n      }\n      // showAxis = pluckNumber(axisJson.showaxis, 1);\n      plotColor = colorM.getPlotColor(i);\n      axisHEXColor = pluck(axisJson.color, chartAttrs.axiscolor,\n        plotColor);\n      gridLineWidth = pluckNumber(axisJson.divlinethickness,\n        chartAttrs.divlinethickness, 1);\n      tickWidth = pluckNumber(axisJson.tickwidth, chartAttrs.axistickwidth, 2);\n      axisLineThickness = pluckNumber(axisJson.axislinethickness, chartAttrs.axislinethickness, 2);\n      isOpposit = !(pluckNumber(axisJson.axisonleft, 1));\n\n      yAxisConf.isVertical = true;\n      yAxisConf.isReverse = true;\n      yAxisConf.isOpposit = isOpposit;\n      // add axis configuration\n      yAxisConf.labelStep = pluckNumber(axisJson.yaxisvaluesstep, axisJson.yaxisvaluestep,\n        chartAttrs.yaxisvaluesstep, chartAttrs.yaxisvaluestep);\n      yAxisConf.axisMaxValue = axisJson.maxvalue;\n      // yAxisConf.tickWidth = tickWidth;\n      yAxisConf.axisMinValue = axisJson.minvalue;\n      yAxisConf.setAdaptiveMin = pluckNumber(axisJson.setadaptiveymin, chartAttrs.setadaptiveymin);\n      yAxisConf.numDivLines = pluckNumber(axisJson.numdivlines, chartAttrs.numdivlines, 4);\n      yAxisConf.adjustDiv = pluckNumber(axisJson.adjustdiv, chartAttrs.adjustdiv);\n      yAxisConf.showAxisValues = pluckNumber(axisJson.showyaxisvalues,\n        axisJson.showyaxisvalue, chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue, 1);\n      yAxisConf.showLimits = pluckNumber(axisJson.showlimits, chartAttrs.showyaxislimits,\n        chartAttrs.showlimits, yAxisConf.showAxisValues);\n      yAxisConf.showDivLineValues = pluckNumber(axisJson.showdivlinevalue,\n        chartAttrs.showdivlinevalues, axisJson.showdivlinevalues,\n        yAxisConf.showAxisValues);\n      yAxisConf.showZeroPlane = pluckNumber(axisJson.showzeroplane, chartAttrs.showzeroplane);\n      yAxisConf.showZeroPlaneValue = pluckNumber(axisJson.showzeroplanevalue,\n        chartAttrs.showzeroplanevalue);\n      yAxisConf.zeroPlaneColor = axisJson.zeroplanecolor;\n      yAxisConf.zeroPlaneThickness = pluckNumber(axisJson.zeroplanethickness, axisJson.divlinethickness,\n        chartConfig.zeroplanethickness, 2);\n      yAxisConf.zeroPlaneAlpha = pluckNumber(axisJson.zeroplanealpha, axisJson.divlinealpha,\n        chartConfig.zeroplanealpha);\n      yAxisConf.showZeroPlaneOnTop = chartConfig.showzeroplaneontop;\n      yAxisConf.divLineColor = pluck(axisJson.divlinecolor, axisHEXColor);\n      yAxisConf.divLineAlpha = pluckNumber(axisJson.divlinealpha, chartAttrs.divlinealpha,\n        colorM.getColor(divLineAlphaStr), 100);\n      yAxisConf.divLineThickness = gridLineWidth;\n      yAxisConf.divLineIsDashed = Boolean(pluckNumber(axisJson.divlinedashed, axisJson.divlineisdashed,\n        chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0));\n      yAxisConf.divLineDashLen = pluckNumber(axisJson.divlinedashlen,\n        chartAttrs.divlinedashlen, 4);\n      yAxisConf.divLineDashGap = pluckNumber(axisJson.divlinedashgap,\n        chartAttrs.divlinedashgap, 2);\n\n      yAxisConf.showAxisLine = 1;\n      yAxisConf.axisLineThickness = axisLineThickness;\n      yAxisConf.axisLineAlpha = 100;\n      yAxisConf.axisLineColor = axisHEXColor;\n      yAxisConf.tickLength = tickWidth;\n      yAxisConf.tickColor = axisHEXColor;\n      yAxisConf.tickAlpha = 100;\n      yAxisConf.tickWidth = axisLineThickness;\n      yAxisConf.axisName = axisJson.title;\n      yAxisConf.rotateAxisName = 1;\n      yAxisConf.axisNameAlignCanvas = true;\n      yAxisConf.drawAxisNameFromBottom = true;\n\n      extend2(setAxisConfig, yAxisConf);\n      numberFormatter.parseMLAxisConf(axisJson, i);\n      if (pluckNumber(axisJson.showaxis) === 0) {\n        extend2(setAxisConfig, {\n          axisIndex: i,\n          drawAxisLineWRTCanvas: false,\n          drawLabels: false,\n          drawPlotlines: false,\n          drawAxisLine: false,\n          drawPlotBands: false,\n          drawAxisName: false,\n          drawTrendLines: false,\n          drawTrendLabels: false,\n          drawTick: false,\n          drawTickMinor: false,\n          showAxis: 0\n        });\n      } else {\n        extend2(setAxisConfig, {\n          axisIndex: i,\n          drawAxisLineWRTCanvas: false,\n          drawLabels: true,\n          drawPlotlines: true,\n          drawAxisLine: true,\n          drawPlotBands: true,\n          drawAxisName: true,\n          drawTrendLines: true,\n          drawTrendLabels: true,\n          drawTick: true,\n          drawTickMinor: true,\n          showAxis: 1\n        });\n      }\n      if (isOpposit) {\n        rightAxes.axesConf.push(setAxisConfig);\n      } else {\n        leftAxes.axesConf.push(setAxisConfig);\n      }\n    }\n    leftAxes.axesConf.length && yAxisConfigure.push(leftAxes);\n    rightAxes.axesConf.length && yAxisConfigure.push(rightAxes);\n    return { xAxisConfigure, yAxisConfigure };\n  }\n  /**\n   * Managing axis and legend space management after the actual space management\n   */\n  _postSpaceManagement () {\n    var iapi = this,\n      legend = iapi.getFromEnv('legend'),\n      legendPos = legend && legend.config && legend.config.legendPos ? legend.config.legendPos.split('-') : []; // eslint-disable-line good-practices/no-single-usage-variable\n\n    iapi.setAxisDimention();\n    // little space is required between legend and axis selector ui\n    // when legend position is right-* or left-*\n    if (legendPos[0] === POSITION_LEFT) {\n      iapi._allocateSpace({ left: 5 });\n    } else if (legendPos[0] === POSITION_RIGHT) {\n      iapi._allocateSpace({ right: 5 });\n    }\n    // eslint-disable-next-line good-practices/no-function-dependency\n    iapi.getChildren('yAxisSelectorUI').forEach(comp => {\n      comp.setAxisDimention();\n    });\n    // function for adjusting value padding depending upon data and axis labels.\n    iapi.getChildren('canvas')[0].setCanvasPadding();\n    iapi.setAxisDimention();\n    iapi.config.showLegend && legend.postSpaceManager();\n\n    iapi.allocateDimensionOfChartMenuBar();\n  }\n  /**\n   * Sets dimension of Axis components\n   */\n  setAxisDimention () {\n    var iapi = this,\n      config = iapi.config,\n      xAxis = iapi.getChildren('xAxis')[0],\n      xDepth = config.xDepth || 0,\n      canvasConfig = iapi.getChildren('canvas')[0].config,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      canvasPadding = canvasConfig.canvasPadding,\n      canvasPaddingLeft = canvasConfig.canvasPaddingLeft,\n      shift = config.shift || 0,\n      canvasPaddingRight = canvasConfig.canvasPaddingRight; // eslint-disable-line good-practices/no-single-usage-variable\n    xAxis && xAxis.setAxisDimention({\n      x: config.canvasLeft + xDepth + Math.max(canvasPaddingLeft, canvasPadding),\n      y: xAxis.config.isOpposit\n        ? config.canvasTop - canvasBorderWidth\n        : config.canvasBottom + shift + canvasBorderWidth,\n      opposite: xAxis.config.isOpposit\n        ? config.canvasBottom + shift + canvasBorderWidth\n        : config.canvasTop - canvasBorderWidth,\n      axisLength: config.canvasWidth - xDepth - Math.max(canvasPaddingLeft, canvasPadding) -\n                              Math.max(canvasPaddingRight, canvasPadding)\n    });\n  }\n\n  /**\n   * Managing the space of all the components of the chart including all the axiss\n   */\n  _spaceManager () {\n    // todo marge _allocateSpace and _spacemanager\n    var spaceForActionBar,\n      actionBarSpace,\n      availableWidth,\n      availableHeight,\n      iapi = this,\n      canvas = iapi.getChildren('canvas')[0],\n      config = iapi.config,\n      // axesArr = config.axesArr,\n      // components = iapi.components,\n      legendPosition = config.legendPosition ? config.legendPosition.split('-') : [],\n      // axis = config.axisDataSetMap,\n      xAxis = iapi.getChildren('xAxis'),\n      // yAxis = iapi.getChildren('yAxis'),\n      axisSelectorUI = iapi.getChildren('yAxisSelectorUI'),\n      yDepth = config.yDepth,\n      legend = iapi.getFromEnv('legend'), // eslint-disable-line good-practices/no-single-usage-variable\n      // axesPadding = config.axesPadding,\n      rightPadding = 0,\n      leftPadding = 0,\n      // length = yAxis.length,\n      length = axisSelectorUI.length || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      // yAxisObj,\n      i,\n      yAxisSpaceUsed,\n      // axesMap,\n      // leftAxes,\n      // rightAxes,\n      allotedSpace,\n      // mappedAxis,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      showBorder = pluckNumber(chartAttrs.showborder, iapi.config.is3D ? 0 : 1), // eslint-disable-line good-practices/no-single-usage-variable\n      canvasBorderWidth = canvas.config.canvasBorderWidth,\n      chartBorderWidth =\n                  config.borderWidth = showBorder ? pluckNumber(chartAttrs.borderthickness, 1) : 0,\n      canvasMarginTop = config.canvasMarginTop,\n      canvasMarginBottom = config.canvasMarginBottom,\n      canvasMarginLeft = config.canvasMarginLeft,\n      canvasMarginRight = config.canvasMarginRight,\n      minCanvasHeight = config.minCanvasHeight,\n      minCanvasWidth = config.minCanvasWidth,\n      height = config.height,\n      width = config.width,\n      diff,\n      heightAdjust = false, // eslint-disable-line good-practices/no-single-usage-variable\n      widthAdjust = false, // eslint-disable-line good-practices/no-single-usage-variable\n      top,\n      bottom,\n      left,\n      right,\n      currentCanvasHeight,\n      currentCanvasWidth,\n      origCanvasTopMargin = config.origCanvasTopMargin,\n      origCanvasBottomMargin = config.origCanvasBottomMargin,\n      origCanvasLeftMargin = config.origCanvasLeftMargin,\n      origCanvasRightMargin = config.origCanvasRightMargin,\n      sum;\n    //* ***** Manage space\n    iapi._allocateSpace({\n      top: chartBorderWidth,\n      bottom: chartBorderWidth,\n      left: chartBorderWidth,\n      right: chartBorderWidth\n    });\n\n    iapi._allocateSpace({\n      left: config.canvasMarginLeft,\n      right: config.canvasMarginRight\n    });\n    //* ***** Manage space\n    if (legendPosition[0] === 'left' || legendPosition[0] === 'right') {\n      allotedSpace = config.canvasWidth * 0.3;\n    } else {\n      allotedSpace = config.canvasHeight * 0.3;\n    }\n    // No space is allocated for legend drawing in single series charts\n    ((config.hasLegend !== false) && xAxis) && config.showLegend && iapi._allocateSpace(legend._manageLegendPosition(allotedSpace));\n\n    // @todo uncomment this code\n    for (i = 0; i < length; i++) {\n      yAxisSpaceUsed = axisSelectorUI[i].placeAxis(config.canvasWidth);\n      rightPadding += yAxisSpaceUsed.rightPadding;\n      leftPadding += yAxisSpaceUsed.leftPadding;\n      iapi._allocateSpace(yAxisSpaceUsed.dimension);\n    }\n    spaceForActionBar = config.availableHeight * 0.225; // eslint-disable-line good-practices/no-single-usage-variable\n    actionBarSpace = (iapi._manageActionBarSpace && iapi._manageActionBarSpace(spaceForActionBar)) || {}; // eslint-disable-line good-practices/no-single-usage-variable\n    iapi._allocateSpace(actionBarSpace);\n\n    availableHeight = (legendPosition[0] === POSITION_TOP || legendPosition[0] === POSITION_BOTTOM) ? config.canvasHeight * 0.6\n      : config.canvasWidth * 0.6;\n    iapi._manageChartMenuBar(availableHeight);\n    availableWidth = config.canvasWidth * 0.7; // eslint-disable-line good-practices/no-single-usage-variable\n    if (availableWidth > (rightPadding + leftPadding)) {\n      iapi._allocateSpace({\n        'left': leftPadding,\n        'right': rightPadding\n      });\n    }\n    availableHeight = config.canvasHeight * 0.6;\n    xAxis[0] && iapi._allocateSpace(xAxis[0].placeAxis(availableHeight));\n    // alocate the space for datasets\n    availableHeight = config.canvasHeight * 0.325;\n    iapi._getDSspace && iapi._allocateSpace(iapi._getDSspace(availableHeight));\n\n    if (yDepth) {\n      iapi._allocateSpace({\n        bottom: yDepth\n      });\n      // shift = xDepth + canvasBasePadding + canvasBaseDepth;\n    }\n\n    iapi._allocateSpace({\n      top: canvasBorderWidth,\n      bottom: canvasBorderWidth,\n      left: canvasBorderWidth,\n      right: canvasBorderWidth\n    });\n    // Allocate space for canvas margin only if the margin is less than the margin entered by the user.\n    top = canvasMarginTop > config.canvasTop ? (canvasMarginTop - config.canvasTop) : 0;\n    bottom = canvasMarginBottom > (height - config.canvasBottom)\n      ? (canvasMarginBottom + config.canvasBottom - height) : 0;\n    left = canvasMarginLeft > config.canvasLeft ? (canvasMarginLeft - config.canvasLeft) : 0;\n    right = canvasMarginRight > (width - config.canvasRight)\n      ? (canvasMarginRight + config.canvasRight - width) : 0;\n\n    iapi._allocateSpace({\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right\n    });\n    // Forcing canvas height to its minimum\n    if (heightAdjust) {\n      sum = origCanvasTopMargin + origCanvasBottomMargin;\n      currentCanvasHeight = config.canvasHeight;\n      if (currentCanvasHeight > minCanvasHeight) {\n        diff = currentCanvasHeight - minCanvasHeight;\n        top = diff * origCanvasTopMargin / sum;\n        bottom = diff * origCanvasBottomMargin / sum;\n      }\n      iapi._allocateSpace({\n        top: top,\n        bottom: bottom\n      });\n    }\n\n    // Forcing canvas width to its minimum\n    if (widthAdjust) {\n      sum = origCanvasLeftMargin + origCanvasRightMargin;\n      currentCanvasWidth = config.canvasWidth;\n      if (currentCanvasWidth > minCanvasWidth) {\n        diff = currentCanvasWidth - minCanvasWidth;\n        left = diff * origCanvasLeftMargin / sum;\n        right = diff * origCanvasRightMargin / sum;\n      }\n      iapi._allocateSpace({\n        left: left,\n        right: right\n      });\n    }\n\n    config.actualCanvasMarginTop = top;\n    config.actualCanvasMarginLeft = left;\n    config.actualCanvasMarginRight = right;\n    config.actualCanvasMarginBottom = bottom;\n\n    canvas.setDimension({\n      top: config.canvasTop,\n      left: config.canvasLeft,\n      width: config.canvasWidth,\n      height: config.canvasHeight\n    });\n  }\n\n  /**\n   * Function to parse some additional parameters of the chart\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configure (dataObj) {\n    super.configure(dataObj);\n    var iapi = this,\n      conf = iapi.config,\n      chartAttr = iapi.getFromEnv('dataSource').chart;\n\n    conf.axesPadding = 5;\n    conf.allowAxisShift = pluckNumber(chartAttr.allowaxisshift, 1);\n    conf.allowSelection = pluckNumber(chartAttr.allowselection, 1);\n    conf.checkBoxColor = pluck(chartAttr.checkboxcolor, '#2196f3');\n    conf.axisConfigured = true;\n  }\n}\nexport default MultiAxisLine;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport CategoryAxis from '@fusioncharts/core/src/axis/category';\nimport AxisSelectorUI from '../_internal/components/axis-selector-ui';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n    configure,\n    xAxis,\n    redraw = () => axisRefVisualCartesian.asyncDraw(); // eslint-disable-line good-practices/no-single-usage-variable\n  configure = chart._feedAxesRawData();\n  AxisSelectorUI.resetAxisCount();\n  componentFactory(chart, AxisSelectorUI, 'yAxisSelectorUI', configure.yAxisConfigure &&\n    configure.yAxisConfigure.length, configure.yAxisConfigure);\n  componentFactory(chart, CategoryAxis, 'xAxis', 1, configure.xAxisConfigure);\n  xAxis = chart.getChildren('xAxis')[0];\n  xAxis.setLinkedItem('canvas', canvas);\n  axisRefVisualCartesian.setLinkedItem(xAxis.getId(), xAxis);\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, xAxis);\n  canvas.attachAxis(xAxis, false);\n  canvas.setPrimaryAxis('xAxis', xAxis);\n  chart._setCategories();\n}\n","import { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { componentFactory, TRACKER_FILL } from '@fusioncharts/core/src/lib';\nimport NumericAxis from '@fusioncharts/core/src/axis/numeric';\nimport CheckBox from '@fusioncharts/core/src/toolbox/tools/checkbox';\n\nconst checkboxTopPadding = 4;\nlet removeInfo = function (_existingAxes, _axisMapById) {\n    let key,\n      _info,\n      i;\n    for (i = _existingAxes.length - 1; i > -1; i--) {\n      key = _existingAxes[i];\n      _info = _axisMapById.get(key);\n      _info.checkbox && _info.checkbox.remove();\n      _info.axis && _info.axis.remove();\n      _axisMapById['delete'](key);\n    }\n  },\n  swap = (a, b, map) => {\n    let e1 = [a, map.get(a)], // eslint-disable-line good-practices/no-single-usage-variable\n      e2 = [b, map.get(b)], // eslint-disable-line good-practices/no-single-usage-variable\n      mapArray = Array.from(map.entries()), // eslint-disable-line good-practices/no-single-usage-variable\n      newMapArray = mapArray.map(([key, value]) => { // eslint-disable-line good-practices/no-single-usage-variable\n        if (key === a) {\n          return e2;\n        } else if (key === b) {\n          return e1;\n        }\n        return [key, value];\n      });\n    return new Map(newMapArray);\n  },\n  factoryAxis = function (parent) {\n    let axesConf = parent.config.axesConf,\n      axes,\n      axisMapById,\n      activeAxis,\n      existingInfo,\n      exsitingAxisMapById = parent.config.axisMapById,\n      existingAxes = (exsitingAxisMapById && Array.from(exsitingAxisMapById.keys())) || [],\n      info,\n      firstAxis = true, // eslint-disable-line good-practices/no-single-usage-variable\n      canvas = parent.getFromEnv('chart').getChildren('canvas')[0],\n      axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n      redraw = () => axisRefVisualCartesian.asyncDraw(), // eslint-disable-line good-practices/no-single-usage-variable\n      removeId = function (id) {\n        let index = existingAxes.indexOf(id);\n        (index !== -1) && existingAxes.splice(index, 1);\n      };\n\n    componentFactory(parent, NumericAxis, 'yAxis', axesConf.length, axesConf);\n\n    axes = (parent.getChildren('yAxis') || []).slice(0);\n    axisMapById = parent.config.axisMapById = new Map(); // eslint-disable-line good-practices/no-single-usage-variable\n    (parent.config.side === 'l' ? axes.reverse() : axes).forEach((axis) => {\n      if (axis.getState('removed') || axis.config.showaxis === 0) {\n        return;\n      }\n      let axisId = axis.getId();\n      info = {};\n      info.axis = axis;\n      existingInfo = exsitingAxisMapById && exsitingAxisMapById.get(axisId);\n      info.checkbox = existingInfo && existingInfo.checkbox;\n      axisMapById.set(axisId, info);\n      if (axis.config.showaxis === 0) {\n        axis.hide();\n      } else {\n        axis.show();\n      }\n      canvas.attachAxis(axis, true);\n      firstAxis && (parent.config.besideCanvas = axisId);\n      firstAxis = false; // eslint-disable-line good-practices/no-single-usage-variable\n      if (!axisCount) {\n        activeAxis = axis;\n      }\n      axis.setLinkedItem('canvas', canvas);\n      axisRefVisualCartesian.setLinkedItem(axis.getId(), axis);\n      axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, axis);\n      axisCount++;\n      removeId(axisId);\n    });\n    activeAxis && canvas.setPrimaryAxis('yAxis', activeAxis);\n    removeInfo(existingAxes, exsitingAxisMapById);\n  },\n  axisCount = 0;\n/**\n * This module handles the customized UI for axis in multiaxis charts\n */\nclass AxisSelectorUI extends ComponentInterface {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.registerFactory('axis', factoryAxis);\n  }\n  /**\n   * reset axis count\n   */\n  static resetAxisCount () {\n    axisCount = 0;\n  }\n  /**\n   * function to configure this component by given configuration\n   * @param {Object} conf configuration object\n   */\n  configureAttributes (conf = {}) {\n    let config = this.config;\n    config.axesConf = (conf.axesConf || []);\n    config.checkboxesConf = conf.checkboxesConf || [];\n    config.side = conf.side;\n  }\n  /**\n   * function to allocate and calculate total required space\n   * @param {Number} avlWidth avialable width to allocated\n   */\n  placeAxis (avlWidth) {\n    let axisSelectorUI = this,\n      availableWidth = avlWidth,\n      side = axisSelectorUI.config.side, // eslint-disable-line good-practices/no-single-usage-variable\n      axisMapById = axisSelectorUI.getAxesDetails(), // eslint-disable-line good-practices/no-single-usage-variable\n      axesPadding = axisSelectorUI.getFromEnv('chartConfig').axesPadding,\n      rightPadding = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      leftPadding = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      dim,\n      dimension = {\n        right: 0,\n        left: 0\n      };\n\n    axisMapById.forEach((info) => {\n      let value = (info.value || (info.value = {})),\n        axis = info.axis;\n      if (axis.getState('removed') || axis.config.showaxis === 0) {\n        return;\n      }\n      dim = axis.placeAxis(availableWidth * 0.7);\n      if (side === 'r') {\n        availableWidth -= (value.width = dim.right);\n        dimension.right += dim.right;\n        rightPadding += axesPadding;\n      } else {\n        availableWidth -= (value.width = dim.left);\n        dimension.left += dim.left;\n        leftPadding += axesPadding;\n      }\n    });\n\n    return { dimension, rightPadding, leftPadding };\n  }\n  /**\n   * calculate post space management related calculation\n   */\n  setAxisDimention () {\n    let axisSelectorUI = this,\n      conf = axisSelectorUI.config,\n      axisMapById = axisSelectorUI.getAxesDetails(), // eslint-disable-line good-practices/no-single-usage-variable\n      axesPadding = axisSelectorUI.getFromEnv('chartConfig').axesPadding,\n      canvasConfig = axisSelectorUI.getFromEnv('chart').getChildren('canvas')[0].config,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      canvasPaddingTop = canvasConfig.canvasPaddingTop,\n      canvasPaddingBottom = canvasConfig.canvasPaddingBottom, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasLeft = canvasConfig.canvasLeft,\n      canvasTop = canvasConfig.canvasTop, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasHeight = canvasConfig.canvasHeight, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasRight = canvasLeft + canvasConfig.canvasWidth,\n      isRight = conf.side === 'r', // eslint-disable-line good-practices/no-single-usage-variable\n      oppositePos = conf.side === 'r' ? (canvasLeft - canvasBorderWidth) : (canvasRight + canvasBorderWidth), // eslint-disable-line good-practices/no-single-usage-variable\n      padding = 0;\n\n    axisMapById.forEach((info) => {\n      let value = (info.value || (info.value = {})),\n        axis = info.axis;\n      if (axis.config.showaxis === 0 || axis.getState('removed')) {\n        return;\n      }\n\n      if (isRight) {\n        value.x = canvasRight + canvasBorderWidth + padding + axesPadding;\n      } else {\n        value.x = canvasLeft - canvasBorderWidth - padding - axesPadding;\n      }\n      value.y = canvasTop + canvasPaddingTop;\n      value.height = canvasHeight - canvasPaddingTop - canvasPaddingBottom;\n      value.opposite = oppositePos;\n      padding += value.width + axesPadding;\n\n      axis.setAxisDimention({\n        x: value.x,\n        y: value.y,\n        opposite: value.opposite,\n        axisLength: value.height\n      });\n    });\n  }\n  /**\n   * function to draw hot elements of axes.\n   * It helps to interact with axes\n   */\n  drawHotElements () {\n    let axisSelectorUI = this,\n      conf = axisSelectorUI.config,\n      isRight = conf.side === 'r', // eslint-disable-line good-practices/no-single-usage-variable\n      allowAxisShift = axisSelectorUI.getFromEnv('chartConfig').allowAxisShift, // eslint-disable-line good-practices/no-single-usage-variable\n      chart = axisSelectorUI.getFromEnv('chart'),\n      axisMapById = conf.axisMapById, // eslint-disable-line good-practices/no-single-usage-variable\n      axisHotElements = axisSelectorUI.getGraphicalElement('axisHotElement') || [],\n      k,\n      length,\n      counter = -1,\n      attr = {\n        cursor: 'col-resize',\n        stroke: TRACKER_FILL,\n        fill: TRACKER_FILL,\n        visibility: true\n      };\n\n    if (allowAxisShift) {\n      axisMapById.forEach((info, key) => {\n        let hotElement,\n          value = info.value;\n        attr.x = value.x + (isRight ? 0 : -value.width);\n        attr.y = value.y;\n        attr.width = value.width;\n        attr.height = value.height;\n        // Creating the hot element if not created\n        if (!(hotElement = axisHotElements[++counter])) {\n          hotElement = axisSelectorUI.addGraphicalElement('axisHotElement', axisSelectorUI.getFromEnv('paper').rect(chart.getChildContainer('trackerGroup')), true);\n          hotElement.on('fc-click', axisSelectorUI._resuffelAxis);\n        }\n        hotElement.attr(attr).data('axisDetails', {\n          axisSelectorUI: axisSelectorUI,\n          canvas: chart.getChildren('canvas')[0],\n          axisId: key\n        });\n      });\n    }\n\n    for (k = counter + 1, length = axisHotElements.length; k < length; k++) { // eslint-disable-line good-practices/no-single-usage-variable\n      axisSelectorUI.removeGraphicalElement(axisHotElements[k]);\n    }\n  }\n  /**\n   * function to draw checkboxes\n   */\n  drawCheckBoxes () {\n    let axisSelectorUI = this,\n      conf = axisSelectorUI.config,\n      // chartId = axisSelectorUI.getFromEnv('chartInstance').id,\n      chartConfig = axisSelectorUI.getFromEnv('chartConfig'),\n      // chart = axisSelectorUI.getFromEnv('chart'),\n      // checkBoxContainer = chart.getChildContainer('buttonGroup'),\n      // toolBoxAPI = axisSelectorUI.getFromEnv('toolBoxAPI'),\n      // tb = axisSelectorUI.getFromEnv('toolbox'),\n      // CheckboxSymbol = toolBoxAPI.CheckboxSymbol,\n      isRight = conf.side === 'r', // eslint-disable-line good-practices/no-single-usage-variable\n      axisMapById = conf.axisMapById;\n\n    if (chartConfig.allowSelection) {\n      axisMapById.forEach((info, key) => {\n        let value = info.value,\n          currCheckBox = info.checkbox,\n          axisConfig = info.axis.config,\n          checkboxClickHandler = function () {\n            let tool = this;\n\n            tool.toggle();\n            axisSelectorUI._dolegendInteraction.call(tool, key, tool.getFromEnv('chart'));\n            axisConfig.checkBoxChecked = !axisConfig.checkBoxChecked;\n          },\n          // state = 'updating',\n          padding = isRight ? info.axis.getAxisConfig('axisNamePadding') : -value.width; // eslint-disable-line good-practices/no-single-usage-variable\n\n        if (!currCheckBox) {\n          currCheckBox = info.checkbox = new CheckBox();\n          axisSelectorUI.attachChild(currCheckBox, 'checkbox', true);\n          currCheckBox.configure({\n            isChecked: true,\n            text: '',\n            stroke: chartConfig.checkBoxColor,\n            symbolStroke: chartConfig.checkBoxColor,\n            strokeWidth: 1,\n            symbolStrokeWidth: 1,\n            containerInfo: {\n              id: 'buttonGroup',\n              label: 'group',\n              isParent: true\n            }\n          });\n          currCheckBox.addEventListener('fc-click', checkboxClickHandler);\n        }\n        currCheckBox.setDimension({\n          x: value.x + padding,\n          y: value.y + value.height + checkboxTopPadding\n        });\n      });\n    } else {\n      axisMapById.forEach((info, key) => {\n        info.checkbox && info.checkbox.remove();\n        delete info.checkbox;\n      });\n    }\n  }\n  _createLayers () {\n    let axisSelectorUI = this,\n      parentLayer = axisSelectorUI.getFromEnv('chart').getChildContainer('selectorGroup');\n    axisSelectorUI.createContainer('axisBottomGroup', { name: 'axis-bottom-group' }, parentLayer);\n    axisSelectorUI.createContainer('axisTopGroup', { name: 'axis-top-group' }, parentLayer);\n    axisSelectorUI.createContainer('buttonGroup', { name: 'buttons' }, parentLayer);\n  }\n\n  createContainer (containerName, attr, container) {\n    return this.addChildContainer(containerName, this.getFromEnv('animationManager').setAnimation({\n      container,\n      attr,\n      el: this.getChildContainer(containerName) || 'group',\n      component: this,\n      label: 'group'\n    }));\n  }\n  /**\n   * function to handle draw job\n   */\n  draw () {\n    this._createLayers();\n    this.drawHotElements();\n    this.drawCheckBoxes();\n  }\n  /**\n   * Function to swap axis on click\n   */\n  _resuffelAxis () {\n    var data = this.data('axisDetails'),\n      axisSelectorUI = data.axisSelectorUI,\n      conf = axisSelectorUI.config,\n      canvas = data.canvas,\n      axisId = data.axisId,\n      axesDetails = axisSelectorUI.getAxesDetails();\n    if (conf.besideCanvas !== axisId) {\n      axesDetails = axisSelectorUI.config.axisMapById = swap(conf.besideCanvas, axisId, axesDetails);\n    }\n    conf.besideCanvas = axisId;\n    canvas.setPrimaryAxis('yAxis', axesDetails.get(axisId).axis);\n    axisSelectorUI.setAxisDimention();\n\n    axisSelectorUI.asyncDraw();\n    canvas.getChildren('axisRefVisualCartesian')[0].asyncDraw();\n  }\n  /**\n   * Function to manipulate legends on checkbox click\n   * @param {number} axisIndex The index of the axis against which the checkbox is clicked\n   * @param {Object} chart the chart object\n   */\n  _dolegendInteraction (axisId, chart) {\n    var checkbox = this,\n      datasets = [],\n      // legend = iapi.getChildren('legend'),\n      obj,\n      dataset;\n\n    chart.iterateComponents((child) => {\n      if ((child.getType() === 'dataset')) {\n        datasets.push(child);\n      }\n    });\n\n    for (obj in datasets) {\n      if (datasets.hasOwnProperty(obj)) {\n        dataset = datasets[obj];\n        if (dataset.getFromEnv('yAxis').getId() === axisId) {\n          if (!dataset.getState('visible') && checkbox.config.checked) {\n            dataset.config.legendInteractivity = true;\n            dataset.show();\n          } else if (dataset.getState('visible') && !checkbox.config.checked) {\n            dataset.config.legendInteractivity = true;\n            dataset.hide();\n          }\n        }\n      }\n    }\n    // legend.drawLegend();\n  }\n  /**\n   * Function to change the state of the checkbox when legend is clicked\n   * @param {Object} e The evet object\n   */\n  manipulateCheckBox (e) {\n    var data = e.data,\n      clickedDS = data.dataset,\n      axisId = clickedDS.getFromEnv('yAxis').getId(), // eslint-disable-line good-practices/no-single-usage-variable\n      vCanvas = clickedDS.getLinkedParent(), // eslint-disable-line good-practices/no-single-usage-variable\n      allDS = vCanvas.getChildren().dataset,\n      checkboxUncheck = true, // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      len,\n      dataset,\n      info,\n      axisMapById = this.getAxesDetails(); // eslint-disable-line good-practices/no-single-usage-variable\n\n    if (!(info = axisMapById.get(axisId))) {\n      return;\n    }\n    if (data.state === 'hide') {\n      for (i = 0, len = allDS.length; i < len; i++) {\n        dataset = allDS[i];\n        if (dataset.getState('visible')) {\n          checkboxUncheck = false;\n        }\n      }\n      if (checkboxUncheck) {\n        info.checkbox && info.checkbox.uncheck();\n      }\n    } else {\n      info.checkbox && info.checkbox.check();\n    }\n  }\n  /**\n   * return axis components\n   * @return {Object} axesMap\n   */\n  getAxesDetails () {\n    return this.config.axisMapById;\n  }\n  /**\n   * return type of this component\n   */\n  getType () {\n    return 'customAxisUI';\n  }\n  /**\n   * return name of this component\n   */\n  getName () {\n    return 'multiAxisSelectorUI';\n  }\n  /**\n   * function to return axes attached to this comp.\n   * This API is for external invocation whre the axes\n   * is required from the outside components.\n   * @return {Array} - axes\n   */\n  getAxes () {\n    // eslint-disable-next-line good-practices/no-function-dependency\n    return Array.from(this.config.axisMapById.values()).map(elem => elem.axis);\n  }\n}\nexport default AxisSelectorUI;\n","import VirtualCanvas from '@fusioncharts/charts/src/_internal/components/canvases/vcanvas';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n/**\n * Function to create virtual canvas, additionally axis data is added to the env of virtual canvas\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    axisSelectorUI = chart.getChildren('yAxisSelectorUI'), // eslint-disable-line good-practices/no-single-usage-variable\n    axisY = chart.getFromEnv('dataSource').axis, // eslint-disable-line good-practices/no-single-usage-variable\n    vCanvas,\n    axes,\n    xAxis = [],\n    yAxis = [],\n    vC,\n    i,\n    k,\n    j;\n\n  axes = chart.getChildren('xAxis');\n  for (k = 0; k < (axes && axes.length); k++) {\n    if (!axes[k].getState('removed')) {\n      xAxis.push(axes[k]);\n    }\n  }\n  axisSelectorUI.forEach(comp => {\n    axes = comp.getChildren('yAxis');\n    for (k = 0; k < (axes && axes.length); k++) {\n      if (!axes[k].getState('removed')) {\n        yAxis.push(axes[k]);\n      }\n    }\n  });\n\n  componentFactory(canvas, VirtualCanvas, 'vCanvas', xAxis.length * yAxis.length);\n  vCanvas = canvas.getChildren('vCanvas');\n  for (i = 0, k = 0; i < (xAxis && xAxis.length); i++) {\n    for (j = 0; j < (yAxis && yAxis.length); j++, k++) {\n      vC = vCanvas[k];\n      vC.configure();\n      vC.xAxis(xAxis[i])\n        .yAxis(yAxis[j])\n        .canvas(canvas);\n      vC.addToEnv('axisData', axisY[k]);\n      vC.addToEnv('vCanvas', vCanvas[k]);\n    }\n  }\n}\n","import { datasetFactory } from '@fusioncharts/core/src/lib';\nimport MultiAxisDataset from '../dataset/multiaxisline';\n\n/**\n * Function to create the datasets\n */\nexport default function (chart) {\n  let datasetsJSON,\n    length,\n    indices,\n    vC,\n    children = chart.getChildren(),\n    yAxisSelectorUI = children.yAxisSelectorUI, // eslint-disable-line good-practices/no-single-usage-variable\n    canvas = children.canvas[0], // eslint-disable-line good-practices/no-single-usage-variable\n    numLen = (length + '').length,\n    vCanvas = canvas.getChildren('vCanvas'),\n    visibilityChangedHandler = function (e) {\n      yAxisSelectorUI.forEach(comp => {\n        comp.manipulateCheckBox(e);\n      });\n    },\n    addDatasetVisibilityChangedEventListener = (dataset) => {\n      dataset.addEventListener('datasetVisibilityChanged', visibilityChangedHandler);\n    };\n\n  for (let i = 0, len = vCanvas.length; i < len; i++) {\n    vC = vCanvas[i];\n    if (vC.getState('removed')) {\n      continue;\n    }\n    datasetsJSON = vC.getFromEnv('axisData').dataset;\n    // vC.addToEnv('axisData', axis);\n    if (datasetsJSON) {\n      length = datasetsJSON.length;\n      // for each dataset its datasetindex is a fractional number where the whole part is the index of its parent axis\n      // and the fractional part is its index in that axis\n      indices = Array(length).fill(vC.getFromEnv('yAxis').config.axisIndex).map((n, j) => { // eslint-disable-line\n        return n + (j + 1) * (1 / Math.pow(10, numLen));\n      });\n      datasetFactory(vC, MultiAxisDataset, 'dataset', length, datasetsJSON, indices);\n      children = vC.getChildren('dataset');\n      // Adding event listeners to each dataset\n      children.forEach(addDatasetVisibilityChangedEventListener);\n    }\n  }\n}\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Line from '@fusioncharts/charts/src/dataset/line';\nimport { pluck, pluckNumber, HUNDREDSTRING, getDashStyle } from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport multiaxisAnimation from './index.animation';\naddDep({\n  name: 'multiAxislineAnimation',\n  type: 'animationRule',\n  extension: multiaxisAnimation\n});\n/**\n * Class for MultiAxisLine chartAPI\n */\nclass MultiAxisDataset extends Line {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'multiaxisline';\n  }\n  /**\n   * Function to configure the data given by the user at the dataset level\n   * @param {Object} datasetJSON JSON for dataset configurations\n   * @return {boolean} False if no datasetJSON is present\n   */\n  configure (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    super.configure(datasetJSON);\n  }\n  /**\n   * Function to parse the data given by the user at the dataset level\n   */\n  parseAttributes () {\n    var dataSet = this,\n      jsonData = dataSet.config.JSONData,\n      dataSetConfig = dataSet.config,\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      axis = dataSet.getFromEnv('axisData'),\n      lineDashStyle,\n      lineDashed;\n\n    super.parseAttributes();\n\n    dataSetConfig.linethickness = pluckNumber(jsonData.linethickness, axis.linethickness,\n      chartAttr.linethickness, 2);\n    dataSetConfig.lineDashLen = pluckNumber(jsonData.linedashlen, axis.linedashlen,\n      chartAttr.linedashlen, 5);\n    dataSetConfig.lineDashGap = pluckNumber(jsonData.linedashgap, axis.linedashgap,\n      chartAttr.linedashgap, 4);\n    dataSetConfig.alpha = pluckNumber(jsonData.alpha, axis.linealpha,\n      chartAttr.linealpha, HUNDREDSTRING);\n    dataSetConfig.linecolor = pluck(jsonData.color, axis.linecolor, axis.color, chartAttr.linecolor,\n      dataSetConfig.plotColor);\n\n    dataSetConfig.legendSymbolColor = dataSet.getName() === 'line' ? dataSetConfig.lineColor\n      : dataSetConfig.plotFillColor;\n    lineDashed = pluckNumber(jsonData.dashed, axis.linedashed, chartAttr.linedashed);// eslint-disable-line good-practices/no-single-usage-variable\n    lineDashStyle = getDashStyle(dataSetConfig.lineDashLen, dataSetConfig.lineDashGap);// eslint-disable-line good-practices/no-single-usage-variable\n    dataSetConfig.anchorbordercolor = pluck(jsonData.anchorbordercolor, jsonData.color, axis.color,\n      chartAttr.anchorbordercolor, dataSetConfig.lineColor, dataSetConfig.plotColor);\n    dataSetConfig.lineDashStyle = lineDashed\n      ? lineDashStyle : 'none';\n  }\n}\nexport default MultiAxisDataset;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  '*.dataset.multiaxisline': lineAnimation['*.dataset.line']\n};\n","import Msstepline from '@fusioncharts/powercharts/src/chart/msstepline';\nexport default Msstepline;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\nimport MSStepLineDataset from '../../dataset/msstepline';\n\nconst MSSTEPLINE = 'msstepline';\nclass MSStepLine extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSStepLine';\n  }\n\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSStepLine';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = MSSTEPLINE;\n    config.drawverticaljoins = 1;\n    config.useforwardsteps = 1;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n    _setDefaultConfig.call(this);\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n  getDSdef () {\n    return MSStepLineDataset;\n  }\n}\nexport default MSStepLine;\n","import { pluckNumber, pluck, toRaphaelColor, getFirstValue } from '@fusioncharts/core/src/lib';\nimport LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport msStepLineAnimation from './index.animation';\nlet LINE = 'line',\n  H = 'H',\n  V = 'V',\n  M = 'M',\n  UNDEF;\naddDep({\n  name: 'stepLineAnimation',\n  type: 'animationRule',\n  extension: msStepLineAnimation\n});\nclass MSStepLineDataset extends LineDataset {\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.getPathArr = function () {\n      var pathObj = this,\n        pathArr = pathObj.pathArr,\n        path2Arr = pathObj.path2Arr;\n\n      if (pathArr.length || path2Arr.length) {\n        return pathArr.concat(path2Arr);\n      }\n      return [];\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'stepLine';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.drawverticaljoins = UNDEF;\n    config.useforwardsteps = UNDEF;\n  }\n  _addLegend () {\n    var dataset = this,\n      conf = dataset.config,\n      legend = dataset.getFromEnv('legend'),\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      drawAnchors = pluckNumber(conf.drawanchors, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      legendItem,\n      JSONData = dataset.config.JSONData || {},\n      config = { // eslint-disable-line good-practices/no-single-usage-variable\n        enabled: conf.includeinlegend,\n        type: LINE,\n        /* In case of scatter (a child chartAPI of line),\n        line is drawn in legend only when drawLine is set\n        to true. */\n        drawLine: pluck(conf.drawLine, true),\n        anchorSide: drawAnchors ? conf.anchorsides : 0,\n        label: getFirstValue(dataset.config.JSONData.seriesname),\n        legendIconAlpha: pluckNumber(JSONData.legendiconalpha)\n      };\n    if (conf.includeinlegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      }\n      legendItem.configure(config);\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor({\n            color: conf.anchorbgcolor,\n            alpha: conf.anchorbgalpha\n          }),\n          bgAlpha: pluckNumber(JSONData.legendiconbgalpha, JSONData.legendiconalpha, chartAttr.legendiconbgalpha, chartAttr.legendiconalpha, conf.anchorbgalpha),\n          borderAlpha: pluckNumber(JSONData.legendiconborderalpha, JSONData.legendiconalpha, chartAttr.legendiconborderalpha, chartAttr.legendiconalpha, '100'),\n          rawFillColor: conf.anchorbgcolor,\n          rawStrokeColor: conf.anchorbordercolor,\n          stroke: toRaphaelColor({\n            color: conf.anchorbordercolor,\n            alpha: '100'\n          }),\n          'stroke-width': conf.anchorborderthickness\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item is dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n\n  getLinePath (data, positions) {\n    var dataset = this,\n      conf = dataset.config,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      connectNullData = pluckNumber(chartConfig.connectnulldata), // eslint-disable-line good-practices/no-single-usage-variable\n      obj = {},\n      drawVerticalJoins = pluckNumber(conf.drawverticaljoins),\n      halfStep = pluckNumber(chartConfig.stepatmiddle) ? dataset.getFromEnv('xAxis').getPVR() * 0.5 : 0,\n      // Used for determining whether the last value was valid\n      // Initially it is false\n      lastValidValue = obj.lastValidValue || false,\n      temp = obj.temp || [],\n      temp2 = obj.temp2 || [], // eslint-disable-line good-practices/no-single-usage-variable\n      pathArr = obj.pathArr || [],\n      path2Arr = obj.path2Arr || [], // eslint-disable-line good-practices/no-single-usage-variable\n      lastXPos,\n      i,\n      config,\n      xPos,\n      yPos,\n      pointsJoined = obj.pointsJoined || 0,\n      dataObj,\n      setValue,\n      startPos = (positions && positions.begin) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      endPos = (positions && positions.end) || data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      step = chartConfig.viewPortConfig.step || 1, // eslint-disable-line good-practices/no-single-usage-variable\n      dataWithRemovedPaths = [];\n    // Added current dataStore to arr\n    dataWithRemovedPaths = dataWithRemovedPaths.concat(data);\n\n    for (i = startPos; i < endPos; i += step) {\n      dataObj = dataWithRemovedPaths[i];\n      if (!dataObj) {\n        continue;\n      }\n\n      config = dataObj.config;\n      setValue = config.setValue;\n\n      // skip the data plot if isSkipped flag is set to false\n      if (setValue === UNDEF || (config && config.isSkipped === true)) {\n        config && (delete config.isSkipped);\n        continue;\n      }\n      xPos = config._Px;\n      yPos = config._Py;\n\n      // create the path array\n      // If the last value is valid\n      if (setValue === null || setValue.isNull) {\n        // If null data points are also to be connected\n        if (!connectNullData) {\n          temp = [];\n          temp2 = [];\n          lastValidValue = false;\n        }\n      } else {\n        if (lastValidValue) {\n          if (temp.length) {\n            pathArr = pathArr.concat(temp);\n            temp = [];\n            pointsJoined++;\n          }\n          if (pluckNumber(conf.useforwardsteps)) {\n            pathArr.push([H, xPos - halfStep]);\n            if (drawVerticalJoins) {\n              pathArr.push([V, yPos]);\n            } else {\n              pathArr.push([M, xPos - halfStep, yPos]);\n            }\n            if (halfStep) {\n              pathArr.push([H, xPos]);\n            }\n          } else {\n            if (drawVerticalJoins) {\n              pathArr.push([V, yPos]);\n            } else {\n              pathArr.push([M, lastXPos, yPos]);\n            }\n            pathArr.push([H, xPos]);\n            lastXPos = xPos;\n          }\n          // Push the upper x and y position to pathArr\n          // pathArr.push([L, xPos, yPos]);\n        } else {\n          // Push the upper x and y positions of area plot to temp\n          temp.push([M, xPos, yPos]);\n          lastXPos = xPos;\n          // No points are joined when starting a new path\n          pointsJoined = 0;\n          lastValidValue = true;\n        }\n      }\n    }\n    return {\n      pathArr: pathArr,\n      path2Arr: path2Arr,\n      lastValidValue: lastValidValue,\n      pointsJoined: pointsJoined,\n      temp: temp,\n      temp2: temp2,\n      getPathArr: dataset.getPathArr\n    };\n  }\n}\nexport default MSStepLineDataset;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  '*.dataset.stepLine': lineAnimation['*.dataset.line']\n};\n","import Dragnode from '@fusioncharts/powercharts/src/chart/dragnode';\nexport default Dragnode;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport DragBase from '../_internal/dragbase';\nimport { DragNodeDataset, DragNodeConnector, DragNodeLabels, DragNodeGroup } from '../../dataset/dragnode';\nimport { getValidValue, pluck, pluckNumber, ZEROSTRING, extend2 } from '@fusioncharts/core/src/lib';\nimport { getDepsByType } from '@fusioncharts/core/src/dependency-manager';\nimport datasetFactory from '../../factories/dragnode-dataset';\nimport { submitData } from '../_internal/editable-charts';\nimport axisFactory from '@fusioncharts/charts/src/factories/xy-axis';\nimport { _mouseEvtHandler } from '@fusioncharts/core/src/base-chart';\n\nconst DRAGNODE = 'dragnode';\nlet configurer, UNDEF;\n/**\n * API class of dragcolumn inheriting from column class\n */\nclass DragNode extends DragBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'DragNode';\n  }\n\n  /**\n   * Constructor function of DragNode class\n   */\n  constructor () {\n    super();\n    var chart = this;\n    chart.fireGroupEvent = true;\n    chart.usesXYinCategory = true;\n    chart.dontShowLegendByDefault = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n    this.registerFactory('axis', axisFactory, ['canvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'DragNode';\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let datasetsJSON = this.getFromEnv('dataSource').dataset; // eslint-disable-line good-practices/no-single-usage-variable\n    if (!datasetsJSON) {\n      return true;\n    }\n  }\n\n  /**\n   * Decides event type and calls handler manager accordingly.\n   *\n   * @param {any} e e\n   * @param {any} data data\n   * @memberof DragNode\n   */\n  _mouseEvtHandler (e, data) {\n    _mouseEvtHandler(this, e, data);\n  }\n  /**\n   * Function to parse the common configurations at dataset level\n   * @param {Object} dataObj contains json data of the chart\n   */\n  parseChartAttr (dataObj) {\n    var iapi = this,\n      chartAttr = iapi.getFromEnv('dataSource').chart,\n      config,\n      transcoders = getDepsByType('transcoder');\n    super.parseChartAttr.call(this, dataObj);\n    config = iapi.config;\n    config.formAction = getValidValue(chartAttr.formaction);\n    config.showLegend = pluckNumber(chartAttr.showlegend, 0);\n\n    if (chartAttr.submitdataasxml === ZEROSTRING && !chartAttr.formdataformat) {\n      chartAttr.formdataformat = transcoders.csv().format;\n    }\n\n    config.formDataFormat = pluck(chartAttr.formdataformat,\n      transcoders.xml().format);\n    config.formTarget = pluck(chartAttr.formtarget, '_self');\n    config.formMethod = pluck(chartAttr.formmethod, 'POST');\n    config.submitFormAsAjax = pluckNumber(chartAttr.submitformusingajax, 1);\n    config.viewMode = pluckNumber(chartAttr.viewmode, 0);\n    config.drawTrendRegion = 0;\n  }\n\n  /**\n   * Parsing the default configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    var chartConf = this.config;\n    chartConf.hasLegend = true;\n    chartConf.defaultDatasetType = DRAGNODE;\n    chartConf.limitUpdaterEnabled = false;\n    chartConf.skipClipping = true;\n    chartConf.numVDivLines = 0;\n    chartConf.numDivLines = 0;\n    chartConf.setadaptivexmin = 1;\n    chartConf.showLimits = 0;\n    chartConf.showdivlinevalues = 0;\n    chartConf.showzeroplane = 0;\n    chartConf.showyaxisvalues = 0;\n    chartConf.enablemousetracking = true;\n    chartConf.showzeroplaneontop = 0;\n  }\n\n  /**\n   * Function to add the menu options for the menu list\n   */\n  addConfigureOptions () {\n    var chart = this,\n      chartConf = chart.config,\n      restore,\n      submit,\n      toolbar = chart.getFromEnv('toolbar'),\n      hamburgerMenu = toolbar.getChild(`hamburgerMenu-${toolbar.getId()}-${chart.getId()}-0`), // eslint-disable-line good-practices/no-single-usage-variable\n      configureTools = [\n        {\n          name: 'Add Node',\n          handler: function () {\n            let manager = chart.getChildren('canvas')[0].getChildren('vCanvas')[0] // eslint-disable-line good-practices/no-single-usage-variable\n              .getChildren('datasetGroup_dragNode')[0];\n            manager.showNodeAddUI();\n          },\n          action: 'click'\n        },\n        {\n          name: 'Add Connector',\n          handler: function () {\n            let manager = chart.getChildren('canvas')[0].getChildren('vCanvas')[0] // eslint-disable-line good-practices/no-single-usage-variable\n              .getChildren('datasetGroup_dragNode')[0];\n            manager.showConnectorAddUI();\n          },\n          action: 'click'\n        },\n        {\n          name: 'Add Label',\n          handler: function () {\n            let manager = chart.getChildren('canvas')[0].getChildren('vCanvas')[0] // eslint-disable-line good-practices/no-single-usage-variable\n              .getChildren('datasetGroup_dragNode')[0];\n            manager.showLabelUpdateUI();\n          },\n          action: 'click'\n        }\n      ];\n\n    if (chartConf.showRestoreBtn) {\n      restore = {\n        name: chartConf.restoreBtnTitle,\n        handler: function () {\n          let manager = chart.getChildren('canvas')[0].getChildren('vCanvas')[0] // eslint-disable-line good-practices/no-single-usage-variable\n            .getChildren('datasetGroup_dragNode')[0];\n          manager.restoreData();\n        },\n        action: 'click'\n      };\n      configureTools.push(restore);\n    }\n\n    if (chartConf.showFormBtn) {\n      submit = {\n        name: chartConf.submitBtnTitle,\n        handler: function () {\n          submitData.call(chart);\n        },\n        action: 'click'\n      };\n      configureTools.push(submit);\n    }\n\n    // setChartTools(configureTools);\n    if (!chart.config.viewMode) {\n      hamburgerMenu.appendInMenu(configureTools);\n    }\n  }\n\n  /**\n   * Function to map the dataset class to its type\n   * @param {string} dsType the type of the dataset.\n   * @return {Class} The corresponding dataset class.\n   */\n  getDSdef (dsType) {\n    switch (dsType) {\n      case 'connector' :\n        return DragNodeConnector;\n      case 'dragnode' :\n        return DragNodeDataset;\n      case 'dragableLabels' :\n        return DragNodeLabels;\n    }\n  }\n\n  /**\n   * Function to determine the group manager associated with the current chartAPI\n   * @return {Class} The group class\n   */\n  getDSGroupdef () {\n    return DragNodeGroup;\n  }\n\n  /**\n   * Fucntion to set the categories of X axes.\n   */\n  _setCategories () {\n    var iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      xAxis = iapi.getChildren('xAxis'),\n      categories = (dataObj.categories && dataObj.categories[0].category) || [],\n      catLen = categories.length, // eslint-disable-line good-practices/no-single-usage-variable\n      catArr = [],\n      i,\n      catObj;\n\n    for (i = 0; i < catLen; i++) {\n      catObj = categories[i] || {};\n      if (catObj.x !== UNDEF) {\n        catArr.push(catObj);\n      }\n    }\n\n    xAxis && xAxis[0].setTickValues(catArr);\n  }\n\n  /**\n   * Function to get the jsonData\n   * @return {Object} the jsonData\n   */\n  getJSONData () {\n    var chart = this,\n      canvas = chart.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      vCanvas = canvas.getChildren('vCanvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      groupManager = vCanvas.getChildren('datasetGroup_dragNode')[0],\n      datasetsArr = {},\n      jsonObj;\n\n    if (groupManager) {\n      datasetsArr = groupManager.getJSONData();\n    }\n\n    jsonObj = extend2({}, chart.getFromEnv('dataSource'));\n    jsonObj.dataset = datasetsArr.dataset;\n    jsonObj.connectors = datasetsArr.connectors;\n    jsonObj.labels = datasetsArr.labels;\n    return jsonObj;\n  }\n}\nconfigurer = DragNode.prototype.configure;\nexport default DragNode;\nexport { configurer };\n","import DragNodeDataset from './dragnode';\nimport DragNodeLabels from './dragablelabels';\nimport DragNodeConnector from './connector';\nimport DragNodeGroup from '../groups/dragnode';\n\nexport { DragNodeDataset, DragNodeLabels, DragNodeConnector, DragNodeGroup };\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Areadataset from '@fusioncharts/charts/src/dataset/area';\nimport { pluck, pluckNumber, getValidValue, parseUnsafeString, extend2, ZEROSTRING, getMouseCoordinate,\n  HUNDREDSTRING, preDefStr, BLANK, getFirstValue, POSITION_MIDDLE,\n  POSITION_BOTTOM, toRaphaelColor, POINTER, BLANKSTRING, SHAPE_RECT, parseTooltext,\n  BGRATIOSTRING, hasSVG, polyPathToPath,\n  convertColor, getDarkColor, getLightColor, mapSymbolName, getFirstColor, getFirstAlpha } from '@fusioncharts/core/src/lib';\nimport { addDep, getDep } from '@fusioncharts/core/src/dependency-manager';\nimport dragNodeAnimation from './dragnode-animation';\n// import { triggerEvent } from '../../../core/events/event-api';\n// import {_getJSONData, _restore} from './dragcolumn';\nimport raphaelShapesRingpath from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.ringpath';\nimport KdTree from '@fusioncharts/charts/src/dataset/_internal/kdtree';\n\nconst PADDING = 1;\n\nlet Raphael = getDep('redraphael', 'plugin'),\n  UNDEF,\n  mathMax = Math.max,\n  mathMin = Math.min,\n  CIRCLE = preDefStr.CIRCLE,\n  POLYGON = preDefStr.POLYGON,\n  RECTANGLE = preDefStr.RECTANGLE,\n  UNDERSCORE = preDefStr.UNDERSCORE,\n  GROUPID = preDefStr.GROUPID,\n  EVENTARGS = preDefStr.EVENTARGS,\n  OBJECTBOUNDINGBOX = preDefStr.OBJECTBOUNDINGBOX,\n  DATAPLOTCLICK = 'dataplotclick',\n  DATAPLOTDRAGSTART = 'dataplotdragstart',\n  DATAPLOTDRAGEND = 'dataplotdragend',\n  DEFAULT_CURSOR = preDefStr.DEFAULT,\n  COMMA = preDefStr.COMMA,\n  FIFTY_PERCENT = '50%',\n  PATH = 'path',\n  POLY_4 = 'poly_4',\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  isVML = !!hasSVG,\n  hideFn = function () {\n    this.hide();\n  },\n  // CLEAR_TIME_1000 = 1000,\n  // stubEvent = {\n  //   pageX: 0,\n  //   pageY: 0\n  // },\n  // animType = 'linear',\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  /**\n   * Helper function of createContainer\n   * @param {string} groupName The new group name\n   * @param {Object} animationManager The renderer\n   * @param {Object} parentContainer The container under which the new container has to be created\n   * @param {Object} component The component for which the group is being created\n   * @return {Object}  the newly created contaier\n   */\n  createGroup = (groupName, animationManager, parentContainer, component) => {\n    return animationManager.setAnimation({\n      el: 'group',\n      attr: {\n        name: groupName\n      },\n      container: parentContainer,\n      component: component\n    });\n  },\n  // Function that produce the point color\n  getPointColor = function (colorVal, alphaVal, shapeType) {\n    var color = colorVal,\n      alpha = alphaVal,\n      colorObj, innerColor, outerColor;\n    color = getFirstColor(color);\n    alpha = getFirstAlpha(alpha);\n    innerColor = getLightColor(color, 80);\n    outerColor = getDarkColor(color, 65);\n    colorObj = {\n      FCcolor: {\n        gradientUnits: OBJECTBOUNDINGBOX,\n        color: innerColor + COMMA + outerColor,\n        alpha: alpha + COMMA + alpha,\n        ratio: BGRATIOSTRING\n      }\n    };\n\n    if (shapeType) {\n      if (shapeType === 1) {\n        colorObj.FCcolor.angle = 0;\n      } else {\n        colorObj.FCcolor.angle = 180;\n      }\n    } else {\n      colorObj.FCcolor.cx = 0.4;\n      colorObj.FCcolor.cy = 0.4;\n      colorObj.FCcolor.r = FIFTY_PERCENT;\n      colorObj.FCcolor.radialGradient = true;\n    }\n\n    return colorObj;\n  },\n  _configureTooltext = function (config, datasetConf, chartAttr) {\n    var setTooltext = config.setTooltext,\n      formatedVal = config.formatedVal,\n      seriesname = datasetConf.seriesname,\n      label = config.label,\n      xValue = config.xValue,\n      pointLabel = config.pointLabel,\n      tooltipSepChar = datasetConf.tooltipSepChar,\n      toolText;\n    if (setTooltext !== UNDEF) {\n      toolText = parseTooltext(setTooltext, [3, 4, 5, 6, 8, 9, 10, 11], {\n        yaxisName: parseUnsafeString(chartAttr.yaxisname),\n        xaxisName: parseUnsafeString(chartAttr.xaxisname),\n        yDataValue: formatedVal,\n        xDataValue: xValue,\n        label: label\n      }, config, chartAttr, datasetConf);\n    } else if (pointLabel !== UNDEF) {\n      toolText = label;\n    } else { // determine the tooltext then\n      if (formatedVal === null) {\n        toolText = false;\n      } else {\n        if (datasetConf.seriesNameInToolTip) {\n          seriesname = getFirstValue(datasetConf.seriesname);\n        }\n        toolText = seriesname ? seriesname + tooltipSepChar : BLANK;\n        toolText += xValue ? xValue + tooltipSepChar : BLANK;\n        toolText += formatedVal;\n      }\n    }\n    return toolText;\n  };\naddDep({\n  name: 'dragNodeAnimation',\n  type: 'animationRule',\n  extension: dragNodeAnimation\n});\n\n// Adding required shapes for chart.\nraphaelShapesRingpath(Raphael);\n\n/**\n * dataset class of dragcolumn inheriting from column class\n */\nclass DragNodeDataset extends Areadataset {\n  /**\n   * Return the name of component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragNode';\n  }\n  /**\n   * Return the type of component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n\n  /**\n   * Function to hide the dataset on legend click\n   */\n  hide () {\n    var dataSet = this,\n      parent = dataSet.getLinkedParent(),\n      changeInfo = {};\n\n    changeInfo.hide = true;\n    dataSet.setState('dirty', true);\n    dataSet.setState('visible', false);\n    parent.childChanged(changeInfo);\n    dataSet.getFromEnv('chart').getChildren('legend')[0].getItem(dataSet.config.legendItemId).setLegendState('hidden');\n    dataSet.asyncDraw();\n  }\n\n  /**\n   * Function to show the dataset on legend click\n   */\n  show () {\n    var dataSet = this,\n      parent = dataSet.getLinkedParent(),\n      legendItem = dataSet.getFromEnv('legend').getItem(dataSet.config.legendItemId),\n      changeInfo = {};\n\n    changeInfo.show = true;\n    dataSet.setState('visible', true);\n    dataSet.setState('dirty', true);\n    parent.childChanged(changeInfo);\n    legendItem && legendItem.removeLegendState('hidden');\n    dataSet.asyncDraw();\n  }\n\n  /**\n   * Function to set the index of the dataset from amongst the other datasets\n   */\n  _setDatasetIndex () {\n    var dataset = this,\n      chidrenArr = dataset.getLinkedParent().getChildren('dataset');\n    dataset.config.datasetIndex = chidrenArr.indexOf(dataset);\n  }\n\n  // Checks if a point lies in a shape\n  pointInShape (x, y, config) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      canvas = chart.getChildren('canvas')[0],\n      canvasConfig = canvas.config,\n      symbol = config.symbol,\n      x2,\n      y2,\n      r2,\n      xPos = config._xPos,\n      yPos = config._yPos,\n      width,\n      height;\n\n    if (x < canvasConfig.canvasLeft || x > canvasConfig.canvasLeft + canvasConfig.canvasWidth ||\n      y < canvasConfig.canvasTop || y > canvasConfig.canvasTop + canvasConfig.canvasHeight) {\n      return false;\n    }\n    if (symbol === 'rectangle') {\n      width = config._plotWidth;\n      height = config._plotHeight;\n\n      xPos -= width / 2;\n      yPos -= height / 2;\n\n      if (x >= xPos && y >= yPos && x <= (xPos + width) && y <= (yPos + height)) {\n        return true;\n      } return false;\n    }\n    x2 = (x - xPos) * (x - xPos);\n    y2 = (y - yPos) * (y - yPos);\n    r2 = Number(config.radius);\n\n    r2 *= r2;\n\n    if (x2 + y2 <= r2) {\n      return true;\n    } return false;\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType name of the event\n   * @param {number} plotIndex index of the plot where this event has been occured\n   * @param {Event} e reference of the original mouse event\n   * @param {number} datasetIndex index of the dataSet on which the mouse is hovered\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      components = dataset.components,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      dataStore = components.data,\n      data = dataStore[plotIndex] || {},\n      sharedAnchor = dataset.getGraphicalElement('sharedAnchor'),\n      setElement = (data.graphics && data.graphics.element) ||\n        ((data.config && data.config.setValue) !== UNDEF && sharedAnchor),\n      toolTip = this.config.currentToolTip,\n      // originalEvent = e.originalEvent,\n      viewMode = dataset.config.viewMode,\n      groupManager = dataset.getLinkedParent(),\n      config,\n      ele = data.graphics.element,\n      eventArgs,\n      setLink;\n\n    if (setElement) {\n      config = data.config;\n      setLink = config.setLink;\n      eventArgs = config.eventArgs;\n      switch (eventType) {\n        case 'fc-mouseover' :\n          dataset._decideTooltipType(plotIndex, e);\n          dataset._rolloverResponseSetter(chart, data, e);\n          setLink && (setElement.node.style.cursor = POINTER);\n          break;\n        case 'fc-mouseout' :\n          toolTipController.hide(toolTip);\n          dataset._rolloutResponseSetter(chart, data, e);\n          setLink && (setElement.node.style.cursor = DEFAULT_CURSOR);\n          break;\n        case 'fc-click' :\n          ele.data('fire_click_event') && chart.plotEventHandler(setElement, e, DATAPLOTCLICK, eventArgs);\n          break;\n        case 'fc-mousemove' :\n          groupManager.hideWaitElem();\n          dataset._decideTooltipType(plotIndex, e);\n          break;\n        case 'fc-mousedown':\n          clearTimeout(ele._longpressactive);\n          ele.data('fire_click_event', 1);\n          if (!viewMode) {\n            groupManager.drawWaitingRing(data, dataset.config.datasetIndex);\n          }\n          break;\n        case 'fc-mouseup':\n          groupManager.hideWaitElem();\n          groupManager.clearLongPress();\n          break;\n      }\n    }\n  }\n  /**\n   * Callback function when dragging of the node is stopped\n   * @param {Object} event The actual event object\n   */\n  dragUp (event) {\n    var ele = this,\n      data = ele.data('drag-options'),\n      dataset = data.dataset;\n    dataset._dragUp.call(ele, event);\n  }\n\n  /**\n   * Callback function when a node is being dragged\n   * @param {Object} event The actual event object\n   * @param {Object} customData Object containing the details related to drag coordinates\n   */\n  dragMove (event, customData) { // eslint-disable-line no-unused-vars\n    var ele = this,\n      data = ele.data('drag-options'),\n      dataset = data.dataset,\n      dx = customData[0],\n      dy = customData[1],\n      px = customData[2],\n      py = customData[3];\n    dataset._dragMove.call(ele, dx, dy, px, py);\n  }\n\n  /**\n   * Callback function when dragging of a node is started\n   * @param {Object} event The actual event object\n   */\n  dragStart (event) {\n    var ele = this,\n      data = ele.data('drag-options'),\n      dataset = data.dataset;\n    dataset._dragStart.call(ele, event);\n  }\n\n  /**\n   * Helper function of dragStart()\n   * @param {Object} e The actual event object\n   */\n  _dragStart () {\n    var element = this,\n      data = element.data('drag-options'),\n      dataObj = data.dataObj,\n      dataGraphics = dataObj.graphics,\n      ele = dataGraphics.element,\n      bBox = ele.getBBox(),\n      config = dataObj.config,\n      dataset = data.dataset,\n      chart = dataset.getFromEnv('chart'),\n      sourceEvent = DATAPLOTDRAGSTART,\n      dragStart = config.dragStart || (config.dragStart = {}),\n      cloneGraphic = dataObj.graphics.cloneGraphic,\n      cloneGraphicGroup = dataset.getContainer('cloneGraphicGroup'),\n      cloneText = dataObj.graphics.cloneText,\n      image = dataObj.graphics.image,\n      cloneImage = dataObj.graphics.cloneImage,\n      label = dataObj.graphics.label,\n      eventArgs;\n\n    // Set dirty flag to 1 so that bbox is recalculated again\n    if (isVML) {\n      ele._.dirty = 1;\n    }\n\n    if (config.allowDrag) {\n      if (!cloneGraphic && dataObj.graphics.element) {\n        cloneGraphic = dataObj.graphics.cloneGraphic = dataObj.graphics.element.clone();\n        cloneGraphicGroup.appendChild(cloneGraphic);\n      }\n      if (label && !cloneText) {\n        cloneText = dataObj.graphics.cloneText = dataObj.graphics.label.clone();\n        if (cloneText.followers[0] && cloneText.followers[0].el) {\n          cloneGraphicGroup.appendChild(cloneText.followers[0].el);\n        }\n        cloneGraphicGroup.appendChild(cloneText);\n      }\n      if (image && !cloneImage) {\n        cloneImage = dataObj.graphics.cloneImage =\n            dataObj.graphics.image.clone();\n        cloneGraphicGroup.appendChild(cloneImage);\n      }\n      cloneText && cloneText.show();\n      cloneImage && cloneImage.show();\n      cloneGraphic && cloneGraphic.show();\n    }\n    dragStart.xPos = config._xPos;\n    dragStart.yPos = config._yPos;\n    dragStart.x = config.x;\n    dragStart.y = config.y;\n    dragStart.bBox = bBox;\n    // store original x, y positions\n    dragStart.origX = dragStart.lastDx || (dragStart.lastDx = 0);\n    dragStart.origY = dragStart.lastDy || (dragStart.lastDy = 0);\n    eventArgs = ele.data(EVENTARGS);\n    // Whether to fire the click event ot not\n    chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n    // DragNode mouse progress cursor added.\n    cloneGraphic && cloneGraphic.show();\n    cloneText && cloneText.show();\n    cloneImage && cloneImage.show();\n  }\n\n  /**\n   * Helper function of dragMove()\n   * @param {number} dxVal the drag coordinates\n   * @param {number} dyVal the drag coordinates\n   * @param {number} px the drag coordinates\n   * @param {number} py the drag coordinates\n   */\n  _dragMove (dxVal, dyVal) {\n    var element = this,\n      dx = dxVal,\n      dy = dyVal,\n      data = element.data('drag-options'),\n      dataObj = data.dataObj,\n      ele = dataObj.graphics.element,\n      cloneGraphic = dataObj.graphics.cloneGraphic,\n      cloneImage = dataObj.graphics.cloneImage,\n      cloneText = dataObj.graphics.cloneText,\n      config = dataObj.config,\n      dragStart = config.dragStart,\n      startX = dragStart.bBox.x + dx,\n      endX = dragStart.bBox.x2 + dx,\n      startY = dragStart.bBox.y + dy,\n      endY = dragStart.bBox.y2 + dy,\n      dataset = data.dataset,\n      animationManager = dataset.getFromEnv('animationManager'),\n      parent = dataset.getLinkedParent(),\n      // graphics = .getContainer('waitGroup'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      canvasLeft = chartConfig.canvasLeft,\n      canvasRight = chartConfig.canvasRight,\n      transform,\n      canvasTop = chartConfig.canvasTop,\n      canvasBottom = chartConfig.canvasBottom;\n\n    // Bound limits\n    if (startX < canvasLeft) {\n      dx += (canvasLeft - startX);\n    }\n    if (endX > canvasRight) {\n      dx -= (endX - canvasRight);\n    }\n    if (startY < canvasTop) {\n      dy += (canvasTop - startY);\n    }\n    if (endY > canvasBottom) {\n      dy -= (endY - canvasBottom);\n    }\n    if (dx || dy) {\n      // graphics.waitElement && graphics.waitElement.hide();\n      // Whether to fire the click event or not\n      ele.data('fire_click_event', 0);\n      parent.hideWaitElem();\n      parent.clearLongPress();\n    }\n    if (config.allowDrag) {\n      dragStart.draged = true;\n      dragStart.lastDx = dx;\n      dragStart.lastDy = dy;\n\n      transform = data._transformObj = {\n        transform: 't' + (dragStart.origX + dx) + COMMA +\n            (dragStart.origY + dy)\n      };\n      if (cloneGraphic) {\n        animationManager.setAnimation({\n          el: cloneGraphic,\n          attr: transform,\n          component: dataset\n        });\n      }\n      if (cloneImage) {\n        animationManager.setAnimation({\n          el: cloneImage,\n          attr: transform,\n          component: dataset\n        });\n      }\n      if (cloneText) {\n        animationManager.setAnimation({\n          el: cloneText,\n          attr: {\n            x: config._xPos + dx,\n            y: config._yPos + dy\n          },\n          component: dataset\n        });\n      }\n    }\n  }\n\n  /**\n   * Function that return the nearest plot details\n   * @param   {number} x x-axis position of the mouse cordinate\n   * @param   {number} y y-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest plot and whether it is\n   *                   hovered or not\n   */\n  _getHoveredPlot (x, y) {\n    var res = this.config.tree.getNeighbour({\n      x: x,\n      y: y\n    }, false);\n    // searching neighbour from Kdtree with basic search flag on\n    if (res) {\n      return {\n        pointIndex: res.index || res.i,\n        hovered: true,\n        pointObj: res.data\n      };\n    }\n  }\n  /**\n   * handler called on mouseout\n   *\n   * @param {any} chart chart\n   * @param {any} data dataObj on which event occured\n   * @param {any} e event\n   * @memberof DragNodeDataset\n   */\n  _rolloutResponseSetter (chart, data, e) {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      config = data.config,\n      element = data.graphics.element,\n      dragStart = config.dragStart,\n      unHoverAttr = element.data('unHoverAttr'),\n      keysNo = dragStart && Object.keys(dragStart).length;\n\n    if (!keysNo) {\n      if (config.shapeType === 'poly' || config.shapeType === CIRCLE) {\n        // For polygon and circle, convert path to polypath\n        unHoverAttr.path = polyPathToPath([config.shapeArg.sides, config._xPos, config._yPos, unHoverAttr.r, config.startAngle, 0]);\n      }\n      config.rollOverProperties.enabled && animationManager.setAnimation({\n        el: element,\n        attr: unHoverAttr,\n        component: dataset\n      });\n      chart && chart.plotEventHandler(element, e, ROLLOUT);\n    }\n  }\n\n  /**\n   * handler called on mouseover\n   *\n   * @param {any} chart chart\n   * @param {any} data dataObj on which event occured\n   * @param {any} e event\n   * @memberof DragNodeDataset\n   */\n  _rolloverResponseSetter (chart, data, e) {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      config = data.config,\n      element = data.graphics.element,\n      dragStart = config.dragStart,\n      hoverAttr = element.data('hoverAttr'),\n      keysNo = dragStart && Object.keys(dragStart).length;\n\n    if (!keysNo) {\n      if (config.shapeType === 'poly' || config.shapeType === CIRCLE) {\n        // For polygon and circle, convert path to polypath\n        hoverAttr.path = polyPathToPath([config.shapeArg.sides, config._xPos, config._yPos, hoverAttr.r, config.startAngle, 0]);\n      }\n      config.rollOverProperties.enabled && animationManager.setAnimation({\n        el: element,\n        attr: hoverAttr,\n        component: dataset\n      });\n      chart && chart.plotEventHandler(element, e, ROLLOVER);\n    }\n  }\n  /**\n   * Helper function of dragUp()\n   * @param {Object} event The actual event object\n   */\n  _dragUp (event) {\n    var element = this,\n      data = element.data('drag-options'),\n      dataset = data.dataset,\n      // chartConfig = dataset.getFromEnv('chartConfig'),\n      chart = dataset.getFromEnv('chart'),\n      dataStore = dataset.components.data,\n      dataObj = data.dataObj,\n      ele = dataObj.graphics.element,\n      groupManager = dataset.getLinkedParent(),\n      startConnectors,\n      endConnectors,\n      sourceEvent = DATAPLOTDRAGEND,\n      config = dataObj.config,\n      // canvasTop = chartConfig.canvasTop,\n      // canvasLeft = chartConfig.canvasLeft,\n      dragStart = dataObj.config.dragStart || {},\n      yAxis = dataset.getFromEnv('yAxis'),\n      i,\n      setObj,\n      len,\n      eventCord,\n      eventArgs,\n      cloneText = dataObj.graphics.cloneText,\n      // graphics = dataset.groupManager.graphics,\n      xAxis = dataset.getFromEnv('xAxis'),\n      updateObj = {},\n      datasetIndex = dataset.config.datasetIndex,\n      cloneGraphic = dataObj.graphics.cloneGraphic,\n      cloneImage = dataObj.graphics.cloneImage;\n\n    groupManager.hideWaitElem();\n    groupManager.clearLongPress();\n    if (dragStart.draged) {\n      dragStart.origX += dragStart.lastDx;\n      dragStart.origY += dragStart.lastDy;\n      dataObj.config._xPos = dragStart.xPos + dragStart.lastDx;\n      dataObj.config._yPos = dragStart.yPos + dragStart.lastDy;\n      updateObj.x = xAxis.getValue(dataObj.config._xPos);\n      updateObj.y = yAxis.getValue(dataObj.config._yPos);\n      updateObj.update = true;\n      for (i = 0, len = dataStore.length; i < len; i++) {\n        setObj = dataStore[i];\n        if (dataObj.config.id === setObj.config.id) {\n          break;\n        }\n      }\n\n      dataset.updatePointConfig(updateObj, i);\n      eventArgs = ele.data(EVENTARGS);\n      eventArgs.x = updateObj.x;\n      eventArgs.y = updateObj.y;\n      dataset.parsePlotAttributes(i);\n      dataset._drawNode(i);\n      // dataset.drawTracker(i, i + 1);\n      startConnectors = dataObj.config.startConnectors;\n      endConnectors = dataObj.config.endConnectors;\n      groupManager.drawNodeConnectors(startConnectors, datasetIndex);\n      groupManager.drawNodeConnectors(endConnectors, datasetIndex);\n      eventCord = getMouseCoordinate(chart.getFromEnv('chart-container'), event, chart);\n      eventCord.sourceEvent = sourceEvent;\n      // Fire the ChartUpdated event\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs), event);\n      chart.fireChartInstanceEvent(sourceEvent, eventArgs, event);\n      dragStart.draged = false;\n      dataset._setupKdTree();\n    }\n    cloneText && cloneText.hide();\n    cloneGraphic && cloneGraphic.hide();\n    cloneImage && cloneImage.hide();\n    delete config.dragStart;\n  }\n\n  /**\n   * Function to update a specific node at the end of dragging\n   * @param {Object} updateConf Having values regarding the new position of the node\n   * @param {number} index the index of the node that is to be updated\n   */\n  updatePointConfig (updateConf, index) {\n    var dataset = this,\n      // chart = dataset.chart,\n      dataStore = dataset.components.data,\n      conf = dataset.config,\n      dataObj = dataStore[index] || {},\n      config = dataObj.config,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      // yMin = conf.yMin || +Infinity,\n      // yMax = conf.yMax || -Infinity,\n      // xMax = conf.xMax || -Infinity,\n      // xMin = conf.xMin || +Infinity,\n      xValue;\n    if (config === UNDEF) {\n      return;\n    }\n    config.y = numberFormatter.getCleanValue(pluck(updateConf.y));\n    config.x = numberFormatter.getCleanValue(pluck(updateConf.x));\n    config._options.x = config.x;\n    config._options.y = config.y;\n    // yMax = mathMax(yMax, config.y);\n    // yMin = mathMin(yMin, config.y);\n    // xMax = mathMax(xMax, config.x);\n    // xMin = mathMin(xMin, config.x);\n    xValue = numberFormatter.xAxis(config.x);\n    // push the point object\n    config.formatedVal = (config.y === null\n      ? config.y : numberFormatter.dataLabels(config.y));\n    config.xValue = xValue;\n    if (!conf.showTooltip) {\n      config.toolText = false;\n    } else {\n      config.toolText = _configureTooltext(config, conf, chartAttr);\n    }\n    config.update = updateConf.update;\n  }\n\n  /**\n   * Returns a node corresponding to the given id\n   * @param {string} id The id of the enquired node\n   * @return {Object} The object conatining the info about the node\n   */\n  getNode (id) {\n    return id ? this.components.nodes[id] : this.components.nodes;\n  }\n\n  /**\n    * Function for parsing all the attributes and value given by the user at chart and dataset level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} if no datasetJSON is found\n    */\n  configureAttributes (datasetJSON) {\n    if (datasetJSON) {\n      this.trimData(datasetJSON);\n      this.config.JSONData = datasetJSON;\n    } else if (!datasetJSON && !this.config.JSONData) {\n      return false;\n    }\n\n    var dataset = this,\n      dIndex = dataset.config.datasetIndex,\n      JSONData = dataset.config.JSONData,\n      data = JSONData.data || [],\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      dataLength = data.length,\n      conf = dataset.config,\n      // showValues,\n      ZERO = ZEROSTRING,\n      colorM = dataset.getFromEnv('color-manager'),\n      index,\n      plotFillAlpha,\n      showPlotBorder,\n      plotBorderColor,\n      plotBorderThickness,\n      plotBorderAlpha,\n      // datasetId,\n      datasetPlotBorderThickness,\n      // dataStore,\n      // dataStoreLen,\n      useRoundEdges,\n      HUNDRED = HUNDREDSTRING;\n    conf.context = {};\n    dataset.components.nodes = {};\n    conf.showValues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 1);\n    useRoundEdges = conf.useRoundEdges = pluckNumber(chartAttr.useroundedges);\n    conf.zIndex = 1;\n    conf.name = getValidValue(JSONData.seriesname);\n    conf.viewMode = pluckNumber(chartAttr.viewmode, 0);\n    conf.id = pluck(JSONData.id, dataset.index);\n    if (pluckNumber(JSONData.includeinlegend) === 0 ||\n      conf.name === UNDEF) {\n      conf.showInLegend = false;\n    }\n    conf.seriesname = parseUnsafeString(JSONData.seriesname);\n    conf.includeinlegend = pluckNumber(JSONData.includeinlegend, (conf.seriesname ? 1 : 0));\n\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.seriesNameInTooltip = pluckNumber(chartAttr.seriesnameintooltip, 1);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.tooltipSepChar = pluck(chartAttr.tooltipsepchar, ' - ');\n    // Plot Properties\n    plotFillAlpha = conf.plotFillAlpha = pluck(chartAttr.plotfillalpha, HUNDRED);\n    showPlotBorder = conf.showPlotBorder = pluckNumber(chartAttr.showplotborder, 1);\n    plotBorderColor = conf.plotBorderColor = getFirstColor(pluck(chartAttr.plotbordercolor, '666666'));\n    plotBorderThickness = conf.plotBorderThickness = pluckNumber(chartAttr.plotborderthickness,\n      useRoundEdges ? 2 : 1);\n    plotBorderAlpha = conf.plotBorderAlpha = pluck(chartAttr.plotborderalpha, chartAttr.plotfillalpha,\n      useRoundEdges ? '35' : '95');\n\n    // Node Properties\n    conf.use3DLighting = Boolean(pluckNumber(chartAttr.use3dlighting,\n      chartAttr.is3d, useRoundEdges ? 1 : 0));\n    // Store attributeshc\n    conf.color = getFirstColor(pluck(JSONData.color, colorM.getPlotColor(dIndex)));\n    conf.alpha = pluck(JSONData.plotfillalpha, JSONData.nodeFillAlpha,\n      JSONData.alpha, plotFillAlpha);\n    // Data set plot properties\n    conf.datasetShowPlotBorder = Boolean(pluckNumber(JSONData.showplotborder, showPlotBorder));\n    conf.datasetPlotBorderColor = getFirstColor(pluck(JSONData.plotbordercolor, JSONData.nodebordercolor,\n      plotBorderColor));\n    conf.datasetPlotBorderThickness = pluckNumber(JSONData.plotborderthickness,\n      JSONData.nodeborderthickness, plotBorderThickness);\n    conf.datasetPlotBorderAlpha = (conf.datasetShowPlotBorder) ? pluck(JSONData.plotborderalpha,\n      JSONData.nodeborderalpha, JSONData.alpha, plotBorderAlpha) : ZERO;\n    // Drag Border properties\n    conf.datasetAllowDrag = Boolean(pluckNumber(JSONData.allowdrag, 1));\n\n    conf.colorObj = {\n      fillColor: convertColor(conf.color, conf.alpha),\n      lineColor: {\n        FCcolor: {\n          color: conf.datasetPlotBorderColor,\n          alpha: conf.datasetPlotBorderAlpha\n        }\n      }\n    };\n    conf.lineWidth = datasetPlotBorderThickness;\n    conf.symbol = POLY_4;\n    // dataStore = dataset.components.data =\n    dataset.components.data || (dataset.components.data = []);\n    // dataStoreLen = dataStore.length;\n    // if (dataStoreLen > dataLength) {\n    //   dataStore.splice(dataLength, dataStoreLen - dataLength);\n    // }\n\n    dataset.setState('visible', pluckNumber(JSONData.visible,\n      !Number(JSONData.initiallyhidden), 1) === 1);\n    conf.yMin = conf.yMax = conf.xMax = conf.xMin = 0;\n    // This flag is true when data update is fired\n    dataset._refreshData = true;\n    // Iterate through all level data\n    for (index = 0; index < dataLength; index += 1) {\n      this._setConfigure(index);\n    }\n    dataset._refreshData = false;\n    chartConfig.showLegend && dataset._addLegend();\n    dataset._setDatasetIndex();\n    dataset.setState('dirty', true);\n  }\n\n  /**\n   * Function for parsing all the attributes and value given by the user at set level.\n   * @param {number} index The data index for which the configuration is to be prsed.\n   * @param {Object} updateObj It has the information of the data given by the user\n   */\n  _setConfigure (index, updateObj) {\n    var dataset = this,\n      JSONData = dataset.config.JSONData,\n      data = JSONData.data,\n      setData = updateObj || data[index],\n      dataStore = dataset.components.data,\n      conf = dataset.config,\n      dataObj = dataStore[index] = dataStore[index] || (dataStore[index] = {}),\n      config = dataObj.config = dataObj.config || (dataObj.config = {}),\n      datasetId = conf.id,\n      shape,\n      yMin = conf.yMin || +Infinity,\n      yMax = conf.yMax || -Infinity,\n      xMax = conf.xMax || -Infinity,\n      xMin = conf.xMin || +Infinity,\n      itemValueY,\n      itemValueX,\n      label,\n      safeLabel,\n      shapeType,\n      use3DLighting = conf.use3DLighting,\n      datasetPlotBorderThickness = conf.datasetPlotBorderThickness,\n      datasetPlotBorderColor = conf.datasetPlotBorderColor,\n      datasetPlotBorderAlpha = conf.datasetPlotBorderAlpha,\n      // chart = dataset.chart,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      datasetColor = conf.color,\n      datasetAlpha = conf.alpha,\n      // fillColor,\n      datasetAllowDrag = conf.datasetAllowDrag,\n      numberFormatter = dataset.getFromEnv('number-formatter');\n\n    !dataObj.graphics && (dataObj.graphics = {});\n    config._options = extend2({}, setData);\n    if (setData || updateObj) {\n      itemValueY = config.y = numberFormatter.getCleanValue(pluck(setData.y));\n      itemValueX = config.x = numberFormatter.getCleanValue(pluck(setData.x));\n      config.index = index;\n      if (!config.dragStart) {\n        config.dragStart = {};\n      }\n      yMax = mathMax(yMax, config.y);\n      yMin = mathMin(yMin, config.y);\n      xMax = mathMax(xMax, config.x);\n      xMin = mathMin(xMin, config.x);\n      if (itemValueY === null) {\n        config.value = null;\n      } else {\n        label = numberFormatter.xAxis(itemValueX);\n        // push the point object\n        config.formatedVal = (itemValueY === null\n          ? itemValueY : numberFormatter.dataLabels(itemValueY));\n        config.setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext,\n          JSONData.plottooltext, chartAttr.plottooltext), false));\n        config.pointLabel = pluck(setData.label, setData.name);\n        safeLabel = parseUnsafeString(config.pointLabel);\n        config.label = safeLabel;\n        config.name = safeLabel;\n        config.displayValue = safeLabel;\n        config.xValue = label;\n        if (!updateObj) {\n          config.startConnectors = {};\n          config.endConnectors = {};\n        }\n        // create the tooltext\n        if (!conf.showTooltip) {\n          config.toolText = false;\n        } else {\n          config.toolText = _configureTooltext(config, conf, chartAttr);\n        }\n        config.link = setData.link;\n        // Shape and cosmetics related attributes\n        config.id = pluck(setData.id, (datasetId + preDefStr.UNDERSCORE + index));\n        config.allowDrag = Boolean(pluckNumber(setData.allowdrag, datasetAllowDrag));\n        shape = config.shape = getValidValue(pluck(setData.shape), preDefStr.RECTANGLE).toLowerCase();\n        config.height = getValidValue(pluck(setData.height), 10);\n        config.width = getValidValue(pluck(setData.width), 10);\n        config.radius = getValidValue(pluck(setData.radius), 10);\n        config.numSides = getValidValue(pluck(setData.numsides), 4);\n        config.color = getFirstColor(pluck(setData.color, datasetColor));\n        config.borderColor = getFirstColor(pluck(setData.bordercolor, datasetPlotBorderColor));\n        config.alpha = pluck(setData.alpha, datasetAlpha);\n        config.imageURL = getValidValue(setData.imageurl);\n        config.imageNode = Boolean(pluckNumber(setData.imagenode));\n        config.imageWidth = setData.imagewidth;\n        config.imageHeight = setData.imageheight;\n        config.imageAlign = getValidValue(setData.imagealign, BLANK).toLowerCase();\n        config.labelAlign = pluck(setData.labelalign, config.imageNode &&\n            defined(config.imageURL) ? POSITION_TOP : preDefStr.POSITION_MIDDLE);\n        config.hovercolor = pluck(setData.hovercolor, JSONData.hovercolor);\n        config.borderhoveralpha = pluck(setData.borderhoveralpha, JSONData.borderhoveralpha);\n        config.borderhovercolor = pluck(setData.borderhovercolor, JSONData.borderhovercolor);\n        config.borderhoverthickness = pluck(setData.borderhoverthickness, JSONData.borderhoverthickness);\n        config.hoveralpha = pluck(setData.hoveralpha, JSONData.hoveralpha);\n        config.hoverheight = pluck(setData.hoverheight, JSONData.hoverheight);\n        config.hoverradius = pluck(setData.hoverradius, JSONData.hoverradius);\n        config.hoverwidth = pluck(setData.hoverwidth, JSONData.hoverwidth);\n\n        config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n        // If not required shape then set it to rectangle\n        switch (config.shape) {\n          case CIRCLE:\n            shapeType = 0;\n            break;\n          case POLYGON:\n            shapeType = 2;\n            shape = mapSymbolName(config.numSides);\n            break;\n          default:\n            shapeType = 1;\n            break;\n        }\n        config.symbol = shape;\n        if (use3DLighting) {\n          config.fillColor = getPointColor(config.color,\n            config.alpha, shapeType);\n          config.cloneFillColor = getPointColor(config.color, 50, shapeType);\n        } else {\n          config.fillColor = {\n            color: config.color,\n            alpha: config.alpha\n          };\n          config.cloneFillColor = convertColor(config.color, 50);\n        }\n        config.colorArr = [\n          {\n            FCcolor: {\n              color: config.color,\n              alpha: config.alpha\n            }\n          },\n          {\n            FCcolor: {\n              color: config.borderColor,\n              alpha: datasetPlotBorderAlpha\n            }\n          }\n        ];\n        config.rollOverProperties = dataset.pointHoverOptions(dataObj, chartAttr, {\n          shapeType: shapeType,\n          use3D: use3DLighting,\n          height: config.height,\n          width: config.width,\n          radius: config.radius,\n          color: config.color,\n          alpha: config.alpha,\n          borderColor: config.borderColor,\n          borderAlpha: datasetPlotBorderAlpha,\n          borderThickness: datasetPlotBorderThickness\n        });\n      }\n      !config.update && updateObj && (config.update = updateObj.update);\n      !config.add && updateObj && (config.add = updateObj.add);\n      if (dataset._refreshData === true) {\n        delete dataObj.removed;\n      }\n    }\n    dataObj.dataset = dataset;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    conf.yMin = yMin;\n    conf.yMax = yMax;\n  }\n\n  /**\n   * Function for parsing the hover effects\n   * @param {Object} dataObj Containing the set level information used for creating the hover effect\n   * @param {Object} chartAttr Containing the chart level information used for creating the hover effect\n   * @param {Object} defaults Containing the default information used for creating the hover effect\n   * @return {Object} Containg the final parsed hover properties\n   */\n  pointHoverOptions (dataObj, chartAttr, defaults) {\n    var dataset = this,\n      hoverEffect = pluckNumber(dataObj.config.showhovereffect, dataset.config.showhovereffect,\n        chartAttr.plothovereffect, chartAttr.showhovereffect),\n      rolloverProperties = {},\n      hoverAttr = !!pluck(dataObj.config.hovercolor, dataset.config.hovercolor, chartAttr.plotfillhovercolor,\n        dataObj.config.hoveralpha, dataset.config.hoveralpha, chartAttr.plotfillhoveralpha,\n        dataObj.config.borderhovercolor, dataset.config.borderhovercolor, chartAttr.plotborderhovercolor,\n        dataObj.config.borderhoveralpha, dataset.config.borderhoveralpha, chartAttr.plotborderhoveralpha,\n        dataObj.config.borderhoverthickness, dataset.config.borderhoverthickness, chartAttr.plotborderhoverthickness,\n        dataObj.config.hoverheight, dataset.config.hoverheight, chartAttr.plothoverheight,\n        dataObj.config.hoverwidth, dataset.config.hoverwidth, chartAttr.plothoverwidth,\n        dataObj.config.hoverradius, dataset.config.hoverradius, chartAttr.plothoverradius, hoverEffect),\n      enabled = false,\n      color,\n      alpha,\n      rawhoverBorderColor,\n      rawhoverBorderAlpha,\n      fillColor;\n\n    if ((hoverEffect === UNDEF && hoverAttr) || hoverEffect) {\n      enabled = true;\n      color = pluck(dataObj.config.hovercolor, dataset.config.hovercolor,\n        chartAttr.plotfillhovercolor, getLightColor(defaults.color, 70));\n      alpha = pluck(dataObj.config.hoveralpha, dataset.config.hoveralpha,\n        chartAttr.plotfillhoveralpha, defaults.alpha);\n      rawhoverBorderColor = pluck(dataObj.config.borderhovercolor, dataset.config.borderhovercolor,\n        chartAttr.plotborderhovercolor, defaults.borderColor);\n      rawhoverBorderAlpha = pluckNumber(dataObj.config.borderhoveralpha, dataset.config.borderhoveralpha,\n        chartAttr.plotborderhoveralpha, alpha, defaults.borderAlpha);\n\n      rolloverProperties = {\n        rawhoverAlpha: alpha,\n        rawhoverColor: color,\n        rawhoverBorderColor,\n        rawhoverBorderAlpha,\n        stroke: convertColor(rawhoverBorderColor,\n          pluckNumber(dataObj.config.borderhoveralpha, dataset.config.borderhoveralpha,\n            chartAttr.plotborderhoveralpha, alpha, defaults.borderAlpha)),\n        'stroke-width': pluckNumber(dataObj.config.borderhoverthickness, dataset.config.borderhoverthickness,\n          chartAttr.plotborderhoverthickness, defaults.borderThickness),\n        height: pluckNumber(dataObj.config.hoverheight, dataset.config.hoverheight,\n          chartAttr.plothoverheight, defaults.height),\n        width: pluckNumber(dataObj.config.hoverwidth, dataset.config.hoverwidth,\n          chartAttr.plothoverwidth, defaults.width),\n        r: pluckNumber(dataObj.config.hoverradius, dataset.config.hoverradius,\n          chartAttr.plothoverradius, defaults.radius)\n      };\n\n      if (defaults.use3D) {\n        fillColor = getPointColor(getFirstColor(pluck(dataObj.config.hovercolor,\n          dataset.config.hovercolor, chartAttr.plotfillhovercolor,\n          getLightColor(defaults.color, 70))),\n        pluck(dataObj.config.hoveralpha, dataset.config.hoveralpha,\n          chartAttr.plotfillhoveralpha, defaults.alpha),\n        defaults.shapeType);\n      } else {\n        fillColor = convertColor(color, alpha);\n      }\n\n      rolloverProperties.fill = toRaphaelColor(fillColor);\n    }\n\n    return {\n      enabled: enabled,\n      rollOverAttrs: rolloverProperties\n    };\n  }\n\n  /**\n   * Function for attaching a legend with a dataset\n   */\n  _addLegend () {\n    var dataset = this,\n      // chart = dataset.chart,\n      conf = dataset.config,\n      legendItem,\n      legend = dataset.getFromEnv('legend'),\n      config = {\n        enabled: conf.includeInLegend,\n        type: dataset.type,\n        anchorSide: 4,\n        label: getFirstValue(dataset.config.JSONData.seriesname)\n      };\n    if (conf.includeinlegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      } else {\n        legendItem.configure({ style: legend.config.itemStyle,\n          hiddenStyle: legend.config.itemHiddenStyle,\n          datasetVisible: legend.config.datasetVisible,\n          hoverStyle: legend.config.itemHoverStyle });\n      }\n      legendItem.configure(config);\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor({\n            color: conf.color,\n            alpha: conf.alpha\n          }),\n          rawFillColor: conf.color,\n          stroke: toRaphaelColor({\n            color: conf.plotBorderColor,\n            alpha: HUNDREDSTRING\n          }),\n          'stroke-width': conf.anchorBorderThickness\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item is dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n\n  /**\n   * Function to create graphical container for the specific dataset\n   */\n  createContainer () {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      parentContainer = dataset.getLinkedParent().getChildContainer();\n\n    !dataset.getContainer('nodesGroup') && dataset.addContainer('nodesGroup',\n      createGroup('nodesGroup', animationManager, parentContainer.defaultVcanvasGroup, dataset));\n\n    !dataset.getContainer('dataLabelsGroup') && dataset.addContainer('dataLabelsGroup',\n      createGroup('dataLabelsGroup', animationManager, parentContainer.vcanvasLabelGroup, dataset));\n\n    !dataset.getContainer('cloneGraphicGroup') && dataset.addContainer('cloneGraphicGroup',\n      createGroup('cloneGraphicGroup', animationManager, parentContainer.defaultVcanvasGroup, dataset));\n  }\n\n  /**\n   * Draw function of DragNodeDataset\n   */\n  draw () {\n    var dataset = this,\n      components = dataset.components,\n      // parent = dataset.getLinkedParent(),\n      // datasetGraphics = parent.getChildContainer(),\n      // chart = dataset.chart,\n      // jobList = chart.getJobList(),\n      smartLabel = dataset.getFromEnv('smartLabel'),\n      data = components.data,\n      removeDataArr = dataset.components.removeDataArr || [],\n      removeDataArrLen = removeDataArr.length,\n      i,\n      // paper = dataset.getFromEnv('paper'),\n      ln,\n      group,\n      // config,\n      style = dataset.getFromEnv('dataLabelStyle'),\n      css = {\n        fontFamily: style.fontFamily,\n        fontSize: style.fontSize,\n        lineHeight: style.lineHeight,\n        fontWeight: style.fontWeight,\n        fontStyle: style.fontStyle\n      },\n      // dragLabelGroup,\n      removed;\n      // layers = chart.graphics, // requird for series\n      // gDataset = layers.datasetGroup;\n\n    if (!dataset.getState('dirty') && !dataset._contextChanged()) {\n      return;\n    }\n    dataset.createContainer();\n    group = dataset.getContainer('nodesGroup');\n    // dragLabelGroup = dataset.getContainer('dataLabelsGroup');\n    dataset.getFromEnv('animationManager').setAnimation({\n      el: dataset.getContainer('cloneGraphicGroup'),\n      attr: { opacity: 0.3 },\n      component: dataset\n    });\n\n    group.css(css);\n    smartLabel.useEllipsesOnOverflow(dataset.getFromEnv('chartConfig').useEllipsesWhenOverflow);\n    // smartLabel.setStyle(style);\n    // group.css(css);\n    // draw data\n    for (i = 0, ln = data.length; i < ln; i += 1) {\n      // config = data[i].config;\n      removed = data[i].removed;\n      !removed && this._drawNode(i);\n    }\n    dataset.config.drawn = true;\n\n    // if (dataset.visible) {\n    //   group.show();\n    //   // dragLabelGroup.show();\n    // }\n    // Remove the extra elements\n    for (i = 0; i < removeDataArrLen; i++) {\n      dataset._removeDataVisuals(removeDataArr.shift());\n    }\n    dataset._setupKdTree();\n  }\n\n  /**\n   * Sets up kdtree for finding out whether pointer is above any plot\n   *\n   * @memberof DragNodeDataset\n   */\n  _setupKdTree () {\n    var dataset = this,\n      conf = dataset.config,\n      data = dataset.components.data,\n      dataLen,\n      i,\n      config,\n      attr,\n      maxRadius = -Infinity,\n      searchDataArr;\n\n    searchDataArr = conf.searchDataArr = [];\n    dataLen = data.length;\n    for (i = 0; i < dataLen; i++) {\n      config = data[i].config;\n      if (!data[i].removed && config._yPos !== UNDEF && !isNaN(config._yPos)) {\n        attr = config.props.element.attr;\n        maxRadius = Math.max(maxRadius, pluckNumber(config.radius, 0));\n        searchDataArr.push({\n          x: pluckNumber(attr.x, config._xPos),\n          y: pluckNumber(attr.y, config._yPos),\n          index: i,\n          data: data[i],\n          shapeInfo: {\n            type: config.shape,\n            radius: pluck(config.radius, 0),\n            width: pluckNumber(config.width),\n            height: pluckNumber(config.height),\n            sides: pluckNumber(config.numSides)\n          }\n        });\n      }\n    }\n    conf.tree = new KdTree(true).buildKdTree(searchDataArr);\n    conf.tree._setSearchLimit(maxRadius, maxRadius);\n  }\n  /**\n   * Draw the individual data labels for the nodes\n   * @param {number} index The index of the datalabel that is to be drawn\n   */\n  drawLabel (index) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      conf = dataset.config,\n      datasetIndex = conf.datasetIndex,\n      animationManager = dataset.getFromEnv('animationManager'),\n      dataStore = dataset.components.data,\n      i,\n      len = dataStore.length,\n      labelAttrs,\n      labelElement,\n      plotLabelStyle,\n      group = dataset.getContainer('nodesGroup'),\n      // style = chart.config.dataLabelStyle,\n      // animationObj = chart.get('config', 'animationObj'),\n      // dummyAnimElem = animationObj.dummyObj,\n      // dummyAnimObj = animationObj.animObj,\n      config,\n      valueString,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      style = dataset.getFromEnv('dataLabelStyle'),\n      cursor,\n      smartTextObj,\n      labelDisplacement,\n      eventArgs,\n      set,\n      yAdjustment,\n      // animType = animationObj.animType,\n      xPos,\n      labelY,\n      groupId,\n      cloneText,\n      plotWidth,\n      plotHeight,\n      labelAlign,\n      setGraphics,\n      dragUp = dataset.dragUp,\n      dragMove = dataset.dragMove,\n      dragStart = dataset.dragStart,\n      rollOverProperties,\n      shapeType,\n      yPos,\n      smartLabel = dataset.getFromEnv('smartLabel'),\n      setElement,\n      visible = dataset.getState('visible');\n\n    smartLabel.setStyle(style);\n\n    if (index !== UNDEF) {\n      i = index;\n      len = i + 1;\n    } else {\n      i = 0;\n    }\n\n    for (; i < len; i++) {\n      set = dataStore[i];\n      config = set.config;\n      plotWidth = config._plotWidth;\n      plotHeight = config._plotHeight;\n      valueString = config.displayValue;\n      labelAlign = config.labelAlign;\n      setGraphics = set.graphics;\n      cloneText = setGraphics.cloneText;\n      rollOverProperties = set.config.rollOverProperties;\n      shapeType = config.shapeType;\n\n      if (visible && defined(valueString) && valueString !== BLANK) {\n        // Get the displayValue text according to the canvas width.\n        smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n        // padding for text from boundaries is taken care of\n        smartTextObj = smartLabel.getSmartText(valueString,\n          plotWidth - PADDING, plotHeight - PADDING);\n\n        // label displacement for top or bottom\n        labelDisplacement = plotHeight * 0.5 -\n            (smartTextObj.height * 0.5);\n        // label at TOP\n        switch (labelAlign) {\n          case POSITION_TOP:\n            labelDisplacement = -labelDisplacement;\n            break;\n          case POSITION_BOTTOM:\n            break;\n          default:\n            labelDisplacement = 0;\n            break;\n        }\n        xPos = config._xPos;\n        yPos = config._yPos;\n        set._yAdjustment = yAdjustment = labelDisplacement;\n        labelY = yPos + yAdjustment;\n        cursor = config.link ? POINTER : config.allowDrag ? 'move' : BLANKSTRING;\n\n        plotLabelStyle = config.dataLabelStyle;\n        labelAttrs = {\n          text: smartTextObj.text,\n          title: (smartTextObj.tooltext || BLANKSTRING),\n          fill: plotLabelStyle.color,\n          'text-bound': [plotLabelStyle.backgroundColor, plotLabelStyle.borderColor,\n            style.borderThickness, style.borderPadding,\n            style.borderRadius, style.borderDash\n          ],\n          x: xPos,\n          y: labelY,\n          cursor: cursor\n        };\n\n        labelElement = setGraphics.label;\n\n        labelElement = animationManager.setAnimation({\n          el: labelElement || 'text',\n          attr: labelAttrs,\n          container: group,\n          component: dataset\n        });\n        labelElement.outlineText(conf.showTextOutline, labelAttrs.fill);\n        if (!setGraphics.label) {\n          labelElement = dataset.addGraphicalElement('plotLabel', labelElement, true);\n          setGraphics.label = labelElement;\n\n          // If dragging is allowed for that node then only we bind drag functions to the labelElement\n          labelElement.drag(dragMove, dragStart, dragUp);\n        } else {\n          labelElement.show();\n        }\n\n        setElement = setGraphics && (setGraphics.image || setGraphics.element);\n\n        if (cloneText) {\n          animationManager.setAnimation({\n            el: cloneText,\n            attr: {\n              transform: BLANKSTRING,\n              x: xPos,\n              y: labelY,\n              text: smartTextObj.text,\n              title: (smartTextObj.tooltext || BLANKSTRING),\n              fill: style.color,\n              'text-bound': [style.backgroundColor, style.borderColor,\n                style.borderThickness, style.borderPadding,\n                style.borderRadius, style.borderDash\n              ]\n            },\n            component: dataset\n          });\n        }\n\n        labelElement.data('drag-options', {\n          dataObj: set,\n          dataset: dataset,\n          datasetIndex: datasetIndex,\n          pointIndex: set.config.index,\n          cursor: cursor,\n          chart: chart,\n          link: set.link\n        });\n        eventArgs = {\n          index: i,\n          link: config.link,\n          y: config.y,\n          x: config.x,\n          shape: pluck(shapeType, 'rect'),\n          width: config.width,\n          height: config.height,\n          radius: config.radius,\n          sides: config.numSides,\n          label: config.displayValue,\n          toolText: config.toolText,\n          id: config.id,\n          datasetIndex: datasetIndex,\n          datasetName: dataset.config.JSONData.seriesname,\n          sourceType: 'dataplot',\n          allowDrag: config.allowDrag,\n          numSides: config.numSides,\n          imageNode: config.imageNode,\n          imageAlign: config.imageAlign,\n          imageWidth: config.imageWidth,\n          imageHeight: config.imageHeight,\n          labelAlign: config.labelAlign,\n          color: config.color,\n          alpha: config.alpha,\n          hoverColor: config.rollOverProperties.rollOverAttrs.rawhoverColor,\n          hoverAlpha: config.rollOverProperties.rollOverAttrs.rawhoverAlpha,\n          borderHoverColor: config.rollOverProperties.rollOverAttrs.rawhoverBorderColor,\n          borderHoverAlpha: config.rollOverProperties.rollOverAttrs.rawhoverBorderAlpha,\n          borderHoverThickness: config.rollOverProperties.rollOverAttrs['stroke-width'],\n          hoverHeight: config.rollOverProperties.rollOverAttrs.height,\n          hoverWidth: config.rollOverProperties.rollOverAttrs.width,\n          hoverRadius: config.rollOverProperties.rollOverAttrs.r\n        };\n\n        groupId = datasetIndex + '_' + i;\n        labelElement.data(GROUPID, groupId);\n        labelElement.data(EVENTARGS, eventArgs);\n        labelElement.data('hoverAttr', rollOverProperties && rollOverProperties.rollOverAttrs);\n        labelElement.data('unHoverAttr', setElement.data('unHoverAttr'));\n      } else {\n        setGraphics.label && setGraphics.label.hide();\n      }\n    }\n  }\n\n  /**\n   * Parses plot cosmetics and calculates position\n   *\n   * @param {any} i index\n   * @memberof DragNodeDataset\n   */\n  parsePlotAttributes (i) {\n    var dataset = this,\n      datasetIndex = dataset.config.datasetIndex,\n      datasetComponents = dataset.components,\n      nodes = datasetComponents.nodes,\n      xAxis = dataset.getFromEnv('xAxis'),\n      yAxis = dataset.getFromEnv('yAxis'),\n      data = datasetComponents.data,\n      set = data[i],\n      config = set.config,\n      conf = dataset.config,\n      xPos,\n      yPos,\n      setGraphics = set.graphics || (set.graphics = {}),\n      symbol = config.symbol,\n      width,\n      height,\n      radius,\n      id,\n      imageNode,\n      confShapeArg,\n      imageURL,\n      imageAlign,\n      lineColor = conf.colorObj.lineColor,\n      lineWidth = conf.datasetPlotBorderThickness,\n      plotWidth,\n      plotHeight,\n      isRectangle,\n      rollOverProperties = set.config.rollOverProperties,\n      imageWidth,\n      imageHeight,\n      imageY,\n      pointAttr,\n      fill,\n      shapeType = config.shape,\n      cursor = config.link ? POINTER : config.allowDrag ? 'move' : BLANKSTRING,\n      rollOverAttrs,\n      polypath,\n      cloneImage = setGraphics.cloneImage,\n      attr,\n      cloneImageAttr,\n      imageElementAttr;\n\n    config._yPos = yPos = yAxis.getPixel(config.y);\n    config._xPos = xPos = xAxis.getPixel(config.x);\n    // only draw the point if y is defined\n    if (yPos !== UNDEF && !isNaN(yPos)) {\n      config.shapeArg = {};\n      confShapeArg = config.shapeArg;\n      height = pluckNumber(config.height);\n      width = pluckNumber(config.width);\n      radius = pluckNumber(config.radius);\n      isRectangle = symbol === RECTANGLE;\n      id = config.id;\n      imageNode = config.imageNode;\n      imageURL = config.imageURL;\n      imageAlign = config.imageAlign; // TOP, MIDDLE or BOTTOM\n      plotWidth = isRectangle ? width : radius * 1.4;\n      imageWidth = pluckNumber(config.imageWidth, plotWidth);\n      plotHeight = isRectangle ? height : radius * 1.4;\n      imageHeight = pluckNumber(config.imageHeight, plotHeight);\n      fill = toRaphaelColor(config.fillColor);\n      config._plotWidth = plotWidth;\n      config._plotHeight = plotHeight;\n      pointAttr = {\n        fill: fill,\n        'stroke-width': lineWidth,\n        stroke: toRaphaelColor(lineColor)\n      };\n      symbol = confShapeArg.symbol = pluck(config.symbol,\n        conf.symbol, BLANK);\n      symbol = symbol.split(UNDERSCORE);\n\n      polypath = [symbol[1], xPos, yPos, config.radius, config.startAngle, 0];\n\n      if (symbol[0] === 'poly' || symbol[0] === CIRCLE) {\n        config.shapeType = symbol[0];\n        config.elemType = PATH;\n        // convert polypath to path\n        attr = {\n          path: polyPathToPath(polypath)\n        };\n        confShapeArg.x = xPos;\n        confShapeArg.y = yPos;\n        confShapeArg.radius = config.radius;\n        confShapeArg.sides = symbol[1];\n        pointAttr.r = config.radius;\n        delete pointAttr.width;\n        delete pointAttr.x;\n        delete pointAttr.y;\n        delete pointAttr.height;\n        if (rollOverProperties && rollOverProperties.enabled) {\n          rollOverAttrs = rollOverProperties.rollOverAttrs;\n          delete rollOverAttrs.x;\n          delete rollOverAttrs.y;\n          delete rollOverAttrs.width;\n          delete rollOverAttrs.height;\n        }\n      } else {\n        config.shapeType = SHAPE_RECT;\n        config.elemType = SHAPE_RECT;\n        confShapeArg.x = xPos - (width / 2);\n        confShapeArg.y = yPos - (height / 2);\n        confShapeArg.r = 0;\n        confShapeArg.width = width;\n        confShapeArg.height = height;\n        attr = {\n          x: confShapeArg.x,\n          y: confShapeArg.y,\n          width: width,\n          height: height,\n          r: 0\n        };\n        pointAttr.width = width;\n        pointAttr.height = height;\n        pointAttr.x = xPos - (width / 2);\n        pointAttr.y = yPos - (height / 2);\n        // Readjust x and y of the rectangle if hover width or height is\n        // changed\n        if (rollOverProperties && rollOverProperties.enabled) {\n          rollOverAttrs = rollOverProperties.rollOverAttrs;\n          rollOverAttrs.x = xPos - (rollOverAttrs.width / 2);\n          rollOverAttrs.y = yPos - (rollOverAttrs.height / 2);\n          delete rollOverAttrs.r;\n        }\n      }\n\n      attr.fill = fill;\n      attr['stroke-width'] = lineWidth;\n      attr.stroke = toRaphaelColor(lineColor);\n\n      config.eventArgs = {\n        index: i,\n        link: config.link,\n        y: config.y,\n        x: config.x,\n        shape: pluck(shapeType, 'rect'),\n        width: width,\n        height: height,\n        radius: radius,\n        sides: config.numSides,\n        label: config.displayValue,\n        toolText: config.toolText,\n        id: config.id,\n        datasetIndex,\n        datasetName: dataset.config.JSONData.seriesname,\n        sourceType: 'dataplot',\n        allowDrag: config.allowDrag,\n        numSides: config.numSides,\n        imageNode: config.imageNode,\n        imageAlign: config.imageAlign,\n        imageWidth: config.imageWidth,\n        imageHeight: config.imageHeight,\n        labelAlign: config.labelAlign,\n        color: config.color,\n        alpha: config.alpha,\n        hoverColor: config.rollOverProperties.rollOverAttrs.rawhoverColor,\n        hoverAlpha: config.rollOverProperties.rollOverAttrs.rawhoverAlpha,\n        borderHoverColor: config.rollOverProperties.rollOverAttrs.rawhoverBorderColor,\n        borderHoverAlpha: config.rollOverProperties.rollOverAttrs.rawhoverBorderAlpha,\n        borderHoverThickness: config.rollOverProperties.rollOverAttrs['stroke-width'],\n        hoverHeight: config.rollOverProperties.rollOverAttrs.height,\n        hoverWidth: config.rollOverProperties.rollOverAttrs.width,\n        hoverRadius: config.rollOverProperties.rollOverAttrs.r\n      };\n\n      // Draw the imageNode if available\n      if (imageNode && imageURL) {\n        if (imageHeight > plotHeight) {\n          imageHeight = plotHeight;\n        }\n        if (imageWidth > plotWidth) {\n          imageWidth = plotWidth;\n        }\n        switch (imageAlign) {\n          case POSITION_MIDDLE:\n            imageY = yPos - (imageHeight / 2);\n            break;\n          case POSITION_BOTTOM:\n            imageY = plotHeight > imageHeight ? yPos +\n              (plotHeight / 2) - imageHeight\n              : yPos - imageHeight / 2;\n            break;\n          default:\n            imageY = plotHeight > imageHeight\n              ? yPos - (plotHeight * 0.5)\n              : yPos - imageHeight / 2;\n            break;\n        }\n        config.imageX = xPos - (imageWidth / 2);\n        config.imageY = imageY;\n        config.imageWidth = imageWidth;\n        config.imageHeight = imageHeight;\n\n        imageElementAttr = {\n          src: imageURL,\n          x: config.imageX,\n          y: imageY,\n          width: imageWidth,\n          height: imageHeight,\n          cursor: cursor\n        };\n        if (cloneImage) {\n          cloneImageAttr = {\n            transform: BLANKSTRING,\n            src: imageURL,\n            x: config.imageX,\n            y: imageY,\n            width: imageWidth,\n            height: imageHeight\n          };\n        }\n      }\n      config.pointAttr = pointAttr;\n      nodes[id] = set;\n      config.props = {\n        element: {\n          attr: attr\n        },\n        imageElement: {\n          attr: imageElementAttr\n        },\n        cloneImage: {\n          attr: cloneImageAttr\n        },\n        cloneGraphic: {\n          attr: attr\n        }\n      };\n    }\n  }\n  /**\n   * Allocates position and parses cosmetics during post space management\n   * @param  {Number} index Specific node whose node that is to be updated.\n   */\n  allocatePosition (index) {\n    var dataset = this,\n      data = dataset.components.data,\n      i,\n      len;\n\n    len = data.length;\n    if (index !== UNDEF) {\n      dataset.parsePlotAttributes(index);\n    } else {\n      for (i = 0; i < len; i++) {\n        dataset.parsePlotAttributes(i);\n      }\n    }\n  }\n  /**\n   * Draw the individual nodes of the dataset\n   * @param {number} i The index of the node that is to be drawn\n   */\n  _drawNode (i) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      datasetIndex = dataset.config.datasetIndex,\n      manager = dataset.getLinkedParent(),\n      datasetComponents = dataset.components,\n      animationManager = dataset.getFromEnv('animationManager'),\n      data = datasetComponents.data,\n      set = data[i],\n      config = set.config,\n      setGraphics = set.graphics || (set.graphics = {}),\n      groupId,\n      imageNode = config.imageNode,\n      imageURL = config.imageURL,\n      group = dataset.getContainer('nodesGroup'),\n      rollOverProperties = set.config.rollOverProperties,\n      dragUp = dataset.dragUp,\n      dragMove = dataset.dragMove,\n      dragStart = dataset.dragStart,\n      cursor = config.link ? POINTER : config.allowDrag ? 'move' : BLANKSTRING,\n      type,\n      setElement = setGraphics.graphic,\n      cloneText = setGraphics.cloneText,\n      cloneGraphic = setGraphics.cloneGraphic,\n      cloneImage = setGraphics.cloneImage,\n      imageElement = setGraphics.image,\n      labelElement = setGraphics.label,\n      visible = dataset.getState('visible');\n\n    // only draw the point if y is defined\n    if (config._yPos !== UNDEF && !isNaN(config._yPos)) {\n      setElement = setGraphics.element;\n      type = setElement && setElement.type;\n      if (config.elemType.indexOf(type) === -1 && setElement) {\n        setElement.remove();\n        setElement = setGraphics.element = null;\n        labelElement && labelElement.remove();\n        imageElement && imageElement.remove();\n        delete setGraphics.label;\n        delete setGraphics.image;\n        imageElement = null;\n        labelElement = null;\n      }\n      setElement = animationManager.setAnimation({\n        el: setElement || config.elemType,\n        label: 'node',\n        attr: config.props.element.attr,\n        container: group,\n        component: dataset\n      });\n      // Create a new element\n      if (!setGraphics.graphic) {\n        // If dragging is allowed for that node then only we bind drag functions to the setElement\n        setElement.drag(dragMove, dragStart, dragUp);\n      }\n      setGraphics.element = setElement;\n      setElement.show();\n      manager.animationDone = true;\n\n      groupId = datasetIndex + '_' + i;\n\n      if (cloneGraphic) {\n        if (cloneGraphic.type === setElement.type) {\n          animationManager.setAnimation({\n            el: cloneGraphic,\n            attr: config.props.element.attr,\n            component: dataset\n          }).transform(BLANKSTRING);\n        } else {\n          cloneGraphic.remove();\n          delete set.graphics.cloneGraphic;\n          if (cloneText) {\n            cloneText.remove();\n            delete set.graphics.cloneText;\n          }\n        }\n      }\n\n      // Draw the imageNode if available\n      if (imageNode && imageURL) {\n        imageElement = animationManager.setAnimation({\n          el: setGraphics.image || 'image',\n          attr: visible && config.props.imageElement.attr,\n          doNotRemove: true,\n          container: group,\n          component: dataset,\n          callback: !visible && hideFn\n        });\n        if (!setGraphics.image && imageElement) {\n          // If dragging is allowed for that node then only\n          // we bind drag functions to the imageElement\n          imageElement.drag(dragMove, dragStart, dragUp);\n        }\n        setGraphics.image = imageElement;\n        visible && imageElement.show();\n\n        imageElement.data('drag-options', {\n          dataObj: set,\n          dataset: dataset,\n          datasetIndex: dataset.index,\n          pointIndex: set.config.index,\n          cursor: cursor,\n          link: set.link\n        });\n\n        imageElement.data(GROUPID, groupId);\n        imageElement.data(EVENTARGS, config.eventArgs);\n        imageElement.data('hoverAttr', rollOverProperties && rollOverProperties.rollOverAttrs);\n        imageElement.data('unHoverAttr', config.pointAttr);\n\n        if (cloneImage) {\n          animationManager.setAnimation({\n            el: cloneImage,\n            attr: config.props.cloneImage.attr,\n            component: dataset\n          });\n        }\n      } else if (setGraphics.image) {\n        setGraphics.image = animationManager.setAnimation({\n          el: setGraphics.image,\n          component: dataset\n        });\n      }\n      dataset.drawLabel(i);\n      animationManager.setAnimation({\n        el: setElement,\n        attr: { cursor: cursor },\n        component: dataset\n      });\n\n      setElement.data('drag-options', {\n        dataObj: set,\n        dataset: dataset,\n        datasetIndex: dataset.index,\n        pointIndex: set.config.index,\n        cursor: cursor,\n        chart: chart,\n        link: set.link\n      });\n      setElement.data(GROUPID, groupId);\n      setElement.data(EVENTARGS, config.eventArgs);\n      setElement.data('hoverAttr', rollOverProperties && rollOverProperties.rollOverAttrs);\n      setElement.data('unHoverAttr', config.pointAttr);\n\n      visible ? setElement.show() : setElement.hide();\n    } else {\n      setGraphics.element && (setGraphics.element = animationManager.setAnimation({\n        el: setGraphics.element,\n        component: dataset\n      }));\n      setGraphics.image && (setGraphics.image = animationManager.setAnimation({\n        el: setGraphics.image,\n        component: dataset\n      }));\n      setGraphics.label && (setGraphics.label = animationManager.setAnimation({\n        el: setGraphics.label,\n        component: dataset\n      }));\n    }\n  }\n\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.config.JSONData) {\n      return;\n    }\n    let dataSet = this,\n      prevData = dataSet.components,\n      prevDataLength = prevData.data && prevData.data.length,\n      currDataLength = (datasetJSON.data && datasetJSON.data.length) || 0,\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots/categories\n    // is more than the existing ones.\n    if (dataDiff > 0) {\n      dataSet.removeData(currDataLength, dataDiff);\n    }\n  }\n\n  /**\n   * Function to remove data during update if number of data has reduced than the previous render\n   * @param {number} indexVal The data index from which data has to be removed.\n   * @param {number} stretchVal The index upto which data has to be removed\n   */\n  removeData (indexVal, stretchVal) {\n    var dataSet = this,\n      index = indexVal,\n      stretch = stretchVal,\n      components = dataSet.components,\n      manager = dataSet.getLinkedParent(),\n      dataStore = components.data,\n      removeDataArr = components.removeDataArr || (components.removeDataArr = []);\n\n    stretch = stretch || 1;\n    index = index || 0;\n\n    if (index < 0) {\n      index = 0;\n    }\n    components.removeDataArr = removeDataArr = removeDataArr.concat(dataStore.splice(index, stretch));\n    manager._clearConnectors();\n  }\n\n  /**\n   * Function to remove graphics during update if number of data has reduced than the previous render\n   * @param {Object} dataObj The object corresponding to the data whose graphics has to be removed\n   */\n  _removeDataVisuals (dataObj) {\n    var dataSet = this,\n      ele,\n      graphics,\n      graphicsObj;\n    if (!dataObj) {\n      return;\n    }\n    graphics = dataObj.graphics;\n    for (ele in graphics) {\n      graphicsObj = graphics[ele];\n\n      if (graphicsObj.hide && typeof graphicsObj.hide === 'function') {\n        dataSet.getFromEnv('animationManager').setAnimation({\n          el: graphicsObj,\n          attr: { 'text-bound': [] },\n          component: dataSet\n        });\n        graphicsObj.hide();\n        graphicsObj.transform && graphicsObj.transform(BLANKSTRING);\n      }\n    }\n  }\n\n  /**\n   * Get json data of dragnode dataset\n   * @return {Object} jsonData\n   */\n  getJSONData () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      len = dataStore.length,\n      jsonData = [],\n      dataObj,\n      i;\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (!dataObj.removed) {\n        if (dataObj.config._options) {\n          delete dataObj.config._options.update;\n          delete dataObj.config._options.add;\n          jsonData.push(dataObj.config._options);\n        }\n      }\n    }\n    return jsonData;\n  }\n}\nexport default DragNodeDataset;\n","export default {\n  'initial.dataset.dragNode': function () {\n    return {\n      'node.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'axis'\n        }];\n      }\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport DragNodeDataset from './dragnode';\nimport { pluck, pluckNumber, parseUnsafeString, getDashStyle, DASH_DEF,\n  preDefStr, BLANKSTRING, hashify, dropHash, HASHSTRING, extend2,\n  POSITION_CENTER, visibleStr, PXSTRING, setLineHeight, isIE\n} from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport draggablelabelAnimation from './draggablelabel-animation';\n\nlet PX = preDefStr.PX,\n  EVENTARGS = 'eventArgs',\n  LABELDRAGEND = 'labeldragend',\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')'; // invisible but clickable\n\n/**\n * Dataset class for draggable labels\n */\nclass DragNodeLabels extends DragNodeDataset {\n  /**\n   * Creates an instance of DragNodeLabels.\n   * @memberof DragNodeLabels\n   */\n  constructor () {\n    super();\n    addDep({\n      name: 'draggablelabelAnimation',\n      type: 'animationRule',\n      extension: draggablelabelAnimation\n    });\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragNodeLabels';\n  }\n\n  /**\n    * Function for parsing all the attributes and value given by the user at chart and dataset level.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} if no datasetJSON is found\n    */\n  configure (datasetJSON) {\n    if (datasetJSON) {\n      this.trimData(datasetJSON);\n      this.config.JSONData = datasetJSON.label;\n    } else if (!datasetJSON && !this.config.JSONData) {\n      return false;\n    }\n\n    var dataset = this,\n      // chart = dataset.chart,\n      // jsonData = chart.jsonData,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      conf = dataset.config,\n      setDataArr = dataset.config.JSONData || [],\n      len = setDataArr.length,\n      // dataStoreLen,\n      dataStore = dataset.components.data,\n      i;\n    conf.viewMode = pluckNumber(chartAttr.viewmode, 0);\n    if (!dataStore) {\n      dataStore = dataset.components.data = [];\n    }\n    // dataStoreLen = dataStore.length;\n\n    for (i = 0; i < len; i++) {\n      dataset._setConfigure(i);\n    }\n  }\n\n  /**\n   * Function for parsing all the attributes and value given by the user at set level.\n   * @param {number} index The data index for which the configuration is to be parsed.\n   * @param {Object} updateObj It has the information of the data given by the user at the set level\n   */\n  _setConfigure (index, updateObj) {\n    var dataset = this,\n      setDataArr = dataset.config.JSONData,\n      // chart = dataset.chart,\n      setData = updateObj || setDataArr[index],\n      dataStore = dataset.components.data,\n      dataObj,\n      text,\n      // style = chart.config.style,\n      inCanvasStyle = dataset.getFromEnv('style').inCanvasStyle,\n      inCanFontSize = inCanvasStyle.fontSize,\n      // labelColor,\n      // labelBGColor,\n      config,\n      // labelBDColor,\n      // alpha,\n      labelFontSize;\n    dataObj = dataStore[index];\n    !dataObj && (dataObj = dataStore[index] = {});\n    !dataObj.graphics && (dataObj.graphics = {});\n\n    config = dataObj.config = dataObj.config || (dataObj.config = {});\n    text = parseUnsafeString(pluck(setData.text, setData.label));\n    config._options = setData;\n    config.add = setData.add;\n    if (text) {\n      config.text = text;\n      config.x = setData.x || 0;\n      config.y = setData.y || 0;\n      config.labelFontSize = labelFontSize = pluckNumber(setData.fontsize, inCanFontSize);\n\n      config.labelColor = hashify(pluck(setData.color,\n        inCanvasStyle.color));\n      config.alpha = (pluckNumber(setData.alpha, 100)) / 100;\n      config.allowDrag = pluckNumber(setData.allowdrag, 1);\n      config.padding = pluckNumber(setData.padding, 5);\n\n      // config.labelColor = labelColor = convertColor(pluck(setData.color, inCanvasStyle.color),\n      //   pluckNumber(setData.alpha, 100));\n\n      if (setData.fontsize) {\n        config.labelCSS = {\n          fontSize: labelFontSize + PX\n        };\n      } else {\n        config.labelCSS = {};\n      }\n\n      config.labelBGColor = pluck(setData.bgcolor &&\n        setData.bgcolor.replace(dropHash, HASHSTRING));\n      config.labelBDColor = pluck(setData.bordercolor &&\n        setData.bordercolor.replace(dropHash, HASHSTRING));\n      config.link = setData.link;\n      config.borderThickness = setData.borderthickness;\n      config.dashLen = setData.dashlen;\n      config.dashGap = setData.dashgap;\n      config.dashed = setData.dashed;\n      config.radius = setData.radius;\n    }\n  }\n\n  /**\n   * Get jsondata of dragable label dataset\n   * @return {Object} The JSON data\n   */\n  getJSONData () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      len = dataStore.length,\n      jsonData = [],\n      dataObj,\n      i;\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (!dataObj.removed) {\n        if (dataObj.config._options) {\n          jsonData.push(dataObj.config._options);\n        }\n      }\n    }\n    return jsonData;\n  }\n\n  /**\n   * Function to create container at the dataset level\n   */\n  createContainer () {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      parentContainer = dataset.getLinkedParent().getChildContainer();\n\n    !dataset.getContainer('dragLabelGroup') && dataset.addContainer('dragLabelGroup',\n      animationManager.setAnimation({\n        el: 'group',\n        attr: {\n          name: 'dragLabelGroup'\n        },\n        label: 'group',\n        component: dataset,\n        container: parentContainer.defaultVcanvasGroup\n      }));\n  }\n\n  /**\n   * Parses and sets the attributes during post space management\n   *\n   * @memberof DragNodeLabels\n   */\n  allocatePosition () {\n    this.parsePlotAttributes();\n  }\n\n  /**\n   * Parsing of attributes\n   *\n   * @memberof DragNodeLabels\n   */\n  parsePlotAttributes () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      yAxis = dataset.getFromEnv('yAxis'),\n      xAxis = dataset.getFromEnv('xAxis'),\n      SmartLabel = dataset.getFromEnv('smartLabel'),\n      style = dataset.getFromEnv('dataLabelStyle'),\n      dashLen,\n      dashGap,\n      dashed,\n      x,\n      y,\n      color,\n      text,\n      bgColor,\n      borderColor,\n      padding,\n      config,\n      attr,\n      // alpha,\n      dataObj,\n      allowDrag,\n      fontSize,\n      radius,\n      dim,\n      borderThickness,\n      len = dataStore && dataStore.length,\n      lStyle,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      i,\n      labelCSS;\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (dataObj.removed) {\n        continue;\n      }\n      config = dataObj.config;\n      !dataObj.graphics && (dataObj.graphics = {});\n      config.index = i;\n      x = xAxis.getPixel(config.x);\n      y = yAxis.getPixel(config.y);\n      text = config.text;\n      bgColor = config.labelBGColor;\n      borderColor = config.labelBDColor;\n      padding = config.padding;\n      allowDrag = config.allowDrag;\n      fontSize = config.labelFontSize;\n      color = config.labelColor;\n      radius = config.radius;\n      dashed = config.dashed;\n      borderThickness = config.borderThickness;\n      dashLen = config.dashLen;\n      dashGap = config.dashGap;\n      borderThickness = config.borderThickness;\n      labelCSS = config.labelCSS;\n\n      attr = {\n        x: x,\n        y: y,\n        text: text,\n        align: POSITION_CENTER,\n        fill: color,\n        'text-bound': [(bgColor || BLANKSTRING), (borderColor || BLANKSTRING),\n          pluckNumber(borderThickness, 1),\n          padding,\n          pluckNumber(radius, 0),\n          pluckNumber(dashed, 0)\n            ? getDashStyle(pluckNumber(dashLen, 5),\n              pluckNumber(dashGap, 4))\n            : DASH_DEF\n        ],\n        visibility: visibleStr\n      };\n\n      lStyle = {\n        backgroundColor: bgColor,\n        borderColor: borderColor,\n        borderPadding: padding,\n        fontSize: fontSize + PXSTRING,\n        fontStyle: style.fontStyle,\n        fontWeight: style.fontWeight,\n        borderRadius: 0,\n        borderDash: DASH_DEF,\n        fontFamily: style.fontFamily\n      };\n      setLineHeight(lStyle);\n      SmartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n      SmartLabel.setStyle(lStyle);\n      // Explicitly added for IE8. If lineHeight is added for any text it gets updated to all the spans. So to avoid that line-height\n      // is applied.\n      labelCSS['line-height'] = lStyle.lineHeight;\n      config.eventArgs = {\n        link: config.link,\n        text: text,\n        x: x,\n        y: y,\n        allowdrag: allowDrag,\n        sourceType: 'labelnode'\n      };\n\n      config.props = {\n        element: {\n          attr: attr\n        }\n      };\n\n      config.labelCSSApplied = labelCSS;\n\n      dim = SmartLabel.getOriSize(text);\n      config.width = dim.width;\n      config.height = dim.height;\n      config.xPos = x;\n      config.yPos = y;\n    }\n  }\n  /**\n   * Function ot draw the entire dataset\n   */\n  draw () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      animationManager = dataset.getFromEnv('animationManager'),\n      style = dataset.getFromEnv('dataLabelStyle'),\n      config,\n      dataObj,\n      element,\n      elementCheck,\n      len = dataStore && dataStore.length,\n      removeDataArr = dataset.components.removeDataArr || [],\n      removeDataArrLen = removeDataArr.length,\n      i,\n      dataLabelContainer,\n      labelCSS;\n\n    dataset.createContainer();\n    dataLabelContainer = dataset.getContainer('dragLabelGroup');\n    dataLabelContainer.css({\n      'font-weight': style.fontWeight,\n      'font-style': style.fontStyle,\n      'font-size': style.fontSize,\n      'font-family': style.fontFamily\n    });\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (dataObj.removed) {\n        continue;\n      }\n      config = dataObj.config;\n      elementCheck = dataObj.graphics.element;\n\n      element = animationManager.setAnimation({\n        el: elementCheck || 'text',\n        container: dataLabelContainer,\n        css: config.labelCSS,\n        attr: config.props.element.attr,\n        component: dataset\n      });\n\n      if (!elementCheck) {\n        dataObj.graphics.element = element;\n      } else {\n        // If label css was applied on this element and now label css is not given then remove css\n        if (config.labelCSSApplied && !labelCSS) {\n          element.removeCSS();\n        }\n        element.show()\n          .css(config.labelCSS);\n      }\n\n      element.data('eventArgs', config.eventArgs);\n    }\n    dataset.drawTracker();\n    for (i = 0; i < removeDataArrLen; i++) {\n      dataset._removeDataVisuals(removeDataArr.shift());\n    }\n  }\n\n  /**\n   * Function ot draw the tracker over the lables for showing the tooltips and other mouse interactivity\n   */\n  drawTracker () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      animationManager = dataset.getFromEnv('animationManager'),\n      chart = dataset.getFromEnv('chart'),\n      manager = dataset.getLinkedParent(),\n      conf = dataset.config,\n      trackerGroup = dataset.getContainer('dragLabelGroup'),\n      len = dataStore && dataStore.length,\n      dataObj,\n      config,\n      padding,\n      elemMouseDownFN = function () { // Long press eve\n        var ele = this,\n          data = ele.data('drag-options'),\n          dataSet = data.dataset,\n          index = data.index,\n          labelObj = dataSet.components.data[index];\n        ele.data('fire_click_event', 1);\n        manager.clearLongPress();\n        manager.triggerLabelUI(ele, labelObj);\n      },\n      elemMouseMoveFN = function () {\n        // Whether to fire the click event ot not\n        var ele = this;\n        if (ele.data('fire_click_event')) {\n          ele.data('fire_click_event', 0);\n          manager.clearLongPress();\n        }\n      },\n      elemMouseUPFN = function (data) {\n        var ele = this,\n          fireClick = ele.data('fire_click_event');\n        manager.clearLongPress();\n        if (fireClick) {\n        /**\n           *\n           * > Applicable to `dragnode` chart only.\n           *\n           * @event FusionCharts#labelClick\n           * @group chart-powercharts:dragnode\n           *\n           * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n           * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n           * @param {number} pageX - x-coordinate of the pointer relative to the page.\n           * @param {number} pageY - y-coordinate of the pointer relative to the page.\n           *\n           * @param {number} x - The x-value of the label node scaled as per the axis of the chart.\n           * @param {number} y - The y-value of the label node scaled as per the axis of the chart.\n           *\n           * @param {string} text - The text value of the label.\n           */\n          chart.plotEventHandler(ele, data, 'LabelClick');\n        }\n      },\n      elemHoverFN = function (data) {\n        var ele = this;\n        /**\n         *\n         * > Applicable to `dragnode` chart only.\n         *\n         * @event FusionCharts#labelRollOver\n         * @group chart-powercharts:dragnode\n         *\n         * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n         * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n         * @param {number} pageX - x-coordinate of the pointer relative to the page.\n         * @param {number} pageY - y-coordinate of the pointer relative to the page.\n         *\n         * @param {number} x - The x-value of the label node scaled as per the axis of the chart.\n         * @param {number} y - The y-value of the label node scaled as per the axis of the chart.\n         *\n         * @param {string} text - The text value of the label.\n         */\n        chart.plotEventHandler(ele, data, 'LabelRollover');\n      },\n      elemOutFN = function (data) {\n        var ele = this;\n        /**\n         *\n         * > Applicable to `dragnode` chart only.\n         *\n         * @event FusionCharts#labelRollOut\n         * @group chart-powercharts:dragnode\n         *\n         * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n         * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n         * @param {number} pageX - x-coordinate of the pointer relative to the page.\n         * @param {number} pageY - y-coordinate of the pointer relative to the page.\n         *\n         * @param {number} x - The x-value of the label node scaled as per the axis of the chart.\n         * @param {number} y - The y-value of the label node scaled as per the axis of the chart.\n         *\n         * @param {string} text - The text value of the label.\n         */\n        chart.plotEventHandler(ele, data, 'LabelRollout');\n      },\n      eventArgs,\n      attr,\n      allowDrag,\n      text,\n      trackerElement,\n      trackerElementCheck,\n      x,\n      y,\n      width,\n      height,\n      dragMove = function (event, data) {\n        var ele = this;\n        dataset._labelDragMove.call(ele, event, data, chart);\n      },\n      dragStart = function (event) {\n        var ele = this;\n        dataset._labelDragStart.call(ele, event, chart);\n      },\n      dragUp = function (event) {\n        var ele = this;\n        dataset._labelDragUp.call(ele, event);\n      },\n      i;\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (dataObj.removed) {\n        continue;\n      }\n      config = dataObj.config;\n      padding = config.padding || 0;\n      width = config.width;\n      height = config.height;\n      x = config.xPos - width / 2;\n      y = config.yPos - height / 2;\n      allowDrag = config.allowDrag;\n      text = config.text;\n      trackerElementCheck = dataObj.graphics.trackerElement;\n      attr = {\n        x: x - padding,\n        y: y - padding,\n        width: width + padding * 2,\n        height: height + padding * 2,\n        cursor: config.allowDrag ? 'move' : BLANKSTRING,\n        fill: TRACKER_FILL,\n        stroke: TRACKER_FILL\n      };\n      eventArgs = {\n        link: config.link,\n        text: text,\n        x: x,\n        y: y,\n        allowdrag: allowDrag,\n        sourceType: 'labelnode'\n      };\n      trackerElement = animationManager.setAnimation({\n        el: trackerElementCheck || 'rect',\n        container: trackerGroup,\n        attr: attr,\n        component: dataset\n      });\n      if (!trackerElementCheck) {\n        dataObj.graphics.trackerElement = trackerElement;\n        trackerElement.on('fc-mousedown', elemMouseDownFN)\n          .on('fc-mousemove', elemMouseMoveFN)\n          .on('fc-mouseup', elemMouseUPFN)\n          .data('viewMode', conf.viewMode)\n          .data(preDefStr.EVENTARGS, eventArgs)\n          .hover(elemHoverFN, elemOutFN);\n        config.allowDrag && trackerElement.drag(dragMove, dragStart, dragUp);\n      }\n      trackerElement.data('drag-options', {\n        index: i,\n        dataset: dataset\n      });\n    }\n  }\n\n  /**\n   * Callback function when the dragging of the label starts\n   */\n  _labelDragStart () {\n    var ele = this,\n      bBox = ele.getBBox(),\n      data = ele.data('drag-options'),\n      dataset = data.dataset,\n      manager = dataset.getLinkedParent(),\n      index = data.index,\n      labelObj = dataset.components.data[index],\n      labelElement = labelObj.graphics.element,\n      dragStart = labelObj.dragStart = labelObj.dragStart || (labelObj.dragStart = {});\n    data.ox = labelElement.attr('x');\n    data.oy = labelElement.attr('y');\n    data.bBox = bBox;\n    dragStart.xPos = labelObj.config.xPos;\n    dragStart.yPos = labelObj.config.yPos;\n    dragStart.bBox = bBox;\n    ele.data('fire_click_event', 1);\n    ele.data('fire_dragend', 0);\n    manager.clearLongPress();\n    manager.triggerLabelUI(ele, labelObj);\n  }\n\n  /**\n   * Callback function when the labels are dragged around\n   * @param {Event} event The actual mouse event\n   * @param {Object} positionData Contains the coordinates of the label elements while they are dragged\n   */\n  _labelDragMove (event, positionData) { // eslint-disable-line no-unused-vars\n    var ele = this,\n      data = ele.data('drag-options'),\n      index = data.index,\n      dataset = data.dataset,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      canvasLeft = chartConfig.canvasLeft,\n      canvasRight = chartConfig.canvasRight,\n      canvasBottom = chartConfig.canvasBottom,\n      canvasTop = chartConfig.canvasTop,\n      manager = dataset.getLinkedParent(),\n      labelObj = dataset.components.data[index],\n      labelElement = labelObj.graphics.element,\n      dragStart = labelObj.dragStart,\n      bBox = dragStart.bBox,\n      dx = positionData[0],\n      dy = positionData[1],\n      startX = dragStart.bBox.x + dx,\n      endX = dragStart.bBox.x2 + dx,\n      startY = dragStart.bBox.y + dy,\n      endY = dragStart.bBox.y2 + dy,\n      yAxis = dataset.getFromEnv('yAxis'),\n      xAxis = dataset.getFromEnv('xAxis'),\n      xPos,\n      yPos;\n    // Bound limits\n    if (startX < canvasLeft) {\n      dx += (canvasLeft - startX);\n    }\n    if (endX > canvasRight) {\n      dx -= (endX - canvasRight);\n    }\n    if (startY < canvasTop) {\n      dy += (canvasTop - startY);\n    }\n    if (endY > canvasBottom) {\n      dy -= (endY - canvasBottom);\n    }\n    dragStart.draged = true;\n    ele.attr({\n      x: bBox.x + dx,\n      y: bBox.y + dy\n    });\n    xPos = data.ox + dx;\n    yPos = data.oy + dy;\n    labelElement.attr({\n      x: data.ox + dx,\n      y: data.oy + dy\n    });\n    labelObj.config.x = xAxis.getValue(xPos);\n    labelObj.config.y = yAxis.getValue(yPos);\n    if (!ele.data('fire_dragend')) {\n    /**\n       *\n       * > Applicable to `dragnode` chart only.\n       *\n       * @event FusionCharts#labelDragStart\n       * @group chart-powercharts:dragnode\n       *\n       * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n       * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n       * @param {number} pageX - x-coordinate of the pointer relative to the page.\n       * @param {number} pageY - y-coordinate of the pointer relative to the page.\n       *\n       * @param {number} x - The x-value of the label node scaled as per the axis of the chart.\n       * @param {number} y - The y-value of the label node scaled as per the axis of the chart.\n       *\n       * @param {string} text - The text value of the label.\n       */\n      chart.plotEventHandler(ele, event, 'LabelDragStart');\n      ele.data('fire_dragend', 1);\n    }\n    if (ele.data('fire_click_event')) {\n      ele.data('fire_click_event', 0);\n      manager.clearLongPress();\n    }\n  }\n\n  /**\n   * Callback function when dragging is stopped over a label\n   * @param {Event} event The actual event object\n   */\n  _labelDragUp (event) {\n    var ele = this,\n      data = ele.data('drag-options'),\n      index = data.index,\n      dataset = data.dataset,\n      chart = dataset.getFromEnv('chart'),\n      xAxis = chart.getChildren('xAxis')[0],\n      yAxis = chart.getChildren('yAxis')[0],\n      manager = dataset.getLinkedParent(),\n      sourceEvent = LABELDRAGEND,\n      labelObj = dataset.components.data[index],\n      dragStart = labelObj.dragStart,\n      eventArgs = ele.data(EVENTARGS);\n\n    eventArgs.x = xAxis.getValue(ele.attr('x'));\n    eventArgs.y = yAxis.getValue(ele.attr('y'));\n\n    dragStart.draged = false;\n    if (ele.data('fire_dragend')) {\n    // eventCord = getMouseCoordinate(chart.linkedItems.container, event);\n    // eventCord.sourceEvent = sourceEvent;\n\n      // Fire the ChartUpdated event\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs), event);\n      chart.fireChartInstanceEvent('chartupdated', eventArgs, event);\n      /**\n       *\n       * > Applicable to `dragnode` chart only.\n       *\n       * @event FusionCharts#labelDragEnd\n       * @group chart-powercharts:dragnode\n       *\n       * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n       * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n       * @param {number} pageX - x-coordinate of the pointer relative to the page.\n       * @param {number} pageY - y-coordinate of the pointer relative to the page.\n       *\n       * @param {number} x - The x-value of the label node scaled as per the axis of the chart.\n       * @param {number} y - The y-value of the label node scaled as per the axis of the chart.\n       *\n       * @param {string} text - The text value of the label.\n       */\n      chart.plotEventHandler(ele, event, sourceEvent);\n    }\n    manager.clearLongPress();\n  }\n\n  /**\n   * Function to remove data during update if number of data has reduced than the previous render\n   * @param {number} index The data index from which data has to be removed.\n   * @param {number} stretch The index upto which data has to be removed\n   */\n  removeData (index, stretch) {\n    var dataset = this,\n      components = dataset.components,\n      dataStore = components.data;\n    components.removeDataArr = dataStore.splice(index, stretch);\n  }\n\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.config.JSONData) {\n      return;\n    }\n    let dataSet = this,\n      prevData = dataSet.config.JSONData,\n      prevDataLength = prevData && prevData.length,\n      currDataLength = (datasetJSON.label && datasetJSON.label.length) || 0,\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots/categories\n    // is more than the existing ones.\n    if (dataDiff > 0) {\n      dataSet.removeData(currDataLength, dataDiff);\n    }\n  }\n}\nexport default DragNodeLabels;\n"],"sourceRoot":""}