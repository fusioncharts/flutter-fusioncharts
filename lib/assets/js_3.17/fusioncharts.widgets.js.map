{"version":3,"sources":["webpack:///./packages/fusioncharts/widgets/index.js","webpack:///./packages/fusioncharts/viz/bulb.js","webpack:///./packages/fc-widgets/src/chart/bulb/index.js","webpack:///./packages/fc-widgets/src/chart/_internal/gaugewidget.js","webpack:///./packages/fc-widgets/src/chart/_internal/realtime.js","webpack:///./packages/fc-widgets/src/chart/_internal/datastreamer.js","webpack:///./packages/fc-widgets/src/dataset/bulb/index.js","webpack:///./packages/fc-widgets/src/dataset/bulb/index.animation.js","webpack:///./packages/fc-widgets/src/factories/vled-dataset.js","webpack:///./packages/fusioncharts/viz/cylinder.js","webpack:///./packages/fc-widgets/src/chart/cylinder/index.js","webpack:///./packages/fc-widgets/src/chart/_internal/lineargauge.js","webpack:///./packages/fc-widgets/src/chart/_internal/gauge.js","webpack:///./packages/fc-widgets/src/factories/gauge-axis.js","webpack:///./packages/fc-core/src/axis/gauge.js","webpack:///./packages/fc-core/src/axis/gauge-polar-numeric.js","webpack:///./packages/fc-core/src/axis/gauge.animation.js","webpack:///./packages/fc-widgets/src/dataset/cylinder/index.js","webpack:///./packages/fc-widgets/src/dataset/_internal/cylinderthermometerbase.js","webpack:///./packages/fc-widgets/src/dataset/cylinder/index.animation.js","webpack:///./packages/fusioncharts/viz/angulargauge.js","webpack:///./packages/fc-widgets/src/chart/angulargauge/index.js","webpack:///./packages/fc-widgets/src/chart/_internal/angular-hlinear-common.js","webpack:///./packages/fc-widgets/src/factories/polar-gauge-axis.js","webpack:///./packages/fc-core/src/axis/polar-numeric.js","webpack:///./packages/fc-core/src/axis/polar-numeric.animation.js","webpack:///./packages/fc-widgets/src/factories/angular-gauge-dataset.js","webpack:///./packages/fc-widgets/src/dataset/angulargauge/index.js","webpack:///./packages/fc-widgets/src/dataset/hlineargauge/index.js","webpack:///./packages/fc-widgets/src/dataset/hlineargauge/index.animation.js","webpack:///./packages/fc-widgets/src/dataset/angulargauge/index.animation.js","webpack:///./packages/fc-core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.triangle.js","webpack:///./packages/fusioncharts/viz/hled.js","webpack:///./packages/fc-widgets/src/chart/hled/index.js","webpack:///./packages/fc-widgets/src/chart/vled/index.js","webpack:///./packages/fc-widgets/src/chart/_internal/bullet-led-common.js","webpack:///./packages/fc-widgets/src/dataset/led/index.js","webpack:///./packages/fc-widgets/src/dataset/bullet/index.js","webpack:///./packages/fc-widgets/src/dataset/bullet/index.animation.js","webpack:///./packages/fc-widgets/src/dataset/led/index.animation.js","webpack:///./packages/fusioncharts/viz/vled.js","webpack:///./packages/fusioncharts/viz/hlineargauge.js","webpack:///./packages/fc-widgets/src/chart/hlineargauge/index.js","webpack:///./packages/fc-core/src/color-utils/color-gradient.js","webpack:///./packages/fusioncharts/viz/thermometer.js","webpack:///./packages/fc-widgets/src/chart/thermometer/index.js","webpack:///./packages/fc-widgets/src/dataset/thermometer/index.js","webpack:///./packages/fc-widgets/src/dataset/thermometer/index.animation.js","webpack:///./packages/fusioncharts/viz/sparkline.js","webpack:///./packages/fc-widgets/src/chart/sparkline/index.js","webpack:///./packages/fc-widgets/src/chart/_internal/sparkbase.js","webpack:///./packages/fc-widgets/src/dataset/sparkline/index.js","webpack:///./packages/fc-widgets/src/dataset/sparkline/index.animation.js","webpack:///./packages/fc-widgets/src/chart/sparkwinloss/index.js","webpack:///./packages/fc-widgets/src/dataset/sparkwinloss/index.js","webpack:///./packages/fc-widgets/src/dataset/sparkwinloss/index.animation.js","webpack:///./packages/fusioncharts/viz/sparkcolumn.js","webpack:///./packages/fc-widgets/src/chart/sparkcolumn/index.js","webpack:///./packages/fc-widgets/src/dataset/sparkcolumn/index.js","webpack:///./packages/fc-widgets/src/dataset/sparkcolumn/index.animation.js","webpack:///./packages/fusioncharts/viz/sparkwinloss.js","webpack:///./packages/fusioncharts/viz/realtimearea.js","webpack:///./packages/fc-widgets/src/chart/realtimearea/index.js","webpack:///./packages/fc-widgets/src/chart/realtimecolumn/index.js","webpack:///./packages/fc-widgets/src/dataset/realtimecolumn/index.js","webpack:///./packages/fc-widgets/src/dataset/realtimecolumn/index.animation.js","webpack:///./packages/fc-widgets/src/chart/realtimecolumn/index.animation.js","webpack:///./packages/fc-widgets/src/dataset/realtimearea/index.js","webpack:///./packages/fusioncharts/viz/realtimecolumn.js","webpack:///./packages/fusioncharts/viz/realtimeline.js","webpack:///./packages/fc-widgets/src/chart/realtimeline/index.js","webpack:///./packages/fc-widgets/src/dataset/realtimeline/index.js","webpack:///./packages/fusioncharts/viz/realtimestackedarea.js","webpack:///./packages/fc-widgets/src/chart/realtimestackedarea/index.js","webpack:///./packages/fusioncharts/viz/realtimestackedcolumn.js","webpack:///./packages/fc-widgets/src/chart/realtimestackedcolumn/index.js","webpack:///./packages/fusioncharts/viz/realtimelinedy.js","webpack:///./packages/fc-widgets/src/chart/realtimelinedy/index.js","webpack:///./packages/fusioncharts/viz/hbullet.js","webpack:///./packages/fc-widgets/src/chart/hbullet/index.js","webpack:///./packages/fusioncharts/viz/vbullet.js","webpack:///./packages/fc-widgets/src/chart/vbullet/index.js","webpack:///./packages/fusioncharts/viz/funnel.js","webpack:///./packages/fc-widgets/src/chart/funnel/index.js","webpack:///./packages/fc-widgets/src/chart/_internal/funnelpyramidbase.js","webpack:///./packages/fc-widgets/src/dataset/funnel/index.js","webpack:///./packages/fc-widgets/src/dataset/_internal/funnelpyramidbase.js","webpack:///./packages/fc-widgets/src/dataset/_internal/funnelpyramidbase.animation.js","webpack:///./packages/fc-widgets/src/dataset/_internal/data/funnel-point.js","webpack:///./packages/fc-widgets/src/dataset/_internal/data/funnelpyramidbase-point.js","webpack:///./packages/fusioncharts/viz/pyramid.js","webpack:///./packages/fc-widgets/src/chart/pyramid/index.js","webpack:///./packages/fc-widgets/src/dataset/pyramid/index.js","webpack:///./packages/fc-widgets/src/dataset/_internal/data/pyramid-point.js","webpack:///./packages/fusioncharts/viz/radialbar.js","webpack:///./packages/fc-widgets/src/chart/radialbar/index.js","webpack:///./packages/fc-widgets/src/dataset/radialtrack/index.js","webpack:///./packages/fc-widgets/src/dataset/radialbar/index.js"],"names":["name","type","requiresFusionCharts","extension","FusionCharts","addDep","DataStreamer","AngularGauge","Bulb","Cylinder","Hled","Vled","Hlineargauge","Thermometer","SparkLine","SparkColumn","SparkWinLoss","RealTimeArea","RealTimeColumn","RealTimeLine","RealTimeStackedArea","RealTimeStackedColumn","RealTimeLineDY","HorizontalBullet","VerticalBullet","Funnel","Pyramid","RadialBar","isRealTime","_drawCanvas","registerFactory","datasetFactory","getName","_clearChart","configureAttributes","dataObj","colorrange","this","getFromEnv","componentFactory","ColorGradient","colorRange","numberFormatter","addToEnv","getChildren","__setDefaultConfig","config","showRTvalue","canvasPadding","defaultSeriesType","defaultPlotShadow","drawAnnotations","charttopmargin","chartrightmargin","chartbottommargin","chartleftmargin","realtimeEnabled","friendlyName","defaultDatasetType","placevaluesinside","hasgaugeoriginx","UNDEF","gaugeoriginx","hasgaugeoriginy","gaugeoriginy","hasgaugeradius","gaugeradius","valuepadding","showgaugeborder","showhovereffect","autoscale","skipCanvasDrawing","_spaceManager","availableHeight","chartBorderHorizontal","chartBorderVertical","dataset","datasetConfig","is3D","chartAttrs","chart","showBorder","pluckNumber","showborder","minChartWidth","minChartHeight","chartBorderWidth","borderWidth","borderthickness","scaleFactor","_getScaleFactor","origW","origH","width","height","canvasWidth","canvasHeight","_allocateSpace","top","bottom","left","right","_manageActionBarSpace","_manageChartMenuBar","_manageSpace","allocatePosition","radius","chartConfig","conf","getDatasets","canvasTop","canvasLeft","gaugeOriginX","gaugeOriginY","gaugeRadius","hasGaugeOriginX","hasGaugeOriginY","hasGaugeRadius","Math","min","gaugeStartX","gaugeEndX","gaugeStartY","gaugeEndY","gaugeCenterX","gaugeCenterY","_getData","data","components","setValue","itemValue","_postSpaceManagement","allocateDimensionOfChartMenuBar","getDSdef","BulbDataset","_origW","_origH","GaugeWidget","defaultGaugePaletteOptions","extend2","DefaultGaugePaletteOptions","mathMax","max","defaultPaletteOptions","multiValueGauge","includeColorRangeInLimits","isWidget","_feedAxesRawData","stubFN","_setCategories","eiMethods","valuefontbold","useScaleRecursively","formatnumberscale","parseChartAttr","drawTrendRegion","realTimeUpdate","length","i","newDataset","newCategory","categories","category","realTimeConfig","fireChartInstanceEvent","fireEvent","cachedArrivedJSON","label","maxminFlag","_setData","value","stream","BLANKSTRING","toString","feedData","j","innerStore","xAxis","scale","store","maxLength","getLabel","_checkInvalidSpecificData","realTimeDraw","eventArgs","curDataset","drawLatency","inputData","pointerIdLen","datasets","iapi","prevData","iterateComponents","child","getType","push","showRTValue","pointerId","__rtDrawStartAt","Date","setAnimationState","Object","keys","dataById","idMap","hasOwnProperty","Number","id","ii","dataObject","len","newData","getValueArray","updateData","asyncDraw","rtManageSpace","_RTmanageSpace","prepareAttributes","_preDraw","_drawRealTimeValue","asyncRealTimeValueDraw","_eventArgs","__realtimeUpdateComplete","clear","latency","updateObject","legacyUpdateObj","addJob","priorityList","postRender","_setRTmenu","showRTmenuItem","useMessageLog","__setRTmenu","call","_createLayers","belowPlotGroup","axisBottomGroup","getChildContainer","insertBefore","_realTimeConfigure","_stopUpdate","source","_restartUpdate","_isUpdateActive","_linearDataParser","responseText","_source","CommonAPI","dropHash","regex","feedIndex","count","copyObject","d","assign","spaceLeft","spaceTaken","spaceRight","getDataset","component","updateStr","output","chartContainer","apiInstance","callback","arguments","apply","setData","stopUpdate","restartUpdate","isUpdateActive","clearChart","getData","getDataForId","_getDataForId","setDataForId","_setDataForId","getDataJSON","_getDataJSON","hamburger","stopState","list","show","handler","toggle","getChild","configure","action","appendInMenu","chartChildren","catLen","getTicksLen","visibleRange","getVisibleConfig","maxValue","minValue","stretch","categoryDelete","_sumValuesUpdated","removeData","resetCatPos","getId","_responseText","commands","command","params","valueVisibility","toolTexts","toolTextsTarget","colors","links","vlineLabels","vlineColors","vlineThickness","vlineDashed","showLabels","l","labels","vlines","values","target","dataStamp","pause","valuesLen","valuefontcolors","valuebgcolors","valuebordercolors","labelsLen","toolText","existingDatasets","existingDatasetsLen","dataObjValues","dataObjIds","dataObjTarget","dataObjShowValues","dataObjToolTexts","dataObjToolTextsTarget","dataObjColors","dataObjLinks","dataObjValueFontColors","valueFontColors","dataObjValueBgColors","valueBgColors","dataObjValueBorderColors","valueBorderColors","maxValueLen","updateObj","tempToolText","rtParserModify","replace","split","toLowerCase","match","substr","color","showlabel","vline","thickness","dashed","showvalue","tooltext","decodeURIComponent","tooltexttarget","link","valuefontcolor","valuebgcolor","valuebordercolor","dataStreamer","responseTextHandler","refreshVisualHandler","iapiConf","canvas","yAxis","sYAxis","dslen","newCatLength","isClear","dataLen","categoryInsert","categoryTranslate","addData","setMaxMin","getLinkedParent","childChanged","drawYAxis","drawSyAxis","xAxisSpaceAllocation","availableWidth","pYAxisStartXPos","sYAxisStartXPos","pYAxisOppLength","sYAxisOppLength","tempVar","yAxisDim","sYAxisDim","canvasConfig","canvasBorderWidth","canvasPaddingTop","canvasPaddingBottom","canvasPaddingLeft","canvasPaddingRight","prevXAxisSpaceAllocation","spaceTakenByYAxis","yAxisSpaceAllocation","prevSpaceTakenByYAxis","map","yAxisPrevDim","JSON","stringify","getAxisDimension","sYAxisPrevDim","shift","placeAxis","isOpposit","canvasRight","primaryAxisOnleft","setAxisDimention","x","y","opposite","axisLength","canvasBottom","setCanvasPadding","setDimension","currJSONDataset","cachedCategories","loadData","timers","setTimeout","clearTimeout","clearIntervalFlag","refreshInterval","realtimeValueFontColor","realtimeValueFontSize","jsonData","usemessagelog","messageGoesToLog","messagegoestolog","Array","isArray","showrealtimevalue","dataStreamURL","parseUnsafeString","datastreamurl","datastamp","clearInterval","clearchartinterval","realtimeValueSeparator","pluck","realtimevaluesep","COMMASPACE","refreshinterval","updateinterval","updateInterval","realtimeValuePadding","realtimevaluepadding","realtimeValueFont","realtimevaluefont","realtimeValueFontBold","realtimevaluefontbold","realtimevaluefontcolor","realtimevaluefontsize","realTimeValuePadding","fontWeight","numDisplaySets","numdisplaysets","refreshInstantly","refreshinstantly","showrtmenuitem","sync","HASHSTRING","onFcInstantiated","event","sender","ds","_this","_handlerFn","rtPreInit","_rtPaused","rtStateChanged","processRealtimeStateChange","_handlerStop","_dispose","resetTimeout","fn","ms","refreshMs","updateMs","chartObj","chartAttr","clearMs","addEvents","jsVars","_rtLastUpdatedData","updateIntervalHandler","initiateResetVisual","_rtAjaxLatencyStart","_rtAjaxLatency","ajaxObj","state","__state","dataUrl","dataSetDuringConstruction","dataReady","_rtAjaxObj","_rtDataUrl","Ajax","onSuccess","setState","url","networkLatency","_firstUpdate","onError","resp","wrapper","xmlHttpRequestObject","xmlhttp","error","httpStatus","status","isActive","kill","_toClearChart","resetVisual","_toRealtimeUpdate","skew","requestData","ajaxObject","indexOf","random","open","abort","get","info","_latency","_toRealtimeDraw","_clearCachedData","isAlive","now","getTime","getState","lastRTDrawAt","sourceInfo","_rtDraw","eventsAdded","addExtEventListener","ComponentInterface","addEventListener","BLANK","POSITION_TOP","preDefStr","POSITION_MIDDLE","showHoverEffectStr","visibleStr","ROUND","mathMin","win","window","userAgent","navigator","TRACKER_FILL","test","opera","createGroup","groupName","parentContainer","setAnimation","el","attr","container","bulbAnimation","smartDataLabel","dataStore","smartLabel","style","dataLabelStyle","lineHeight","parseInt","maxAllowedHeight","valuePadding","heightUsed","useEllipsesOnOverflow","useEllipsesWhenOverflow","setStyle","displayValue","showValue","getOriSize","datasetJSON","JSONData","enableAnimation","userConfig","parseConfiguration","origw","origRenderWidth","origh","origRenderHeight","setToolText","getValidValue","plottooltext","useColorNameAsValue","usecolornameasvalue","showTextOutline","textoutline","animation","defaultanimation","duration","animationduration","_setConfigure","formatedVal","setDisplayValue","colorRangeGetter","colorCodeObj","gaugeFillAlpha","colorName","gaugeBorderColorCode","gaugeBorderAlpha","hasGaugeBorderMix","fillColor","gaugeBorderColor","gaugeBorderThickness","gaugeFillHoverColor","gaugeFillHoverAlpha","showGaugeBorderOnHover","gaugeBorderHoverColor","gaugeBorderHoverAlpha","gaugeBorderHoverThickness","is3DOnHover","hasBorderHoverMix","hoverAttr","outAttr","setDataArr","setDataLen","colorM","showTooltip","showtooltip","showHoverEffect","tooltipsepchar","is3d","getPointColor","alpha","isBulb3D","FCcolor","cx","cy","r","getLightColor","COMMASTRING","getDarkColor","ratio","radialGradient","convertColor","getCleanValue","dataLabels","displayvalue","getColorObj","colorArr","defaultObj","gaugefillalpha","bordercolor","gaugebordercolor","code","borderalpha","gaugeborderalpha","parseColorMix","gaugeborderthickness","rawFillColor","gaugefillhovercolor","plotfillhovercolor","gaugefillhoveralpha","plotfillhoveralpha","is3donhover","showgaugeborderonhover","gaugeborderhovercolor","gaugeborderhoveralpha","gaugeborderhoverthickness","fill","toRaphaelColor","stroke","setTooltext","parseTooltext","formattedValue","rolloverProperties","enabled","hoverAnimAttr","index","draw","asynDraw","tooltipVal","dataLabelObj","xPos","yPos","bulb","bulbCheck","graphic","labelCheck","labelY","vAlign","trackerConfig","toolTipController","plotGroup","getContainer","trackerContainer","trackerLayer","animationManager","dataLabelContainer","dataLabelsLayer","addContainer","appendChild","graphics","element","animType","cursor","setLink","plotBorderThickness","visibility","getSmartText","text","direction","textDirection","backgroundColor","borderColor","borderThickness","borderPadding","borderRadius","borderDash","outlineText","showToolTip","enableToolTip","disableToolTip","hide","drawTracker","setElement","hotElement","hotElementCheck","elem","dataSet","plothovereffect","hotElemCreated","elemCreated","on","plotEventHandler","hover","elData","setRolloverAttr","draged","setRolloutAttr","rolloutResponseSetter","inputJSON","initialAttr","slot","opacity","finalAttr","DSClass","dataOnlyArr","COLOR_FFFFFF","FFFFFF","gaugeFillColorStr","gaugeBorderColorStr","defined","obj","gaugeFillColor","periodColor","glasscolor","isHorizontal","isAxisOpposite","scalePosition","canBeScalePosition","hasCanvas","drawPlotlines","drawPlotBands","isAxisReverse","alignCaptionWithCanvas","hasLegend","_parseSpecialConfig","chartOptions","use3DLighting","use3dlighting","thmoriginx","cyloriginx","thmoriginy","cyloriginy","thmbulbradius","cylradius","gaugeHeight","thmheight","cylheight","gaugeheight","xDefined","yDefined","rDefined","hDefined","gaugefillcolor","cylfillcolor","getColor","cylfillalpha","HUNDREDSTRING","gaugeYScale","cylyscale","gaugeyscale","showGaugeBorder","gaugeContainerColor","cylglasscolor","CylinderDataset","LinearGauge","axisFactory","captionStyle","subCaptionStyle","fontSize","computeFontSize","captionfontsize","fontSizeWithUnit","PXSTRING","setLineHeight","subcaptionfontsize","subTitleFontSizeExtender","spaceForActionBar","actionBarSpace","setAxisConfig","Gauge","MessageLogger","AlertManager","chartLeftMargin","chartRightMargin","chartTopMargin","chartBottomMargin","minCanvasWidth","scaleConf","showLimits","palleteString","chartPaletteStr","chart2D","ticksBelowGauge","ticksbelowgauge","ticksonright","scaleposition","reverseaxis","isScaleReverse","reversescale","showTickMarks","showtickmarks","showTickValues","showtickvalues","outCanfontSizeWithUnit","pluckFontSizeMaintainUnit","outcnvbasefontsize","basefontsize","isVertical","isReverse","outCanfontFamily","outcnvbasefont","basefont","outCanfontSize","outCancolor","outcnvbasefontcolor","basefontcolor","baseFontColor","useellipseswhenoverflow","divLineColor","vdivlinecolor","divLineAlpha","vdivlinealpha","divLineThickness","vdivlinethickness","divLineIsDashed","Boolean","vdivlinedashed","vdivlineisdashed","divLineDashLen","vdivlinedashlen","divLineDashGap","vdivlinedashgap","showAlternateGridColor","showalternatevgridcolor","alternateGridColor","alternatevgridcolor","alternateGridAlpha","alternatevgridalpha","numDivLines","numvdivlines","labelFont","labelfont","labelFontSize","labelfontsize","labelFontSizeWithUnit","labelFontColor","labelfontcolor","labelAlpha","labelalpha","labelFontBold","labelfontbold","labelFontItalic","labelfontitalic","axisName","xaxisname","axisMinValue","lowerlimit","axisMaxValue","upperlimit","setAdaptiveMin","setadaptivemin","adjustDiv","adjusttm","labelDisplay","labeldisplay","showlabels","rotateLabels","rotatelabels","slantLabel","slantlabels","slantlabel","labelStep","labelstep","xaxisvaluesstep","showAxisValues","showxaxisvalues","showxaxisvalue","showDivLineValues","showvdivlinevalues","showZeroPlane","showvzeroplane","zeroPlaneColor","vzeroplanecolor","zeroPlaneThickness","vzeroplanethickness","zeroPlaneAlpha","vzeroplanealpha","showZeroPlaneValue","showvzeroplanevalue","trendlineColor","trendlinecolor","trendlineToolText","trendlinetooltext","trendlineThickness","trendlinethickness","trendlineAlpha","trendlinealpha","showTrendlinesOnTop","showtrendlinesontop","showAxisLine","showxaxisline","showaxislines","drawAxisLines","axisLineThickness","xaxislinethickness","axislinethickness","axisLineAlpha","xaxislinealpha","axislinealpha","axisLineColor","xaxislinecolor","axislinecolor","majorTMNumber","majortmnumber","majorTMColor","majortmcolor","majorTMAlpha","majortmalpha","majorTMHeight","majortmheight","tickValueStep","tickvaluestep","connectTickMarks","connecttickmarks","majorTMThickness","majortmthickness","reverseScale","showlimits","minorTMNumber","minortmnumber","minorTMColor","minortmcolor","minorTMAlpha","minortmalpha","minorTMHeight","minortmheight","minortmwidth","minorTMThickness","minortmthickness","tickMarkDistance","tickmarkdistance","tickmarkgap","tickValueDistance","tickvaluedistance","displayvaluedistance","placeTicksInside","placeticksinside","placeValuesInside","upperLimitDisplay","upperlimitdisplay","lowerLimitDisplay","lowerlimitdisplay","drawTickMarkConnector","vtrendlines","trendpoints","_setAxisLimits","minMaxObj","getDataLimits","Infinity","forceMin","forceMax","setDataLimit","canvasConf","GaugeAxis","setLinkedItem","gaugeAnimation","LinearScale","labelMap","prevIntervalArr","prevTicksMap","getLabelPos","opt","axisConfig","axisPadding","labelPadding","posObj","getPixel","_drawComponents","drawTick","_drawTick","drawLabels","_drawLabel","present","path","lineElement","tickElement","minorTickObj","majorTickObj","connectorObj","statPix","endPixMajor","endPixMinor","tickMarkConnecterPath","tickValue","minorTickValue","diff","removingElement","ln","axis","axisRange","drawTickMinor","canvasDim","getLinkedItem","getEffectiveDimensions","ticks","ticksLen","axisAxisLineContainer","minorTickValues","minorTicks","getPath","startPix","endPix","pxVal","wrtVisible","lines","isDraw","getGraphicalElement","addGraphicalElement","slice","removeGraphicalElement","_maxLimit","ret","counter","leftLimit","avalW","avalH","numDimention","dimention","intervalWidth","tempText","maxNumericVal","minNumericVal","labelObj","numberFormatterFn","upperLimitDisplayDimention","maxLimit","getScale","labelStyle","increment","tickInterval","maxTextSize","maxTickLength","maxText","labelLineHeight","setRange","drawNumericVal","drawNormalVal","drawLimitVal","step","fontFamily","abs","toPrecision","props","oriText","labelMaxW","labelMaxH","parseFloat","unshift","axisContainer","axisLabelContainerTop","axisTrendLabelContainer","_computeTranslation","GaugePolarNumeric","prototype","_parseLabel","forceZeroTick","rawAttr","axisAttr","round","_createContainer","axisLineGroup","axisTrendGroupTop","axisLabelGroupTop","axisTrendGroupBottom","childContainers","axisBottom","axisTop","axisTopGroup","createContainer","axisTrendContainerTop","axisTrendContainerBottom","setVisibleConfig","domain","setDomain","getDomain","visibleMin","visibleMax","_adjustNumberFormatter","calculateTicksOnLabelMode","generateMinorTicks","_setAxisRange","Axis","getTrendLineLimits","appearingAxis","appearingFinal","A","math","isIE","Z","M","L","cylinderAnimation","gaugeDiameter","gaugeYfactor","measure","canvasLeftShift","dsConfig","chartWidth","chartHwight","getScaleFactor","_getLabelSpace","effectiveR","ypos","topColorStr","topStrokeStr","fluidHoverDarkColor","fluidHoverLightColor","fluidHoverEdgeColor","dataLabelTooltip","backColor","frontColor","fluidFill","labelAttr","fluidTop","fluid","cylinterTop","frontLight1","frontLight","front","back","btnBorderLight","btnBorder1","btnBorder","dataLabelContainerDummy","getLimit","gaugePos","h","fluidColor","fluidDarkColor","fluidLightColor","fluidEdgeColor","fluidAlpha","darkConColor","darkConColor1","lightConColor","r3dFactor","containerDummy","canvasHorizontalDiff","r2","r3","fluidStroke","y2","cylBase","y3","x1","x2","x3","x4","xBt1","xBt2","rBt1","rBt2","yBt1","yBt2","lightX","x5","x6","lightY","sqrt","y4","y5","y6","plotFillHoverAlpha","plotFillHoverColor","fluidAttr","btnBorderAttr","btnBorder1Attr","btnBorderLightAttr","backAttr","fluidTopAttr","frontAttr","frontLightAttr","frontLight1Attr","cylinterTopAttr","hotElementAttr","dataLabelContainerAttr","cylOriginX","cylOriginY","cylRadius","cylHeight","cylYScale","cylFillColor","cylGlassColor","angle","bodyOut","topOut","bodyHover","topHover","marginLeft","marginRight","marginBottom","CylinderThermometerBase","jsonChartObj","dataSetJson","showvalues","tooltipSepChar","pointerOnOpp","pointerontop","axisPosition","ticksbelowgraph","valueAbovePointer","valueabovepointer","thmfillcolor","thmfillalpha","rawGaugeBorderColor","thmglasscolor","cylfillhovercolor","thmfillhovercolor","cylfillhoveralpha","thmfillhoveralpha","prevMax","prevMin","drawManager","groupManager","setJSONIndex","getJSONIndex","fadeEffect","input","pathArr","FINALSTR","INITIALSTR","Angulargauge","deg2rad","PI","dialColor","dialBorderColor","pivotColor","pivotBorderColor","scaleFactory","animationeffect","deleteFromEnv","centerX","centerY","gaugeSpacingObj","innerRadiusFactor","pivotRadius","axisSpace","yPosExtra","yNegExtra","compositPivotRadius","displayValueLineHeight","displayValueCount","radiusDeduce","autoScale","gaugeinnerradius","pivotradius","rearExtension","rearextension","valueBelowPivot","gaugeOuterRadius","gaugeouterradius","gaugeInnerRadius","_angularGaugeSpaceManager","gaugeStartAngle","gaugeEndAngle","polarPadding","maxRadius","axisontop","axisonleft","ticksBelowGraph","trendValueDistance","trendvaluedistance","trendPoints","startAngle","endAngle","canvasW","canvasH","_centerX","_centerY","yPostionExtra","yNegativeExtra","calculatedRadus","leftX","topY","rightX","bottomY","startX","startY","endX","endY","tempRadius","resultantEnd","positiveLength","negativeLength","rediusDefined","centerXDefined","centerYDefined","PI2","PIby2","PI3by2","returnObj","pivotCalRequard","startAbs","cos","sin","dialIndex","_index","_helperFn","PolarGaugeAxis","POSITION_START","POSITION_BOTTOM","POSITION_END","pi2","TICK","polarNumericAnimation","prevTickMarks","prevIntervalArrLabel","prevIntervalArrTrendLine","rangeArr","totalAngle","axisDimention","drawTrendLines","_drawTrendLine","getAngle","getRangeValue","textWidthBuffer","labelStore","labelConf","tick","theta","parsing","axisAttrObj","getPos","axisScale","axisValueMaxH","axisValueMaxW","polarToCartesian","textElement","drawing","textElementCheck","css","fontStyle","tickMap","thetaMajor","thetaMinor","minorV","tickGroup","tempObj","majorTickCheck","prevTickMap","minorTickCheck","concat","trendElement","trendElemenCheck","trendLabelElementCheck","trendLabelElement","isTrendZone","trendPointObj","startValue","endValue","AttrList","limitingValue","limitingNegValue","trendOuterRadius","trendInnerRadius","startPoints","startPoints1","startX1","startY1","trendEndAngle","trendStartAngle","textValue","cosTh","sinTh","trendTextWidth","textRadius","align","trendTextHeight","stHeight","trendMarkerElement","trendMarkerCheck","idStart","removingElementLabel","removingElementMarker","trend","trendStyle","point","trendText","iLim","axisDrawingAttrObj","axisMarkerAttrObj","axisTextAttrObj","trendValues","startvalue","endvalue","markertooltext","showOnTop","showontop","dashStyle","getDashStyle","dashlen","dashgap","useMarker","usemarker","markerColor","markercolor","markerBorderColor","markerbordercolor","markerRadius","markerradius","markerToolText","getFirstValue","valueInside","valueinside","innerRadius","innerradius","ringpath","polypath","fadeInAtAxis","pointers","dials","dial","AngularGaugeDataset","R","getDep","mathAbs","mathATan2","atan2","mathPI","math2PI","hasTouch","document","documentElement","ontouchstart","isString","s","angularAnimation","pointerArrArg","trimData","pointerArr","pvColor","scaleOnResize","pointShowValue","valueY","dataLabelsStyle","fontBdrColor","pointer","scaleAngle","gaugescaleangle","gaugestartangle","gaugeendangle","startDefined","circleHandler","hasSVG","endDefined","basewidth","bgcolor","editmode","topwidth","valuex","valuey","baseradius","showPointerValue","gaugeScaleAngle","upperLimit","lowerLimit","scaleonresize","valuebelowpivot","showShadow","showshadow","gaugeFillMix","getFirstDefinedValue","colorrangefillmix","gaugefillmix","colorRangeFillMix","gaugeFillRatio","colorrangefillratio","gaugefillratio","colorRangeFillRatio","pivotfillcolor","pivotcolor","pivotbgcolor","pivotfillmix","pivotFillAlpha","parseAlphaList","pivotfillalpha","pivotFillRatio","parseRatioList","pivotfillratio","ZEROSTRING","pivotFillColor","join","pivotFillAngle","pivotfillangle","isRadialGradient","pivotfilltype","showPivotBorder","showpivotborder","pivotBorderThickness","pivotborderthickness","pivotbordercolor","pivotborderalpha","valueborderalpha","valuealpha","valuefont","inCanfontFamily","valuefontsize","inCanfontSize","inCanfontSizeWithUnit","inCancolor","valuefontalpha","valuefontitalic","border","valueborderthickness","valueborderpadding","valueborderradius","valuebgalpha","valueborderdashed","valueborderdashlen","valueborderdashgap","prevPointers","currPointers","_drawBackground","colorObj","currentEndAngle","nextAngle","crColor","crAlpha","crRatio","shadowAlpha","borderAlpha","fcColorObj","bandGroup","pointGroup","pivotElem","pivotElemDummy","bandElemDummy","bandElem","scaleRange","plotContainer","shadowContainer","getColorRangeArr","lastAngle","bandGroupDummy","pointGroupDummy","hideFn","showFn","transform","maxvalue","_startAngle","_endAngle","gradientUnits","shadow","oldColorArr","numbers","callBackFn","remove","pointersPath","pointersTpath","dataLabel","removeDataArr","splice","editMode","hoverFill","baseWidth","topWidth","baseRadius","baseWidthHF","topWidthHF","rotation","chartPosition","pathComand","hoverRadius","baseHoverWidth","baseHoverWidthHF","topHoverWidth","topHoverWidthHF","rearHoverExtension","clickHandler","pointConfig","formatedValue","dataLabelTooltext","bgColor","bgAlpha","dialFill","showDialHoverEffect","borderHoverColor","borderHoverAlpha","borderHoverThickness","bgHoverColor","bgHoverAlpha","valueX","displayValueArgs","lastY","labelX","hoverRollOver","hoverRollOut","pointersTpathString","pointersPathString","dataGraphics","freshDraw","renderer","NumberFormatter","shouldShowShadow","pGroup","dataLabelsGroup","valueRange","angleRange","angleValueFactor","isBelow","labelCounter","stubEvent","pageX","pageY","attrFN","_hash","val","key","red","attr3D","_Attr","vml","hash","_attr","tooltipPos","toolTipRadius","prevValue","animate","getClickArcTangent","xCoord","yCoord","center","ref","dialDragStart","e","pos","getPosition","rotationStartAngle","dragStartY","dialDragEnd","pt","updatedValStr","FC_ChartUpdated","err","dialDragHandler","newAngle","angleDelta","angleDelta2","newVal","newVal2","tempValues","touchEvent","sourceEvent","touches","getTouchEvent","scaleRang","fromDrag","transposeAnimDuration","initAnimDuration","dragStartX","dt","dialborderhovercolor","dialborderhoveralpha","dialborderhoverthickness","dialbghovercolor","dialbghoveralpha","dat","transStr","rolloverProps","hovertext","bgalpha","borderhovercolor","borderhoveralpha","borderhoverthickness","bghovercolor","bghoveralpha","hasHoverSizeChange","trianglepath","title","originalText","_updateObj","dataArr","updateById","updateObjLength","updateDataMap","lastUpdatedObj","HlineargaugeDataset","configStr","animationObjStr","textHAlign","middle","start","end","hlineargaugeAnimation","marker","orient","getRectXY","xyObj","trendPointConfig","trendZoneElem","trendZoneElems","trendObjElem","trendObjElems","trendObj","colorRangeElem","rangeWidth","envComponents","canvasGroup","isScaleReversed","trendArray","colorrangebordercolor","colorrangeborderalpha","colorrangeborderthickness","colorArray","colorGrp","outerRect","pointOrientation","trendZoneElemsCount","trendObjElemsCount","markerCount","minvalue","getColorCodeString","sides","pointerBorderColor","pointerBorderHoverAlpha","pointerBgHoverAlpha","pointerBgHoverColor","pointerBorderHoverColor","pointerBorderHoverThickness","pointerHoverRadius","showBorderOnHover","showHoverAnimation","outAnimAttr","pointerSides","chartShowHoverEffect","pointerBorderThickness","baseStyle","valueInsideGauge","showPointerShadow","showpointershadow","hasrtltext","showGaugeLabels","showgaugelabels","colorRangeStyle","inCanLineHeight","pointersides","pointerborderthickness","showplotborder","_configureDataLabelStyle","isLabelString","pointerradius","isTooltextString","pointerbgalpha","pointerbgcolor","pointercolor","pointerborderalpha","pointerbordercolor","dataLink","pointerbghovercolor","pointerbghoveralpha","showborderonhover","pointerborderhoverthickness","pointerborderhovercolor","pointerborderhoveralpha","hoverradius","pointerhoverradius","showhoveranimation","extraSpace","valuePaddingWithRadius","trendPaddingWithRadius","datasetValuePadding","heightUsedBottom","heightUsedTop","trendPadding","heightReducedBottom","heightReducedTop","tickDimension","_configueTrendPoints","POSITION_CENTER","currentValuePadding","currentTrendPadding","isRTupdate","shadowObj","wGroup","chartData","pointerY","pxValueFactor","pointerDragStart","pointerDragEnd","pointerOnDrag","scaleMinMax","scaleMin","scaleMax","pointVal","drag","graphicData","dataParam","undrag","drawPointerValues","_drawWidgetLabel","callbackFN","pointerValue","pointerValueCont","colorArrLabel","maxWidth","truncatedWidth","getPointerLabelXY","getColorLabelXY","labelXY","nextPointer","nextOriText","nextSmartText","nextXY","labelGap","smartText","minWidth","tempx","valueCont","trendTextElem","trendArr","isSameLevel","fontHeight","oppTrendLabelPadding","trendLabelPadding","NORMAL","isInside","pointerOnOpposite","xsHeight","xsWidth","setWidth","textColor","pointerLabelStyle","halfWidth","textCreated","pool","pointerMinVal","pointerMaxVal","maxColorRangeVal","minColorRangeVal","updateObjParam","updateAnimation","showLabel","valueFontColor","valueBgColor","valueBorderColor","pointObj","hasNewData","configureDataLabelStyle","polypathArr","mathPow","pow","mathTan","tan","mathAcos","acos","mathSqrt","Q","p2pdistance","_cacher","y1","pointAtLength","vx","vy","define","paper","args","group","_lastArgIfGroup","face","points","_args","enclosedAngles","edges","_sides","semiperimeter","ca","r1","curveDistance","curvePoints","inradius","angles","LedDataset","COLOR_000000","c000000","mathRound","ledAnimation","useSameFillColor","useSameFillBgColor","ledGap","ledSize","sizeGapSum","remaningLength","valueDistance","halfBorderWidth","noOfLED","LEDGapStartX","LEDGapStartY","pathCommand","useSameFillColorCode","lastColor","colorIndex","dummyElement","perLEDValueLength","lastX","colorLED","colorLedLengthPX","colorLEDLength","colorRangeElements","ele","canvasBorderElement","colorRangeElems","canvasElementPath","canvasHotElement","LEDDrawn","isNewElement","ledbgcolor","usesamefillcolor","usesamefillbgcolor","ledgap","ledsize","colorRangeBorderThickness","clickurl","getPlotColor","toBack","drawShade","labelBBox","labelWidth","lightedLed","lightedLedLength","caption","subCaption","captionHeight","captionPadding","subCaptionHeight","isaxisreverse","ceil","toolTipValue","_graphics","isOnTop","getBBox","BulletDataset","Raphael","miterStr","colorStrings","DECIDE_CRISPENING","PLOTFILLCOLOR_STR","HTP","TOUCH_THRESHOLD_PIXELS","CLICK_THRESHOLD_PIXELS","bulletAnimation","plotDashLen","plotDashGap","isRoundEdges","plotFillAlpha","stack100Percent","targetalpha","plotAsDot","targetCapStyle","plotColor","plotBorderDash","plotborderdashed","isBar","isStacked","visible","targetcapstyle","initAnimation","plotborderdashlen","plotborderdashgap","plotfillAngle","plotfillangle","plotfillalpha","plotfillcolor","useroundedges","plotRadius","useRoundEdges","plotFillRatio","plotfillratio","plotgradientcolor","getDefinedColor","showPlotBorderOnHover","showplotborderonhover","plotBorderAlpha","plotborderalpha","plotBorderColor","plotbordercolor","plotborderthickness","plotBorderDashStyle","stack100percent","definedGroupPadding","plotspacepercent","plotSpacePercent","maxColWidth","maxbarheight","maxcolwidth","showPercentValues","showpercentvalues","showPercentInToolTip","showpercentintooltip","plotPaddingPercent","plotpaddingpercent","rotateValues","rotatevalues","plotasdot","plotFillPercent","plotfillpercent","targetFillPercent","targetfillpercent","targetThickness","targetthickness","rawTargetColor","targetcolor","targetColor","parserConfig","seriesname","macroIndices","tempPlotfillAngle","hoverColor","hoverAlpha","hoverRatio","hoverAngle","hoverBorderColor","hoverBorderAlpha","hoverBorderThickness","hoverBorderDashed","hoverBorderDashGap","hoverBorderDashLen","hoverDashStyle","hoverColorArr","setDataDashed","setDataPlotDashLen","setDataPlotDashGap","targetHoverThickness","targetHoverColor","targetHoverAlpha","hasTargetHoverMix","setTooltextTarget","seriesNameInTooltip","seriesnameintooltip","plotFillAngle","initailPlotBorderDashStyle","getTooltext","targetValue","targetDataValue","toolTipValueTarget","showValues","getColumnColor","hovercolor","columnhovercolor","hoveralpha","columnhoveralpha","hovergradientcolor","plothovergradientcolor","hoverratio","plothoverratio","hoverangle","plothoverangle","plotborderhovercolor","plotborderhoveralpha","plotborderhoverthickness","borderhoverdashed","plotborderhoverdashed","borderhoverdashgap","plotborderhoverdashgap","borderhoverdashlen","plotborderhoverdashlen","setPlotRolloutAttr","setPlotRolloverAttr","targethovercolor","targethoveralpha","targethoverthickness","tagetHoverAttr","targetOutAttr","targettooltext","toolTextTarget","_manageSpaceHorizontal","maxAllowedWidth","widthUsed","showcolorrangeborder","doNotRemove","drawPlot","eventArguments","crispBox","columnWidth","targetContainer","shadowTargetContainer","targetPath","targetLength","initialColumnWidth","isNewTargetElem","base","targetAttr","targetElement","targetContainerDummy","shadowContainerDummy","shadowTargetContainerDummy","isNegative","clickFunc","rolloverResponseSetter","crispBound","_xPos","_yPos","_height","_width","plotFillColor","showPlotBorder","groupId","yMax","yMin","yBase","yBasePos","MIDDLESTR","parent","scaleConfig","stableSort","a","b","sortColorFN","getComparatorFN","options","colorObjNext","temp","newColorRange","newMin","nextIndex","cm","colorManager","defuPaletteOptions","defaultAsigned","sort","nextColorObj","returnedObj","nextObj","isOnMeetPoint","prevObj","_minValue","_maxValue","minColorObj","lastMaxValue","maxColorObj","lastColorObj","returnArr","thmOriginX","thmOriginY","thmBulbRadius","thmHeight","ThermometerDataset","thermometerAnimation","thmhalfWidth","thmWidth","bulbHeight","chartHeight","origWParam","origHParam","topLightGlow","topLight","bulbBorderLight","bulbTopLight","bulbCenterLight","cylLeftLight","cylRightLight","cylLeftLight1","cylRightLight1","thPath","bulbPathType1","canvasBorderElementAttr","topLightAttr","topLightGlowAttr","bulbBorderLightAttr","bulbTopLightAttr","bulbCenterLightAttr","cylLeftLightAttr","cylRightLightAttr","cylLeftLight1Attr","cylRightLight1Attr","cylinderWidthHalf","scaleY","topRoundR","lCylWidthHalf","topRoundRDistance","lR","lx1","lx2","l1x","l2x","ly","thmBaseY","fluidDummy","topLightGlowDummy","topLightDummy","labelDummy","canvasBorderElementDummy","bulbBorderLightDummy","bulbTopLightDummy","bulbCenterLightDummy","trackerContainerDummy","cylLeftLightDummy","cylRightLightDummy","cylLeftLight1Dummy","cylRightLight1Dummy","hotElementDummy","conColor","out","thmFillColor","thmGlassColor","textAppearing","pathAppearing","labelGroupAppearing","Sparkline","_parseCanvasCosmetics","_placeOpenCloseValues","axisPaddingLeft","axisPaddingRight","singleseries","anchorsides","anchorstartangle","enablemousetracking","SparkLineDataset","SparkChartBase","mathCeil","canvasborderthickness","subTitleFontWeight","paletteColors","bgAngle","bgRatio","canvasBgColor","canvasBgAngle","canvasBgAlpha","canvasBgRatio","canvasBorderColor","toolTipBgColor","toolTipBorderColor","trendColor","winColor","lossColor","drawColor","scorelessColor","_fetchCaptionPos","isOnLeft","origCanvasLeftMargin","canvasleftmargin","origCanvasRightMargin","canvasrightmargin","origCanvasTopMargin","canvastopmargin","origCanvasBottomMargin","canvasbottommargin","currentCanvasHeight","currentCanvasWidth","sum","canvasBaseDepth","canvasMarginTop","canvasMarginBottom","canvasMarginLeft","canvasMarginRight","minCanvasHeight","heightAdjust","widthAdjust","_getDSspace","origMarginLeft","origMarginRight","_manageCaptionSpacing","maxCaptionWidth","captionObj","subCaptionObj","capStyle","subCapStyle","captionConfig","subCaptionConfig","captionComponents","SmartLabel","titleText","subTitleText","subcaption","captionpadding","chartMenuBar","chartMenuLogicalSpace","getLogicalSpace","captionLineHeight","subCaptionLineHeight","canvasBorderThickness","allowedWidth","dimensions","captionSubCaptionGap","_manageCaptionPosition","captionPosition","openValueWidth","sparkValues","_offsetHeight","marginTop","xAxisConf","yAxisConf","periodLength","periodlength","band","periodcolor","periodalpha","categoryDivLinesFromZero","SSCartesian","drawSparkValues","closeValue","openValue","startBraces","highValue","separator","lowValue","endBraces","chartConf","closeValueCheck","openValueCheck","startBracesCheck","highValueCheck","separatorCheck","lowValueCheck","endBracesCheck","START_BRACES","END_BRACES","SEPARATER","textAttr","smartObj","highLowValue","labelDrawn","sparklineAnimation","parseAttributes","linethickness","hasValidValue","pointAnchorAlpha","highDisplayValue","lowDisplayValue","openDisplayValue","closeDisplayValue","openColor","parseColor","opencolor","closeColor","closecolor","highColor","highcolor","lowColor","lowcolor","anchorColor","anchorcolor","showOpenAnchor","showopenanchor","drawanchors","showanchors","showCloseAnchor","showcloseanchor","showHighAnchor","showhighanchor","showLowAnchor","showlowanchor","anchorAlpha","anchoralpha","defAnchorAlpha","lineColor","linecolor","anchorProps","anchorbgcolor","hoverEffects","openhovercolor","anchorhovercolor","anchorBgAlpha","openhoveralpha","anchorhoveralpha","closehovercolor","closehoveralpha","anchorbgalpha","lowhoveralpha","anchorradius","anchorBorderThickness","anchorRadius","anchorhoverradius","lowhovercolor","highhovercolor","highhoveralpha","_x","_y","showopenvalue","showclosevalue","showhighlowvalue","configuration","openDataValue","closeDataValue","highDataValue","lowDataValue","finalTooltext","_drawSparkValues","LineDataset","lineAnimation","closeValueWidth","showCanvasBorder","canvasBorderRadius","canvasbordercolor","canBGColor","shadowOnCanvasFill","origCanvasTopPad","canvastoppadding","origCanvasBottomPad","canvasbottompadding","origCanvasLeftPad","canvasleftpadding","origCanvasRightPad","canvasrightpadding","yRangeMin","yRangeMax","SparkWinLossDataset","sparkwinlossAnimation","drawLabel","newIndex","hoverGradientColor","tempIndex","positionIndex","wincolor","losscolor","drawcolor","scorelesscolor","winHoverColor","winhovercolor","lossHoverColor","losshovercolor","drawHoverColor","drawhovercolor","scoreLessHoverColor","scorelesshovercolor","numWon","numLost","numDraw","isroundedges","usePattern","scoreless","originalPlotColor","hashify","ColumnDataset","columnAnimation","Sparkcolumn","SparkColumnDataset","canBGAlpha","oriCanvasBorderThickness","chart3D","hideAxisLine","showyaxisline","plotborderradius","showcanvasborder","canvasborderalpha","canvasbgalpha","canvasbgcolor","canvasbgangle","canvasbgratio","canvaspadding","sparkcolumnAnimation","rawHoverColor","highBorderColor","lowBorderColor","cLen","cInd","highbordercolor","lowbordercolor","Sparkwinloss","Realtimearea","_setDefaultConfig","RealtimeAreaDataset","getDSGroupdef","RealtimeColumn","realtimeColumnChartAnimation","transposeAxis","_drawRTValue","tempCategories","tempArr","filter","setTickValues","_realTimeValuePositioning","space","padding","TESTSTR","realTimeValueGraphics","datasetStore","dataDisplayValue","realTimeValueGraphicsCheck","chartChildContainer","parentLayer","parentGroup","realTimeValueGroup","removeJob","substring","addChildContainer","datalabelsGroup","_hideRealTimeValue","datasetsJSON","_checkInvalidData","ColumnMultiseriesGroup","RealtimeColumnDataset","MSCartesian","realtimeColumnAnimation","force","AreaDataset","Realtimecolumn","Realtimeline","zeroplanethickness","zeroplanealpha","showzeroplaneontop","RealtimeLineDataset","Realtimestackedarea","isstacked","showSum","showsum","valueposition","StackManager","RealtimeArea","Realtimestackedcolumn","Realtimelinedy","RealtimeLineDy","isDual","getSpecificxAxisConf","getSpecificyAxisConf","axesFactory","isdual","syncaxislimits","getDSType","Hbullet","gaugeType","defaultCaptionPadding","rendererId","ticksOnRight","tickColor","currentLabelSpace","oriCanvasWidth","labelSpace","captionSpace","setadaptivexmin","Vbullet","useSortedData","dataSource","streamLinedData","streamlineddata","PLOT_COLOR_INDEX_START","alignLegendWithCanvas","FunnelDataset","FunnelPyramidBase","sliceOnLegendClick","tooltippadding","isDataLabelBold","dontShowLegendByDefault","legendItemFactory","isSingleSeries","decimals","showLegend","showlegend","is2d","zeroSum","nullSum","isNaN","_manageLegendSpace","CommonSpaceManager","pointInContext","FunnelPoint","LABEL_PLACEMENT_ITERATOR_INDEX_START","dsItem","sortObjArrByKey","utils","_checkValidData","_configure","pseudoPoint","addLegend","configureSpecifics","datasetConf","copyProperties","ys","yScale","isHollow","prePointProcessingHookFn","pointsArr","smartTextObj","origHeight","chartWorkingWidth","nonStreamLinedData","totalValue","offsetVal","datasetCalculations","res","isStreamLinedData","percentOfPrevious","highestValue","NEGATIVE_INFINITY","refreshedData","sumValue","countPoint","cleanValue","hasValidPoint","prevPerValReq","calculatePositionOfPlots","plotObj","unitHeight","heightAllotted","widthAllotted","drawingRadius","mvMockNonStreamLine","alignmentType","uh","distributionKey","distributedResult","dMatrix","adMatrix","curr","fKey","distributionMatrix","getSumValueOfObjArrByKey","DistributionMatrix","calculatePositionCoordinate","psmMargin","section","dataStoreLength","getDataLength","maxDataValue","minDataValue","currentSliceHeight","blockLenFromOffset","mFloorFn","floor","postPlotCallback","effCanvasHeight","effCanvasWidth","lastRadius","globalMinXShift","alternate","forcePush","getDistributedResult","matrix","forceMatrix","suggestion","labelAlignment","slicingDistance","noOfGap","halfDistance","postPlotCallbackInitiated","trackerArgs","dlGroup","mMinFn","labelDrawingConfig","animateFunction","shapeArgs","perGapDistance","distanceAvailed","alreadyPlotted","syncDraw","oldLastData","connectorEndSwitchHistoryY","drawAllLabels","bind","drawAllTrackers","tracker","removePlots","prevIs2d","getTooltipMacroStub","baseStub","percentOfPrevValue","pValue","percentValue","dataValue","FunnelPyramidBaseDataset","PATTERN_TYPES","EMPTY_OBJ","HEXCODE","hexcode","isObject","unformattedSum","startsRGBA","Color","result","inp","rgba","exec","format","brighten","setOpacity","funnelPyramidBaseAnimation","attrList","getArcPath","getFunnel3DShapeArgs","getPyramid3DShapeArgs","_contextParam","_context","ArrayableObj","_map","_eLength","set","getAll","mergeWith","anotherArray","sArr","itemIndex","item","newArr","getEffectiveLength","distributionLength","distributedMatrix","altDistributedMatrix","nonDistributedMatrix","forcePushObj","flags","exhaustion","constructor","rangeBottom","distribute","legendSkip","distributionItems","currentMatrix","distributionIndexAlt","distributionIndex","currentItem","alternateSwitch","alternateDistributedMatrix","orphanMatrix","altOrphanMatrix","absIndex","dataLength","dontPlot","distributionFactor","legend","isLegendRight","blankSpace","setContext","context","invokeHookFns","ctx","fromObject","toObject","mappingArray","confArr","fromName","toName","convertFunction","defaultValue","additionalFn","nKey","DEFAULT_FN","objArr","valueKey","obj1","obj2","total","plotArr","currentDsLengthParam","plot","callbackFn","currentDsLength","funnel2D","lighterHalf","darkerHalf","borderElement","centerLight","centerLight1","toptop","topLight1","trackerObj","pyramidFunnelShape","R1","R2","strokeColor","strokeAlpha","rX","rY","isClockWise","isLargeArc","shapearge","R3","R4","objPoints","a1","b1","h1","a2","b2","h2","c","m1","m2","p1","p2","beta","gamma","k","c1","c2","topLeft","bottomLeft","topRight","bottomRight","calcPoints","X1","X2","X3","X4","arc1","arc2","arc3","arc4","silhuette","xParam","yParam","R1Param","R2Param","hParam","r3dFactorParam","is2DParam","rendererParam","isFunnelParam","isHollowParam","is2D","isFunnel","lightLength","lightLengthH","lightLengthH1","lightWidth","hashParam","colorObject","lightColor","lightColor1","darkColor","colorDark","colorLight","lightAlphaSTR","lightShade","lightShadeStop","shapeChanged","colorChanged","_3dAttr","linearGradient","stops","shadowElement","gStrParam","use3DLightingParam","Shapeargs","Shapeargs2","rect3D","squeezedFormPathObj","squeezedShapeArgs","existingGElement","animOrDraw","graphicsGroup","gStr","newAttrs","shapeGElem","shapeName","oldAttrs","shapes","normalizeShapes","toFront","parentElem","elemType","nonAnimAttr","prevEle","animatePathIfPresent","legendItemIds","postInitHook","indexArg","stretchArg","removedDataArr","globalStyle","jsonDataObj","datasetDataArr","configureSpecificsFn","animationDuration","patternType","includes","patterntype","patternDensity","patterndensity","patternAlpha","patternalpha","patternBgColor","patternbgcolor","showplotorder","connectorColor","rawSmartLineColorCode","connectorAlpha","origLabelDistance","labelDistance","nLineHeight","baseFontSize","isSliced","clicked","datalabelDisabled","getNormalizeDataSet","_preDrawingHook","slicingHeight","setChartMessage","tempId","legendItemIndex","legendItem","categoryLabel","legendItemId","getItem","disposeItem","includeinlegend","legendIconAlpha","legendiconalpha","patternAttr","createItem","itemClickFn","setStateCosmetics","symbol","legendiconbgalpha","legendiconborderalpha","legendColor","rawColor","legendInteractivity","plotItems","legendId","legendClick","plotItem","refreshedDataLength","defStyle","notStreamlinedFunnel","dsStore","Point","dataConnectorStyle","colorIndexStart","noOFSlicedElement","baseFont","connectorWidth","_chartLevelAttr","parsexAxisStyles","parseAndConfigurePoint","pointHoverOptions","pointCosmetics","highlightColors","colorLen","hoverEffect","highlight","highlightonhover","rawBorderColor","rolloverOptions","preDrawingSpaceManagement","canvasMaxWidth","showLabelsAtCenter","minWidthForChart","drawingWillExtend","maxWidthForLabel","labelMaxUsedWidth","valueRadiusIncrementRatio","chartDrawingWidth","currentValue","ratioK","currentDiameter","labelMaxWidth","lowestRadiusFactor","tempSnap","labelOverlappingW","snapOffset","capHeight","subCapHeight","chartWorkingHeight","upperRadiusFactor","newDiameter","legendPos","legendWidth","oriCanvasLeft","oriBottomSpace","oriTopSpace","_tempSnap","top3DSpace","bottom3DSpace","topLabelSpace","rightLabelSpace","configureItems","origValue","getModifiedCurrentValue","getRatioK","getLowestRadiusFactor","plotX","plotY","canvasCenterX","plotSemiWidth","animateElements","elements","subElem","subElemKeys","conditions","_t","ialpha","post","labelDrawingConfigArr","groupLabelCssProps","groupLabelCss","placeOtherSide","sliceHeight","labelMeasurement","newRadius","negativeSpanningDataEnd","normalizedLabel","extraConnectorSpace","yShift","totalHeight","lastIndex","alignmentSwitchToggle","distributionOffset","widthHeightRatio","streamlinedData","trimmedInfo","flag","sLabel","setAll","largestLabel","calcFn","predicate","_calcFn","_predicate","existingLabelSpan","currentLabelSpan","leftTrimmedInfo","rightTrimmedInfo","lLargestLabel","rLargestLabel","slicingGapPosition","_point","_sLabel","oriTextWidth","useSameSlantAngle","POSITIVE_INFINITY","labelAline","minplotheightforvalue","alignmentSwitch","isLabelTruncated","virtualWidth","pWidth","findBestPosition","trimmedLength","leftXSpace","rightXSpace","newLabel","overflow","lTrimmedInfo","rTrimmedInfo","unfoldWidth","allowedLeftX","allowedRightX","lOverflow","getPlotData","plotData","prop","userData","transformObj","itemClicked","clickedItemId","dyPrev","dyNext","dyNew","slicingEnd","dataItem","graphicalElement","sliced","seriesOptionsHalf","noOFPrevPoint","reflowData","sliceLock","slicedState","dy","connector","getEventArgs","datasetIndex","plotMouseUp","funnelPoint","fadeIn","effect","nonStreamlinedData","drawPlots","translateXY","pointFill","textDrawingArgs","chartSliced","labelAlign","appliedStyle","parentCSS","trackerGroup","hoverHandler","setRolloverProperties","sliceContext","rawAlpha","addPattern","off","doNotSlice","actions","click","_startTranslateY","FunnelPyramidBasePoint","removeCSSProps","extractTextStyle","keyMap","evt","patternAngle","patternSize","pointSliced","labelText","displayValueText","ttValue","filteredDataObj","plotAlpha","tooltipOptions","colorApplied","labellink","legendIconBgAlpha","labelSepChar","pointShadow","plotBorderWidth","patternangle","patternsize","issliced","preSliced","legendCosmetics","showInLegend","enableSlicing","connectorAttr","drawConnector","connectorStartY","connectorEndY","lastConnectorEndY","connectorEndX","connectorStartX","connectorPath","yD","_dataLabel","isNewDataLabel","yDisplacement","rolloverAttr","canLabelBeShown","removeCSS","labelClickFn","actionsClick","dataIndex","lastplotY","trackerLabel","pattern","patternColor","isTracker","removingDraw","__remove","childrenSyncDraw","instant","PyramidDataset","preDrawingHook","PyramidPoint","inclination","atan","totalValues","tempConfig","radialBarFactoryFn","bars","RadialBarPlot","lenBars","children","startangle","endangle","barstartradius","barendradius","barborder","barbordercolor","barborderalpha","barborderthickness","plots","baralpha","legenditemalpha","legenditemcolor","legenditembordercolor","iconurl","contexttext","contextlabeltext","plotHidden","initiallyhidden","plotIndex","childInstance","attachChild","radialTrackFactoryFn","tracks","RadialTrack","lenTracks","trackpadding","trackmargin","trackstartradius","trackendradius","trackfillcolor","trackalpha","trackborder","trackbordercolor","trackborderalpha","trackborderthickness","numTicks","numticks","tickMarkLength","tickmarklength","tickvaluefontsizeWithUnit","showticks","tickmarkcolor","tickmarkthickness","tickalpha","tickvaluealpha","tickvaluelabelfont","tickvaluefontcolor","tickvaluegap","deregisterFactory","outerradius","tickvaluefontsize","showcontextlabel","defaultcontextlabel","contextlabelfont","contextlabelfontsize","contextlabelfontcolor","contextlabelalpha","usedataplotcolorforlabels","labeltext","labelposition","labelpadding","showlabelicon","iconscale","iconposition","interactivelegend","inCanvasStyle","paddingStr","labelPaddingArr","palettecolors","paletteColorsArray","trim","contextlabelfontsizewithunit","every","icon","rings","createBaseComponent","track","hasState","removeLegendState","realBarAlpha","realBarBorderAlpha","iconImage","plotIdentifier","labelDiv","removeChild","setLegendState","side","chartMaxDiameter","trackthickness","barthickness","box","convertToPixels","forEach","setNodePath","isLast","postSpaceManager","ticksContainer","currentPlot","_mouseOverHandler","_mouseOutHandler","drawContextLabel","labelTextObj","iconSize","labelGraphicsAttr","plotIdSvgString","changeAngleBase","startingAngle","endingAngle","plotIdentifierShow","showIcon","iconRotation","iconCoords","iconTransform","getParsedText","normaliseAngle","paddingAngle","pointOnCircleFromCenter","outerRadius","isParent","createElement","innerHTML","plotIdentifierCoords","plotIdentifierRotation","pathElement","firstChild","firstElementChild","pathAttributes","attributes","plotIdentifierAttr","legendItemSymbol","iconAngle","symbolBBox","node","svgScale","tagName","nodeValue","realColor","trackArc","findArc","trackLength","path_d","labelPath","numberOfChars","getNumberOfChars","getRotationOfChar","iconAttr","labelTextAttr","distance","addPlotIdentifier","labelCoords","addLabel","addIcon","htmlObj","containerDivStyle","spanStyle","innerDiameter","contextLabelDivSide","contextlabelObject","div","span","setAttribute","position","display","querySelector","setTextPath","arc","trackClockwise","AnimationManager","_setAnimDuration","addPaperToEnv","setHTMLClassName","manageSpace","radialBar","startRadius","endRadius","numTicksBaseNumber","plotIdentifierAngle","arcLength","radiansInAngle","setPath","checkInvalidData","checkInvalidSpecificData","drawTicks","finalAngle","labelstart","tickValueRadius","percentDiff","labelStartArr","labelPos","SmartRenderer","currentToolTip","originalEvent","_addLegend","showiconinlegend","iconUrl","rawStrokeColor","isIcon","textSize","parseConfig","imageSize","strokeWidth","iconSpacing","uniChar","isIpad","newPathArr","pathStart","finalPath","transformText","svgSize","attrs","getAttribute","barColor"],"mappings":"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","file":"fusioncharts.widgets.js","sourcesContent":["import Bulb from '../viz/bulb';\nimport Cylinder from '../viz/cylinder';\nimport AngularGauge from '../viz/angulargauge';\nimport Hled from '../viz/hled';\nimport Vled from '../viz/vled';\nimport Hlineargauge from '../viz/hlineargauge';\nimport Thermometer from '../viz/thermometer';\nimport SparkLine from '../viz/sparkline';\nimport SparkColumn from '../viz/sparkcolumn';\nimport SparkWinLoss from '../viz/sparkwinloss';\nimport RealTimeArea from '../viz/realtimearea';\nimport RealTimeColumn from '../viz/realtimecolumn';\nimport RealTimeLine from '../viz/realtimeline';\nimport RealTimeStackedArea from '../viz/realtimestackedarea';\nimport RealTimeStackedColumn from '../viz/realtimestackedcolumn';\nimport RealTimeLineDY from '../viz/realtimelinedy';\nimport HorizontalBullet from '../viz/hbullet';\nimport VerticalBullet from '../viz/vbullet';\nimport Funnel from '../viz/funnel';\nimport Pyramid from '../viz/pyramid';\nimport RadialBar from '../viz/radialbar';\nimport DataStreamer from '@fusioncharts/widgets/src/chart/_internal/datastreamer';\n\nexport {\n  AngularGauge,\n  Bulb,\n  Cylinder,\n  Hled,\n  Vled,\n  Hlineargauge,\n  Thermometer,\n  SparkLine,\n  SparkColumn,\n  SparkWinLoss,\n  RealTimeArea,\n  RealTimeColumn,\n  RealTimeLine,\n  RealTimeStackedArea,\n  RealTimeStackedColumn,\n  RealTimeLineDY,\n  HorizontalBullet,\n  VerticalBullet,\n  Funnel,\n  Pyramid,\n  RadialBar\n};\n\nexport default {\n  name: 'widgets',\n  type: 'package',\n  requiresFusionCharts: true,\n  extension: FusionCharts => {\n    FusionCharts.addDep(DataStreamer);\n\n    FusionCharts.addDep(AngularGauge);\n    FusionCharts.addDep(Bulb);\n    FusionCharts.addDep(Cylinder);\n    FusionCharts.addDep(Hled);\n    FusionCharts.addDep(Vled);\n    FusionCharts.addDep(Hlineargauge);\n    FusionCharts.addDep(Thermometer);\n    FusionCharts.addDep(SparkLine);\n    FusionCharts.addDep(SparkColumn);\n    FusionCharts.addDep(SparkWinLoss);\n    FusionCharts.addDep(RealTimeArea);\n    FusionCharts.addDep(RealTimeColumn);\n    FusionCharts.addDep(RealTimeLine);\n    FusionCharts.addDep(RealTimeStackedArea);\n    FusionCharts.addDep(RealTimeStackedColumn);\n    FusionCharts.addDep(RealTimeLineDY);\n    FusionCharts.addDep(HorizontalBullet);\n    FusionCharts.addDep(VerticalBullet);\n    FusionCharts.addDep(Funnel);\n    FusionCharts.addDep(Pyramid);\n    FusionCharts.addDep(RadialBar);\n  }\n};\n","import Bulb from '@fusioncharts/widgets/src/chart/bulb';\nexport default Bulb;\n","\nimport GaugeWidget from '../_internal/gaugewidget';\nimport BulbDataset from '../../dataset/bulb';\nimport { pluckNumber, componentFactory } from '@fusioncharts/core/src/lib';\nimport ColorGradient from '@fusioncharts/core/src/color-utils/color-bucket';\nimport datasetFactory from '../../factories/vled-dataset';\n\nvar UNDEF,\n  BULB = 'bulb',\n  FRIENDLY_NAME = 'Bulb Gauge';\n\nclass Bulb extends GaugeWidget {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Bulb';\n  }\n\n  constructor () {\n    super();\n    this.isRealTime = true;\n    this._drawCanvas = function () {\n      // Blank fn to Override it's parent method\n    };\n\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Bulb';\n  }\n  // eslint-disable-next-line\n  _clearChart () {\n    // not applicable for gauges\n  }\n  /**\n   * Configures the colorRange provided as json data\n   *\n   * @param {any} dataObj - dataObj\n   * @memberof Bulb\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    let iapi = this,\n      jsonData = iapi.getFromEnv('dataSource'),\n      colorrange = jsonData.colorrange;\n    // componentFactory(iapi, ColorGradient, 'colorRange', 1, [colorrange]);\n\n    componentFactory(iapi, ColorGradient, 'colorRange', 1, [{\n      colorRange: colorrange,\n      numberFormatter: iapi.getFromEnv('number-formatter')\n    }]);\n\n    iapi.addToEnv('colorRange', iapi.getChildren('colorRange')[0]);\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.showRTvalue = false;\n    config.canvasPadding = false;\n    config.defaultSeriesType = BULB;\n    config.defaultPlotShadow = 1;\n    config.drawAnnotations = true;\n    config.charttopmargin = 10;\n    config.chartrightmargin = 10;\n    config.chartbottommargin = 10;\n    config.chartleftmargin = 10;\n    config.realtimeEnabled = true;\n    config.isRealTime = true;\n    config.friendlyName = FRIENDLY_NAME;\n    config.defaultDatasetType = BULB;\n    config.placevaluesinside = 0;\n    config.hasgaugeoriginx = UNDEF;\n    config.gaugeoriginx = UNDEF;\n    config.hasgaugeoriginy = UNDEF;\n    config.gaugeoriginy = UNDEF;\n    config.hasgaugeradius = UNDEF;\n    config.gaugeradius = UNDEF;\n    config.valuepadding = 2;\n    config.showgaugeborder = 0;\n    config.showhovereffect = UNDEF;\n    config.autoscale = 1;\n    config.skipCanvasDrawing = true;\n  }\n  _spaceManager () {\n    // todo marge _allocateSpace and _spacemanager\n    var availableHeight,\n      iapi = this,\n      config = iapi.config,\n      dataset = iapi.getChildren('dataset')[0],\n      datasetConfig = dataset.config,\n      is3D = iapi.config.is3D,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      showBorder = pluckNumber(chartAttrs.showborder, is3D ? 0 : 1),\n      chartBorderHorizontal,\n      chartBorderVertical,\n      minChartWidth = config.minChartWidth,\n      minChartHeight = config.minChartHeight,\n      chartBorderWidth =\n        config.borderWidth = showBorder ? pluckNumber(chartAttrs.borderthickness, 1) : 0;\n\n    if (config.autoscale) {\n      datasetConfig.scaleFactor = Bulb._getScaleFactor(datasetConfig.origW,\n        datasetConfig.origH, config.width, config.height);\n    } else {\n      datasetConfig.scaleFactor = 1;\n    }\n\n    if ((config.canvasWidth - 2 * chartBorderWidth) < minChartWidth) {\n      chartBorderVertical = (config.canvasWidth - minChartWidth) / 2;\n    }\n\n    if ((config.canvasHeight - 2 * chartBorderWidth) < minChartHeight) {\n      chartBorderHorizontal = (config.canvasHeight - minChartHeight) / 2;\n    }\n\n    iapi._allocateSpace({\n      top: chartBorderHorizontal || chartBorderWidth,\n      bottom: chartBorderHorizontal || chartBorderWidth,\n      left: chartBorderVertical || chartBorderWidth,\n      right: chartBorderVertical || chartBorderWidth\n    });\n    iapi._allocateSpace((iapi._manageActionBarSpace &&\n      iapi._manageActionBarSpace(config.availableHeight * 0.225)) || {});\n    //* ***** Manage space\n    availableHeight = config.canvasHeight * 0.7;\n\n    // (hasLegend !== false) &&\n    //           iapi._allocateSpace(legend._manageLegendPosition(availableHeight));\n\n    // a space manager that manages the space for the tools as well as the captions.\n    iapi._manageChartMenuBar(availableHeight);\n\n    dataset._manageSpace && iapi._allocateSpace(dataset._manageSpace(availableHeight));\n  }\n\n  allocatePosition () {\n    let iapi = this,\n      chartConfig = iapi.config,\n      dataset = iapi.getDatasets()[0],\n      conf = dataset.config,\n      radius,\n      canvasHeight = chartConfig.canvasHeight,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasTop = chartConfig.canvasTop,\n      canvasLeft = chartConfig.canvasLeft,\n      gaugeOriginX = chartConfig.gaugeoriginx,\n      gaugeOriginY = chartConfig.gaugeoriginy,\n      gaugeRadius = chartConfig.gaugeradius,\n      hasGaugeOriginX = chartConfig.hasgaugeoriginx,\n      hasGaugeOriginY = chartConfig.hasgaugeoriginy,\n      hasGaugeRadius = chartConfig.hasgaugeradius;\n\n    gaugeOriginX = hasGaugeOriginX !== UNDEF ? (gaugeOriginX * conf.scaleFactor)\n      : canvasLeft + (canvasWidth / 2);\n\n    gaugeOriginY = hasGaugeOriginY !== UNDEF ? (gaugeOriginY * conf.scaleFactor)\n      : canvasTop + (canvasHeight / 2);\n\n    radius = hasGaugeRadius !== UNDEF ? (gaugeRadius * conf.scaleFactor)\n      : Math.min(canvasWidth / 2, canvasHeight / 2);\n\n    // Setting macros for annotation\n    chartConfig.gaugeStartX = gaugeOriginX - radius;\n    chartConfig.gaugeEndX = gaugeOriginX + radius;\n    chartConfig.gaugeStartY = gaugeOriginY - radius;\n    chartConfig.gaugeEndY = gaugeOriginY + radius;\n    chartConfig.gaugeCenterX = gaugeOriginX;\n    chartConfig.gaugeCenterY = gaugeOriginY;\n    chartConfig.gaugeRadius = radius;\n  }\n  _getData () {\n    var iapi = this,\n      dataset = iapi.getChildren('dataset'),\n      data,\n      dataObj;\n    if (dataset) {\n      dataObj = dataset[0].components.data;\n      if (dataObj && dataObj[0]) {\n        data = dataObj[0].config;\n        return pluckNumber(data.setValue, data.itemValue);\n      }\n    }\n  }\n  /**\n   * function to calculate post space management calculations\n   * calculations like axis dimenetion set, allocate space for xaxis labels,\n   * canvas padding etc.\n   */\n  // eslint-disable-next-line\n  _postSpaceManagement () {\n    // overwrite this method and do nothing\n    this.allocateDimensionOfChartMenuBar();\n  }\n\n  getDSdef () {\n    return BulbDataset;\n  }\n\n  static _getScaleFactor (_origW, _origH, canvasWidth, canvasHeight) {\n    var scaleFactor,\n      origH = _origH,\n      origW = _origW;\n\n    origH = pluckNumber(origH, canvasHeight);\n    origW = pluckNumber(origW, canvasWidth);\n    if (!origH || !origW) {\n      scaleFactor = 1;\n    } else if ((origW / canvasWidth) === (origH / canvasHeight)) {\n      // Now, if the ratio of original width,height & stage width,height are same\n      // In this case, the transformation value would be the same, as the ratio\n      // of transformation of width and height is same.\n      scaleFactor = canvasWidth / origW;\n    } else {\n      // If the transformation factors are different, we do a constrained scaling\n      // We get the aspect whose delta is on the lower side.\n      scaleFactor = Math.min((canvasWidth / origW), (canvasHeight / origH));\n    }\n\n    return scaleFactor;\n  }\n}\nexport default Bulb;\n","import { _realTimeConfigure, eiMethods, _stopUpdate, _restartUpdate, _isUpdateActive, feedData, _linearDataParser, _clearChart, _setRTmenu as __setRTmenu }\n  from './realtime';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport CommonAPI from '@fusioncharts/charts/src/chart/_internal/commonchartapi';\nimport { stubFN, extend2, defaultGaugePaletteOptions as DefaultGaugePaletteOptions, BLANKSTRING, UNDEF } from '@fusioncharts/core/src/lib';\nimport datasetFactory from '@fusioncharts/charts/src/factories/singleseries-dataset';\nimport FusionCharts from '@fusioncharts/constructor/src/constructor';\nimport DataStreamer from './datastreamer';\nvar defaultGaugePaletteOptions = extend2({}, DefaultGaugePaletteOptions),\n  math = Math,\n  mathMax = math.max,\n  getDataset = function (component) {\n    let datasets = [];\n    component.iterateComponents((child) => {\n      if (child.getType() === 'dataset') {\n        datasets.push(child);\n      }\n    });\n    return datasets;\n  };\n\nFusionCharts.addDep(DataStreamer);\nclass GaugeWidget extends CommonAPI {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'GaugeBase';\n  }\n\n  constructor () {\n    super();\n    this.defaultPaletteOptions = defaultGaugePaletteOptions;\n    this.multiValueGauge = false;\n    this.drawAnnotations = true;\n    this.includeColorRangeInLimits = false;\n    this.isWidget = true;\n    this._feedAxesRawData = this._feedAxesRawData || stubFN;\n    this._setCategories = this._setCategories || stubFN;\n    this.eiMethods = eiMethods;\n\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n    this.registerFactory('axis', stubFN, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'GaugeBase';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.valuefontbold = 1;\n    config.useScaleRecursively = true;\n    config.formatnumberscale = 0;\n  }\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.drawTrendRegion = 0;\n  }\n  // Only updates the internal data-structure without updating visuals.\n  realTimeUpdate (dataObj) {\n    var iapi = this,\n      components = iapi.getChildren(),\n      dataset = components.dataset,\n      newDataset = dataObj.dataset,\n      newCategory = (dataObj.categories && dataObj.categories.category) || [],\n      realTimeConfig = iapi.config.realTimeConfig = iapi.config.realTimeConfig ||\n                  (iapi.config.realTimeConfig = {}),\n      data,\n      length,\n      i,\n      curDataset;\n\n    iapi.fireChartInstanceEvent('updateDataReceived', dataObj);\n    // fired on data update. used by message logger for updating logm\n    iapi.fireEvent('realtimeDataUpdate', dataObj);\n    if (!iapi.config.cachedArrivedJSON) {\n      iapi.config.cachedArrivedJSON = {};\n    }\n\n    iapi.config.cachedArrivedJSON = dataObj;\n\n    if (dataset) {\n      curDataset = newDataset[0];\n      data = curDataset.data;\n      for (i = 0, length = data.length; i < length; i++) {\n        data[i].label = newCategory[i] && newCategory[i].label;\n      }\n      // curDataset.data[0].label = newCategory[0].label;\n      // dataset[0].updateData(curDataset);\n      dataset[0].maxminFlag && (realTimeConfig.maxminFlag = dataset[0].maxminFlag);\n    }\n  }\n  _setData (value, label) {\n    var stream = BLANKSTRING;\n    if ((value && value.toString) || value === BLANKSTRING || value === 0) {\n      stream = 'value=' + value.toString();\n    }\n    if ((label && label.toString) || label === BLANKSTRING) {\n      stream = stream + '&label=' + label.toString();\n    }\n    if (stream) {\n      this.feedData(stream);\n    }\n  }\n  _getData () {\n    var iapi = this,\n      components = iapi.getChildren(),\n      dataset = iapi.getDatasets(),\n      xAxis = (components.xAxis && components.xAxis[0]) || components.scale,\n      length,\n      i,\n      j,\n      store = [],\n      maxLength = 0,\n      data,\n      innerStore;\n\n    if (dataset) {\n      length = dataset.length;\n      // Finding the dataset with maximum length\n      for (i = 0; i < length; i++) {\n        maxLength = mathMax(maxLength, dataset[i].components.data.length);\n      }\n\n      for (i = 0; i < maxLength; i++) {\n        innerStore = store[i] = [];\n\n        innerStore[0] = xAxis.getLabel(i).label;\n        for (j = 1; j <= length; j++) {\n          data = dataset[j - 1].components.data[i];\n          innerStore[j] = data && data.config.setValue;\n        }\n      }\n      return store;\n    }\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  // eslint-disable-next-line\n  _checkInvalidSpecificData () {\n    // this fn will override\n  }\n  /**\n   * Update visuals during real time draw.\n   * @param  {boolean} ajaxCall       to decide if the data are fed through ajax or API\n   * @param  {string}  stream         raw data that has to be fed to the chart\n   * @param  {Object}  prevData       previuosly fed data\n   * @param  {string}  url            url for ajax request\n   * @param  {number}  ajaxCallLatency ajax call delay\n   */\n  realTimeDraw (eventArgs = {}) {\n    if (!this.config.cachedArrivedJSON) {\n      return;\n    }\n    var iapi = this,\n      config = iapi.config,\n      prevData = config.prevData,\n      // scale = chartChildren.scale && chartChildren.scale[0],\n      dataset = getDataset(iapi),\n      // sync = realTimeConfig.sync,\n      dataObj = config.cachedArrivedJSON,\n      newDataset,\n      realTimeConfig = config.realTimeConfig || (config.realTimeConfig = {}),\n      curDataset,\n      showRTValue = realTimeConfig.showRTValue,\n      // maxminFlag = realTimeConfig.maxminFlag,\n      drawLatency,\n      i,\n      inputData,\n      pointerId = [],\n      pointerIdLen,\n      getValueArray = function (data = []) {\n        var len = data.length,\n          newData = [],\n          ii,\n          dataObject;\n        for (ii = 0; ii < len; ++ii) {\n          dataObject = data[ii];\n          newData.push(dataObject.value);\n        }\n        return [newData];\n      };\n    iapi.__rtDrawStartAt = new Date();\n    // set the state that the realtime update is going to happen\n    iapi.getFromEnv('animationManager').setAnimationState('realTimeUpdate');\n\n    if (dataset && dataset.length) {\n      inputData = dataObj.dataset[0].data;\n      // Store all the IDs present in dataById or idMap in angularGauge or hlinearGauge respectively\n      pointerId = Object.keys(dataset[0].config.dataById || dataset[0].config.idMap || {});\n      pointerIdLen = pointerId.length;\n\n      // Iterate through all the keys of dataObj.\n      // If any value is provided by ID, move it to data array of dataset.\n      for (i = 0; i < pointerIdLen; i++) {\n        if (dataObj.hasOwnProperty(pointerId[i])) {\n          inputData.push({\n            value: Number(dataObj[pointerId[i]]),\n            id: pointerId[i]\n          });\n        }\n      }\n      config.prevData = getValueArray(inputData);\n      newDataset = dataObj.dataset;\n\n      curDataset = newDataset[0];\n      curDataset.data[0] && (curDataset.data[0].label = dataObj.categories && dataObj.categories.category &&\n                                  dataObj.categories.category[0] && dataObj.categories.category[0].label);\n      dataset[0].updateData(curDataset);\n      dataset[0].maxminFlag && (realTimeConfig.maxminFlag = dataset[0].maxminFlag);\n      dataset[0].asyncDraw();\n\n      config.cachedArrivedJSON = UNDEF;\n      // Function to manage during realTime\n      iapi.rtManageSpace && iapi._RTmanageSpace();\n      iapi.prepareAttributes && iapi.prepareAttributes();\n      iapi._preDraw();\n      // maxminFlag && scale && scale.asyncDraw();\n\n      if (showRTValue && iapi._drawRealTimeValue) {\n        iapi.asyncRealTimeValueDraw();\n      }\n    }\n    config._eventArgs = eventArgs;\n    eventArgs.prevData = prevData;\n    iapi.__realtimeUpdateComplete || (iapi.__realtimeUpdateComplete = () => {\n      drawLatency = new Date() - iapi.__rtDrawStartAt;\n\n      if (!realTimeConfig.clear) {\n        config._eventArgs.latency = drawLatency;\n        config._eventArgs.updateObject = realTimeConfig.legacyUpdateObj;\n      }\n      iapi.getChildren('dataStreamer')[0].addToEnv('realtimeDrawingLatency', drawLatency);\n      iapi.fireChartInstanceEvent('realTimeUpdateComplete', config._eventArgs);\n    });\n    iapi.addJob('realtimeupdatecomplete', iapi.__realtimeUpdateComplete, priorityList.postRender);\n  }\n\n  _setRTmenu (showRTmenuItem, useMessageLog) {\n    __setRTmenu.call(this, showRTmenuItem, useMessageLog);\n  }\n\n  /**\n   * Creates layer for gauges. Swaps the position of axisbottom and belowplot group\n   *\n   * @memberof GaugeBase\n   */\n  _createLayers () {\n    let iapi = this,\n      belowPlotGroup,\n      axisBottomGroup;\n\n    super._createLayers();\n\n    // Swapping the belowPlotGroup and axisBottomGroup, as in gauges axisBottomGroup lays over\n    // belowPlotGroup(contains lower-annotations)\n    belowPlotGroup = iapi.getChildContainer('belowPlotGroup');\n    axisBottomGroup = iapi.getChildContainer('axisBottomGroup');\n\n    belowPlotGroup.insertBefore(axisBottomGroup);\n  }\n\n  _realTimeConfigure () {\n    _realTimeConfigure.call(this);\n  }\n  _stopUpdate (source) {\n    _stopUpdate.call(this, source);\n  }\n  _restartUpdate () {\n    _restartUpdate.call(this);\n  }\n  _isUpdateActive () {\n    return _isUpdateActive.call(this);\n  }\n  feedData (stream) {\n    feedData.call(this, stream);\n  }\n  _linearDataParser (responseText) {\n    return _linearDataParser.call(this, responseText);\n  }\n  _clearChart (_source) {\n    _clearChart.call(this, _source);\n  }\n}\n\nexport default GaugeWidget;\n","import {\n  BLANKSTRING,\n  COMMASPACE,\n  HASHSTRING,\n  parseUnsafeString,\n  pluck,\n  pluckNumber,\n  regex\n} from '@fusioncharts/core/src/lib/index.js';\nimport { priorityList } from '@fusioncharts/core/src/schedular/index.js';\nimport safeMax from '@fusioncharts/utils/src/array/safe-max.js';\n\nlet NORMALSTRING = 'normal',\n  math = Math,\n  mathMax = math.max,\n  UNDEF,\n  dropHash = regex.dropHash,\n  PXSTRING = 'px',\n  feedIndex = 0,\n  count = 0,\n  AMPERSAND = '&',\n  EQUALS = '=',\n  PIPE = '|',\n  COMMA = ',',\n  copyObject = d => Object.assign({}, d),\n  spaceLeft = d => d.spaceTaken.left,\n  spaceRight = d => d.spaceTaken.right,\n  getDataset = function (component) {\n    let datasets = [];\n    component.iterateComponents((child) => {\n      if (child.getType() === 'dataset') {\n        datasets.push(child);\n      }\n    });\n    return datasets;\n  },\n\n  _realTimeConfigure = function () {\n    var iapi = this,\n      config = iapi.config,\n      realTimeConfig = config.realTimeConfig || (config.realTimeConfig = {}),\n      refreshInterval,\n      realtimeValueFontColor,\n      realtimeValueFontSize,\n      jsonData = iapi.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      useMessageLog = pluckNumber(chartAttrs.usemessagelog, 0),\n      messageGoesToLog = pluckNumber(chartAttrs.messagegoestolog, 1),\n      catLen = (jsonData.categories && Array.isArray(jsonData.categories) && jsonData.categories[0] && jsonData.categories[0].category &&\n        jsonData.categories[0].category.length) || 0;\n\n    // Parsing the real time attributes\n    realTimeConfig.showRTValue = pluckNumber(chartAttrs.showrealtimevalue, 1);\n    realTimeConfig.dataStreamURL = parseUnsafeString(chartAttrs.datastreamurl, BLANKSTRING);\n    realTimeConfig.dataStamp = chartAttrs.datastamp;\n    realTimeConfig.useMessageLog = useMessageLog && messageGoesToLog;\n    realTimeConfig.clearInterval = pluckNumber(chartAttrs.clearchartinterval, 0);\n    realTimeConfig.realtimeValueSeparator = pluck(chartAttrs.realtimevaluesep, COMMASPACE);\n    realTimeConfig.refreshInterval = refreshInterval =\n      pluckNumber(chartAttrs.refreshinterval, chartAttrs.updateinterval, 2);\n    realTimeConfig.updateInterval = iapi.config.updateInterval =\n      pluckNumber(chartAttrs.updateinterval, refreshInterval);\n    realTimeConfig.realtimeValuePadding = pluckNumber(chartAttrs.realtimevaluepadding);\n    realTimeConfig.realtimeValueFont = pluck(chartAttrs.realtimevaluefont, BLANKSTRING);\n    realTimeConfig.realtimeValueFontBold = pluck(chartAttrs.realtimevaluefontbold, 0);\n    realTimeConfig.realtimeValueFontColor = realtimeValueFontColor =\n      pluck(chartAttrs.realtimevaluefontcolor, BLANKSTRING);\n    realTimeConfig.realtimeValueFontSize = realtimeValueFontSize =\n      pluckNumber(chartAttrs.realtimevaluefontsize, BLANKSTRING);\n    realTimeConfig.realTimeValuePadding = pluckNumber(chartAttrs.realtimevaluepadding, 5);\n    realTimeConfig.fontWeight = pluckNumber(chartAttrs.realtimevaluefontbold, 0) ? 'bold' : NORMALSTRING;\n    realTimeConfig.numDisplaySets = pluckNumber(chartAttrs.numdisplaysets, mathMax(\n      catLen, 15));\n    realTimeConfig.refreshInstantly = pluckNumber(chartAttrs.refreshinstantly, 0);\n    realTimeConfig.showRTmenuItem = pluckNumber(chartAttrs.showrtmenuitem, 0);\n\n    // chartAnimation is forced to sync\n    realTimeConfig.sync = pluckNumber(chartAttrs.sync, refreshInterval > 0.6);\n\n    if (realtimeValueFontColor) {\n      realTimeConfig.realtimeValueFontColor = realtimeValueFontColor.replace(dropHash, HASHSTRING);\n    }\n\n    if (realtimeValueFontSize) {\n      realTimeConfig.realtimeValueFontSize = realtimeValueFontSize + PXSTRING;\n    }\n\n    refreshInterval *= 1000;\n    // iapi._setRTmenu(showRTmenuItem, useMessageLog);\n  },\n  /**\n * @group chart-realtime\n * @see FusionCharts#startUpdate\n * @see FusionCharts#restartUpdate\n * @see FusionCharts#isUpdateActive\n * @see FusionCharts#clearChart\n */\n  _stopUpdate = function (source) {\n    var iapi = this,\n      realTimeConfig = iapi.config.realTimeConfig,\n      loadData = iapi.config.timers && iapi.config.timers.setTimeout.loadData;\n    iapi.getChildren('dataStreamer')[0]._stopUpdate();\n    // Clearing previously queqed updates of the chart if any ideally when update interval is less than\n    // refresh interval.\n    loadData && clearTimeout(loadData);\n\n    realTimeConfig.clearIntervalFlag = false;\n\n    /**\n         * This event is raised when the real time update of the chart is stopped .\n         *\n         * @event Fusioncharts#realTimeUpdateStopped\n         * @group chart-realtime\n         */\n\n    iapi.fireChartInstanceEvent('dataRestored', {\n      source: source\n    });\n  },\n\n  /**\n * @group chart-realtime\n * @see FusionCharts#startUpdate\n * @see FusionCharts#stopUpdate\n * @see FusionCharts#isUpdateActive\n * @see FusionCharts#clearChart\n */\n  _restartUpdate = function () {\n    this.getChildren('dataStreamer')[0]._restartUpdate();\n  },\n  /**\n * @group chart-realtime\n * @see FusionCharts#startUpdate\n * @see FusionCharts#stopUpdate\n * @see FusionCharts#clearChart\n * @see FusionCharts#restartUpdate\n */\n  _isUpdateActive = function () {\n    return this.getChildren('dataStreamer')[0]._isUpdateActive();\n  },\n  eiMethods = {\n    feedData: function () {\n      var chartContainer = this,\n        chart = chartContainer.apiInstance,\n        callback = arguments[1],\n        updateStr,\n        output;\n      if (callback) {\n        updateStr = arguments[0];\n        chart.addJob(`feedDataId${count++}` + feedIndex++, function () {\n          output = chart.feedData(updateStr);\n          if (typeof callback === 'function') {\n            callback(output);\n          }\n        }, priorityList.postRender);\n      } else {\n        return chart.feedData.apply(chart, arguments);\n      }\n    },\n\n    setData: function () {\n      var chart = this.apiInstance,\n        value = arguments[0],\n        label = arguments[1],\n        id = arguments[2];\n\n      chart.addJob(`setDataId${count++}`, function () { chart._setData(value, label, id); }, priorityList.postRender);\n    },\n\n    stopUpdate: function () {\n      var chart = this.apiInstance;\n\n      chart.addJob(`stopUpdateId${count++}`, function () { chart._stopUpdate(); }, priorityList.postRender);\n    },\n\n    restartUpdate: function () {\n      this.apiInstance._restartUpdate.apply(this.apiInstance, arguments);\n    },\n\n    isUpdateActive: function () {\n      return this.apiInstance._isUpdateActive.apply(this.apiInstance, arguments);\n    },\n\n    clearChart: function () {\n      var chart = this.apiInstance;\n      chart.addJob(`clearChartId${count++}`, function () { chart._clearChart(); }, priorityList.postRender);\n    },\n\n    getData: function () {\n      return this.apiInstance._getData.apply(this.apiInstance, arguments);\n    },\n\n    getDataForId: function () {\n      return this.apiInstance._getDataForId.apply(this.apiInstance, arguments);\n    },\n\n    setDataForId: function () {\n      return this.apiInstance._setDataForId.apply(this.apiInstance, arguments);\n    },\n\n    getDataJSON: function () {\n      return this.apiInstance._getDataJSON.apply(this.apiInstance, arguments);\n    }\n  },\n  /**\n   * Only updates the internal data-structure without updating visuals.\n   * @param  {Object} dataObj new data object to be added in dataset\n   */\n  realTimeUpdate = function (dataObj) {\n    var iapi = this,\n      datasets = getDataset(iapi),\n      i,\n      cachedArrivedJSON = iapi.config.cachedArrivedJSON,\n      currJSONDataset,\n      cachedCategories = cachedArrivedJSON && cachedArrivedJSON.categories,\n      newDataset = dataObj.dataset,\n      newCategory = (dataObj.categories && dataObj.categories.category) || [];\n    iapi.fireChartInstanceEvent('updateDataReceived', dataObj);\n    // fired on data update. used by message logger for updating logm\n    iapi.fireEvent('realtimeDataUpdate', dataObj);\n\n    !iapi.config.cachedArrivedJSON && (cachedArrivedJSON = iapi.config.cachedArrivedJSON = {});\n    cachedArrivedJSON.dataset = cachedArrivedJSON.dataset || [];\n    cachedCategories = cachedArrivedJSON.categories || (cachedArrivedJSON.categories = {});\n    cachedCategories.category = cachedCategories.category || [];\n\n    for (i = 0; i < datasets.length; i++) {\n      currJSONDataset = cachedArrivedJSON.dataset[i] || (cachedArrivedJSON.dataset[i] = {});\n      currJSONDataset.data || (currJSONDataset.data = []);\n      currJSONDataset.data.push.apply(currJSONDataset.data, newDataset[i].data);\n    }\n\n    cachedCategories.category.push.apply(cachedCategories.category, newCategory);\n  },\n\n  /**\n   * Calculates space for components during realtime update\n   */\n  _RTmanageSpace = function () {\n    var iapi = this,\n      config = iapi.config,\n      chartChildren = iapi.getChildren(),\n      xAxis = chartChildren.xAxis[0],\n      yAxis = chartChildren.yAxis[0],\n      sYAxis = chartChildren.yAxis[1],\n      bottom,\n      canvas = chartChildren.canvas && chartChildren.canvas[0],\n      canvasConfig = canvas.config,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      canvasPaddingTop = canvasConfig.canvasPaddingTop,\n      canvasPaddingBottom = canvasConfig.canvasPaddingBottom,\n      canvasPadding = canvasConfig.canvasPadding || 0,\n      canvasPaddingLeft = canvasConfig.canvasPaddingLeft,\n      canvasPaddingRight = canvasConfig.canvasPaddingRight,\n      xAxisSpaceAllocation,\n      availableWidth,\n      prevXAxisSpaceAllocation = config.xAxisSpaceAllocation,\n      spaceTakenByYAxis = config.yAxisSpaceAllocation || [],\n      prevSpaceTakenByYAxis = spaceTakenByYAxis.map(copyObject),\n      pYAxisStartXPos,\n      sYAxisStartXPos,\n      pYAxisOppLength,\n      sYAxisOppLength,\n      tempVar,\n      yAxisPrevDim = yAxis && JSON.stringify(yAxis.getAxisDimension()),\n      sYAxisPrevDim = yAxis && JSON.stringify(yAxis.getAxisDimension()),\n      yAxisDim,\n      top,\n      shift = config.shift || 0,\n      sYAxisDim;\n\n    xAxisSpaceAllocation = config.xAxisSpaceAllocation = xAxis.placeAxis(config.availableHeight +\n      (xAxis.config.isOpposit ? prevXAxisSpaceAllocation.top : prevXAxisSpaceAllocation.bottom));\n\n    bottom = xAxisSpaceAllocation.bottom - prevXAxisSpaceAllocation.bottom;\n    top = xAxisSpaceAllocation.top - prevXAxisSpaceAllocation.top;\n    // when xAxis not at previous position\n    if (top !== 0 || bottom !== 0) {\n      iapi._allocateSpace({\n        bottom,\n        top\n      });\n\n      availableWidth = config.availableWidth;\n      // place primary axis\n      spaceTakenByYAxis[0].spaceTaken =\n        yAxis.placeAxis(availableWidth + prevSpaceTakenByYAxis[0].spaceTaken.left);\n\n      if (sYAxis) {\n        // place secondary axis\n        spaceTakenByYAxis[1].spaceTaken = sYAxis.placeAxis(availableWidth +\n          prevSpaceTakenByYAxis[1].spaceTaken.right);\n      }\n\n      // since in dy charts the one axis trenvalue overlaps with\n      // the other axis, so here all axis is placed and then\n      // based on maximum space on each side the space is allocated\n      iapi._allocateSpace({\n        left: safeMax(spaceTakenByYAxis, spaceLeft) - safeMax(prevSpaceTakenByYAxis, spaceLeft),\n        right: safeMax(spaceTakenByYAxis, spaceRight) - safeMax(prevSpaceTakenByYAxis, spaceRight)\n      });\n\n      availableWidth = config.availableWidth;\n\n      pYAxisStartXPos = config.canvasLeft - canvasBorderWidth;\n      pYAxisOppLength = config.canvasRight + canvasBorderWidth;\n\n      if (sYAxis) {\n        sYAxisStartXPos = pYAxisOppLength;\n        sYAxisOppLength = pYAxisStartXPos;\n        // when primary axis is on right change the positions\n        if (config.primaryAxisOnleft === 0) {\n          tempVar = pYAxisStartXPos;\n          pYAxisStartXPos = sYAxisStartXPos;\n          sYAxisStartXPos = tempVar;\n          tempVar = pYAxisOppLength;\n          pYAxisOppLength = sYAxisOppLength;\n          sYAxisOppLength = tempVar;\n        }\n\n        sYAxis.setAxisDimention({\n          x: sYAxisStartXPos,\n          y: config.canvasTop + canvasPaddingTop,\n          opposite: sYAxisOppLength,\n          axisLength: config.canvasHeight - canvasPaddingTop - canvasPaddingBottom\n        });\n      }\n\n      xAxis && xAxis.setAxisDimention({\n        x: config.canvasLeft + mathMax(canvasPaddingLeft, canvasPadding),\n        y: xAxis.config.isOpposit\n          ? config.canvasTop - canvasBorderWidth\n          : config.canvasBottom + shift + canvasBorderWidth,\n        opposite: xAxis.config.isOpposit\n          ? config.canvasBottom + shift + canvasBorderWidth\n          : config.canvasTop - canvasBorderWidth,\n        axisLength: config.canvasWidth - mathMax(canvasPaddingLeft, canvasPadding) -\n          mathMax(canvasPaddingRight, canvasPadding)\n      });\n      yAxis && yAxis.setAxisDimention({\n        x: yAxis.config.isOpposit ? pYAxisOppLength : pYAxisStartXPos,\n        y: config.canvasTop + canvasPaddingTop,\n        opposite: yAxis.config.isOpposit ? pYAxisStartXPos : pYAxisOppLength,\n        axisLength: config.canvasHeight - canvasPaddingTop - canvasPaddingBottom\n      });\n    }\n    iapi.canvasPadding && canvas.setCanvasPadding();\n    canvas.setDimension({\n      top: config.canvasTop,\n      left: config.canvasLeft,\n      width: config.canvasWidth,\n      height: config.canvasHeight\n    });\n    canvasBorderWidth = canvasConfig.canvasBorderWidth;\n    canvasPaddingTop = canvasConfig.canvasPaddingTop;\n    canvasPaddingBottom = canvasConfig.canvasPaddingBottom;\n    canvasPadding = canvasConfig.canvasPadding || 0;\n    canvasPaddingLeft = canvasConfig.canvasPaddingLeft;\n    canvasPaddingRight = canvasConfig.canvasPaddingRight;\n\n    sYAxis && sYAxis.setAxisDimention({\n      x: config.canvasRight + canvasBorderWidth,\n      y: config.canvasTop + canvasPaddingTop,\n      opposite: sYAxisOppLength,\n      axisLength: config.canvasHeight - canvasPaddingTop - canvasPaddingBottom\n    });\n    xAxis && xAxis.setAxisDimention({\n      x: config.canvasLeft + mathMax(canvasPaddingLeft, canvasPadding),\n      y: xAxis.config.isOpposit\n        ? config.canvasTop - canvasBorderWidth\n        : config.canvasBottom + shift + canvasBorderWidth,\n      opposite: xAxis.config.isOpposit\n        ? config.canvasBottom + shift + canvasBorderWidth\n        : config.canvasTop - canvasBorderWidth,\n      axisLength: config.canvasWidth - mathMax(canvasPaddingLeft, canvasPadding) -\n        mathMax(canvasPaddingRight, canvasPadding)\n    });\n    yAxis && yAxis.setAxisDimention({\n      x: yAxis.config.isOpposit\n        ? config.canvasRight + canvasBorderWidth : config.canvasLeft - canvasBorderWidth,\n      y: config.canvasTop + canvasPaddingTop,\n      opposite: yAxis.config.isOpposit\n        ? config.canvasLeft - canvasBorderWidth : config.canvasRight + canvasBorderWidth,\n      axisLength: config.canvasHeight - canvasPaddingTop - canvasPaddingBottom\n    });\n    yAxisDim = yAxis && JSON.stringify(yAxis.getAxisDimension());\n    sYAxisDim = yAxis && JSON.stringify(yAxis.getAxisDimension());\n    config.drawYAxis = yAxisDim !== yAxisPrevDim;\n    config.drawSyAxis = sYAxisDim !== sYAxisPrevDim;\n  },\n  /**\n   * Update visuals during real time draw.\n   * @param  {Object} eventArgs Conatins the key value for the event Args of realTimeUpdate event.\n   */\n  realTimeDraw = function (eventArgs = {}) {\n    var iapi = this,\n      iapiConf = iapi.config,\n      chartChildren = iapi.getChildren(),\n      canvas = chartChildren.canvas && chartChildren.canvas[0],\n      xAxis = chartChildren.xAxis && chartChildren.xAxis[0],\n      yAxis = chartChildren.yAxis && chartChildren.yAxis[0],\n      sYAxis = chartChildren.yAxis && chartChildren.yAxis[1],\n      dataset = getDataset(iapi),\n      dslen = dataset.length,\n      len,\n      dataObj = iapiConf.cachedArrivedJSON,\n      newDataset = dataObj && dataObj.dataset,\n      newCategory = (dataObj && dataObj.categories && dataObj.categories.category) || [],\n      catLen = xAxis && xAxis.getTicksLen(),\n      realTimeConfig = iapiConf.realTimeConfig = iapiConf.realTimeConfig ||\n        (iapiConf.realTimeConfig = {}),\n      prevData = realTimeConfig.prevData,\n      newCatLength = 0,\n      curDataset,\n      datasetParent,\n      showRTValue = realTimeConfig.showRTValue,\n      i,\n      drawLatency,\n      isClear = realTimeConfig.clear,\n      getValueArray = function (data = []) {\n        var dataLen = data.length,\n          newData = [],\n          ii,\n          dataObject;\n        for (ii = 0; ii < dataLen; ++ii) {\n          dataObject = data[ii];\n          newData.push(dataObject.value);\n        }\n        return newData;\n      };\n    iapiConf._eventArgs = eventArgs;\n    eventArgs.prevData = prevData;\n    realTimeConfig.prevData = [];\n    // set the state that the realtime update is going to happen\n    iapi.getFromEnv('animationManager').setAnimationState('realTimeUpdate');\n\n    iapi.__rtDrawStartAt = new Date();\n    iapi.__realtimeUpdateComplete || (iapi.__realtimeUpdateComplete = () => {\n      drawLatency = new Date() - iapi.__rtDrawStartAt;\n\n      if (!isClear) {\n        iapiConf._eventArgs.latency = drawLatency;\n        iapiConf._eventArgs.updateObject = realTimeConfig.legacyUpdateObj;\n      }\n      iapi.getChildren('dataStreamer')[0].addToEnv('realtimeDrawingLatency', drawLatency);\n      iapi.fireChartInstanceEvent('realTimeUpdateComplete', iapiConf._eventArgs);\n    });\n    iapi.addJob('realtimeupdatecomplete', iapi.__realtimeUpdateComplete, priorityList.postRender);\n    if (dataset) {\n      // Register a drawing job canvas and it's childs\n      canvas.asyncDraw();\n      if (dataObj) {\n        if (xAxis) {\n          // Set a drawing job for the xAxis.\n          xAxis.asyncDraw();\n          xAxis.categoryInsert(catLen, newCategory, true);\n          for (i = 0, len = newCategory.length; i < len; i++) {\n            if (!newCategory[i].vline) {\n              newCatLength += 1;\n            }\n          }\n          xAxis.categoryDelete(0, newCatLength, true);\n          xAxis.categoryTranslate(newCatLength);\n        }\n        iapiConf._sumValuesUpdated = false;\n\n        if (isClear) {\n          for (i = 0; i < dslen; i++) {\n            dataset[i]._realTimeConfigure(true);\n          }\n          realTimeConfig.clear = false;\n        }\n\n        for (i = 0; i < dslen; i++) {\n          curDataset = newDataset[i];\n          dataset[i].addData(curDataset);\n          dataset[i].removeData(0, curDataset.data.length);\n          dataset[i].resetCatPos();\n          dataset[i].setMaxMin();\n          datasetParent = dataset[i].getLinkedParent();\n          datasetParent.childChanged();\n          realTimeConfig.prevData.push(getValueArray(curDataset.data));\n        }\n        iapiConf.cachedArrivedJSON = UNDEF;\n      }\n      // Function to manage space during realTime\n      iapi.rtManageSpace && iapi._RTmanageSpace();\n      iapiConf.drawYAxis && yAxis && yAxis.asyncDraw();\n      iapiConf.drawSyAxis && sYAxis && sYAxis.asyncDraw();\n      iapi._preDraw();\n\n      if (showRTValue && iapi._drawRealTimeValue) {\n        iapi.asyncRealTimeValueDraw();\n      }\n    }\n  },\n  /**\n   * Legacy function for real time update via feedData\n   * @param  {string}  stream raw data that has to be fed to the chart\n   * @return {boolean} whether data are fed or not\n   */\n  feedData = function (stream) {\n    var iapi = this,\n      dataStreamer = iapi.getFromEnv('dataStreamer');\n\n    dataStreamer.responseTextHandler(stream);\n    dataStreamer.refreshVisualHandler({\n      source: 'feedData',\n      data: stream\n    });\n  },\n  /**\n   * Parse server input text and converts to input data object for chart\n   * @param {string} _responseText User input text as from server\n   * @return {Object} parsed data from response text\n   */\n  _linearDataParser = function (_responseText) {\n    /* Commands to handle:\n     * label, value, toolText, showLabel, link, color, vLine and related params (?),\n     * clear, stopUpdate, pointerId related updates,\n     */\n    var iapi = this,\n      commands,\n      command,\n      params,\n      valueVisibility,\n      toolTexts,\n      toolTextsTarget,\n      colors,\n      links,\n      vlineLabels,\n      vlineColors,\n      vlineThickness,\n      vlineDashed,\n      showLabels,\n      i,\n      l,\n      labels,\n      vlines,\n      values,\n      id,\n      target,\n      dataStamp,\n      pause,\n      clear,\n      len,\n      data,\n      j,\n      responseText = _responseText,\n      existingDatasets = getDataset(iapi),\n      existingDatasetsLen = existingDatasets && existingDatasets.length,\n      valuesLen,\n      valuefontcolors,\n      valuebgcolors,\n      valuebordercolors,\n      realTimeConfig = iapi.config.realTimeConfig,\n      legacyUpdateObj = realTimeConfig.legacyUpdateObj = {},\n      dataObjValues = legacyUpdateObj.values = [],\n      dataObjIds = legacyUpdateObj.id = [],\n      dataObjTarget = legacyUpdateObj.target = [],\n      dataObjShowValues = legacyUpdateObj.valueVisibility = [],\n      dataObjToolTexts = legacyUpdateObj.toolTexts = [],\n      dataObjToolTextsTarget = legacyUpdateObj.toolTextsTarget = [],\n      dataObjColors = legacyUpdateObj.colors = [],\n      dataObjLinks = legacyUpdateObj.links = [],\n      dataObjValueFontColors = legacyUpdateObj.valueFontColors = [],\n      dataObjValueBgColors = legacyUpdateObj.valueBgColors = [],\n      dataObjValueBorderColors = legacyUpdateObj.valueBorderColors = [],\n      maxValueLen = 0,\n      dataObj,\n      updateObj = {\n        categories: { category: [] },\n        dataset: []\n      },\n      labelsLen,\n      category = updateObj.categories.category,\n      dataset = updateObj.dataset,\n      lowerCaseCommand,\n      tempToolText = responseText,\n      toolText;\n\n    // clean value\n    responseText = (responseText && responseText.toString &&\n      responseText.toString()) || '';\n    // replacing all the | with , for hlinear gauge and angular gauge.\n    if (iapi.rtParserModify) {\n      tempToolText = tempToolText.replace(/([^\\\\])(\\|)/g, '$1,');\n      responseText = responseText.replace(/\\|/g, ',');\n    }\n    // split the commands.\n    commands = responseText.split(AMPERSAND);\n\n    for (i = 0, l = commands.length; i < l; i += 1) {\n      // for every command, separate the command name and its values.\n      command = commands[i].split(EQUALS);\n      params = command[1];\n      command = command[0];\n\n      // no need to process improper data strings as of now.\n      if (command === BLANKSTRING || command === UNDEF ||\n        params === UNDEF ||\n        (params === BLANKSTRING)) {\n        continue;\n      }\n\n      // desensitize case.\n      lowerCaseCommand = command.toLowerCase();\n\n      switch (lowerCaseCommand) {\n        case 'label':\n          legacyUpdateObj.labels = labels = params.split(COMMA);\n          break;\n\n        case 'vline':\n          legacyUpdateObj.vlines = vlines = params.split(COMMA);\n          break;\n        case 'vlinelabel':\n          legacyUpdateObj.vlineLabels = vlineLabels = params.split(COMMA);\n          break;\n        case 'vlinecolor':\n          legacyUpdateObj.vlineColors = vlineColors = params.split(COMMA);\n          break;\n        case 'vlinethickness':\n          legacyUpdateObj.vlineThickness = vlineThickness = params.split(COMMA);\n          break;\n        case 'vlinedashed':\n          legacyUpdateObj.vlineDashed = vlineDashed = params.split(COMMA);\n          break;\n\n        case 'value':\n          values = params.split(PIPE);\n          break;\n\n        case 'valuefontcolor':\n          valuefontcolors = params.split(PIPE);\n          break;\n\n        case 'valuebgcolor':\n          valuebgcolors = params.split(PIPE);\n          break;\n\n        case 'valuebordercolor':\n          valuebordercolors = params.split(PIPE);\n          break;\n\n        case 'target':\n          target = params.split(PIPE);\n          break;\n\n        case 'showlabel':\n          legacyUpdateObj.showLabels = showLabels = params.split(COMMA);\n          break;\n\n        case 'showvalue':\n          valueVisibility = params.split(PIPE);\n          break;\n\n        case 'tooltext':\n          toolTexts = tempToolText.match(/tooltext=(.*?\\\\&)*.*?[^\\\\]&/i);\n          toolTexts =\n            // When tooltext is succeeded by other parameters like &value, &color, etc.\n            // Eliminating 'tooltext=' text from tooltext.\n            (toolTexts ? toolTexts[0].substr(9, toolTexts[0].length - 10)\n              // When tooltext is the last argument in the feedData string.\n              : tempToolText.match(/(tooltext=)(.*)/i)[2]);\n          // Replacing all '|' characters except '\\|' characters.\n          toolTexts = toolTexts && toolTexts.replace(/([^\\\\])(\\|)/g, '$1_FC@@**');\n          toolTexts = toolTexts.split('_FC@@**');\n\n          // @todo - The string has to split with '|' and not '\\|' directly without using replace.\n          // // When tooltext is succeeded by other parameters like &value, &color, etc.\n          // if (toolTexts[1] && toolTexts[2]) {\n          //     toolTexts = toolTexts[1] + toolTexts[2];\n          //     toolTexts = toolTexts.split(/\\|(?=\\\\)/);\n          // }\n          // // When tooltext is the last argument in the feedData string.\n          // else {\n          //     toolTexts = tempToolText.match(/(tooltext=)(.*)/i)[2];\n          //     toolTexts = toolTexts && toolTexts.split(/\\|(?=\\|)/);\n          // }\n          break;\n\n        case 'targettooltext':\n          toolTextsTarget = params.split(PIPE);\n          break;\n\n        case 'link':\n          links = params.split(PIPE);\n          break;\n\n        case 'color':\n          colors = params.split(PIPE);\n          break;\n\n        case 'datastamp':\n          legacyUpdateObj.dataStamp = dataStamp = params;\n          break;\n\n        case 'stopupdate':\n          legacyUpdateObj.pause = pause = (params === '1');\n          break;\n\n        case 'clear':\n          legacyUpdateObj.clear = clear = (params === '1');\n          break;\n\n        case 'id':\n          id = params.split(PIPE);\n          break;\n\n        default:\n          // directly add the information in the update object\n          legacyUpdateObj[command] = updateObj[command] = params;\n      }\n    }\n\n    valuesLen = values && values.length;\n    for (i = 0; i < valuesLen; i++) {\n      dataObjValues[i] = values[i].split(COMMA);\n      dataObjTarget[i] = target && target[i] && target[i].split(COMMA);\n      dataObjShowValues[i] = valueVisibility && valueVisibility[i] && valueVisibility[i].split(COMMA);\n      dataObjToolTextsTarget[i] = toolTextsTarget && toolTextsTarget[i] && toolTextsTarget[i].split(COMMA);\n      dataObjColors[i] = colors && colors[i] && colors[i].split(COMMA);\n      dataObjLinks[i] = links && links[i] && links[i].split(COMMA);\n      dataObjValueFontColors[i] = valuefontcolors && valuefontcolors[i] && valuefontcolors[i].split(COMMA);\n      dataObjValueBgColors[i] = valuebgcolors && valuebgcolors[i] && valuebgcolors[i].split(COMMA);\n      dataObjValueBorderColors[i] = valuebordercolors && valuebordercolors[i] && valuebordercolors[i].split(COMMA);\n      dataObjIds[i] = id ? id[i].split(COMMA) : null;\n      if (toolTexts) {\n        toolText = toolTexts[i];\n        if (toolText) {\n          toolText = toolText.replace(/([^\\\\])(\\,)/g, '$1_FC@@**');\n          dataObjToolTexts[i] = toolText.split('_FC@@**');\n        }\n      }\n\n      // Finding the dataset that has the maximum data entered through feedData.\n      maxValueLen = mathMax(maxValueLen, dataObjValues[i].length);\n    }\n    labelsLen = labels && labels.length;\n\n    // No of data that is to be added is the maximum of number of categories or the num of data entered.\n    len = mathMax(labelsLen || 0, maxValueLen || 0);\n\n    for (i = 0; i < len; i++) {\n      category.push({\n        label: labels && labels[i],\n        color: vlineColors && vlineColors[i],\n        showlabel: showLabels && showLabels[i]\n      });\n    }\n\n    if (vlines) {\n      category.push({\n        label: vlineLabels && vlineLabels[0],\n        vline: vlines && vlines[0],\n        color: vlineColors && vlineColors[0],\n        thickness: vlineThickness && vlineThickness[0],\n        dashed: vlineDashed && vlineDashed[0],\n        showlabel: showLabels && showLabels[0]\n      });\n    }\n\n    for (i = 0; i < existingDatasetsLen; i++) {\n      dataObj = {};\n      data = dataObj.data = [];\n      for (j = 0; j < len; j++) {\n        data.push({\n          value: dataObjValues[i] && dataObjValues[i][j],\n          target: dataObjTarget[i] && dataObjTarget[i][j],\n          showvalue: dataObjShowValues[i] && dataObjShowValues[i][j],\n          tooltext: dataObjToolTexts[i] && dataObjToolTexts[i][j] &&\n            decodeURIComponent(dataObjToolTexts[i][j].replace(/\\\\/g, '')),\n          tooltexttarget: dataObjToolTextsTarget[i] && dataObjToolTextsTarget[i][j],\n          color: dataObjColors[i] && dataObjColors[i][j],\n          link: dataObjLinks[i] && dataObjLinks[i][j] && decodeURIComponent(dataObjLinks[i][j]),\n          valuefontcolor: dataObjValueFontColors[i] && dataObjValueFontColors[i][j],\n          valuebgcolor: dataObjValueBgColors[i] && dataObjValueBgColors[i][j],\n          valuebordercolor: dataObjValueBorderColors[i] && dataObjValueBorderColors[i][j],\n          id: dataObjIds[i] && dataObjIds[i][j]\n        });\n      }\n      dataset.push(dataObj);\n    }\n\n    if (pause) {\n      iapi._stopUpdate();\n    }\n\n    if (clear) {\n      iapi._clearChart();\n    }\n\n    if (dataStamp) {\n      iapi.config.dataStamp = dataStamp;\n    }\n\n    return updateObj;\n  },\n  /**\n   * Clears the entire chart plots\n   * @param {string} _source The source of feeding data into chart for realtime\n   */\n  _clearChart = function (_source) {\n    var iapi = this,\n      chartChildren = iapi.getChildren(),\n      xAxis = chartChildren.xAxis && chartChildren.xAxis[0],\n      dataset = getDataset(iapi),\n      catLen = xAxis.getTicksLen(),\n      visibleRange = xAxis.getVisibleConfig(),\n      maxValue = visibleRange.maxValue,\n      minValue = visibleRange.minValue,\n      stretch = catLen > maxValue ? (maxValue - minValue) : catLen,\n      realTimeConfig = iapi.config.realTimeConfig || (iapi.config.realTimeConfig = {}),\n      showRTValue = realTimeConfig.showRTValue,\n      curDataset,\n      i,\n      len = dataset.length;\n\n    realTimeConfig.clear = true;\n\n    if (dataset) {\n      if (xAxis) {\n        xAxis.categoryDelete(0, stretch, true);\n      }\n      iapi.config._sumValuesUpdated = false;\n      for (i = 0; i < len; i++) {\n        curDataset = dataset[i];\n        dataset[i].removeData(0, curDataset.components.data.length);\n        dataset[i].resetCatPos();\n      }\n      iapi._setCategories();\n    }\n    if (showRTValue && iapi._drawRealTimeValue) {\n      iapi.asyncRealTimeValueDraw();\n    }\n    iapi.fireChartInstanceEvent('ChartCleared', {\n      source: _source\n    }, [iapi.getId(), _source]);\n  },\n  _setRTmenu = function (showRTmenuItem, useMessageLog) {\n    var iapi = this,\n      hamburger = iapi.getFromEnv('hamburger'),\n      stopState = true,\n      list = [],\n      toggle = function () {\n        if (stopState) {\n          iapi._stopUpdate();\n          hamburger.getChild('listContainer').getChild('rt').configure({\n            id: 'rt',\n            name: 'Restart Update',\n            handler: function () {\n              toggle();\n            },\n            action: 'click'\n          });\n          hamburger.getChild('listContainer').getChild('rt').asyncDraw();\n          stopState = false;\n        } else {\n          iapi._restartUpdate();\n          hamburger.getChild('listContainer').getChild('rt').configure({\n            id: 'rt',\n            name: 'Stop Update',\n            handler: function () {\n              toggle();\n            },\n            action: 'click'\n          });\n          hamburger.getChild('listContainer').getChild('rt').asyncDraw();\n          stopState = true;\n        }\n      };\n\n    showRTmenuItem && list.push({\n      name: 'Clear Chart',\n      'handler': function () {\n        iapi._clearChart();\n      },\n      'action': 'click'\n    });\n    useMessageLog && list.push({\n      name: 'Show Log',\n      'handler': function () {\n        iapi.getChildren('messageLogger')[0].show();\n      },\n      'action': 'click'\n    });\n    showRTmenuItem && list.push({\n      id: 'rt',\n      name: 'Stop Update',\n      handler: function () {\n        toggle();\n      },\n      action: 'click'\n    });\n\n    list.length && hamburger.appendInMenu(list);\n  };\n\nexport { _realTimeConfigure, eiMethods, _stopUpdate, _restartUpdate, _isUpdateActive, realTimeUpdate, _RTmanageSpace, realTimeDraw, feedData, _linearDataParser, _clearChart, _setRTmenu };\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Ajax from '@fusioncharts/core/src/ajax';\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n\nconst MS_MULTIPLIER = 1000;\n\nlet UNDEF,\n  THRESHOLD_MS = 10,\n  /**\n   * Function to initialize the the DataStreamer class\n   * @param {Object} chart The chart object\n   */\n  initializeDataStreamer = function (chart) {\n    chart.registerFactory('dataStreamer', () => {\n      let ds;\n      if (DataStreamer && chart.config.realtimeEnabled) {\n        componentFactory(chart, DataStreamer, 'dataStreamer', 1);\n        ds = chart.getChildren('dataStreamer')[0];\n        ds.configure();\n        chart.addToEnv('dataStreamer', ds);\n      }\n    });\n  },\n  dataStreamerExt = {},\n  onFcInstantiated = event => {\n    let component = event.sender;\n\n    if (component.getType() === 'chartAPI') {\n      initializeDataStreamer(component);\n    }\n  };\n/**\n * Class for DataStreamer\n */\nclass DataStreamer extends ComponentInterface {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this._handlerFn = (function (_this) {\n      return function () {\n        let config = _this.config;\n        if (config) {\n          (config.rtPreInit === UNDEF) && (config.rtPreInit = false);\n          config._rtPaused && delete config._rtPaused;\n          if (!config.rtStateChanged) {\n            config.rtStateChanged = true;\n            // If the event happens to happen while rendering is inprogress, we need to force process.\n            _this.processRealtimeStateChange(arguments);\n          }\n        }\n      };\n    })(this);\n    this._handlerStop = (function (_this) {\n      return function () {\n        _this._dispose();\n      };\n    })(this);\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataStreamer';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dataStreamer';\n  }\n  /**\n   * This function is to compact the routine of clearing and re-applying a timeout\n   *\n   * @example\n   * to = resetTimeout(theFunction, 500, to);\n   *\n   * @param {Function} fn funstion to executes on a timeout\n   * @param {number} ms timeout in mili second\n   * @param {number} id timeout ID\n   * @return {number} timeout ID\n   */\n  static resetTimeout (fn, ms, id) {\n    clearTimeout(id);\n    return setTimeout(fn, ms);\n  }\n\n  /**\n   * Function to configure the dataStreamer class instance\n   * @param {Object} chartObj The chart instance\n   */\n  configure () {\n    var ds = this,\n      config = ds.config,\n      refreshMs,\n      updateMs,\n      chartObj,\n      chart = ds.getLinkedParent(),\n      realTimeConfig,\n      chartAttr = chart.getFromEnv('dataSource') && chart.getFromEnv('dataSource').chart;\n    chartObj = chart.getFromEnv('chartInstance');\n    realTimeConfig = chart.config.realTimeConfig;\n    config.clearMs = realTimeConfig.clearInterval * MS_MULTIPLIER;\n    config.updateMs = updateMs = realTimeConfig.updateInterval * MS_MULTIPLIER;\n    config.refreshMs = refreshMs = realTimeConfig.refreshInterval * MS_MULTIPLIER;\n\n    ds.addEvents();\n\n    if (refreshMs < updateMs) {\n      config.refreshMs = updateMs;\n    }\n    config.dataStamp = chartAttr.datastamp;\n    ds.config.chartObj = chartObj;\n    chartObj.jsVars && (chartObj.jsVars._rtLastUpdatedData = null); // remove data cache\n    // clear all timeouts\n    ds.updateIntervalHandler(0, true);\n    ds.refreshVisualHandler(null, null, true);\n    ds.initiateResetVisual(true);\n    config._rtAjaxLatencyStart = null; // clear latency calculations\n    config._rtAjaxLatency = null;\n    ds.addToEnv('realtimeDrawingLatency', 0);\n  }\n\n  /**\n   * Function to dispose the dataStreamer object\n   */\n  _dispose () {\n    var ds = this;\n    // clear all timeouts\n    ds.updateIntervalHandler(0, true);\n    ds.refreshVisualHandler(null, null, true);\n    ds.initiateResetVisual(true);\n    super._dispose();\n  }\n\n  /**\n   * Function which manages the entire real time ajax calls and feeding data to chart\n   */\n  processRealtimeStateChange () {\n    var ds = this,\n      config = ds.config,\n      chartObj = ds.config.chartObj,\n      state = chartObj.__state,\n      chart = ds.getLinkedParent(),\n      chartConfig = chart.config,\n      realtimeEnabled = chartConfig.realtimeEnabled,\n      dataUrl = chartConfig.realTimeConfig.dataStreamURL,\n      ajaxObj;\n\n    // In case data was set during construction, both the state-change capture events can happen to be fired before\n    // even them being registered. Hence, a special check is made here.\n    if (state.dataSetDuringConstruction && !config.rtStateChanged && config.rtPreInit === UNDEF) {\n      if (chartObj.dataReady()) {\n        config.rtStateChanged = true;\n        config.rtPreInit = true;\n      } else {\n        config.rtPreInit = false;\n      }\n    }\n\n    // If the data has not changed then the realtime initialization should not be repeated.\n    if (!config.rtStateChanged) {\n      return;\n    }\n    // reset the state changed flag to indicate that drawcomplete will re-work upon next state change.\n    config.rtStateChanged = false;\n\n    // Initialize the realtime framework.\n\n    // In case process happens before load\n    if (!chart) {\n      return;\n    }\n    ajaxObj = config._rtAjaxObj;\n\n    if (realtimeEnabled) {\n      if (config._rtPaused === UNDEF) {\n        config._rtPaused = false;\n      }\n      config._rtDataUrl = dataUrl;\n      ds.initiateResetVisual();\n      // eslint-disable-next-line new-cap\n      ajaxObj = config._rtAjaxObj || (config._rtAjaxObj = new Ajax());\n\n      ajaxObj.onSuccess || (ajaxObj.onSuccess = function () {\n        if (!ds.getFromEnv('chartConfig').realTimeConfig.dataStreamURL) {\n          return;\n        }\n        ds.setState('ajaxRequested', true);\n        ds.responseTextHandler(arguments[0]);\n        // Update latency timer\n        config._rtAjaxLatencyStart && (config._rtAjaxLatency = ((new Date()) - config._rtAjaxLatencyStart) || 0);\n        // refresh visual\n        ds.refreshVisualHandler({\n          data: config.responseText,\n          source: 'XmlHttpRequest',\n          url: config.url,\n          networkLatency: config._rtAjaxLatency\n        }, config._rtAjaxLatency + (config._firstUpdate ? (new Date() - config._firstUpdate) : 0), !ds.getFromEnv('chartConfig').realTimeConfig.dataStreamURL);\n        config._firstUpdate = UNDEF;\n        if (!config._rtPaused) {\n          if (config._rtAjaxLatency >= config.updateMs) {\n            config._rtAjaxLatency = config.updateMs - 1;\n          }\n        }\n        // re-issue realtime update.\n        ds.updateIntervalHandler(config._rtAjaxLatency, config._rtPaused);\n      });\n\n      ajaxObj.onError || (ajaxObj.onError = function () {\n        let resp = arguments[0],\n          wrapper = arguments[1],\n          url = arguments[3];\n        // Update latency timer\n        config._rtAjaxLatencyStart && (config._rtAjaxLatency = (new Date()) - config._rtAjaxLatencyStart);\n\n        ds.setState('ajaxRequested', false);\n        /**\n         * This event is raised where there is an error in performing a real-time chart data update using\n         * `dataStreamUrl` attribute.\n         *\n         * @event FusionCharts#realTimeUpdateError\n         * @group chart-realtime\n         *\n         * @param {number} source - Nature of data load request. Presently its value is 'XmlHttprequest'.\n         * @param {string} url - URL of the data source.\n         * @param {object} xmlHttpReqestObject - The object which has fetched data.\n         * @param {string} httpStatus - A number which denotes the HTTP status number when the error was raised.\n         * For example, the status will be ``404`` for URL not found.\n         */\n        chart.fireChartInstanceEvent('realTimeUpdateError', {\n          source: 'XmlHttpRequest',\n          url: url,\n          xmlHttpRequestObject: wrapper.xmlhttp,\n          error: resp,\n          httpStatus: (wrapper.xmlhttp && wrapper.xmlhttp.status) ? wrapper.xmlhttp.status : -1,\n          networkLatency: config._rtAjaxLatency\n        });\n        // Upon error, based on whether chart is alive and kicking, re-request the data or abandon realtime\n        // calls.\n        ds.updateIntervalHandler(0, !chartObj.isActive());\n      });\n\n      // This is the first (initial) realtime update request to be sent.\n      if (!config._rtPaused) {\n        ds.updateIntervalHandler(0);\n        config._firstUpdate = new Date();\n      }\n    }\n  }\n  /**\n   * function to handle response text whether it is from API or ajax response\n   * @param {string} responseText - response text\n   */\n  responseTextHandler (responseText) {\n    let ds = this,\n      config = ds.config,\n      chart = ds.getFromEnv('chart'),\n      chartConf = ds.getFromEnv('chartConfig'),\n      realtimeEnabled = chartConf.realtimeEnabled,\n      feedData = chart.feedData,\n      updateObj = chart._linearDataParser(responseText);\n    config.responseText = responseText;\n\n    if (ds.getFromEnv('chartInstance').isActive() && feedData && realtimeEnabled) {\n      config.dataStamp = updateObj.dataStamp ? updateObj.dataStamp : null;\n      chart.realTimeUpdate(updateObj);\n    }\n  }\n  /**\n   * function to initiate visual reset in certain time interval\n   * @param {boolean} kill - to kill the preocess\n   */\n  initiateResetVisual (kill = false) {\n    if (kill) {\n      clearTimeout(this.config._toClearChart);\n      return;\n    }\n    let ds = this,\n      config = ds.config,\n      chart = ds.getFromEnv('chart'),\n      resetVisual = function () {\n        chart._clearChart && chart._clearChart();\n        if (config.clearMs) {\n          config._toClearChart = DataStreamer.resetTimeout(resetVisual, config.clearMs, config._toClearChart);\n        } else {\n          clearTimeout(config._toClearChart);\n        }\n      };\n    if (!kill) {\n      if (config.clearMs) {\n        config._toClearChart = DataStreamer.resetTimeout(resetVisual, config.clearMs, config._toClearChart);\n      }\n    }\n  }\n\n  /**\n   * function to handle data update related job\n   * @param {number} latency    - latency for update data\n   * @param {boolean} kill   - whether the update job will be killed or not\n   * @param {boolean} clearJob  - whether previously registered will be cleared or not\n   */\n  updateIntervalHandler (latency = 0, kill = false) {\n    if (kill) {\n      clearTimeout(this.config && this.config._toRealtimeUpdate);\n      return;\n    }\n    let ds = this,\n      config = ds.config,\n      ajaxObj = config._rtAjaxObj,\n      skew,\n      updateMs = config.updateMs;\n\n    ds.requestData || (ds.requestData = function () {\n      let dataUrl = ds.getFromEnv('chartConfig').realTimeConfig.dataStreamURL,\n        dataStamp = config.dataStamp,\n        ajaxObject = config._rtAjaxObj,\n        url = dataUrl;\n      // append anti-cache querystring to url (a random number)\n      url += (dataUrl.indexOf('?') === -1 ? '?num=' : '&num=') + Math.random();\n      // append data stamp to the url\n      dataStamp && (url += ('&dataStamp=' + dataStamp));\n      config.url = url;\n      // If xhr object is open, then abort it. Probably because previous request did not return on time.\n      ajaxObject.open && ajaxObject.abort();\n      !!dataUrl && ajaxObject.get(url); // fetch the URL.\n      config._rtAjaxLatencyStart = (new Date());\n    });\n\n    if (updateMs <= 0) {\n      config._toRealtimeUpdate = clearTimeout(config._toRealtimeUpdate);\n      ajaxObj && ajaxObj.abort();\n      return;\n    } else if (updateMs < THRESHOLD_MS) {\n      // validate whether refreshinterval is less than threshold.\n      updateMs = THRESHOLD_MS;\n    }\n    if (!kill) {\n      skew = updateMs - latency;\n      config._toRealtimeUpdate = DataStreamer.resetTimeout(ds.requestData, skew, config._toRealtimeUpdate);\n    }\n  }\n  /**\n   * function to handle visual refresh job\n   * @param {Object} info       - information of source from where visual refreshing is initiated\n   * @param {number} _latency    - latency for refresh visual\n   * @param {boolean} kill   - whether the draw job will be reIssued or not\n   */\n  refreshVisualHandler (info, _latency = 0, kill = false) {\n    if (kill) {\n      clearTimeout(this.config._toRealtimeDraw);\n      this._clearCachedData();\n      this.config.isAlive = false;\n      return;\n    }\n    let ds = this,\n      config = ds.config,\n      refreshMs = config.refreshMs,\n      chart = ds.getFromEnv('chart'),\n      chartConf = ds.getFromEnv('chartConfig'),\n      realtimeEnabled = chartConf.realtimeEnabled,\n      isActive = ds.getFromEnv('chartInstance').isActive(),\n      skew,\n      now = new Date().getTime(),\n      feedData = chart.feedData,\n      latency = _latency;\n\n    if (!ds.getState('ajaxRequested') || !config.lastRTDrawAt) {\n      config.lastRTDrawAt = now;\n    }\n    ds.config.sourceInfo = info;\n    ds._rtDraw || (ds._rtDraw = function () {\n      config.isAlive = false;\n      config.lastRTDrawAt = new Date().getTime();\n      chart.realTimeDraw(ds.config.sourceInfo);\n    });\n    if (isActive && feedData && realtimeEnabled && !kill && !config.isAlive) {\n      config.isAlive = true;\n      latency += (now - config.lastRTDrawAt) + ds.getFromEnv('realtimeDrawingLatency');\n      skew = (refreshMs - latency) > 0 ? (refreshMs - latency) : 0;\n      config._toRealtimeDraw = DataStreamer.resetTimeout(ds._rtDraw, skew, config._toRealtimeDraw);\n    }\n  }\n  _clearCachedData () {\n    this.getFromEnv('chart').config.cachedArrivedJSON = {};\n  }\n  /**\n   * Function to stop the realTime update\n   */\n  _stopUpdate () {\n    var ds = this,\n      config = ds.config;\n    // clear all timeouts\n    ds.updateIntervalHandler(0, true);\n    ds.refreshVisualHandler(null, null, true);\n    ds.initiateResetVisual(true);\n    config._rtAjaxObj && config._rtAjaxObj.abort();\n    config._rtPaused = true;\n    ds.setState('ajaxRequested', false);\n  }\n\n  /**\n   * Function to restart the realTime update\n   */\n  _restartUpdate () {\n    var ds = this,\n      config = ds.config;\n\n    if (config._rtDataUrl && config._rtPaused) {\n      config._rtPaused = false;\n      config.rtStateChanged = true;\n      ds.processRealtimeStateChange();\n    }\n  }\n  /**\n   * Function to determine whether rt-update is active or not\n   * @return {boolean} true/false\n   */\n  _isUpdateActive () {\n    return !this.config._rtPaused;\n  }\n\n  /**\n   * Function to add event listners\n   */\n  addEvents () {\n    var ds = this,\n      chart = ds.getLinkedParent(),\n      config = ds.config;\n    if (!config.eventsAdded) {\n      ds.addExtEventListener('renderComplete', ds._handlerFn, chart.getFromEnv('chartInstance'));\n      ds.addExtEventListener('nodatatodisplay', ds._handlerStop, chart.getFromEnv('chartInstance'));\n    }\n    config.eventsAdded = true;\n  }\n}\n\n/**\n * Wrapper method to provide FusionCHarts to dataStreamer\n *\n * @param {any} FusionCharts The FusionCharts class\n */\nfunction dataStreamer (FusionCharts) {\n  // Adding event listner for realTime charts\n  FusionCharts.addEventListener('instantiated', onFcInstantiated);\n}\n\ndataStreamerExt = {\n  extension: dataStreamer,\n  name: 'DataStreamer',\n  type: 'extension',\n  requiresFusionCharts: true\n};\n\nexport default dataStreamerExt;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  pluckNumber,\n  pluck,\n  COMMASTRING,\n  COMMASPACE,\n  BLANK,\n  extend2,\n  toRaphaelColor,\n  getValidValue,\n  preDefStr,\n  parseConfiguration,\n  parseUnsafeString,\n  parseTooltext,\n  convertColor,\n  getDarkColor,\n  getLightColor\n} from '@fusioncharts/core/src/lib';\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport bulbAnimation from './index.animation';\nvar UNDEF,\n  BLANKSTRING = BLANK,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  showHoverEffectStr = preDefStr.showHoverEffectStr,\n  visibleStr = preDefStr.visibleStr,\n  ROUND = preDefStr.ROUND,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  FILLMIXDARK10 = '{dark-10}',\n  EVENTARGS = 'eventArgs',\n  SETROLLOVERATTR = 'setRolloverAttr',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  POINTER = 'pointer',\n  EASE_OUT = 'easeOut',\n  math = Math,\n  mathMin = math.min,\n  win = window,\n  userAgent = win.navigator.userAgent,\n  isIE = /msie/i.test(userAgent) && !win.opera,\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')',\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {string} groupName                Name of the group to be created.\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (groupName, parentContainer, dataset) {\n    var animationManager = dataset.getFromEnv('animationManager');\n    return animationManager.setAnimation({\n      el: 'group',\n      attr: { name: groupName },\n      container: parentContainer,\n      component: dataset,\n      label: 'group'\n    });\n  };\naddDep({\n  name: 'bulbAnimation',\n  type: 'animationRule',\n  extension: bulbAnimation\n});\n/**\n * Creates dataset class for Bulb\n */\nclass BulbDataset extends ComponentInterface {\n  /**\n   * Constructor function to initialise attributes of BulbDataset object\n   */\n  constructor () {\n    super();\n\n    this.addData = function () {\n      // Blank fn to Override it's parent method\n    };\n    this.removeData = function () {\n      // Blank fn to Override it's parent method\n    };\n    this.components = {};\n  }\n\n  /**\n   * Returns the type of the component\n   * @return {string} The type of the component, in this case a dataset.\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Returns the name of the component\n   * @return {string} The name of the component.\n   */\n  getName () {\n    return 'bulb';\n  }\n  /**\n   * Calculates space management of bulb plot\n   * @param {number} availableHeight maximum available height plot can take\n   * @return {Object} height needed for bulb plot\n   */\n  _manageSpace (availableHeight) {\n    var dataSet = this,\n      conf = dataSet.config,\n      // JSONData = dataSet.JSONData,\n      // setDataArr = JSONData.data,\n      dataStore = dataSet.components.data,\n      dataObj,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      smartDataLabel,\n      style = chartConfig.dataLabelStyle,\n      lineHeight = pluckNumber(parseInt(style.lineHeight, 10), 12),\n      maxAllowedHeight = availableHeight,\n      valuePadding = chartConfig.valuepadding,\n      heightUsed = 0,\n      config;\n\n    // setData = setDataArr[0];\n    dataObj = dataStore[0];\n    config = dataObj && dataObj.config;\n\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    smartLabel.setStyle(style);\n    if (config && config.displayValue !== BLANKSTRING && !chartConfig.placevaluesinside) {\n      if (conf.showValue) {\n        smartDataLabel = smartLabel.getOriSize(config.displayValue);\n        // special fix for space string\n        /** @todo will be removed when smartLabel will be able to handle it */\n        if (config.displayValue === BLANK) {\n          smartDataLabel = {\n            height: lineHeight\n          };\n        }\n\n        if (smartDataLabel.height > 0) {\n          heightUsed = smartDataLabel.height + valuePadding;\n        }\n\n        if (heightUsed > maxAllowedHeight) {\n          heightUsed = maxAllowedHeight;\n        }\n      }\n    }\n\n    conf.heightUsed = heightUsed;\n    return {\n      top: 0,\n      bottom: heightUsed\n    };\n  }\n\n  /**\n   * Configure dataset component and parse default values\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   * @return {boolean} Indicates whether the configuration was successful or not\n   */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.config.JSONData = datasetJSON;\n    var dataSet = this,\n      JSONData = dataSet.config.JSONData,\n      userConfig = extend2({}, JSONData),\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      chartConfig = chart.config,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      enableAnimation;\n\n    parseConfiguration(userConfig, conf, chart.config, { data: true });\n\n    // is3D = pluckNumber(chartAttr.is3D, 1);\n\n    // conf.autoScale = pluckNumber(chartAttr.autoscale, 1);\n\n    conf.origW = pluckNumber(chartAttr.origw, chartConfig.autoscale\n      ? chart.config.origRenderWidth : chartConfig.width || chart.config.origRenderWidth);\n    conf.origH = pluckNumber(chartAttr.origh, chartConfig.autoscale\n      ? chart.config.origRenderHeight : chartConfig.height || chart.config.origRenderHeight);\n\n    // showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.setToolText = getValidValue(parseUnsafeString(pluck(chartAttr.plottooltext, UNDEF), false));\n    conf.useColorNameAsValue = pluckNumber(chartAttr.usecolornameasvalue, 0);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.enableAnimation = enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n    conf.showValue = pluckNumber(chartAttr.showvalue, 1);\n\n    dataSet._setConfigure();\n  }\n\n  /**\n   * Configure data level attributes\n   * @param {Object} newDataset updated JSON data\n   */\n  _setConfigure (newDataset) {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      chartConfig = chart.config,\n      JSONData = dataSet.config.JSONData,\n      setDataArr = newDataset || JSONData.data,\n      setDataLen = setDataArr && setDataArr.length,\n      len = (newDataset && newDataset.data.length) || setDataLen,\n      jsonData = chart.getFromEnv('dataSource'),\n      chartAttr = jsonData.chart,\n      colorM = dataSet.getFromEnv('color-manager'),\n      showTooltip = pluckNumber(chartAttr.showtooltip, 1),\n      // parseUnsafeString = lib.parseUnsafeString,\n      tooltipSepChar = parseUnsafeString(pluck(chartAttr.tooltipsepchar, COMMASPACE)),\n      // parseTooltext = lib.parseTooltext,\n      formatedVal,\n      toolText,\n      showHoverEffect = chartConfig.showhovereffect,\n      dataStore = dataSet.components.data,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      label,\n      setDisplayValue,\n      is3D = pluckNumber(chartAttr.is3d, 1),\n      i,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      colorRangeGetter,\n      colorCodeObj,\n      gaugeFillAlpha,\n      colorName,\n      gaugeBorderColorCode,\n      gaugeBorderAlpha,\n      hasGaugeBorderMix,\n      fillColor,\n      gaugeBorderColor,\n      gaugeBorderThickness,\n      gaugeFillHoverColor,\n      gaugeFillHoverAlpha,\n      showGaugeBorderOnHover,\n      gaugeBorderHoverColor,\n      gaugeBorderHoverAlpha,\n      gaugeBorderHoverThickness,\n      is3DOnHover,\n      hasHoberFillMix,\n      hasBorderHoverMix,\n      displayValue,\n      getPointColor = function (color, alpha, isBulb3D) {\n        if (!isBulb3D) {\n          return convertColor(color, alpha);\n        }\n        return {\n          FCcolor: {\n            cx: 0.4,\n            cy: 0.4,\n            r: '80%',\n            color: getLightColor(color, 65) + COMMASTRING + getLightColor(color, 75) +\n              COMMASTRING + getDarkColor(color, 65),\n            alpha: alpha + COMMASTRING + alpha + COMMASTRING + alpha,\n            ratio: '0,30,70', // BGRATIOSTRING,\n            radialGradient: true\n          }\n        };\n      },\n      hoverAttr,\n      hoverAnimAttr,\n      outAttr;\n\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n\n    // Parsing the attributes and values at set level.\n    for (i = 0; i < len; i++) {\n      if (newDataset) {\n        setData = (newDataset && newDataset.data[i]);\n      } else {\n        setData = setDataArr[i];\n      }\n\n      dataObj = dataStore[i];\n\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {};\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n      config.setValue = setValue = numberFormatter.getCleanValue(setData.value) || 0;\n      formatedVal = numberFormatter.dataLabels(setValue);\n      setDisplayValue = getValidValue(parseUnsafeString(setData.displayvalue));\n      // Get colorRange from the env of chart\n      config.colorRangeGetter = colorRangeGetter = dataSet.getFromEnv('colorRange');\n      colorCodeObj = colorRangeGetter.getColorObj(config.setValue);\n      if (!colorRangeGetter.colorArr.length) {\n        colorCodeObj = colorRangeGetter.config.defaultObj;\n      }\n      // colorCodeObj = colorCodeObj.colorObj || colorCodeObj.prevObj || colorCodeObj.nextObj;\n      gaugeFillAlpha = pluckNumber(chartAttr.gaugefillalpha, colorCodeObj.alpha, 100);\n      colorName = parseUnsafeString(pluck(colorCodeObj.label, colorCodeObj.name));\n      gaugeBorderColorCode = pluck(colorCodeObj.bordercolor, chartAttr.gaugebordercolor,\n        getDarkColor(colorCodeObj.code, 70), '000000');\n      gaugeBorderAlpha = pluckNumber(colorCodeObj.borderalpha, chartAttr.gaugeborderalpha, '90') * gaugeFillAlpha /\n        100;\n      hasGaugeBorderMix = /\\{/.test(gaugeBorderColorCode);\n      gaugeBorderColorCode = hasGaugeBorderMix ? colorM.parseColorMix(pluck(colorCodeObj.bordercolor,\n        colorCodeObj.code),\n      gaugeBorderColorCode)[0] : gaugeBorderColorCode;\n      config.gaugeBorderColor = gaugeBorderColor = convertColor(gaugeBorderColorCode, gaugeBorderAlpha);\n      config.gaugeBorderThickness = gaugeBorderThickness =\n        chartConfig.showgaugeborder ? pluckNumber(chartAttr.gaugeborderthickness, 1) : 0;\n      config.rawFillColor = colorCodeObj.code;\n      config.fillColor = fillColor = getPointColor(colorCodeObj.code, gaugeFillAlpha, is3D);\n\n      if (showHoverEffect !== 0 && (showHoverEffect || chartAttr.gaugefillhovercolor ||\n        chartAttr.plotfillhovercolor || chartAttr.gaugefillhoveralpha ||\n        chartAttr.plotfillhoveralpha || chartAttr.gaugefillhoveralpha === 0 ||\n        chartAttr.is3donhover || chartAttr.is3donhover === 0 || chartAttr.showgaugeborderonhover ||\n        chartAttr.showgaugeborderonhover === 0 || chartAttr.gaugeborderhovercolor ||\n        chartAttr.gaugeborderhoveralpha || chartAttr.gaugeborderhoveralpha === 0 ||\n        chartAttr.gaugeborderhoverthickness || chartAttr.gaugeborderhoverthickness === 0)) {\n        showHoverEffect = true;\n        gaugeFillHoverColor = pluck(chartAttr.gaugefillhovercolor,\n          chartAttr.plotfillhovercolor, FILLMIXDARK10);\n        gaugeFillHoverAlpha = pluckNumber(chartAttr.gaugefillhoveralpha, chartAttr.plotfillhoveralpha);\n        showGaugeBorderOnHover = pluckNumber(chartAttr.showgaugeborderonhover);\n        if (showGaugeBorderOnHover === UNDEF) {\n          if (chartAttr.gaugeborderhovercolor || chartAttr.gaugeborderhoveralpha ||\n            chartAttr.gaugeborderhoveralpha === 0 || chartAttr.gaugeborderhoverthickness ||\n            chartAttr.gaugeborderhoverthickness === 0) {\n            showGaugeBorderOnHover = 1;\n          } else {\n            showGaugeBorderOnHover = chartConfig.showgaugeborder;\n          }\n        }\n        gaugeBorderHoverColor = pluck(chartAttr.gaugeborderhovercolor, FILLMIXDARK10);\n        gaugeBorderHoverAlpha = pluckNumber(chartAttr.gaugeborderhoveralpha);\n        gaugeBorderHoverThickness =\n          showGaugeBorderOnHover ? pluckNumber(chartAttr.gaugeborderhoverthickness,\n            gaugeBorderThickness || 1) : 0;\n        is3DOnHover = !!pluckNumber(chartAttr.is3donhover, is3D);\n        hoverAttr = {};\n        outAttr = {};\n        if (gaugeBorderThickness !== gaugeBorderHoverThickness) {\n          hoverAttr['stroke-width'] = gaugeBorderHoverThickness;\n          outAttr['stroke-width'] = gaugeBorderThickness;\n        }\n        outAttr.fill = toRaphaelColor(fillColor);\n        hasHoberFillMix = /\\{/.test(gaugeFillHoverColor);\n        gaugeFillHoverColor = hasHoberFillMix ? colorM.parseColorMix(colorCodeObj.code,\n          gaugeFillHoverColor)[0] : pluck(gaugeFillHoverColor, colorCodeObj.code);\n        hoverAttr.fill = toRaphaelColor(getPointColor(gaugeFillHoverColor,\n          pluckNumber(gaugeFillHoverAlpha, gaugeFillAlpha), is3DOnHover));\n        if (gaugeBorderHoverThickness) {\n          outAttr.stroke = gaugeBorderColor;\n          hasBorderHoverMix = /\\{/.test(gaugeBorderHoverColor);\n          hoverAttr.stroke = convertColor(hasBorderHoverMix ? colorM.parseColorMix(hasGaugeBorderMix\n            ? gaugeFillHoverColor : gaugeBorderColorCode, gaugeBorderHoverColor)[0]\n            : gaugeBorderHoverColor, pluckNumber(gaugeBorderHoverAlpha, gaugeBorderAlpha));\n        }\n      }\n      config.setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext,\n        JSONData.plottooltext, chartAttr.plottooltext), false));\n\n      if (!showTooltip) {\n        toolText = false;\n      } else if (config.setTooltext !== UNDEF) {\n        toolText = parseTooltext(config.setTooltext, [1, 2], {\n          formattedValue: formatedVal\n        }, setData, chartAttr);\n      } else {\n        // Determine the dispalay value then\n        toolText = conf.useColorNameAsValue ? colorName : (formatedVal === null ? false\n          : (label !== UNDEF) ? label + tooltipSepChar +\n            formatedVal : formatedVal);\n      }\n      // Create the displayvalue\n      if (setDisplayValue !== UNDEF) {\n        displayValue = setDisplayValue;\n      } else {\n        // Determine the dispalay value then\n        displayValue = setData.label || (conf.useColorNameAsValue ? colorName : formatedVal);\n      }\n      config.toolText = toolText;\n      config.displayValue = displayValue;\n      config.rolloverProperties = {\n        enabled: showHoverEffect,\n        hoverAttr: hoverAttr,\n        hoverAnimAttr: hoverAnimAttr,\n        outAttr: outAttr\n      };\n      // tempPlotfillAngle && (plotfillAngle = tempPlotfillAngle);\n    }\n  }\n\n  /**\n   * Update data with new JSON\n   * @param {Object} dataObj updated parsd JSON\n   * @param {number} index dataset index\n   * @param {boolean} draw decides whether to draw datset instantly or not\n   */\n  updateData (dataObj, index, draw) {\n    var dataSet = this;\n\n    dataSet._setConfigure(dataObj, index);\n\n    if (draw) {\n      dataSet.asynDraw();\n    }\n  }\n\n  /**\n   * Draw bulb plot\n   */\n  draw () {\n    var dataSet = this,\n      dataStore = dataSet.components.data,\n      chart = dataSet.getFromEnv('chart'),\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      conf = dataSet.config,\n      // animationObj = chart.get(configStr, animationObjStr),\n      animType = EASE_OUT,\n      // animObj = animationObj.animObj,\n      // dummyObj = animationObj.dummyObj,\n      // animationDuration = animationObj.duration,\n\n      chartConfig = chart.config,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      canvasHeight = chartConfig.canvasHeight,\n      canvasWidth = chartConfig.canvasWidth,\n      parentContainer = chart.getChildContainer().plotGroup,\n      container = dataSet.getContainer('container'),\n      trackerContainer = dataSet.getContainer('trackerContainer'),\n      // layers = chart.graphics,\n      trackerLayer = chart.getChildContainer('trackerGroup'),\n      setValue,\n      attr,\n      toolText,\n      tooltipVal,\n      dataLabelObj,\n      xPos,\n      yPos,\n      radius,\n      bulb,\n      bulbCheck,\n      dataObj = dataStore[0],\n      graphic,\n      label,\n      labelCheck,\n      config = dataObj && dataObj.config,\n      gaugeOriginX = chartConfig.gaugeoriginx,\n      gaugeOriginY = chartConfig.gaugeoriginy,\n      gaugeRadius = chartConfig.gaugeradius,\n      hasGaugeOriginX = chartConfig.hasgaugeoriginx,\n      hasGaugeOriginY = chartConfig.hasgaugeoriginy,\n      hasGaugeRadius = chartConfig.hasgaugeradius,\n      labelY,\n      vAlign,\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      dataLabelContainer = dataSet.getContainer('dataLabelContainer'),\n      style = chart.config.dataLabelStyle,\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n      // isNewElement = false,\n      trackerConfig;\n    // css = {\n    //     fontFamily: style.fontFamily,\n    //     fontSize: style.fontSize,\n    //     lineHeight: style.lineHeight,\n    //     fontWeight: style.fontWeight,\n    //     fontStyle: style.fontStyle\n    // };\n\n    smartLabel.setStyle(style);\n    if (!container) {\n      container = dataSet.addContainer('container', createGroup('bulb', parentContainer, dataSet));\n    }\n    if (!trackerContainer) {\n      trackerContainer = dataSet.addContainer('trackerContainer', createGroup('bulb-hot', trackerLayer, dataSet));\n    }\n\n    // Creating the datalabel container if not created\n    if (!dataLabelContainer) {\n      dataLabelContainer = dataSet.addContainer('dataLabelContainer', animationManager.setAnimation({\n        el: 'group',\n        attr: { name: 'datalabel' },\n        label: 'labelGroup',\n        component: dataSet\n      }));\n    }\n\n    // Append the container to datalabelslayer\n    if (dataLabelsLayer) {\n      dataLabelsLayer.appendChild(dataLabelContainer);\n    }\n    trackerConfig = dataObj.trackerConfig = {};\n    setValue = config.setValue;\n    toolText = config.toolText;\n    trackerConfig.eventArgs = {\n      value: setValue,\n      displayValue: config.displayValue,\n      toolText: !toolText ? '' : toolText,\n      color: config.rawFillColor\n    };\n    if (!dataObj.graphics) {\n      dataObj.graphics = {};\n    }\n    gaugeOriginX = hasGaugeOriginX !== UNDEF ? (gaugeOriginX * conf.scaleFactor)\n      : canvasLeft + (canvasWidth / 2);\n    // (hasGaugeOriginX !== UNDEF) && (gaugeOriginX *= conf.scaleFactor);\n    gaugeOriginY = hasGaugeOriginY !== UNDEF ? (gaugeOriginY * conf.scaleFactor)\n      : canvasTop + (canvasHeight / 2);\n    // (hasGaugeOriginY !== UNDEF) && (gaugeOriginY *= conf.scaleFactor);\n    xPos = gaugeOriginX;\n    yPos = gaugeOriginY;\n    radius = hasGaugeRadius !== UNDEF ? (gaugeRadius * conf.scaleFactor)\n      : mathMin(canvasWidth / 2, canvasHeight / 2);\n    // (hasGaugeRadius !== UNDEF) && (radius *= conf.scaleFactor);\n\n    attr = {\n      cx: xPos,\n      cy: yPos,\n      r: radius,\n      'stroke-linecap': ROUND,\n      stroke: toRaphaelColor(config.gaugeBorderColor),\n      'stroke-width': config.gaugeBorderThickness,\n      fill: toRaphaelColor(config.fillColor)\n    };\n    bulbCheck = dataObj.graphics.element;\n    bulb = animationManager.setAnimation({\n      el: bulbCheck || 'circle',\n      attr: attr,\n      container: container,\n      component: dataSet,\n      animType: animType,\n      label: 'circle'\n    });\n    if (!bulbCheck) {\n      dataObj.graphics.element = bulb;\n    }\n\n    trackerConfig.attr = {\n      cx: xPos,\n      cy: yPos,\n      r: radius,\n      cursor: config.setLink ? POINTER : BLANK,\n      stroke: TRACKER_FILL,\n      'stroke-width': config.plotBorderThickness,\n      fill: TRACKER_FILL,\n      visibility: visibleStr\n    };\n    /*\n             * If the tooltips are not present then they are created over the hot element,\n             * else only attributes are set for the existing tooltips.\n             */\n    // hotElement = dataObj.graphics.hotElement;\n    // if (!hotElement) {\n    //     hotElement = dataObj.graphics.hotElement = paper.circle(attr, trackerContainer);\n    //     isNewElement = true;\n    // }\n    // else {\n    //     hotElement = dataObj.graphics.hotElement.attr(attr);\n    // }\n\n    // hotElement\n    //     .data(EVENTARGS, eventArgs)\n    //     .data(SETROLLOVERATTR, rolloverProperties.hoverAttr)\n    //     .data(SETROLLOUTATTR, rolloverProperties.outAttr);\n\n    // if (isNewElement) {\n    //     hotElement\n    //         .on('fc-click', clickFunc)\n    //         .hover(\n    //             rolloverResponseSetter(bulb),\n    //             rolloutResponseSetter(bulb)\n    //         );\n    // }\n\n    graphic = dataObj.graphics;\n    labelCheck = graphic.label;\n\n    if (!chartConfig.placevaluesinside) {\n      labelY = yPos + radius + chartConfig.valuepadding;\n      vAlign = POSITION_TOP;\n    } else {\n      labelY = yPos;\n      vAlign = POSITION_MIDDLE;\n    }\n\n    if ((config.setValue !== BLANKSTRING) && conf.showValue) {\n      dataLabelObj = smartLabel.getSmartText(config.displayValue, chartConfig.width - chartConfig.chartleftmargin - chartConfig.chartrightmargin, +chartConfig.height - labelY - chartConfig.chartbottommargin);\n      tooltipVal = dataLabelObj.tooltext || BLANKSTRING;\n      attr = {\n        text: dataLabelObj.text,\n        'text-anchor': POSITION_MIDDLE,\n        x: gaugeOriginX,\n        y: labelY,\n        // title: (bulbProperties.originalText || BLANK),\n        'vertical-align': vAlign,\n        fill: style.color,\n        direction: config.textDirection,\n        'text-bound': [style.backgroundColor, style.borderColor,\n          style.borderThickness, style.borderPadding,\n          style.borderRadius, style.borderDash]\n      };\n\n      label = animationManager.setAnimation({\n        el: labelCheck || 'text',\n        animType: animType,\n        attr: attr,\n        label: 'text',\n        container: dataLabelContainer,\n        component: dataSet\n      });\n      label.outlineText(conf.showTextOutline, attr.fill);\n      if (!labelCheck) {\n        graphic.label = label;\n      }\n      if (chartConfig.showToolTip) {\n        toolTipController.enableToolTip(label, tooltipVal);\n      } else {\n        toolTipController.disableToolTip(label);\n      }\n    }\n    conf.showValue ? graphic.label && graphic.label.show() : graphic.label && graphic.label.hide();\n    dataSet.drawTracker();\n  }\n  /**\n   * Draw tracker of bulb plot\n   */\n  drawTracker () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      components = dataSet.components,\n      dataStore = components.data,\n      chartConfig = chart.config,\n      showHoverEffect = chartConfig.plothovereffect,\n      trackerContainer = dataSet.getContainer('trackerContainer'),\n      trackerConfig,\n      config,\n      dataObj,\n      setElement,\n      hotElemCreated = false,\n      hotElement,\n      hotElementCheck,\n      attr,\n      // Fired when clicked over the hot elements.\n      clickFunc = function (setDataArr) {\n        var ele = this;\n        chart.plotEventHandler(ele, setDataArr);\n      },\n      // Fired on mouse-in over the hot elements.\n      rolloverResponseSetter = function (elem) {\n        return function (data) {\n          var ele = this,\n            elData = ele.getData(),\n            setRolloverAttr = elData.setRolloverAttr;\n          // Check whether the plot is in dragged state or not if\n          // drag then dont fire rolloverevent\n          if (elData.showHoverEffect !== 0 && elData.draged !== true) {\n            if (setRolloverAttr.fill) {\n              animationManager.setAnimationState('mouseover');\n              animationManager.setAnimation({\n                el: elem,\n                attr: setRolloverAttr,\n                component: dataSet\n              });\n            }\n            chart.plotEventHandler(ele, data, ROLLOVER);\n          }\n        };\n      },\n\n      // Fired on mouse-out over the hot elements.\n      rolloutResponseSetter = function (elem) {\n        return function (data) {\n          var ele = this,\n            elData = ele.getData(),\n            setRolloutAttr = elData.setRolloutAttr;\n          // Check whether the plot is in draggedstate or not if drag then dont fire rolloutevent\n          if (elData.showHoverEffect !== 0 && elData.draged !== true) {\n            if (setRolloutAttr.fill) {\n              animationManager.setAnimationState('mouseout');\n              animationManager.setAnimation({\n                el: elem,\n                attr: setRolloutAttr,\n                component: dataSet\n              });\n            }\n            chart.plotEventHandler(ele, data, ROLLOUT);\n          }\n        };\n      };\n\n    // Create tracker elements.\n    dataObj = dataStore[0];\n    config = dataObj && dataObj.config;\n    trackerConfig = dataObj.trackerConfig;\n    setElement = dataObj.graphics.element;\n    attr = trackerConfig.attr;\n    hotElementCheck = dataObj.graphics.hotElement;\n    if (attr) {\n      /*\n       * If the tooltips are not present then they are created over the hot element,\n       * else only attributes are set for the existing tooltips.\n       */\n      hotElement = animationManager.setAnimation({\n        el: hotElementCheck || 'circle',\n        attr: attr,\n        container: trackerContainer,\n        component: dataSet,\n        label: 'tracker'\n      });\n\n      if (!hotElementCheck) {\n        dataObj.graphics.hotElement = hotElement;\n        hotElemCreated = true;\n      }\n\n      // Hover effects and click function is binded to the hot element if present else the set element.\n      (hotElement || setElement)\n        .data(EVENTARGS, trackerConfig.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, config.rolloverProperties.hoverAttr || {})\n        .data(SETROLLOUTATTR, config.rolloverProperties.outAttr || {});\n      toolTipController.enableToolTip((hotElement || setElement), trackerConfig.eventArgs.toolText);\n\n      if (hotElemCreated || config.elemCreated) {\n        (hotElement || setElement)\n          .on('fc-click', clickFunc)\n          .hover(\n            rolloverResponseSetter(setElement),\n            rolloutResponseSetter(setElement)\n          );\n      }\n    }\n  }\n}\nexport default BulbDataset;\n","export default {\n  'initial.dataset.bulb': function () {\n    return {\n      'circle.appearing': function (inputJSON) {\n        return [{\n          initialAttr: {\n            cx: inputJSON.attr.cx,\n            cy: inputJSON.attr.cy,\n            r: 0\n          },\n          slot: 'plot'\n        }];\n      },\n      'tracker.appearing': null,\n      'circle.updating': function (inputJSON) {\n        return [{\n          initialAttr: {\n            cx: inputJSON.attr.cx,\n            cy: inputJSON.attr.cy,\n            r: inputJSON.attr.r\n          },\n          slot: 'plot'\n        }];\n      },\n      'labelGroup.appearing': function () {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","import { datasetFactory } from '@fusioncharts/core/src/lib';\nexport default function (chart) {\n  var dataObj = chart.getFromEnv('dataSource'),\n    value = dataObj.value,\n    target = dataObj.target,\n    DSClass,\n    dataOnlyArr = [],\n    datasetJSON = {};\n\n  dataOnlyArr.push({\n    value: value,\n    target: target\n  });\n  datasetJSON.data = dataOnlyArr;\n\n  DSClass = chart.getDSdef();\n  datasetFactory(chart, DSClass, 'dataset', 1, [datasetJSON]);\n}\n","import Cylinder from '@fusioncharts/widgets/src/chart/cylinder';\nexport default Cylinder;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport {\n  HUNDREDSTRING,\n  pluck,\n  pluckNumber,\n  extend2,\n  defaultGaugePaletteOptions,\n  preDefStr,\n  convertColor,\n  getLightColor\n} from '@fusioncharts/core/src/lib';\nimport LinearGauge from '../_internal/lineargauge';\nimport CylinderDataset from '../../dataset/cylinder';\nimport datasetFactory from '../../factories/vled-dataset';\nvar colorStrings = preDefStr.colors,\n  COLOR_FFFFFF = colorStrings.FFFFFF,\n  gaugeFillColorStr = preDefStr.gaugeFillColorStr,\n  gaugeBorderColorStr = preDefStr.gaugeBorderColorStr,\n  UNDEFINED,\n  defined = function (obj) {\n    return obj !== UNDEFINED && obj !== null;\n  },\n  DS_TYPE = 'cylinder',\n  RIGHT = 'right',\n  LEFT = 'left';\n/**\n * Class for cylinder chart\n * @class Cylinder\n * @extends {Thermometer}\n */\nclass Cylinder extends LinearGauge {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Cylinder';\n  }\n  /**\n   * Creates an instance of Cylinder.\n   * @memberof Cylinder\n   */\n  constructor () {\n    super();\n    this.defaultPaletteOptions = extend2(extend2({}, defaultGaugePaletteOptions), {\n      gaugeBorderColor: ['545454', '60634E', '415D6F', '845001', '68001B'],\n      gaugeFillColor: ['CCCCCC', 'ADB68F', 'E1F5FF', 'FDB548', 'FF7CA0'],\n      periodColor: ['EEEEEE', 'ECEEE6', 'E6ECF0', 'FFF4E6', 'FFF2F5']\n    }, false, true);\n    this.glasscolor = COLOR_FFFFFF;\n    this.showRTvalue = false;\n    this.canvasPadding = false;\n    this.isHorizontal = false;\n    this.config.isAxisOpposite = true;\n    this.config.scalePosition = RIGHT;\n    this.config.canBeScalePosition = LEFT;\n    this.hasCanvas = true;\n    this.drawPlotlines = false;\n    this.drawPlotBands = false;\n    this.isAxisReverse = false;\n    this.isRealTime = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Cylinder';\n  }\n  /**\n   * Sets default configuration\n   * @memberof Cylinder\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.alignCaptionWithCanvas = 1;\n    config.defaultDatasetType = DS_TYPE;\n    config.hasLegend = false;\n    config.skipCanvasDrawing = true;\n  }\n  /**\n   * To parse special configuration\n   * @memberof Cylinder\n   */\n  _parseSpecialConfig () {\n    var iapi = this,\n      chartConfig = iapi.config,\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartOptions = dataObj.chart,\n      numberFormatter = iapi.getFromEnv('number-formatter'),\n      colorM = iapi.getFromEnv('color-manager'),\n      gaugeBorderAlpha;\n\n    chartConfig.use3DLighting = pluckNumber(chartOptions.use3dlighting, 1);\n    chartConfig.gaugeOriginX = pluckNumber(chartOptions.thmoriginx, chartOptions.cyloriginx,\n      chartOptions.gaugeoriginx);\n    chartConfig.gaugeOriginY = pluckNumber(chartOptions.thmoriginy, chartOptions.cyloriginy,\n      chartOptions.gaugeoriginy);\n    chartConfig.gaugeRadius = pluckNumber(numberFormatter.getCleanValue(pluckNumber(chartOptions.thmbulbradius,\n      chartOptions.cylradius, chartOptions.gaugeradius), true));\n    chartConfig.gaugeHeight = pluckNumber(numberFormatter.getCleanValue(pluckNumber(chartOptions.thmheight,\n      chartOptions.cylheight, chartOptions.gaugeheight), true));\n\n    chartConfig.origW = pluckNumber(chartOptions.origw);\n    chartConfig.origH = pluckNumber(chartOptions.origh);\n\n    // set the falg whether the measurements are defined by user or not\n    chartConfig.xDefined = defined(chartConfig.gaugeOriginX);\n    chartConfig.yDefined = defined(chartConfig.gaugeOriginY);\n    chartConfig.rDefined = defined(chartConfig.gaugeRadius);\n    chartConfig.hDefined = defined(chartConfig.gaugeHeight);\n\n    chartConfig.gaugeFillColor = pluck(chartOptions.gaugefillcolor, chartOptions.cylfillcolor,\n      colorM.getColor(gaugeFillColorStr));\n    chartConfig.gaugeFillAlpha = pluckNumber(chartOptions.gaugefillalpha,\n      chartOptions.cylfillalpha, HUNDREDSTRING);\n\n    chartConfig.gaugeYScale = pluckNumber(chartOptions.cylyscale, chartOptions.gaugeyscale, 30);\n\n    if (chartConfig.gaugeYScale > 50 || chartConfig.gaugeYScale < 0) {\n      chartConfig.gaugeYScale = 30;\n    }\n    chartConfig.gaugeYScale = chartConfig.gaugeYScale / 100;\n\n    // Gauge Border properties\n    chartConfig.showGaugeBorder = pluckNumber(chartOptions.showgaugeborder, 1);\n    gaugeBorderAlpha = chartConfig.showGaugeBorder ? pluckNumber(chartOptions.gaugeborderalpha, 40) : 0;\n    // We are using 40 for default alpha of cylender Gauge Border\n    chartConfig.gaugeBorderColor = convertColor(pluck(chartOptions.gaugebordercolor,\n      colorM.getColor(gaugeBorderColorStr)), gaugeBorderAlpha);\n    chartConfig.gaugeBorderThickness = pluckNumber(chartOptions.gaugeborderthickness, 1);\n\n    // Thermometer Glass color\n    chartConfig.gaugeContainerColor = pluck(chartOptions.cylglasscolor,\n      getLightColor(chartConfig.gaugeFillColor, 30));\n  }\n  /**\n   * Fucntion that returns dataset\n   * @return {Object} dataset\n   * @memberof Cylinder\n   */\n  getDSdef () {\n    return CylinderDataset;\n  }\n  /**\n   * Method to fetch data\n   * @return {Number} data value\n   */\n  _getData () {\n    var iapi = this,\n      dataset = iapi.getChildren('dataset');\n\n    if (dataset && dataset[0]) {\n      return dataset[0].config.value;\n    }\n  }\n}\nexport default Cylinder;\n","import Gauge from './gauge';\nimport axisFactory from '../../factories/gauge-axis';\nimport { pluckNumber, PXSTRING, setLineHeight } from '@fusioncharts/core/src/lib';\n\nclass LinearGauge extends Gauge {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.registerFactory('axis', axisFactory);\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\\\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'AxisGaugeBase';\n  }\n  /**\n   * Function to parse chart specific configurations\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n  }\n\n  /**\n   * Calculates the position of the annotation macros before drawing\n   *\n   * @memberof LinearGauge\n   */\n  allocatePosition () {\n    let iapi = this,\n      chartConfig = iapi.config,\n      width = chartConfig.canvasWidth,\n      height = chartConfig.canvasHeight,\n      captionStyle = iapi.getChildren('caption')[0].config.style,\n      subCaptionStyle = iapi.getChildren('subCaption')[0].config.style,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      style = iapi.getFromEnv('style');\n\n    // Setting the font size every time the viewport is resized\n    // and chart is consequently redrawn\n    captionStyle.fontSize = (pluckNumber(this.computeFontSize(\n      chartAttrs.captionfontsize), this.computeFontSize(\n      style.fontSizeWithUnit) + 3) + PXSTRING);\n    setLineHeight(captionStyle);\n\n    subCaptionStyle.fontSize = (pluckNumber(\n      this.computeFontSize(chartAttrs.subcaptionfontsize),\n      (pluckNumber(Math.max(pluckNumber(\n        this.computeFontSize(chartAttrs.captionfontsize)) - 3, -1),\n      this.computeFontSize(style.fontSizeWithUnit)) +\n        pluckNumber(iapi.subTitleFontSizeExtender, 1))\n    ) + PXSTRING);\n    setLineHeight(subCaptionStyle);\n\n    // Setting macros for annotation\n    chartConfig.gaugeStartX = chartConfig.canvasLeft;\n    chartConfig.gaugeEndX = chartConfig.canvasLeft + width;\n    chartConfig.gaugeStartY = chartConfig.canvasTop;\n    chartConfig.gaugeEndY = chartConfig.canvasTop + height;\n    chartConfig.gaugeCenterX = chartConfig.canvasLeft + width / 2;\n    chartConfig.gaugeCenterY = chartConfig.canvasTop + height / 2;\n  }\n\n  _spaceManager () {\n    var spaceForActionBar,\n      actionBarSpace,\n      iapi = this,\n      config = iapi.config,\n      dataset = iapi.getChildren('dataset')[0],\n      scale = iapi.getChildren('scale')[0],\n      is3D = iapi.config.is3D,\n      canvas = iapi.getChildren('canvas')[0],\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      showBorder = pluckNumber(chartAttrs.showborder, is3D ? 0 : 1),\n      isHorizontal = iapi.isHorizontal,\n      minChartWidth = config.minChartWidth,\n      minChartHeight = config.minChartHeight,\n      chartBorderWidth =\n                  config.borderWidth = showBorder ? pluckNumber(chartAttrs.borderthickness, 1) : 0,\n      chartBorderVertical,\n      chartBorderHorizontal;\n\n    if ((config.canvasWidth - 2 * chartBorderWidth) < minChartWidth) {\n      chartBorderVertical = (config.canvasWidth - minChartWidth) / 2;\n    }\n\n    if ((config.canvasHeight - 2 * chartBorderWidth) < minChartHeight) {\n      chartBorderHorizontal = (config.canvasHeight - minChartHeight) / 2;\n    }\n\n    iapi._allocateSpace({\n      top: chartBorderHorizontal || chartBorderWidth,\n      bottom: chartBorderHorizontal || chartBorderWidth,\n      left: chartBorderVertical || chartBorderWidth,\n      right: chartBorderVertical || chartBorderWidth\n    });\n\n    spaceForActionBar = config.availableHeight * 0.225;\n    actionBarSpace = (iapi._manageActionBarSpace && iapi._manageActionBarSpace(spaceForActionBar)) ||\n              {};\n    iapi._allocateSpace(actionBarSpace);\n\n    if (isHorizontal) {\n      iapi._allocateSpace(scale.placeAxis(config.availableHeight));\n    } else {\n      iapi._allocateSpace(scale.placeAxis(config.availableWidth));\n    }\n\n    // iapi._allocateSpace(iapi._manageCaptionSpacing(config.availableHeight * 0.4));\n    iapi._manageChartMenuBar(config.availableHeight * 0.4);\n\n    dataset._manageSpace && iapi._allocateSpace(dataset._manageSpace(config.availableHeight));\n\n    scale.setAxisConfig({\n      drawPlotlines: iapi.drawPlotlines,\n      drawPlotBands: iapi.drawPlotBands\n    });\n    canvas.setDimension({\n      top: config.canvasTop,\n      left: config.canvasLeft,\n      width: config.canvasWidth,\n      height: config.canvasHeight\n    });\n  }\n}\nexport default LinearGauge;\n","\nimport GaugeWidget from './gaugewidget';\nimport MessageLogger from '@fusioncharts/features/src/messagelogger';\nimport AlertManager from '@fusioncharts/features/src/alertmanager';\nimport FusionCharts from '@fusioncharts/constructor/src/constructor';\nimport { pluck, pluckNumber, chartPaletteStr, BLANK, pluckFontSizeMaintainUnit } from '@fusioncharts/core/src/lib';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\nvar UNDEF;\nclass Gauge extends GaugeWidget {\n  constructor () {\n    super();\n    FusionCharts.addDep(MessageLogger);\n    FusionCharts.addDep(AlertManager);\n    // this has been added directly to this because in all gauges this type of configurations has been kept in this\n    // we have problem in parsing of attribues,correcting of these changes will be taken in that flow change\n    var WATERMARK_SPACE = 37;\n    this.chartLeftMargin = 15;\n    this.chartRightMargin = 15;\n    this.chartTopMargin = 10;\n    this.chartBottomMargin = WATERMARK_SPACE;\n    this.minChartHeight = 10;\n    this.minCanvasWidth = 0;\n  }\n  _feedAxesRawData () {\n    var iapi = this,\n      config = iapi.config,\n      colorM = iapi.getFromEnv('color-manager'),\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = dataObj.chart,\n      scaleConf,\n      palleteString = chartPaletteStr.chart2D,\n      ticksBelowGauge = pluckNumber(chartAttrs.ticksbelowgauge),\n      ticksonright = pluckNumber(chartAttrs.ticksonright),\n      isAxisOpposite = pluckNumber(isEqualString(chartAttrs.scaleposition, config.scalePosition)\n        ? config.isAxisOpposite : isEqualString(chartAttrs.scaleposition, config.canBeScalePosition)\n          ? !config.isAxisOpposite : UNDEF, (\n        ticksBelowGauge !== UNDEF ? !ticksBelowGauge : UNDEF), (\n        ticksonright !== UNDEF ? ticksonright : UNDEF),\n      config.isAxisOpposite),\n      isAxisReverse = pluckNumber(chartAttrs.reverseaxis, iapi.isAxisReverse),\n      isScaleReverse = pluckNumber(chartAttrs.reversescale, 0),\n      showTickMarks = pluckNumber(chartAttrs.showtickmarks, 1),\n      numberFormatter = iapi.getFromEnv('number-formatter'),\n      showTickValues = pluckNumber(chartAttrs.showtickvalues),\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10),\n      showLimits;\n\n    if (!showTickValues && showTickValues !== UNDEF) {\n      showLimits = false;\n    } else if (!showTickMarks && showTickValues === UNDEF) {\n      showLimits = false;\n    } else {\n      showLimits = true;\n    }\n\n    scaleConf = {\n      isVertical: !iapi.isHorizontal,\n      isReverse: iapi.isHorizontal ? isScaleReverse : !isAxisReverse,\n      isOpposit: isAxisOpposite,\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, 'Verdana,sans'),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: pluck(chartAttrs.vdivlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.vdivlinealpha, colorM.getColor('divLineAlpha')),\n      divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n      alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor('altVGridColor')),\n      alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor('altVGridAlpha')),\n      numDivLines: chartAttrs.numvdivlines,\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      axisName: chartAttrs.xaxisname,\n      axisMinValue: numberFormatter.getCleanValue(chartAttrs.lowerlimit),\n      axisMaxValue: numberFormatter.getCleanValue(chartAttrs.upperlimit),\n      setAdaptiveMin: chartAttrs.setadaptivemin,\n      // adjusttm will be internally parsed as adjustdiv\n      adjustDiv: chartAttrs.adjusttm,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: chartAttrs.showlabels,\n      rotateLabels: chartAttrs.rotatelabels,\n      slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      showDivLineValues: pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues),\n      showZeroPlane: chartAttrs.showvzeroplane,\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      zeroPlaneThickness: chartAttrs.vzeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, '#000000'),\n      // Tick properties\n      majorTMNumber: chartAttrs.majortmnumber,\n      majorTMColor: chartAttrs.majortmcolor,\n      majorTMAlpha: chartAttrs.majortmalpha,\n      majorTMHeight: chartAttrs.majortmheight,\n      tickValueStep: chartAttrs.tickvaluestep,\n      showTickMarks: chartAttrs.showtickmarks,\n      connectTickMarks: chartAttrs.connecttickmarks,\n      showTickValues: chartAttrs.showtickvalues,\n      majorTMThickness: chartAttrs.majortmthickness,\n      reverseScale: chartAttrs.reversescale,\n      // Whether to display the Limits\n      showLimits: chartAttrs.showlimits || showLimits,\n      minorTMNumber: pluckNumber(chartAttrs.minortmnumber, iapi.minorTMNumber, 4),\n      minorTMColor: chartAttrs.minortmcolor,\n      minorTMAlpha: chartAttrs.minortmalpha,\n      minorTMHeight: pluckNumber(chartAttrs.minortmheight, chartAttrs.minortmwidth),\n      minorTMThickness: chartAttrs.minortmthickness,\n      // Padding between tick mark start position and gauge\n      tickMarkDistance: pluckNumber(chartAttrs.tickmarkdistance, chartAttrs.tickmarkgap),\n      // Tick value distance\n      tickValueDistance: pluckNumber(chartAttrs.tickvaluedistance, chartAttrs.displayvaluedistance),\n      placeTicksInside: chartAttrs.placeticksinside,\n      placeValuesInside: chartAttrs.placevaluesinside,\n      upperLimitDisplay: chartAttrs.upperlimitdisplay,\n      lowerLimitDisplay: chartAttrs.lowerlimitdisplay,\n      drawTickMarkConnector: iapi.isHorizontal ? 1 : 0\n    };\n\n    scaleConf.vtrendlines = dataObj.trendpoints;\n    return [scaleConf];\n  }\n\n  _setAxisLimits () {\n    var iapi = this,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      scale = iapi.getChildren('scale')[0],\n      minMaxObj;\n\n    minMaxObj = iapi.getChildren('dataset')[0].getDataLimits();\n    (minMaxObj.max === -Infinity) && (minMaxObj.max = 0);\n    (minMaxObj.min === Infinity) && (minMaxObj.min = 0);\n    iapi.colorRange && scale.setAxisConfig({\n      axisMinValue: pluckNumber(chartAttrs.lowerlimit, minMaxObj.forceMin ? minMaxObj.min : UNDEF),\n      axisMaxValue: pluckNumber(chartAttrs.upperlimit, minMaxObj.forceMax ? minMaxObj.max : UNDEF)\n    });\n    scale.setDataLimit(minMaxObj.max, minMaxObj.min);\n  }\n  _getDataJSON () {\n    var i = 0,\n      len,\n      dataObj,\n      values = [],\n      labels = [],\n      toolTexts = [],\n      data = this.getChildren('dataset')[0].components.data;\n\n    if (!data || !data.length) {\n      len = 0;\n    } else {\n      len = data.length;\n    }\n\n    for (;i < len; i += 1) {\n      dataObj = data[i].config;\n      values.push(dataObj.itemValue);\n      labels.push(dataObj.formatedVal || BLANK);\n      toolTexts.push(dataObj.toolText || BLANK);\n    }\n\n    return {\n      values: values,\n      labels: labels,\n      toolTexts: toolTexts\n    };\n  }\n\n  _postSpaceManagement () {\n    var iapi = this,\n      config = iapi.config,\n      canvas = iapi.getChildren('canvas')[0],\n      scale = iapi.getChildren('scale')[0],\n      isHorizontal = iapi.isHorizontal,\n      canvasConf = canvas.config;\n\n    if (isHorizontal) {\n      scale.setAxisDimention({\n        axisLength: config.canvasWidth,\n        y: canvasConf.canvasTop + (scale.config.isOpposit ? 0 : canvasConf.canvasHeight),\n        x: canvasConf.canvasLeft\n      });\n    } else {\n      scale.setAxisDimention({\n        axisLength: config.canvasHeight,\n        x: canvasConf.canvasLeft + (scale.config.isOpposit ? canvasConf.canvasWidth : 0),\n        y: canvasConf.canvasTop\n      });\n    }\n    iapi.allocateDimensionOfChartMenuBar();\n  }\n  // eslint-disable-next-line\n  _clearChart () {\n    // not applicable for gauges\n  }\n}\nexport default Gauge;\n","import GaugeAxis from '@fusioncharts/core/src/axis/gauge';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0];\n  componentFactory(chart, GaugeAxis, 'scale', 1, chart._feedAxesRawData());\n  chart.getChildren('scale')[0].setLinkedItem('canvas', canvas);\n  chart.addToEnv('scale', chart.getChildren('scale')[0]);\n}\n","\nimport GaugePolarNumeric from './gauge-polar-numeric';\nimport { toPrecision, pluckNumber } from '../lib';\nimport difference from '@fusioncharts/utils/src/scale-utils/array/diff';\nimport { addDep } from '../dependency-manager';\nimport gaugeAnimation from './gauge.animation';\nimport LinearScale from '@fusioncharts/utils/src/scales/linear';\nimport { setAxisDimention, getPixel, _drawLabel, _parseLabel } from './common-api';\n\naddDep({\n  name: 'gaugeAnimation',\n  type: 'animationRule',\n  extension: gaugeAnimation\n});\n\nclass GaugeAxis extends GaugePolarNumeric {\n  constructor () {\n    super();\n\n    this.config.scale = new LinearScale();\n    this.config.labelMap = [];\n    this.config.prevIntervalArr = [];\n    this.config.prevTicksMap = [];\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'gaugeAxis';\n  }\n\n  getLabelPos (value, opt) {\n    var axis = this,\n      axisConfig = axis.config,\n      canvas = axisConfig.canvas,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      canvasTop = canvas.canvasTop || chartConfig.canvasTop,\n      canvasBottom = canvas.canvasBottom || chartConfig.canvasBottom,\n      canvasLeft = canvas.canvasLeft || chartConfig.canvasLeft,\n      isVertical = axisConfig.isVertical,\n      isOpposit = pluckNumber(axisConfig.isOpposit),\n      // axisDimention = axisConfig.axisDimention || {},\n      canvasRight = canvas.canvasRight || chartConfig.canvasRight,\n      axisPadding = axisConfig.labelPadding,\n      // axisStartPosition = isVertical ? axisDimention.x : axisDimention.y,\n      posObj = {\n        x: 0,\n        y: 0\n      },\n      addCategoryPadding;\n\n    if (isVertical) {\n      posObj.x = isOpposit ? canvasRight + axisPadding : canvasLeft - axisPadding;\n      posObj.y = addCategoryPadding ? axis.getPixel(value, opt) + addCategoryPadding : axis.getPixel(value, opt);\n    } else {\n      posObj.x = axis.getPixel(value, opt);\n      posObj.y = isOpposit ? canvasTop - axisPadding : canvasBottom + axisPadding;\n\n      if (addCategoryPadding) {\n        posObj.y += addCategoryPadding;\n      }\n    }\n\n    return posObj;\n  }\n\n  _drawComponents () {\n    var axis = this,\n      axisConfig = axis.config;\n\n    axisConfig.drawTick && axis._drawTick();\n    axisConfig.drawLabels && axis._drawLabel();\n    // axisConfig.drawTrendLines && axis._drawTrendLine();\n  }\n\n  _drawTick () {\n    var axis = this,\n      axisConfig = axis.config,\n      axisRange = axisConfig.axisRange,\n      isVertical = axisConfig.isVertical,\n      isOpposit = pluckNumber(axisConfig.isOpposit),\n      drawTick = axisConfig.drawTick,\n      drawTickMinor = axisConfig.drawTickMinor,\n      placeTicksInside = pluckNumber(axisConfig.placeTicksInside),\n      canvasDim = axis.getLinkedItem('canvas').getEffectiveDimensions(),\n      canvasTop = canvasDim.top,\n      canvasBottom = canvasTop + canvasDim.height,\n      canvasLeft = canvasDim.left,\n      canvasRight = canvasLeft + canvasDim.width,\n      max = axisRange.max,\n      min = axisRange.min,\n      animationManager = axis.getFromEnv('animationManager'),\n      ticks = axisConfig.ticks,\n      ticksLen = ticks.length,\n      axisAxisLineContainer = axisConfig.axisAxisLineContainer,\n      map = [],\n      present,\n      path,\n      minorTickValues = axisConfig.minorTicks,\n      lineElement,\n      tickElement,\n      minorTickObj,\n      majorTickObj,\n      connectorObj,\n      statPix,\n      endPixMajor,\n      endPixMinor,\n      tickMarkConnecterPath,\n      i,\n      j,\n      tickValue,\n      minorTickValue,\n      diff,\n      removingElement,\n      ln,\n      getPath = function (value, startPix, endPix) {\n        var pxVal = axis.getPixel(value, { wrtVisible: true });\n\n        return isVertical ? ['M', startPix, pxVal, 'L', endPix, pxVal]\n          : ['M', pxVal, startPix, 'L', pxVal, endPix];\n      };\n\n    majorTickObj = {\n      stroke: axisConfig.majorTMColor,\n      'stroke-width': axisConfig.majorTMThickness,\n      'stroke-linecap': 'round',\n      opacity: 1\n    };\n    connectorObj = {\n      stroke: axisConfig.majorTMColor,\n      'stroke-width': axisConfig.majorTMThickness,\n      'stroke-linecap': 'round'\n    };\n    minorTickObj = {\n      stroke: axisConfig.minorTMColor,\n      'stroke-width': axisConfig.minorTMThickness,\n      'stroke-linecap': 'round',\n      opacity: 1\n    };\n\n    // checking if lines are to be drawn user can decide\n    if (axisConfig.lines.isDraw && drawTick) {\n      if (isVertical) {\n        if (isOpposit) {\n          if (!placeTicksInside) {\n            statPix = canvasRight + axisConfig.tickMarkDistance;\n            endPixMajor = statPix + axisConfig.majorTMHeight;\n            endPixMinor = statPix + axisConfig.minorTMHeight;\n          } else {\n            statPix = canvasRight - axisConfig.tickMarkDistance;\n            endPixMajor = statPix - axisConfig.majorTMHeight;\n            endPixMinor = statPix - axisConfig.minorTMHeight;\n          }\n        } else {\n          if (!placeTicksInside) {\n            statPix = canvasLeft - axisConfig.tickMarkDistance;\n            endPixMajor = statPix - axisConfig.majorTMHeight;\n            endPixMinor = statPix - axisConfig.minorTMHeight;\n          } else {\n            statPix = canvasLeft + axisConfig.tickMarkDistance;\n            endPixMajor = statPix + axisConfig.majorTMHeight;\n            endPixMinor = statPix + axisConfig.minorTMHeight;\n          }\n        }\n      } else {\n        if (!isOpposit) {\n          if (!placeTicksInside) {\n            statPix = canvasBottom + axisConfig.tickMarkDistance;\n            endPixMajor = statPix + axisConfig.majorTMHeight;\n            endPixMinor = statPix + axisConfig.minorTMHeight;\n          } else {\n            statPix = canvasBottom - axisConfig.tickMarkDistance;\n            endPixMajor = statPix - axisConfig.majorTMHeight;\n            endPixMinor = statPix - axisConfig.minorTMHeight;\n          }\n        } else {\n          if (!placeTicksInside) {\n            statPix = canvasTop - axisConfig.tickMarkDistance;\n            endPixMajor = statPix - axisConfig.majorTMHeight;\n            endPixMinor = statPix - axisConfig.minorTMHeight;\n          } else {\n            statPix = canvasTop + axisConfig.tickMarkDistance;\n            endPixMajor = statPix + axisConfig.majorTMHeight;\n            endPixMinor = statPix + axisConfig.minorTMHeight;\n          }\n        }\n      }\n\n      if (axisConfig.drawTickMarkConnector) {\n        if (isVertical) {\n          tickMarkConnecterPath = ['M', statPix, axis.getPixel(min), 'L',\n            statPix, axis.getPixel(max)];\n        } else {\n          tickMarkConnecterPath = ['M', axis.getPixel(min), statPix, 'L',\n            axis.getPixel(max), statPix];\n        }\n      } else {\n        tickMarkConnecterPath = ['M0,0'];\n      }\n      connectorObj.path = tickMarkConnecterPath;\n      // Drawing of the tick-mark connector\n      // reuse the elements if there\n      lineElement = axis.getGraphicalElement('axisLinePath');\n\n      present = !!lineElement;\n\n      lineElement = animationManager.setAnimation({\n        el: lineElement || 'path',\n        attr: connectorObj,\n        container: axisAxisLineContainer,\n        component: axis,\n        label: 'path'\n      });\n      map.push('axisLinePath');\n      if (!present) {\n        axis.addGraphicalElement('axisLinePath', lineElement);\n      }\n\n      for (i = 0; i < ticksLen; i += 1) {\n        tickValue = ticks[i];\n\n        path = getPath(tickValue, statPix, endPixMajor);\n        majorTickObj.path = path.toString();\n\n        map.push(tickValue);\n        tickElement = axis.getGraphicalElement(tickValue);\n        present = !!tickElement;\n        // reuse the elements if there\n        tickElement = animationManager.setAnimation({\n          el: tickElement || 'path',\n          data: {\n            path: path.slice(),\n            value: tickValue\n          },\n          attr: majorTickObj,\n          container: axisAxisLineContainer,\n          component: axis,\n          label: 'path'\n        });\n\n        if (!present) {\n          axis.addGraphicalElement(tickValue, tickElement);\n        }\n      }\n      if (drawTickMinor) {\n        for (j = 0; j < minorTickValues.length; j += 1) {\n          minorTickValue = minorTickValues[j];\n\n          path = getPath(minorTickValue, statPix, endPixMinor);\n          minorTickObj.path = path.toString();\n          map.push(minorTickValue);\n          tickElement = axis.getGraphicalElement(minorTickValue);\n\n          present = !!tickElement;\n\n          tickElement = animationManager.setAnimation({\n            el: tickElement || 'path',\n            data: {\n              path: path.slice(),\n              value: minorTickValue\n            },\n            attr: minorTickObj,\n            component: axis,\n            container: axisAxisLineContainer,\n            label: 'path'\n          });\n          if (!present) {\n            axis.addGraphicalElement(minorTickValue, tickElement);\n          }\n        }\n      }\n    }\n    diff = difference(axisConfig.prevTicksMap, map);\n    for (i = 0, ln = diff.length; i < ln; i++) {\n      removingElement = axis.getGraphicalElement(diff[i]);\n      removingElement && axis.removeGraphicalElement(removingElement);\n    }\n    axisConfig.prevTicksMap = map;\n  }\n\n  placeAxis (_maxLimit) {\n    var axis = this,\n      chart = axis.getFromEnv('chart'),\n      maxLimit = _maxLimit,\n      scale = axis.getScale(),\n      smartLabel = chart.getFromEnv('smartLabel'),\n      axisConfig = axis.config,\n      axisRange = axisConfig.axisRange,\n      isVertical = axisConfig.isVertical,\n      isOpposit = pluckNumber(axisConfig.isOpposit),\n      labelStyle = axisConfig.labels.style,\n      increment = axisRange.tickInterval,\n      placeTicksInside = pluckNumber(axisConfig.placeTicksInside),\n      placeValuesInside = pluckNumber(axisConfig.placeValuesInside),\n      max = axisRange.max,\n      min = axisRange.min,\n      upperLimitDisplay,\n      lowerLimitDisplay,\n      maxTextSize = 0,\n      maxTickLength = 0,\n      maxText = '',\n      ret,\n      text,\n      i,\n      counter,\n      leftLimit,\n      avalW,\n      avalH,\n      numDimention,\n      dimention,\n      intervalWidth,\n      tempText,\n      maxNumericVal,\n      minNumericVal,\n      labelLineHeight = axisConfig.labels.style.lineHeight,\n      labelObj,\n      numberFormatterFn,\n      numberFormatter = axis.getFromEnv('number-formatter'),\n      upperLimitDisplayDimention,\n      lowerLimitDisplayDimention;\n\n    if (isVertical) {\n      scale.setRange([chart.config.canvasTop, chart.config.canvasBottom]);\n    } else {\n      scale.setRange([chart.config.canvasLeft, chart.config.canvasRight]);\n    }\n\n    ret = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    if (maxLimit <= 0) {\n      return ret;\n    }\n    axisConfig.labels.isDraw = true;\n    axisConfig.labels.drawNumericVal = true;\n    axisConfig.labels.drawNormalVal = axisConfig.showTickValues;\n    axisConfig.labels.drawLimitVal = axisConfig.showLimits;\n    axisConfig.lines.isDraw = true;\n    axisConfig.labels.step = axisConfig.tickValueStep;\n    axisConfig.labelPadding = 0;\n\n    smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n    smartLabel.setStyle({\n      fontSize: labelStyle.fontSize,\n      fontFamily: labelStyle.fontFamily,\n      lineHeight: labelStyle.lineHeight,\n      fontWeight: labelStyle.fontWeight\n    });\n    if (!axis.components) {\n      axis.components = {};\n      axis.components.labels = [];\n    }\n    // measuring the tick length\n    if (axisConfig.drawTick && axisConfig.showTickMarks && axisConfig.lines.isDraw) {\n      maxLimit -= axisConfig.tickMarkDistance;\n      maxTickLength = Math.max(axisConfig.minorTMHeight, axisConfig.majorTMHeight);\n      if (!placeTicksInside) {\n        if (maxTickLength > maxLimit) {\n          axisConfig.lines.isDraw = false;\n          leftLimit = maxLimit + axisConfig.tickMarkDistance;\n          leftLimit = maxLimit;\n        } else {\n          if (isVertical) {\n            if (isOpposit) {\n              ret.right += maxTickLength + axisConfig.tickMarkDistance;\n            } else {\n              ret.left += maxTickLength + axisConfig.tickMarkDistance;\n            }\n          } else {\n            if (isOpposit) {\n              ret.top += maxTickLength + axisConfig.tickMarkDistance;\n            } else {\n              ret.bottom += maxTickLength + axisConfig.tickMarkDistance;\n            }\n          }\n          leftLimit = maxLimit - maxTickLength;\n          if (!placeValuesInside) {\n            axisConfig.labelPadding = axisConfig.tickMarkDistance + maxTickLength;\n          }\n        }\n      } else {\n        leftLimit = maxLimit + axisConfig.tickMarkDistance;\n        if (placeValuesInside) {\n          axisConfig.labelPadding = axisConfig.tickMarkDistance + maxTickLength;\n        }\n      }\n    } else {\n      axisConfig.lines.isDraw = false;\n      leftLimit = maxLimit;\n    }\n\n    leftLimit -= axisConfig.tickValueDistance;\n    if (axisConfig.drawLabels && (axisConfig.showTickValues || axisConfig.showLimits)) {\n      intervalWidth = Math.abs(axis.getPixel(min) - axis.getPixel(min + increment)) / 2;\n      axisConfig.labelPadding += axisConfig.tickValueDistance;\n      leftLimit -= axisConfig.tickValueDistance;\n      // measuring the label dimention\n      numberFormatterFn = numberFormatter.scale;\n      // calculating the label max width and height\n      // TODO : smartly calculate the max width height\n      for (i = min + increment, counter = 0; i < max; i += increment) {\n        text = '' + numberFormatterFn.call(numberFormatter, toPrecision(i, 10));\n        numDimention = smartLabel.getOriSize(text);\n\n        axis.components.labels[counter] = {\n          config: {\n            width: numDimention.width,\n            height: numDimention.height,\n            props: {\n              label: {\n                attr: {\n                  text: text\n                }\n              }\n            }\n          }\n        };\n        counter++;\n        if (text.length > maxTextSize) {\n          maxText = text;\n          maxTextSize = text.length;\n        }\n      }\n      numDimention = smartLabel.getOriSize(maxText);\n\n      if (isVertical) {\n        if (numDimention.width > leftLimit) {\n          axisConfig.labels.drawNumericVal = false;\n          (!axisConfig.upperLimitDisplay && !axisConfig.lowerLimitDisplay) &&\n                            (axisConfig.labels.isDraw = false);\n          maxText = '';\n          numDimention = smartLabel.getOriSize(maxText);\n        }\n      } else {\n        if (numDimention.height > leftLimit) {\n          axisConfig.labels.drawNumericVal = false;\n          (!axisConfig.upperLimitDisplay && !axisConfig.lowerLimitDisplay) &&\n                            (axisConfig.labels.isDraw = false);\n          maxText = '';\n          numDimention = smartLabel.getOriSize(maxText);\n        }\n      }\n\n      avalW = isVertical ? leftLimit : intervalWidth;\n      avalH = isVertical ? intervalWidth : leftLimit;\n\n      if (axisConfig.showLimits) {\n        maxNumericVal = numberFormatterFn.call(numberFormatter, max);\n        minNumericVal = numberFormatterFn.call(numberFormatter, min);\n\n        upperLimitDisplay = axisConfig.upperLimitDisplay ||\n                        '' + maxNumericVal;\n        lowerLimitDisplay = axisConfig.lowerLimitDisplay ||\n                        '' + minNumericVal;\n        upperLimitDisplayDimention = smartLabel.getOriSize(upperLimitDisplay);\n\n        if (upperLimitDisplayDimention.width > numDimention.width) {\n          tempText = smartLabel.getSmartText(upperLimitDisplay, avalW, avalH);\n          if ((upperLimitDisplay === maxNumericVal &&\n                            (tempText.text === tempText.oriText)) || axisConfig.labels.drawNumericVal) {\n            maxText = upperLimitDisplay;\n            numDimention = upperLimitDisplayDimention;\n          }\n        }\n        lowerLimitDisplayDimention = smartLabel.getOriSize(lowerLimitDisplay);\n        if (lowerLimitDisplayDimention.width > numDimention.width) {\n          tempText = smartLabel.getSmartText(lowerLimitDisplay, avalW, avalH);\n          if ((lowerLimitDisplay === minNumericVal &&\n                            (tempText.text === tempText.oriText)) || axisConfig.labels.drawNumericVal) {\n            maxText = lowerLimitDisplay;\n          }\n        }\n        if (maxText === '') {\n          if (smartLabel.getOriSize(axisConfig.upperLimitDisplay).width >\n                            smartLabel.getOriSize(axisConfig.lowerLimitDisplay).width) {\n            maxText = upperLimitDisplay;\n          } else {\n            maxText = lowerLimitDisplay;\n          }\n          numDimention = smartLabel.getOriSize(maxText);\n        }\n      } else {\n        axisConfig.labels.drawLimitVal = false;\n      }\n\n      if (!isVertical) {\n        for (i = min; i <= max; i += increment) {\n          dimention = smartLabel.getSmartText(maxText, avalW, avalH);\n          if (dimention.text === '') {\n            avalW += intervalWidth;\n          } else {\n            break;\n          }\n        }\n      } else {\n        dimention = smartLabel.getSmartText(maxText, avalW, avalH);\n      }\n      dimention = smartLabel.getSmartText(maxText, avalW, avalH);\n      axisConfig.labelMaxW = Math.max(dimention.width, numDimention.width);\n      axisConfig.labelMaxH = Math.max(dimention.height, numDimention.height);\n      if (!placeValuesInside && axisConfig.labels.isDraw) {\n        if (isVertical) {\n          axisConfig.labelMaxW = Math.min(axisConfig.labelMaxW, leftLimit);\n          if (isOpposit) {\n            ret.right += axisConfig.labelMaxW + axisConfig.tickValueDistance;\n          } else {\n            ret.left += axisConfig.labelMaxW + axisConfig.tickValueDistance;\n          }\n        } else {\n          axisConfig.labelMaxH = Math.min(axisConfig.labelMaxH, leftLimit);\n          if (isOpposit) {\n            ret.top += axisConfig.labelMaxH + axisConfig.tickValueDistance;\n          } else {\n            ret.bottom += axisConfig.labelMaxH + axisConfig.tickValueDistance;\n          }\n        }\n      } else {\n        axisConfig.labelPadding = -axisConfig.labelPadding;\n      }\n\n      if (axisConfig.labels.drawLimitVal) {\n        if (labelLineHeight) {\n          if (labelLineHeight.indexOf('px') !== -1) {\n            labelLineHeight = parseFloat(labelLineHeight.replace('px', ''));\n          }\n        }\n\n        if (axisConfig.upperLimitDisplay) {\n          numDimention = smartLabel.getSmartText((axisConfig.upperLimitDisplay), axisConfig.labelMaxW,\n            axisConfig.labelMaxH + (labelLineHeight / 2));\n        } else {\n          text = '' + numberFormatterFn.call(numberFormatter, toPrecision(max, 10));\n          numDimention = smartLabel.getOriSize(text);\n        }\n        axis.components.labels[counter] = {\n          config: {\n            width: numDimention.width,\n            height: numDimention.height,\n            props: {\n              label: {\n                attr: {\n                  text: numDimention.text\n                }\n              }\n            }\n          }\n        };\n\n        if (axisConfig.lowerLimitDisplay) {\n          numDimention = smartLabel.getSmartText((axisConfig.lowerLimitDisplay), axisConfig.labelMaxW,\n            axisConfig.labelMaxH + (labelLineHeight / 2));\n        } else {\n          text = '' + numberFormatterFn.call(numberFormatter, toPrecision(min, 10));\n          numDimention = smartLabel.getOriSize(text);\n        }\n        labelObj = {\n          config: {\n            width: numDimention.width,\n            height: numDimention.height,\n            props: {\n              label: {\n                attr: {\n                  text: numDimention.text\n                }\n              }\n            }\n          }\n        };\n        axis.components.labels.unshift(labelObj);\n      }\n    } else {\n      axisConfig.labels.isDraw = false;\n    }\n    axisConfig.spaceTaken = ret;\n    return ret;\n  }\n\n  /**\n   * Hides the axis components\n   */\n  hide () {\n    var axis = this,\n      axisConfig = axis.config;\n\n    if (!axisConfig.axisContainer) {\n      return;\n    }\n    axisConfig.axisLabelContainerTop.hide();\n    axisConfig.axisContainer.hide();\n    axisConfig.axisTrendLabelContainer.hide();\n    axisConfig.axisAxisLineContainer.hide();\n  }\n\n  /**\n   * Hides the axis components\n   */\n  show () {\n    var axis = this,\n      axisConfig = axis.config;\n\n    if (!axisConfig.axisContainer) {\n      return;\n    }\n    axisConfig.axisLabelContainerTop.show();\n    axisConfig.axisContainer.show();\n    axisConfig.axisTrendLabelContainer.show();\n    axisConfig.axisAxisLineContainer.show();\n  }\n\n  _computeTranslation () {\n    if (this) return 0;\n  }\n}\n\nGaugeAxis.prototype.setAxisDimention = setAxisDimention;\nGaugeAxis.prototype.getPixel = getPixel;\nGaugeAxis.prototype._parseLabel = _parseLabel;\nGaugeAxis.prototype._drawLabel = _drawLabel;\n\nexport default GaugeAxis;\n","import Axis from './axis';\nimport { pluck, pluckNumber, parseUnsafeString, convertColor } from '../lib';\nimport { setDataLimit, getTrendLineLimits } from './common-api';\nimport domainUpdater from './domain-updater';\n\nclass GaugePolarNumeric extends Axis {\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n\n    config.majorTMNumber = -1;\n    config.adjustDiv = 1;\n    config.majorTMHeight = 6;\n    config.showTickMarks = 1;\n    config.majorTMThickness = 1;\n    config.minorTMNumber = 4;\n    config.minorTMThickness = 1;\n    config.tickMarkDistance = 3;\n    config.placeTicksInside = 0;\n    config.placeValuesInside = 0;\n    config.forceZeroTick = false;\n  }\n\n  /**\n   * Prepare the axis attributes for use by the chart drawing. It applies default values to the\n   * options that are undefined.\n   * @param  {Object}  rawAttr The raw attributes to be set\n   */\n  configureAttributes (rawAttr) {\n    var axis = this,\n      axisConfig = axis.config,\n      colorM = axis.getFromEnv('color-manager'),\n      axisAttr;\n\n    super.configureAttributes(rawAttr);\n    axisAttr = axisConfig.rawAttr;\n\n    axisConfig.majorTMColor = convertColor(pluck(axisAttr.majorTMColor, colorM.getColor('tickColor')),\n      pluckNumber(axisAttr.majorTMAlpha, 100));\n    axisConfig.tickValueStep = pluckNumber(axisAttr.tickValueStep, 1);\n    axisConfig.tickValueStep = Math.round(axisConfig.tickValueStep);\n    if (axisConfig.tickValueStep <= 0) {\n      axisConfig.tickValueStep = 1;\n    }\n    axisConfig.connectTickMarks = axisConfig.showTickMarks ? pluckNumber(axisAttr.connectTickMarks, 1) : 0;\n    axisConfig.showTickValues = pluckNumber(axisAttr.showTickValues, axisConfig.showTickMarks);\n    axisConfig.reverseScale = pluckNumber(axisAttr.reverseScale, 0) === 1;\n    axisConfig.minorTMColor = convertColor(pluck(axisAttr.minorTMColor, axisConfig.majorTMColor),\n      pluckNumber(axisAttr.minorTMAlpha, axisConfig.majorTMAlpha, 100));\n    axisConfig.minorTMHeight = axisConfig.showTickMarks ? pluckNumber(axisAttr.minorTMHeight,\n      Math.round(axisConfig.majorTMHeight / 2)) : 0;\n    // Padding between tick mark start position and gauge\n    // Tick value distance\n    axisConfig.tickValueDistance = pluckNumber(axisAttr.tickValueDistance, 0) + 2;// text gutter\n    axisConfig.upperLimitDisplay = parseUnsafeString(axisAttr.upperLimitDisplay) || '';\n    axisConfig.lowerLimitDisplay = parseUnsafeString(axisAttr.lowerLimitDisplay) || '';\n    axisConfig.drawTickMarkConnector = axisAttr.drawTickMarkConnector || 0;\n    axisConfig.numDivLines = (axisConfig.majorTMNumber >= 0) ? axisConfig.majorTMNumber : (axisConfig.numDivLines + 1);\n  }\n\n  _createContainer () {\n    let axis = this,\n      axisConfig = axis.config,\n      chart = axis.getLinkedParent(),\n      childContainers = chart.getChildContainer(),\n      axisBottom = childContainers.axisBottomGroup,\n      axisTop = childContainers.axisTopGroup,\n      axisLineGroup,\n      axisTrendGroupTop,\n      axisLabelGroupTop,\n      axisTrendGroupBottom;\n\n    // creating the axis elements group unique throughout the charts\n    // axisTrendGroupBottom hold trendContainer bottom of the dataset\n    axisTrendGroupBottom = this.createContainer('axisTrendGroupBottom', {\n      name: 'dataset-Trend-group-bottom'\n    }, axisBottom);\n    // axisLineGroup hold the axis line  element\n    axisLineGroup = axis.createContainer('axisLineGroup', {\n      name: 'axis-Line-group'\n    }, axisTop);\n    // axisTrendGroupTop hold trendContainer top of the dataset\n    axisTrendGroupTop = axis.createContainer('axisTrendGroupTop', {\n      name: 'dataset-Trend-group-top'\n    }, axisTop);\n    // axisLabelGroup hold the label container\n    axisLabelGroupTop = axis.createContainer('axisLabelGroupTop', {\n      name: 'dataset-Label-group'\n    }, axisTop);\n\n    // creating the container group for every axis there will be\n    // note : if new container added add it to hide and show\n    // contains all the axis labels\n\n    // for gauges the polar numeric the lables can be drawn over the plots if it is placed inside\n    axisConfig.axisLabelContainerTop = axisConfig.axisContainer = axis.createGroup('axisLabelContainerTop', {\n      name: 'dataset-top-label'\n    }, axisLabelGroupTop);\n\n    axisConfig.axisAxisLineContainer = axis.createGroup('axisAxisLineContainer', {\n      name: 'axis-line-tick'\n    }, axisLineGroup);\n\n    axisConfig.axisTrendContainerTop = axis.createGroup('axisTrendContainerTop', {\n      name: 'dataset-axis-trend-top'\n    }, axisTrendGroupTop);\n\n    axisConfig.axisTrendContainerBottom = axis.createGroup('axisTrendContainerBottom', {\n      name: 'dataset-axis-trend-bottom'\n    }, axisTrendGroupBottom);\n\n    // contain trend label elements\n    axisConfig.axisTrendLabelContainer = axis.createGroup('axisTrendLabelContainer', {\n      name: 'dataset-axis-trend-label'\n    }, axisTrendGroupTop);\n  }\n\n  allocatePosition () {\n    var axis = this,\n      axisConfig = axis.config;\n\n    axisConfig.drawLabels && axis._parseLabel();\n  }\n  /**\n   * Sets the visible range of the axis. Also sets axis's reference values and re-calculates PVR.\n   * @param  {number} minValue The minimum value of the area to be visible\n   * @param  {number} maxValue The maximum value of the area to be visible\n   * @return {boolean} Whether the visible range of the axis was successfully set or not\n   */\n  setVisibleConfig (minValue, maxValue) {\n    let axis = this,\n      axisConfig = axis.config,\n      scale = axis.getScale(),\n      domain;\n\n    if (minValue >= maxValue ||\n      minValue < axisConfig.axisRange.min ||\n      maxValue > axisConfig.axisRange.max) {\n      return false;\n    }\n\n    domain = scale.setDomain([minValue, maxValue]).getDomain();\n    axisConfig.visibleMin = domain[0];\n    axisConfig.visibleMax = domain[1];\n\n    axis.fireEvent('visiblerangeset', { minValue, maxValue });\n    axis.asyncDraw();\n\n    return true;\n  }\n\n  _adjustNumberFormatter () {\n    if (this) return 0;\n  }\n\n  calculateTicksOnLabelMode () {\n    if (this) return 0;\n  }\n  generateMinorTicks () {\n    let axis = this,\n      axisConfig = this.config;\n    return axis.getScale()\n      .minorTicks(axisConfig.minorTMNumber, axisConfig.ticks);\n  }\n  /**\n   * Function to set the axis range from (used for axis drawing) out side.\n   * @param {Object} data Axis range object the values to be changed\n   */\n  _setAxisRange (data) {\n    var min = data.min,\n      max = data.max,\n      axisConfig = this.config,\n      axisRange = axisConfig.axisRange;\n\n    if (min > max) {\n      return;\n    }\n\n    domainUpdater(min, max, this.getScale(), axisConfig);\n\n    axisConfig.minorTicks = this.generateMinorTicks();\n    this.setVisibleConfig(axisRange.min, axisRange.max);\n  }\n}\n\nGaugePolarNumeric.prototype.setDataLimit = setDataLimit;\nGaugePolarNumeric.prototype.getTrendLineLimits = getTrendLineLimits;\n\nexport default GaugePolarNumeric;\n","import { appearingAxis, appearingFinal } from './cartesian-axis.animation';\nexport default {\n  'initial.axis.gaugeAxis': {\n    'text.appearing': appearingAxis,\n    'path.appearing': appearingAxis\n  },\n  'update.axis.gaugeAxis': {\n    'text.appearing': appearingFinal,\n    'path.appearing': appearingFinal\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  preDefStr,\n  COMMASTRING,\n  toRaphaelColor,\n  pluckNumber,\n  BLANKSTRING,\n  convertColor,\n  getDarkColor,\n  getLightColor\n} from '@fusioncharts/core/src/lib';\nimport CylinderThermometerBase from '../_internal/cylinderthermometerbase';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport cylinderAnimation from './index.animation';\n\nvar A = 'A',\n  math = Math,\n  mathMax = math.max,\n  mathMin = math.min,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  win = window,\n  userAgent = win.navigator.userAgent,\n  isIE = /msie/i.test(userAgent) && !win.opera,\n  Z = 'Z',\n  HUNDREDPERCENT = '100%',\n  zeroCommaHundredStr = '0,100',\n  topLightGlowAlphaStr = '40,0',\n  btnBorderLightAlphaStr = '50,50,50,50,50,70,50,50',\n  btnBorderLightRatioStr = '0,15,0,12,0,15,43,15',\n  backAlphaStr = '30,30,30,30,30,30,30,30',\n  backRatioStr = '0,15,43,15,0,12,0,15',\n  frontRatioStr = '0,15,0,12,0,15,43,15',\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')',\n  M = 'M',\n  L = 'L',\n  EVENTARGS = 'eventArgs',\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  getScaleFactor = function (_origW, _origH, canvasWidth, canvasHeight) {\n    var scaleFactor,\n      origH = _origH,\n      origW = _origW;\n\n    origH = pluckNumber(origH, canvasHeight);\n    origW = pluckNumber(origW, canvasWidth);\n    if (!origH || !origW) {\n      scaleFactor = 1;\n    } else if ((origW / canvasWidth) === (origH / canvasHeight)) {\n      // Now, if the ratio of original width,height & stage width,height are same\n      // In this case, the transformation value would be the same, as the ratio\n      // of transformation of width and height is same.\n      scaleFactor = canvasWidth / origW;\n    } else {\n      // If the transformation factors are different, we do a constrained scaling\n      // We get the aspect whose delta is on the lower side.\n      scaleFactor = Math.min((canvasWidth / origW), (canvasHeight / origH));\n    }\n\n    return scaleFactor;\n  };\naddDep({\n  name: 'cylinderAnimation',\n  type: 'animationRule',\n  extension: cylinderAnimation\n});\n/**\n * Creates dataset class for Cylinder\n */\nclass CylinderDataset extends CylinderThermometerBase {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'cylinder';\n  }\n  /**\n   * Calculates space management of cylinder plot\n   * @return {Object} dimension(top, bottom, left, right) needed for cylinder plot\n   */\n  _manageSpace () {\n    var ds = this,\n      dsConfig = ds.config,\n      chart = ds.getFromEnv('chart'),\n      chartConfig = chart.config,\n      chartWidth = chartConfig.width,\n      chartHwight = chartConfig.height,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasHeight = chartConfig.canvasHeight,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      canvasRight = chartConfig.canvasRight,\n      xDefined = chartConfig.xDefined,\n      yDefined = chartConfig.yDefined,\n      rDefined = chartConfig.rDefined,\n      hDefined = chartConfig.hDefined,\n      gaugeOriginX = chartConfig.gaugeOriginX,\n      gaugeOriginY = chartConfig.gaugeOriginY,\n      gaugeRadius = chartConfig.gaugeRadius,\n      gaugeHeight = chartConfig.gaugeHeight,\n      gaugeYScale = chartConfig.gaugeYScale,\n      scaleFactor = getScaleFactor(chartConfig.origW, chartConfig.origH, chartWidth, chartHwight),\n      top = 0,\n      bottom = 0,\n      left = 0,\n      right = 0,\n      gaugeRight,\n      centerPos,\n      gaugeDiameter,\n      gaugeYfactor,\n      measure,\n      canvasLeftShift;\n\n    // manage the space for the datalabels\n\n    measure = ds._getLabelSpace();\n    canvasHeight -= measure;\n    bottom += measure;\n\n    // lightX = r * 0.85,\n    //  x5 = x - lightX,\n    //  x6 = x + lightX,\n    //  lightY = Math.sqrt((1 - ((lightX * lightX) / (r * r))) * r2 * r2),\n\n    // manage the thermometer space\n\n    /* First calculate the radius */\n\n    // if Not defined the radius then calculate it.\n    if (!rDefined) {\n      gaugeRadius = mathMax(mathMin(canvasWidth, canvasHeight * 1.2) / 2, 5);\n    } else {\n      gaugeRadius = gaugeRadius * scaleFactor;\n    }\n\n    // store the effective radius\n    chartConfig.effectiveR = gaugeRadius;\n    gaugeDiameter = gaugeRadius * 2;\n    gaugeYfactor = gaugeRadius * gaugeYScale;\n\n    top += gaugeYfactor;\n    canvasTop += gaugeYfactor;\n    bottom += gaugeYfactor;\n    canvasHeight -= (2 * gaugeYfactor);\n\n    /* Calculate the x */\n\n    // if x is user defined\n    if (xDefined) {\n      gaugeOriginX = gaugeOriginX * scaleFactor;\n      canvasLeftShift = (gaugeOriginX - gaugeRadius) - canvasLeft;\n    } else { // else, place the gauge at the center\n      centerPos = (canvasRight - canvasLeft) / 2;\n      // now as per the center position calculate the extra left gap\n      canvasLeftShift = (centerPos - gaugeRadius);\n      // check whether we have space to put the gauge at center\n      gaugeRight = canvasLeftShift + gaugeDiameter;\n      if (gaugeRight > canvasWidth) {\n        canvasLeftShift = canvasWidth - gaugeDiameter;\n      }\n    }\n    left += canvasLeftShift;\n    canvasLeft += canvasLeftShift;\n    canvasWidth -= canvasLeftShift;\n\n    // to make the canvas width same as gauge's cylinder width increase the right padding\n    right += (canvasWidth - gaugeDiameter);\n\n    if (yDefined) {\n      gaugeOriginY = gaugeOriginY * scaleFactor;\n    }\n\n    if (!hDefined) { // if height is not defined\n      if (yDefined) { // if y is defined then adjust thermometer height is available space\n        gaugeHeight = gaugeOriginY - canvasTop;\n      } else {\n        gaugeHeight = canvasHeight;\n        gaugeOriginY = canvasTop + gaugeHeight;\n      }\n    } else { // height is defined\n      gaugeHeight = gaugeHeight * scaleFactor;\n      if (yDefined) { // if both are defined, adjust the top to accomodate this\n        top += gaugeOriginY - gaugeHeight - canvasTop;\n      } else {\n        gaugeOriginY = canvasTop + gaugeHeight;\n      }\n    }\n    // finally adjust the bottom to accomodate y and height\n    bottom += (canvasTop + canvasHeight) - gaugeOriginY;\n    dsConfig.gaugeOriginX = gaugeOriginX;\n    dsConfig.gaugeOriginY = gaugeOriginY;\n    dsConfig.gaugeRadius = gaugeRadius;\n    dsConfig.gaugeHeight = gaugeHeight;\n    dsConfig.gaugeYScale = gaugeYScale;\n    return {\n      top: top,\n      bottom: bottom + 8, // space for thick border at the glass bottom\n      left: left,\n      right: right\n    };\n  }\n  /**\n   * Draws Cylinder plot\n   */\n  draw () {\n    let dataSet = this,\n      dsConfig = dataSet.config,\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      iapi = dataSet.getFromEnv('chart'),\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      trackerLayer = iapi.getChildContainer('trackerGroup'),\n      parentContainer = iapi.getChildContainer().plotGroup,\n      fluidTop = dataSet.getGraphicalElement('fluidTop'),\n      fluid = dataSet.getGraphicalElement('fluid'),\n      cylinterTop = dataSet.getGraphicalElement('cylinterTop'),\n      frontLight1 = dataSet.getGraphicalElement('frontLight1'),\n      frontLight = dataSet.getGraphicalElement('frontLight'),\n      front = dataSet.getGraphicalElement('front'),\n      back = dataSet.getGraphicalElement('back'),\n      btnBorderLight = dataSet.getGraphicalElement('btnBorderLight'),\n      btnBorder1 = dataSet.getGraphicalElement('btnBorder1'),\n      btnBorder = dataSet.getGraphicalElement('btnBorder'),\n      label = dataSet.getGraphicalElement('label'),\n      dataLabelsLayer = iapi.getChildContainer('datalabelsGroup'),\n      dataLabelContainerDummy = dataSet.getContainer('dataLabelContainer'),\n      dataLabelContainer,\n      trackerContainer = dataSet.getContainer('trackerContainer'),\n      hotElement = dataSet.getGraphicalElement('hotElement'),\n      scale = dataSet.getFromEnv('scale'),\n      chartConfig = iapi.config,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      canvasHeight = chartConfig.canvasHeight,\n      r = chartConfig.effectiveR || 40,\n      value = pluckNumber(dsConfig.value, scale.getLimit().min),\n      gaugePos = scale.getPixel(value),\n      x = canvasLeft + r,\n      y = canvasTop,\n      h = canvasHeight,\n      style = iapi.config.dataLabelStyle,\n      fluidColor = dsConfig.gaugeFillColor,\n      fluidDarkColor = getDarkColor(fluidColor, 70),\n      fluidLightColor = getLightColor(fluidColor, 70),\n      fluidEdgeColor = getDarkColor(fluidDarkColor, 90),\n      fluidAlpha = chartConfig.gaugeFillAlpha,\n      fluidStroke = 3,\n\n      // Thermometer Glass color\n      gaugeContainerColor = dsConfig.gaugeContainerColor,\n      darkConColor = getDarkColor(gaugeContainerColor, 80),\n      darkConColor1 = getDarkColor(gaugeContainerColor, 90),\n      lightConColor = getLightColor(gaugeContainerColor, 80),\n      r3dFactor = chartConfig.gaugeYScale,\n      containerDummy = dataSet.getContainer('container'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      canvasHorizontalDiff = Math.abs(chartConfig.width - chartConfig.canvasRight - canvasLeft),\n      container,\n      ypos,\n      r2 = r * r3dFactor,\n      fluidStrHF = fluidStroke / 2,\n      r3 = r - fluidStrHF,\n      y2 = dsConfig.cylBase = y + h,\n      y3 = gaugePos,\n      x1 = x - r,\n      x2 = x + r,\n      x3 = x1 + fluidStrHF,\n      x4 = x2 - fluidStrHF,\n      xBt1 = x1 - 2,\n      xBt2 = x2 + 2,\n      rBt1 = r + 2,\n      rBt2 = r2 + 2,\n      yBt1 = y2 + 4,\n      yBt2 = yBt1 + 0.001,\n      lightX = r * 0.85,\n      x5 = x - lightX,\n      x6 = x + lightX,\n      lightY = Math.sqrt((1 - ((lightX * lightX) / (r * r))) * r2 * r2),\n      y4 = y + lightY,\n      y5 = y2 + lightY,\n      y6 = y - 1,\n      use3DLighting = chartConfig.use3DLighting,\n      topColorStr,\n      topStrokeStr,\n      showHoverEffect = dsConfig.showHoverEffect,\n      plotFillHoverAlpha = dsConfig.plotFillHoverAlpha,\n      plotFillHoverColor = dsConfig.plotFillHoverColor,\n      fluidHoverDarkColor,\n      fluidHoverLightColor,\n      fluidHoverEdgeColor,\n      // todo: all attributes need to be parsed and ready during configuration\n      eventArgs,\n      dataLabelTooltip,\n      dataLabelObj,\n      fluidAttr = dsConfig.fluidAttr,\n      backColor,\n      frontColor,\n      fluidFill,\n      borderColor = convertColor(darkConColor, 50),\n      btnBorderAttr = { 'stroke-width': 4 },\n      btnBorder1Attr = { 'stroke-width': 4 },\n      btnBorderLightAttr = { 'stroke-width': 0 },\n      backAttr = { 'stroke-width': 1 },\n      fluidTopAttr = { 'stroke-width': 2 },\n      frontAttr = { 'stroke-width': 1 },\n      frontLightAttr = { 'stroke-width': 0 },\n      frontLight1Attr = { 'stroke-width': 0 },\n      cylinterTopAttr = { 'stroke-width': 2 },\n      hotElementAttr = {\n        stroke: TRACKER_FILL,\n        fill: TRACKER_FILL\n      },\n      dataLabelContainerAttr = {},\n      labelAttr;\n\n    if (!fluidAttr) {\n      fluidAttr = dsConfig.fluidAttr = {};\n    }\n\n    fluidAttr['stroke-width'] = 0;\n    eventArgs = {\n      value: dsConfig.value,\n      displayValue: dsConfig.displayValue,\n      toolText: dsConfig.toolText,\n      cylOriginX: dsConfig.gaugeOriginX,\n      cylOriginY: dsConfig.gaugeOriginY,\n      cylRadius: dsConfig.gaugeRadius,\n      cylHeight: dsConfig.gaugeHeight,\n      cylYScale: dsConfig.gaugeYScale,\n      cylFillColor: dsConfig.gaugeFillColor,\n      cylGlassColor: dsConfig.gaugeContainerColor\n    };\n\n    // Set attributes for 3d lighting\n    if (use3DLighting) {\n      backColor = lightConColor + COMMASTRING + darkConColor + COMMASTRING + lightConColor +\n        COMMASTRING + darkConColor + COMMASTRING + darkConColor1 + COMMASTRING +\n        darkConColor1 + COMMASTRING + darkConColor + COMMASTRING + lightConColor;\n      fluidFill = toRaphaelColor({\n        FCcolor: {\n          cx: 0.5,\n          cy: 0,\n          r: HUNDREDPERCENT,\n          color: fluidLightColor + COMMASTRING + fluidDarkColor,\n          alpha: fluidAlpha + COMMASTRING + fluidAlpha,\n          ratio: zeroCommaHundredStr,\n          radialGradient: true\n        }\n      });\n\n      topColorStr = toRaphaelColor({\n        FCcolor: {\n          cx: 0.5,\n          cy: 0.7,\n          r: HUNDREDPERCENT,\n          color: fluidLightColor + COMMASTRING + fluidDarkColor,\n          alpha: fluidAlpha + COMMASTRING + fluidAlpha,\n          ratio: zeroCommaHundredStr,\n          radialGradient: true\n        }\n      });\n      topStrokeStr = convertColor(fluidLightColor, fluidAlpha);\n      frontColor = lightConColor + COMMASTRING + darkConColor + COMMASTRING + lightConColor +\n        COMMASTRING + lightConColor + COMMASTRING + darkConColor + COMMASTRING +\n        lightConColor + COMMASTRING + darkConColor + COMMASTRING + lightConColor;\n\n      // Set attribute for front light left\n      frontLightAttr.path = [M, x1, y2, A, r, r2, 1, 0, 0, x5, y5, L, x5, y4, A, r, r2, 0, 0, 1, x1, y, Z];\n      frontLightAttr.fill = toRaphaelColor({\n        FCcolor: {\n          color: frontColor,\n          alpha: topLightGlowAlphaStr,\n          ratio: zeroCommaHundredStr,\n          angle: 0\n        }\n      });\n\n      // Set attribute for front light right\n      frontLight1Attr.path = [M, x6, y5, A, r, r2, 0, 0, 0, x2, y2, L, x2, y, A, r, r2, 1, 0, 0, x6, y4, Z];\n      frontLight1Attr.fill = toRaphaelColor({\n        FCcolor: {\n          color: frontColor,\n          alpha: topLightGlowAlphaStr,\n          ratio: zeroCommaHundredStr,\n          angle: 180\n        }\n      });\n    } else {\n      backColor = lightConColor + COMMASTRING + darkConColor + COMMASTRING + darkConColor +\n        COMMASTRING + darkConColor + COMMASTRING + darkConColor + COMMASTRING +\n        darkConColor + COMMASTRING + darkConColor + COMMASTRING + lightConColor;\n      topColorStr = fluidFill = convertColor(fluidDarkColor, fluidAlpha);\n      topStrokeStr = convertColor(fluidEdgeColor);\n      frontColor = darkConColor + COMMASTRING + darkConColor + COMMASTRING + darkConColor +\n        COMMASTRING + darkConColor + COMMASTRING + darkConColor + COMMASTRING +\n        darkConColor + COMMASTRING + darkConColor + COMMASTRING + darkConColor;\n    }\n    // set attributes for fluid fill\n    fluidAttr.bodyOut = {\n      fill: fluidFill\n    };\n    fluidAttr.topOut = {\n      stroke: topStrokeStr,\n      fill: topColorStr\n    };\n    // create hover attributes\n    if (showHoverEffect) {\n      fluidHoverDarkColor = getDarkColor(plotFillHoverColor, 70);\n      fluidHoverLightColor = getLightColor(plotFillHoverColor, 70);\n      fluidHoverEdgeColor = getDarkColor(fluidHoverDarkColor, 90);\n\n      if (use3DLighting) {\n        fluidAttr.bodyHover = {\n          fill: toRaphaelColor({\n            FCcolor: {\n              cx: 0.5,\n              cy: 0,\n              r: HUNDREDPERCENT,\n              color: fluidHoverLightColor + COMMASTRING + fluidHoverDarkColor,\n              alpha: plotFillHoverAlpha + COMMASTRING + plotFillHoverAlpha,\n              ratio: zeroCommaHundredStr,\n              radialGradient: true\n            }\n          })\n        };\n\n        fluidAttr.topHover = {\n          stroke: convertColor(fluidHoverLightColor, plotFillHoverAlpha),\n          fill: toRaphaelColor({\n            FCcolor: {\n              cx: 0.5,\n              cy: 0.7,\n              r: HUNDREDPERCENT,\n              color: fluidHoverLightColor + COMMASTRING + fluidHoverDarkColor,\n              alpha: plotFillHoverAlpha + COMMASTRING + plotFillHoverAlpha,\n              ratio: zeroCommaHundredStr,\n              radialGradient: true\n            }\n          })\n        };\n      } else {\n        fluidAttr.bodyHover = {\n          fill: convertColor(fluidHoverDarkColor, plotFillHoverAlpha)\n        };\n        fluidAttr.topHover = {\n          stroke: convertColor(fluidHoverEdgeColor),\n          fill: convertColor(fluidHoverDarkColor, plotFillHoverAlpha)\n        };\n      }\n    }\n\n    // Set attrinbute of fluid\n    fluidAttr.fill = fluidFill;\n    fluidAttr.path = [M, x1, y2, A, r, mathMax(r2, 1), 0, 0, 0, x2, y2,\n      L, x2, y3, A, r, mathMax(r2, 1), 0, 0, 1, x1, y3, Z];\n\n    // Set attribute of fluid top\n    fluidTopAttr.fill = topColorStr;\n    fluidTopAttr.stroke = topStrokeStr;\n    fluidTopAttr.path = [M, x3, y3, A, r3, r2, 0, 0, 0, x4, y3, L, x4, y3, A, r3, r2, 0, 0, 0, x3, y3, Z];\n\n    // Set attribute for btnBorder\n    btnBorderAttr.stroke = convertColor(darkConColor, 80);\n    btnBorderAttr.path = [M, xBt1, yBt1, A, rBt1, rBt2, 0, 0, 0, xBt2, yBt1, L, xBt2, yBt2,\n      A, rBt1, rBt2, 0, 0, 0, xBt1, yBt2, Z];\n\n    // Set attribute for btnBorder1\n    btnBorder1Attr.stroke = borderColor;\n    btnBorder1Attr.path = [M, x1, yBt1, A, r, r2, 0, 0, 0, x2, yBt1, L, x2, yBt2, A, r, r2, 0, 0, 0, x1, yBt2, Z];\n\n    // Set attribute for btnBorderLight\n    btnBorderLightAttr.path = [M, x1, y2, A, r, r2, 0, 0, 0, x2, y2, A, r, r2, 0, 0, 0, x1, y2, Z];\n    btnBorderLightAttr.fill = toRaphaelColor({\n      FCcolor: {\n        color: lightConColor + COMMASTRING + darkConColor + COMMASTRING + lightConColor +\n          COMMASTRING + lightConColor + COMMASTRING + darkConColor + COMMASTRING +\n          fluidDarkColor + COMMASTRING + darkConColor + COMMASTRING + lightConColor,\n        alpha: btnBorderLightAlphaStr,\n        ratio: btnBorderLightRatioStr,\n        angle: 0\n      }\n    });\n\n    // Set attribute for back element\n    backAttr.path = [M, x1, y2, A, r, r2, 0, 0, 0, x2, y2, L, x2, y, A, r, r2, 0, 0, 0, x1, y, Z];\n    backAttr.stroke = borderColor;\n    backAttr.fill = toRaphaelColor({\n      FCcolor: {\n        color: backColor,\n        alpha: backAlphaStr,\n        ratio: backRatioStr,\n        angle: 0\n      }\n    });\n\n    // Set attribute for front element\n    frontAttr.path = [M, x1, y2, A, r, r2, 0, 0, 0, x2, y2, L, x2, y, A, r, r2, 0, 0, 1, x1, y, Z];\n    frontAttr.stroke = borderColor;\n    frontAttr.fill = toRaphaelColor({\n      FCcolor: {\n        color: frontColor,\n        alpha: backAlphaStr,\n        ratio: frontRatioStr,\n        angle: 0\n      }\n    });\n\n    // Set attribute for cylinder top\n    cylinterTopAttr.stroke = convertColor(darkConColor, 40);\n    cylinterTopAttr.path = [M, x1, y6, A, r, r2, 0, 0, 0, x2, y6, L, x2, y6, A, r, r2, 0, 0, 0, x1, y6, Z];\n\n    hotElementAttr.path = [M, x1, y2, x1, yBt1 + 4, A, r, r2, 0, 0, 0, x2, yBt1 + 4, L, x2, y2, x2, y,\n      A, r, r2, 0, 0, 0, x1, y, Z];\n\n    // Set the opacity of dataLabelContainer according to showValue value\n    dataLabelContainerAttr.opacity = dsConfig.showValue ? 1 : 0;\n    smartLabel.setStyle(style);\n    ypos = y2 + r2 + (dsConfig.valuePadding || 0) + 8; // glass bottom extra thick border\n    dataLabelObj = smartLabel.getSmartText(dsConfig.displayValue, chartConfig.width - chartConfig.marginLeft - chartConfig.marginRight - (canvasHorizontalDiff / 2), +chartConfig.height - ypos - chartConfig.marginBottom);\n    dataLabelTooltip = dataLabelObj.tooltext || BLANKSTRING;\n    // Label Attributes\n    labelAttr = {\n      text: dataLabelObj.text,\n      x: x,\n      y: ypos,\n      'text-anchor': POSITION_MIDDLE,\n      'vertical-align': POSITION_TOP,\n      fill: style.color,\n      'text-bound': [style.backgroundColor, style.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash]\n    };\n\n    // Create/Reuse container\n    container = animationManager.setAnimation({\n      el: containerDummy || 'group',\n      attr: { name: 'cylinder' },\n      container: parentContainer,\n      component: dataSet,\n      label: 'group'\n    });\n    // Create/Reuse btnBorder element\n    btnBorder = animationManager.setAnimation({\n      el: btnBorder || 'path',\n      attr: btnBorderAttr,\n      container: container,\n      component: dataSet,\n      label: 'path'\n    });\n    // Create/Reuse btnBorder1 element\n    btnBorder1 = animationManager.setAnimation({\n      el: btnBorder1 || 'path',\n      attr: btnBorder1Attr,\n      container: container,\n      component: dataSet,\n      label: 'path'\n    });\n    // Create/Reuse btnBorderLight element\n    btnBorderLight = animationManager.setAnimation({\n      el: btnBorderLight || 'path',\n      attr: btnBorderLightAttr,\n      container: container,\n      component: dataSet,\n      label: 'path'\n    });\n    // Create/Reuse back element\n    back = animationManager.setAnimation({\n      el: back || 'path',\n      attr: backAttr,\n      container: container,\n      component: dataSet,\n      label: 'path'\n    });\n    // Create/Reuse fluid element\n    fluid = animationManager.setAnimation({\n      el: fluid || 'path',\n      attr: fluidAttr,\n      container: container,\n      component: dataSet,\n      label: 'plotFluid'\n    });\n    // Create/Reuse fluidTop element\n    fluidTop = animationManager.setAnimation({\n      el: fluidTop || 'path',\n      attr: fluidTopAttr,\n      container: container,\n      component: dataSet,\n      label: 'plotFluidTop'\n    });\n    // Create/Reuse front element\n    front = animationManager.setAnimation({\n      el: front || 'path',\n      attr: frontAttr,\n      container: container,\n      component: dataSet,\n      label: 'path'\n    });\n    // Create/Reuse frontLight element\n    frontLight = animationManager.setAnimation({\n      el: frontLight || 'path',\n      attr: frontLightAttr,\n      container: container,\n      component: dataSet,\n      label: 'path'\n    });\n    // Create/Reuse frontLight1 element\n    frontLight1 = animationManager.setAnimation({\n      el: frontLight1 || 'path',\n      attr: frontLight1Attr,\n      container: container,\n      component: dataSet,\n      label: 'path'\n    });\n    // Create/Reuse cylinderTop element\n    cylinterTop = animationManager.setAnimation({\n      el: cylinterTop || 'path',\n      attr: cylinterTopAttr,\n      container: container,\n      component: dataSet,\n      label: 'path'\n    });\n    // Create/Reuse trackerContainer element\n    trackerContainer = animationManager.setAnimation({\n      el: trackerContainer || 'group',\n      attr: {\n        name: 'tracker-group'\n      },\n      container: trackerLayer,\n      component: dataSet,\n      label: 'group'\n    });\n    // Create/Reuse dataLabelContainer\n    dataLabelContainer = animationManager.setAnimation({\n      el: dataLabelContainerDummy || 'group',\n      attr: dataLabelContainerAttr,\n      container: dataLabelsLayer,\n      component: dataSet,\n      label: 'labelGroup'\n    });\n    // Create/Reuse label\n    label = animationManager.setAnimation({\n      el: label || 'text',\n      attr: labelAttr,\n      container: dataLabelContainer,\n      component: dataSet,\n      label: 'text'\n    });\n    // Create/Reuse hotElement\n    hotElement = animationManager.setAnimation({\n      el: hotElement || 'path',\n      attr: hotElementAttr,\n      container: trackerContainer,\n      component: dataSet,\n      label: 'path'\n    });\n    if (dsConfig.showTooltip) {\n      toolTipController.enableToolTip(label, dataLabelTooltip);\n    } else {\n      toolTipController.disableToolTip(label);\n    }\n\n    // Add to _graphics of dataset if container is not present\n    if (!containerDummy) {\n      // Attach event handlers\n      hotElement\n        .on('fc-click', function (setDataArr) {\n          var ele = this;\n          iapi.plotEventHandler(ele, setDataArr);\n        })\n        .hover(\n          function (data) {\n            var ele = this;\n            if (dsConfig.showHoverEffect) {\n              dataSet.getGraphicalElement('fluid') && dataSet.getGraphicalElement('fluid').attr(fluidAttr.bodyHover);\n              dataSet.getGraphicalElement('fluidTop') && dataSet.getGraphicalElement('fluidTop').attr(fluidAttr.topHover);\n            }\n            iapi.plotEventHandler(ele, data, ROLLOVER);\n          },\n          function (data) {\n            var ele = this;\n            if (dsConfig.showHoverEffect) {\n              dataSet.getGraphicalElement('fluid') && dataSet.getGraphicalElement('fluid').attr(fluidAttr.bodyOut);\n              dataSet.getGraphicalElement('fluidTop') && dataSet.getGraphicalElement('fluidTop').attr(fluidAttr.topOut);\n            }\n            iapi.plotEventHandler(ele, data, ROLLOUT);\n          }\n        );\n\n      dataSet.addContainer('container', container);\n      dataSet.addGraphicalElement('btnBorder', btnBorder);\n      dataSet.addGraphicalElement('btnBorder1', btnBorder1);\n      dataSet.addGraphicalElement('btnBorderLight', btnBorderLight);\n      dataSet.addGraphicalElement('back', back);\n      dataSet.addGraphicalElement('fluid', fluid);\n      dataSet.addGraphicalElement('fluidTop', fluidTop);\n      dataSet.addGraphicalElement('front', front);\n      dataSet.addGraphicalElement('frontLight', frontLight);\n      dataSet.addGraphicalElement('frontLight1', frontLight1);\n      dataSet.addGraphicalElement('cylinterTop', cylinterTop);\n      dataSet.addContainer('trackerContainer', trackerContainer);\n      dataSet.addGraphicalElement('hotElement', hotElement);\n    }\n\n    // If dataLabelContainer is not present previously, add to _containers of dataset\n    if (!dataLabelContainerDummy) {\n      dataSet.addContainer('dataLabelContainer', dataLabelContainer);\n      dataSet.addGraphicalElement('label', label);\n    }\n    // add event args\n    hotElement.data(EVENTARGS, eventArgs);\n    // Add/Remove tooltip\n    if (!dsConfig.toolText) {\n      toolTipController.disableToolTip(hotElement);\n    } else {\n      toolTipController.enableToolTip(hotElement, dsConfig.toolText);\n    }\n  }\n}\nexport default CylinderDataset;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  pluckNumber,\n  pluck,\n  COMMASTRING,\n  BLANK,\n  getValidValue,\n  parseTooltext,\n  parseUnsafeString,\n  HUNDREDSTRING,\n  preDefStr,\n  convertColor,\n  getLightColor\n} from '@fusioncharts/core/src/lib';\nimport {ComponentInterface} from '@fusioncharts/core/src/component-interface';\n\nvar UNDEF,\n  BLANKSTRING = BLANK,\n\n  AXISPOSITION_TOP = 1,\n  AXISPOSITION_BOTTOM = 3,\n\n  gaugeFillColorStr = preDefStr.gaugeFillColorStr,\n  gaugeBorderColorStr = preDefStr.gaugeBorderColorStr,\n\n  dummyStr = 'dummy',\n  FILLMIXDARK10 = '{dark-10}';\n\n/**\n * Base class of thermometer and cylinder dataset\n *\n * @class CylinderThermometerBase\n * @extends {ComponentInterface}\n */\nclass CylinderThermometerBase extends ComponentInterface {\n  /**\n   * returns type\n   *\n   * @return {string} dataset\n   * @memberof CylinderThermometerBase\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Returns name\n   *\n   * @return {string} name\n   * @memberof CylinderThermometerBase\n   */\n  getName () {\n    return 'cylinderThermometerBase';\n  }\n  /**\n   * Function to update the value\n   * @param {number} setData : value that will be added\n   * @param {boolean} draw : whether to update the visuals also\n   */\n  setValue (setData, draw) {\n    if (!setData) {\n      return;\n    }\n    var dataSet = this,\n      datasetConfig = dataSet.config,\n      chart = dataSet.getFromEnv('chart'),\n      jsonChartObj = chart.getFromEnv('dataSource').chart,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      value = setData.value,\n      tooltext = setData.tooltext || jsonChartObj.plottooltext,\n      formattedValue;\n\n    datasetConfig.value = value = numberFormatter.getCleanValue(value);\n    if (value !== null) {\n      formattedValue = datasetConfig.formattedValue = numberFormatter.dataLabels(datasetConfig.value);\n\n      if (!datasetConfig.showValue) {\n        datasetConfig.displayValue = BLANKSTRING;\n      } else { // determine the dispalay value then\n        datasetConfig.displayValue = setData.label || getValidValue(formattedValue, BLANK);\n      }\n\n      if (!datasetConfig.showTooltip) {\n        datasetConfig.toolText = BLANKSTRING;\n      } else if (tooltext !== UNDEF) {\n        datasetConfig.toolText = parseUnsafeString(parseTooltext(pluck(setData.tooltext, tooltext),\n          [1, 2], {\n            formattedValue: formattedValue,\n            value: value\n          }, setData, jsonChartObj), false);\n      } else { // determine the dispalay value then\n        datasetConfig.toolText = parseUnsafeString(parseTooltext(pluck(setData.tooltext,\n          formattedValue === null ? BLANKSTRING : formattedValue)), false);\n      }\n    } else {\n      datasetConfig.displayValue = BLANKSTRING;\n      datasetConfig.toolText = BLANKSTRING;\n      datasetConfig.formattedValue = null;\n    }\n\n    if (draw) {\n      dataSet.draw();\n    }\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level\n    * @param  {Object} dataSetJson JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configure (dataSetJson) {\n    if (!dataSetJson) {\n      return false;\n    }\n    this.setValue(dataSetJson && dataSetJson.data && dataSetJson.data[0]);\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      jsonData = chart.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      datasetConfig = dataSet.config || (dataSet.config = {}),\n      colorM = dataSet.getFromEnv('color-manager'),\n      chartConfig = chart.config,\n      gaugeBorderAlpha,\n      showHoverEffect = pluckNumber(chartAttrs.showhovereffect),\n      plotFillHoverColor,\n      gaugeFillAlpha,\n      gaugeFillColor;\n\n    datasetConfig.showValue = pluckNumber(chartAttrs.showvalue, chartAttrs.showvalues, 1);\n    datasetConfig.showTooltip = pluckNumber(chartAttrs.showtooltip, 1);\n    datasetConfig.valuePadding = pluckNumber(chartAttrs.valuepadding, 2);\n    datasetConfig.tooltipSepChar = pluck(chartAttrs.tooltipsepchar, COMMASTRING);\n    datasetConfig.pointerOnOpp = pluckNumber(chartAttrs.pointerontop, 0);\n    datasetConfig.axisPosition = pluckNumber(chartAttrs.ticksbelowgauge, chartAttrs.ticksbelowgraph,\n      this.ticksbelowgauge, 1) ? AXISPOSITION_BOTTOM : AXISPOSITION_TOP;\n    datasetConfig.valueAbovePointer = pluckNumber(chartAttrs.valueabovepointer, 1);\n\n    datasetConfig.labelStyle = chartConfig.dataLabelStyle;\n\n    gaugeFillColor = datasetConfig.gaugeFillColor = pluck(chartAttrs.gaugefillcolor,\n      chartAttrs.thmfillcolor, chartAttrs.cylfillcolor, colorM.getColor(gaugeFillColorStr));\n    gaugeFillAlpha = datasetConfig.gaugeFillAlpha = pluckNumber(chartAttrs.gaugefillalpha,\n      chartAttrs.cylfillalpha, chartAttrs.thmfillalpha, HUNDREDSTRING);\n\n    // Gauge Border properties\n    datasetConfig.showGaugeBorder = pluckNumber(chartAttrs.showgaugeborder, 1);\n    gaugeBorderAlpha = datasetConfig.showGaugeBorder ? pluckNumber(chartAttrs.gaugeborderalpha, 40) : 0;\n    datasetConfig.rawGaugeBorderColor = pluck(chartAttrs.gaugebordercolor,\n      colorM.getColor(gaugeBorderColorStr));\n    datasetConfig.gaugeBorderAlpha = gaugeBorderAlpha;\n    // We are using 40 for default alpha of Thermometer Gauge Border\n    datasetConfig.gaugeBorderColor = convertColor(datasetConfig.rawGaugeBorderColor, gaugeBorderAlpha);\n    datasetConfig.gaugeBorderThickness = pluckNumber(chartAttrs.gaugeborderthickness, 1);\n\n    // Thermometer Glass color\n    datasetConfig.gaugeContainerColor = pluck(chartAttrs.thmglasscolor, chartAttrs.cylglasscolor,\n      chart.glasscolor, getLightColor(gaugeFillColor, 30));\n\n    if (showHoverEffect !== 0 && (showHoverEffect || chartAttrs.plotfillhovercolor ||\n                    chartAttrs.plotfillhoveralpha || chartAttrs.plotfillhoveralpha === 0)) {\n      datasetConfig.showHoverEffect = true;\n\n      plotFillHoverColor = pluck(chartAttrs.plotfillhovercolor, chartAttrs.cylfillhovercolor,\n        chartAttrs.thmfillhovercolor, FILLMIXDARK10);\n      datasetConfig.plotFillHoverAlpha = pluckNumber(chartAttrs.plotfillhoveralpha,\n        chartAttrs.cylfillhoveralpha, chartAttrs.thmfillhoveralpha, gaugeFillAlpha);\n      datasetConfig.plotFillHoverColor = /\\{/.test(plotFillHoverColor)\n        ? colorM.parseColorMix(gaugeFillColor, plotFillHoverColor)[0] : plotFillHoverColor;\n    }\n    dataSet.setValue(jsonData);\n    chart._parseSpecialConfig && chart._parseSpecialConfig();\n  }\n  /**\n   * Fetch space taken by labels\n   * @return {number} height taken by data label\n   */\n  _getLabelSpace () {\n    var dataSet = this,\n      datasetConfig = dataSet.config,\n      chart = dataSet.getFromEnv('chart'),\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      labelObj;\n\n    smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n    smartLabel.setStyle(datasetConfig.labelStyle); // @todo map datalabel style\n    labelObj = smartLabel.getOriSize(datasetConfig.displayValue !== BLANK\n      ? datasetConfig.displayValue : dummyStr);\n\n    return labelObj.height ? (labelObj.height + datasetConfig.valuePadding) : 0;\n  }\n  /**\n   * Fetch data limits for scale\n   * @return {Object} returns max, min of data limits\n   */\n  getDataLimits () {\n    var dataSet = this,\n      datasetConfig = dataSet.config,\n      min,\n      max;\n    max = min = datasetConfig.value;\n\n    datasetConfig.maxValue = max;\n    datasetConfig.minValue = min;\n\n    return {\n      forceMin: true,\n      forceMax: true,\n      max: max,\n      min: min\n    };\n  }\n  /**\n   * Updates data during realTime\n   */\n  updateData () {\n    var dataSet = this,\n      dataObj = arguments[0],\n      draw = arguments[2],\n      conf = dataSet.config,\n      prevMax = conf.maxValue,\n      prevMin = conf.prevMin,\n      value = conf.value,\n      chart = dataSet.getFromEnv('chart'),\n      drawManager = dataSet.groupManager || dataSet,\n      scale = dataSet.getFromEnv('scale');\n\n    dataSet.setValue(dataObj.data[0]);\n    conf.maxValue = value;\n    conf.minValue = value;\n\n    if (conf.maxValue !== prevMax || conf.minValue !== prevMin) {\n      dataSet.config.maxminFlag = true;\n    }\n\n    if (draw) {\n      chart._setAxisLimits();\n      scale.draw();\n      drawManager.draw();\n    }\n  }\n  /**\n   * function to set index for the dataset component\n   * @param {number} index    index according to the index JSON\n   */\n  setJSONIndex (index) {\n    this.config.index = index;\n  }\n  /**\n   * function to return index for the dataset component\n   * @return {number}    index according to the index JSON\n   */\n  getJSONIndex () {\n    return this.config.index || 0;\n  }\n}\n\nexport default CylinderThermometerBase;\n","import { INITIALSTR, FINALSTR } from '@fusioncharts/core/src/lib';\n\nvar fadeEffect = [{\n  initialAttr: function () {\n    return {opacity: 0};\n  },\n  finalAttr: function () {\n    return {opacity: 1};\n  }\n}];\n\nexport default {\n  'initial.dataset.cylinder': function () {\n    var component = this,\n      conf = component.config;\n    return {\n      'plotFluid.appearing': function (input) {\n        var pathArr = input.attr.path.slice(0);\n        pathArr[13] = pathArr[21] = pathArr[2];\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'initial'\n        }, {\n          initialAttr: {\n            path: pathArr\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'middle'\n        }];\n      },\n      'plotFluid.updating': null,\n      'plotFluidTop.appearing': function (input) {\n        var pathArr = input.attr.path.slice(0);\n        pathArr[2] = pathArr[10] = pathArr[13] = pathArr[21] = conf.cylBase;\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'initial'\n        }, {\n          initialAttr: {\n            path: pathArr\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'middle'\n        }];\n      },\n      'plotFluidTop.updating': null,\n      'text.appearing': function () {\n        fadeEffect[0].slot = FINALSTR;\n        return fadeEffect;\n      },\n      'text.updating': null,\n      'labelGroup.appearing': function () {\n        fadeEffect[0].slot = FINALSTR;\n        return fadeEffect;\n      },\n      'labelGroup.updating': null,\n      'path.appearing': function () {\n        fadeEffect[0].slot = INITIALSTR;\n        return fadeEffect;\n      },\n      'path.updating': null\n    };\n  }\n};\n","import Angulargauge from '@fusioncharts/widgets/src/chart/angulargauge';\nexport default Angulargauge;\n","\nimport {\n  pluckNumber,\n  pluck,\n  componentFactory,\n  defaultGaugePaletteOptions,\n  getValidValue,\n  chartPaletteStr,\n  extend2,\n  pluckFontSizeMaintainUnit\n} from '@fusioncharts/core/src/lib';\nimport { _getData, _setData, _getDataForId, _setDataForId } from '../_internal/angular-hlinear-common';\nimport ColorGradient from '@fusioncharts/core/src/color-utils/color-bucket';\nimport Gauge from '../_internal/gauge';\nimport scaleFactory from '../../factories/polar-gauge-axis';\nimport datasetFactory from '../../factories/angular-gauge-dataset';\n\nvar UNDEF,\n  BLANK = '',\n  math = Math,\n  mathMin = math.min,\n  mathPI = math.PI,\n  deg2rad = mathPI / 180,\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  FRIENDLY_NAME = 'Angular Gauge',\n  ANG_GAUGE = 'angulargauge',\n  EASE_OUT = 'easeOut';\n\nclass AngularGauge extends Gauge {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'AngularGauge';\n  }\n\n  constructor () {\n    super();\n\n    this.isHorizontal = true;\n    this.isAxisOpposite = false;\n    this.isRealTime = true;\n    this.drawPlotlines = false;\n    this.drawPlotBands = false;\n    this.isAxisReverse = false;\n    this.colorRange = true;\n    this.defaultPaletteOptions = extend2(extend2({}, defaultGaugePaletteOptions), {\n      dialColor: ['999999,ffffff,999999', 'ADB68F,F3F5DD,ADB68F', 'A2C4C8,EDFBFE,A2C4C8',\n        'FDB548,FFF5E8,FDB548', 'FF7CA0,FFD1DD,FF7CA0'],\n      dialBorderColor: ['999999', 'ADB68F', 'A2C4C8', 'FDB548', 'FF7CA0'],\n      pivotColor: ['999999,ffffff,999999', 'ADB68F,F3F5DD,ADB68F', 'A2C4C8,EDFBFE,A2C4C8',\n        'FDB548,FFF5E8,FDB548', 'FF7CA0,FFD1DD,FF7CA0'],\n      pivotBorderColor: ['999999', 'ADB68F', 'A2C4C8', 'FDB548', 'FF7CA0']\n    }, false, true);\n    this.rtParserModify = true;\n    this._setCategories = function () {\n      // Override fn\n    };\n    this.registerFactory('dataset', datasetFactory, ['axis']);\n    this.registerFactory('axis', scaleFactory, ['canvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'AngularGauge';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = FRIENDLY_NAME;\n    config.hasLegend = false;\n    config.defaultDatasetType = ANG_GAUGE;\n    config.animationeffect = EASE_OUT;\n    config.skipCanvasDrawing = true;\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    let iapi = this,\n      jsonData = iapi.getFromEnv('dataSource'),\n      colorrange = jsonData.colorrange;\n    // If color array is present and contains non-zero color items\n    if (colorrange && colorrange.color && colorrange.color.length) {\n      // componentFactory(iapi, ColorGradient, 'colorRange', 1, [colorrange]);\n      componentFactory(iapi, ColorGradient, 'colorRange', 1, [{\n        colorRange: colorrange,\n        numberFormatter: iapi.getFromEnv('number-formatter')\n      }]);\n      iapi.addToEnv('colorRange', iapi.getChildren('colorRange')[0]);\n    } else {\n      // If colorRange is not present delete colorRange from env\n      iapi.deleteFromEnv('colorRange');\n    }\n  }\n\n  _spaceManager () {\n    var iapi = this,\n      availableWidth,\n      availableHeight,\n      config = iapi.config,\n      dataSet = iapi.getChildren('dataset')[0],\n      scale = iapi.getFromEnv('scale'),\n      axisConfig = scale.config,\n      dataObject = dataSet.components.data[0],\n      chart = iapi,\n      jsonData = chart.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      datasetConfig = dataSet.config,\n      scaleFactor = datasetConfig.scaleFactor,\n      yPosExtra = 0,\n      yNegExtra = 0,\n      radius = 0,\n      centerX = 0,\n      centerY = 0,\n      compositPivotRadius = datasetConfig.pivotRadius,\n      displayValueLineHeight = config.dataLabels.style.lineHeight,\n      displayValueCount = config.displayValueCount,\n      chartBorderWidth = config.borderWidth,\n      minChartWidth = config.minChartWidth,\n      minChartHeight = config.minChartHeight,\n      radiusDeduce = 0,\n      gaugeSpacingObj,\n      innerRadiusFactor,\n      pivotRadius,\n      axisSpace,\n      chartBorderHorizontal,\n      chartBorderVertical;\n    //* ***** Manage space\n    if ((config.canvasWidth - 2 * chartBorderWidth) < minChartWidth) {\n      chartBorderVertical = (config.canvasWidth - minChartWidth) / 2;\n    }\n\n    if ((config.canvasHeight - 2 * chartBorderWidth) < minChartHeight) {\n      chartBorderHorizontal = (config.canvasHeight - minChartHeight) / 2;\n    }\n\n    iapi._allocateSpace({\n      top: chartBorderHorizontal || chartBorderWidth,\n      bottom: chartBorderHorizontal || chartBorderWidth,\n      left: chartBorderVertical || chartBorderWidth,\n      right: chartBorderVertical || chartBorderWidth\n    });\n\n    // availableHeight = config.canvasHeight * 0.225;\n    // iapi._allocateSpace(iapi._manageCaptionSpacing(availableHeight));\n\n    if (config.autoScale) {\n      config.scaleFactor = scaleFactor = AngularGauge._getScaleFactor(datasetConfig.origW,\n        datasetConfig.origH, config.width, config.height);\n    } else {\n      config.scaleFactor = scaleFactor = 1;\n    }\n    displayValueLineHeight = displayValueLineHeight.replace(/px/i, BLANK);\n    if (/^\\d+\\%$/.test(datasetConfig.gaugeinnerradius)) {\n      innerRadiusFactor = parseInt(datasetConfig.gaugeinnerradius, 10) / 100;\n    } else {\n      innerRadiusFactor = 0.7;\n    }\n\n    pivotRadius = compositPivotRadius = pluckNumber(getValidValue(chartAttrs.pivotradius) * scaleFactor, 5);\n    datasetConfig.pivotRadius = pivotRadius;\n    compositPivotRadius = Math.max(compositPivotRadius, datasetConfig.rearExtension * scaleFactor);\n\n    if (dataObject && dataObject.config && dataObject.config.rearextension) {\n      compositPivotRadius = Math.max(compositPivotRadius, dataObject.config.rearextension * scaleFactor);\n    }\n    datasetConfig.compositPivotRadius = compositPivotRadius;\n\n    yPosExtra = displayValueCount * displayValueLineHeight + 2 + pivotRadius;\n    if (!datasetConfig.valueBelowPivot) {\n      yNegExtra = yPosExtra;\n      yPosExtra = 0;\n    }\n\n    datasetConfig.gaugeOuterRadius = pluckNumber(Math.abs(getValidValue(chartAttrs.gaugeouterradius) *\n      scaleFactor));\n    // Asume gauge inner radius to be a default of 70% of gauge outer radius\n    datasetConfig.gaugeInnerRadius = pluckNumber(Math.abs(getValidValue(chartAttrs.gaugeinnerradius) *\n      scaleFactor), datasetConfig.gaugeOuterRadius * innerRadiusFactor);\n\n    availableWidth = config.canvasWidth * 0.7;\n    availableHeight = config.canvasHeight * 0.7;\n    // Polar axis's labels placement is affected only by the width of the chart and not its height\n    axisSpace = scale.placeAxis(availableWidth);\n\n    availableHeight = config.canvasHeight * 0.7;\n    iapi._manageChartMenuBar(availableHeight);\n\n    gaugeSpacingObj = AngularGauge._angularGaugeSpaceManager(datasetConfig.gaugeStartAngle, datasetConfig.gaugeEndAngle,\n      config.canvasWidth, config.canvasHeight, datasetConfig.gaugeOuterRadius,\n      pluckNumber((getValidValue(chartAttrs.gaugeoriginx) * scaleFactor) - config.canvasLeft),\n      pluckNumber((getValidValue(chartAttrs.gaugeoriginy) * scaleFactor) - config.canvasTop),\n      (compositPivotRadius + axisConfig.polarPadding),\n      yPosExtra, yNegExtra);\n\n    radius = gaugeSpacingObj.radius = pluckNumber(gaugeSpacingObj.radius, gaugeSpacingObj.maxRadius);\n    datasetConfig.gaugeOriginX = gaugeSpacingObj.centerX + config.canvasLeft;\n    datasetConfig.gaugeOriginY = gaugeSpacingObj.centerY + config.canvasTop;\n    centerX = gaugeSpacingObj.centerX;\n    centerY = gaugeSpacingObj.centerY;\n    /*\n      When axis space on left is less than axis space on top then check\n      if distance between center and axis space is greater than distance\n      between radius and axis space left, then the radius must be deduced by\n      axis space left else it must be deduced by axis space top.\n    */\n    if (axisSpace.left < axisSpace.top) {\n      if ((centerX - axisSpace.left) >= (radius - axisSpace.left) &&\n        (centerY - axisSpace.top) >= (radius - axisSpace.left)) {\n        radiusDeduce = axisSpace.left;\n      } else {\n        radiusDeduce = axisSpace.top;\n      }\n      /*\n        When axis space on left is greater or equal to axis space on top then check\n        if distance between center and axis space is greater than distance between\n        radius and axis space top, then radius must be deduced by axis space top else\n        it must be deduced by axis space left.\n       */\n    } else {\n      if ((centerX - axisSpace.left) >= (radius - axisSpace.top) &&\n        (centerY - axisSpace.top) >= (radius - axisSpace.top)) {\n        radiusDeduce = axisSpace.top;\n      } else {\n        radiusDeduce = axisSpace.left;\n      }\n    }\n    radiusDeduce += 2 * scale.config.polarPadding;\n    // reduce the outer radius\n    !datasetConfig.gaugeOuterRadius && (datasetConfig.gaugeOuterRadius = gaugeSpacingObj.radius - radiusDeduce);\n\n    if (datasetConfig.gaugeInnerRadius === UNDEF) {\n      datasetConfig.gaugeInnerRadius = datasetConfig.gaugeOuterRadius * innerRadiusFactor;\n    }\n    scale.setAxisConfig({\n      centerX: datasetConfig.gaugeOriginX,\n      centerY: datasetConfig.gaugeOriginY,\n      radius: gaugeSpacingObj.radius || datasetConfig.gaugeOuterRadius,\n      gaugeOuterRadius: datasetConfig.gaugeOuterRadius,\n      gaugeInnerRadius: datasetConfig.gaugeInnerRadius,\n      scaleFactor: scaleFactor\n\n    });\n  }\n\n  /**\n   * Parses and stores macro values during post space management\n   *\n   * @memberof AngularGauge\n   */\n  allocatePosition () {\n    let iapi = this,\n      config = iapi.config,\n      datasetConfig = iapi.getChildren('dataset')[0].config;\n\n    // For annotations\n    config.gaugeStartX = config.canvasLeft;\n    config.gaugeStartY = config.canvasTop;\n    config.gaugeEndX = config.canvasRight;\n    config.gaugeEndY = config.canvasBottom;\n    config.gaugeCenterX = datasetConfig.gaugeOriginX;\n    config.gaugeCenterY = datasetConfig.gaugeOriginY;\n    config.gaugeStartAngle = datasetConfig.gaugeStartAngle / deg2rad;\n    config.gaugeEndAngle = datasetConfig.gaugeEndAngle / deg2rad;\n  }\n\n  _feedAxesRawData () {\n    var iapi = this,\n      colorM = iapi.getFromEnv('color-manager'),\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = dataObj.chart,\n      scaleConf,\n      numberFormatter = iapi.getFromEnv('number-formatter'),\n      palleteString = chartPaletteStr.chart2D,\n      isAxisOpposite = pluckNumber(chartAttrs.axisontop, chartAttrs.axisonleft, (chartAttrs\n        .ticksbelowgauge !== UNDEF ? !chartAttrs.ticksbelowgauge : UNDEF), iapi.isAxisOpposite),\n      isAxisReverse = pluckNumber(chartAttrs.reverseaxis, iapi.isAxisReverse),\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    scaleConf = {\n      isVertical: !iapi.isHorizontal,\n      isReverse: isAxisReverse,\n      isOpposit: isAxisOpposite,\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, 'Verdana,sans'),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: pluck(chartAttrs.vdivlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.vdivlinealpha, colorM.getColor('divLineAlpha')),\n      divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n      alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor('altVGridColor')),\n      alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor('altVGridAlpha')),\n      numDivLines: chartAttrs.numvdivlines,\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      axisName: chartAttrs.xaxisname,\n      axisMinValue: numberFormatter.getCleanValue(chartAttrs.lowerlimit),\n      axisMaxValue: numberFormatter.getCleanValue(chartAttrs.upperlimit),\n      setAdaptiveMin: chartAttrs.setadaptivemin,\n      // adjusttm will be internally parsed as adjustdiv\n      adjustDiv: chartAttrs.adjusttm,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: chartAttrs.showlabels,\n      rotateLabels: chartAttrs.rotatelabels,\n      slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      showDivLineValues: pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues),\n      showZeroPlane: chartAttrs.showvzeroplane,\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      zeroPlaneThickness: chartAttrs.vzeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, '#000000'),\n      // Tick properties\n      majorTMNumber: chartAttrs.majortmnumber,\n      majorTMColor: chartAttrs.majortmcolor,\n      majorTMAlpha: chartAttrs.majortmalpha,\n      majorTMHeight: chartAttrs.majortmheight,\n      tickValueStep: chartAttrs.tickvaluestep,\n      showTickMarks: chartAttrs.showtickmarks,\n      connectTickMarks: chartAttrs.connecttickmarks,\n      showTickValues: chartAttrs.showtickvalues,\n      majorTMThickness: chartAttrs.majortmthickness,\n      reverseScale: chartAttrs.reversescale,\n      // Whether to display the Limits\n      showLimits: chartAttrs.showlimits,\n      minorTMNumber: chartAttrs.minortmnumber,\n      minorTMColor: chartAttrs.minortmcolor,\n      minorTMAlpha: chartAttrs.minortmalpha,\n      minorTMHeight: pluckNumber(chartAttrs.minortmheight, chartAttrs.minortmwidth),\n      minorTMThickness: chartAttrs.minortmthickness,\n      // Padding between tick mark start position and gauge\n      tickMarkDistance: pluckNumber(chartAttrs.tickmarkdistance, chartAttrs.tickmarkgap),\n      // Tick value distance\n      tickValueDistance: pluckNumber(chartAttrs.tickvaluedistance, chartAttrs.displayvaluedistance),\n      placeTicksInside: chartAttrs.placeticksinside,\n      placeValuesInside: chartAttrs.placevaluesinside,\n      upperLimitDisplay: chartAttrs.upperlimitdisplay,\n      lowerLimitDisplay: chartAttrs.lowerlimitdisplay,\n      ticksBelowGauge: chartAttrs.ticksbelowgauge,\n      ticksBelowGraph: chartAttrs.ticksbelowgraph,\n      trendValueDistance: chartAttrs.trendvaluedistance\n    };\n    scaleConf.trendPoints = dataObj.trendpoints;\n    return [scaleConf];\n  }\n\n  static _angularGaugeSpaceManager (startAngle, endAngle, canvasW, canvasH,\n    radius, _centerX, _centerY, compositPivotRadius = 0, yPostionExtra, yNegativeExtra) {\n    var rediusDefined = defined(radius),\n      centerX = _centerX,\n      centerY = _centerY,\n      centerXDefined = defined(centerX),\n      centerYDefined = defined(centerY),\n      PI2 = Math.PI * 2,\n      PI = Math.PI,\n      PIby2 = Math.PI / 2,\n      PI3by2 = PI + PIby2,\n      calculatedRadus,\n      returnObj = {\n        radius: radius,\n        centerX: centerX,\n        centerY: centerY\n      },\n      yPosExtra = yPostionExtra,\n      yNegExtra = yNegativeExtra,\n      leftX, topY, rightX, bottomY, pivotCalRequard = false,\n      startX, startY, endX, endY, tempRadius,\n      resultantEnd, range, positiveLength, negativeLength,\n      scale, startAbs = startAngle % PI2;\n\n    if (startAbs < 0) {\n      startAbs += PI2;\n    }\n    if (compositPivotRadius && compositPivotRadius < canvasW / 2 && compositPivotRadius < canvasH / 2) {\n      pivotCalRequard = true;\n    }\n    if (yPosExtra > canvasH / 2) { // max half height will be setteled\n      yPosExtra = canvasH / 2;\n    }\n    if (yNegExtra > canvasH / 2) { // max half height will be setteled\n      yNegExtra = canvasH / 2;\n    }\n    startX = Math.cos(startAngle);\n    startY = Math.sin(startAngle);\n    endX = Math.cos(endAngle);\n    endY = Math.sin(endAngle);\n    leftX = mathMin(startX, endX, 0);\n    rightX = Math.max(startX, endX, 0);\n    topY = mathMin(startY, endY, 0);\n    bottomY = Math.max(startY, endY, 0);\n    if (!rediusDefined || !centerXDefined || !centerYDefined) {\n      scale = endAngle - startAngle;\n      resultantEnd = startAbs + scale;\n      if (resultantEnd > PI2 || resultantEnd < 0) {\n        rightX = 1;\n      }\n      if (scale > 0) {\n        if ((startAbs < PIby2 && resultantEnd > PIby2) || resultantEnd > PI2 + PIby2) {\n          bottomY = 1;\n        }\n        if ((startAbs < PI && resultantEnd > PI) || resultantEnd > PI2 + PI) {\n          leftX = -1;\n        }\n        if ((startAbs < PI3by2 && resultantEnd > PI3by2) || resultantEnd > PI2 + PI3by2) {\n          topY = -1;\n        }\n      } else {\n        if ((startAbs > PIby2 && resultantEnd < PIby2) || resultantEnd < -PI3by2) {\n          bottomY = 1;\n        }\n        if ((startAbs > PI && resultantEnd < PI) || resultantEnd < -PI) {\n          leftX = -1;\n        }\n        if ((startAbs > PI3by2 && resultantEnd < PI3by2) || resultantEnd < -PIby2) {\n          topY = -1;\n        }\n      }\n      // now decide the x, y and radius\n      if (!centerXDefined) {\n        range = rightX - leftX;\n        tempRadius = canvasW / range;\n        centerX = -tempRadius * leftX;\n        calculatedRadus = tempRadius;\n        if (pivotCalRequard) {\n          if (canvasW - centerX < compositPivotRadius) {\n            centerX = canvasW - compositPivotRadius;\n            positiveLength = canvasW - centerX;\n            negativeLength = -centerX;\n            calculatedRadus = leftX ? mathMin(positiveLength / rightX, negativeLength / leftX)\n              : positiveLength / rightX;\n          } else if (centerX < compositPivotRadius) {\n            centerX = compositPivotRadius;\n            positiveLength = canvasW - centerX;\n            negativeLength = -centerX;\n            calculatedRadus = leftX ? mathMin(positiveLength / rightX, negativeLength / leftX)\n              : positiveLength / rightX;\n          }\n        }\n        returnObj.centerX = centerX;\n      } else if (!rediusDefined) {\n        positiveLength = canvasW - centerX;\n        negativeLength = -centerX;\n        calculatedRadus = leftX ? mathMin(positiveLength / rightX, negativeLength / leftX)\n          : positiveLength / rightX;\n      }\n\n      if (!centerYDefined) {\n        range = bottomY - topY;\n        tempRadius = canvasH / range;\n        centerY = -tempRadius * topY;\n        if (pivotCalRequard) {\n          if (canvasH - centerY < compositPivotRadius) {\n            centerY = canvasH - compositPivotRadius;\n            positiveLength = canvasH - centerY;\n            negativeLength = -centerY;\n            calculatedRadus = mathMin(calculatedRadus, topY ? mathMin(positiveLength / bottomY,\n              negativeLength / topY) : positiveLength / bottomY);\n          } else if (centerY < compositPivotRadius) {\n            centerY = compositPivotRadius;\n            positiveLength = canvasH - centerY;\n            negativeLength = -centerY;\n            calculatedRadus = mathMin(calculatedRadus, topY ? mathMin(positiveLength / bottomY,\n              negativeLength / topY) : positiveLength / bottomY);\n          }\n        }\n        // yAxisExtra\n        if (canvasH - centerY < yPosExtra) {\n          centerY = canvasH - yPosExtra;\n          positiveLength = canvasH - centerY;\n          negativeLength = -centerY;\n          calculatedRadus = mathMin(calculatedRadus, topY ? mathMin(positiveLength / bottomY,\n            negativeLength / topY) : positiveLength / bottomY);\n        } else if (centerY < yNegExtra) {\n          centerY = yNegExtra;\n          positiveLength = canvasH - centerY;\n          negativeLength = -centerY;\n          calculatedRadus = mathMin(calculatedRadus, topY ? mathMin(positiveLength / bottomY,\n            negativeLength / topY) : positiveLength / bottomY);\n        }\n        calculatedRadus = mathMin(calculatedRadus, tempRadius);\n        returnObj.centerY = centerY;\n      } else if (!rediusDefined) {\n        positiveLength = canvasH - centerY;\n        negativeLength = -centerY;\n        calculatedRadus = mathMin(calculatedRadus, topY ? mathMin(positiveLength / bottomY,\n          negativeLength / topY) : positiveLength / bottomY);\n      }\n      returnObj.maxRadius = calculatedRadus;\n      if (returnObj.maxRadius <= 0) {\n        returnObj.maxRadius = mathMin(canvasW / 2, canvasH / 2);\n      }\n    }\n    return returnObj;\n  }\n\n  static _getScaleFactor (_origW, _origH, canvasWidth, canvasHeight) {\n    var scaleFactor,\n      origH = pluckNumber(_origH, canvasHeight),\n      origW = pluckNumber(_origW, canvasWidth);\n    if (!origH || !origW) {\n      scaleFactor = 1;\n    } else if ((origW / canvasWidth) === (origH / canvasHeight)) {\n      // Now, if the ratio of original width,height & stage width,height are same\n      // In this case, the transformation value would be the same, as the ratio\n      // of transformation of width and height is same.\n      scaleFactor = canvasWidth / origW;\n    } else {\n      // If the transformation factors are different, we do a constrained scaling\n      // We get the aspect whose delta is on the lower side.\n      scaleFactor = mathMin((canvasWidth / origW), (canvasHeight / origH));\n    }\n\n    return scaleFactor;\n  }\n\n  _getData (index, callback) {\n    return _getData.call(this, index, callback);\n  }\n\n  _setData (dialIndex, value) {\n    _setData.call(this, dialIndex, value);\n  }\n\n  _getDataForId (id, callback) {\n    return _getDataForId.call(this, id, callback);\n  }\n\n  _setDataForId (id, value) {\n    _setDataForId.call(this, id, value);\n  }\n}\nexport default AngularGauge;\n","import {\n  pluckNumber,\n  COMMASTRING,\n  UNDEF\n} from '@fusioncharts/core/src/lib';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nlet STREAM_PREFIX = 'value=';\n\nfunction _getData (_index, callback) {\n  var iapi = this,\n    components = iapi.getChildren(),\n    dataset = components.dataset,\n    data,\n    dataObj,\n    index = _index,\n    _helperFn = function () {\n      dataObj = dataset[0].components.data;\n      if (dataObj && dataObj[--index]) {\n        data = dataObj[index].config;\n        return pluckNumber(data.setValue, data.itemValue);\n      }\n      return null;\n    };\n  if (dataset) {\n    if (typeof callback === 'function') {\n      iapi.addJob('eiMethods', function () {\n        callback(_helperFn());\n      }, priorityList.postRender);\n    } else {\n      return _helperFn();\n    }\n  }\n}\n\nfunction _setData (dialIndex, value) {\n  var stream = STREAM_PREFIX,\n    i;\n\n  if (dialIndex === UNDEF || dialIndex === null || value === UNDEF || value === null) {\n    return;\n  }\n\n  for (i = 1; i < Number(dialIndex); i++) {\n    stream += COMMASTRING;\n  }\n\n  if (value.toString) {\n    stream += value.toString();\n  }\n\n  if (stream) {\n    this.feedData(stream);\n  }\n}\n\nfunction _getDataForId (id, callback) {\n  var iapi = this,\n    dataset = iapi.getChildren('dataset')[0],\n    idMap = dataset.config.idMap;\n  if (typeof callback === 'function') {\n    iapi.addJob('eiMethods', function () {\n      callback((idMap && idMap[id] && idMap[id].config.itemValue) || null);\n    }, priorityList.postRender);\n  } else {\n    return (idMap && idMap[id] && idMap[id].config.itemValue) || null;\n  }\n}\n\nfunction _setDataForId (id, value) {\n  var iapi = this,\n    dataset = iapi.getChildren('dataset')[0],\n    idMap = dataset.config.idMap;\n  return (idMap && idMap[id] && iapi._setData(idMap[id].index + 1, value));\n}\nexport { _getData, _setData, _getDataForId, _setDataForId };\n","import PolarGaugeAxis from '@fusioncharts/core/src/axis/polar-numeric';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  componentFactory(chart, PolarGaugeAxis, 'scale', 1, chart._feedAxesRawData());\n  chart.addToEnv('scale', chart.getChildren('scale')[0]);\n}\n","\nimport GaugePolarNumeric from './gauge-polar-numeric';\nimport { pluck, toPrecision, pluckNumber, parseUnsafeString, preDefStr, getValidValue,\n  convertColor, getFirstValue, getDashStyle } from '../lib';\nimport { polarToCartesian } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport difference from '@fusioncharts/utils/src/scale-utils/array/diff';\nimport { addDep } from '../dependency-manager';\nimport polarNumericAnimation from './polar-numeric.animation';\nimport LinearScale from '@fusioncharts/utils/src/scales/linear';\n\nvar UNDEF,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  POSITION_END = preDefStr.POSITION_END,\n  BLANKSTRING = '',\n  GUTTER_PADDING = 5,\n  M = 'M',\n  L = 'L',\n  math = Math,\n  pi = math.PI,\n  pi2 = 2 * pi,\n  TICK = '_tick',\n  LABEL_ID = '_label',\n  TRENDLINE_ID = '_trendLine',\n  TRENDLABEL_ID = '_trendLabel',\n  TRENDMARKER_ID = '_marker';\n\naddDep({\n  name: 'polarNumericAnimation',\n  type: 'animationRule',\n  extension: polarNumericAnimation\n});\n\nclass PolarGaugeAxis extends GaugePolarNumeric {\n  constructor () {\n    super();\n    this.config.scale = new LinearScale();\n    this.config.prevTickMarks = [];\n    this.config.prevIntervalArrLabel = [];\n    this.config.prevIntervalArrTrendLine = [];\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'polarNumeric';\n  }\n  /**\n   * Function set the starting point for drawing the axis and the axis drawing width/height\n   * @param {Object} data Contains the x, y, length and whether the axis is drawn on the opposite side\n   */\n  setAxisDimention () {\n    let axis = this,\n      scale = axis.getScale(),\n      axisConfig = axis.config,\n      startAngle = axisConfig.startAngle || pi2 / 2,\n      totalAngle = axisConfig.totalAngle || pi2 / 2,\n      endAngle = startAngle + totalAngle,\n      rangeArr,\n      // category = axisConfig.tickValues.tickValue || [],\n      // anglePerSlice = totalAngle / (category.length || 1),\n      axisDimention = axisConfig.axisDimention || (axisConfig.axisDimention = {});\n\n    axisDimention.centerX = axisConfig.centerX;\n    axisDimention.centerY = axisConfig.centerY;\n    axisDimention.axisLength = pi2;\n\n    // endAngle -= anglePerSlice;\n    rangeArr = [startAngle, endAngle];\n    scale.setRange(rangeArr);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n\n    config.trendPoints = UNDEF;\n    config.ticksBelowGauge = UNDEF;\n    config.ticksBelowGraph = UNDEF;\n    config.trendValueDistance = UNDEF;\n  }\n\n  /**\n   * Prepare the axis attributes for use by the chart drawing. It applies default values to the\n   * options that are undefined.\n   * @param  {Object}  rawAttr The raw attributes to be set\n   */\n  configureAttributes (rawAttr) {\n    var axis = this,\n      axisConfig = axis.config,\n      axisAttr;\n\n    super.configureAttributes(rawAttr);\n    axisAttr = axisConfig.rawAttr;\n\n    axisConfig.upperLimitDisplay = axisAttr.upperLimitDisplay || '';\n    axisConfig.lowerLimitDisplay = axisAttr.lowerLimitDisplay || '';\n    axisConfig.polarPadding = 4;\n  }\n\n  _drawComponents () {\n    var axis = this,\n      axisConfig = axis.config;\n\n    axisConfig.drawTick && axis._drawTick();\n    axisConfig.drawLabels && axis._drawLabel();\n    axisConfig.drawTrendLines && axis._drawTrendLine();\n  }\n\n  getAngle (value) {\n    var axis = this,\n      angle,\n      axisScale = axis.getScale();\n    angle = axisScale.getRangeValue(value);\n    return angle;\n  }\n\n  placeAxis (maxLimit) {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      smartLabel = chart.getFromEnv('smartLabel'),\n      axisRange = axisConfig.axisRange,\n      labelStyle = axisConfig.labels.style,\n      increment = axisRange.tickInterval || 1,\n      upperLimitDisplay = axisConfig.upperLimitDisplay,\n      lowerLimitDisplay = axisConfig.lowerLimitDisplay,\n      max = axisRange.max,\n      min = axisRange.min,\n      maxTextSize = 0,\n      maxText,\n      i,\n      counter,\n      text,\n      numberFormatterFn,\n      textWidthBuffer,\n      numberFormatter = chart.getFromEnv('number-formatter'),\n      numDimention,\n      ret,\n      leftLimit;\n\n    ret = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n    smartLabel.setStyle({\n      fontSize: labelStyle.fontSize,\n      fontFamily: labelStyle.fontFamily,\n      lineHeight: labelStyle.lineHeight,\n      fontWeight: labelStyle.fontWeight\n    });\n\n    if (!axis.components) {\n      axis.components = {};\n      axis.components.labels = [];\n    }\n    axisConfig.labels.isDraw = 1;\n    axisConfig.labels.drawNormalVal = 1;\n    axisConfig.labels.drawLimitVal = 1;\n    axisConfig.lines.isDraw = 1;\n    axisConfig.labels.step = axisConfig.tickValueStep;\n    axisConfig.labelPadding = 0;\n\n    leftLimit = maxLimit;\n    if (axisConfig.drawLabels && axisConfig.showTickValues && leftLimit > 0) {\n      axisConfig.labelPadding += axisConfig.tickValueDistance;\n      leftLimit -= axisConfig.tickValueDistance;\n      // measuring the label dimention\n      numberFormatterFn = numberFormatter.scale;\n      // calculating the label max width and height\n      // TODO : smartly calculate the max width height\n      for (i = min, counter = 0; i <= max; i += increment) {\n        text = '' + numberFormatterFn.call(numberFormatter, toPrecision(i, 10));\n        numDimention = smartLabel.getOriSize(text, true);\n\n        axis.components.labels[counter] = {\n          config: {\n            width: numDimention.width,\n            height: numDimention.height,\n            props: {\n              label: {\n                attr: {}\n              }\n            }\n          }\n        };\n        counter++;\n        if (text.length > maxTextSize) {\n          maxText = text;\n          maxTextSize = text.length;\n        }\n      }\n      numDimention = smartLabel.getOriSize(maxText, true);\n      if (numDimention.width > maxLimit / 2) {\n        axisConfig.labels.isDraw = false;\n        return ret;\n      }\n      if (axisConfig.showLimits) {\n        // update numDimension if any displayvalue is given and has bigger dimensions than maxlimit value.\n        if (upperLimitDisplay || lowerLimitDisplay) {\n          textWidthBuffer = smartLabel.getOriSize(upperLimitDisplay, true);\n          // if the width of the upperlimitdisplay is greater then the width\n          // of the maxText then set maxText as upperlimitdisplay and update numDimention\n          if (textWidthBuffer.width > numDimention.width) {\n            maxText = upperLimitDisplay;\n            maxTextSize = textWidthBuffer.width;\n\n            numDimention = textWidthBuffer;\n          }\n          textWidthBuffer = smartLabel.getOriSize(lowerLimitDisplay, true);\n          // if the width of the lowerlimitdisplay is greater then the width\n          // of the maxText then set maxText as lowerlimitdisplay and update numDimention\n          if (textWidthBuffer.width > numDimention.width) {\n            maxText = lowerLimitDisplay;\n            maxTextSize = textWidthBuffer.width;\n            numDimention = textWidthBuffer;\n          }\n        }\n      } else {\n        axisConfig.labels.drawLimitVal = false;\n      }\n      numDimention = smartLabel.getOriSize(maxText);\n      axisConfig.labelMaxW = numDimention.width;\n      if (axisConfig.labelMaxW > maxLimit / 2) {\n        axisConfig.labelMaxW = maxLimit / 2;\n      }\n      axisConfig.labelMaxH = numDimention.height;\n      if (!axisConfig.placeValuesInside) {\n        ret.right += axisConfig.labelMaxW + axisConfig.tickValueDistance;\n        ret.left += axisConfig.labelMaxW + axisConfig.tickValueDistance;\n        ret.top += axisConfig.labelMaxH + axisConfig.tickValueDistance;\n        ret.bottom += axisConfig.labelMaxH + axisConfig.tickValueDistance;\n      } else {\n        axisConfig.labelPadding = -axisConfig.labelPadding;\n      }\n    } else {\n      axisConfig.labels.isDraw = false;\n    }\n\n    return ret;\n  }\n\n  /**\n   * Parses the label attributes and calculates position\n   *\n   * @memberof PolarGaugeAxis\n   */\n  _parseLabel () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      axisRange = axisConfig.axisRange,\n      axisScale = axis.getScale(),\n      smartLabel = chart.getFromEnv('smartLabel'),\n      labelStore,\n      labelConf,\n      labels = axisConfig.labels,\n      style = labels.style,\n      axisPadding = axisConfig.labelPadding || 0,\n      radius = axisConfig.radius,\n      gaugeOuterRadius = pluckNumber(axisConfig.gaugeOuterRadius, radius),\n      gaugeInnerRadius = pluckNumber(axisConfig.gaugeInnerRadius, radius),\n      centerX = axisConfig.centerX,\n      centerY = axisConfig.centerY,\n      placeValuesInside = axisConfig.placeValuesInside,\n      axisValueMaxH = axisConfig.labelMaxH,\n      axisValueMaxW = axisConfig.labelMaxW,\n      i,\n      tick,\n      max = axisRange.max,\n      min = axisRange.min,\n      tempText,\n      theta,\n      text,\n      increment,\n      parsing,\n      ticks = axisConfig.ticks,\n      ticksLen = ticks.length,\n      labelLineHeight,\n      numberFormatterFn,\n      numberFormatter = chart.getFromEnv('number-formatter'),\n      axisAttrObj,\n      getPos;\n\n    if (style.lineHeight) {\n      labelLineHeight = style.lineHeight;\n      if (labelLineHeight.indexOf('px') !== -1) {\n        labelLineHeight = labelLineHeight.replace('px', '');\n        labelLineHeight = parseFloat(labelLineHeight);\n      }\n    }\n    smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n    smartLabel.setStyle({\n      fontSize: style.fontSize,\n      fontFamily: style.fontFamily,\n      lineHeight: style.lineHeight,\n      fontWeight: style.fontWeight\n    });\n\n    if (axisConfig.labels.isDraw) {\n      labelStore = axis.components.labels;\n      increment = axisConfig.labels.step;\n      parsing = (index) => {\n        tick = ticks[index];\n        theta = axisScale.getRangeValue(tick);\n        // if values are not limit value and label drawing is off other\n        // than limit increment it and continue\n        if (!axisConfig.labels.drawNormalVal && !(axisConfig.labels.drawLimitVal && (tick === min || tick === max))) {\n          return;\n        }\n        if (!axisConfig.labels.drawNormalVal && !(tick === min || tick === max)) {\n          return;\n        }\n        // if value are limit value but limit value are not mean to be drawn\n        if (!axisConfig.labels.drawLimitVal && (tick === min || tick === max)) {\n          return;\n        }\n        // if value is zero and show zero plane is off\n        if (axisConfig.showZeroPlaneValue === 0 && axisConfig.showZeroPlane === 0 && tick === 0) {\n          return;\n        }\n\n        // make the attribute ready to use\n        // y-axis\n        numberFormatterFn = numberFormatter.scale;\n        if (tick === min && axisConfig.lowerLimitDisplay) {\n          tempText = smartLabel.getSmartText(axisConfig.lowerLimitDisplay, axisValueMaxW,\n            axisValueMaxH);\n          text = tempText.text;\n        } else if (tick === max && axisConfig.upperLimitDisplay) {\n          tempText = smartLabel.getSmartText(axisConfig.upperLimitDisplay, axisValueMaxW,\n            axisValueMaxH);\n          text = tempText.text;\n        } else {\n          text = numberFormatterFn.call(numberFormatter, toPrecision(tick, 10));\n        }\n        if (placeValuesInside) {\n          getPos = polarToCartesian(gaugeInnerRadius + axisPadding - axisConfig.polarPadding, theta);\n        } else {\n          getPos = polarToCartesian(gaugeOuterRadius + axisPadding + axisConfig.polarPadding, theta);\n        }\n        getPos.x += centerX;\n        getPos.y += centerY;\n        axisAttrObj = {\n          fill: style.color,\n          'line-height': labelLineHeight,\n          'text': text,\n          'x': getPos.x,\n          'y': getPos.y\n        };\n        if ((getPos.x > centerX - 10 && getPos.x < centerX + 10) && getPos.y < centerY) {\n          axisAttrObj['text-anchor'] = POSITION_MIDDLE;\n          axisAttrObj['text-valign'] = placeValuesInside ? POSITION_TOP : POSITION_BOTTOM;\n        } else if ((getPos.x > centerX - 10 && getPos.x < centerX + 10) && getPos.y < centerY) {\n          axisAttrObj['text-anchor'] = POSITION_MIDDLE;\n          axisAttrObj['text-valign'] = placeValuesInside ? POSITION_BOTTOM : POSITION_TOP;\n        } else if (getPos.x < centerX) {\n          axisAttrObj['text-anchor'] = placeValuesInside ? POSITION_START : POSITION_END;\n          axisAttrObj['text-valign'] = 'center';\n        } else {\n          axisAttrObj['text-anchor'] = placeValuesInside ? POSITION_END : POSITION_START;\n          axisAttrObj['text-valign'] = 'center';\n        }\n\n        labelConf = labelStore[index] = labelStore[index] ||\n          {\n            config: {\n              props: {\n                label: {\n                  attr: {}\n                }\n              }\n            }\n          };\n\n        labelConf.config.props.label.attr = Object.assign(\n          labelConf.config.props.label.attr,\n          axisAttrObj\n        );\n      };\n\n      for (i = 0; i < ticksLen; i += increment) {\n        parsing(i);\n      }\n      if ((ticksLen - 1) % increment !== 0) {\n        parsing(ticksLen - 1);\n      }\n    }\n  }\n\n  /**\n   * Draws the axis labels\n   *\n   * @memberof PolarGaugeAxis\n   */\n  _drawLabel () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      axisRange = axisConfig.axisRange,\n      labels = axisConfig.labels,\n      style = labels.style,\n      i,\n      tick,\n      max = axisRange.max,\n      min = axisRange.min,\n      axisContainer = axisConfig.axisLabelContainerTop,\n      textElement,\n      animationManager = chart.getFromEnv('animationManager'),\n      css = {\n        fontFamily: style.fontFamily,\n        fontSize: style.fontSize,\n        fontWeight: style.fontWeight,\n        fontStyle: style.fontStyle,\n        lineHeight: style.lineHeight\n      },\n      axisAttrObj,\n      ticks = axisConfig.ticks,\n      ticksLen = ticks.length,\n      tickMap = [],\n      ln,\n      diff,\n      increment,\n      drawing,\n      removingElement,\n      textElementCheck;\n    // Set visibility of axisContainer and apply css.\n    axisContainer.show();\n    axisContainer.css(css);\n    // checking if labels are to be drawn user can decide or can be decided by axis placeAxis function\n    if (axisConfig.labels.isDraw) {\n      increment = axisConfig.labels.step;\n      drawing = (index) => {\n        tick = ticks[index];\n        // if values are not limit value and label drawing is off other\n        // than limit increment it and continue\n        if (!axisConfig.labels.drawNormalVal && !(axisConfig.labels.drawLimitVal && (tick === min || tick === max))) {\n          return;\n        }\n        if (!axisConfig.labels.drawNormalVal && !(tick === min || tick === max)) {\n          return;\n        }\n        // if value are limit value but limit value are not mean to be drawn\n        if (!axisConfig.labels.drawLimitVal && (tick === min || tick === max)) {\n          return;\n        }\n        // if value is zero and show zero plane is off\n        if (axisConfig.showZeroPlaneValue === 0 && axisConfig.showZeroPlane === 0 && tick === 0) {\n          return;\n        }\n        tickMap.push(tick);\n\n        // check if extra label element is present don't draw it just use it by changing the attributes\n        textElementCheck = axis.getGraphicalElement(`${tick}${LABEL_ID}`);\n\n        axisAttrObj = axis.components.labels[index].config.props.label.attr;\n        // create/reuse text element\n        textElement = animationManager.setAnimation({\n          el: textElementCheck || 'text',\n          attr: axisAttrObj,\n          container: axisContainer,\n          component: axis,\n          label: 'text'\n        });\n\n        // Add to _graphics of axis if not present previously\n        if (!textElementCheck) {\n          axis.addGraphicalElement(`${tick}${LABEL_ID}`, textElement);\n        }\n      };\n      for (i = 0; i < ticksLen; i += increment) {\n        drawing(i);\n      }\n      if ((ticksLen - 1) % increment !== 0) {\n        drawing(ticksLen - 1);\n      }\n    }\n    diff = difference(axisConfig.prevIntervalArrLabel, tickMap);\n    for (tick = 0, ln = diff.length; tick < ln; tick++) {\n      removingElement = axis.getGraphicalElement(`${diff[tick]}${LABEL_ID}`);\n      removingElement && axis.removeGraphicalElement(removingElement);\n    }\n    axisConfig.prevIntervalArrLabel = tickMap;\n  }\n\n  _drawTick () {\n    var axis = this,\n      axisConfig = axis.config,\n      drawTick = axisConfig.drawTick,\n      axisScale = axis.getScale(),\n      thetaMajor,\n      thetaMinor,\n      drawTickMinor = axisConfig.drawTickMinor,\n      chart = axis.getFromEnv('chart'),\n      animationManager = chart.getFromEnv('animationManager'),\n      radius = axisConfig.radius,\n      centerX = axisConfig.centerX,\n      centerY = axisConfig.centerY,\n      gaugeOuterRadius = pluckNumber(axisConfig.gaugeOuterRadius, radius),\n      gaugeInnerRadius = pluckNumber(axisConfig.gaugeInnerRadius, radius),\n      lineElement,\n      minorTickObj,\n      majorTickObj,\n      statPix,\n      endPixMajor,\n      endPixMinor,\n      i,\n      minorV,\n      tickGroup,\n      diff,\n      tempObj,\n      tickValue,\n      ticks = axisConfig.ticks,\n      minorTickValues = axisConfig.minorTicks,\n      majorTickCheck,\n      prevTickMap,\n      minorTickCheck,\n      removingElement,\n      ln;\n\n    tickGroup = axisConfig.axisAxisLineContainer;\n    majorTickObj = {\n      stroke: axisConfig.majorTMColor,\n      'stroke-width': axisConfig.majorTMThickness,\n      'stroke-linecap': 'round'\n    };\n    minorTickObj = {\n      stroke: axisConfig.minorTMColor,\n      'stroke-width': axisConfig.minorTMThickness,\n      'stroke-linecap': 'round'\n    };\n\n    // Set visibility of tickGroup\n    tickGroup.show();\n\n    prevTickMap = axisConfig.prevTickMarks;\n    // when ticks are not drawn\n    axisConfig.prevTickMarks = [];\n    // checking if lines are to be drawn user can decide\n    if (axisConfig.lines.isDraw && drawTick && axisConfig.showTickMarks) {\n      axisConfig.prevTickMarks = ticks.slice();\n\n      for (i = 0; i < ticks.length; i++) {\n        tickValue = ticks[i];\n        thetaMajor = axisScale.getRangeValue(tickValue);\n        if (!axisConfig.placeTicksInside) {\n          statPix = polarToCartesian(gaugeOuterRadius, thetaMajor);\n          endPixMajor = polarToCartesian(gaugeOuterRadius - axisConfig.majorTMHeight, thetaMajor);\n        } else {\n          statPix = polarToCartesian(gaugeInnerRadius, thetaMajor);\n          endPixMajor = polarToCartesian(gaugeInnerRadius + axisConfig.majorTMHeight, thetaMajor);\n        }\n        statPix.x += centerX;\n        statPix.y += centerY;\n        endPixMajor.x += centerX;\n        endPixMajor.y += centerY;\n        majorTickObj.path = 'M' + statPix.x + ' ' + statPix.y + 'L' + endPixMajor.x + ' ' + endPixMajor.y;\n        tempObj = Object.assign({}, majorTickObj);\n        majorTickCheck = axis.getGraphicalElement(`${ticks[i]}${TICK}`);\n        lineElement = animationManager.setAnimation({\n          el: majorTickCheck || 'path',\n          attr: tempObj,\n          container: tickGroup,\n          component: axis,\n          label: 'path'\n        });\n        if (!majorTickCheck) {\n          axis.addGraphicalElement(`${ticks[i]}${TICK}`, lineElement);\n        }\n      }\n      if (drawTickMinor) {\n        axisConfig.prevTickMarks = axisConfig.prevTickMarks.concat(minorTickValues);\n        for (i = 0; i < minorTickValues.length; i += 1) {\n          minorV = minorTickValues[i];\n          thetaMinor = axisScale.getRangeValue(minorV);\n          if (!axisConfig.placeTicksInside) {\n            statPix = polarToCartesian(gaugeOuterRadius, thetaMinor);\n            endPixMinor = polarToCartesian(gaugeOuterRadius -\n                                  axisConfig.minorTMHeight, thetaMinor);\n          } else {\n            statPix = polarToCartesian(gaugeInnerRadius, thetaMinor);\n            endPixMinor = polarToCartesian(gaugeInnerRadius +\n                                  axisConfig.minorTMHeight, thetaMinor);\n          }\n          statPix.x += centerX;\n          statPix.y += centerY;\n          endPixMinor.x += centerX;\n          endPixMinor.y += centerY;\n          minorTickObj.path = 'M' + statPix.x + ' ' + statPix.y + 'L' + endPixMinor.x + ' ' + endPixMinor.y;\n          tempObj = Object.assign({}, minorTickObj);\n\n          // reuse the elements if there\n          minorTickCheck = axis.getGraphicalElement(`${minorTickValues[i]}${TICK}`);\n\n          lineElement = animationManager.setAnimation({\n            el: minorTickCheck || 'path',\n            attr: tempObj,\n            container: tickGroup,\n            component: axis,\n            label: 'path'\n          });\n          if (!minorTickCheck) {\n            axis.addGraphicalElement(`${minorTickValues[i]}${TICK}`, lineElement);\n          }\n        }\n      }\n    }\n    diff = difference(prevTickMap, axisConfig.prevTickMarks);\n    for (i = 0, ln = diff.length; i < ln; i++) {\n      removingElement = axis.getGraphicalElement(`${diff[i]}${TICK}`);\n      removingElement && axis.removeGraphicalElement(removingElement);\n    }\n  }\n\n  _drawTrendLine () {\n    var axis = this,\n      axisConfig = axis.config,\n      axisRange = axisConfig.axisRange,\n      toolTipController = axis.getFromEnv('toolTipController'),\n      max = axisRange.max,\n      axisScale = axis.getScale(),\n      theta,\n      min = axisRange.min,\n      canvas = axisConfig.canvas,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      smartLabel = chart.getFromEnv('smartLabel'),\n      colorM = chart.getFromEnv('color-manager'),\n      animationManager = chart.getFromEnv('animationManager'),\n      scaleFactor = axisConfig.scaleFactor,\n      centerX = axisConfig.centerX || 0,\n      centerY = axisConfig.centerY || 0,\n      canvasWidth = canvas.canvasWidth || chartConfig.canvasWidth,\n      style = axisConfig.trend.trendStyle,\n      axisTrendContainerTop = axisConfig.axisTrendContainerTop,\n      axisTrendContainerBottom = axisConfig.axisTrendContainerBottom,\n      axisTrendLabelContainer = axisConfig.axisTrendLabelContainer,\n      css = {\n        fontFamily: style.fontFamily,\n        fontSize: style.fontSize,\n        lineHeight: style.lineHeight,\n        fontWeight: style.fontWeight,\n        fontStyle: style.fontStyle\n      },\n      numberFormatter = chart.getFromEnv('number-formatter'),\n      trendPoints = axisConfig.trendPoints,\n      point = trendPoints && trendPoints.point,\n      deg2rad = math.PI / 180,\n      trendText = {},\n      i,\n      iLim = point && point.length,\n      trendElement,\n      trendElemenCheck,\n      trendLabelElementCheck,\n      trendLabelElement,\n      isTrendZone,\n      axisDrawingAttrObj = {},\n      axisMarkerAttrObj = {},\n      axisTextAttrObj = {},\n      trendPointObj,\n      startValue,\n      endValue,\n      AttrList,\n      sides,\n      limitingValue,\n      limitingNegValue,\n      trendOuterRadius,\n      trendInnerRadius,\n      startPoints,\n      startPoints1,\n      startX,\n      startY,\n      startX1,\n      startY1,\n      trendEndAngle,\n      trendStartAngle,\n      textValue,\n      cosTh,\n      sinTh,\n      trendTextWidth,\n      textRadius,\n      align,\n      trendTextHeight,\n      stHeight,\n      trendMarkerElement,\n      trendMarkerCheck,\n      trendValues = [],\n      idStart,\n      diff,\n      removingElement,\n      removingElementLabel,\n      removingElementMarker,\n      ln;\n      // if trendline object is present iterate through the object to draw\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    smartLabel.setStyle(css);\n    for (i = 0; i < iLim; i += 1) {\n      trendPointObj = trendPoints.point[i];\n      trendValues.push(trendPointObj.startvalue + '_' + trendPointObj.endvalue + '_' + i);\n    }\n    diff = difference(axisConfig.prevIntervalArrTrendLine, trendValues);\n\n    for (i = 0, ln = diff.length; i < ln; i++) {\n      removingElement = axis.getGraphicalElement(`${diff[i]}${TRENDLINE_ID}`);\n      removingElementLabel = axis.getGraphicalElement(`${diff[i]}${TRENDLABEL_ID}`);\n      removingElementMarker = axis.getGraphicalElement(`${diff[i]}${TRENDMARKER_ID}`);\n      removingElement && axis.removeGraphicalElement(removingElement);\n      removingElementLabel && axis.removeGraphicalElement(removingElementLabel);\n      removingElementMarker && axis.removeGraphicalElement(removingElementMarker);\n    }\n    axisConfig.prevIntervalArrTrendLine = trendValues.slice();\n    for (i = 0; i < iLim; i += 1) {\n      trendPointObj = trendPoints.point[i];\n      idStart = trendPointObj.startvalue + '_' + trendPointObj.endvalue + '_' + i;\n      startValue = pluckNumber(trendPointObj.startvalue, trendPointObj.value);\n      endValue = pluckNumber(trendPointObj.endvalue, startValue);\n      theta = axisScale.getRangeValue(startValue);\n      isTrendZone = startValue !== endValue;\n\n      if (startValue <= max && startValue >= min && endValue <= max && endValue >= min) {\n        AttrList = {\n          startValue: startValue,\n          endValue: endValue,\n          tooltext: getValidValue(parseUnsafeString(trendPointObj.markertooltext, false)),\n          displayValue: getValidValue(parseUnsafeString(trendPointObj.displayvalue),\n            isTrendZone ? BLANKSTRING : numberFormatter.scale(startValue)),\n          showOnTop: pluckNumber(trendPointObj.showontop, axisConfig.ticksBelowGauge,\n            axisConfig.ticksBelowGraph, 1),\n          color: pluck(trendPointObj.color, colorM.getColor('trendLightColor')),\n          alpha: pluckNumber(trendPointObj.alpha, 99),\n          thickness: pluckNumber(trendPointObj.thickness, 1),\n          dashStyle: trendPointObj.dashed ? getDashStyle(trendPointObj.dashlen || 2,\n            trendPointObj.dashgap || 2) : '',\n          // Marker properties\n          useMarker: pluckNumber(trendPointObj.usemarker, 0),\n          markerColor: convertColor(pluck(trendPointObj.markercolor,\n            trendPointObj.color, colorM.getColor('trendLightColor')), 100),\n          markerBorderColor: convertColor(pluck(trendPointObj.markerbordercolor,\n            trendPointObj.bordercolor, colorM.getColor('trendDarkColor')), 100),\n          markerRadius: pluckNumber(pluckNumber(trendPointObj.markerradius) *\n                                            scaleFactor, 5),\n          markerToolText: getFirstValue(trendPointObj.markertooltext),\n          trendValueDistance: pluckNumber(pluckNumber(trendPointObj.trendvaluedistance,\n            axisConfig.trendValueDistance) * scaleFactor, axisConfig.tickValueDistance),\n          // calcullated\n          isTrendZone: isTrendZone,\n\n          // extra for angular gauge\n          valueInside: pluckNumber(trendPointObj.valueinside, axisConfig.placeValuesInside, 0),\n          showBorder: pluckNumber(trendPointObj.showborder, 1),\n          borderColor: convertColor(pluck(trendPointObj.bordercolor, trendPointObj.color,\n            colorM.getColor('trendDarkColor')),\n          pluckNumber(trendPointObj.borderalpha, trendPointObj.alpha, 100)),\n          radius: pluckNumber(pluckNumber(trendPointObj.radius) * scaleFactor),\n          innerRadius: pluckNumber(pluckNumber(trendPointObj.innerradius) * scaleFactor)\n\n        };\n        sides = 3;\n        limitingValue = Math.cos(89.99 * deg2rad);\n        limitingNegValue = -limitingValue;\n        trendOuterRadius = pluckNumber(AttrList.radius, axisConfig.gaugeOuterRadius);\n        trendInnerRadius = pluckNumber(AttrList.innerRadius, isTrendZone\n          ? Math.max(axisConfig.gaugeInnerRadius - 15, 0) : axisConfig.gaugeInnerRadius);\n        startPoints = polarToCartesian(trendOuterRadius, theta);\n        startPoints1 = polarToCartesian(trendInnerRadius, theta);\n        startPoints.x += centerX;\n        startPoints.y += centerY;\n        startPoints1.x += centerX;\n        startPoints1.y += centerY;\n        startX = startPoints.x;\n        startY = startPoints.y;\n        startX1 = startPoints1.x;\n        startY1 = startPoints1.y;\n        trendEndAngle = axis.getAngle(endValue);\n        trendStartAngle = axis.getAngle(startValue);\n        if (isTrendZone) {\n          // If start angle > end angle then swap the two for intended\n          // behavior.\n          if (trendStartAngle > trendEndAngle) {\n            trendStartAngle += (trendEndAngle);\n            trendEndAngle = trendStartAngle - trendEndAngle;\n            trendStartAngle = trendStartAngle - trendEndAngle;\n          }\n\n          axisDrawingAttrObj = {\n            fill: convertColor(AttrList.color, AttrList.alpha),\n            'stroke-width': (AttrList.showBorder ? AttrList.thickness : 0),\n            stroke: AttrList.borderColor,\n            'stroke-dasharray': AttrList.dashStyle,\n            ringpath: [centerX, centerY, trendOuterRadius, trendInnerRadius,\n              trendStartAngle, trendEndAngle]\n          };\n        } else {\n          axisDrawingAttrObj = {\n            'stroke-width': AttrList.showBorder ? AttrList.thickness : 0,\n            stroke: AttrList.borderColor,\n            'stroke-linecap': 'round',\n            'stroke-dasharray': AttrList.dashStyle,\n            path: [M, startX, startY, L, startX1, startY1]\n          };\n        }\n        // if it has marker then add it\n        if (AttrList.useMarker) {\n          axisMarkerAttrObj = {\n            fill: AttrList.markerColor,\n            'stroke-width': 1,\n            stroke: AttrList.markerBorderColor,\n            polypath: [sides, startX, startY, AttrList.markerRadius,\n              (-trendStartAngle + Math.PI) / deg2rad, 0]\n          };\n        } else {\n          axisMarkerAttrObj = {};\n        }\n        // draw the text if any\n        if (AttrList.displayValue !== BLANKSTRING) {\n          textValue = (AttrList.endValue + AttrList.startValue) / 2;\n          trendEndAngle = axis.getAngle(textValue);\n          cosTh = Math.cos(trendEndAngle);\n          sinTh = Math.sin(trendEndAngle);\n          trendTextWidth = smartLabel.getOriSize(AttrList.displayValue).width;\n          if (AttrList.valueInside) {\n            textRadius = trendInnerRadius - 2 - AttrList.trendValueDistance;\n            align = cosTh > limitingValue ? POSITION_END\n              : (cosTh < limitingNegValue ? POSITION_START : POSITION_MIDDLE);\n          } else {\n            textRadius = trendOuterRadius + 2 + AttrList.trendValueDistance;\n            align = cosTh > limitingValue ? POSITION_START\n              : (cosTh < limitingNegValue ? POSITION_END : POSITION_MIDDLE);\n          }\n          startX = centerX + (textRadius * cosTh);\n          startY = centerY + (textRadius * sinTh);\n\n          trendTextHeight = smartLabel.getOriSize(AttrList.displayValue).height;\n          trendText = smartLabel.getSmartText(AttrList.displayValue, canvasWidth,\n            trendTextHeight);\n\n          // check whether the text goes out of canvas on basis of it's width and\n          // draw text accordingly by re-calculating it's x-coordinate\n          startX = (canvasWidth < (startX + trendTextWidth))\n            ? (canvasWidth - trendTextWidth - GUTTER_PADDING) : (startX < trendTextWidth)\n              ? trendTextWidth + GUTTER_PADDING : startX;\n          // check whether the startX goes out of canvas\n          if (trendTextWidth > canvasWidth) {\n            startX = canvasWidth / 2;\n          }\n\n          axisTextAttrObj = {\n            fill: convertColor(trendPointObj.color, AttrList.alpha) || style.color,\n            text: trendText.text,\n            'text-anchor': align,\n            'vertical-align': POSITION_TOP,\n            'text-bound': [style.backgroundColor, style.borderColor,\n              style.borderThickness, style.borderPadding, style.borderRadius, style.borderDash],\n            x: startX,\n            y: startY\n          };\n\n          // adjust with the bbox\n          stHeight = trendText.height;\n          // set the text Y\n          if (cosTh > limitingValue || cosTh < limitingNegValue) {\n            startY += -(stHeight / 2) + (stHeight * 0.4 * sinTh *\n                                    (AttrList.valueInside ? -1 : 1));\n          } else {\n            if (AttrList.valueInside) {\n              startY += -(sinTh < 0 ? 0 : stHeight);\n            } else {\n              startY += -(sinTh > 0 ? 0 : stHeight);\n            }\n          }\n\n          axisTextAttrObj.y = startY;\n        } else {\n          axisTextAttrObj = {\n            text: BLANKSTRING\n          };\n        }\n        // reuse the elements if there\n        trendElemenCheck = axis.getGraphicalElement(idStart + TRENDLINE_ID);\n        trendLabelElementCheck = axis.getGraphicalElement(idStart + TRENDLABEL_ID);\n        trendMarkerCheck = axis.getGraphicalElement(idStart + TRENDMARKER_ID);\n        // Create/Reuse trend element\n        trendElement = isTrendZone\n          ? animationManager.setAnimation({\n            el: trendElemenCheck || 'ringpath',\n            attr: axisDrawingAttrObj,\n            container: axisTrendContainerBottom,\n            component: axis,\n            label: 'ringpath'\n          })\n          : animationManager.setAnimation({\n            el: trendElemenCheck || 'path',\n            attr: axisDrawingAttrObj,\n            container: axisTrendContainerTop,\n            component: axis,\n            label: 'path'\n          });\n        trendElement.show();\n        trendElement.data('label', isTrendZone ? 'ringPath' : 'path');\n\n        // Create/reuse label\n        trendLabelElement = animationManager.setAnimation({\n          el: trendLabelElementCheck || 'text',\n          attr: axisTextAttrObj,\n          container: axisTrendLabelContainer,\n          component: axis,\n          label: 'text'\n        });\n        trendLabelElement.css(css);\n        trendLabelElement.show();\n\n        // Create/Reuse marker element\n        trendMarkerElement = animationManager.setAnimation({\n          el: trendMarkerCheck || 'polypath',\n          attr: axisMarkerAttrObj,\n          container: axisTrendContainerTop,\n          component: axis,\n          label: 'polypath'\n        });\n        trendMarkerElement.show();\n\n        // Attach tooltip if applicable\n        if (axisConfig.showTooltip) {\n          if (trendText.oriText) {\n            toolTipController.enableToolTip(trendLabelElement, trendText.oriText);\n          } else {\n            toolTipController.disableToolTip(trendLabelElement);\n          }\n          if (AttrList.markerToolText) {\n            toolTipController.enableToolTip(trendMarkerElement, AttrList.markerToolText);\n          } else {\n            toolTipController.disableToolTip(trendMarkerElement);\n          }\n        }\n        if (!trendElemenCheck) {\n          axis.addGraphicalElement(idStart + TRENDLINE_ID, trendElement);\n        }\n        if (!trendElemenCheck) {\n          axis.addGraphicalElement(idStart + TRENDLABEL_ID, trendLabelElement);\n        }\n        if (!trendMarkerCheck) {\n          axis.addGraphicalElement(idStart + TRENDMARKER_ID, trendMarkerElement);\n        }\n      }\n    }\n  }\n}\n\nexport default PolarGaugeAxis;\n","import fadeInAtAxis from './polar-axis.animation';\nexport default {\n  'initial.axis.polarNumeric': function () {\n    return {\n      'path.appearing': fadeInAtAxis,\n      'text.appearing': fadeInAtAxis,\n      'polypath.appearing': fadeInAtAxis,\n      'ringpath.appearing': fadeInAtAxis,\n      '*': null\n    };\n  }\n};\n","import { datasetFactory } from '@fusioncharts/core/src/lib';\nimport AngularGaugeDataset from '../dataset/angulargauge';\nexport default function (chart) {\n  var dataObj = chart.getFromEnv('dataSource'),\n    pointers = dataObj.pointers || dataObj.dials;\n\n  if (!pointers) {\n    dataObj.dials = pointers = {\n      dial: [{\n        value: 0\n      }]\n    };\n  }\n  datasetFactory(chart, AngularGaugeDataset, 'dataset', 1, [pointers]);\n}\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  pluckNumber,\n  pluck,\n  COMMASTRING,\n  BLANK,\n  getValidValue,\n  parseUnsafeString,\n  parseTooltext,\n  toRaphaelColor,\n  hasSVG,\n  getFirstDefinedValue,\n  getFirstValue,\n  getDashStyle,\n  getPosition,\n  setLineHeight,\n  HUNDREDSTRING,\n  ZEROSTRING,\n  toPrecision,\n  convertColor,\n  pluckFontSizeMaintainUnit\n} from '@fusioncharts/core/src/lib';\nimport HlineargaugeDataset from '../hlineargauge';\nimport { addDep, getDep } from '@fusioncharts/core/src/dependency-manager';\nimport angularAnimation from './index.animation';\nimport raphaelShapesRingpath from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.ringpath';\nimport raphaelShapesTriangle from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.triangle';\n\nlet R = getDep('redraphael', 'plugin'),\n  math = Math,\n  mathAbs = math.abs,\n  mathATan2 = math.atan2,\n  mathPI = math.PI,\n  math2PI = 2 * mathPI,\n  mathMax = math.max,\n  BLANKSTRING = '',\n  PXSTRING = 'px',\n  NORMALSTRING = 'normal',\n  deg2rad = mathPI / 180,\n  UNDEF,\n  FILLMIXDARK10 = '{dark-10}',\n  M = 'M',\n  L = 'L',\n  Z = 'Z',\n  GAUGE_FILTER_RATIO = ',6',\n  ANGLE = 'angle',\n  animationObjStr = 'animationObj',\n  configStr = 'config',\n  POINTER = 'pointer',\n  EVENTARGS = 'eventArgs',\n  doc = window.document,\n  hasTouch = doc.documentElement.ontouchstart !== UNDEF,\n  ANIM_EFFECT = 'linear',\n  getTouchEvent = function (event) {\n    return (hasTouch && event.sourceEvent && event.sourceEvent.touches &&\n                event.sourceEvent.touches[0]) || event;\n  },\n  isString = function (s) {\n    return typeof s === 'string';\n  },\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  getAttrFunction = function () {\n    var rotationStr = ANGLE;\n\n    return function (_hash, val, animation) {\n      var key,\n        value,\n        element = this,\n        attr3D = this._Attr,\n        cx = R.vml ? (-1.5) : 0, // correction of -1.5 has to be added for VML.\n        cy = R.vml ? (-1.5) : 0,\n        red,\n        hash = _hash;\n\n      if (!attr3D) {\n        attr3D = element._Attr = {};\n      }\n\n      // single key-value pair\n      if (isString(hash) && defined(val)) {\n        key = hash;\n        hash = {};\n        hash[key] = val;\n      }\n\n      // used as a getter: first argument is a string, second is undefined\n      // And also if first argument is undefined it should return the all attrs object.\n      if (isString(hash) || hash === UNDEF) {\n        // if belongs from the list then handle here\n        if (hash === rotationStr) {\n          element = element._Attr[hash];\n        } else { // else leve for the original attr\n          element = element._attr(hash);\n        }\n\n        // setter\n      } else {\n        for (key in hash) {\n          value = hash[key];\n          // if belongs from the list then handle here\n          if (key === rotationStr) {\n            attr3D[key] = value;\n            red = value * deg2rad;\n            attr3D.tooltipPos[0] = attr3D.cx + (attr3D.toolTipRadius * Math.cos(red));\n            attr3D.tooltipPos[1] = attr3D.cy + (attr3D.toolTipRadius * Math.sin(red));\n            attr3D.prevValue = value;\n\n            if (animation && animation.duration) {\n              element.animate({\n                transform: ('R' + value + COMMASTRING + cx + COMMASTRING + cy)\n              }, animation.duration, ANIM_EFFECT);\n            } else {\n              element.attr({transform: ('R' + value + COMMASTRING + cx + COMMASTRING + cy)});\n            }\n          } else { // else leave for the original attr\n            element._attr(key, value);\n          }\n        }\n      }\n      return element;\n    };\n  };\naddDep({\n  name: 'angularAnimation',\n  type: 'animationRule',\n  extension: angularAnimation\n});\n\n// Adding required shapes for chart.\nraphaelShapesRingpath(R);\nraphaelShapesTriangle(R);\n\n/**\n * Creates dataset class for Angular Gauge\n */\nclass AngularGaugeDataset extends HlineargaugeDataset {\n  /**\n   * Constructor function to initialise attributes of AngularGaugeDataset object\n   */\n  constructor () {\n    super();\n\n    this.components = this.components || {};\n    this.config.idMap = { };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'angularGauge';\n  }\n  /**\n   * Configure dataset component and parse default values\n   * @param  {Object} pointerArrArg JSON for dataset configurations\n   * @return {boolean} Indicates whether the configuration was successful or not\n   */\n  configure (pointerArrArg) {\n    if (!pointerArrArg) {\n      return false;\n    }\n    this.trimData(pointerArrArg);\n    this.config.pointerArr = pointerArrArg;\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      jsonData = chart.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      pointer = jsonData.pointers || jsonData.dials,\n      pointerArr = pointer.pointer || pointer.dial || [],\n      data = dataSet.components.data || (dataSet.components.data = []),\n      scale = dataSet.getFromEnv('scale'),\n      colorM = dataSet.getFromEnv('color-manager'),\n      datasetConfig = dataSet.config || (dataSet.config = {}),\n      scaleAngle = pluckNumber(chartAttrs.gaugescaleangle, 180),\n      startAngle = pluckNumber(chartAttrs.gaugestartangle),\n      endAngle = pluckNumber(chartAttrs.gaugeendangle),\n      startDefined = defined(startAngle), tempAngle,\n      // arc on 360deg is not possable SVG limitation so reduce the scale\n      circleHandler = hasSVG ? 0.001 : 0.01,\n      endDefined = defined(endAngle),\n      showGaugeBorder,\n      pvColor,\n      scaleOnResize,\n      showValue,\n      pointShowValue,\n      valueY,\n      dataLabelsStyle,\n      fontBdrColor,\n      i,\n      config,\n      ln;\n\n    chartConfig.displayValueCount = 0;\n    for (i = 0, ln = pointerArr.length; i < ln; i += 1) {\n      data[i] = data[i] || (data[i] = {});\n      config = data[i].config || (data[i].config = {});\n      config.basewidth = pointerArr[i].basewidth;\n      config.color = pointerArr[i].color;\n      config.alpha = pointerArr[i].alpha;\n      config.bgcolor = pointerArr[i].bgcolor;\n      config.borderalpha = pointerArr[i].borderalpha;\n      config.bordercolor = pointerArr[i].bordercolor;\n      config.borderthickness = pointerArr[i].borderthickness;\n      config.editmode = pointerArr[i].editmode;\n      config.id = pluck(pointerArr[i].id, 'dial' + i);\n      config.link = pointerArr[i].link;\n      config.radius = pointerArr[i].radius;\n      config.rearextension = pointerArr[i].rearextension;\n      config.showvalue = pointerArr[i].showvalue;\n      config.tooltext = pointerArr[i].tooltext;\n      config.topwidth = pointerArr[i].topwidth;\n      config.value = pointerArr[i].value;\n      config.valuex = pointerArr[i].valuex;\n      config.valuey = pointerArr[i].valuey;\n      config.baseradius = pointerArr[i].baseradius;\n      config.displayvalue = pointerArr[i].displayvalue;\n\n      showValue = datasetConfig.showValue = pluckNumber(chartAttrs.showvalue, chartAttrs.showrealtimevalue, 0);\n      pointShowValue = pluckNumber(config.showvalue, showValue);\n      config.showPointerValue = pointShowValue;\n      valueY = pluckNumber(getValidValue(config.valuey));\n      if (pointShowValue && !defined(valueY)) {\n        chartConfig.displayValueCount += 1;\n      }\n    }\n    /*\n             *All angle should be in range of -360 to 360 of traditional methode\n             *At the end convert them in computer graphics methode\n             * relation among them is [scaleAngle = startAngle - endAngle;]\n             */\n    if (scaleAngle > 360 || scaleAngle < -360) {\n      scaleAngle = scaleAngle > 0 ? 360 : -360;\n    }\n    if (endAngle > 360 || endAngle < -360) {\n      endAngle = endAngle % 360;\n    }\n    if (startAngle > 360 || startAngle < -360) {\n      startAngle = startAngle % 360;\n    }\n    // booth defined\n    if (startDefined && endDefined) {\n      // override the scale\n      scaleAngle = startAngle - endAngle;\n      // validate scale and EndAngle\n      if (scaleAngle > 360 || scaleAngle < -360) {\n        scaleAngle = scaleAngle % 360;\n        endAngle = startAngle - scaleAngle;\n      }\n    } else if (startDefined) { // StartAngle Defined\n      // derive endAngle\n      endAngle = startAngle - scaleAngle;\n      // if derived end angle cross the limit\n      if (endAngle > 360 || endAngle < -360) {\n        endAngle = endAngle % 360;\n        startAngle += endAngle > 0 ? -360 : 360;\n      }\n    } else if (endDefined) { // endAngle Defined\n      // derive StartAngle\n      startAngle = endAngle + scaleAngle;\n      // if derived start angle cross the limit\n      if (startAngle > 360 || startAngle < -360) {\n        startAngle = startAngle % 360;\n        endAngle += startAngle > 0 ? -360 : 360;\n      }\n    } else { // booth will be derived\n      if (scaleAngle === 360) {\n        startAngle = 180;\n        endAngle = -180;\n      } else if (scaleAngle === -360) {\n        startAngle = -180;\n        endAngle = -180;\n      } else {\n        tempAngle = scaleAngle / 2;\n        startAngle = 90 + tempAngle;\n        endAngle = startAngle - scaleAngle;\n      }\n    }\n    // Full 360 can't be drawn by arc[limitation]\n    if (Math.abs(scaleAngle) === 360) {\n      scaleAngle += scaleAngle > 0 ? -circleHandler : circleHandler;\n      endAngle = startAngle - scaleAngle;\n    }\n\n    // convert all the angles into clockwise cordinate\n    endAngle = 360 - endAngle;\n    startAngle = 360 - startAngle;\n    scaleAngle = -scaleAngle;\n\n    // if start angle cross the limit\n    if (startAngle > 360 || endAngle > 360) {\n      startAngle -= 360;\n      endAngle -= 360;\n    }\n    // convert into red\n    datasetConfig.gaugeStartAngle = startAngle = startAngle * deg2rad;\n    datasetConfig.gaugeEndAngle = endAngle = endAngle * deg2rad;\n    datasetConfig.gaugeScaleAngle = scaleAngle = scaleAngle * deg2rad;\n    datasetConfig.upperLimit = pluckNumber(chartAttrs.upperlimit);\n    datasetConfig.lowerLimit = pluckNumber(chartAttrs.lowerlimit);\n\n    // set axis configure\n    scale.setAxisConfig({\n      startAngle: startAngle,\n      totalAngle: -scaleAngle\n    });\n    scaleOnResize = pluckNumber(chartAttrs.scaleonresize, 1);\n\n    datasetConfig.origW = pluckNumber(chartAttrs.origw, scaleOnResize\n      ? chart.config.origRenderWidth : chartConfig.width);\n    datasetConfig.origH = pluckNumber(chartAttrs.origh, scaleOnResize\n      ? chart.config.origRenderHeight : chartConfig.height);\n    chartConfig.showtooltip = pluckNumber(chartAttrs.showtooltip, 1);\n    // Whether to auto-scale itself with respect to previous size\n    chartConfig.autoScale = pluckNumber(chartAttrs.autoscale, 1);\n    datasetConfig.rearExtension = pluckNumber(pointer.rearextension, 0);\n    datasetConfig.gaugeinnerradius = chartAttrs.gaugeinnerradius;\n    // gaugeOuterRadius does not have any default value.\n    datasetConfig.valueBelowPivot = pluckNumber(chartAttrs.valuebelowpivot, 0);\n    datasetConfig.showShadow = pluckNumber(chartAttrs.showshadow, 1);\n    showGaugeBorder = pluckNumber(chartAttrs.showgaugeborder, 1);\n    datasetConfig.gaugeFillMix = getFirstDefinedValue(chartAttrs.colorrangefillmix,\n      chartAttrs.gaugefillmix, chart.colorRangeFillMix,\n      '{light-10},{light-70},{dark-10}');\n    datasetConfig.gaugeFillRatio = getFirstDefinedValue(chartAttrs.colorrangefillratio,\n      chartAttrs.gaugefillratio, chart.colorRangeFillRatio, chartAttrs.gaugefillratio);\n    if (datasetConfig.gaugeFillRatio === UNDEF) {\n      datasetConfig.gaugeFillRatio = GAUGE_FILTER_RATIO;\n    } else if (datasetConfig.gaugeFillRatio !== BLANK) {\n      // Append a comma before the ratio\n      datasetConfig.gaugeFillRatio = COMMASTRING + datasetConfig.gaugeFillRatio;\n    }\n    datasetConfig.gaugeBorderColor = pluck(chartAttrs.gaugebordercolor, '{dark-20}');\n    datasetConfig.gaugeBorderThickness = showGaugeBorder\n      ? pluckNumber(chartAttrs.gaugeborderthickness, 1) : 0;\n    datasetConfig.gaugeBorderAlpha = pluckNumber(chartAttrs.gaugeborderalpha, 100);\n\n    // Gauge Border properties\n\n    // Parse the color, alpha and ratio array for each color range arc.\n    pvColor = colorM.parseColorMix(\n      pluck(chartAttrs.pivotfillcolor, chartAttrs.pivotcolor, chartAttrs.pivotbgcolor,\n        colorM.getColor('pivotColor')),\n      pluck(chartAttrs.pivotfillmix, '{light-10},{light-30},{dark-20}'));\n    datasetConfig.pivotFillAlpha = colorM.parseAlphaList(pluck(chartAttrs.pivotfillalpha,\n      HUNDREDSTRING), pvColor.length);\n    datasetConfig.pivotFillRatio = colorM.parseRatioList(pluck(chartAttrs.pivotfillratio, ZEROSTRING),\n      pvColor.length);\n    datasetConfig.pivotFillColor = pvColor.join();\n    datasetConfig.pivotFillAngle = pluckNumber(chartAttrs.pivotfillangle, 0);\n    datasetConfig.isRadialGradient = pluck(chartAttrs.pivotfilltype, 'radial').toLowerCase() === 'radial';\n    // Pivot border properties\n    datasetConfig.showPivotBorder = pluckNumber(chartAttrs.showpivotborder, 0);\n    datasetConfig.pivotBorderThickness = pluckNumber(chartAttrs.pivotborderthickness, 1);\n    datasetConfig.pivotBorderColor = convertColor(\n      pluck(chartAttrs.pivotbordercolor, colorM.getColor('pivotBorderColor')),\n      datasetConfig.showPivotBorder === 1 ? pluck(chartAttrs.pivotborderalpha, HUNDREDSTRING)\n        : ZEROSTRING);\n    chartConfig.dataLabels = chartConfig.dataLabels || {};\n    fontBdrColor = getFirstValue(chartAttrs.valuebordercolor,\n      BLANKSTRING);\n    fontBdrColor = fontBdrColor ? convertColor(\n      fontBdrColor, pluckNumber(chartAttrs.valueborderalpha,\n        chartAttrs.valuealpha, 100)) : BLANKSTRING;\n    dataLabelsStyle = chartConfig.dataLabels.style = {\n      fontFamily: pluck(chartAttrs.valuefont, chartConfig.style.inCanfontFamily),\n      fontSize: pluck(this.computeFontSize(chartAttrs.valuefontsize),\n        parseInt(chartConfig.style.inCanfontSize, 10)) + PXSTRING,\n      fontSizeWithUnit: pluckFontSizeMaintainUnit(chartAttrs.valuefontsize,\n        chartConfig.style.inCanfontSizeWithUnit),\n      color: convertColor(pluck(chartAttrs.valuefontcolor, chartConfig.style.inCancolor),\n        pluckNumber(chartAttrs.valuefontalpha,\n          chartAttrs.valuealpha, 100)),\n      fontWeight: pluckNumber(chartAttrs.valuefontbold) ? 'bold'\n        : NORMALSTRING,\n      fontStyle: pluckNumber(chartAttrs.valuefontitalic) ? 'italic'\n        : NORMALSTRING,\n      border: fontBdrColor || chartAttrs.valuebgcolor\n        ? (pluckNumber(chartAttrs.valueborderthickness, 1) + 'px solid')\n        : UNDEF,\n      borderColor: fontBdrColor,\n      borderThickness: pluckNumber(chartAttrs.valueborderthickness, 1),\n      borderPadding: pluckNumber(chartAttrs.valueborderpadding, 2),\n      borderRadius: pluckNumber(chartAttrs.valueborderradius, 0),\n      backgroundColor: chartAttrs.valuebgcolor\n        ? convertColor(chartAttrs.valuebgcolor,\n          pluckNumber(chartAttrs.valuebgalpha, chartAttrs.valuealpha,\n            100)) : BLANKSTRING,\n      borderDash: pluckNumber(chartAttrs.valueborderdashed, 0)\n        ? getDashStyle(pluckNumber(chartAttrs.valueborderdashlen, 4),\n          pluckNumber(chartAttrs.valueborderdashgap, 2)) : BLANK\n    };\n    setLineHeight(dataLabelsStyle);\n  }\n\n  /**\n   * Trim extra previous data on update\n   * @param {Object} pointers JSON input data\n   */\n  trimData (pointers) {\n    var dataSet = this,\n      prevPointers,\n      currPointers;\n\n    prevPointers = dataSet.components.data && dataSet.components.data.length;\n    currPointers = (pointers.dial && pointers.dial.length) || 0;\n\n    if (prevPointers > currPointers) {\n      dataSet.removeData(prevPointers - currPointers);\n    }\n  }\n\n  /**\n   * Draws background graphics\n   */\n  _drawBackground () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      canvas = chart.getChildren('canvas')[0],\n      dsConfig = dataSet.config,\n      scale = dataSet.getFromEnv('scale'),\n      colorM = dataSet.getFromEnv('color-manager'),\n      scaleRange = scale.config.axisRange,\n      colorRangeGetter = dataSet.getFromEnv('colorRange'),\n      plotContainer = chart.getChildContainer('plotGroup'),\n      shadowContainer = chart.getChildContainer('defaultShadowGroup'),\n      dataLabelContainer = chart.getChildContainer('datalabelsGroup'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      gaugeOuterRadius = dsConfig.gaugeOuterRadius,\n      gaugeInnerRadius = dsConfig.gaugeInnerRadius,\n      gaugeFillRatio = dsConfig.gaugeFillRatio,\n      gaugeBorderColor = dsConfig.gaugeBorderColor,\n      gaugeBorderThickness = dsConfig.gaugeBorderThickness,\n      gaugeBorderAlpha = dsConfig.gaugeBorderAlpha,\n      gaugeFillMix = dsConfig.gaugeFillMix,\n      x = dsConfig.gaugeOriginX,\n      y = dsConfig.gaugeOriginY,\n      startAngle = dsConfig.gaugeStartAngle,\n      showShadow = dsConfig.showShadow,\n      minValue = scaleRange.min,\n      maxValue = scaleRange.max,\n      colorRange = colorRangeGetter ? colorRangeGetter.getColorRangeArr(minValue, maxValue) : [],\n      i = 0, ln = colorRange.length,\n      colorObj, currentEndAngle,\n      lastAngle = startAngle,\n      nextAngle,\n      crColor, crAlpha, crRatio, shadowAlpha,\n      borderColor,\n      borderAlpha,\n      fcColorObj,\n      bandGroupDummy = dataSet.getContainer('bandGroup'),\n      bandGroup,\n      pointGroupDummy = dataSet.getContainer('pointGroup'),\n      pointGroup,\n      pivotElem,\n      pivotElemDummy,\n      bandElemDummy,\n      bandElem,\n      count = 0,\n      hideFn = function () {\n        this.hide();\n      },\n      showFn = function () {\n        this.show();\n      };\n\n    // create/reuse bandgroup element\n    bandGroup = animationManager.setAnimation({\n      el: bandGroupDummy || 'group',\n      attr: {\n        name: 'bandGroup'\n      },\n      container: plotContainer,\n      component: dataSet,\n      label: 'group'\n    });\n    if (!bandGroupDummy) {\n      bandGroup = dataSet.addContainer('bandGroup', bandGroup);\n    }\n\n    // create/reuse pointGroup element\n    pointGroup = animationManager.setAnimation({\n      el: pointGroupDummy || 'group',\n      attr: {\n        name: 'pointGroup',\n        transform: 't' + x + COMMASTRING + y\n      },\n      container: dataLabelContainer,\n      component: dataSet,\n      label: 'group'\n    });\n    if (!pointGroupDummy) {\n      dataSet.addContainer('pointGroup', pointGroup);\n    }\n\n    // draw all color Bands\n    for (; i < ln; i += 1) {\n      colorObj = colorRange[i];\n\n      currentEndAngle = scale.getAngle(Math.min(colorObj.maxvalue, maxValue));\n\n      // Parse the color, alpha and ratio array for each color range arc.\n      crColor = colorM.parseColorMix(colorObj.code, gaugeFillMix);\n      crAlpha = colorM.parseAlphaList(colorObj.alpha, crColor.length);\n      crRatio = colorM.parseRatioList((gaugeInnerRadius / gaugeOuterRadius * 100) +\n                  gaugeFillRatio, crColor.length);\n\n      borderColor = colorObj.bordercolor;\n      borderAlpha = pluckNumber(colorObj.borderAlpha, gaugeBorderAlpha);\n      // Set border propeties\n      // Which border color to use - between actual color and color mix specified?\n      if (borderColor && borderColor.indexOf('{') === -1) {\n        borderColor = convertColor(borderColor, borderAlpha);\n      } else {\n        borderColor = colorM.parseColorMix(colorObj.code, pluck(borderColor, gaugeBorderColor))[0];\n      }\n      borderColor = convertColor(borderColor, borderAlpha);\n      // create the shadow element\n      shadowAlpha = crAlpha.split(COMMASTRING);\n      shadowAlpha = mathMax.apply(Math, shadowAlpha);\n      shadowAlpha = showShadow\n        ? mathMax(borderAlpha || 0, shadowAlpha) : 0;\n\n      // If start angle > end angle then swap the two for intended\n      // behavior.\n      nextAngle = currentEndAngle;\n      if (lastAngle > currentEndAngle) {\n        lastAngle += (currentEndAngle);\n        currentEndAngle = lastAngle - currentEndAngle;\n        lastAngle = lastAngle - currentEndAngle;\n      }\n      colorObj._startAngle = lastAngle;\n      colorObj._endAngle = currentEndAngle;\n      bandElemDummy = canvas.getGraphicalElement('bands') && canvas.getGraphicalElement('bands')[i];\n      // Create/reuse bandElements\n      bandElem = animationManager.setAnimation({\n        el: bandElemDummy || 'ringpath',\n        attr: {\n          ringpath: [x, y, gaugeOuterRadius, gaugeInnerRadius, lastAngle, currentEndAngle],\n          fill: toRaphaelColor({\n            FCcolor: {\n              cx: x,\n              cy: y,\n              r: gaugeOuterRadius,\n              gradientUnits: 'userSpaceOnUse',\n              color: crColor.join(),\n              alpha: crAlpha,\n              ratio: crRatio,\n              radialGradient: true\n            }\n          }),\n          'stroke-width': gaugeBorderThickness,\n          stroke: borderColor\n        },\n        container: bandGroup,\n        callback: showFn,\n        component: dataSet,\n        label: 'plotBackground'\n      });\n      if (!bandElemDummy) {\n        canvas.addGraphicalElement('bands', bandElem, true);\n        bandElem.shadow({\n          apply: showShadow,\n          opacity: (shadowAlpha / 100)\n        });\n      }\n\n      lastAngle = nextAngle;\n      count += 1;\n    }\n    ln = canvas.getGraphicalElement('bands') && canvas.getGraphicalElement('bands').length;\n    // Hide extra band elements\n    for (i = count; i < ln; i++) {\n      colorObj = colorRange[i] || dsConfig.oldColorArr[i];\n      colorObj && animationManager.setAnimation({\n        el: canvas.getGraphicalElement('bands')[i],\n        attr: {\n          ringpath: [x, y, gaugeOuterRadius, gaugeInnerRadius, colorObj._startAngle, colorObj._startAngle]\n        },\n        component: dataSet,\n        callback: hideFn,\n        label: 'plotBackground'\n      });\n    }\n\n    // Store the old color array to be used for disappearing animation\n    dsConfig.oldColorArr = colorRange;\n    fcColorObj = dsConfig.isRadialGradient ? {\n      color: dsConfig.pivotFillColor,\n      alpha: dsConfig.pivotFillAlpha,\n      ratio: dsConfig.pivotFillRatio,\n      radialGradient: true,\n      angle: dsConfig.pivotFillAngle,\n      cx: 0.5,\n      cy: 0.5,\n      r: '50%'\n    } : {\n      color: dsConfig.pivotFillColor,\n      alpha: dsConfig.pivotFillAlpha,\n      ratio: dsConfig.pivotFillRatio,\n      radialGradient: false,\n      angle: dsConfig.pivotFillAngle\n    };\n    pivotElemDummy = dataSet.getGraphicalElement('pivot');\n    // Now draw the pivot\n    pivotElem = animationManager.setAnimation({\n      el: pivotElemDummy || 'circle',\n      attr: {\n        cx: x,\n        cy: y,\n        r: dsConfig.pivotRadius,\n        fill: toRaphaelColor({\n          FCcolor: fcColorObj\n        }),\n        'stroke-width': dsConfig.pivotBorderThickness,\n        stroke: dsConfig.pivotBorderColor\n      },\n      container: dataLabelContainer,\n      component: dataSet,\n      label: 'pivot'\n    });\n\n    if (!pivotElemDummy) {\n      pivotElem = dataSet.addGraphicalElement('pivot', pivotElem);\n      pivotElem.shadow({\n        apply: showShadow\n      }, shadowContainer);\n    }\n  }\n\n  /**\n   * Alters the data of the dataset and stores the data to be removed in a different array\n   * @param {number} numbers number of data to be removed\n   */\n  removeData (numbers) {\n    var dataSet = this,\n      i,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      callBackFn = function () {\n        this.remove();\n      },\n\n      data = dataSet.components.data;\n\n    for (i = 0; i < numbers; i++) {\n      data[i].graphics.pointersPath && animationManager.setAnimation({\n        el: data[i].graphics.pointersPath,\n        attr: {\n          opacity: 0\n        },\n        callback: callBackFn,\n        component: dataSet\n      });\n      data[i].graphics.pointersTpath && animationManager.setAnimation({\n        el: data[i].graphics.pointersTpath,\n        attr: {\n          opacity: 0\n        },\n        callback: callBackFn,\n        component: dataSet\n      });\n      data[i].graphics.dataLabel && animationManager.setAnimation({\n        el: data[i].graphics.dataLabel,\n        attr: {\n          opacity: 0\n        },\n        callback: callBackFn,\n        component: dataSet\n      });\n    }\n\n    dataSet.removeDataArr || (dataSet.removeDataArr = []);\n    dataSet.removeDataArr = dataSet.removeDataArr.concat(data.splice(0, numbers));\n  }\n\n  /**\n   * Draw plot graphics\n   * @param {boolean} animation determines whether to animate plot(dial) or not\n   */\n  draw (animation) {\n    this._drawBackground();\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      idMap = dataSet.config.idMap,\n      chartConfig = chart.config,\n      jsonData = chart.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      data = dataSet.components.data,\n      datasetConfig = dataSet.config,\n      renderer = datasetConfig,\n      NumberFormatter = dataSet.getFromEnv('number-formatter'),\n      colorM = dataSet.getFromEnv('color-manager'),\n      scale = dataSet.getFromEnv('scale'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      x = Number(datasetConfig.gaugeOriginX),\n      y = Number(datasetConfig.gaugeOriginY),\n      startAngle = datasetConfig.gaugeStartAngle,\n      endAngle = datasetConfig.gaugeEndAngle,\n      shouldShowShadow = datasetConfig.showShadow,\n      showTooltip = chartConfig.showtooltip, // (options.tooltip.enabled !== false),\n      scaleRange = scale.config.axisRange,\n      minValue = scaleRange.min,\n      maxValue = scaleRange.max,\n      pGroup = dataSet.getContainer('pointGroup'),\n      dataLabelsGroup = dataSet.getLinkedParent().getChildContainer('datalabelsGroup'),\n      valueRange = (maxValue - minValue) || 1,\n      angleRange = endAngle - startAngle,\n      angleValueFactor = valueRange / angleRange,\n      editMode,\n      plottooltext = chartAttrs.plottooltext,\n      showHoverEffect = pluckNumber(chartAttrs.showhovereffect),\n      showValue = dataSet.showValue = pluckNumber(chartAttrs.showvalue, chartAttrs.showrealtimevalue, 0),\n      i = 0,\n      style = chartConfig.dataLabels.style,\n      css = {\n        fontFamily: style.fontFamily,\n        fontSize: this.computeFontSize(style.fontSizeWithUnit),\n        lineHeight: style.lineHeight,\n        fontWeight: style.fontWeight,\n        fontStyle: style.fontStyle\n      },\n      scaleFactor = chartConfig.scaleFactor,\n      lineHeight = pluckNumber(parseInt(style.lineHeight, 10), 12),\n      isBelow = datasetConfig.valueBelowPivot,\n      labelCounter = 0,\n      hasHoverSizeChange,\n      hoverFill,\n      hoverAttr,\n      outAttr,\n      point,\n      radius,\n      baseWidth,\n      topWidth,\n      baseRadius,\n      rearExtension,\n      baseWidthHF,\n      topWidthHF,\n      ln = data && data.length,\n      rotation,\n      graphic,\n      prevData,\n      stubEvent = {\n        pageX: 0,\n        pageY: 0\n      },\n      attrFN = getAttrFunction(startAngle, endAngle),\n      chartPosition,\n      getClickArcTangent = function (xCoord, yCoord, center, ref) {\n        return mathATan2(yCoord - center[1] - ref.top,\n          xCoord - center[0] - ref.left);\n      },\n      dialDragStart = function (e) {\n        var pt = data[this.pos],\n          pointConfig = pt.config || {},\n          startX = e.data[0],\n          startY = e.data[1];\n        if (!pointConfig.editMode) {\n          return;\n        }\n        // For update previous value is retaining due to closure\n        x = Number(datasetConfig.gaugeOriginX);\n        y = Number(datasetConfig.gaugeOriginY);\n        chartPosition = getPosition(chart.getFromEnv('chart-container'));\n        // Record the angle of point of drag start with respect\n        // to starting angle.\n        chartConfig.rotationStartAngle = getClickArcTangent(startX, startY, [x, y], chartPosition);\n        pointConfig.dragStartY = pointConfig.value;\n        prevData = chart._getDataJSON();\n      },\n\n      dialDragEnd = function () {\n        var pt = data[this.pos],\n          config = pt.config,\n          chartObj = chart.getFromEnv('chartInstance'),\n          jsVars;\n\n        if (!pt.config.editMode) {\n          return;\n        }\n        jsVars = chartObj && chartObj.jsVars;\n        jsVars && (jsVars._rtLastUpdatedData = chart._getDataJSON());\n        chart.fireChartInstanceEvent('RealTimeUpdateComplete', {\n          data: '&value=' + config.updatedValStr,\n          updateObject: {values: [config.updatedValStr]},\n          prevData: prevData.values,\n          source: 'editMode',\n          url: null\n        });\n\n        try {\n          window.FC_ChartUpdated &&\n                        window.FC_ChartUpdated(chartObj.id);\n        } catch (err) {\n          setTimeout(function () {\n            throw (err);\n          }, 1);\n        }\n      },\n      dialDragHandler = function (event) {\n        var pt = data[this.pos],\n          touchEvent = (hasTouch && getTouchEvent(event)) || stubEvent,\n          newAngle,\n          angleDelta,\n          angleDelta2,\n          newVal,\n          newVal2,\n          values,\n          scaleRang = scale.config.axisRange,\n          startX = event.data[2],\n          startY = event.data[3],\n          ii,\n          tempValues,\n          len;\n\n        if (!pt.config.editMode) {\n          return;\n        }\n\n        // set a flag to determine that drag is happened\n        chartConfig.fromDrag = true;\n\n        // For update previous value is retaining due to closure\n        x = Number(datasetConfig.gaugeOriginX);\n        y = Number(datasetConfig.gaugeOriginY);\n        minValue = scaleRang.min;\n        maxValue = scaleRang.max;\n        startAngle = datasetConfig.gaugeStartAngle;\n        endAngle = datasetConfig.gaugeEndAngle;\n        valueRange = maxValue - minValue;\n        angleRange = endAngle - startAngle;\n        angleValueFactor = valueRange / angleRange;\n        newAngle = getClickArcTangent(startX, startY, [x, y], chartPosition);\n\n        angleDelta = chartConfig.rotationStartAngle - newAngle;\n        angleDelta2 = angleDelta < 0 ? (math2PI + angleDelta) : (angleDelta - math2PI);\n        newVal = pt.config.dragStartY - (angleDelta * angleValueFactor);\n        newVal2 = pt.config.dragStartY - (angleDelta2 * angleValueFactor);\n\n        if ((newVal < minValue || newVal > maxValue) && (newVal2 >= minValue && newVal2 <= maxValue)) {\n          newVal = newVal2;\n        }\n\n        if (newVal < minValue) {\n          newVal = mathAbs(newVal2 - maxValue) < mathAbs(newVal - minValue) ? maxValue : minValue;\n        } else if (newVal > maxValue) {\n          newVal = mathAbs(newVal - maxValue) < mathAbs(newVal2 - minValue) ? maxValue : minValue;\n        }\n\n        pt.config.updatedValStr = newVal + BLANK;\n        values = [];\n        tempValues = [];\n        ii = 0;\n        len = pt.config.index;\n\n        for (;ii < len; ii += 1) {\n          values.push(BLANK);\n          tempValues.push(BLANK);\n        }\n\n        values.push({value: newVal,\n          animation: {\n            duration: 0,\n            transposeAnimDuration: 0,\n            initAnimDuration: 0\n          }});\n        tempValues.push(newVal);\n\n        if (pt.config.y !== newVal && dataSet.updateData({data: values})) {\n          pt.config.updatedValStr = tempValues.join('|');\n          pt.config.dragStartX = (x || event.pageX || touchEvent.pageX);\n        }\n      },\n      link,\n      eventArgs,\n      rolloverProperties,\n      pathComand,\n      hoverRadius,\n      baseHoverWidth,\n      baseHoverWidthHF,\n      topHoverWidth,\n      topHoverWidthHF,\n      rearHoverExtension,\n      clickHandler,\n      angleValue,\n      pointConfig,\n      itemValue,\n      formatedValue,\n      displayValue,\n      dataLabelObj,\n      dataLabelTooltext,\n      pointShowValue,\n      valueY,\n      setToolText,\n      bgColor,\n      bgAlpha,\n      dialFill,\n      borderColor,\n      borderalpha,\n      dialBorderColor,\n      borderThickness,\n      showDialHoverEffect,\n      borderHoverColor,\n      borderHoverAlpha,\n      borderHoverThickness,\n      hasBorderHoverMix,\n      bgHoverColor,\n      bgHoverAlpha,\n      hasHoberFillMix,\n      compositPivotRadius,\n      pivotRadius,\n      valueX,\n      toolText,\n      displayValueArgs,\n      lastY,\n      labelY,\n      labelX,\n      hoverRollOver,\n      hoverRollOut,\n      pointersTpathString,\n      pointersPathString,\n      dataGraphics,\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      cx = R.vml ? (-1.5) : 0, // correction of -1.5 has to be added for VML.\n      cy = R.vml ? (-1.5) : 0,\n      freshDraw;\n\n    style.fontSize = this.computeFontSize(style.fontSizeWithUnit);\n    setLineHeight(style);\n\n    compositPivotRadius = pivotRadius = datasetConfig.pivotRadius;\n    if (renderer.dataById === UNDEF) {\n      renderer.dataById = {};\n    }\n\n    if (animation && animation.duration === 0) {\n      chart.getFromEnv('animationManager').setAnimationState('dialDrag');\n    }\n\n    clickHandler = function (dt) {\n      var ele = this;\n      // Checking if click is fired from drag or not\n      if (chartConfig.fromDrag) {\n        chartConfig.fromDrag = false;\n        return;\n      }\n      chart.plotEventHandler(ele, dt);\n    };\n\n    // fix for null or no data\n    // gauge will show the dial at min value\n    if (!ln) {\n      ln = 0;\n    }\n\n    smartLabel.setStyle(css);\n\n    if (showHoverEffect !== 0 && (showHoverEffect || chartAttrs.dialborderhovercolor ||\n                    chartAttrs.dialborderhoveralpha || chartAttrs.dialborderhoveralpha === 0 ||\n                    chartAttrs.dialborderhoverthickness || chartAttrs.dialborderhoverthickness === 0 ||\n                    chartAttrs.dialbghovercolor || chartAttrs.plotfillhovercolor ||\n                    chartAttrs.dialbghoveralpha || chartAttrs.plotfillhoveralpha ||\n                        chartAttrs.dialbghoveralpha === 0)) {\n      showHoverEffect = 1;\n    }\n    // rollOver handler\n    hoverRollOver = function (dat) {\n      var ele = this,\n        transStr,\n        rolloverProps = ele.data('rolloverProperties');\n      chart.plotEventHandler(ele, dat, 'DataPlotRollOver');\n      if (rolloverProps.enabled) {\n        transStr = ele.attr('transform');\n        ele.attr('transform', BLANK);\n        ele.attr(rolloverProps.hoverAttr);\n        ele.attr('transform', transStr);\n      }\n    };\n    // rollOut Handler\n    hoverRollOut = function (dat) {\n      var ele = this,\n        transStr,\n        rolloverProps = ele.data('rolloverProperties');\n      chart.plotEventHandler(ele, dat, 'DataPlotRollOut');\n      if (rolloverProps.enabled) {\n        transStr = ele.attr('transform');\n        ele.attr('transform', BLANK);\n        ele.attr(rolloverProps.outAttr);\n        ele.attr('transform', transStr);\n      }\n    };\n    for (; i < ln; i += 1) {\n      point = data[i];\n      point.config = point.config || {};\n      pointConfig = point.config;\n      point.config.index = i;\n      idMap[pointConfig.id] = {\n        index: i,\n        config: point.config\n      };\n      freshDraw = false;\n\n      if (pointConfig.id !== UNDEF) {\n        renderer.dataById[pointConfig.id] = {\n          index: i,\n          point: point\n        };\n      }\n      dataGraphics = data[i].graphics || (data[i].graphics = {});\n      itemValue = NumberFormatter.getCleanValue(pointConfig.value);\n      // Set precision for handling decimal upto 10 place.\n      itemValue = Number(toPrecision(itemValue, 10));\n      rearExtension = (pluckNumber(pointConfig.rearextension, 0)) * scaleFactor;\n      compositPivotRadius = Math.max(compositPivotRadius, rearExtension * scaleFactor);\n      formatedValue = NumberFormatter.dataLabels(itemValue);\n      displayValue = getValidValue(pointConfig.displayvalue, formatedValue, BLANKSTRING);\n      pointShowValue = pluckNumber(pointConfig.showvalue, showValue);\n      valueY = pluckNumber(getValidValue(pointConfig.valuey) * scaleFactor);\n      valueX = pluckNumber(getValidValue(pointConfig.valuex) * scaleFactor);\n      pointConfig.itemValue = itemValue;\n      pointConfig.formatedVal = formatedValue;\n\n      setToolText = getValidValue(parseUnsafeString(pluck(pointConfig.tooltext, point.hovertext, plottooltext), false));\n      if (setToolText) {\n        setToolText = parseTooltext(setToolText, [1, 2], {\n          formattedValue: formatedValue\n        }, point.config, chartAttrs);\n      } else {\n        setToolText = displayValue;\n      }\n      bgColor = pluck(pointConfig.color, pointConfig.bgcolor, colorM.getColor('dialColor'));\n      bgAlpha = pluckNumber(pointConfig.alpha, point.bgalpha, 100);\n      dialFill = toRaphaelColor({\n        FCcolor: {\n          color: bgColor,\n          alpha: bgAlpha,\n          angle: 90\n        }\n      });\n      borderColor = pluck(pointConfig.bordercolor, colorM.getColor('dialBorderColor'));\n      borderalpha = pluckNumber(pointConfig.borderalpha, 100);\n      dialBorderColor = convertColor(borderColor, borderalpha);\n      borderThickness = pluckNumber(pointConfig.borderthickness, 1);\n      radius = (pluckNumber(pointConfig.radius)) * scaleFactor;\n      baseWidth = pluckNumber(pluckNumber(pointConfig.basewidth * scaleFactor, pivotRadius * 1.6));\n      topWidth = (pluckNumber(pointConfig.topwidth, 0)) * scaleFactor;\n      baseRadius = pluckNumber(pointConfig.baseradius, 0);\n      editMode = pluckNumber(pointConfig.editmode, chartAttrs.editmode, 0);\n      link = pluck(pointConfig.link, BLANKSTRING);\n      toolText = setToolText;\n      pointConfig.toolText = toolText;\n      displayValueArgs = pluck(displayValue, BLANKSTRING);\n      displayValue = pointShowValue ? pluck(displayValue, BLANK) : BLANKSTRING;\n      showDialHoverEffect = pluckNumber(point.showhovereffect, showHoverEffect);\n      if (showDialHoverEffect !== 0 && (showDialHoverEffect || point.borderhovercolor ||\n                        point.borderhoveralpha || point.borderhoveralpha === 0 ||\n                        point.borderhoverthickness || point.borderhoverthickness === 0 ||\n                        point.bghovercolor || point.bghoveralpha || point.bghoveralpha === 0)) {\n        showDialHoverEffect = true;\n        outAttr = {};\n        hoverAttr = {};\n        borderHoverColor = pluck(point.borderhovercolor, chartAttrs.dialborderhovercolor,\n          FILLMIXDARK10);\n        borderHoverAlpha = pluckNumber(point.borderhoveralpha,\n          chartAttrs.dialborderhoveralpha, borderalpha);\n        borderHoverThickness = pluckNumber(point.borderhoverthickness,\n          chartAttrs.dialborderhoverthickness, borderThickness);\n\n        if (borderHoverThickness) {\n          outAttr.stroke = dialBorderColor;\n          hasBorderHoverMix = /\\{/.test(borderHoverColor);\n          hoverAttr.stroke = convertColor(hasBorderHoverMix\n            ? colorM.parseColorMix(borderColor, borderHoverColor)[0]\n            : borderHoverColor, borderHoverAlpha);\n        }\n        if (borderHoverThickness !== borderThickness) {\n          hoverAttr['stroke-width'] = borderHoverThickness;\n          outAttr['stroke-width'] = borderThickness;\n        }\n\n        bgHoverColor = pluck(point.bghovercolor, chartAttrs.dialbghovercolor,\n          chartAttrs.plotfillhovercolor, FILLMIXDARK10);\n        bgHoverAlpha = pluckNumber(point.bghoveralpha, chartAttrs.dialbghoveralpha,\n          chartAttrs.plotfillhoveralpha, bgAlpha);\n        outAttr.fill = dialFill;\n        hasHoberFillMix = /\\{/.test(bgHoverColor);\n\n        bgHoverColor = hasHoberFillMix ? colorM.parseColorMix(bgColor,\n          bgHoverColor).join() : bgHoverColor;\n        hoverFill = {\n          FCcolor: {\n            color: bgHoverColor,\n            alpha: bgHoverAlpha,\n            angle: 90\n          }\n        };\n        hoverAttr.fill = toRaphaelColor(hoverFill);\n      }\n      // Parse data related attributed\n      rolloverProperties = pointConfig.rolloverProperties = {\n        enabled: showDialHoverEffect,\n        hasHoverSizeChange: hasHoverSizeChange,\n        hoverRadius: pluckNumber(hoverRadius * scaleFactor),\n        baseHoverWidth: pluckNumber(baseHoverWidth * scaleFactor, pivotRadius * 1.6),\n        topHoverWidth: pluckNumber(topHoverWidth * scaleFactor),\n        rearHoverExtension: pluckNumber(rearHoverExtension * scaleFactor),\n        hoverFill: hoverFill,\n        hoverAttr: hoverAttr,\n        outAttr: outAttr\n      };\n      radius = pluckNumber(radius, (Number(datasetConfig.gaugeOuterRadius) +\n        Number(datasetConfig.gaugeInnerRadius)) / 2);\n      baseWidthHF = baseWidth / 2;\n      topWidthHF = topWidth / 2;\n\n      // set the tooltip pos\n      pointConfig.tooltipPos = [x, y];\n      link = pointConfig.editMode ? UNDEF : pointConfig.link;\n      pathComand = [M, radius, -topWidthHF, L, radius, topWidthHF, -rearExtension,\n        baseWidthHF, -rearExtension, -baseWidthHF, Z];\n      if (rolloverProperties.hasHoverSizeChange) {\n        rolloverProperties.outAttr.path = pathComand;\n        hoverRadius = pluckNumber(rolloverProperties.hoverRadius, radius);\n        baseHoverWidth = rolloverProperties.baseHoverWidth;\n        baseHoverWidthHF = baseHoverWidth / 2;\n        topHoverWidth = rolloverProperties.topHoverWidth;\n        topHoverWidthHF = topHoverWidth / 2;\n        rearHoverExtension = rolloverProperties.rearHoverExtension;\n        rolloverProperties.hoverAttr.path = [M, hoverRadius, -topHoverWidthHF, L,\n          hoverRadius, topHoverWidthHF, -rearHoverExtension, baseHoverWidthHF,\n          -rearHoverExtension, -baseHoverWidthHF, Z];\n      }\n\n      eventArgs = {\n        link: pointConfig.link,\n        value: itemValue,\n        displayValue: displayValueArgs,\n        toolText: toolText,\n        baseWidth: pointConfig.basewidth,\n        bgColor: pointConfig.bgcolor,\n        borderAlpha: pointConfig.borderalpha,\n        borderColor: pointConfig.bordercolor,\n        borderThickness: pointConfig.borderthickness,\n        editMode: pointConfig.editmode,\n        id: pointConfig.id,\n        radius: pointConfig.radius,\n        rearExtension: pointConfig.rearextension,\n        showValue: pointConfig.showPointerValue,\n        topWidth: pointConfig.topwidth,\n        valueX: pointConfig.valuex,\n        valueY: pointConfig.valuey,\n        baseRadius: pointConfig.baseradius\n      };\n      if (itemValue >= minValue && itemValue <= maxValue) {\n        angleValue = ((itemValue - minValue) / valueRange) * angleRange;\n        rotation = (startAngle + angleValue) / deg2rad;\n      }\n\n      // graphics.pointers[i].remove()\n      if (!dataGraphics.pointersTpath) {\n        if (topWidth) {\n          pointersPathString = pathComand;\n          pointersTpathString = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n        } else {\n          // Render using trianglepath\n          pointersPathString = ['M', 0, 0];\n          pointersTpathString = [radius,\n            topWidthHF, -rearExtension, baseWidthHF,\n            -rearExtension, -baseWidthHF, 0, baseRadius,\n            baseRadius];\n        }\n        dataGraphics.pointersPath = animationManager.setAnimation({\n          el: 'path',\n          attr: {\n            path: pointersPathString,\n            transform: ('R' + rotation + COMMASTRING + cx + COMMASTRING + cy)\n          },\n          container: pGroup,\n          component: dataSet,\n          label: 'dialPath'\n        });\n        dataGraphics.pointersTpath = animationManager.setAnimation({\n          el: 'trianglepath',\n          attr: {\n            trianglepath: pointersTpathString,\n            transform: ('R' + rotation + COMMASTRING + cx + COMMASTRING + cy)\n          },\n          container: pGroup,\n          component: dataSet,\n          label: 'dialPath'\n        });\n        // Render using path if topWidth present\n        if (topWidth) {\n          graphic = dataGraphics.pointersPath;\n        } else {\n          graphic = dataGraphics.pointersTpath;\n        }\n        if (baseWidth || topWidth || borderThickness) {\n          graphic.shadow({apply: shouldShowShadow});\n        }\n        freshDraw = true;\n      } else {\n        if (topWidth) {\n          animationManager.setAnimation({\n            el: dataGraphics.pointersPath,\n            attr: {\n              path: pathComand,\n              transform: ('R' + rotation + COMMASTRING + cx + COMMASTRING + cy)\n            },\n            component: dataSet,\n            label: 'dialPath'\n          });\n          dataGraphics.pointersTpath._attr({\n            trianglepath: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n          });\n        } else {\n          // Render using trianglepath\n          animationManager.setAnimation({\n            el: dataGraphics.pointersTpath,\n            attr: {\n              trianglepath: [radius,\n                topWidthHF, -rearExtension, baseWidthHF,\n                -rearExtension, -baseWidthHF, 0, baseRadius,\n                baseRadius],\n              transform: ('R' + rotation + COMMASTRING + cx + COMMASTRING + cy)\n            },\n            component: dataSet,\n            label: 'trianglepath'\n          });\n          dataGraphics.pointersPath._attr({\n            path: 'M0,0'\n          });\n        }\n      }\n      // Render using path if topWidth present\n      if (topWidth) {\n        graphic = dataGraphics.pointersPath;\n      } else {\n        graphic = dataGraphics.pointersTpath;\n      }\n      if (!dataGraphics.pointersPath._attr) {\n        dataGraphics.pointersPath._attr = dataGraphics.pointersPath.attr;\n        dataGraphics.pointersPath.attr = attrFN;\n      }\n      if (!dataGraphics.pointersTpath._attr) {\n        dataGraphics.pointersTpath._attr = dataGraphics.pointersTpath.attr;\n        dataGraphics.pointersTpath.attr = attrFN;\n      }\n\n      graphic._attr({\n        fill: dialFill,\n        stroke: dialBorderColor,\n        'stroke-width': borderThickness\n      })\n        .data(EVENTARGS, eventArgs)\n        .data('rolloverProperties', rolloverProperties);\n\n      graphic._Attr = {\n        tooltipPos: pointConfig.tooltipPos,\n        cx: x,\n        cy: y,\n        toolTipRadius: radius - rearExtension,\n        color: pointConfig.color\n      };\n      if (freshDraw) {\n        rotation = (startAngle / deg2rad);\n        graphic.hover(hoverRollOver, hoverRollOut);\n      }\n\n      pointConfig.index = i;\n      pointConfig.editMode = editMode;\n      graphic.css({\n        cursor: editMode || link ? POINTER : 'default',\n        '_cursor': editMode ? 'hand' : 'default'\n      });\n      dataGraphics.pointersPath.pos = i;\n      dataGraphics.pointersTpath.pos = i;\n      if (freshDraw) {\n        dataGraphics.pointersPath.on('fc-dragstart', dialDragStart);\n        dataGraphics.pointersPath.on('fc-dragmove', dialDragHandler);\n        dataGraphics.pointersPath.on('fc-dragend', dialDragEnd);\n\n        dataGraphics.pointersTpath.on('fc-dragstart', dialDragStart);\n        dataGraphics.pointersTpath.on('fc-dragmove', dialDragHandler);\n        dataGraphics.pointersTpath.on('fc-dragend', dialDragEnd);\n\n        dataGraphics.pointersPath.on('fc-click', clickHandler);\n        dataGraphics.pointersTpath.on('fc-click', clickHandler);\n      }\n\n      pointConfig.y = itemValue;\n\n      if (showTooltip && toolText !== BLANK) {\n        toolTipController.enableToolTip(graphic, toolText);\n      } else {\n        toolTipController.disableToolTip(graphic);\n      }\n      // Draw widgets labels\n      if (defined(displayValue) && displayValue !== BLANK) {\n        lastY = y + (isBelow ? (lineHeight / 2) + pivotRadius + 2 : -(lineHeight / 2) -\n                        pivotRadius - 2);\n        labelY = valueY;\n        labelX = pluckNumber(valueX, x);\n        if (!defined(labelY)) {\n          labelY = isBelow ? lastY + (lineHeight * labelCounter)\n            : lastY - (lineHeight * labelCounter);\n        }\n        // dataLabelObj = smartLabel.getSmartText(displayValue, datasetConfig.gaugeInnerRadius, datasetConfig.gaugeInnerRadius / 2);\n        // TODO: Need to revisit the logic above why it was done like that.\n        // Modifying the code in order to fix RED-8112 for now\n        dataLabelObj = smartLabel.getSmartText(displayValue);\n        displayValue = dataLabelObj.text;\n        dataLabelTooltext = dataLabelObj.tooltext || BLANKSTRING;\n        dataGraphics.dataLabel = animationManager.setAnimation({\n          el: dataGraphics.dataLabel || 'text',\n          attr: {\n            x: labelX,\n            y: labelY,\n            direction: chartConfig.textDirection,\n            text: displayValue,\n            title: (point.originalText || BLANK),\n            fill: style.color,\n            'text-bound': [style.backgroundColor, style.borderColor,\n              style.borderThickness, style.borderPadding,\n              style.borderRadius, style.borderDash]\n          },\n          css: css,\n          container: dataLabelsGroup,\n          component: dataSet,\n          label: 'text'\n        });\n        dataGraphics.dataLabel.show();\n        labelCounter += 1;\n        if (showTooltip) {\n          toolTipController.enableToolTip(dataGraphics.dataLabel, dataLabelTooltext);\n        } else {\n          toolTipController.disableToolTip(dataGraphics.dataLabel);\n        }\n      } else {\n        dataGraphics.dataLabel && dataGraphics.dataLabel.hide();\n        dataGraphics.dataLabel && toolTipController.disableToolTip(dataGraphics.dataLabel);\n      }\n    }\n  }\n\n  /**\n   * Updates data with new JSON\n   * @param {Object} _updateObj [description]\n   * @return {boolean} determines whether on update draw is called or not\n   */\n  updateData (_updateObj) {\n    var dataSet,\n      chart,\n      data,\n      config,\n      label,\n      toolText,\n      dataArr,\n      i,\n      j,\n      id,\n      updateById,\n      updateObjLength,\n      updateData,\n      updateDataMap = {},\n      animation,\n      value,\n      updateObj = _updateObj;\n\n    if (updateObj === this.config.lastUpdatedObj) {\n      return false;\n    }\n\n    dataSet = this;\n    chart = dataSet.getFromEnv('chart');\n    data = dataSet.components.data;\n    dataArr = dataSet.components.data;\n    i = (dataArr && dataArr.length) || 0;\n\n    updateObj = updateObj.data;\n    updateObjLength = updateObj.length;\n    // use the realtime animation value or the default animation value\n\n    // Store the IDs and corresponding data in hashmap.\n    for (j = 0; j < updateObjLength; j++) {\n      id = updateObj[j].id;\n      id && (updateDataMap[id] = updateObj[j]);\n    }\n\n    updateById = Object.keys(updateDataMap).length;\n    if (i) {\n      while (i--) {\n        config = data[i].config;\n\n        id = config.id;\n        updateData = UNDEF;\n        // Check if update is done by ID of pointer or sequentially.\n        updateData = updateById ? updateDataMap[id] : updateObj[i];\n        if (!updateData) {\n          continue;\n        }\n        animation = updateData.animation || chart.get(configStr, animationObjStr);\n        value = updateData.value;\n        toolText = updateData.tooltext;\n        label = updateData.label;\n        config.value = pluckNumber(value, config.value, 0);\n        config.tooltext = pluck(toolText, config.value);\n        config.displayvalue = label;\n      }\n\n      this.config.lastUpdatedObj = updateObj;\n      // Update the dial when editMode is enabled\n      this.draw(animation);\n      return true;\n    }\n  }\n}\nexport default AngularGaugeDataset;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  pluck,\n  BLANK,\n  NORMAL,\n  preDefStr,\n  pluckNumber,\n  COMMASTRING,\n  toPrecision,\n  convertColor,\n  POSITION_LEFT,\n  getValidValue,\n  parseTooltext,\n  toRaphaelColor,\n  POSITION_RIGHT,\n  POSITION_CENTER,\n  parseUnsafeString,\n  getColorCodeString,\n  getFirstDefinedValue,\n  configureDataLabelStyle\n} from '@fusioncharts/core/src/lib';\nimport safeMax from '@fusioncharts/utils/src/array/safe-max';\nimport safeMin from '@fusioncharts/utils/src/array/safe-min';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\n\nimport hlineargaugeAnimation from './index.animation';\n\nvar UNDEF,\n  BLANKSTRING = BLANK,\n  AXISPOSITION_TOP = 1,\n  AXISPOSITION_BOTTOM = 3,\n  FILLMIXDARK10 = '{dark-10}',\n  configStr = preDefStr.configStr,\n  animationObjStr = preDefStr.animationObjStr,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_END = preDefStr.POSITION_END,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  noneStr = 'none',\n  M = 'M',\n  L = 'L',\n  NO_ANIM = 'noAnim',\n\n  win = window,\n  doc = win.document,\n  hasTouch = doc.documentElement.ontouchstart !== UNDEF,\n\n  math = Math,\n  mathMax = math.max,\n  mathMin = math.min,\n\n  POINTER = 'pointer',\n  EVENTARGS = 'eventArgs',\n  ANIM_EFFECT = 'easeIn',\n  textHAlign = {\n    right: POSITION_END,\n    left: POSITION_START,\n    middle: POSITION_MIDDLE,\n    start: POSITION_START,\n    end: POSITION_END,\n    center: POSITION_MIDDLE,\n    'undefined': BLANK,\n    BLANK: BLANK\n  },\n  /**\n   * Returns the type of touch event\n   * @param {Event} event the touch event fired\n   * @return {Object} type of touch event raised\n   */\n  getTouchEvent = function (event) {\n    return (hasTouch && event.sourceEvent && event.sourceEvent.touches &&\n                event.sourceEvent.touches[0]) || event;\n  };\n\naddDep({\n  name: 'hlineargaugeAnimation',\n  type: 'animationRule',\n  extension: hlineargaugeAnimation\n});\n/**\n * Creates the HlineargaugeDataset class\n */\nclass HlineargaugeDataset extends ComponentInterface {\n  /**\n   * Constructor function to initialise member variables of HlineargaugeDataset class\n   */\n  constructor () {\n    super();\n    this.config.idMap = { };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'hlineargauge';\n  }\n  /**\n   * Draws the color range of Hlinear Gauge plot as background\n   */\n  _drawBackground () {\n    var dataset = this,\n      iapi = this.getFromEnv('chart'),\n      envComponents = iapi.getFromEnv(),\n      chartConfig = iapi.config,\n      // For proper annotation drawing.\n      canvasGroup = iapi.getChildContainer().plotGroup,\n      toolTipController = iapi.getFromEnv('toolTipController'),\n      width = chartConfig.canvasWidth,\n      height = chartConfig.canvasHeight,\n      canvasTop = chartConfig.canvasTop,\n      canvasLeft = chartConfig.canvasLeft,\n      scale = envComponents.scale,\n      isScaleReversed = dataset.config.isScaleReversed,\n      min = scale.config.axisRange.min,\n      max = scale.config.axisRange.max,\n      jsonData = iapi.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      trendArray = jsonData.trendpoints && jsonData.trendpoints.point,\n      showGaugeBorder = pluckNumber(chartAttrs.showgaugeborder, 1),\n      gaugeFillMix = getFirstDefinedValue(chartAttrs.colorrangefillmix, chartAttrs.gaugefillmix,\n        '{light-10},{dark-20},{light-50},{light-85}'),\n      gaugeFillRatio = getFirstDefinedValue(chartAttrs.colorrangefillratio, chartAttrs.gaugefillratio,\n        chartAttrs.gaugefillratio, '0,8,84,8'),\n      gaugeBorderColor = pluck(chartAttrs.colorrangebordercolor, chartAttrs.gaugebordercolor, '{dark-20}'),\n      gaugeBorderAlpha = pluckNumber(chartAttrs.colorrangeborderalpha, chartAttrs.gaugeborderalpha, 100),\n      gaugeBorderThickness = showGaugeBorder ? pluckNumber(chartAttrs.colorrangeborderthickness,\n        chartAttrs.gaugeborderthickness, 1) : 0,\n      gaugeType = 1,\n      colorArray = jsonData.colorrange && envComponents.colorRange && envComponents.colorRange.getColorRangeArr(min, max),\n      showShadow = pluckNumber(chartAttrs.showshadow, 1),\n      // shadow,\n      i,\n      y,\n      len,\n      marker,\n      orient,\n      canvas = iapi.getChildren('canvas')[0],\n      colorGrp = canvas.getGraphicalElement('linear'),\n      outerRect = canvas.getGraphicalElement('outerRect'),\n      getRectXY,\n      angle,\n      color,\n      colorObj,\n      borderColor,\n      xyObj,\n      trendPointConfig,\n      trendZoneElem,\n      trendZoneElems,\n      trendObjElem,\n      trendObjElems,\n      trendObj,\n      animationManager = envComponents.animationManager,\n      colorM = envComponents['color-manager'],\n      crColor,\n      crAlpha,\n      borderAlpha,\n      shadowAlpha,\n      startAngle,\n      colorRangeElem,\n      rangeWidth,\n      // duration = animationObj.duration,\n      // dummyObj = animationObj.dummyObj,\n      // animObj = animationObj.animObj,\n      pointOrientation = {\n        top: 1,\n        bottom: 3\n      },\n      attr,\n      trendZoneElemsCount = 0,\n      trendObjElemsCount = 0,\n      markerCount = 0;\n\n    animationManager.setAnimation({\n      el: canvasGroup,\n      state: 'initial',\n      attr: {\n        transform: ['T', canvasLeft, canvasTop]\n      },\n      component: dataset,\n      container: iapi.getContainer('parentgroup'),\n      label: 'parentgroup'\n    });\n\n    colorGrp = animationManager.setAnimation({\n      el: colorGrp || 'group',\n      attr: {name: 'colorrange'},\n      component: dataset,\n      container: canvasGroup,\n      label: 'background'\n    });\n    outerRect = animationManager.setAnimation({\n      el: outerRect || 'rect',\n      attr: {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        stroke: noneStr,\n        r: 0\n      },\n      component: dataset,\n      container: canvasGroup\n    });\n    if (!canvas.getGraphicalElement('linear')) {\n      colorGrp = canvas.addGraphicalElement('linear', colorGrp);\n      // draw the outer rectangle\n      canvas.addGraphicalElement('outerRect', outerRect);\n    }\n    if (gaugeType === 1) { // horizontal gauge; left to right;\n      getRectXY = function (minValue, maxValue) {\n        rangeWidth = (maxValue - minValue) * width / (max - min);\n        // If scale is reversed xPos of a color range will be shifted from canvas end\n        return {\n          x: isScaleReversed\n            ? width - rangeWidth - ((minValue * width / (max - min)))\n            : ((minValue * width / (max - min))),\n          y: 0,\n          width: rangeWidth,\n          height: height\n        };\n      };\n      angle = 270;\n    } else if (gaugeType === 2) { // vertical gauge; top to bottom;\n      getRectXY = function (minValue, maxValue) {\n        return {\n          x: 0,\n          y: (minValue * height / (max - min)),\n          width: width,\n          height: (maxValue - minValue) * height / (max - min)\n        };\n      };\n      angle = 180;\n    } else if (gaugeType === 3) { // horizontal linear gauge; right to left;\n      getRectXY = function (minValue, maxValue) {\n        return {\n          x: width - (maxValue * width / (max - min)),\n          y: 0,\n          width: (maxValue - minValue) * width / (max - min),\n          height: height\n        };\n      };\n      angle = 270;\n    } else { // vertical linear gauge; bottom to top;\n      getRectXY = function (minValue, maxValue) {\n        return {\n          x: 0,\n          y: height - (maxValue * height / (max - min)),\n          width: width,\n          height: (maxValue - minValue) * height / (max - min)\n        };\n      };\n      angle = 180;\n    }\n\n    // if (!graphics.colorRangeElems) {\n    //   graphics.colorRangeElems = [];\n    // }\n    for (i = 0, len = colorArray && colorArray.length; i < len; i += 1) {\n      colorObj = isScaleReversed ? colorArray[len - 1 - i] : colorArray[i];\n      xyObj = getRectXY((colorObj.minvalue - min), (colorObj.maxvalue - min));\n      colorObj.x = xyObj.x;\n      colorObj.y = xyObj.y;\n      colorObj.width = xyObj.width;\n      colorObj.height = xyObj.height;\n\n      color = colorObj.code;\n      borderColor = convertColor(getColorCodeString(pluck(colorObj.bordercolor, color), gaugeBorderColor),\n        pluckNumber(colorObj.borderalpha, gaugeBorderAlpha));\n\n      // shadow = showShadow ? (Math.max(colorObj.alpha, gaugeBorderAlpha) / 100) : null;\n\n      // create the shadow element\n      crColor = colorM.parseColorMix(colorObj.code, gaugeFillMix);\n      crAlpha = colorM.parseAlphaList(colorObj.alpha, crColor.length);\n      borderAlpha = pluckNumber(colorObj.borderAlpha, gaugeBorderAlpha);\n      shadowAlpha = crAlpha.split(COMMASTRING);\n\n      shadowAlpha = mathMax.apply(Math, shadowAlpha);\n      shadowAlpha = mathMax((gaugeBorderThickness && borderAlpha) || 0, shadowAlpha);\n\n      attr = {\n        x: xyObj.x,\n        y: xyObj.y,\n        width: xyObj.width,\n        height: xyObj.height,\n        r: 0,\n        'stroke-width': gaugeBorderThickness,\n        stroke: borderColor,\n        'fill': toRaphaelColor({\n          FCcolor: {\n            color: crColor.toString(),\n            ratio: gaugeFillRatio,\n            alpha: crAlpha,\n            angle: angle\n          }\n        })\n      };\n      colorRangeElem = canvas.getGraphicalElement('colorRangeElems') && canvas.getGraphicalElement('colorRangeElems')[i];\n      colorRangeElem = animationManager.setAnimation({\n        el: colorRangeElem || 'rect',\n        attr: attr,\n        component: dataset,\n        container: colorGrp\n      });\n      if (!(canvas.getGraphicalElement('colorRangeElems') && canvas.getGraphicalElement('colorRangeElems')[i])) {\n        colorRangeElem = canvas.addGraphicalElement('colorRangeElems', colorRangeElem, true, i);\n        colorRangeElem.shadow({\n          apply: showShadow,\n          opacity: (shadowAlpha / 100)\n        });\n      }\n      colorRangeElem.show();\n    }\n    if (!xyObj && canvas.getGraphicalElement('colorRangeElems') && canvas.getGraphicalElement('colorRangeElems').length > 0) {\n      xyObj =\n      canvas.getGraphicalElement('colorRangeElems')[canvas.getGraphicalElement('colorRangeElems').length - 1].attr();\n    }\n    if (canvas.getGraphicalElement('colorRangeElems')) {\n      while (canvas.getGraphicalElement('colorRangeElems')[i]) {\n        canvas.getGraphicalElement('colorRangeElems')[i].shadow(false);\n        canvas.getGraphicalElement('colorRangeElems')[i].hide();\n        i++;\n      }\n    }\n\n    if (trendArray) {\n      // iapi._configueTrendPoints ();\n      trendPointConfig = chartConfig.trendPointConfig;\n\n      // if (!graphics.trendObjElems) {\n      //   graphics.trendObjElems = [];\n      // }\n\n      // if (!graphics.trendZoneElems) {\n      //   graphics.trendZoneElems = [];\n      // }\n\n      // if (!graphics.marker) {\n      //   graphics.marker = [];\n      // }\n\n      for (i = 0, len = trendPointConfig.length; i < len; i += 1) {\n        trendObj = trendPointConfig[i];\n        xyObj = getRectXY((trendObj.startValue - min), (trendObj.endValue - min));\n\n        if (trendObj.isTrendZone) {\n          trendZoneElem = canvas.getGraphicalElement('trendZoneElems') && canvas.getGraphicalElement('trendZoneElems')[trendZoneElemsCount];\n          trendZoneElem = animationManager.setAnimation({\n            el: trendZoneElem || 'rect',\n            attr: {\n              x: xyObj.x,\n              y: xyObj.y,\n              width: xyObj.width > 0 ? xyObj.width : 0,\n              height: xyObj.height > 0 ? xyObj.height : 0,\n              r: 0,\n              'stroke-width': 0,\n              fill: toRaphaelColor({\n                FCcolor: {\n                  color: trendObj.color,\n                  alpha: trendObj.alpha\n                }\n              })\n            },\n            component: dataset,\n            container: colorGrp,\n            label: 'final'\n          });\n          if (!(canvas.getGraphicalElement('trendZoneElems') && canvas.getGraphicalElement('trendZoneElems')[trendZoneElemsCount])) {\n            trendZoneElem = canvas.addGraphicalElement('trendZoneElems', trendZoneElem, true, trendZoneElemsCount);\n          }\n          trendZoneElem.show();\n          toolTipController.enableToolTip(trendZoneElem, trendObj.tooltext);\n          trendZoneElemsCount++;\n        } else {\n          trendObjElem = canvas.getGraphicalElement('trendObjElems') && canvas.getGraphicalElement('trendObjElems')[trendObjElemsCount];\n          trendZoneElem = animationManager.setAnimation({\n            el: trendObjElem || 'path',\n            attr: {\n              stroke: convertColor(trendObj.color, trendObj.alpha),\n              'stroke-dasharray': trendObj.dashStyle,\n              'stroke-width': trendObj.thickness,\n              path: [M, xyObj.x, xyObj.y, L, xyObj.x, (xyObj.y + xyObj.height)]\n            },\n            component: dataset,\n            container: colorGrp,\n            label: 'final'\n          });\n          if (!trendObjElem) {\n            trendObjElem = canvas.addGraphicalElement('trendObjElems', trendZoneElem, true, trendObjElemsCount);\n          }\n          trendObjElem.show();\n          toolTipController.enableToolTip(trendObjElem, trendObj.tooltext);\n          trendObjElemsCount++;\n        }\n\n        if (trendObj.useMarker) {\n          if (trendObj.showOnTop) {\n            orient = POSITION_BOTTOM;\n            y = 0;\n          } else {\n            orient = POSITION_TOP;\n            y = height;\n          }\n          startAngle = pointOrientation[orient] * 90;\n\n          marker = canvas.getGraphicalElement('marker') && canvas.getGraphicalElement('marker')[markerCount];\n          marker = animationManager.setAnimation({\n            el: marker || 'polypath',\n            attr: {\n              fill: trendObj.markerColor,\n              stroke: trendObj.markerBorderColor,\n              polypath: [3, xyObj.x, y, trendObj.markerRadius, startAngle, 0],\n              'stroke-width': 1\n            },\n            component: dataset,\n            container: colorGrp,\n            label: 'final'\n          });\n          if (!(canvas.getGraphicalElement('marker') &&\n            canvas.getGraphicalElement('marker')[markerCount])) {\n            marker = canvas.addGraphicalElement('marker', marker, true, markerCount);\n            marker.shadow({\n              apply: showShadow\n            });\n          }\n          toolTipController.enableToolTip(marker, trendObj.tooltext);\n          marker.show();\n          markerCount++;\n        }\n      }\n    }\n\n    // Hiding the unused graphic trendpoint elements if it exists\n    trendObjElems = canvas.getGraphicalElement('trendObjElems');\n    if (trendObjElems) {\n      while (trendObjElems[trendObjElemsCount]) {\n        trendObjElems[trendObjElemsCount].hide();\n        trendObjElemsCount++;\n      }\n    }\n    trendZoneElems = canvas.getGraphicalElement('trendZoneElems');\n    if (trendZoneElems) {\n      while (trendZoneElems[trendZoneElemsCount]) {\n        trendZoneElems[trendZoneElemsCount].hide();\n        trendZoneElemsCount++;\n      }\n    }\n    marker = canvas.getGraphicalElement('marker');\n    if (marker) {\n      while (marker[markerCount]) {\n        marker[markerCount].hide();\n        marker[markerCount].shadow(false);\n        markerCount++;\n      }\n    }\n  }\n\n  /**\n   * Configure thr dataset\n   * @param {Object} pointerArrArg consists of pointers data\n   */\n  configureAttributes (pointerArrArg) {\n    this.trimData(pointerArrArg);\n    this.config.pointerArr = pointerArrArg;\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      jsonData = chart.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      colorM = dataSet.getFromEnv('color-manager'),\n      scale = dataSet.getFromEnv('scale'),\n      plottooltext = chartAttrs.plottooltext,\n      datasetConfig = dataSet.config || (dataSet.config = {}),\n      components = dataSet.components || (dataSet.components = {}),\n      pointerArr = jsonData.pointers && jsonData.pointers.pointer,\n      len = (pointerArr && pointerArr.length) || 0,\n      dataObj,\n      data,\n      config,\n      itemValue,\n      i,\n      setToolText,\n      formatedVal,\n      tooltipSepChar,\n      setDisplayValue,\n      sides,\n      dataStore,\n      pointOrientation = {\n        top: 1,\n        right: 0,\n        left: 2,\n        bottom: 3\n      },\n      gaugeType = 1,\n      orient,\n      pointerOnOpp,\n      borderColor,\n      borderAlpha,\n      bgAlpha,\n      valueAbovePointer,\n      bgColor,\n      baseStyle = chart.config.style,\n      radius,\n      pointerBorderColor,\n      pointerBorderHoverAlpha,\n      pointerBgHoverAlpha,\n      pointerBgHoverColor,\n      pointerBorderHoverColor,\n      pointerBorderHoverThickness,\n      pointerHoverRadius,\n      borderWidth,\n      showHoverEffect,\n      hoverAttr,\n      showBorderOnHover,\n      showHoverAnimation,\n      hasHoberFillMix,\n      outAttr,\n      hasBorderHoverMix,\n      hoverAnimAttr,\n      outAnimAttr,\n      showBorder,\n      fillColor,\n      ticksBelowGauge,\n      pointerSides,\n      chartShowHoverEffect,\n      pointerBorderThickness,\n      showValue,\n      label;\n\n    datasetConfig.isScaleReversed = scale.config.isReverse;\n    datasetConfig.valuePadding = pluckNumber(chartAttrs.valuepadding, 2);\n    datasetConfig.tooltipSepChar = tooltipSepChar = pluck(chartAttrs.tooltipsepchar, COMMASTRING);\n    ticksBelowGauge = pluckNumber(chartAttrs.ticksbelowgauge, chartAttrs.ticksbelowgraph, 1);\n    datasetConfig.axisPosition = ticksBelowGauge ? AXISPOSITION_BOTTOM : AXISPOSITION_TOP;\n    datasetConfig.pointerOnOpp = pointerOnOpp = Number(!pluckNumber(chartAttrs.pointerontop,\n      ticksBelowGauge, 1));\n    datasetConfig.valueabovepointer = valueAbovePointer = pluckNumber(chartAttrs.valueabovepointer,\n      !pointerOnOpp, 1);\n    datasetConfig.valueInsideGauge = valueAbovePointer === pointerOnOpp ? 1 : 0;\n    datasetConfig.showPointerShadow = pluckNumber(chartAttrs.showpointershadow, chartAttrs.showshadow, 1);\n    datasetConfig.showTooltip = pluckNumber(chartAttrs.showtooltip, 1);\n    datasetConfig.textDirection = chartAttrs.hasrtltext === '1' ? 'rtl' : BLANK;\n    datasetConfig.showGaugeLabels = pluckNumber(chartAttrs.showgaugelabels, 1);\n    datasetConfig.colorRangeStyle = {\n      fontFamily: baseStyle.inCanfontFamily,\n      fontSize: baseStyle.inCanfontSize,\n      lineHeight: baseStyle.inCanLineHeight,\n      color: baseStyle.inCancolor.replace(/^#?/, '#')\n    };\n    datasetConfig.showTextOutline = pluckNumber(chartAttrs.textoutline, 0);\n    datasetConfig.showValue = pluckNumber(chartAttrs.showvalue, 1);\n    datasetConfig.editMode = pluckNumber(chartAttrs.editmode, 0);\n    datasetConfig.pointerSides = pointerSides = pluckNumber(chartAttrs.pointersides, 3);\n    datasetConfig.pointerBorderThickness = pointerBorderThickness =\n                pluckNumber(chartAttrs.pointerborderthickness);\n    datasetConfig.showHoverEffect = chartShowHoverEffect = pluckNumber(chartAttrs.showhovereffect,\n      chartAttrs.plothovereffect);\n    datasetConfig.upperLimit = pluckNumber(chartAttrs.upperlimit);\n    datasetConfig.lowerLimit = pluckNumber(chartAttrs.lowerlimit);\n\n    if (gaugeType === 1) { // horizontal gauge; left to right;\n      orient = (pointerOnOpp) ? POSITION_TOP : POSITION_BOTTOM;\n    } else if (gaugeType === 2) { // vertical gauge; top to bottom;\n      orient = pointerOnOpp ? 'left' : 'right';\n    } else if (gaugeType === 3) { // horizontal linear gauge; right to left;\n      orient = (pointerOnOpp) ? POSITION_TOP : POSITION_BOTTOM;\n    } else { // vertical linear gauge; bottom to top;\n      orient = pointerOnOpp ? 'left' : 'right';\n    }\n\n    datasetConfig.startAngle = pointOrientation[orient] * 90;\n    dataStore = components.data || (components.data = []);\n\n    for (i = 0; i < len; i++) {\n      data = dataStore[i] || (components.data[i] = {});\n      config = data.config || (data.config = {});\n      dataObj = (pointerArr && pointerArr[i]) || {};\n      config.value = dataObj.value;\n      config.itemValue = itemValue = numberFormatter.getCleanValue(dataObj.value);\n      config.formatedVal = formatedVal = numberFormatter.dataLabels(itemValue);\n      config.setDisplayValue = setDisplayValue = getValidValue(parseUnsafeString(dataObj.displayvalue));\n      config.setToolText = setToolText = getValidValue(parseUnsafeString(pluck(dataObj.tooltext, plottooltext), false));\n      config.id = pluck(dataObj.id, 'pointer_' + i);\n      config.showHoverEffect = showHoverEffect =\n                    pluckNumber(dataObj.showhovereffect, chartShowHoverEffect);\n      config.showBorder = showBorder = pluckNumber(dataObj.showborder, chartAttrs.showplotborder, 1);\n      config.borderWidth = borderWidth = showBorder ? pluckNumber(dataObj.borderthickness,\n        pointerBorderThickness) : 0;\n      config.showValue = showValue = pluckNumber(dataObj.showvalue, datasetConfig.showValue);\n\n      config.dataLabelStyle = dataSet._configureDataLabelStyle(dataObj, jsonData.pointers);\n\n      // create the displayvalue\n      if (!showValue) {\n        config.displayValue = BLANKSTRING;\n      } else if (setDisplayValue !== UNDEF) {\n        config.displayValue = setDisplayValue;\n        config.isLabelString = true;\n      } else { // determine the dispalay value then\n        config.displayValue = getValidValue(formatedVal, BLANK);\n      }\n\n      config.sides = sides = pluckNumber(dataObj.sides, pointerSides);\n      if (sides < 3) {\n        config.sides = 3;\n      }\n      config.radius = radius = pluckNumber(dataObj.radius, chartAttrs.pointerradius, 10);\n\n      // create the tooltext\n      if (setToolText !== UNDEF) {\n        config.toolText = parseTooltext(setToolText, [1, 2], {\n          formattedValue: formatedVal\n        }, dataObj, chartAttrs);\n        config.isTooltextString = true;\n      } else { // determine the dispalay value then\n        config.toolText = formatedVal === null ? false\n          : (label !== UNDEF) ? label + tooltipSepChar + formatedVal : formatedVal;\n      }\n\n      // Latter used in real time draw\n      config.tempToolText = config.toolText;\n\n      config.bgAlpha = bgAlpha = pluckNumber(dataObj.alpha, dataObj.bgalpha, chartAttrs.pointerbgalpha,\n        100);\n      config.bgColor = bgColor = pluck(dataObj.color, dataObj.bgcolor, chartAttrs.pointerbgcolor,\n        chartAttrs.pointercolor, colorM.getColor('pointerBgColor'));\n      config.fillColor = fillColor = convertColor(bgColor, bgAlpha);\n      config.showBorder = pluckNumber(dataObj.showborder, chartAttrs.showplotborder, 1);\n      config.borderAlpha = borderAlpha = pluckNumber(dataObj.borderalpha, chartAttrs.pointerborderalpha,\n        100);\n      config.borderColor = borderColor = pluck(dataObj.bordercolor, chartAttrs.pointerbordercolor,\n        colorM.getColor('pointerBorderColor'));\n      config.pointerBorderColor = pointerBorderColor = convertColor(borderColor, borderAlpha);\n      config.dataLink = getValidValue(dataObj.link);\n      config.editMode = pluckNumber(dataObj.editmode, datasetConfig.editMode);\n\n      if (showHoverEffect !== 0 && (showHoverEffect || dataObj.bghovercolor ||\n                    chartAttrs.pointerbghovercolor || chartAttrs.plotfillhovercolor ||\n                    dataObj.bghoveralpha || chartAttrs.pointerbghoveralpha || chartAttrs.plotfillhoveralpha ||\n                    dataObj.bghoveralpha === 0 || chartAttrs.pointerbghoveralpha === 0 ||\n                    dataObj.showborderonhover || chartAttrs.showborderonhover ||\n                    dataObj.showborderonhover === 0 || chartAttrs.showborderonhover === 0 ||\n                    dataObj.borderhoverthickness || chartAttrs.pointerborderhoverthickness ||\n                    dataObj.borderhoverthickness === 0 || chartAttrs.pointerborderhoverthickness === 0 ||\n                    dataObj.borderhovercolor || chartAttrs.pointerborderhovercolor ||\n                    dataObj.borderhoveralpha || chartAttrs.pointerborderhoveralpha ||\n                    dataObj.borderhoveralpha === 0 || chartAttrs.pointerborderhoveralpha === 0 ||\n                    dataObj.hoverradius || chartAttrs.pointerhoverradius || dataObj.hoverradius === 0 ||\n                    chartAttrs.pointerhoverradius === 0)) {\n        showHoverEffect = true;\n        pointerBgHoverColor = pluck(dataObj.bghovercolor, chartAttrs.pointerbghovercolor,\n          chartAttrs.plotfillhovercolor, FILLMIXDARK10);\n        pointerBgHoverAlpha = pluckNumber(dataObj.bghoveralpha,\n          chartAttrs.pointerbghoveralpha, chartAttrs.plotfillhoveralpha);\n        showBorderOnHover = pluckNumber(dataObj.showborderonhover, chartAttrs.showborderonhover);\n        if (showBorderOnHover === UNDEF) {\n          if (dataObj.borderhoverthickness || dataObj.borderhoverthickness === 0 ||\n                                dataObj.borderhovercolor || dataObj.borderhoveralpha ||\n                                dataObj.borderhoveralpha === 0) {\n            showBorderOnHover = 1;\n          } else {\n            showBorderOnHover = showBorder;\n          }\n        }\n        pointerBorderHoverColor = pluck(dataObj.borderhovercolor, chartAttrs.pointerborderhovercolor,\n          FILLMIXDARK10);\n        pointerBorderHoverAlpha = pluckNumber(dataObj.borderhoveralpha,\n          chartAttrs.pointerborderhoveralpha);\n        pointerBorderHoverThickness = showBorderOnHover ? pluckNumber(dataObj.borderhoverthickness,\n          chartAttrs.pointerborderhoverthickness, borderWidth || 1) : 0;\n        pointerHoverRadius = pluckNumber(dataObj.hoverradius, chartAttrs.pointerhoverradius,\n          radius + 2);\n        showHoverAnimation = !!pluckNumber(dataObj.showhoveranimation, chartAttrs.showhoveranimation,\n          1);\n        config.hoverAttr = hoverAttr = {};\n        config.outAttr = outAttr = {};\n        if (borderWidth !== pointerBorderHoverThickness) {\n          hoverAttr['stroke-width'] = pointerBorderHoverThickness;\n          outAttr['stroke-width'] = borderWidth;\n        }\n        outAttr.fill = fillColor;\n        hasHoberFillMix = /\\{/.test(pointerBgHoverColor);\n        pointerBgHoverColor = hasHoberFillMix ? colorM.parseColorMix(bgColor,\n          pointerBgHoverColor)[0] : pointerBgHoverColor;\n        hoverAttr.fill = convertColor(pointerBgHoverColor, pluckNumber(pointerBgHoverAlpha, bgAlpha));\n        if (pointerBorderHoverThickness) {\n          outAttr.stroke = pointerBorderColor;\n          hasBorderHoverMix = /\\{/.test(pointerBorderHoverColor);\n          hoverAttr.stroke = convertColor(hasBorderHoverMix ? colorM.parseColorMix(borderColor,\n            pointerBorderHoverColor)[0] : pointerBorderHoverColor,\n          pluckNumber(pointerBorderHoverAlpha, borderAlpha));\n        }\n\n        if (pointerHoverRadius) {\n          if (showHoverAnimation) {\n            hoverAnimAttr = {\n              r: pointerHoverRadius\n            };\n            outAnimAttr = {\n              r: radius\n            };\n          } else {\n            hoverAttr.r = pointerHoverRadius;\n            outAttr.r = radius;\n          }\n        }\n      }\n      config.rolloverProperties = {\n        enabled: showHoverEffect,\n        hoverAttr: hoverAttr,\n        hoverAnimAttr: hoverAnimAttr,\n        outAttr: outAttr,\n        outAnimAttr: outAnimAttr\n      };\n    }\n  }\n\n  /**\n   * Trim the extra data during update\n   * @param {Object} pointers consists of new pointers data\n   */\n  trimData (pointers) {\n    var dataSet = this,\n      prevPointers,\n      currPointers;\n\n    prevPointers = dataSet.config.pointerArr &&\n                    dataSet.config.pointerArr.pointer && dataSet.config.pointerArr.pointer.length;\n    currPointers = (pointers && pointers.pointer && pointers.pointer.length) || 0;\n\n    if (prevPointers > currPointers) {\n      dataSet.removeData(prevPointers - currPointers);\n    }\n  }\n\n  /**\n   * Manage space for pointer values\n   * @param {number} availableHeight height which can be used\n   * @return {Object} returns dimension used (top, bottom)\n   */\n  _manageSpace (availableHeight) {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      components = dataSet.components,\n      chartConfig = chart.config,\n      datasetConfig = dataSet.config,\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      canvasWidth = chartConfig.canvasWidth,\n      smartDataLabel, extraSpace,\n      style = chartConfig.dataLabelStyle,\n      trendStyle = chartConfig.style.trendStyle,\n      jsonData = chart.getFromEnv('dataSource'),\n      trendArray = jsonData.trendpoints && jsonData.trendpoints.point,\n      lineHeight = pluckNumber(parseInt(style.lineHeight, 10), 12),\n      maxAllowedHeight = availableHeight,\n      datasetValuePadding = datasetConfig.valuePadding,\n      valueInsideGauge = datasetConfig.valueInsideGauge,\n      valuePaddingWithRadius,\n      heightUsed = 0,\n      heightUsedBottom = 0,\n      heightUsedTop = 0,\n      valuePadding = 0,\n      trendPadding = 0,\n      heightReducedBottom = 0,\n      heightReducedTop = 0,\n      trendPointConfig,\n      point,\n      trendPaddingWithRadius,\n      tickDimension = dataSet.getFromEnv('scale').config.spaceTaken,\n      i = 0,\n      len = dataSet.config.pointerArr && dataSet.config.pointerArr.pointer && dataSet.config.pointerArr.pointer.length,\n      pointerOnOpp = datasetConfig.pointerOnOpp,\n      config,\n      data = components.data;\n\n    trendArray && chart._configueTrendPoints();\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    smartLabel.setStyle(style);\n    for (; i < len; i += 1) {\n      config = data[i].config;\n      // Add pointer radius in value-padding\n      valuePaddingWithRadius = datasetValuePadding + config.radius *\n                (config.sides <= 3 ? 0.5 : (config.sides % 2 ? 1.1 - (1 / config.sides) : 1));\n      valuePadding = Math.max(valuePadding, valuePaddingWithRadius);\n\n      if (config.showValue && config.displayValue !== BLANKSTRING) {\n        if (config.isLabelString) {\n          smartDataLabel = smartLabel.getSmartText(config.displayValue, canvasWidth,\n            maxAllowedHeight - valuePadding);\n          config.displayValue = smartDataLabel.text;\n          smartDataLabel.tooltext && (config.originalText = smartDataLabel.tooltext);\n        } else {\n          smartDataLabel = smartLabel.getOriSize(config.displayValue);\n        }\n        // special fix for space string\n        /** @todo will be removed when smartLabel will be able to handle it */\n        if (config.displayValue === BLANK) {\n          smartDataLabel = {\n            height: lineHeight\n          };\n        }\n      }\n\n      if (smartDataLabel && smartDataLabel.height > 0 && !valueInsideGauge) {\n        heightUsed = smartDataLabel.height + valuePaddingWithRadius;\n      } else {\n        heightUsed = valuePaddingWithRadius;\n      }\n      if (heightUsed > maxAllowedHeight) {\n        extraSpace = heightUsed - maxAllowedHeight;\n        valuePaddingWithRadius = extraSpace < valuePaddingWithRadius\n          ? valuePaddingWithRadius - extraSpace : 0;\n        heightUsed = maxAllowedHeight;\n      }\n      if (pointerOnOpp) {\n        if (datasetConfig.axisPosition === AXISPOSITION_BOTTOM) {\n          heightReducedBottom = Math.max(tickDimension.bottom, heightReducedBottom);\n          heightUsed = Math.max(tickDimension.bottom, heightUsed);\n        }\n\n        heightUsedBottom = Math.max(heightUsedBottom, heightUsed);\n      } else {\n        if (datasetConfig.axisPosition === AXISPOSITION_TOP) {\n          heightReducedTop = Math.max(tickDimension.top, heightReducedTop);\n          heightUsed = Math.max(tickDimension.top, heightUsed);\n        }\n\n        heightUsedTop = Math.max(heightUsed, heightUsedTop);\n      }\n      datasetConfig.align = POSITION_CENTER;\n    }\n    datasetConfig.currentValuePadding = valuePadding;\n\n    smartLabel.setStyle(trendStyle);\n    if (trendArray) {\n      trendPointConfig = chartConfig.trendPointConfig;\n      for (i = 0, len = trendPointConfig.length; i < len; i += 1) {\n        point = trendPointConfig[i];\n        if (point && point.displayValue !== BLANKSTRING) {\n          // Add pointer radius in value-padding\n          trendPaddingWithRadius = datasetValuePadding + point.markerRadius * 0.5;\n\n          trendPadding = Math.max(trendPaddingWithRadius, trendPadding);\n\n          smartDataLabel = smartLabel.getOriSize(point.displayValue);\n\n          if (smartDataLabel.height > 0) {\n            heightUsed = smartDataLabel.height + trendPaddingWithRadius;\n          }\n          if (heightUsed > maxAllowedHeight) {\n            extraSpace = heightUsed - maxAllowedHeight;\n            trendPaddingWithRadius = extraSpace < trendPaddingWithRadius\n              ? trendPaddingWithRadius - extraSpace : 0;\n            heightUsed = maxAllowedHeight;\n          }\n          if (point.showOnTop) {\n            if (datasetConfig.axisPosition === AXISPOSITION_TOP) {\n              heightReducedTop = Math.max(tickDimension.top, heightReducedTop);\n              heightUsed = Math.max(tickDimension.top, heightUsed);\n            }\n\n            heightUsedTop = Math.max(heightUsedTop, heightUsed);\n          } else {\n            if (datasetConfig.axisPosition === AXISPOSITION_BOTTOM) {\n              heightReducedBottom = Math.max(tickDimension.bottom, heightReducedBottom);\n              heightUsed = Math.max(tickDimension.bottom, heightUsed);\n            }\n\n            heightUsedBottom = Math.max(heightUsed, heightUsedBottom);\n          }\n        }\n      }\n      datasetConfig.currentTrendPadding = trendPadding;\n    }\n\n    return {\n      top: heightUsedTop - heightReducedTop,\n      bottom: heightUsedBottom - heightReducedBottom\n    };\n  }\n\n  /**\n   * Draws the pointer plots\n   * @param {Object} animation animation object to check whether to animate\n   * @param {boolean} isRTupdate check whether it is real time update or general update\n   */\n  draw (animation, isRTupdate) {\n    var dataSet = this,\n      idMap = dataSet.config.idMap,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      // chartGraphics = chart.graphics,\n      dataLabelsGroup = chart.getChildContainer('datalabelsGroup'),\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      wGroup = dataSet.getGraphicalElement('tempGroup'),\n      scale = dataSet.getFromEnv('scale'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      chartData = dataSet.config.pointerArr && dataSet.config.pointerArr.pointer,\n      width = chartConfig.canvasWidth,\n      // pointer = chartGraphics.pointer,\n      height = chartConfig.canvasHeight,\n      datasetConfig = dataSet.config,\n      isScaleReversed = datasetConfig.isScaleReversed,\n      NumberFormatter = dataSet.getFromEnv('number-formatter'),\n      itemValue,\n      pointerY = (datasetConfig.pointerOnOpp ? height : 0),\n      showPointerShadow = datasetConfig.showPointerShadow,\n      showTooltip = datasetConfig.showTooltip,\n      min = scale.config.axisRange.min,\n      max = scale.config.axisRange.max,\n      pxValueFactor = (max - min) / width,\n      i = (chartData && chartData.length) || 0,\n      config,\n      prevData,\n      shadowObj,\n      startAngle,\n      components = dataSet.components,\n      data = components.data,\n      // animObj = animationObj.animObj,\n      // dummyObj = animationObj.dummyObj,\n      // animationDuration = (animation || animationObj).duration,\n      stubEvent = {\n        pageX: 0,\n        pageY: 0\n      },\n      pointerDragStart = function (e) {\n        var point = this,\n          x = e.data[0];\n        if (point.editMode === false) {\n          return;\n        }\n\n        prevData = chart._getDataJSON();\n        point.dragStartX = x;\n      },\n      pointerDragEnd = function () {\n        var point = this,\n          conf = point.config,\n          jsVars,\n          chartObj = chart.getFromEnv('chartInstance');\n\n        if (point.config.editMode === false) {\n          return;\n        }\n\n        jsVars = chartObj && chartObj.jsVars;\n        jsVars && (jsVars._rtLastUpdatedData = chart._getDataJSON());\n\n        chart.fireChartInstanceEvent('RealTimeUpdateComplete', {\n          data: '&value=' + conf.updatedValStr,\n          updateObject: {values: [conf.updatedValStr]},\n          prevData: prevData.values,\n          source: 'editMode',\n          url: null\n        });\n\n        try {\n          win.FC_ChartUpdated && win.FC_ChartUpdated(chartObj.id);\n        } catch (err) {\n          setTimeout(function () {\n            throw (err);\n          }, 1);\n        }\n\n        if (datasetConfig.showTooltip) {\n          toolTipController.enableToolTip(pointer, conf.toolText);\n        } else {\n          toolTipController.disableToolTip(pointer);\n        }\n      },\n      pointerOnDrag = function (event) {\n        var point = this,\n          evtData = event.data,\n          x = evtData[2],\n          touchEvent = (hasTouch && getTouchEvent(event)) || stubEvent,\n          scaleMinMax = scale.getLimit(),\n          scaleMin = scaleMinMax.min,\n          scaleMax = scaleMinMax.max,\n          pointVal = pluckNumber(point.itemValue, scaleMin),\n          diffX = isScaleReversed ? x - point.dragStartX : point.dragStartX - x,\n          newVal = pointVal - (diffX * pxValueFactor),\n          ii = 0,\n          values = [],\n          tempValues = [];\n\n        if (point.editMode === false) {\n          return;\n        }\n\n        // Flag set for setting click link in edit mode.\n        point.drag = true;\n\n        if (newVal < scaleMin) {\n          newVal = scaleMin;\n        } else if (newVal > scaleMax) {\n          newVal = scaleMax;\n        }\n\n        for (;ii < point.index; ii += 1) {\n          values.push(BLANK);\n          tempValues.push(BLANK);\n        }\n        values.push({ value: newVal });\n        tempValues.push(newVal);\n\n        if (pointVal !== newVal && dataSet.updateData({data: values}, {duration: 0})) {\n          point.updatedValStr = tempValues.join('|');\n          point.dragStartX = (x || event.pageX || touchEvent.pageX);\n        }\n      },\n      pointer,\n      graphics,\n      link,\n      rolloverProperties,\n      eventArgs,\n      clickHandler,\n      hoverRollOver,\n      hoverRollOut;\n\n    if (animation && animation.duration === 0) {\n      chart.state = NO_ANIM;\n    }\n    if (!wGroup) {\n      wGroup = dataSet.addGraphicalElement('tempGroup', animationManager.setAnimation({\n        el: 'group',\n        state: chart.state,\n        attr: {\n          opacity: 1,\n          name: 'tempGroup'\n        },\n        container: dataLabelsGroup,\n        component: dataSet\n      }));\n    }\n\n    clickHandler = function (graphicData) {\n      var ele = this,\n        index = ele.data(EVENTARGS).index,\n        conf = data[index].config;\n\n      if (conf.drag === true) {\n        conf.drag = false;\n        return;\n      }\n\n      chart.plotEventHandler(ele, graphicData);\n    };\n\n    hoverRollOver = function (dataParam) {\n      var ele = this,\n        rolloverProps = ele.data('rolloverProperties');\n      if (rolloverProps.enabled) {\n        ele.attr(rolloverProps.hoverAttr);\n        if (rolloverProps.hoverAnimAttr) {\n          ele.animate(rolloverProps.hoverAnimAttr, 100, ANIM_EFFECT);\n        }\n      }\n      chart.plotEventHandler(ele, dataParam, ROLLOVER);\n    };\n\n    hoverRollOut = function (dataParam) {\n      var ele = this,\n        rolloverProps = ele.data('rolloverProperties');\n      if (rolloverProps.enabled) {\n        ele.attr(rolloverProps.outAttr);\n        if (rolloverProps.outAnimAttr) {\n          ele.animate(rolloverProps.outAnimAttr, 100, ANIM_EFFECT);\n        }\n      }\n      chart.plotEventHandler(ele, dataParam, ROLLOUT);\n    };\n    while (i--) {\n      if (!data[i]) {\n        continue;\n      }\n      config = data[i].config;\n      itemValue = NumberFormatter.getCleanValue(config.value);\n      // Set precision for handling decimal upto 10 place.\n      itemValue = Number(toPrecision(itemValue, 10));\n      config.itemValue = itemValue;\n      graphics = data[i].graphics || (data[i].graphics = {});\n      rolloverProperties = config.rolloverProperties || {};\n      startAngle = datasetConfig.startAngle;\n      idMap[config.id] = {\n        index: i,\n        config: config\n      };\n      /**\n       * @note\n       * The slight increment in starting angle is done to avoid getting\n       * angles in multiples of 90 degree (default starting angle is 270).\n       * Issue is like, cos(270 deg) is not zero but in the range of e-16,\n       * when VML silently fails to render.\n       */\n      startAngle += 0.2;\n\n      shadowObj = showPointerShadow ? {\n        opacity: (Math.max(config.bgAlpha, config.borderAlpha) / 100)\n      } : false;\n\n      link = config.dataLink;\n      eventArgs = {\n        index: i,\n        link: link,\n        value: config.itemValue,\n        displayValue: config.displayValue,\n        toolText: config.toolText,\n        bgAlpha: config.bgAlpha,\n        borderAlpha: config.borderAlpha,\n        borderColor: config.borderColor,\n        borderThickness: config.borderWidth,\n        color: config.bgColor,\n        editMode: config.editMode,\n        id: config.id,\n        radius: config.radius,\n        showValue: config.showValue,\n        sides: config.sides\n      };\n      pointer = graphics.pointer;\n      pointer = animationManager.setAnimation({\n        el: pointer || 'polypath',\n        attr: {\n          polypath: [\n            config.sides,\n            isScaleReversed\n              // if scale is reversed pointer's xPos will be shifted from canvas end\n              ? width - (width * (pluckNumber(config.itemValue, min) - min) / (max - min))\n              : width * (pluckNumber(config.itemValue, min) - min) / (max - min),\n            (pointerY || 0),\n            config.radius,\n            startAngle,\n            0\n          ],\n          r: config.radius,\n          fill: config.fillColor,\n          stroke: config.pointerBorderColor,\n          'stroke-width': config.borderWidth\n        },\n        css: (link || config.editMode) ? {\n          cursor: POINTER,\n          '_cursor': 'hand'\n        } : {\n          cursor: BLANK,\n          '_cursor': BLANK\n        },\n        label: 'pointers',\n        container: wGroup,\n        component: dataSet\n      }).show();\n      if (!graphics.pointer) {\n        graphics.pointer = pointer\n          .on('fc-click', clickHandler)\n          .shadow(!!shadowObj, shadowObj && shadowObj.opacity)\n          .hover(hoverRollOver, hoverRollOut);\n        pointer.show();\n      }\n\n      if (!isRTupdate) {\n        pointer\n          .data(EVENTARGS, eventArgs)\n          .data('rolloverProperties', rolloverProperties);\n        config._startAngle = startAngle;\n\n        if (config.editMode) {\n          config.index = i;\n          config.editMode = true;\n        } else {\n          config.editMode = false;\n        }\n        pointer.undrag();\n        config.editMode &&\n          pointer.drag(pointerOnDrag, pointerDragStart, pointerDragEnd, config, config, data[i]);\n      }\n      if (showTooltip) {\n        toolTipController.enableToolTip(pointer, config.toolText);\n      } else {\n        toolTipController.disableToolTip(pointer);\n      }\n    }\n    dataSet._drawBackground();\n    isRTupdate ? dataSet.drawPointerValues(animation) : dataSet._drawWidgetLabel(animation);\n  }\n\n  /**\n   * Alters the data of the dataset and stores the data to be removed in a different array\n   * @param {number} numbers number of data to be removed\n   */\n  removeData (numbers) {\n    var dataSet = this,\n      data = dataSet.components.data,\n      graphics,\n      dataObj,\n      callbackFN = function () {\n        this.hide();\n      };\n\n    dataSet.removeDataArr || (dataSet.removeDataArr = []);\n    for (let i = 0; i < numbers; i++) {\n      dataObj = data[i];\n      if (!dataObj) {\n        continue;\n      }\n      graphics = dataObj.graphics;\n      graphics.pointer && dataSet.getFromEnv('animationManager').setAnimation({\n        el: graphics.pointer,\n        callback: callbackFN,\n        component: dataSet\n      });\n      graphics.pointerValue && dataSet.getFromEnv('animationManager').setAnimation({\n        el: graphics.pointerValue,\n        callback: callbackFN,\n        component: dataSet\n      });\n      graphics.pointerValueCont && dataSet.getFromEnv('animationManager').setAnimation({\n        el: graphics.pointerValueCont,\n        callback: callbackFN,\n        component: dataSet\n      });\n    }\n    dataSet.removeDataArr = dataSet.removeDataArr.concat(data.splice(0, numbers));\n  }\n\n  /**\n   * draws Widget background(color range) values, trend point values and calls drawPointerValues\n   * @param {Object} animation animation object to check whether to animate\n   */\n  _drawWidgetLabel (animation) {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      chartConfig = chart.config,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      scale = dataSet.getFromEnv('scale'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      canvas = chart.getChildren('canvas')[0],\n      dataLabelsGroup = chart.getChildContainer('datalabelsGroup'),\n      dataLabelContainer = canvas.getGraphicalElement('dataLabelContainer'),\n      min = scale.config.axisRange.min,\n      max = scale.config.axisRange.max,\n      datasetConfig = dataSet.config,\n      textDirection = datasetConfig.textDirection,\n      gaugeType = 1, // series.gaugeType,\n      colorRange = dataSet.getFromEnv('colorRange'),\n      jsonData = chart.getFromEnv('dataSource'),\n      colorArr = jsonData.colorrange && colorRange && colorRange.getColorRangeArr(min, max),\n      colorRangeStyle = datasetConfig.colorRangeStyle || {},\n      showvalue = datasetConfig.showvalue,\n      colorObj,\n      trendArr = chart.getFromEnv('dataSource').trendpoints && chart.getFromEnv('dataSource').trendpoints.point,\n      trendPointConfig = chartConfig.trendPointConfig,\n      width = chartConfig.canvasWidth,\n      height = chartConfig.canvasHeight,\n      marginRight = chartConfig.marginRight,\n      pointerOnOpp = datasetConfig.pointerOnOpp,\n      valueInsideGauge = datasetConfig.valueInsideGauge,\n      showGaugeLabels = datasetConfig.showGaugeLabels,\n      isScaleReversed = datasetConfig.isScaleReversed,\n      style = chartConfig.dataLabelStyle,\n      rangeWidth,\n      // animObj = animationObj.animObj,\n      // dummyObj = animationObj.dummyObj,\n      // animationDuration = animationObj.duration,\n      colorArrLabel,\n      maxWidth,\n      truncatedWidth,\n      i,\n      length,\n      getPointerLabelXY,\n      getColorLabelXY,\n      labelXY,\n      nextPointer,\n      nextOriText,\n      nextSmartText,\n      nextXY,\n      labelGap,\n      isSameLevel = false,\n      j,\n      labelX,\n      labelY,\n      smartLabel = dataSet.getFromEnv('smartLabel'), smartText, testStrObj, minWidth, // labelX, labelY,\n      lineHeight = pluckNumber(parseInt(style.fontHeight, 10), parseInt(style.lineHeight, 10), 12),\n      labelPadding = (datasetConfig.currentValuePadding + (lineHeight * 0.5)), hPad = 4,\n      innerLabelPadding = 4,\n      oppTrendLabelPadding = (datasetConfig.currentTrendPadding + (lineHeight * 0.5)),\n      tempx,\n      attr,\n      trendObj,\n      trendLabelPadding = datasetConfig.currentTrendPadding,\n      css = {\n        fontFamily: style.fontFamily,\n        fontSize: style.fontSize,\n        lineHeight: style.lineHeight,\n        fontWeight: style.fontWeight,\n        fontStyle: style.fontStyle\n      },\n      dataArr = dataSet.config.pointerArr && dataSet.config.pointerArr.pointer,\n      config,\n      components = dataSet.components,\n      data = components.data,\n      value,\n      valueCont,\n      trendTextElem;\n\n    dataLabelContainer = animationManager.setAnimation({\n      el: dataLabelContainer || 'group',\n      attr: {\n        name: 'label-container'\n      },\n      container: dataLabelsGroup,\n      component: dataSet\n    });\n    dataLabelsGroup = animationManager.setAnimation({\n      el: dataLabelsGroup || 'group',\n      state: 'initial',\n      attr: {\n        transform: ['T', chartConfig.canvasLeft, chartConfig.canvasTop]\n      },\n      label: 'datalabel',\n      component: dataSet\n    });\n\n    !canvas.getGraphicalElement('dataLabelContainer') &&\n      (dataLabelContainer = canvas.addGraphicalElement('dataLabelContainer', dataLabelContainer));\n\n    // tempLabelPadding = labelPadding - (lineHeight / 4);\n    // if label is below the pointer then we need to add extra pdding to compensate for lineheight.\n    labelPadding = (valueInsideGauge === pointerOnOpp) ? labelPadding - (lineHeight / 4)\n      : labelPadding + (lineHeight / 4);\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    smartLabel.setStyle(css);\n    testStrObj = smartLabel.getOriSize('W...');\n    minWidth = testStrObj.width;\n    colorRangeStyle.fontWeight = NORMAL;\n\n    if (gaugeType === 1) { // horizontal gauge; left to right;\n      getPointerLabelXY = dataSet.getPointerLabelXY =\n        function (val, isInside, pointerOnOpposite, xsHeight, xsWidth) {\n          var y;\n\n          if (pointerOnOpposite) {\n            y = isInside ? (height - xsHeight - labelPadding) : (height + labelPadding);\n          } else {\n            y = isInside ? labelPadding : -(labelPadding + xsHeight);\n          }\n\n          tempx = (val - min) * width / (max - min);\n          (tempx + xsWidth > width + marginRight) && (tempx = width - xsWidth + marginRight);\n\n          return {\n            x: tempx,\n            y: y,\n            align: POSITION_MIDDLE\n          };\n        };\n\n      getColorLabelXY = function (minvalue, maxvalue) {\n        rangeWidth = (maxvalue - minvalue) * width / (max - min);\n        // If scale is reversed xPos of label will be shifted from canvas end\n        return {\n          x: (isScaleReversed\n            ? width - rangeWidth - ((minvalue * width / (max - min)))\n            : ((minvalue * width / (max - min)))) + rangeWidth / 2,\n          y: (height / 2),\n          width: (maxvalue - minvalue) * width / (max - min),\n          height: height\n        };\n      };\n    } else if (gaugeType === 2) { // vertical gauge; top to bottom;\n      getPointerLabelXY = dataSet.getPointerLabelXY = function (val, isInside, pointerOnOpposite) {\n        var x, align;\n        if (pointerOnOpposite) {\n          if (isInside) {\n            align = POSITION_RIGHT;\n            x = width - labelPadding;\n          } else {\n            align = POSITION_LEFT;\n            x = width + labelPadding;\n          }\n        } else {\n          if (isInside) {\n            align = POSITION_LEFT;\n            x = labelPadding;\n          } else {\n            align = POSITION_RIGHT;\n            x = -labelPadding;\n          }\n        }\n        return {\n          x: x,\n          y: (val * height / (max - min)),\n          align: align\n        };\n      };\n\n      getColorLabelXY = function (minvalue, maxvalue) {\n        return {\n          y: (((minvalue - min) + (maxvalue - minvalue) / 2) * height / (max - min)),\n          x: (width / 2),\n          height: (maxvalue - minvalue) * height / (max - min),\n          width: width\n        };\n      };\n    } else if (gaugeType === 3) { // horizontal linear gauge; right to left;\n      getPointerLabelXY = dataSet.getPointerLabelXY = function (val, isInside, pointerOnOpposite) {\n        var y;\n        if (pointerOnOpposite) {\n          y = isInside ? height - labelPadding : height + labelPadding;\n        } else {\n          y = isInside ? labelPadding : -labelPadding;\n        }\n        return {\n          x: width - ((val - min) * width / (max - min)),\n          y: y,\n          align: POSITION_MIDDLE\n        };\n      };\n\n      getColorLabelXY = function (minvalue, maxvalue) {\n        return {\n          x: width - (((minvalue - min) + (maxvalue - minvalue) / 2) * width / (max - min)),\n          y: (height / 2),\n          width: (maxvalue - minvalue) * width / (max - min),\n          height: height\n        };\n      };\n    } else { // vertical linear gauge; bottom to top;\n      getPointerLabelXY = dataSet.getPointerLabelXY = function (val, isInside, pointerOnOpposite) {\n        var x, align;\n        if (pointerOnOpposite) {\n          if (isInside) {\n            align = POSITION_RIGHT;\n            x = width - labelPadding;\n          } else {\n            align = POSITION_LEFT;\n            x = width + labelPadding;\n          }\n        } else {\n          if (isInside) {\n            align = POSITION_LEFT;\n            x = labelPadding;\n          } else {\n            align = POSITION_RIGHT;\n            x = -labelPadding;\n          }\n        }\n        return {\n          x: x,\n          y: height - (val * height / (max - min)),\n          align: align\n        };\n      };\n\n      getColorLabelXY = function (minvalue, maxvalue) {\n        return {\n          y: height - (((minvalue - min) + (maxvalue - minvalue) / 2) * height / (max - min)),\n          x: (width / 2),\n          height: (maxvalue - minvalue) * height / (max - min),\n          width: width\n        };\n      };\n    }\n\n    if (dataArr && dataArr.length) {\n      i = dataArr.length;\n      while (i--) {\n        if (!data[i]) {\n          continue;\n        }\n        config = data[i].config;\n\n        if (showvalue !== 0 && config.displayValue !== BLANKSTRING) {\n          smartText = smartLabel.getOriSize(config.displayValue);\n          if (config.setWidth) {\n            smartText = smartLabel.getSmartText(config.displayValue,\n              config.setWidth, smartText.height, true);\n          }\n\n          labelXY = dataSet.getPointerLabelXY(config.itemValue, valueInsideGauge,\n            pointerOnOpp, (smartText.height / 2), (smartText.width / 2));\n\n          if (config.isLabelString) {\n            isSameLevel = false;\n            j = 1;\n            while (!isSameLevel) {\n              nextPointer = dataArr[i + j];\n              if (!nextPointer) {\n                break;\n              }\n\n              if (nextPointer.isLabelString) {\n                isSameLevel = true;\n              } else {\n                j += 1;\n              }\n            }\n\n            if (nextPointer) {\n              nextOriText = smartLabel.getOriSize(nextPointer.displayValue);\n              nextXY = getPointerLabelXY(nextPointer.y, valueInsideGauge,\n                pointerOnOpp, (nextOriText.height / 2));\n\n              // calculate the overlapping area's width\n              labelGap = (nextXY.x - (nextOriText.width / 2)) - (labelXY.x +\n                                 (smartText.width / 2));\n              // get the max width i.e the distance between the pointers\n              maxWidth = nextXY.x - labelXY.x;\n              if (labelGap < 0) {\n                // calculate the truncated width using labelGap (should be -ve)\n                truncatedWidth = smartText.width + labelGap;\n\n                // the truncated width cannot be more than max width.\n                if (truncatedWidth > maxWidth) {\n                  config.setWidth = truncatedWidth = maxWidth;\n                }\n                if (truncatedWidth > minWidth) {\n                  if (config.setWidth && config.setWidth <= truncatedWidth) {\n                    nextSmartText = smartLabel.getSmartText(\n                      config.displayValue, config.setWidth, smartText.height, true);\n                    config.displayValue = nextSmartText.text;\n                    nextSmartText.tooltext &&\n                                                (config.originalText = nextSmartText.tooltext);\n                  } else {\n                    nextSmartText = smartLabel.getSmartText(\n                      config.displayValue, truncatedWidth, smartText.height, true);\n                    config.displayValue = nextSmartText.text;\n                    nextSmartText.tooltext &&\n                                                (config.originalText = nextSmartText.tooltext);\n                  }\n                } else {\n                  nextSmartText = smartLabel.getSmartText(\n                    config.displayValue, minWidth, smartText.height, true);\n                  config.displayValue = nextSmartText.text;\n                  nextSmartText.tooltext && (config.originalText = nextSmartText.tooltext);\n                  // since the labelGap was not split equally we have to recalculate\n                  // labelGap so that the next label will adjust accordingly.\n                  labelGap = labelGap * 2 + minWidth - hPad;\n                }\n\n                config.setWidth = null;\n\n                truncatedWidth = nextOriText.width + labelGap - hPad;\n                if (truncatedWidth > maxWidth) {\n                  nextPointer.setWidth = maxWidth;\n                } else if (truncatedWidth > minWidth) {\n                  nextPointer.setWidth = truncatedWidth;\n                } else {\n                  nextPointer.setWidth = minWidth;\n                }\n              }\n            }\n\n            if (config.setWidth) {\n              nextSmartText = smartLabel.getSmartText(\n                config.displayValue, config.setWidth, smartText.height, true);\n              config.displayValue = nextSmartText.text;\n              nextSmartText.tooltext && (config.originalText = nextSmartText.tooltext);\n              config.setWidth = null;\n            }\n          }\n        }\n      }\n    }\n\n    dataSet.drawPointerValues(animation);\n    smartLabel.setStyle(colorRangeStyle);\n\n    // Draw the colorRange labels\n    if (colorArr && showGaugeLabels) {\n      for (i = 0, length = colorArr.length; i < length; i += 1) {\n        colorObj = isScaleReversed ? colorArr[length - 1 - i] : colorArr[i];\n        colorArrLabel = pluck(colorObj.label, colorObj.name);\n        labelXY = getColorLabelXY((colorObj.minvalue - min), (colorObj.maxvalue - min));\n        if ((labelXY.width - innerLabelPadding) > minWidth &&\n                            (labelXY.height - innerLabelPadding) > lineHeight) {\n          smartText = smartLabel.getSmartText(colorArrLabel,\n            labelXY.width - innerLabelPadding, labelXY.height - innerLabelPadding);\n        } else {\n          smartText = smartLabel.getSmartText(colorArrLabel, labelXY.width, labelXY.height);\n        }\n\n        attr = {\n          'text-anchor': POSITION_MIDDLE,\n          'vertical-align': POSITION_MIDDLE,\n          x: labelXY.x,\n          y: labelXY.y,\n          direction: textDirection,\n          fill: convertColor(colorRangeStyle.color),\n          text: smartText.text\n        };\n        valueCont = canvas.getGraphicalElement('colorRangeLabelsCont') && canvas.getGraphicalElement('colorRangeLabelsCont')[i];\n        valueCont = animationManager.setAnimation({\n          el: valueCont || 'group',\n          attr: {name: 'color-range-label'},\n          component: dataSet,\n          container: dataLabelContainer,\n          label: 'final'\n        });\n        value = canvas.getGraphicalElement('colorRangeLabels') && canvas.getGraphicalElement('colorRangeLabels')[i];\n        value = animationManager.setAnimation({\n          el: value || 'text',\n          attr: attr,\n          css: colorRangeStyle,\n          component: dataSet,\n          container: valueCont,\n          label: 'final'\n        });\n        value.outlineText(datasetConfig.showTextOutline, attr.fill);\n        if (!(canvas.getGraphicalElement('colorRangeLabels') &&\n            canvas.getGraphicalElement('colorRangeLabels')[i])) {\n          valueCont = canvas.addGraphicalElement('colorRangeLabelsCont',\n            valueCont, true, i);\n          value = canvas.addGraphicalElement('colorRangeLabels',\n            value, true, i);\n        } else {\n          value\n            .show();\n\n          toolTipController.enableToolTip(value, smartText.tooltext);\n        }\n      }\n    } else {\n      // Setting i to 0 so that any previously existing trendlabels can be hidden.\n      i = 0;\n    }\n\n    // Hiding the unused colorrangeLabels\n    while (canvas.getGraphicalElement('colorRangeLabelsCont') &&\n      canvas.getGraphicalElement('colorRangeLabelsCont')[i]) {\n      canvas.getGraphicalElement('colorRangeLabelsCont')[i].hide();\n      i++;\n    }\n\n    // Drawing the display value of trend points\n    if (trendArr) {\n      for (i = 0, length = trendPointConfig.length; i < length; i += 1) {\n        trendObj = trendPointConfig[i];\n        trendObj.displayValue = pluck(trendObj.displayValue,\n          numberFormatter.dataLabels(trendObj.startValue));\n        smartLabel.setStyle(trendObj.style);\n        lineHeight = smartLabel.getOriSize('Wg').height;\n        smartText = smartLabel.getOriSize(trendObj.displayValue);\n        labelXY = getPointerLabelXY(trendObj.startValue, 0, !trendObj.showOnTop);\n        if (trendObj.setWidth) {\n          smartText = smartLabel.getSmartText(trendObj.displayValue,\n            trendObj.setWidth, smartText.height, true);\n        }\n        isSameLevel = false;\n        j = 1;\n        while (!isSameLevel) {\n          nextPointer = trendArr[i + j];\n          if (!nextPointer) {\n            break;\n          }\n\n          if (nextPointer.showOnTop === trendObj.showOnTop) {\n            isSameLevel = true;\n          } else {\n            j += 1;\n          }\n        }\n        if (nextPointer) {\n          nextOriText = smartLabel.getOriSize(nextPointer.displayValue);\n          nextXY = getPointerLabelXY(nextPointer.startValue, 0, !nextPointer.showOnTop);\n\n          // refer to the docs of pointer label drawing above.\n          labelGap = (nextXY.x - (nextOriText.width / 2)) - (labelXY.x + (smartText.width / 2));\n          if (labelGap < 0) {\n            maxWidth = nextXY.x - labelXY.x;\n            truncatedWidth = smartText.width + labelGap;\n            if (truncatedWidth > maxWidth) {\n              trendObj.setWidth = truncatedWidth = maxWidth;\n            }\n            if (truncatedWidth > minWidth) {\n              if (trendObj.setWidth && (trendObj.setWidth <= truncatedWidth)) {\n                smartText = smartLabel.getSmartText(trendObj.displayValue,\n                  trendObj.setWidth, smartText.height, true);\n                trendObj.displayValue = smartText.text;\n                smartText.tooltext && (trendObj.originalText = smartText.tooltext);\n              } else {\n                smartText = smartLabel.getSmartText(trendObj.displayValue,\n                  smartText.width + labelGap - hPad, smartText.height, true);\n                trendObj.displayValue = smartText.text;\n                smartText.tooltext && (trendObj.originalText = smartText.tooltext);\n              }\n            } else {\n              smartText = smartLabel.getSmartText(\n                trendObj.displayValue, minWidth, smartText.height, true);\n              trendObj.displayValue = smartText.text;\n              smartText.tooltext && (trendObj.originalText = smartText.tooltext);\n              labelGap = labelGap * 2 + minWidth - hPad;\n            }\n\n            trendObj.setWidth = null;\n\n            truncatedWidth = nextOriText.width + labelGap - hPad;\n            if (truncatedWidth > maxWidth) {\n              nextPointer.setWidth = maxWidth;\n            } else if (truncatedWidth > minWidth) {\n              nextPointer.setWidth = truncatedWidth;\n            } else {\n              nextPointer.setWidth = minWidth;\n            }\n          }\n        }\n\n        if (trendObj.setWidth) {\n          smartText = smartLabel.getSmartText(trendObj.displayValue, trendObj.setWidth,\n            smartText.height, true);\n          trendObj.displayValue = smartText.text;\n          smartText.tooltext && (trendObj.originalText = smartText.tooltext);\n          trendObj.setWidth = null;\n        }\n        labelY = trendObj.showOnTop ? -(trendLabelPadding + (smartText.height / 2))\n          : height + oppTrendLabelPadding;\n        labelX = trendObj.isTrendZone ? getColorLabelXY(trendObj.startValue, trendObj.endValue).x\n          : labelXY.x;\n        trendTextElem = canvas.getGraphicalElement('trendTextElems') && canvas.getGraphicalElement('trendTextElems')[i];\n        trendTextElem = animationManager.setAnimation({\n          el: trendTextElem || 'text',\n          attr: {\n            x: labelX,\n            y: labelY,\n            text: trendObj.displayValue,\n            'text-anchor': textHAlign[labelXY.align],\n            fill: convertColor(trendObj.textColor || colorRangeStyle.color),\n            'font-weight': 'normal',\n            direction: textDirection,\n            opacity: 1,\n            title: (trendObj.originalText || BLANK)\n          },\n          container: dataLabelContainer,\n          component: dataSet,\n          label: 'final'\n        });\n        if (!(canvas.getGraphicalElement('trendTextElems') &&\n            canvas.getGraphicalElement('trendTextElems')[i])) {\n          trendTextElem = canvas.addGraphicalElement('trendTextElems', trendTextElem, true, i);\n        }\n        trendTextElem.show();\n      }\n    } else {\n      // Setting i to 0 so that any previously existing trendlabels can be hidden.\n      i = 0;\n    }\n\n    // Hiding the unused trendLabels\n    while (canvas.getGraphicalElement('trendTextElems') &&\n      canvas.getGraphicalElement('trendTextElems')[i]) {\n      canvas.getGraphicalElement('trendTextElems')[i].hide();\n      i++;\n    }\n  }\n\n  /**\n   * Draw pointer values\n   */\n  drawPointerValues () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      dataLabelsGroup = chart.getChildContainer('datalabelsGroup'),\n      data = dataSet.components.data,\n      datasetConfig = dataSet.config,\n      showTooltip = datasetConfig.showTooltip,\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      tooltipVal,\n      pointerOnOpp = datasetConfig.pointerOnOpp,\n      valueInsideGauge = datasetConfig.valueInsideGauge,\n      textDirection = datasetConfig.textDirection,\n      showValue,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      chartData = dataSet.config.pointerArr && dataSet.config.pointerArr.pointer,\n      style = chart.config.dataLabelStyle,\n      i = chartData && chartData.length,\n      config,\n      pointerValue,\n      pointerValueCont,\n      pointerLabelStyle,\n      // animObj = animationObj.animObj,\n      // dummyObj = animationObj.dummyObj,\n      // animationDuration = (animation || animationObj).duration,\n      chartConfig = chart.config,\n      width = chartConfig.canvasWidth,\n      marginLeft = chartConfig.marginLeft,\n      css = {\n        fontFamily: style.fontFamily,\n        fontSize: style.fontSize,\n        lineHeight: style.lineHeight,\n        fontWeight: style.fontWeight,\n        fontStyle: style.fontStyle\n      },\n      displayValue,\n      labelXY,\n      halfWidth,\n      height,\n      graphics,\n      smartText,\n      pool = dataSet.pool,\n      attr,\n      textCreated;\n\n    if (chart.state === 'initial') {\n      animationManager.setAnimation({\n        state: 'initial',\n        el: dataLabelsGroup,\n        attr: {opacity: 1},\n        component: dataSet\n      });\n    }\n\n    smartLabel.setStyle(style);\n    while (i--) {\n      if (!data[i]) {\n        continue;\n      }\n      textCreated = false;\n      graphics = data[i].graphics;\n      config = data[i].config;\n      displayValue = config.displayValue;\n      showValue = config.showValue;\n\n      pointerLabelStyle = config.dataLabelStyle;\n\n      if (showValue !== 0 && displayValue !== BLANKSTRING) {\n        smartText = smartLabel.getOriSize(displayValue);\n        height = smartText.height;\n        smartText = smartLabel.getSmartText(displayValue, chartConfig.width, height);\n        halfWidth = smartText.width / 2;\n        labelXY = dataSet.getPointerLabelXY(config.itemValue,\n          valueInsideGauge, pointerOnOpp, height * 0.5, halfWidth);\n        // Fix for long decimal numbers moving out of the canvas.\n        (halfWidth > marginLeft + labelXY.x) && (labelXY.x = halfWidth - marginLeft);\n        tooltipVal = smartText.tooltext || BLANKSTRING;\n        attr = {\n          // If scale is reversed xPos of label of pointer will be shifted from canvas end\n          x: datasetConfig.isScaleReversed ? width - labelXY.x : labelXY.x,\n          y: labelXY.y,\n          'text-anchor': textHAlign[labelXY.align],\n          title: (config.originalText || BLANK),\n          text: smartText.text,\n          fill: pointerLabelStyle.color,\n          direction: textDirection,\n          'text-bound': [pointerLabelStyle.backgroundColor, pointerLabelStyle.borderColor,\n            style.borderThickness, style.borderPadding,\n            style.borderRadius, style.borderDash]\n        };\n        pointerValueCont = animationManager.setAnimation({\n          el: graphics.pointerValueCont || (pool && pool.pointerValueCont[0]) || 'group',\n          attr: {name: 'label-group'},\n          container: dataLabelsGroup,\n          component: dataSet,\n          label: 'labelGroup'\n        }).show();\n        pointerValue = animationManager.setAnimation({\n          el: graphics.pointerValue || (pool && pool.pointerValue[0]) || 'text',\n          attr: attr,\n          css: css,\n          container: pointerValueCont,\n          component: dataSet,\n          label: 'pointerValues'\n        }).show();\n        pointerValue.outlineText(datasetConfig.showTextOutline, attr.fill);\n\n        if (showTooltip) {\n          toolTipController.enableToolTip(pointerValue, tooltipVal);\n        } else {\n          toolTipController.disableToolTip(pointerValue);\n        }\n        if (!graphics.pointerValue) {\n          if (pool && pool.pointerValue[0]) {\n            pool.pointerValue.splice(0, 1);\n            pool.pointerValueCont.splice(0, 1);\n          } else {\n            textCreated = true;\n          }\n        }\n\n        graphics.pointerValue = pointerValue;\n        graphics.pointerValueCont = pointerValueCont;\n\n        // Applying attr from second time ownwards during update.\n        if (!textCreated) {\n          pointerValue.show();\n        }\n      } else {\n        graphics.pointerValue && graphics.pointerValue.hide();\n        graphics.pointerValueCont && graphics.pointerValueCont.hide();\n        graphics.pointerValue && toolTipController.disableToolTip(graphics.pointerValue);\n      }\n    }\n  }\n\n  /**\n   * Sets axis limits\n   * @return {Object} object consists of maximum and minimum limit\n   */\n  getDataLimits () {\n    var dataSet = this,\n      config = dataSet.config,\n      jsonData = dataSet.getFromEnv('chart').getFromEnv('dataSource'),\n      pointerArr = dataSet.components.data ||\n        (dataSet.config.pointerArr && dataSet.config.pointerArr.pointer) ||\n        (jsonData.dials && jsonData.dials.dial),\n      colorRange = jsonData.colorrange,\n      colorArr = colorRange && colorRange.color,\n      length = pointerArr && pointerArr.length,\n      i,\n      pointerMinVal,\n      pointerMaxVal,\n      upperLimit = config.upperLimit,\n      lowerLimit = config.lowerLimit,\n      value,\n      maxColorRangeVal,\n      minColorRangeVal,\n      max = -Infinity,\n      min = +Infinity;\n\n    // finding max min amongst the pointer value\n    for (i = 0; i < length; i++) {\n      value = pointerArr[i].config.value;\n      if (value === BLANK) {\n        continue;\n      }\n      pointerMaxVal = max = mathMax(max, Number(value));\n      pointerMinVal = min = mathMin(min, Number(value));\n    }\n\n    length = colorArr && colorArr.length;\n    // finding max min amongst the color range value but it has a lower\n    // priority than upperlimit and lowerlimit set by the user.\n    for (i = 0; i < length; i++) {\n      maxColorRangeVal = Number(colorArr[i].maxvalue);\n      minColorRangeVal = Number(colorArr[i].minvalue);\n\n      upperLimit && (maxColorRangeVal > upperLimit) && (maxColorRangeVal = upperLimit);\n      lowerLimit && (minColorRangeVal < lowerLimit) && (minColorRangeVal = lowerLimit);\n      min = safeMin([min, minColorRangeVal]);\n      max = safeMax([max, maxColorRangeVal]);\n    }\n\n    return {\n      forceMin: pointerMinVal !== min,\n      forceMax: pointerMaxVal !== max,\n      max: max,\n      min: min\n    };\n  }\n  /**\n   * Function to update the hlinear data via drag mode or realTime update\n   * @param {Object} updateObjParam data object to realTime update\n   * @param {Object} updateAnimation animation required for realTime update\n   * @return {boolean} return whether new data is empty or not\n   */\n  updateData (updateObjParam, updateAnimation) {\n    if (updateObjParam === this.config.lastUpdatedObj) {\n      return false;\n    }\n\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      data = dataSet.components.data,\n      label,\n      toolText,\n      showLabel,\n      dataArr = dataSet.components.data,\n      i = (dataArr && dataArr.length) || 0,\n      j,\n      id,\n      updateById,\n      updateDataMap = {},\n      updateObjLength,\n      dataObj,\n      config,\n      formatedValue = null,\n      newData = [],\n      updateData,\n      chartAttrs = dataSet.getFromEnv('chart-attrib'),\n      plottooltext = chartAttrs.plottooltext,\n      valueFontColor,\n      valueBgColor,\n      valueBorderColor,\n      value,\n      animation,\n      pointObj,\n      updateObj = updateObjParam;\n\n    updateObj = updateObj.data;\n    // use the realtime animation value or the default animation value\n    animation = updateAnimation || chart.get(configStr, animationObjStr);\n    updateObjLength = updateObj.length;\n\n    // Store the IDs and corresponding data in hashmap.\n    for (j = 0; j < updateObjLength; j++) {\n      id = updateObj[j].id;\n      id && (updateDataMap[id] = updateObj[j]);\n    }\n\n    updateById = Object.keys(updateDataMap).length;\n    if (i) {\n      while (i--) {\n        dataObj = {};\n        pointObj = {};\n        config = data[i].config;\n\n        id = config.id;\n        updateData = UNDEF;\n        // Check if update is done by ID of pointer or sequentially.\n        updateData = updateById ? updateDataMap[id] : updateObj[i];\n\n        if (!updateData) {\n          continue;\n        }\n\n        value = updateData.value;\n        toolText = updateData.tooltext;\n        label = updateData.label;\n        showLabel = updateData.showlabel;\n        valueFontColor = updateData.valuefontcolor;\n        valueBgColor = updateData.valuebgcolor;\n        valueBorderColor = updateData.valuebordercolor;\n\n        if (value !== UNDEF && value !== BLANK) {\n          dataObj.value = pointObj.value = value;\n          formatedValue = pointObj.displayvalue =\n                            pointObj.tooltext = numberFormatter.dataLabels(pointObj.value);\n          pointObj.hasNewData = true;\n        } else {\n          pointObj.value = config.formatedVal;\n        }\n\n        // update the value cosmetics\n        if (valueFontColor) {\n          config.dataLabelStyle.color = convertColor(valueFontColor);\n        }\n\n        if (valueBgColor) {\n          config.dataLabelStyle.backgroundColor = convertColor(valueBgColor);\n        }\n\n        if (valueBorderColor) {\n          config.dataLabelStyle.borderColor = convertColor(valueBorderColor);\n        }\n        if (label) {\n          pointObj.displayvalue = label;\n          pointObj.hasNewData = true;\n        }\n\n        if (showLabel === '0') {\n          pointObj.displayvalue = BLANKSTRING;\n          pointObj.hasNewData = true;\n        }\n\n        if (toolText) {\n          pointObj.hasNewData = true;\n        }\n        toolText = getValidValue(parseUnsafeString(pluck(toolText, plottooltext), false));\n\n        if (pointObj.hasNewData) {\n          newData[i] = pointObj;\n          config.value = pointObj.value;\n          config.displayValue = ((config.displayValue || showLabel === '1')\n            ? pointObj.displayvalue : BLANKSTRING);\n          config.toolText = (toolText !== UNDEF) ? parseTooltext(toolText, [1, 2], {\n            formattedValue: formatedValue\n          }, dataObj) : formatedValue;\n        }\n      }\n\n      if (newData.length) {\n        // Storing updateObj to skip update if same information is provided sequentially.\n        this.config.lastUpdatedObj = updateObj;\n        this.draw(animation, true);\n      }\n\n      return Boolean(newData.length);\n    }\n  }\n}\n\nHlineargaugeDataset.prototype._configureDataLabelStyle = configureDataLabelStyle;\n\nexport default HlineargaugeDataset;\n","import { FINALSTR, INITIALSTR } from '@fusioncharts/core/src/lib';\n\nvar fadeEffect = [{\n  initialAttr: function () {\n    return {opacity: 0};\n  },\n  finalAttr: function () {\n    return {opacity: 1};\n  }\n}];\nexport default {\n  'initial.dataset.hlineargauge': function () {\n    return {\n      'parentgroup.initial': (input) => {\n        return [{\n          initialAttr: {\n            transform: input.attr.transform\n          },\n          finalAttr: {\n            transform: input.attr.transform\n          },\n          slot: 'initial'\n        }];\n      },\n      'datalabel.initial': (input) => {\n        return [{\n          initialAttr: {\n            transform: input.attr.transform\n          },\n          finalAttr: {\n            transform: input.attr.transform\n          }\n        }];\n      },\n      'background.appearing': function () {\n        fadeEffect[0].slot = INITIALSTR;\n        return fadeEffect;\n      },\n      'background.updating': null,\n      'final.appearing': function () {\n        fadeEffect[0].slot = FINALSTR;\n        return fadeEffect;\n      },\n      'final.updating': null,\n      'pointers.appearing': function (input) {\n        let dataset = input.component,\n          isScaleReversed = dataset.config && dataset.config.isScaleReversed,\n          polypathArr = input.attr.polypath.slice(0),\n          canvasWidth = dataset.getFromEnv('chart') &&\n            dataset.getFromEnv('chart').config &&\n            dataset.getFromEnv('chart').config.canvasWidth;\n        polypathArr[1] = isScaleReversed ? canvasWidth : 0;\n\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'initial'\n        }, {\n          initialAttr: {\n            polypath: polypathArr\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'middle'\n        }];\n      },\n      'pointers.updating': null,\n      'pointerValues.appearing': function (input) {\n        let dataset = input.component,\n          isScaleReversed = dataset.config && dataset.config.isScaleReversed,\n          canvasWidth = dataset.getFromEnv('chart') &&\n            dataset.getFromEnv('chart').config &&\n            dataset.getFromEnv('chart').config.canvasWidth;\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'initial'\n        }, {\n          initialAttr: {\n            x: isScaleReversed ? canvasWidth : 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'middle'\n        }];\n      },\n      'pointerValues.updating': null,\n      '*': null\n    };\n  }\n};\n","import { getDep } from '@fusioncharts/core/src/dependency-manager';\nimport { FINALSTR, INITIALSTR } from '@fusioncharts/core/src/lib';\nvar fadeEffect = [{\n    initialAttr: function () {\n      return { opacity: 0 };\n    },\n    finalAttr: function () {\n      return { opacity: 1 };\n    }\n  }],\n  COMMASTRING = ',';\n\nexport default {\n  'initial.dataset.angularGauge': function () {\n    var component = this,\n      conf = component.config,\n      R = getDep('redraphael', 'plugin'),\n      deg2rad = Math.PI / 180,\n      cx = R.vml ? (-1.5) : 0, // correction of -1.5 has to be added for VML.\n      cy = R.vml ? (-1.5) : 0;\n\n    return {\n      'dialPath.appearing': function () {\n        var attr,\n          rotation,\n          startAngle = conf.gaugeStartAngle;\n\n        rotation = (startAngle / deg2rad);\n        attr = {\n          transform: ('R' + rotation + COMMASTRING + cx + COMMASTRING + cy)\n        };\n\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'initial'\n        }, {\n          initialAttr: attr,\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'middle'\n        }];\n      },\n      'dialPath.updating': null,\n      'text.appearing': function () {\n        fadeEffect[0].slot = FINALSTR;\n        return fadeEffect;\n      },\n      'text.updating': null,\n      'pivot.appearing': function () {\n        fadeEffect[0].slot = INITIALSTR;\n        return fadeEffect;\n      },\n      'pivot.updating': null,\n      'plotBackground.appearing': function () {\n        fadeEffect[0].slot = INITIALSTR;\n        return fadeEffect;\n      },\n      'plotBackground.updating': null\n    };\n  }\n};\n","export default function (R) {\n  var math = Math,\n    mathPow = math.pow,\n    mathTan = math.tan,\n    mathAcos = math.acos,\n    mathMin = math.min,\n    mathSqrt = math.sqrt,\n\n    M = 'M',\n    L = 'L',\n    Z = 'Z',\n    Q = 'Q',\n\n    p2pdistance = R._cacher(function (x1, y1, x2, y2) {\n      // Returns distance between two points\n      return mathSqrt(mathPow(x2 - x1, 2) + mathPow(y2 - y1, 2));\n    }),\n\n    pointAtLength = R._cacher(function (x1, y1, x2, y2, d) {\n      /* Returns the coordinates of the point at distance 'd' from point (x1, y1)\n             * on the line between point (x1, y1) and point (x2, y2).\n             */\n\n      // Calculate vectors along path\n      var vx = x2 - x1,\n        vy = y2 - y1,\n        l, px, py;\n\n      // Calculate total length of the path\n      l = p2pdistance(x1, y1, x2, y2);\n\n      // Normalize the vectors\n      vx /= l;\n      vy /= l;\n\n      // Calculate required point coordinates\n      px = x1 + vx * d;\n      py = y1 + vy * d;\n\n      return {\n        x: px,\n        y: py\n      };\n    });\n\n  R.define && R.define([{\n    // Name of the component goes here.\n    name: 'trianglepath',\n\n    // Constructor of the component goes here. Must be same name as the name of the component.\n    trianglepath: function () { // args: [x1, y1, x2, y2, x3, y3, r1, r2, r3]\n      var paper = this,\n        args = arguments,\n        group = R._lastArgIfGroup(args),\n        face = paper.path(group);\n\n      return face.attr('trianglepath', [\n        args[0], args[1],\n        args[2], args[3],\n        args[4], args[5],\n        args[6] || 0,\n        args[7] || 0,\n        args[8] || 0\n      ]);\n    },\n\n    fn: {\n      sides: function () {\n        // Use p2pdistance library function to compute sides of a triangle.\n        var points = this._args;\n        return [\n          p2pdistance(points[0], points[1], points[2], points[3]), // p1, p2\n          p2pdistance(points[2], points[3], points[4], points[5]), // p2, p3\n          p2pdistance(points[4], points[5], points[0], points[1]) // p3, p1\n        ];\n      },\n\n      enclosedAngles: function () {\n        // Returns the three angles of a triangle formed by the given sides\n        var edges = this._sides;\n        return [\n          mathAcos((mathPow(edges[0], 2) + mathPow(edges[2], 2) - mathPow(edges[1], 2)) /\n                        (2 * edges[0] * edges[2])),\n          mathAcos((mathPow(edges[0], 2) + mathPow(edges[1], 2) - mathPow(edges[2], 2)) /\n                        (2 * edges[0] * edges[1])),\n          mathAcos((mathPow(edges[2], 2) + mathPow(edges[1], 2) - mathPow(edges[0], 2)) /\n                        (2 * edges[2] * edges[1]))\n        ];\n      },\n\n      semiperimeter: function () {\n        // Returns the semiperimeter of triangle\n        var sides = this._sides || this.sides();\n        return ((sides[0] + sides[1] + sides[2]) / 2);\n      }\n    },\n\n    ca: {\n      trianglepath: function (x1, y1, x2, y2, x3, y3, r1, r2, r3) {\n        /* Create the triangle path with the provided vertices.\n                 * Make rounded triangle corners if radius is provided.\n                 * r1, r2, r3 are the radii of respective vertices.\n                 */\n        if (r1 || r2 || r3) {\n          // Store arguments in trianglepath element\n          this._args = arguments;\n\n          // Calculate length of all sides of the triangle\n          this._sides = this.sides();\n\n          // Get all the angles of the triangle\n          var angles = this.enclosedAngles(),\n            curveDistance,\n            curvePoints,\n            inradius,\n            s = this.semiperimeter();\n\n          // Calculate inradius of triangle\n          inradius = mathSqrt(s * (s - this._sides[0]) * (s - this._sides[1]) * (s - this._sides[2])) / s;\n\n          // Get distance of points of curves from corresponding vertices\n          // Impose an upper limit on radius which is inradius of triangle\n          curveDistance = [\n            mathMin(r1, inradius) / mathTan(angles[0] / 2),\n            mathMin(r2, inradius) / mathTan(angles[1] / 2),\n            mathMin(r3, inradius) / mathTan(angles[2] / 2)\n          ];\n\n          // Get coordinates of the points of curve on the triangle\n          curvePoints = [\n            pointAtLength(x1, y1, x3, y3, curveDistance[0]),\n            pointAtLength(x1, y1, x2, y2, curveDistance[0]),\n\n            pointAtLength(x2, y2, x1, y1, curveDistance[1]),\n            pointAtLength(x2, y2, x3, y3, curveDistance[1]),\n\n            pointAtLength(x3, y3, x2, y2, curveDistance[2]),\n            pointAtLength(x3, y3, x1, y1, curveDistance[2])\n          ];\n\n          // Draw the triangle path with rounded corners\n          this.attr({\n            path: [\n              M, curvePoints[0].x, curvePoints[0].y,\n              Q, x1, y1, curvePoints[1].x, curvePoints[1].y,\n              L, curvePoints[2].x, curvePoints[2].y,\n              Q, x2, y2, curvePoints[3].x, curvePoints[3].y,\n              L, curvePoints[4].x, curvePoints[4].y,\n              Q, x3, y3, curvePoints[5].x, curvePoints[5].y,\n              L, curvePoints[0].x, curvePoints[0].y\n            ]\n          });\n        } else {\n          this.attr({\n            path: [M, x1, y1, L, x2, y2, x3, y3, Z]\n          });\n        }\n      }\n    }\n  }]);\n}\n","import Hled from '@fusioncharts/widgets/src/chart/hled';\nexport default Hled;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport Vled from '../vled';\n\nconst SERIES_TYPE = 'led',\n  FRIENDLY_NAME = 'Vertical LED Gauge',\n  BOTTOM = 'bottom',\n  TOP = 'top';\n\n/**\n * Class for Hled chart\n * @class Hled\n * @extends {Vled}\n */\nclass Hled extends Vled {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Hled';\n  }\n  /**\n * Creates an instance of Hled.\n * @memberof Hled\n */\n  constructor () {\n    super();\n    this.defaultSeriesType = SERIES_TYPE;\n    this.defaultPlotShadow = 1;\n\n    this.realtimeEnabled = true;\n    this.chartleftmargin = 15;\n    this.chartrightmargin = 15;\n    this.charttopmargin = 10;\n    this.chartbottommargin = 10;\n    this.showTooltip = 0;\n    this.connectTickMarks = 0;\n    this.isHorizontal = true;\n    this.config.isAxisOpposite = false;\n    this.config.scalePosition = BOTTOM;\n    this.config.canBeScalePosition = TOP;\n  }\n\n  // Disabling the ability to reverse the scale\n  _feedAxesRawData () {\n    let scaleConf = super._feedAxesRawData();\n    scaleConf[0].isReverse = false;\n    return scaleConf;\n  }\n  /**\n   * Sets default configuration\n   * @memberof Hled\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.friendlyName = FRIENDLY_NAME;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Hled';\n  }\n}\nexport default Hled;\n","import {configureAttributes, _getData} from '../_internal/bullet-led-common';\nimport LinearGauge from '../_internal/lineargauge';\nimport LedDataset from '../../dataset/led';\nimport datasetFactory from '../../factories/vled-dataset';\n\nconst LED = 'led',\n  FRIENDLY_NAME = 'Vertical LED Gauge',\n  LEFT = 'left',\n  RIGHT = 'right';\n\nclass Vled extends LinearGauge {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Vled';\n  }\n\n  constructor () {\n    super();\n    this.showRTvalue = false;\n    this.canvasPadding = false;\n    this.defaultSeriesType = LED;\n    this.defaultPlotShadow = 1;\n\n    this.realtimeEnabled = true;\n    this.chartleftmargin = 15;\n    this.chartrightmargin = 15;\n    this.charttopmargin = 10;\n    this.chartbottommargin = 10;\n    this.showTooltip = 0;\n    this.connectTickMarks = 0;\n    this.isHorizontal = false;\n    this.config.isAxisOpposite = true;\n    this.config.scalePosition = RIGHT;\n    this.config.canBeScalePosition = LEFT;\n    this.drawPlotlines = false;\n    this.drawPlotBands = false;\n    this.isAxisReverse = false;\n    this.isRealTime = true;\n    this.colorRange = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Vled';\n  }\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    configureAttributes.call(this);\n  }\n  /**\n   * Method to fetch data\n   * @return {Number} data value\n   */\n  _getData () {\n    return _getData.call(this);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = FRIENDLY_NAME;\n    config.hasLegend = false;\n    config.defaultDatasetType = LED;\n    config.skipCanvasDrawing = true;\n    config.majorTMNumber = -1;\n    config.majorTMHeight = 6;\n    config.showTickMarks = 1;\n    config.majorTMThickness = 1;\n    config.minorTMNumber = 4;\n    config.minorTMThickness = 1;\n    config.tickMarkDistance = 3;\n    config.placeTicksInside = 0;\n    config.placeValuesInside = 0;\n  }\n\n  getDSdef () {\n    return LedDataset;\n  }\n}\nexport default Vled;\n","import { pluckNumber, componentFactory } from '@fusioncharts/core/src/lib';\nimport ColorGradient from '@fusioncharts/core/src/color-utils/color-bucket';\nfunction configureAttributes () {\n  let iapi = this,\n    jsonData = iapi.getFromEnv('dataSource'),\n    colorrange = jsonData.colorrange;\n    // If color array is present and contains non-zero color elements\n  if (colorrange && colorrange.color && colorrange.color.length) {\n    componentFactory(iapi, ColorGradient, 'colorRange', 1, [{\n      colorRange: colorrange,\n      numberFormatter: iapi.getFromEnv('number-formatter')\n    }]);\n    iapi.addToEnv('colorRange', iapi.getChildren('colorRange') && iapi.getChildren('colorRange')[0]);\n  } else {\n    iapi.deleteFromEnv('colorRange');\n  }\n}\nfunction _getData () {\n  var iapi = this,\n    dataset = iapi.getDatasets(),\n    data,\n    dataObj;\n  if (dataset) {\n    dataObj = dataset[0].components.data;\n    if (dataObj && dataObj[0]) {\n      data = dataObj[0].config;\n      return pluckNumber(data.setValue, data.itemValue);\n    }\n  }\n}\nexport { configureAttributes, _getData };\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  BLANK,\n  pluck,\n  pluckNumber,\n  getColorCodeString,\n  preDefStr,\n  COMMASTRING,\n  HASHSTRING,\n  toRaphaelColor,\n  regex,\n  getFirstDefinedValue,\n  HUNDREDSTRING,\n  convertColor,\n  getDarkColor,\n  getLightColor\n} from '@fusioncharts/core/src/lib';\nimport BulletDataset from '../bullet';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport ledAnimation from './index.animation';\nvar BLANKSTRING = BLANK,\n  // add the tools thats are requared\n  colorStrings = preDefStr.colors,\n  COLOR_000000 = colorStrings.c000000,\n  showHoverEffectStr = preDefStr.showHoverEffectStr,\n  BUTT = 'butt',\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n\n  ledColorRangeFillMixStr = '{light-10},{dark-10},{light-10},{dark-10}',\n  ledColorRangeFillRatioStr = '0,10,80,10',\n\n  win = window,\n  userAgent = win.navigator.userAgent,\n\n  isIE = /msie/i.test(userAgent) && !win.opera,\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')',\n\n  math = Math,\n  mathRound = math.round,\n  mathMax = math.max,\n  dropHash = regex.dropHash,\n  // isArray = lib.isArray,\n  SETROLLOVERATTR = 'setRolloverAttr',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  EVENTARGS = 'eventArgs',\n  UNDEF,\n  M = 'M',\n  L = 'L',\n  Z = 'Z';\naddDep({\n  name: 'ledAnimation',\n  type: 'animationRule',\n  extension: ledAnimation\n});\n/**\n * Creates the LedDataset class for led plot\n */\nclass LedDataset extends BulletDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'led';\n  }\n  /**\n   * Draw Led plot\n   */\n  draw () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      chartConfig = chart.config,\n      canvas = chart.getChildren('canvas')[0],\n      graphics = canvas.getGraphicalElement(),\n      config = canvas.config,\n      canvasBorderElement = graphics.canvasBorderElement,\n      colorRangeElems = graphics.colorRangeElems,\n      canvasElementPath = graphics.canvasElementPath,\n      canvasHotElement = graphics.canvasHotElement,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasRight = chartConfig.canvasRight,\n      canvasTop = chartConfig.canvasTop,\n      canvasBottom = chartConfig.canvasBottom,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasHeight = chartConfig.canvasHeight,\n      parentContainer = chart.getChildContainer().plotGroup,\n      scale = dataSet.getFromEnv('scale'),\n      min = scale.getLimit().min,\n      max = scale.getLimit().max,\n      isAxisReverse = pluckNumber(chart.getFromEnv('dataSource').chart.reverseaxis, chart.isAxisReverse),\n      isHorizontal = chart.isHorizontal,\n\n      getRectXY = function (minValue, maxValue) {\n        if (isAxisReverse && !isHorizontal) {\n          return {\n            x: canvasLeft,\n            y: canvasTop + (minValue * canvasHeight / (max - min)),\n            width: canvasWidth,\n            height: (maxValue - minValue) * canvasHeight / (max - min)\n          };\n        } else if (!isAxisReverse && !isHorizontal) {\n          return {\n            x: canvasLeft,\n            y: canvasTop + (canvasHeight - (maxValue * canvasHeight / (max - min))),\n            width: canvasWidth,\n            height: (maxValue - minValue) * canvasHeight / (max - min)\n          };\n        } else if (isAxisReverse && isHorizontal) {\n          return {\n            x: canvasLeft + (canvasWidth - (maxValue * canvasWidth / (max - min))),\n            y: canvasTop,\n            width: (maxValue - minValue) * canvasWidth / (max - min),\n            height: canvasHeight\n          };\n        } else if (!isAxisReverse && isHorizontal) {\n          return {\n            x: canvasLeft + ((minValue * canvasWidth / (max - min))),\n            y: canvasTop,\n            width: (maxValue - minValue) * canvasWidth / (max - min),\n            height: canvasHeight\n          };\n        }\n      },\n      angle = 180,\n      gaugeFillMix,\n      gaugeFillRatio,\n      colorArray,\n      colorM = dataSet.getFromEnv('color-manager'),\n      gaugeBorderColor,\n      gaugeBorderAlpha,\n      showShadow,\n      showGaugeBorder,\n      gaugeBorderThickness,\n      colorObj,\n      i,\n      len,\n      xyObj,\n      color,\n      borderColor,\n      crColor,\n      crAlpha,\n      borderAlpha,\n      shadowAlpha,\n      useSameFillColor,\n      useSameFillBgColor,\n      ledGap,\n      ledSize,\n      gaugeFillColor,\n      LEDlength,\n      sizeGapSum,\n      remaningLength,\n      valueDistance,\n      halfBorderWidth,\n      x1,\n      y1,\n      x2,\n      y2,\n      noOfLED,\n      extraSpace,\n      LEDGapStartX,\n      LEDGapStartY,\n      pathCommand,\n      colorRangeGetter,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      animationManager = chart.getFromEnv('animationManager'),\n      useSameFillColorCode,\n      lastColor,\n      value,\n      colorIndex,\n      showHoverEffect = conf.showHoverEffect,\n      dummyElement,\n      // Fired when clicked over the hot elements.\n      clickFunc = function (data) {\n        var ele = this;\n        chart.plotEventHandler(ele, data);\n      },\n      rolloverResponseSetter = function (colorRangeElements) {\n        var ii = 0,\n          length,\n          elem,\n          ele;\n\n        return function () {\n          ele = this;\n          if (ele.data(showHoverEffectStr) !== 0) {\n            for (ii = 0, length = colorRangeElements.length; ii < length; ii += 1) {\n              elem = colorRangeElements[ii];\n              elem.attr(ele.data(SETROLLOVERATTR)[ii]);\n            }\n          }\n        };\n      },\n      rolloutResponseSetter = function (colorRangeElements) {\n        var ii = 0,\n          length,\n          elem,\n          ele;\n\n        return function () {\n          ele = this;\n          if (ele.data(showHoverEffectStr) !== 0) {\n            for (ii = 0, length = colorRangeElements.length; ii < length; ii += 1) {\n              elem = colorRangeElements[ii];\n              elem.attr(ele.data(SETROLLOUTATTR)[ii]);\n            }\n          }\n        };\n      },\n      setRolloverAttr = [],\n      setRolloutAttr = [],\n      trackerContainer = dataSet.getContainer('trackerContainer'),\n      trackerLayer = chart.getChildContainer('trackerGroup'),\n      setLink,\n      eventArgs,\n      LEDDrawn = 0,\n      perLEDValueLength,\n      lastX,\n      lastY,\n      colorLED,\n      colorLedLengthPX,\n      colorLEDLength,\n      isNewElement = false,\n      attr;\n\n    if (!trackerContainer) {\n      trackerContainer = dataSet.addContainer('trackerContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {name: 'led-hot'},\n          container: trackerLayer,\n          component: dataSet\n        })\n      );\n    }\n\n    showGaugeBorder = pluckNumber(chartAttr.showgaugeborder, 1);\n    gaugeBorderColor = pluck(chartAttr.gaugebordercolor, chart.gaugeBorderColor, '333333');\n    gaugeBorderThickness = showGaugeBorder ? pluckNumber(chartAttr.gaugeborderthickness,\n      chart.gaugeBorderThickness, 2) : 0;\n    gaugeBorderAlpha = pluck(chartAttr.gaugeborderalpha, HUNDREDSTRING);\n    // Gauge fill color\n    config.gaugeFillColor = gaugeFillColor = pluck(chartAttr.gaugefillcolor, chartAttr.ledbgcolor,\n      COLOR_000000);\n    // Whether to use same fill color?\n    useSameFillColor = pluckNumber(chartAttr.usesamefillcolor, 0);\n    // Same color for back ground\n    useSameFillBgColor = pluckNumber(chartAttr.usesamefillbgcolor, useSameFillColor);\n\n    conf.ledGap = ledGap = pluckNumber(chartAttr.ledgap, 2);\n    conf.ledSize = ledSize = pluckNumber(chartAttr.ledsize, 2);\n    // plotHoverEffect = pluckNumber(chartAttr.showhovereffect, 0);\n\n    config.colorRangeFillMix = gaugeFillMix = getFirstDefinedValue(chartAttr.colorrangefillmix,\n      chartAttr.gaugefillmix, chart.colorRangeFillMix,\n      ledColorRangeFillMixStr);\n\n    config.colorRangeFillRatio = gaugeFillRatio = getFirstDefinedValue(chartAttr.colorrangefillratio,\n      chartAttr.gaugefillratio, chart.colorRangeFillRatio, chartAttr.gaugefillratio,\n      ledColorRangeFillRatioStr);\n\n    // paletteIndex = 0;\n    // Get the colorRange from env of dataset\n    config.colorRangeGetter = colorRangeGetter = dataSet.getFromEnv('colorRange');\n\n    config.colorArray = colorArray = colorRangeGetter && colorRangeGetter.getColorRangeArr(min, max);\n\n    gaugeBorderColor = pluck(gaugeBorderColor, COLOR_000000).replace(dropHash, HASHSTRING);\n\n    gaugeBorderAlpha = pluckNumber(chartAttr.colorrangeborderalpha,\n      chartAttr.gaugeborderalpha, 100);\n\n    showShadow = pluckNumber(chartAttr.showshadow, 1);\n\n    showGaugeBorder = pluckNumber(chartAttr.showgaugeborder, 1);\n\n    config.colorRangeBorderThickness = gaugeBorderThickness =\n            showGaugeBorder ? pluckNumber(chartAttr.colorrangeborderthickness,\n              chartAttr.gaugeborderthickness, 2) : 0;\n\n    LEDlength = !isHorizontal ? canvasHeight : canvasWidth;\n\n    sizeGapSum = (ledGap + ledSize) || 1;\n    remaningLength = LEDlength - ledSize;\n    valueDistance = max - min;\n\n    halfBorderWidth = gaugeBorderThickness / 2;\n    x1 = canvasLeft - halfBorderWidth;\n    y1 = canvasTop - halfBorderWidth;\n    x2 = canvasLeft + canvasWidth + halfBorderWidth;\n    y2 = canvasTop + canvasHeight + halfBorderWidth;\n\n    noOfLED = parseInt(remaningLength / sizeGapSum, 10) + 1;\n    extraSpace = remaningLength % sizeGapSum;\n    // devide the extra space amont all the LED\n    ledSize += extraSpace / noOfLED;\n    conf.sizeGapSum = sizeGapSum = ledSize + ledGap;\n\n    conf.perLEDValueLength = perLEDValueLength = valueDistance / noOfLED;\n\n    LEDGapStartX = canvasLeft;\n    LEDGapStartY = canvasTop;\n\n    setLink = pluck(chartAttr.clickurl);\n\n    value = numberFormatter.getCleanValue(chart.getFromEnv('dataSource').value);\n\n    if (useSameFillColor || useSameFillBgColor) {\n      for (i = 0, len = colorArray.length; i < len; i += 1) {\n        if (value >= colorArray[i].minvalue && value <= colorArray[i].maxvalue) {\n          useSameFillColorCode = colorArray[i].code || colorM.getPlotColor(i);\n          colorIndex = i;\n          break;\n        }\n      }\n    }\n\n    (colorArray && colorArray.length > 0) && (lastColor = colorArray[0].code || colorM.getPlotColor(0));\n\n    lastX = isAxisReverse ? canvasRight : canvasLeft;\n    lastY = isAxisReverse ? canvasTop : canvasBottom;\n\n    for (i = 0, len = colorArray && colorArray.length; i < len; i += 1) {\n      colorObj = colorArray[i];\n      xyObj = getRectXY((colorObj.minvalue - min), (colorObj.maxvalue - min));\n      colorLED = mathRound((colorObj.maxvalue - min) / perLEDValueLength);\n      colorLEDLength = colorLED - LEDDrawn;\n      LEDDrawn = colorLED;\n      colorLedLengthPX = colorLEDLength * sizeGapSum;\n\n      if (!isHorizontal && !isAxisReverse) {\n        xyObj.height = colorLedLengthPX - ledGap;\n        xyObj.y = lastY - xyObj.height;\n        lastY -= colorLedLengthPX;\n      } else if (!isHorizontal && isAxisReverse) {\n        xyObj.height = colorLedLengthPX - ledGap;\n        xyObj.y = lastY;\n        lastY += colorLedLengthPX;\n      } else if (isHorizontal && !isAxisReverse) {\n        xyObj.width = colorLedLengthPX - ledGap;\n        xyObj.x = lastX;\n        lastX += colorLedLengthPX;\n      } else if (isHorizontal && isAxisReverse) {\n        xyObj.width = colorLedLengthPX - ledGap;\n        xyObj.x = lastX - xyObj.width;\n        lastX -= colorLedLengthPX;\n      }\n\n      colorObj.x = xyObj.x;\n      colorObj.y = xyObj.y;\n      colorObj.width = xyObj.width;\n      colorObj.height = xyObj.height;\n\n      if (useSameFillColor) {\n        color = useSameFillColorCode;\n      } else if (useSameFillBgColor && (i > colorIndex)) {\n        color = lastColor;\n      } else {\n        color = lastColor = colorObj.code || colorM.getPlotColor(i);\n      }\n\n      borderColor = convertColor(getColorCodeString(pluck(colorObj.bordercolor, color), gaugeBorderColor),\n        pluckNumber(colorObj.borderalpha, gaugeBorderAlpha));\n\n      // shadow = showShadow ? (Math.max(colorObj.alpha, gaugeBorderAlpha) / 100) : null;\n\n      // create the shadow element\n      crColor = colorM.parseColorMix(colorObj.code, gaugeFillMix);\n      crAlpha = colorM.parseAlphaList(colorObj.alpha, crColor.length);\n      borderAlpha = pluckNumber(colorObj.borderAlpha, gaugeBorderAlpha);\n      shadowAlpha = crAlpha.split(COMMASTRING);\n\n      shadowAlpha = mathMax.apply(Math, shadowAlpha);\n      shadowAlpha = mathMax((gaugeBorderThickness && borderAlpha) || 0, shadowAlpha);\n\n      attr = {\n        x: xyObj.x,\n        y: xyObj.y,\n        width: (xyObj.width < 0) ? 0 : xyObj.width,\n        height: (xyObj.height < 0) ? 0 : xyObj.height,\n        r: 0,\n        'stroke-width': 0,\n        stroke: borderColor,\n        'fill': toRaphaelColor({\n          FCcolor: {\n            color: color,\n            ratio: gaugeFillRatio,\n            alpha: crAlpha,\n            angle: angle\n          }\n        })\n      };\n      dummyElement = animationManager.setAnimation({\n        el: (colorRangeElems && colorRangeElems[i]) || 'rect',\n        attr: attr,\n        container: parentContainer,\n        component: dataSet,\n        label: 'plotBackground'\n      }).toBack();\n      if (!(colorRangeElems && colorRangeElems[i])) {\n        // In case colorRange element is not present, add it to _graphics of canvas using the graphics API\n        canvas.addGraphicalElement('colorRangeElems', dummyElement, true);\n        dummyElement\n          .shadow({\n            apply: showShadow,\n            opacity: (shadowAlpha / 100)\n          });\n      }\n\n      setRolloverAttr.push({\n        'stroke-width': 0,\n        fill: toRaphaelColor({\n          FCcolor: {\n            color: getDarkColor(pluck(color, COLOR_000000), 80) + COMMASTRING +\n                                    getLightColor(pluck(color, COLOR_000000), 80),\n            alpha: pluckNumber(colorObj.alpha, 100),\n            angle: isHorizontal ? 90 : 0\n          }\n        })\n      });\n\n      setRolloutAttr.push({\n        'stroke-width': 0,\n        fill: toRaphaelColor({\n          FCcolor: {\n            color: pluck(color, COLOR_000000),\n            alpha: pluckNumber(colorObj.alpha, 100)\n          }\n        })\n      });\n    }\n\n    // Remove the extra colorRange elements\n    colorRangeElems = canvas.getGraphicalElement('colorRangeElems') || [];\n    len = colorRangeElems.length - 1;\n    while (len >= i) {\n      canvas.removeGraphicalElement(colorRangeElems[len]);\n      len--;\n    }\n\n    eventArgs = {\n      link: setLink,\n      value: value\n    };\n\n    attr = {\n      x: canvasLeft,\n      y: canvasTop,\n      width: canvasWidth,\n      height: canvasHeight,\n      'stroke-width': 0,\n      fill: TRACKER_FILL\n    };\n\n    if (!canvasHotElement) {\n      canvasHotElement = graphics.canvasHotElement = animationManager.setAnimation({\n        el: 'rect',\n        attr: attr,\n        container: trackerContainer,\n        component: dataSet\n      });\n      isNewElement = true;\n    } else {\n      animationManager.setAnimation({\n        el: canvasHotElement,\n        attr: attr,\n        container: trackerContainer,\n        component: dataSet\n      });\n    }\n\n    canvasHotElement\n      .data(EVENTARGS, eventArgs)\n      .data(showHoverEffectStr, showHoverEffect)\n      .data(SETROLLOVERATTR, setRolloverAttr)\n      .data(SETROLLOUTATTR, setRolloutAttr);\n\n    if (isNewElement) {\n      if (setLink) {\n        canvasHotElement\n          .on('fc-click', clickFunc);\n      }\n      canvasHotElement\n        .hover(\n          rolloverResponseSetter(colorRangeElems),\n          rolloutResponseSetter(colorRangeElems)\n        );\n    }\n\n    if (isHorizontal) {\n      LEDGapStartX += sizeGapSum - (ledGap / 2);\n    } else {\n      LEDGapStartY += sizeGapSum - (ledGap / 2);\n    }\n\n    pathCommand = [];\n\n    attr = {\n      path: [M, x1, y1, L, x2, y1, x2, y2, x1, y2, Z],\n      stroke: convertColor(gaugeBorderColor, gaugeBorderAlpha),\n      'stroke-width': gaugeBorderThickness,\n      'stroke-linecap': BUTT\n    };\n\n    if (!canvasBorderElement) {\n      graphics.canvasBorderElement = animationManager.setAnimation({\n        el: 'path',\n        attr: attr,\n        container: parentContainer,\n        component: dataSet,\n        label: 'plotBackground'\n      }).shadow({\n        apply: showShadow\n      }).toBack();\n    } else {\n      animationManager.setAnimation({\n        el: canvasBorderElement,\n        attr: attr,\n        component: dataSet\n      });\n    }\n\n    // Draw the path for the gap\n    for (i = 1; i < noOfLED; i += 1) {\n      if (isHorizontal) {\n        pathCommand.push(M, LEDGapStartX, LEDGapStartY, L, LEDGapStartX, LEDGapStartY + canvasHeight);\n        LEDGapStartX += sizeGapSum;\n      } else {\n        pathCommand.push(M, LEDGapStartX, LEDGapStartY, L, LEDGapStartX + canvasWidth, LEDGapStartY);\n        LEDGapStartY += sizeGapSum;\n      }\n    }\n\n    attr = {\n      path: pathCommand,\n      stroke: convertColor(gaugeFillColor, 100),\n      'stroke-width': ledGap,\n      'stroke-linecap': BUTT\n    };\n\n    if (!canvasElementPath) {\n      canvasElementPath = animationManager.setAnimation({\n        el: 'path',\n        attr: attr,\n        container: parentContainer,\n        component: dataSet,\n        label: 'plotBackground'\n      });\n      canvas.addGraphicalElement('canvasElementPath', canvasElementPath);\n    } else {\n      animationManager.setAnimation({\n        el: canvasElementPath,\n        attr: attr,\n        component: dataSet\n      });\n    }\n    dataSet.drawShade();\n  }\n  /**\n   * Draw led shade which simulates the off leds\n   */\n  drawShade () {\n    var dataSet = this,\n      conf = dataSet.config,\n      dataStore = dataSet.components.data,\n      chart = dataSet.getFromEnv('chart'),\n      caption = chart.getChildren('caption')[0],\n      subCaption = chart.getChildren('subCaption')[0],\n      captionHeight = (caption && caption.config.text && caption.config.height) || 0,\n      captionPadding = (caption && caption.config.text && caption.config.captionPadding) || 0,\n      subCaptionHeight = (subCaption && subCaption.config.text && subCaption.config.height) || 0,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      animationManager = chart.getFromEnv('animationManager'),\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      dataLabelObj,\n      dataLabelTooltip,\n      displayValue,\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      chartConfig = chart.config,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      canvasHeight = chartConfig.canvasHeight,\n      canvasWidth = chartConfig.canvasWidth,\n      parentContainer = chart.getChildContainer().plotGroup,\n      container = dataSet.getContainer('container'),\n      gaugeFillColor,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      setValue,\n      yPos,\n      isAxisReverse = conf.isAxisReverse = pluckNumber(chartAttr.reverseaxis, chart.isaxisreverse),\n      isHorizontal = conf.isHorizontal = chart.isHorizontal,\n      attr,\n      dataObj = dataStore[0],\n      graphic = dataObj.graphics,\n      config = dataObj && dataObj.config,\n      dataLabelContainer = dataSet.getContainer('dataLabelContainer'),\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n      canvas = chart.getChildren('canvas')[0],\n      style = chart.config.dataLabelStyle,\n      heightUsed = conf.heightUsed,\n      lineHeight,\n      labelBBox,\n      labelWidth,\n      setTooltext,\n      lightedLed,\n      lightedLedLength,\n      height,\n      width,\n      scale = dataSet.getFromEnv('scale'),\n      min = scale.getLimit().min;\n\n    smartLabel.setStyle(style);\n    gaugeFillColor = chart.getChildren('canvas')[0].config.gaugeFillColor;\n\n    if (!container) {\n      container = dataSet.addContainer('container', animationManager.setAnimation({\n        el: 'group',\n        attr: {name: 'shade'},\n        container: parentContainer,\n        component: dataSet\n      }));\n    }\n\n    // Creating the dataLabel container group if not present and appending it to its parent.\n    if (!dataLabelContainer) {\n      dataLabelContainer = dataSet.addContainer('dataLabelContainer',\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'datalabel'\n          },\n          container: dataLabelsLayer,\n          component: dataSet,\n          label: 'labelGroup'\n        })\n      );\n    }\n\n    setValue = numberFormatter.getCleanValue(config.setValue);\n\n    if (!dataObj.graphics) {\n      dataObj.graphics = {};\n    }\n\n    lightedLed = (setValue - min) / conf.perLEDValueLength;\n    lightedLedLength = (mathRound(lightedLed) * conf.sizeGapSum) - conf.ledGap;\n\n    height = Math.ceil(canvasHeight - lightedLedLength);\n    width = Math.ceil(canvasWidth - lightedLedLength);\n\n    if (isAxisReverse && !isHorizontal) {\n      attr = {\n        x: canvasLeft,\n        y: canvasTop + lightedLedLength,\n        width: canvasWidth,\n        height: height,\n        r: 0,\n        'stroke-width': 0,\n        fill: convertColor(gaugeFillColor, 50)\n      };\n    } else if (!isAxisReverse && !isHorizontal) {\n      attr = {\n        x: canvasLeft,\n        y: canvasTop,\n        width: canvasWidth,\n        height: height,\n        r: 0,\n        'stroke-width': 0,\n        fill: convertColor(gaugeFillColor, 50)\n      };\n    } else if (!isAxisReverse && isHorizontal) {\n      attr = {\n        x: canvasLeft + lightedLedLength,\n        y: canvasTop,\n        width: width,\n        height: canvasHeight,\n        r: 0,\n        'stroke-width': 0,\n        fill: convertColor(gaugeFillColor, 50)\n      };\n    } else if (isAxisReverse && isHorizontal) {\n      attr = {\n        x: canvasLeft,\n        y: canvasTop,\n        width: width,\n        height: canvasHeight,\n        r: 0,\n        'stroke-width': 0,\n        fill: convertColor(gaugeFillColor, 50)\n      };\n    }\n\n    dataObj.graphics.element = animationManager.setAnimation({\n      el: dataObj.graphics.element || 'rect',\n      attr: attr,\n      container: container,\n      component: dataSet,\n      label: 'plotRect'\n    });\n\n    setTooltext = (config.setTooltext === BLANK || config.setTooltext === UNDEF)\n      ? config.toolTipValue : config.setTooltext;\n\n    if (conf.showTooltip) {\n      toolTipController.enableToolTip(canvas._graphics.canvasHotElement, setTooltext);\n    } else {\n      toolTipController.disableToolTip(canvas._graphics.canvasHotElement);\n    }\n\n    lineHeight = parseInt(style.lineHeight, 10);\n\n    yPos = lineHeight > heightUsed ? (chartConfig.height - chartConfig.marginBottom - heightUsed) +\n                    lineHeight / 2 : chartConfig.height - chartConfig.marginBottom - lineHeight / 2;\n\n    yPos -= chartConfig.borderWidth;\n\n    yPos -= ((chart._manageActionBarSpace &&\n                chart._manageActionBarSpace(config.availableHeight * 0.225)) || {}).bottom;\n\n    if (caption.config.isOnTop === 0) {\n      yPos -= captionHeight + subCaptionHeight + captionPadding;\n    }\n    graphic = dataObj.graphics;\n\n    if ((config.displayValue !== BLANKSTRING) && (config.displayValue !== UNDEF) && conf.showValue) {\n      dataLabelObj = smartLabel.getSmartText(config.displayValue, chartConfig.width, conf.heightUsed);\n      displayValue = dataLabelObj.text;\n      dataLabelTooltip = dataLabelObj.tooltext || BLANKSTRING;\n      attr = {\n        text: displayValue,\n        'text-anchor': POSITION_MIDDLE,\n        x: canvasWidth / 2 + canvasLeft,\n        y: yPos,\n        'vertical-align': POSITION_MIDDLE,\n        fill: style.color,\n        direction: config.textDirection,\n        'text-bound': [style.backgroundColor, style.borderColor,\n          style.borderThickness, style.borderPadding,\n          style.borderRadius, style.borderDash]\n      };\n\n      graphic.label = animationManager.setAnimation({\n        el: graphic.label || 'text',\n        attr: attr,\n        container: dataLabelContainer,\n        component: dataSet,\n        label: 'text'\n      });\n      if (conf.showTooltip) {\n        toolTipController.enableToolTip(graphic.label, dataLabelTooltip);\n      } else {\n        toolTipController.disableToolTip(graphic.label);\n      }\n\n      // Adjusting the chart label if goes out side the chart area\n      // we try to keep the label inside viewport\n      labelBBox = graphic.label.getBBox();\n      if (labelBBox.x + chartConfig.marginLeft < 0) {\n        labelWidth = labelBBox.width - chartConfig.marginLeft;\n        if (chartConfig.width < labelWidth) {\n          labelWidth = chartConfig.width - chartConfig.marginLeft;\n        }\n        attr = {\n          x: labelWidth / 2\n        };\n\n        animationManager.setAnimation({\n          el: graphic.label,\n          attr: attr,\n          component: dataSet,\n          label: 'text'\n        });\n\n        // graphic.label.animateWith(dummyObj, animObj, attr, animationDuration, animType);\n      }\n    } else {\n      graphic.label && toolTipController.disableToolTip(graphic.label);\n      graphic.label = graphic.label && animationManager.setAnimation({\n        el: graphic.label,\n        component: dataSet\n      });\n    }\n  }\n}\nexport default LedDataset;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  preDefStr,\n  BLANK,\n  pluck,\n  getValidValue,\n  COMMASTRING,\n  getColorCodeString,\n  HUNDREDSTRING,\n  toRaphaelColor,\n  COMMASPACE,\n  getFirstValue,\n  CLICK_THRESHOLD_PIXELS,\n  TOUCH_THRESHOLD_PIXELS,\n  pluckNumber,\n  getFirstDefinedValue,\n  parseUnsafeString,\n  parseTooltext,\n  getDefinedColor,\n  getDashStyle,\n  stubFN,\n  POSITION_TOP,\n  convertColor,\n  getDarkColor,\n  getColumnColor\n} from '@fusioncharts/core/src/lib';\nimport { getDep, addDep } from '@fusioncharts/core/src/dependency-manager';\nimport {ComponentInterface} from '@fusioncharts/core/src/component-interface';\nimport bulletAnimation from './index.animation';\n\nlet Raphael = getDep('redraphael', 'plugin'),\n  BLANKSTRING = BLANK,\n  UNDEF,\n  showHoverEffectStr = preDefStr.showHoverEffectStr,\n  SETROLLOVERATTR = 'setRolloverAttr',\n  ROUND = preDefStr.ROUND,\n  miterStr = preDefStr.miterStr,\n  BUTT = 'butt',\n  PLOTBORDERCOLOR = 'plotBorderColor',\n  PLOTGRADIENTCOLOR = 'plotGradientColor',\n  colorStrings = preDefStr.colors,\n  SHOWSHADOW = 'showShadow',\n  math = Math,\n  mathMax = math.max,\n  mathMin = math.min,\n  mathAbs = math.abs,\n  COLOR_FFFFFF = colorStrings.FFFFFF,\n  noneStr = 'none',\n  FILLMIXDARK10 = '{dark-10}',\n  ROLLOVER = 'DataPlotRollOver',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  ROLLOUT = 'DataPlotRollOut',\n  win = window,\n  doc = win.document,\n  hasTouch = doc.documentElement.ontouchstart !== UNDEF,\n  M = 'M',\n  L = 'L',\n  DECIDE_CRISPENING = {\n    'true': UNDEF,\n    'false': 'crisp'\n  },\n  EVENTARGS = 'eventArgs',\n  GROUPID = 'groupId',\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  PLOTFILLCOLOR_STR = preDefStr.PLOTFILLCOLOR_STR,\n  HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS\n    : CLICK_THRESHOLD_PIXELS;\naddDep({\n  name: 'bulletAnimation',\n  type: 'animationRule',\n  extension: bulletAnimation\n});\n/**\n * Creates dataset class for Bullet\n */\nclass BulletDataset extends ComponentInterface {\n  /**\n   * Constructor function to initialise attributes of bullet dataset object\n   */\n  constructor () {\n    super();\n    this.addData = function () {\n      // Blank fn to Override it's parent method\n    };\n    this.removeData = function () {\n      // Blank fn to Override it's parent method\n    };\n    this.components = {\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'bullet';\n  }\n  /**\n   * Configure dataset component and parse default values\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   * @return {boolean} Indicates whether the configuration was successful or not\n   */\n  configure (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.config.JSONData = datasetJSON;\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      JSONData = dataSet.config.JSONData,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      colorM = dataSet.getFromEnv('color-manager'),\n      showplotborder,\n      plotColor = conf.plotColor = colorM.getColor(PLOTFILLCOLOR_STR),\n      plotBorderDash = pluckNumber(JSONData.dashed, chartAttr.plotborderdashed),\n      plotDashLen,\n      plotDashGap,\n      isRoundEdges,\n      plotFillAlpha,\n      dataStore = dataSet.components.data,\n      isBar = chart.isBar,\n      is3D = chart.config.is3D,\n      isStacked = chart.isStacked,\n      stack100Percent,\n      targetalpha,\n      plotAsDot,\n      targetCapStyle;\n\n    // Set visibilty of dataset\n    dataSet.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n    conf.targetCapStyle = targetCapStyle = pluck(chartAttr.targetcapstyle, ROUND).toLowerCase();\n\n    if ((targetCapStyle !== BUTT) && (targetCapStyle !== ROUND) && (targetCapStyle !== 'square') &&\n                (targetCapStyle !== 'inherit')) {\n      conf.targetCapStyle = ROUND;\n    }\n\n    conf.upperLimit = pluckNumber(chartAttr.upperlimit);\n    conf.lowerLimit = pluckNumber(chartAttr.lowerlimit);\n\n    conf.initAnimation = true;\n    showplotborder = conf.showplotborder = pluckNumber(chartAttr.showplotborder, 0);\n    conf.plotDashLen = plotDashLen = pluckNumber(chartAttr.plotborderdashlen, 5);\n    conf.plotDashGap = plotDashGap = pluckNumber(chartAttr.plotborderdashgap, 4);\n    conf.plotfillAngle = pluckNumber(360 - chartAttr.plotfillangle, (isBar ? 180 : 90));\n    conf.plotFillAlpha = plotFillAlpha = pluck(JSONData.alpha, chartAttr.plotfillalpha, HUNDREDSTRING);\n    conf.plotColor = plotColor = pluck(chartAttr.plotfillcolor, plotColor);\n    conf.isRoundEdges = isRoundEdges = pluckNumber(chartAttr.useroundedges, 0);\n    conf.plotRadius = pluckNumber(chartAttr.useRoundEdges, conf.isRoundEdges ? 1 : 0);\n    conf.plotFillRatio = pluck(JSONData.ratio, chartAttr.plotfillratio);\n    conf.plotgradientcolor = getDefinedColor(chartAttr.plotgradientcolor,\n      colorM.getColor(PLOTGRADIENTCOLOR));\n    // !usePlotGradientColor && (plotgradientcolor = BLANK);\n    conf.showPlotBorderOnHover = pluckNumber(chartAttr.showplotborderonhover, 0);\n    conf.plotBorderAlpha = pluck(chartAttr.plotborderalpha, plotFillAlpha, HUNDREDSTRING);\n    conf.plotBorderColor = pluck(chartAttr.plotbordercolor,\n      is3D ? COLOR_FFFFFF : colorM.getColor(PLOTBORDERCOLOR));\n    conf.plotBorderThickness = showplotborder\n      ? pluckNumber(chartAttr.plotborderthickness, 0) : 0;\n    conf.plotBorderDashStyle = plotBorderDash\n      ? getDashStyle(plotDashLen, plotDashGap) : noneStr;\n    conf.showValue = pluckNumber(JSONData.showvalue, chartAttr.showvalue, 1);\n    conf.valuePadding = pluckNumber(chartAttr.valuepadding, 2);\n\n    conf.showShadow = (isRoundEdges || is3D) ? pluckNumber(chartAttr.showshadow, 1)\n      : pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.showHoverEffect = pluckNumber(chartAttr.plothovereffect,\n      chartAttr.showhovereffect, 0);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.stack100Percent = stack100Percent =\n                pluckNumber(chart.stack100percent, chartAttr.stack100percent, 0);\n    conf.definedGroupPadding = mathMax(pluckNumber(chartAttr.plotspacepercent), 0);\n    conf.plotSpacePercent = mathMax(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0);\n    conf.maxColWidth = pluckNumber(isBar ? chartAttr.maxbarheight : chartAttr.maxcolwidth, 50);\n    conf.showPercentValues = pluckNumber(chartAttr.showpercentvalues, (isStacked && stack100Percent)\n      ? 1 : 0);\n    conf.showPercentInToolTip = pluckNumber(chartAttr.showpercentintooltip,\n      (isStacked && stack100Percent) ? 1 : 0);\n    conf.plotPaddingPercent = pluckNumber(chartAttr.plotpaddingpercent);\n    conf.rotateValues = pluckNumber(chartAttr.rotatevalues) ? 270 : 0;\n    conf.placeValuesInside = pluckNumber(chartAttr.placevaluesinside, 0);\n\n    conf.use3DLighting = pluckNumber(chartAttr.use3dlighting, 1);\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n    conf.plotAsDot = plotAsDot = pluckNumber(chartAttr.plotasdot, 0);\n    conf.plotFillPercent = pluckNumber(chartAttr.plotfillpercent, plotAsDot ? 25 : 40);\n    conf.targetFillPercent = pluckNumber(chartAttr.targetfillpercent, 60);\n    conf.targetThickness = pluckNumber(chartAttr.targetthickness, 3);\n    targetalpha = conf.targetalpha = pluckNumber(chartAttr.targetalpha, 100);\n    conf.rawTargetColor = pluck(chartAttr.targetcolor, colorM.getColor(PLOTFILLCOLOR_STR));\n    conf.targetColor = convertColor(conf.rawTargetColor, targetalpha);\n\n    dataSet._setConfigure();\n  }\n\n  /**\n   * Configure data level attributes\n   * @param {Object} newDataset updated JSON data\n   */\n  _setConfigure (newDataset) {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      JSONData = dataSet.config.JSONData,\n      setDataArr = newDataset || JSONData.data,\n      setDataLen = setDataArr && setDataArr.length,\n      len = (newDataset && newDataset.data.length) || setDataLen,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      colorM = dataSet.getFromEnv('color-manager'),\n      showplotborder = conf.showplotborder,\n      showPlotBorderOnHover = conf.showPlotBorderOnHover,\n      plotColor = conf.plotColor,\n      // showTooltip = pluckNumber(chartAttr.showtooltip, 1),\n      tooltipSepChar = parseUnsafeString(pluck(chartAttr.tooltipsepchar, COMMASPACE)),\n      seriesNameInTooltip = pluckNumber(chartAttr.seriesnameintooltip, 1),\n      formatedVal,\n      parserConfig,\n      setTooltext,\n      seriesname,\n      macroIndices,\n      tempPlotfillAngle,\n      // toolText,\n      plotDashLen,\n      plotDashGap,\n      plotBorderThickness = conf.plotBorderThickness,\n      isRoundEdges = conf.isRoundEdges,\n      showHoverEffect = conf.showHoverEffect,\n      plotfillAngle = conf.plotFillAngle,\n      plotFillAlpha,\n      // plotRadius,\n      plotFillRatio,\n      // plotgradientcolor,\n      plotBorderAlpha = conf.plotBorderAlpha,\n      plotBorderDashStyle,\n      initailPlotBorderDashStyle = conf.plotBorderDashStyle,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      // label,\n      colorArr,\n      hoverColor,\n      hoverAlpha,\n      hoverGradientColor,\n      hoverRatio,\n      hoverAngle,\n      hoverBorderColor,\n      hoverBorderAlpha,\n      hoverBorderThickness,\n      hoverBorderDashed,\n      hoverBorderDashGap,\n      hoverBorderDashLen,\n      hoverDashStyle,\n      hoverColorArr,\n      dataStore = dataSet.components.data,\n      toolTipValue,\n      setDisplayValue,\n      isBar = chart.isBar,\n      is3D = chart.config.is3D,\n      setDataDashed,\n      setDataPlotDashLen,\n      setDataPlotDashGap,\n      i,\n      maxValue = -Infinity,\n      minValue = Infinity,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n\n      target,\n      hoverAttr,\n      outAttr,\n      targetHoverThickness,\n      targetHoverColor,\n      targetHoverAlpha,\n      hasTargetHoverMix,\n      setTooltextTarget,\n      getTooltext = function (tooltext) {\n        var toolText;\n\n        if (!conf.showTooltip) {\n          toolText = false;\n        } else {\n          if (formatedVal === null) {\n            toolText = false;\n          } else if (tooltext !== UNDEF) {\n            macroIndices = [1, 2, 3, 4, 5, 6, 7, 26, 27];\n            parserConfig = {\n              formattedValue: formatedVal,\n              targetValue: config.target,\n              targetDataValue: config.toolTipValueTarget\n            };\n            toolText = parseTooltext(tooltext, macroIndices,\n              parserConfig, setData, chartAttr, JSONData);\n          } else {\n            if (seriesNameInTooltip) {\n              seriesname = getFirstValue(JSONData && JSONData.seriesname);\n            }\n            toolText = seriesname ? seriesname + tooltipSepChar : BLANK;\n            toolText += config.toolTipValue ? config.toolTipValue : BLANK;\n          }\n        }\n        return toolText;\n      };\n\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n\n    // Parsing the attributes and values at set level.\n    for (i = 0; i < len; i++) {\n      if (newDataset) {\n        setData = (newDataset && newDataset.data[i]);\n      } else {\n        setData = setDataArr[i];\n      }\n\n      dataObj = dataStore[i];\n\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {};\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n\n      config.showValue = pluckNumber(setData.showvalue, conf.showValues);\n      config.valuePadding = pluckNumber(chartAttr.valuepadding, 2);\n      config.setValue = setValue = numberFormatter.getCleanValue(setData.value);\n      config.target = target = numberFormatter.getCleanValue(setData.target);\n      config.setLink = pluck(setData.link);\n      config.toolTipValue = toolTipValue = numberFormatter.dataLabels(setValue);\n      config.toolTipValueTarget = numberFormatter.dataLabels(target);\n      config.setDisplayValue = setDisplayValue = parseUnsafeString(setData.displayvalue);\n      config.displayValue = pluck(setData.label, setDisplayValue, toolTipValue);\n      setDataDashed = pluckNumber(setData.dashed);\n      setDataPlotDashLen = pluckNumber(setData.dashlen, plotDashLen);\n      setDataPlotDashGap = plotDashGap = pluckNumber(setData.dashgap, plotDashGap);\n\n      maxValue = mathMax(maxValue, setValue, target);\n      minValue = mathMin(minValue, setValue, target);\n\n      config.plotBorderDashStyle = plotBorderDashStyle = setDataDashed === 1\n        ? getDashStyle(setDataPlotDashLen, setDataPlotDashGap)\n        : (setDataDashed === 0 ? noneStr : initailPlotBorderDashStyle);\n\n      plotColor = pluck(setData.color, conf.plotColor);\n\n      plotFillAlpha = pluck(setData.alpha, conf.plotFillAlpha);\n\n      // Setting the angle for plot fill for negative data\n      if (setValue < 0 && !isRoundEdges) {\n        tempPlotfillAngle = plotfillAngle;\n        plotfillAngle = isBar ? 180 - plotfillAngle : 360 - plotfillAngle;\n      }\n\n      // Setting the color Array to be applied to the bar/column.\n      config.colorArr = colorArr = getColumnColor(\n        plotColor,\n        plotFillAlpha,\n        plotFillRatio,\n        plotfillAngle,\n        isRoundEdges,\n        conf.plotBorderColor,\n        plotBorderAlpha.toString(),\n        (isBar ? 1 : 0),\n        (!!is3D)\n      );\n\n      // label = 'getValidValue(parseUnsafeString(pluck (categories[i].tooltext, categories[i].label)))';\n\n      // Parsing the hover effects only if showhovereffect is not 0.\n      if (showHoverEffect !== 0) {\n        hoverColor = pluck(setData.hovercolor, JSONData.hovercolor, chartAttr.plotfillhovercolor,\n          chartAttr.columnhovercolor, plotColor);\n        hoverAlpha = pluck(setData.hoveralpha, JSONData.hoveralpha,\n          chartAttr.plotfillhoveralpha, chartAttr.columnhoveralpha, plotFillAlpha);\n        hoverGradientColor = pluck(setData.hovergradientcolor,\n          JSONData.hovergradientcolor, chartAttr.plothovergradientcolor, conf.plotgradientcolor);\n        !hoverGradientColor && (hoverGradientColor = BLANK);\n        hoverRatio = pluck(setData.hoverratio,\n          JSONData.hoverratio, chartAttr.plothoverratio, plotFillRatio);\n        hoverAngle = pluckNumber(360 - setData.hoverangle,\n          360 - JSONData.hoverangle, 360 - chartAttr.plothoverangle, plotfillAngle);\n        hoverBorderColor = pluck(setData.borderhovercolor,\n          JSONData.borderhovercolor, chartAttr.plotborderhovercolor, chartAttr.plotfillhovercolor,\n          conf.plotBorderColor);\n        hoverBorderAlpha = pluck(setData.borderhoveralpha,\n          JSONData.borderhoveralpha, chartAttr.plotborderhoveralpha, plotBorderAlpha, plotFillAlpha);\n        hoverBorderThickness = pluckNumber(setData.borderhoverthickness,\n          JSONData.borderhoverthickness, chartAttr.plotborderhoverthickness, plotBorderThickness);\n        hoverBorderDashed = pluckNumber(setData.borderhoverdashed,\n          JSONData.borderhoverdashed, chartAttr.plotborderhoverdashed);\n        hoverBorderDashGap = pluckNumber(setData.borderhoverdashgap,\n          JSONData.borderhoverdashgap, chartAttr.plotborderhoverdashgap, plotDashLen);\n        hoverBorderDashLen = pluckNumber(setData.borderhoverdashlen,\n          JSONData.borderhoverdashlen, chartAttr.plotborderhoverdashlen, plotDashGap);\n        hoverDashStyle = hoverBorderDashed\n          ? getDashStyle(hoverBorderDashLen, hoverBorderDashGap)\n          : plotBorderDashStyle;\n\n        /* If no hover effects are explicitly defined and\n                     * showHoverEffect is not 0 then hoverColor is set.\n                     */\n        if (showHoverEffect === 1 && hoverColor === plotColor) {\n          hoverColor = getDarkColor(hoverColor, 90);\n        }\n\n        // setting the hover color array which is always applied except when showHoverEffect is not 0.\n        hoverColorArr = getColumnColor(\n          hoverColor,\n          hoverAlpha,\n          hoverRatio,\n          hoverAngle,\n          isRoundEdges,\n          hoverBorderColor,\n          hoverBorderAlpha.toString(),\n          (isBar ? 1 : 0),\n          false\n        );\n        config.setPlotRolloutAttr = {\n          fill: !is3D ? toRaphaelColor(colorArr[0])\n            : [toRaphaelColor(colorArr[0]), !conf.use3DLighting],\n          stroke: showplotborder && toRaphaelColor(colorArr[1]),\n          'stroke-width': plotBorderThickness,\n          'stroke-dasharray': plotBorderDashStyle\n        };\n\n        config.setPlotRolloverAttr = {\n          fill: !is3D ? toRaphaelColor(hoverColorArr[0])\n            : [toRaphaelColor(hoverColorArr[0]), !conf.use3DLighting],\n          stroke: toRaphaelColor(hoverColorArr[1]),\n          'stroke-width': showPlotBorderOnHover ? (hoverBorderThickness || 1) : hoverBorderThickness,\n          'stroke-dasharray': hoverDashStyle\n        };\n      }\n\n      if (showHoverEffect !== 0 && (showHoverEffect || chartAttr.targethovercolor ||\n                        chartAttr.targethoveralpha || chartAttr.targethoveralpha === 0 ||\n                        chartAttr.targethoverthickness || chartAttr.targethoverthickness === 0)) {\n        showHoverEffect = true;\n        hoverAttr = {};\n        outAttr = {};\n        targetHoverThickness = pluckNumber(chartAttr.targethoverthickness, conf.targetThickness + 2);\n        if (conf.targetThickness !== targetHoverThickness) {\n          hoverAttr['stroke-width'] = targetHoverThickness;\n          outAttr['stroke-width'] = conf.targetThickness;\n        }\n        targetHoverColor = pluck(chartAttr.targethovercolor, FILLMIXDARK10);\n        targetHoverAlpha = pluckNumber(chartAttr.targethoveralpha, conf.targetalpha);\n        if (targetHoverThickness) {\n          outAttr.stroke = conf.targetColor;\n          hasTargetHoverMix = /\\{/.test(targetHoverColor);\n          hoverAttr.stroke = convertColor(hasTargetHoverMix\n            ? colorM.parseColorMix(pluck(chartAttr.targetcolor, plotColor), targetHoverColor)[0]\n            : targetHoverColor, targetHoverAlpha);\n        }\n        // showHoverAnimation = !!pluckNumber(chartAttr.showhoveranimation, 1);\n        config.tagetHoverAttr = hoverAttr;\n        config.targetOutAttr = outAttr;\n      }\n\n      formatedVal = config.toolTipValue;\n\n      // Parsing tooltext against various configurations provided by the user.\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext,\n        JSONData.plottooltext, chartAttr.plottooltext), false));\n      // if (!showTooltip) {\n      //     toolText = false;\n      // }\n      // else {\n      //     if (formatedVal === null) {\n      //         toolText = false;\n      //     }\n      //     else if (setTooltext !== UNDEF) {\n      //         macroIndices = [1,2,3,4,5,6,7,26,27];\n      //         parserConfig = {\n      //             formattedValue : formatedVal,\n      //             targetValue : config.target,\n      //             targetDataValue : config.toolTipValueTarget\n      //         };\n      //         toolText = parseTooltext(setTooltext, macroIndices,\n      //             parserConfig, setData, chartAttr, JSONData);\n      //     }\n      //     else {\n      //         if (seriesNameInTooltip) {\n      //             seriesname = getFirstValue(JSONData && JSONData.seriesname);\n      //         }\n      //         toolText = seriesname ? seriesname + tooltipSepChar : BLANK;\n      //         toolText += label ? label + tooltipSepChar : BLANK;\n      //     }\n      // }\n      config.toolText = getTooltext(setTooltext);\n      config.setTooltext = config.toolText;\n      tempPlotfillAngle && (plotfillAngle = tempPlotfillAngle);\n\n      setTooltextTarget = getValidValue(parseUnsafeString(pluck(setData.tooltexttarget,\n        JSONData.targettooltext, chartAttr.targettooltext), false));\n      config.toolTextTarget = getTooltext(setTooltextTarget);\n    }\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n  }\n\n  /**\n   * Calculates vertical space management of bullet plot\n   * @param {number} availableHeight maximum available height plot can take\n   * @return {Object} height needed for bullet plot\n   */\n  _manageSpace (availableHeight) {\n    var dataSet = this,\n      conf = dataSet.config,\n      dataStore = dataSet.components.data,\n      dataObj,\n      chart = dataSet.getFromEnv('chart'),\n      // captionConfig = chart.getChildren('caption')[0].config,\n      // components = dataSet.components,\n      chartConfig = chart.config,\n      // datasetConfig = dataSet.config,\n      smartLabel = chart.getFromEnv('smartLabel'),\n      // canvasWidth = chartConfig.canvasWidth,\n      smartDataLabel,\n      style = chartConfig.dataLabelStyle,\n      lineHeight = pluckNumber(parseInt(style.lineHeight, 10), 12),\n      maxAllowedHeight = availableHeight,\n      valuePadding = conf.valuePadding,\n      // valuePaddingWithRadius,\n      heightUsed = 0,\n      // heightReducedBottom = 0, heightReducedTop = 0,\n      // tickDimension = 0,\n      i = 0,\n      len = 1,\n      // pointerOnOpp = datasetConfig.pointerOnOpp,\n      config;\n\n    // setData = setDataArr[i];\n    dataObj = dataStore[i];\n    config = dataObj && dataObj.config;\n\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    smartLabel.setStyle(style);\n\n    for (; i < len; i += 1) {\n      if (conf.showValue) {\n        smartDataLabel = smartLabel.getOriSize(config.toolTipValue);\n        // special fix for space string\n        /** @todo will be removed when smartLabel will be able to handle it */\n        if (config.toolTipValue === BLANK) {\n          smartDataLabel = {\n            height: lineHeight\n          };\n        }\n\n        if (smartDataLabel.height > 0) {\n          heightUsed = smartDataLabel.height + valuePadding;\n        }\n\n        if (heightUsed > maxAllowedHeight) {\n          // extraSpace = heightUsed - maxAllowedHeight;\n          heightUsed = maxAllowedHeight;\n        }\n      }\n    }\n    // captionConfig.widgetValueHeight = heightUsed;\n    conf.heightUsed = heightUsed;\n    return {\n      top: 0,\n      bottom: heightUsed\n    };\n  }\n\n  /**\n   * Calculates horizontal space management of bullet plot\n   * @param {number} availableWidth maximum available width plot can take\n   * @return {Object} width needed for bullet plot\n   */\n  _manageSpaceHorizontal (availableWidth) {\n    var dataSet = this,\n      conf = dataSet.config,\n      // JSONData = dataSet.JSONData,\n      // setDataArr = JSONData.data,\n      dataStore = dataSet.components.data,\n      dataObj,\n      chart = dataSet.getFromEnv('chart'),\n      // components = dataSet.components,\n      chartConfig = chart.config,\n      // datasetConfig = dataSet.config,\n      smartLabel = chart.getFromEnv('smartLabel'),\n      // canvasWidth = chartConfig.canvasWidth,\n      smartDataLabel,\n      style = chartConfig.dataLabelStyle,\n      lineHeight = pluckNumber(parseInt(style.lineHeight, 10), 12),\n      maxAllowedWidth = availableWidth,\n      valuePadding = conf.valuePadding,\n      // valuePaddingWithRadius,\n      widthUsed = 0,\n      i = 0,\n      len = 1,\n      config;\n\n    // setData = setDataArr[i];\n    dataObj = dataStore[i];\n    config = dataObj && dataObj.config;\n\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    smartLabel.setStyle(style);\n\n    for (; i < len; i += 1) {\n      // config = components[i].config;\n      if (config && config.displayValue !== BLANKSTRING && config.displayValue !== UNDEF) {\n        if (conf.showValue) {\n          smartDataLabel = smartLabel.getOriSize(config.displayValue);\n          // special fix for space string\n          /** @todo will be removed when smartLabel will be able to handle it */\n          if (config.displayValue === BLANK) {\n            smartDataLabel = {\n              height: lineHeight\n            };\n          }\n\n          if (smartDataLabel.height > 0) {\n            widthUsed = smartDataLabel.width + valuePadding + 2;\n          }\n\n          if (widthUsed > maxAllowedWidth) {\n            // extraSpace = widthUsed - maxAllowedWidth;\n            widthUsed = maxAllowedWidth;\n          }\n        }\n      }\n    }\n    conf.widthUsed = widthUsed;\n    return {\n      top: 0,\n      right: widthUsed\n    };\n  }\n\n  /**\n   * Update data with new JSON\n   * @param {Object} dataObj updated parsd JSON\n   * @param {number} index dataset index\n   * @param {boolean} draw decides whether to draw datset instantly or not\n   */\n  updateData (dataObj, index, draw) {\n    var dataSet = this,\n      conf = dataSet.config,\n      prevMax = conf.maxValue,\n      prevMin = conf.prevMin,\n      chart = dataSet.getFromEnv('chart'),\n      drawManager = dataSet.groupManager || dataSet,\n      scale = dataSet.getFromEnv('scale');\n\n    dataSet._setConfigure(dataObj, index);\n    dataSet.setMaxMin();\n\n    if (conf.maxValue !== prevMax || conf.minValue !== prevMin) {\n      dataSet.config.maxminFlag = true;\n    }\n\n    if (draw) {\n      chart._setAxisLimits();\n      scale.draw();\n      drawManager.draw();\n    }\n  }\n\n  /**\n   * Get the max and min of data during real time update\n   */\n  setMaxMin () {\n    var dataSet = this,\n      dataStore = dataSet.components.data,\n      conf = dataSet.config,\n      i,\n      config,\n      len = dataStore.length,\n      maxValue = -Infinity,\n      minValue = +Infinity;\n\n    for (i = 0; i < len; i++) {\n      if (!dataStore[i]) {\n        continue;\n      }\n      config = dataStore[i].config;\n      maxValue = mathMax(maxValue, config.setValue, config.target);\n      minValue = mathMin(minValue, config.setValue, config.target);\n    }\n\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n  }\n\n  /**\n   * Draws bullet plot background\n   */\n  draw () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      chartConfig = chart.config,\n      canvas = chart.getChildren('canvas')[0],\n      config = canvas.config,\n      colorRangeElems = dataSet.getGraphicalElement('backgroundRect') || [],\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasHeight = chartConfig.canvasHeight,\n      parentContainer = canvas.getContainer('canvasGroup'),\n      attr,\n      scale = dataSet.getFromEnv('scale'),\n      min = scale.getLimit().min,\n      max = scale.getLimit().max,\n      isHorizontal = chart.isHorizontal,\n\n      getRectXY = function (minValue, maxValue) {\n        if (!isHorizontal) {\n          return {\n            x: canvasLeft,\n            y: canvasTop + (canvasHeight - (maxValue * canvasHeight / (max - min))),\n            width: canvasWidth,\n            height: (maxValue - minValue) * canvasHeight / (max - min)\n          };\n        } else if (isHorizontal) {\n          return {\n            x: canvasLeft + ((minValue * canvasWidth / (max - min))),\n            y: canvasTop,\n            width: (maxValue - minValue) * canvasWidth / (max - min),\n            height: canvasHeight\n          };\n        }\n      },\n      angle,\n      gaugeFillMix,\n      gaugeFillRatio,\n      colorRangeGetter,\n      colorArray,\n      colorM = dataSet.getFromEnv('color-manager'),\n      gaugeBorderColor,\n      gaugeBorderAlpha,\n      showShadow,\n      showGaugeBorder,\n      gaugeBorderThickness,\n      colorObj,\n      i,\n      count,\n      len,\n      xyObj,\n      color,\n      borderColor,\n      crColor,\n      crAlpha,\n      borderAlpha,\n      shadowAlpha,\n      animationManager = chart.getFromEnv('animationManager'),\n      colorRangeElem;\n\n    angle = isHorizontal ? 270 : 180;\n\n    config.colorRangeFillMix = gaugeFillMix = getFirstDefinedValue(chartAttr.colorrangefillmix,\n      chartAttr.gaugefillmix, chart.colorRangeFillMix,\n      '{light-10},{dark-10},{light-10},{dark-10}');\n\n    config.colorRangeFillRatio = gaugeFillRatio = getFirstDefinedValue(chartAttr.colorrangefillratio,\n      chartAttr.gaugefillratio, chart.colorRangeFillRatio, chartAttr.gaugefillratio,\n      '0,10,80,10');\n    // Fetch colorRange from env\n    config.colorRangeGetter = colorRangeGetter = chart.getFromEnv('colorRange');\n\n    config.colorArray = colorArray = colorRangeGetter &&\n                colorRangeGetter.getColorRangeArr(min, max);\n\n    gaugeBorderColor = pluck(chartAttr.colorrangebordercolor,\n      chartAttr.gaugebordercolor, '{dark-20}');\n\n    gaugeBorderAlpha = pluckNumber(chartAttr.colorrangeborderalpha,\n      chartAttr.gaugeborderalpha, 100);\n\n    showShadow = pluckNumber(chartAttr.showshadow, 1);\n\n    showGaugeBorder = pluckNumber(chartAttr.showgaugeborder, chartAttr.showcolorrangeborder, 0);\n\n    config.colorRangeBorderThickness = gaugeBorderThickness =\n            showGaugeBorder ? pluckNumber(chartAttr.colorrangeborderthickness,\n              chartAttr.gaugeborderthickness, 2) : 0;\n\n    len = (chart.getFromEnv('dataSource').colorrange && colorArray && colorArray.length) || 0;\n\n    for (i = 0, count = 0; i < len; i += 1) {\n      colorObj = colorArray[i];\n      xyObj = getRectXY((colorObj.minvalue - min), (colorObj.maxvalue - min));\n      colorObj.x = xyObj.x;\n      colorObj.y = xyObj.y;\n      colorObj.width = xyObj.width;\n      colorObj.height = xyObj.height;\n\n      color = colorObj.code;\n\n      borderColor = convertColor(getColorCodeString(pluck(colorObj.bordercolor, color), gaugeBorderColor),\n        pluckNumber(colorObj.borderalpha, gaugeBorderAlpha));\n\n      // create the shadow element\n      crColor = colorM.parseColorMix(colorObj.code, gaugeFillMix);\n      crAlpha = colorM.parseAlphaList(colorObj.alpha, crColor.length);\n      borderAlpha = pluckNumber(colorObj.borderAlpha, gaugeBorderAlpha);\n      shadowAlpha = crAlpha.split(COMMASTRING);\n\n      shadowAlpha = mathMax.apply(Math, shadowAlpha);\n      shadowAlpha = mathMax((gaugeBorderThickness && borderAlpha) || 0, shadowAlpha);\n\n      attr = {\n        x: xyObj.x,\n        y: xyObj.y,\n        width: xyObj.width,\n        height: xyObj.height,\n        r: 0,\n        'stroke-width': gaugeBorderThickness,\n        stroke: borderColor,\n        'fill': toRaphaelColor({\n          FCcolor: {\n            color: crColor.toString(),\n            ratio: gaugeFillRatio,\n            alpha: crAlpha,\n            angle: angle\n          }\n        })\n      };\n\n      // Create/reuse colorRange elements\n      colorRangeElem = animationManager.setAnimation({\n        el: colorRangeElems[i] || 'rect',\n        attr: attr,\n        container: parentContainer,\n        component: dataSet,\n        doNotRemove: true,\n        label: 'backgroundRect'\n      });\n\n      !colorRangeElems[i] && dataSet.addGraphicalElement('backgroundRect', colorRangeElem, true);\n      colorRangeElem.show();\n\n      colorRangeElem.shadow({\n        apply: showShadow,\n        opacity: (shadowAlpha / 100)\n      });\n      count++;\n    }\n\n    // hide the remaining color range elements\n    len = colorRangeElems && colorRangeElems.length;\n    while (len > count) {\n      colorRangeElems && colorRangeElems[len - 1] && dataSet.removeGraphicalElement(colorRangeElems[len - 1]);\n      len--;\n    }\n\n    dataSet.drawPlot();\n  }\n  /**\n   * Draws bullet plot\n   */\n  drawPlot () {\n    var dataSet = this,\n      conf = dataSet.config,\n      attr,\n      i,\n      visible = dataSet.getState('visible'),\n      chart = dataSet.getFromEnv('chart'),\n      caption = chart.getChildren('caption')[0],\n      subCaption = chart.getChildren('subCaption')[0],\n      captionHeight = (caption && caption.config.text && caption.config.height) || 0,\n      captionPadding = (caption && caption.config.text && caption.config.captionPadding) || 0,\n      subCaptionHeight = (subCaption && subCaption.config.text && subCaption.config.height) || 0,\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      chartConfig = chart.config,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasRight = chartConfig.canvasRight,\n      canvasTop = chartConfig.canvasTop,\n      canvasBottom = chartConfig.canvasBottom,\n      canvasHeight = chartConfig.canvasHeight,\n      canvasWidth = chartConfig.canvasWidth,\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      scale = dataSet.getFromEnv('scale'),\n      eventArguments,\n      parentContainer = chart.getChildContainer().plotGroup,\n      xPos,\n      yPos,\n      crispBox,\n      R = Raphael,\n      showTooltip = conf.showTooltip,\n      dataLabelTooltip,\n      dataLabelObj,\n      columnWidth,\n      height,\n      toolText,\n      dataStore = dataSet.components.data,\n      dataObj,\n      setElement,\n      setLink,\n      setValue,\n      displayValue,\n      groupId,\n      config,\n      showShadow = conf.showShadow,\n      plotBorderThickness = conf.plotBorderThickness,\n      plotRadius = conf.plotRadius,\n\n      containerDummy = dataSet.getContainer('container'),\n      container,\n\n      targetContainerDummy = dataSet.getContainer('targetContainer'),\n      targetContainer,\n\n      dataLabelContainerDummy = dataSet.getContainer('dataLabelContainer'),\n      dataLabelContainer,\n\n      shadowContainerDummy = dataSet.getContainer('shadowContainer'),\n      shadowContainer,\n      shadowTargetContainerDummy = dataSet.getContainer('shadowTargetContainer'),\n      shadowTargetContainer,\n\n      colorArr,\n      plotBorderDashStyle,\n      isNegative = false,\n\n      targetPath,\n\n      targetLength,\n      startX,\n      endX,\n      startY,\n      endY,\n      initialColumnWidth,\n\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n      style = chart.config.dataLabelStyle,\n      animationManager = chart.getFromEnv('animationManager'),\n      heightUsed = conf.heightUsed,\n      lineHeight,\n      labelBBox,\n      labelWidth,\n      isNewTargetElem,\n      lowerLimit = conf.lowerLimit,\n      base,\n      labelAttr,\n      targetAttr,\n      targetElement,\n      showHoverEffect = conf.showHoverEffect,\n      // Fired when clicked over the hot elements.\n      clickFunc = function (setDataArr) {\n        var ele = this;\n        chart.plotEventHandler(ele, setDataArr);\n      },\n      // Fired on mouse-in over the hot elements.\n      rolloverResponseSetter = function (elem) {\n        return function (data) {\n          var ele = this;\n          if (ele.data(showHoverEffectStr) !== 0) {\n            elem.attr(ele.data(SETROLLOVERATTR));\n          }\n          chart.plotEventHandler(ele, data, ROLLOVER);\n        };\n      },\n      // Fired on mouse-out over the hot elements.\n      rolloutResponseSetter = function (elem) {\n        return function (data) {\n          var ele = this;\n          if (ele.data(showHoverEffectStr) !== 0) {\n            elem.attr(ele.data(SETROLLOUTATTR));\n          }\n          chart.plotEventHandler(ele, data, ROLLOUT);\n        };\n      },\n      hideFn = function () {\n        this.hide();\n      };\n    /*\n    * Creating a container group for the graphic element of bar plots if\n    * not present and attaching it to its parent group.\n    */\n    container = animationManager.setAnimation({\n      el: containerDummy || 'group',\n      attr: {\n        name: 'bar'\n      },\n      component: dataSet,\n      container: parentContainer,\n      doNotRemove: true,\n      label: 'group'\n    });\n    if (!containerDummy) {\n      container = dataSet.addContainer('container', container);\n    }\n\n    dataLabelContainer = animationManager.setAnimation({\n      el: dataLabelContainerDummy || 'group',\n      attr: {\n        name: 'datalabel'\n      },\n      component: dataSet,\n      container: dataLabelsLayer,\n      doNotRemove: true,\n      label: 'labelGroup'\n    });\n    if (!dataLabelContainerDummy) {\n      dataLabelContainer = dataSet.addContainer('dataLabelContainer', dataLabelContainer);\n    }\n\n    targetContainer = animationManager.setAnimation({\n      el: targetContainerDummy || 'group',\n      attr: {\n        name: 'target'\n      },\n      container: parentContainer,\n      doNotRemove: true,\n      component: dataSet,\n      label: 'group'\n    });\n    if (!targetContainerDummy) {\n      targetContainer = dataSet.addContainer('targetContainer', targetContainer);\n    }\n\n    /*\n    * Creating the shadow element container group for each plots if not present\n    * and attaching it its parent group.\n    */\n    shadowContainer = animationManager.setAnimation({\n      el: shadowContainerDummy || 'group',\n      attr: {\n        name: 'shadow'\n      },\n      component: dataSet,\n      container: parentContainer,\n      doNotRemove: true,\n      label: 'group'\n    });\n    if (!shadowContainerDummy) {\n      // Always sending the shadow group to the back of the plots group.\n      shadowContainer = dataSet.addContainer('shadowContainer', shadowContainer.toBack());\n      if (!visible) {\n        shadowContainer.hide();\n      }\n    }\n\n    shadowTargetContainer = animationManager.setAnimation({\n      el: shadowTargetContainerDummy || 'group',\n      attr: {\n        name: 'shadow'\n      },\n      component: dataSet,\n      container: parentContainer,\n      doNotRemove: true,\n      label: 'group'\n    });\n    if (!shadowTargetContainerDummy) {\n      // Always sending the shadow group to the back of the plots group.\n      shadowTargetContainer = dataSet.addContainer('shadowTargetContainer', shadowTargetContainer.toBack());\n      if (!visible) {\n        shadowTargetContainer.hide();\n      }\n    }\n\n    smartLabel.setStyle(style);\n\n    // Create plot elements.\n    for (i = 0; i < 1; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n      setValue = config.setValue;\n\n      (setValue < 0) && (isNegative = true);\n\n      setLink = config.setLink;\n      colorArr = config.colorArr;\n\n      // isNewElem = false;\n      isNewTargetElem = false;\n\n      // Creating the data structure if not present for storing the graphics elements.\n      if (!dataObj.graphics) {\n        dataStore[i].graphics = {};\n      }\n\n      displayValue = config.displayValue;\n\n      if (!chart.isHorizontal) {\n        initialColumnWidth = (conf.plotFillPercent / 100) * canvasWidth;\n\n        xPos = (mathAbs(canvasLeft + canvasRight) / 2) - (initialColumnWidth / 2);\n\n        if (conf.plotAsDot) {\n          yPos = scale.getPixel(setValue) - (initialColumnWidth / 2);\n          height = initialColumnWidth;\n        } else {\n          conf.base = base = lowerLimit && (lowerLimit <= setValue) &&\n                                (scale.config.axisRange.min >= 0) ? lowerLimit : 0;\n\n          yPos = isNegative ? scale.getPixel(0) : scale.getPixel(setValue);\n\n          height = isNegative ? scale.getPixel(setValue) - scale.getPixel(0)\n            : scale.getPixel(lowerLimit && (lowerLimit <= setValue) &&\n                            (scale.config.axisRange.min >= 0) ? lowerLimit : 0) - yPos;\n        }\n\n        crispBox = R.crispBound(xPos, yPos, initialColumnWidth, height, plotBorderThickness);\n        xPos = crispBox.x;\n        yPos = crispBox.y;\n        columnWidth = crispBox.width;\n        height = crispBox.height;\n\n        // Setting the final tooltext.\n        toolText = config.toolText === BLANK ? config.toolTipValue : config.toolText;\n        plotBorderDashStyle = config.plotBorderDashStyle;\n\n        /*\n        * If animation is inactive then ybase position and heightBase of the plots is set to the final\n        * values.\n        */\n        // Setting the attributes for plot drawing.\n        attr = {\n          x: xPos,\n          y: yPos,\n          width: columnWidth,\n          height: height || 1,\n          r: plotRadius,\n          fill: toRaphaelColor(colorArr[0]),\n          stroke: toRaphaelColor(colorArr[1]),\n          'stroke-width': plotBorderThickness,\n          'stroke-dasharray': plotBorderDashStyle,\n          'stroke-linejoin': miterStr,\n          'visibility': visible\n        };\n\n        // todo- remove _ to make it public\n        dataObj._xPos = xPos;\n        dataObj._yPos = yPos + height;\n        dataObj._height = height;\n        dataObj._width = columnWidth;\n\n        if (setValue !== null) {\n          dataObj.graphics.element && dataObj.graphics.element.show();\n\n          if (setLink || showTooltip) {\n            // Fix for touch devices.\n            if (height < HTP) {\n              yPos -= (HTP - height) / 2;\n              height = HTP;\n            }\n          }\n        }\n        /*\n        * If the data plots are not present then they are\n        * created, else only attributes are set for the\n        * existing plots.\n        */\n        config.elemCreated = (dataObj.graphics.element !== UNDEF);\n        if (setValue) {\n          setElement = dataObj.graphics.element = animationManager.setAnimation({\n            el: dataObj.graphics.element || 'rect',\n            attr: attr,\n            container: container,\n            component: dataSet,\n            label: 'plotRect'\n          });\n        } else {\n          dataObj.graphics.element && animationManager.setAnimation({\n            el: dataObj.graphics.element,\n            label: 'plotRect',\n            doNotRemove: true,\n            callback: hideFn,\n            component: dataSet\n          });\n        }\n\n        setElement && setElement.shadow({opacity: showShadow}, shadowContainer)\n          .data('BBox', crispBox);\n        // Draw target element\n        if (config.target) {\n          toolText = config.toolTipValueTarget;\n\n          targetLength = (conf.targetFillPercent / 100) * canvasWidth;\n\n          startX = ((canvasLeft + canvasRight) / 2) - (targetLength / 2);\n          endX = startX + targetLength;\n          startY = endY = scale.getPixel(config.target);\n\n          targetPath = [M, startX, startY, L, endX, endY];\n\n          targetAttr = {\n            stroke: conf.targetColor,\n            'stroke-width': conf.targetThickness,\n            'stroke-linecap': conf.targetCapStyle,\n            path: targetPath,\n            'shape-rendering': DECIDE_CRISPENING[(3 < 1)]\n          };\n          dataObj.graphics.targetElement && dataObj.graphics.targetElement.show();\n        }\n\n        isNewTargetElem = dataObj.graphics.targetElement === UNDEF;\n        targetElement = dataObj.graphics.targetElement = animationManager.setAnimation({\n          el: dataObj.graphics.targetElement || 'path',\n          attr: targetAttr,\n          container: targetContainer,\n          component: dataSet,\n          doNotRemove: true,\n          callback: config.target ? stubFN : hideFn,\n          label: 'path'\n        });\n\n        lineHeight = parseInt(style.lineHeight, 10);\n\n        yPos = lineHeight > heightUsed ? (chartConfig.height - chartConfig.marginBottom - heightUsed) +\n                            lineHeight / 2 : chartConfig.height - chartConfig.marginBottom - lineHeight / 2;\n        yPos -= chartConfig.borderWidth;\n        yPos -= ((chart._manageActionBarSpace &&\n                        chart._manageActionBarSpace(config.availableHeight * 0.225)) || {}).bottom;\n\n        if (caption.config.isOnTop === 0) {\n          yPos -= captionHeight + subCaptionHeight + captionPadding;\n        }\n\n        // Draw Label\n        if ((displayValue !== BLANKSTRING) && (displayValue !== UNDEF) && conf.showValue) {\n          dataLabelObj = smartLabel.getSmartText(displayValue, chartConfig.width, heightUsed);\n          displayValue = dataLabelObj.text;\n          dataLabelTooltip = dataLabelObj.tooltext || BLANKSTRING;\n          labelAttr = {\n            text: displayValue,\n            'text-anchor': POSITION_MIDDLE,\n            x: canvasWidth / 2 + canvasLeft,\n            y: yPos,\n            'vertical-align': POSITION_MIDDLE,\n            fill: style.color,\n            direction: config.textDirection,\n            'text-bound': [style.backgroundColor, style.borderColor,\n              style.borderThickness, style.borderPadding,\n              style.borderRadius, style.borderDash]\n          };\n          dataObj.graphics.label && dataObj.graphics.label.show();\n        }\n\n        dataObj.graphics.label = animationManager.setAnimation({\n          el: dataObj.graphics.label || 'text',\n          attr: labelAttr,\n          component: dataSet,\n          container: dataLabelContainer,\n          doNotRemove: true,\n          callback: !(!displayValue) && conf.showValue ? stubFN : hideFn,\n          label: 'text'\n        });\n\n        // Adjusting the chart label if goes out side the chart area\n        // we try to keep the label inside viewport\n        labelBBox = dataObj.graphics.label.getBBox();\n        if (labelBBox.x + chartConfig.marginLeft < 0) {\n          labelWidth = labelBBox.width - chartConfig.marginLeft;\n          if (chartConfig.width < labelWidth) {\n            labelWidth = chartConfig.width - chartConfig.marginLeft;\n          }\n          labelAttr.x = labelWidth / 2;\n          animationManager.setAnimation({\n            el: dataObj.graphics.label,\n            attr: labelAttr,\n            component: dataSet,\n            doNotRemove: true,\n            callback: !(!displayValue) && conf.showValue ? stubFN : hideFn,\n            label: 'text'\n          });\n        }\n      } else {\n        height = (conf.plotFillPercent / 100) * canvasHeight;\n\n        yPos = (mathAbs(canvasTop + canvasBottom) / 2) - (height / 2);\n\n        if (conf.plotAsDot) {\n          xPos = scale.getPixel(setValue) - (height / 2);\n          initialColumnWidth = height;\n        } else {\n          base = lowerLimit && (lowerLimit <= setValue) &&\n                                (scale.config.axisRange.min >= 0) ? lowerLimit : 0;\n\n          xPos = isNegative ? scale.getPixel(setValue) : scale.getPixel(base);\n\n          initialColumnWidth = isNegative ? scale.getPixel(0) - scale.getPixel(setValue)\n            : scale.getPixel(setValue) - scale.getPixel(base);\n        }\n\n        crispBox = R.crispBound(xPos, yPos, initialColumnWidth, height, plotBorderThickness);\n        xPos = crispBox.x;\n        yPos = crispBox.y;\n        columnWidth = crispBox.width;\n        height = crispBox.height;\n\n        // Setting the final tooltext.\n        toolText = config.toolText === BLANK ? config.toolTipValue : config.toolText;\n        plotBorderDashStyle = config.plotBorderDashStyle;\n\n        // Setting the attributes for plot drawing.\n        attr = {\n          x: xPos,\n          y: yPos,\n          width: columnWidth || 1,\n          height: height,\n          r: plotRadius,\n          fill: toRaphaelColor(colorArr[0]),\n          stroke: toRaphaelColor(colorArr[1]),\n          'stroke-width': plotBorderThickness,\n          'stroke-dasharray': plotBorderDashStyle,\n          'stroke-linejoin': miterStr,\n          'visibility': visible\n        };\n\n        if (setValue !== null) {\n          dataObj.graphics.element && dataObj.graphics.element.show();\n          if (setLink || showTooltip) {\n            // Fix for touch devices.\n            if (height < HTP) {\n              yPos -= (HTP - height) / 2;\n              height = HTP;\n            }\n          }\n        }\n        /*\n        * If the data plots are not present then they are created,\n        * else only attributes are set for the\n        * existing plots.\n        */\n        config.elemCreated = (dataObj.graphics.element !== UNDEF);\n\n        if (setValue) {\n          setElement = dataObj.graphics.element = animationManager.setAnimation({\n            el: dataObj.graphics.element || 'rect',\n            attr: attr,\n            container: container,\n            component: dataSet,\n            label: 'plotRect'\n          });\n        } else {\n          dataObj.graphics.element && animationManager.setAnimation({\n            el: dataObj.graphics.element,\n            component: dataSet,\n            doNotRemove: true,\n            callback: hideFn,\n            label: 'plotRect'\n          });\n        }\n        setElement && setElement\n          .shadow({opacity: showShadow}, shadowContainer)\n          .data('BBox', crispBox);\n\n        // Draw target element\n        if (config.target) {\n          toolText = config.toolTipValueTarget;\n\n          targetLength = (conf.targetFillPercent / 100) * canvasHeight;\n          startX = endX = scale.getPixel(config.target);\n\n          startY = ((canvasTop + canvasBottom) / 2) - (targetLength / 2);\n          endY = startY + targetLength;\n\n          targetPath = [M, startX, startY, L, endX, endY];\n\n          targetAttr = {\n            stroke: conf.targetColor,\n            'stroke-width': conf.targetThickness,\n            'stroke-linecap': conf.targetCapStyle,\n            path: targetPath,\n            'shape-rendering': DECIDE_CRISPENING[(3 < 1)]\n          };\n          dataObj.graphics.targetElement && dataObj.graphics.targetElement.show();\n        }\n\n        isNewTargetElem = dataObj.graphics.targetElement === UNDEF;\n        targetElement = dataObj.graphics.targetElement = animationManager.setAnimation({\n          el: dataObj.graphics.targetElement || 'path',\n          attr: targetAttr,\n          container: targetContainer,\n          component: dataSet,\n          doNotRemove: true,\n          callback: config.target ? stubFN : hideFn,\n          label: 'path'\n        });\n        config.target && (setElement = dataObj.graphics.targetElement);\n\n        lineHeight = parseInt(style.lineHeight, 10);\n\n        yPos = (canvasTop + canvasHeight) * 0.5;\n\n        // Draw Label\n        if ((displayValue !== BLANKSTRING) && (displayValue !== UNDEF) && conf.showValue) {\n          dataLabelObj = smartLabel.getSmartText(displayValue, conf.widthUsed, chartConfig.height);\n          displayValue = dataLabelObj.text;\n          dataLabelTooltip = dataLabelObj.tooltext;\n          labelAttr = {\n            text: displayValue,\n            'text-anchor': POSITION_START,\n            x: canvasRight + conf.valuePadding + 2,\n            y: yPos,\n            'vertical-align': POSITION_TOP,\n            fill: style.color,\n            direction: config.textDirection,\n            'text-bound': [style.backgroundColor, style.borderColor,\n              style.borderThickness, style.borderPadding,\n              style.borderRadius, style.borderDash]\n          };\n          dataObj.graphics.label && dataObj.graphics.label.show();\n        }\n\n        dataObj.graphics.label = animationManager.setAnimation({\n          el: dataObj.graphics.label || 'text',\n          attr: labelAttr,\n          component: dataSet,\n          container: dataLabelContainer,\n          doNotRemove: true,\n          callback: !(!displayValue) && conf.showValue ? stubFN : hideFn,\n          label: 'text'\n        });\n        // Adjusting the chart label if goes out side the chart area\n        // we try to keep the label inside viewport\n        labelBBox = dataObj.graphics.label.getBBox();\n        if (labelBBox.x + chartConfig.marginLeft < 0) {\n          labelWidth = labelBBox.width - chartConfig.marginLeft;\n          if (chartConfig.width < labelWidth) {\n            labelWidth = chartConfig.width - chartConfig.marginLeft;\n          }\n          labelAttr.x = labelWidth / 2;\n\n          animationManager.setAnimation({\n            el: dataObj.graphics.label,\n            attr: labelAttr,\n            component: dataSet,\n            doNotRemove: true,\n            callback: !(!displayValue) && conf.showValue ? stubFN : hideFn,\n            label: 'text'\n          });\n        }\n      }\n      eventArguments = {\n        showValue: conf.showValue,\n        plotAsDot: conf.plotAsDot,\n        plotFillPercent: conf.plotFillPercent,\n        plotFillColor: conf.plotColor,\n        plotFillAlpha: conf.plotFillAlpha,\n        showPlotBorder: conf.showplotborder,\n        plotBorderColor: conf.plotBorderColor,\n        plotBorderThickness: conf.plotBorderThickness,\n        plotBorderAlpha: conf.plotBorderAlpha,\n        target: config.target,\n        targetColor: conf.rawTargetColor,\n        targetThickness: conf.targetThickness,\n        targetFillPercent: conf.targetFillPercent,\n        targetCapStyle: conf.targetCapStyle\n      };\n      if (dataObj.graphics.element) {\n        dataObj.graphics.element\n          .data(showHoverEffectStr, showHoverEffect)\n          .data(SETROLLOVERATTR, config.setPlotRolloverAttr || {})\n          .data(SETROLLOUTATTR, config.setPlotRolloutAttr || {})\n          .data(EVENTARGS, eventArguments);\n        if (!config.elemCreated) {\n          dataObj.graphics.element\n            .on('fc-click', clickFunc)\n            .hover(\n              rolloverResponseSetter(dataObj.graphics.element),\n              rolloutResponseSetter(dataObj.graphics.element)\n            );\n        }\n        if (showTooltip) {\n          toolTipController.enableToolTip(targetElement, toolText);\n          toolTipController.enableToolTip(dataObj.graphics.element, config.toolText);\n          toolTipController.enableToolTip(dataObj.graphics.label, dataLabelTooltip);\n        } else {\n          toolTipController.disableToolTip(targetElement);\n          toolTipController.disableToolTip(dataObj.graphics.element);\n          toolTipController.disableToolTip(dataObj.graphics.label);\n        }\n      } else if (showTooltip && (setValue === 0 || setValue === null)) {\n        toolTipController.enableToolTip(targetElement, toolText);\n        toolTipController.enableToolTip(dataObj.graphics.label, dataLabelTooltip);\n      }\n\n      if (isNewTargetElem) {\n        targetElement\n          .on('fc-click', clickFunc)\n          .hover(\n            rolloverResponseSetter(targetElement),\n            rolloutResponseSetter(targetElement)\n          );\n      }\n\n      targetElement\n        .shadow({opacity: showShadow}, shadowContainer)\n        .data('BBox', crispBox)\n        .data(EVENTARGS, eventArguments)\n        .data(GROUPID, groupId)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, config.tagetHoverAttr)\n        .data(SETROLLOUTATTR, config.targetOutAttr);\n    }\n  }\n\n  /**\n   * Calculates data limit of dataset\n   * @return {Object} maximum, minimum limit\n   */\n  getDataLimits () {\n    var dataSet = this,\n      config = dataSet.config,\n      pointerArr = dataSet.pointerArr && dataSet.pointerArr.pointer,\n      colorRange = dataSet.getFromEnv('chart').getFromEnv('dataSource').colorrange,\n      colorArr = colorRange && colorRange.color,\n      length = pointerArr && pointerArr.length,\n      i,\n      upperLimit = config.upperLimit,\n      lowerLimit = config.lowerLimit,\n      maxColorRangeVal,\n      minColorRangeVal,\n      max = config.maxValue,\n      min = config.minValue;\n\n    length = colorArr && colorArr.length;\n    // finding max min amongst the color range value\n    // but it has a lower priority than upperlimit and lowerlimit\n    // set by the user.\n    for (i = 0; i < length; i++) {\n      maxColorRangeVal = Number(colorArr[i].maxvalue);\n      minColorRangeVal = Number(colorArr[i].minvalue);\n\n      upperLimit && (maxColorRangeVal > upperLimit) && (maxColorRangeVal = upperLimit);\n      lowerLimit && (minColorRangeVal < lowerLimit) && (minColorRangeVal = lowerLimit);\n\n      max = mathMax(max, maxColorRangeVal);\n      min = mathMin(lowerLimit, minColorRangeVal);\n    }\n\n    return {\n      forceMin: true,\n      forceMax: true,\n      max: max,\n      min: min\n    };\n  }\n}\nexport default BulletDataset;\n","import { MIDDLESTR, FINALSTR, INITIALSTR } from '@fusioncharts/core/src/lib';\n\nvar fadeEffect = [{\n  initialAttr: function () {\n    return {opacity: 0};\n  },\n  finalAttr: function () {\n    return {opacity: 1};\n  }\n}];\n\nexport default {\n  'initial.dataset.bullet': function () {\n    var component = this,\n      conf = component.config,\n      chart = component.getFromEnv('chart'),\n      scale = component.getFromEnv('scale'),\n      yMax = scale.max,\n      yMin = scale.min,\n      isAllPositiveZero = yMax > 0 && yMin >= 0,\n      isAllNegativeZero = yMax <= 0 && yMin < 0,\n      yBase = isAllNegativeZero ? yMax : isAllPositiveZero ? yMin : 0,\n      yBasePos = scale.yBasePos = scale.getPixel(yBase);\n    return {\n      'plotRect.appearing': function () {\n        var isHorizontal = chart.isHorizontal,\n          attr;\n\n        if (!conf.plotAsDot) {\n          yBasePos = scale.getPixel(conf.base);\n        }\n\n        if (isHorizontal) {\n          attr = {\n            width: 0\n          };\n        } else {\n          attr = {\n            height: 0,\n            y: yBasePos\n          };\n        }\n        return [{\n          initialAttr: function () {\n            return attr;\n          },\n          slot: 'middle'\n        }];\n      },\n      'plotRect.updating': null,\n      'path.appearing': function () {\n        fadeEffect[0].slot = MIDDLESTR;\n        return fadeEffect;\n      },\n      'path.updating': null,\n      'text.appearing': function () {\n        fadeEffect[0].slot = FINALSTR;\n        return fadeEffect;\n      },\n      'text.updating': null,\n      'labelGroup.appearing': function () {\n        fadeEffect[0].slot = FINALSTR;\n        return fadeEffect;\n      },\n      'labelGroup.updating': null,\n      'backgroundRect.appearing': function () {\n        fadeEffect[0].slot = INITIALSTR;\n        return fadeEffect;\n      },\n      'backgroundRect.updating': null\n    };\n  }\n};\n","import { FINALSTR } from '@fusioncharts/core/src/lib';\n\nvar fadeEffect = [{\n  initialAttr: function () {\n    return {opacity: 0};\n  },\n  finalAttr: function () {\n    return {opacity: 1};\n  }\n}];\n\nexport default {\n  'initial.dataset.led': function () {\n    var component = this,\n      conf = component.config,\n      chart = component.getFromEnv('chart'),\n      chartConfig = chart.config,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      canvasHeight = chartConfig.canvasHeight,\n      canvasWidth = chartConfig.canvasWidth;\n    return {\n      'plotRect.appearing': function () {\n        var attr,\n          isAxisReverse = conf.isAxisReverse,\n          isHorizontal = conf.isHorizontal;\n\n        if (isAxisReverse && !isHorizontal) {\n          attr = {\n            y: canvasTop,\n            height: canvasHeight\n          };\n        } else if (!isAxisReverse && !isHorizontal) {\n          attr = {\n            height: canvasHeight\n          };\n        } else if (!isAxisReverse && isHorizontal) {\n          attr = {\n            x: canvasLeft,\n            width: canvasWidth\n          };\n        } else if (isAxisReverse && isHorizontal) {\n          attr = {\n            width: canvasWidth\n          };\n        }\n\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'initial'\n        }, {\n          initialAttr: attr,\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'middle'\n        }];\n      },\n      'plotRect.updating': null,\n      'text.appearing': function () {\n        fadeEffect[0].slot = FINALSTR;\n        return fadeEffect;\n      },\n      'text.updating': null,\n      'plotBackground.appearing': function () {\n        return [Object.assign({}, fadeEffect[0], {slot: 'initial'})];\n      },\n      'plotBackground.updating': null\n    };\n  }\n};\n","import Vled from '@fusioncharts/widgets/src/chart/vled';\nexport default Vled;\n","import Hlineargauge from '@fusioncharts/widgets/src/chart/hlineargauge';\nexport default Hlineargauge;\n","\nimport {\n  pluck,\n  getValidValue,\n  BLANK,\n  getDashStyle,\n  getFirstValue,\n  parseUnsafeString,\n  pluckNumber,\n  stableSort,\n  componentFactory,\n  datasetFactory,\n  convertColor\n} from '@fusioncharts/core/src/lib';\nimport ColorGradient from '@fusioncharts/core/src/color-utils/color-gradient';\nimport LinearGauge from '../_internal/lineargauge';\nimport HlineargaugeDataset from '../../dataset/hlineargauge';\nimport { _getData, _setData, _getDataForId, _setDataForId } from '../_internal/angular-hlinear-common';\n\nvar BLANKSTRING = BLANK,\n  FRIENDLY_NAME = 'Horizontal Linear Gauge',\n  DS_TYPE = 'hlineargauge',\n  BOTTOM = 'bottom',\n  TOP = 'top';\n\nclass Hlineargauge extends LinearGauge {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Hlineargauge';\n  }\n\n  constructor () {\n    super();\n    this.showRTvalue = false;\n    this.canvasPadding = false;\n\n    this.isHorizontal = true;\n    this.config.isAxisOpposite = false;\n    this.config.scalePosition = BOTTOM;\n    this.config.canBeScalePosition = TOP;\n    this.drawPlotlines = false;\n    this.drawPlotBands = false;\n    this.isAxisReverse = false;\n    this.minorTMNumber = 4;\n    this.isRealTime = true;\n    this.colorRange = true;\n    this.rtParserModify = true;\n    this.registerFactory('dataset', function (parent) {\n      let dataObj = parent.getFromEnv('dataSource'),\n        pointers = dataObj.pointers;\n\n      datasetFactory(parent, HlineargaugeDataset, 'dataset', 1, [pointers]);\n    }, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Hlineargauge';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = FRIENDLY_NAME;\n    config.hasLegend = false;\n    config.defaultDatasetType = DS_TYPE;\n    config.skipCanvasDrawing = true;\n  }\n\n  configure (dataObj) {\n    super.configure(dataObj);\n    let iapi = this,\n      jsonData = iapi.getFromEnv('dataSource'),\n      colorrange = jsonData.colorrange;\n    // If color array is present and contains non-zero color elements\n    if (colorrange && colorrange.color && colorrange.color.length) {\n      componentFactory(iapi, ColorGradient, 'colorRange', 1, [{\n        colorRange: colorrange,\n        numberFormatter: iapi.getFromEnv('number-formatter')\n      }]);\n      iapi.addToEnv('colorRange', iapi.getChildren('colorRange')[0]);\n    } else {\n      iapi.deleteFromEnv('colorRange');\n    }\n  }\n\n  _configueTrendPoints () {\n    var iapi = this,\n      jsonData = iapi.getFromEnv('dataSource'),\n      config = iapi.config,\n      style = config.style,\n      trendArray = jsonData.trendpoints && jsonData.trendpoints.point,\n      trendPointObj,\n      i,\n      scale = iapi.getFromEnv('scale'),\n      scaleConfig = scale.config,\n      axisRange = scaleConfig.axisRange,\n      max = axisRange.max,\n      min = axisRange.min,\n      scaleFactor = scaleConfig.scaleFactor || 1,\n      colorM = iapi.getFromEnv('color-manager'),\n      startValue,\n      endValue,\n      isTrendZone,\n      trendPointConfig = config.trendPointConfig = [],\n      chartAttrs = jsonData.chart,\n      length = trendArray.length;\n\n    style.trendStyle = {\n      fontFamily: style.outCanfontFamily,\n      color: style.outCancolor,\n      fontSize: style.outCanfontSize\n    };\n\n    for (i = 0; i < length; i++) {\n      trendPointObj = trendArray[i];\n      startValue = pluckNumber(trendPointObj.startvalue, trendPointObj.value);\n      endValue = pluckNumber(trendPointObj.endvalue, startValue);\n      isTrendZone = startValue !== endValue;\n\n      if (startValue <= max && startValue >= min && endValue <= max && endValue >= min) {\n        trendPointConfig.push({\n          startValue: startValue,\n          endValue: endValue,\n          tooltext: getValidValue(parseUnsafeString(trendPointObj.markertooltext, false)),\n          displayValue: getValidValue(parseUnsafeString(trendPointObj.displayvalue),\n            isTrendZone ? BLANKSTRING : iapi.getFromEnv('number-formatter').scale(startValue)),\n          showOnTop: pluckNumber(trendPointObj.showontop, chartAttrs.ticksbelowgauge, 1),\n          color: pluck(trendPointObj.color, colorM.getColor('trendLightColor')),\n          textColor: trendPointObj.color,\n          alpha: pluckNumber(trendPointObj.alpha, 99),\n          thickness: pluckNumber(trendPointObj.thickness, 1),\n          dashStyle: Number(trendPointObj.dashed) ? getDashStyle(trendPointObj.dashlen || 2, trendPointObj.dashgap || 2) : BLANK,\n          // Marker properties\n          useMarker: pluckNumber(trendPointObj.usemarker, 0),\n          markerColor: convertColor(pluck(trendPointObj.markercolor,\n            trendPointObj.color, colorM.getColor('trendLightColor')), 100),\n          markerBorderColor: convertColor(pluck(trendPointObj.markerbordercolor,\n            trendPointObj.bordercolor, colorM.getColor('trendDarkColor')), 100),\n          markerRadius: pluckNumber(pluckNumber(trendPointObj.markerradius) *\n            scaleFactor, 5),\n          markerToolText: getFirstValue(trendPointObj.markertooltext),\n          trendValueDistance: pluckNumber(pluckNumber(trendPointObj.trendvaluedistance) *\n            scaleFactor, axisRange.tickInterval),\n          isTrendZone: isTrendZone\n        });\n      }\n    }\n\n    // Sorting the trend point array because the labels have to\n    // be space managed in case of hlineargauge.\n    stableSort && stableSort(config.trendPointConfig, function (a, b) {\n      return (a.startValue - b.startValue);\n    });\n  }\n\n  _getData (index, callback) {\n    return _getData.call(this, index, callback);\n  }\n\n  _setData (dialIndex, value) {\n    _setData.call(this, dialIndex, value);\n  }\n\n  _getDataForId (id, callback) {\n    return _getDataForId.call(this, id, callback);\n  }\n\n  _setDataForId (id, value) {\n    _setDataForId.call(this, id, value);\n  }\n}\nexport default Hlineargauge;\n","\nimport { parseUnsafeString, getValidValue, extend2, getComparatorFN, HUNDREDSTRING } from '../lib';\nimport { ComponentInterface } from '../component-interface';\n\nlet sortColorFN = getComparatorFN(true, 'minvalue'),\n  UNDEF;\n\n// Class for managing gradient color range\nclass ColorGradient extends ComponentInterface {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'colorComponent';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'colorGradient';\n  }\n  configure (options) {\n    var cm = this,\n      oldColorArr = cm.colorArr,\n      colorManager = cm.getFromEnv('color-manager'),\n      numberFormatter = cm.getFromEnv('number-formatter'),\n      colorArr = options.colorRange && extend2({}, options.colorRange).color,\n      defuPaletteOptions = colorManager.getColor('paletteColors'),\n      defaultObj,\n      colorObj,\n      colorObjNext,\n      i,\n      l,\n      temp,\n      newColorRange,\n      j,\n      newMin,\n      nextIndex;\n\n    // removing due to defaultAsigned retaining false after update\n    delete cm.defaultAsigned;\n\n    if (!(defuPaletteOptions instanceof Array)) {\n      defuPaletteOptions = colorManager.getPlotColor(0);\n    }\n    if (colorArr && colorArr.length > 0) {\n      l = colorArr.length - 1;\n      // validate all color object\n      // remove invalid obj\n      for (i = l; i >= 0; i -= 1) {\n        colorObj = colorArr[i];\n        if (colorObj) {\n          colorObj.minvalue = numberFormatter.getCleanValue(colorObj.minvalue);\n          colorObj.maxvalue = numberFormatter.getCleanValue(colorObj.maxvalue);\n\n          // for not specified min/max value\n          if (colorObj.minvalue === null) {\n            if (colorObj.maxvalue !== null) {\n              colorObj.minvalue = colorObj.maxvalue;\n            } else if (i !== l) { // remove invalid color range\n              colorArr.splice(i, 1);\n            }\n          }\n\n          if (colorObj.label !== UNDEF) {\n            colorObj.label = parseUnsafeString(colorObj.label);\n          }\n\n          if (colorObj.name !== UNDEF) {\n            colorObj.name = parseUnsafeString(colorObj.name);\n          }\n\n          if (colorObj.maxvalue !== null) {\n            if (colorObj.minvalue > colorObj.maxvalue) { // alter the value\n              temp = colorObj.minvalue;\n              colorObj.minvalue = colorObj.maxvalue;\n              colorObj.maxvalue = temp;\n            }\n          }\n        }\n      }\n      // now sort colors\n      colorArr.sort(sortColorFN);\n\n      // Put the default Color if color not given in color Obj\n      if (!colorArr[0].code) {\n        colorArr[0].code = defuPaletteOptions[0];\n      }\n      // Put the default Alpha if Alpha not given in color Obj\n      if (getValidValue(colorArr[0].alpha) === UNDEF) {\n        colorArr[0].alpha = HUNDREDSTRING;\n      }\n      // now devide overlaping color ranges\n      for (i = 0, l = colorArr.length - 1; i < l; i += 1) {\n        nextIndex = i + 1;\n        colorObj = colorArr[i];\n        colorObjNext = colorArr[nextIndex];\n        // Put the default Color if color not given in color Obj\n        if (!colorObjNext.code) {\n          colorObjNext.code = defuPaletteOptions[nextIndex];\n        }\n        // Put the default Alpha if Alpha not given in color Obj\n        if (getValidValue(colorObjNext.alpha) === UNDEF) {\n          colorObjNext.alpha = HUNDREDSTRING;\n        }\n        // if maxColor is null\n        if (colorObj.maxvalue === null) {\n          colorObj.maxvalue = colorObjNext.minvalue;\n        }\n\n        if (colorObj.maxvalue > colorObjNext.minvalue) {\n          if (colorObj.maxvalue > colorObjNext.maxvalue) {\n            newColorRange = extend2(colorObj);\n            newColorRange.maxvalue = colorObj.maxvalue;\n            newMin = newColorRange.minvalue = colorObjNext.maxvalue;\n            // insert newColorRange into proper position\n            j = i + 2;\n            while (j < l && colorArr[j].minvalue < newMin) {\n              j += 1;\n            }\n            colorArr.splice(j, 0, newColorRange);\n            l += 1;// legth increased\n          }\n          colorObj.maxvalue = colorObjNext.minvalue;\n        }\n      }\n      // if last color has null maxvalue\n      colorObj = colorArr[i];\n      // if maxColor is null\n      if (colorObj.maxvalue === null) {\n        colorObj.maxvalue = colorObj.minvalue;\n      }\n    }\n\n    // If no color array is present, use default color array\n    if (!((colorArr && colorArr.length))) {\n      if (!defaultObj) {\n        defaultObj = {\n          code: 'CCCCCC',\n          alpha: '100',\n          bordercolor: '000000',\n          borderalpha: '100'\n        };\n      }\n      colorArr = [defaultObj];\n      cm.defaultAsigned = true;\n    }\n\n    cm.colorArr = colorArr || oldColorArr;\n  }\n  getColorObj (value) {\n    var colorArr = this.colorArr, i = 0, l = colorArr.length, colorObj,\n      nextColorObj,\n      returnedObj = {};\n    for (; i < l; i += 1) {\n      returnedObj.index = i;\n      colorObj = colorArr[i];\n      nextColorObj = colorArr[i + 1];\n      if (value < colorObj.minvalue) {\n        returnedObj.nextObj = colorObj;\n        return returnedObj;\n      }\n      if (value >= colorObj.minvalue && value <= colorObj.maxvalue) {\n        returnedObj.colorObj = colorObj;\n        if (nextColorObj && value === nextColorObj.minvalue) { // at the border of two color point\n          returnedObj.nextObj = nextColorObj;\n          returnedObj.isOnMeetPoint = true;\n        }\n        return returnedObj;\n      }\n      returnedObj.prevObj = colorObj;\n    }\n    returnedObj.index = i - 1;\n    return returnedObj;\n  }\n  getColorRangeArr (_minValue, _maxValue) {\n    var temp, colorArr = this.colorArr, i, l, minColorObj, lastMaxValue,\n      maxColorObj, returnArr = [], colorObj, lastColorObj,\n      minValue = _minValue,\n      maxValue = _maxValue;\n    if (!this.defaultAsigned) {\n      if (minValue > maxValue) { // Swap\n        temp = minValue;\n        minValue = maxValue;\n        maxValue = temp;\n      }\n      if (minValue < maxValue) {\n        minColorObj = this.getColorObj(minValue);\n        maxColorObj = this.getColorObj(maxValue);\n        if (minColorObj && maxColorObj) {\n          lastMaxValue = minValue;\n          i = minColorObj.index;\n          l = maxColorObj.index;\n          for (; i <= l; i += 1) {\n            colorObj = extend2({}, colorArr[i]);\n            if (colorObj.minvalue !== lastMaxValue) {\n              colorObj.minvalue = lastMaxValue;\n            }\n            returnArr.push(colorObj);\n            lastColorObj = colorObj;\n            lastMaxValue = colorObj.maxvalue;\n          }\n          lastColorObj.maxvalue = maxValue;\n        }\n      }\n    }\n    return returnArr;\n  }\n}\n\nexport default ColorGradient;\n","import Thermometer from '@fusioncharts/widgets/src/chart/thermometer';\nexport default Thermometer;\n","import {\n  pluck,\n  pluckNumber,\n  preDefStr,\n  HUNDREDSTRING,\n  defaultGaugePaletteOptions,\n  extend2,\n  convertColor,\n  getLightColor\n} from '@fusioncharts/core/src/lib';\nimport ThermometerDataset from '../../dataset/thermometer';\nimport datasetFactory from '../../factories/vled-dataset';\nimport LinearGauge from '../_internal/lineargauge';\n\nvar UNDEF,\n  gaugeFillColorStr = preDefStr.gaugeFillColorStr,\n  gaugeBorderColorStr = preDefStr.gaugeBorderColorStr,\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  FRIENDLY_NAME = 'Horizontal Linear Gauge',\n  THERMOMETER = 'thermometer',\n  EASE_OUT = 'easeOut',\n  RIGHT = 'right',\n  LEFT = 'left';\n\nclass Thermometer extends LinearGauge {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Thermometer';\n  }\n\n  constructor () {\n    super();\n    this.showRTvalue = false;\n    this.canvasPadding = false;\n    this.defaultPaletteOptions = extend2(extend2({}, defaultGaugePaletteOptions), {\n      gaugeBorderColor: ['545454', '60634E', '415D6F', '845001', '68001B'],\n      gaugeFillColor: ['999999', 'ADB68F', 'A2C4C8', 'FDB548', 'FF7CA0'],\n      periodColor: ['EEEEEE', 'ECEEE6', 'E6ECF0', 'FFF4E6', 'FFF2F5']\n    }, false, true);\n\n    this.isHorizontal = false;\n    this.config.isAxisOpposite = true;\n    this.config.scalePosition = RIGHT;\n    this.config.canBeScalePosition = LEFT;\n    this.hasCanvas = true;\n    this.drawPlotlines = false;\n    this.drawPlotBands = false;\n    this.isAxisReverse = false;\n    this.isRealTime = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Thermometer';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.alignCaptionWithCanvas = 1;\n    config.friendlyName = FRIENDLY_NAME;\n    config.hasLegend = false;\n    config.defaultDatasetType = THERMOMETER;\n    config.animationeffect = EASE_OUT;\n    config.skipCanvasDrawing = true;\n  }\n\n  _getData () {\n    var iapi = this,\n      dataset = iapi.getChildren('dataset');\n\n    if (dataset && dataset[0]) {\n      return dataset[0].config.value;\n    }\n  }\n\n  // todo: this function need to be removed once the flow is proper\n  _parseSpecialConfig () {\n    var iapi = this,\n      chartConfig = iapi.config,\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartOptions = dataObj.chart,\n      numberFormatter = iapi.getFromEnv('number-formatter'),\n      colorM = iapi.getFromEnv('color-manager'),\n      gaugeBorderAlpha;\n\n    chartConfig.use3DLighting = pluckNumber(chartOptions.use3dlighting, 1);\n    chartConfig.thmOriginX = pluckNumber(chartOptions.thmoriginx, chartOptions.gaugeoriginx);\n    chartConfig.thmOriginY = pluckNumber(chartOptions.thmoriginy, chartOptions.gaugeoriginy);\n    chartConfig.thmBulbRadius =\n              pluckNumber(numberFormatter.getCleanValue(chartOptions.thmbulbradius, true));\n    chartConfig.thmHeight = pluckNumber(numberFormatter.getCleanValue(pluckNumber(chartOptions.thmheight,\n      chartOptions.gaugeheight), true));\n\n    chartConfig.origW = pluckNumber(chartOptions.origw);\n    chartConfig.origH = pluckNumber(chartOptions.origh);\n\n    // set the falg whether the measurements are defined by user or not\n    chartConfig.xDefined = defined(chartConfig.thmOriginX);\n    chartConfig.yDefined = defined(chartConfig.thmOriginY);\n    chartConfig.rDefined = defined(chartConfig.thmBulbRadius);\n    chartConfig.hDefined = defined(chartConfig.thmHeight);\n\n    chartConfig.gaugeFillColor = pluck(chartOptions.gaugefillcolor, chartOptions.thmfillcolor,\n      colorM.getColor(gaugeFillColorStr));\n    chartConfig.gaugeFillAlpha = pluckNumber(chartOptions.gaugefillalpha,\n      chartOptions.thmfillalpha, HUNDREDSTRING);\n\n    // Gauge Border properties\n    chartConfig.showGaugeBorder = pluckNumber(chartOptions.showgaugeborder, 1);\n    gaugeBorderAlpha = chartConfig.showGaugeBorder ? pluckNumber(chartOptions.gaugeborderalpha, 40) : 0;\n    // We are using 40 for default alpha of Thermometer Gauge Border\n    chartConfig.gaugeBorderColor = convertColor(pluck(chartOptions.gaugebordercolor,\n      colorM.getColor(gaugeBorderColorStr)), gaugeBorderAlpha);\n    chartConfig.gaugeBorderThickness = pluckNumber(chartOptions.gaugeborderthickness, 1);\n\n    // Thermometer Glass color\n    chartConfig.gaugeContainerColor = pluck(chartOptions.thmglasscolor,\n      getLightColor(chartConfig.gaugeFillColor, 30));\n  }\n\n  allocatePosition () {\n    let iapi = this,\n      chartConfig = iapi.config,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasRight = chartConfig.canvasRight,\n      canvasTop = chartConfig.canvasTop,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasHeight = chartConfig.canvasHeight,\n      canvasBottom = chartConfig.canvasBottom;\n\n    // Setting macros for annotation\n    chartConfig.gaugeStartX = canvasLeft;\n    chartConfig.gaugeEndX = canvasRight;\n    chartConfig.gaugeStartY = canvasTop;\n    chartConfig.gaugeEndY = canvasBottom;\n    chartConfig.gaugeCenterX = canvasLeft + (canvasWidth * 0.5);\n    chartConfig.gaugeCenterY = canvasTop + (canvasHeight * 0.5);\n    chartConfig.gaugeRadius = canvasWidth * 0.5;\n  }\n\n  getDSdef () {\n    return ThermometerDataset;\n  }\n}\nexport default Thermometer;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  pluckNumber,\n  COMMASTRING,\n  preDefStr,\n  toRaphaelColor,\n  BLANKSTRING,\n  convertColor,\n  getDarkColor,\n  getLightColor,\n  stubFN\n} from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport thermometerAnimation from './index.animation';\nimport CylinderThermometerBase from '../_internal/cylinderthermometerbase';\n\nvar configStr = preDefStr.configStr,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  EVENTARGS = 'eventArgs',\n  topLightGlowAlphaStr = '40,0',\n  topLightGlowRatioStr = '0,80',\n  topLightGlowRStr = '70%',\n  bulbBorderLightRStr = '50%',\n  bulbBorderLightAlphaStr = '0,50',\n  bulbBorderLightRatioStr = '78,30',\n  bulbTopLightAlphaStr = '60,0',\n  bulbTopLightRatioStr = '0,30',\n  bulbCenterLightAlphaStr = '80,0',\n  bulbCenterLightRatioStr = '0,70',\n  cylLeftLightAlphaStr = '50,0',\n  cylLeftLightRatioStr = '0,80',\n  cylRightLightAlphaStr = '50,0,0',\n  cylRightLightRatioStr = '0,40,60',\n\n  HUNDREDPERCENT = '100%',\n  zeroCommaHundredStr = '0,100',\n\n  M = 'M',\n  A = 'A',\n  L = 'L',\n  Z = 'Z',\n\n  cos50 = 0.643,\n  sin50 = 0.766,\n\n  win = window,\n  userAgent = win.navigator.userAgent,\n  isIE = /msie/i.test(userAgent) && !win.opera,\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')',\n\n  getScaleFactor = function (origWParam, origHParam, canvasWidth, canvasHeight) {\n    var scaleFactor,\n      origH = origHParam,\n      origW = origWParam;\n\n    origH = pluckNumber(origH, canvasHeight);\n    origW = pluckNumber(origW, canvasWidth);\n    if (!origH || !origW) {\n      scaleFactor = 1;\n    } else if ((origW / canvasWidth) === (origH / canvasHeight)) {\n      // Now, if the ratio of original width,height & stage width,height are same\n      // In this case, the transformation value would be the same, as the ratio\n      // of transformation of width and height is same.\n      scaleFactor = canvasWidth / origW;\n    } else {\n      // If the transformation factors are different, we do a constrained scaling\n      // We get the aspect whose delta is on the lower side.\n      scaleFactor = Math.min((canvasWidth / origW), (canvasHeight / origH));\n    }\n\n    return scaleFactor;\n  };\naddDep({\n  name: 'thermometerAnimation',\n  type: 'animationRule',\n  extension: thermometerAnimation\n});\n/**\n * Creates ThermometerDataset class\n */\nclass ThermometerDataset extends CylinderThermometerBase {\n  /**\n   * Constructor function for ThermometerDataset class\n   */\n  constructor () {\n    super();\n    this.addData = stubFN;\n    this.removeData = stubFN;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'thermometer';\n  }\n\n  /**\n   * Returns the type of the component\n   * @return {string} The type of the component, in this case a dataset.\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Manage space taken by plot\n   * @return {Object} returns dimension taken by plot (top, right, left, bottom)\n   */\n  _manageSpace () {\n    var ds = this,\n      dsConfig = ds.config,\n      chart = ds.getFromEnv('chart'),\n      chartConfig = chart.config,\n      chartWidth = chartConfig.width,\n      chartHeight = chartConfig.height,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasHeight = chartConfig.canvasHeight,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasRight = chartConfig.canvasRight,\n      canvasTop = chartConfig.canvasTop,\n      xDefined = chartConfig.xDefined,\n      yDefined = chartConfig.yDefined,\n      rDefined = chartConfig.rDefined,\n      hDefined = chartConfig.hDefined,\n      thmOriginX = chartConfig.thmOriginX,\n      thmOriginY = chartConfig.thmOriginY,\n      thmBulbRadius = chartConfig.thmBulbRadius,\n      thmHeight = chartConfig.thmHeight,\n      scaleFactor = getScaleFactor(chartConfig.origW, chartConfig.origH, chartWidth, chartHeight),\n      top = 0,\n      bottom = 0,\n      left = 0,\n      right = 0,\n      thmCylenderRight,\n      thmhalfWidth,\n      centerPos,\n      thmWidth,\n      bulbHeight,\n      measure,\n      canvasLeftShift;\n\n    // Recalculating the label font size in case of chart resize\n    chartConfig.dataLabelStyle.fontSize = this.computeFontSize(chartConfig.dataLabelStyle.fontSizeWithUnit);\n\n    // manage the space for the datalabels\n\n    measure = ds._getLabelSpace();\n    // canvasBottom += measure;\n    canvasHeight -= measure;\n    bottom += measure;\n\n    // manage the thermometer space\n\n    /* First calculate the radius */\n\n    // if Not defined the radius then calculate it.\n    if (!rDefined) {\n      thmBulbRadius = Math.min(canvasWidth / 2, pluckNumber(thmHeight, canvasHeight) * 0.13);\n      rDefined = true;\n    } else {\n      thmBulbRadius = thmBulbRadius * scaleFactor;\n    }\n\n    // store the effective radius\n    chartConfig.effectiveR = thmBulbRadius;\n\n    // bulbDiameter = thmBulbRadius * 2;\n    thmhalfWidth = thmBulbRadius * cos50;\n    thmWidth = 2 * thmhalfWidth;\n    bulbHeight = thmBulbRadius * (1 + sin50);\n\n    // add the space for the top glass effect\n    top += thmhalfWidth;\n    canvasTop += thmhalfWidth;\n    canvasHeight -= thmhalfWidth;\n    /* Calculate the x */\n\n    // if x is user defined\n    if (xDefined) {\n      thmOriginX = thmOriginX * scaleFactor;\n      canvasLeftShift = (thmOriginX - thmhalfWidth) - canvasLeft;\n    } else { // else, place the gauge at the center\n      centerPos = (canvasRight - canvasLeft) / 2;\n      // now as per the center position calculate the extra left gap\n      canvasLeftShift = (centerPos - thmhalfWidth);\n      // check whether we have space to put the gauge at center\n      thmCylenderRight = canvasLeftShift + thmWidth;\n      if (thmCylenderRight > canvasWidth) {\n        canvasLeftShift = canvasWidth - thmWidth;\n      }\n    }\n    left += canvasLeftShift;\n    canvasLeft += canvasLeftShift;\n    canvasWidth -= canvasLeftShift;\n\n    // to make the canvas width same as thermometer's cylinder width increase the right padding\n    right += (canvasWidth - thmWidth);\n\n    if (yDefined) {\n      thmOriginY = thmOriginY * scaleFactor;\n    }\n\n    if (!hDefined) { // if height is not defined\n      if (yDefined) { // if y is defined then adjust thermometer height is available space\n        thmHeight = thmOriginY - canvasTop;\n      } else {\n        thmHeight = Math.max(canvasHeight - bulbHeight, 3 * thmBulbRadius);\n        thmOriginY = canvasTop + thmHeight;\n      }\n    } else { // height is defined\n      thmHeight = thmHeight * scaleFactor;\n      if (yDefined) { // if both are defined, adjust the top to accomodate this\n        top += thmOriginY - thmHeight - canvasTop;\n      } else {\n        thmOriginY = canvasTop + thmHeight;\n      }\n    }\n    // finally adjust the bottom to accomodate y and height\n    bottom += (canvasTop + canvasHeight) - thmOriginY;\n    dsConfig.thmBulbRadius = thmBulbRadius;\n    dsConfig.thmHeight = thmHeight;\n    return {\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right\n    };\n  }\n  /**\n   * Draws plot\n   * @memberof ThermometerDataset\n   */\n  draw () {\n    var dataSet = this,\n      dsConfig = dataSet.config,\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      chart = dataSet.getFromEnv('chart'),\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n      trackerLayer = chart.getChildContainer('trackerGroup'),\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      scale = dataSet.getFromEnv('scale'),\n      parentContainer = chart.getChildContainer().plotGroup,\n      chartConfig = chart.get(configStr),\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      canvasHeight = chartConfig.canvasHeight,\n      r = chartConfig.effectiveR || 10,\n      cylinderWidthHalf = r * cos50,\n      use3DLighting = chartConfig.use3DLighting,\n      x = canvasLeft + cylinderWidthHalf,\n      y = canvasTop - cylinderWidthHalf,\n      h = canvasHeight,\n      canvasHorizontalDiff = Math.abs(chartConfig.width - chartConfig.canvasRight - canvasLeft),\n      ypos,\n      scaleTop = cylinderWidthHalf,\n      bulbCenterDistance = r * sin50,\n      scaleY = y + scaleTop,\n      y1 = scaleY + h,\n      y2 = y1 + bulbCenterDistance,\n      value = pluckNumber(dsConfig.value, scale.getLimit().min),\n      thmPos = scale.getPixel(value),\n      topRoundR = cylinderWidthHalf * 0.33,\n      y4 = y + topRoundR,\n      y6 = thmPos,\n      lCylWidthHalf = cylinderWidthHalf * 0.9,\n      topRoundRDistance = cylinderWidthHalf - topRoundR,\n      lR = r + lCylWidthHalf - cylinderWidthHalf,\n      x1 = x - cylinderWidthHalf,\n      x2 = x + cylinderWidthHalf,\n      x3 = x - topRoundRDistance,\n      x4 = x + topRoundRDistance,\n      lx1 = x - lCylWidthHalf,\n      lx2 = x + lCylWidthHalf,\n      l1Distance = cylinderWidthHalf * 0.6,\n      l1x = parseInt(x - l1Distance, 10),\n      l2x = x + (cylinderWidthHalf / 2),\n      ly = dsConfig.thmBaseY = y2 - Math.abs(Math.sqrt((lR * lR) - (lCylWidthHalf * lCylWidthHalf))),\n      containerDummy = dataSet.getContainer('container'),\n      fluidDummy = dataSet.getGraphicalElement('fluid'),\n      topLightGlowDummy = dataSet.getGraphicalElement('topLightGlow'),\n      topLightDummy = dataSet.getGraphicalElement('topLight'),\n      labelDummy = dataSet.getGraphicalElement('label'),\n      label,\n      dataLabelTooltext,\n      dataLabelObj,\n      container,\n      fluid,\n      topLightGlow,\n      topLight,\n      dataLabelContainerDummy = dataSet.getContainer('dataLabelContainer'),\n      canvasBorderElementDummy = dataSet.getGraphicalElement('canvasBorderElement'),\n      bulbBorderLightDummy = dataSet.getGraphicalElement('bulbBorderLight'),\n      bulbTopLightDummy = dataSet.getGraphicalElement('bulbTopLight'),\n      bulbCenterLightDummy = dataSet.getGraphicalElement('bulbCenterLight'),\n      trackerContainerDummy = dataSet.getContainer('trackerContainer'),\n      cylLeftLightDummy = dataSet.getGraphicalElement('cylLeftLight'),\n      cylRightLightDummy = dataSet.getGraphicalElement('cylRightLight'),\n      cylLeftLight1Dummy = dataSet.getGraphicalElement('cylLeftLight1'),\n      cylRightLight1Dummy = dataSet.getGraphicalElement('cylRightLight1'),\n      hotElementDummy = dataSet.getGraphicalElement('hotElement'),\n      dataLabelContainer,\n      canvasBorderElement,\n      bulbBorderLight,\n      bulbTopLight,\n      bulbCenterLight,\n      trackerContainer,\n      cylLeftLight,\n      cylRightLight,\n      cylLeftLight1,\n      cylRightLight1,\n      hotElement,\n      gaugeFillColor = getDarkColor(dsConfig.gaugeFillColor, use3DLighting ? 70 : 80),\n      gaugeFillAlpha = dsConfig.gaugeFillAlpha,\n      conColor = dsConfig.gaugeContainerColor,\n      darkConColor = getDarkColor(conColor, 80),\n      lightConColor = getLightColor(conColor, 80),\n      gaugeBorderThickness = dsConfig.gaugeBorderThickness,\n      gaugeBorderColor = dsConfig.gaugeBorderColor,\n      thPath,\n      bulbPathType1,\n      showHoverEffect = dsConfig.showHoverEffect,\n      plotFillHoverAlpha = dsConfig.plotFillHoverAlpha,\n      plotFillHoverColor = dsConfig.plotFillHoverColor,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      eventArgs,\n      style = chart.config.dataLabelStyle,\n      canvasBorderElementAttr,\n      topLightAttr,\n      hotElementAttr,\n      topLightGlowAttr,\n      bulbBorderLightAttr,\n      bulbTopLightAttr,\n      bulbCenterLightAttr,\n      cylLeftLightAttr,\n      cylRightLightAttr,\n      cylLeftLight1Attr,\n      cylRightLight1Attr,\n      fluidAttr = dsConfig.fluidAttr;\n\n    if (!fluidAttr) {\n      fluidAttr = dsConfig.fluidAttr = {};\n    }\n\n    if (showHoverEffect) {\n      fluidAttr.hover = {\n        fill: convertColor(getDarkColor(plotFillHoverColor, use3DLighting ? 70 : 80), plotFillHoverAlpha)\n      };\n    }\n\n    fluidAttr.out = {\n      fill: convertColor(gaugeFillColor, gaugeFillAlpha)\n    };\n\n    thPath = [M, x3, y, A, topRoundR, topRoundR, 0, 0, 0, x1, y4,\n      L, x1, y1, A, r, r, 0, 1, 0, x2, y1, L, x2, y4,\n      A, topRoundR, topRoundR, 0, 0, 0, x4, y, Z];\n\n    eventArgs = {\n      value: dsConfig.value,\n      displayValue: dsConfig.displayValue,\n      toolText: dsConfig.toolText,\n      thmFillColor: dsConfig.gaugeFillColor,\n      thmBulbRadius: dsConfig.thmBulbRadius,\n      thmHeight: dsConfig.thmHeight,\n      thmGlassColor: dsConfig.gaugeContainerColor,\n      gaugeFillColor: dsConfig.gaugeFillColor,\n      gaugeFillAlpha: dsConfig.gaugeFillAlpha,\n      showGaugeBorder: dsConfig.showGaugeBorder,\n      gaugeBorderColor: dsConfig.rawGaugeBorderColor,\n      gaugeBorderThickness: dsConfig.gaugeBorderThickness,\n      gaugeBorderAlpha: dsConfig.gaugeBorderAlpha\n    };\n\n    fluidAttr.out.path = [M, lx1, ly, A, lR, lR, 0, 1, 0, lx2, ly, L, lx2, y6, lx1, y6, Z];\n    fluidAttr.out['stroke-width'] = 0;\n\n    canvasBorderElementAttr = {\n      'stroke-width': gaugeBorderThickness,\n      stroke: gaugeBorderColor,\n      path: thPath\n    };\n\n    topLightAttr = {\n      path: [M, lx1, scaleY, L, lx2, scaleY],\n      stroke: convertColor(gaugeFillColor, 40)\n    };\n\n    hotElementAttr = {\n      path: thPath\n    };\n\n    container = animationManager.setAnimation({\n      el: containerDummy || 'group',\n      attr: {\n        name: 'thermometer'\n      },\n      container: parentContainer,\n      component: dataSet,\n      label: 'group'\n    });\n    !containerDummy && dataSet.addContainer('container', container);\n\n    canvasBorderElement = animationManager.setAnimation({\n      el: canvasBorderElementDummy || 'path',\n      attr: canvasBorderElementAttr,\n      container: container,\n      component: dataSet,\n      label: 'path'\n    });\n    !canvasBorderElementDummy && dataSet.addGraphicalElement('canvasBorderElement', canvasBorderElement);\n\n    fluid = animationManager.setAnimation({\n      el: fluidDummy || 'path',\n      attr: fluidAttr.out,\n      container: container,\n      component: dataSet,\n      label: 'plot'\n    });\n    !fluidDummy && dataSet.addGraphicalElement('fluid', fluid);\n\n    topLight = animationManager.setAnimation({\n      el: topLightDummy || 'path',\n      attr: topLightAttr,\n      container: container,\n      component: dataSet,\n      label: 'path'\n    });\n    !topLightDummy && dataSet.addGraphicalElement('topLight', topLight);\n\n    if (use3DLighting) {\n      topLightGlowAttr = {\n        path: [M, lx1, scaleY, L, lx2, scaleY, lx2, y4, lx1, y4, Z],\n        'stroke-width': 0,\n        fill: toRaphaelColor({\n          FCcolor: {\n            color: gaugeFillColor + COMMASTRING + gaugeFillColor,\n            alpha: topLightGlowAlphaStr,\n            ratio: topLightGlowRatioStr,\n            radialGradient: true,\n            cx: 0.5,\n            cy: 1,\n            r: topLightGlowRStr\n          }\n        })\n      };\n\n      topLightGlow = animationManager.setAnimation({\n        el: topLightGlowDummy || 'path',\n        attr: topLightGlowAttr,\n        container: container,\n        component: dataSet,\n        label: 'path'\n      });\n      !topLightGlowDummy && dataSet.addGraphicalElement('topLightGlow', topLightGlow);\n\n      // draw the light effect for the bulb\n      bulbPathType1 = [M, x1, y1, A, r, r, 0, 0, 1, x2, y1,\n        A, r, r, 0, 0, 0, x1, y1,\n        A, r, r, 0, 1, 0, x2, y1, Z];\n\n      bulbBorderLightAttr = {\n        path: bulbPathType1,\n        'stroke-width': 0,\n        fill: toRaphaelColor({\n          FCcolor: {\n            cx: 0.5,\n            cy: 0.5,\n            r: bulbBorderLightRStr,\n            color: darkConColor + COMMASTRING + lightConColor,\n            alpha: bulbBorderLightAlphaStr,\n            ratio: bulbBorderLightRatioStr,\n            radialGradient: true\n          }\n        })\n      };\n\n      bulbBorderLight = animationManager.setAnimation({\n        el: bulbBorderLightDummy || 'path',\n        attr: bulbBorderLightAttr,\n        container: container,\n        component: dataSet,\n        label: 'path'\n      });\n      !bulbBorderLightDummy && dataSet.addGraphicalElement('bulbBorderLight', bulbBorderLight);\n\n      bulbTopLightAttr = {\n        path: bulbPathType1,\n        'stroke-width': 0,\n        fill: toRaphaelColor({\n          FCcolor: {\n            cx: 0.3,\n            cy: 0.1,\n            r: HUNDREDPERCENT,\n            color: lightConColor + COMMASTRING + darkConColor,\n            alpha: bulbTopLightAlphaStr,\n            ratio: bulbTopLightRatioStr,\n            radialGradient: true\n          }\n        })\n      };\n\n      bulbTopLight = animationManager.setAnimation({\n        el: bulbTopLightDummy || 'path',\n        attr: bulbTopLightAttr,\n        container: container,\n        component: dataSet,\n        label: 'path'\n      });\n      !bulbTopLightDummy && dataSet.addGraphicalElement('bulbTopLight', bulbTopLight);\n\n      bulbCenterLightAttr = {\n        path: bulbPathType1,\n        'stroke-width': 0,\n        fill: toRaphaelColor({\n          FCcolor: {\n            cx: 0.25,\n            cy: 0.7,\n            r: HUNDREDPERCENT,\n            color: lightConColor + COMMASTRING + darkConColor,\n            alpha: bulbCenterLightAlphaStr,\n            ratio: bulbCenterLightRatioStr,\n            radialGradient: true\n          }\n        })\n      };\n\n      bulbCenterLight = animationManager.setAnimation({\n        el: bulbCenterLightDummy || 'path',\n        attr: bulbCenterLightAttr,\n        container: container,\n        component: dataSet,\n        label: 'path'\n      });\n      !bulbCenterLightDummy && dataSet.addGraphicalElement('bulbCenterLight', bulbCenterLight);\n\n      cylLeftLightAttr = {\n        path: [M, x, y, L, x3, y,\n          A, topRoundR, topRoundR, 0, 0, 0, x1, y4,\n          L, x1, y1, x, y1, Z],\n        'stroke-width': 0,\n        fill: toRaphaelColor({\n          FCcolor: {\n            color: lightConColor + COMMASTRING + darkConColor,\n            alpha: cylLeftLightAlphaStr,\n            ratio: cylLeftLightRatioStr,\n            angle: 0\n          }\n        })\n      };\n\n      cylLeftLight = animationManager.setAnimation({\n        el: cylLeftLightDummy || 'path',\n        attr: cylLeftLightAttr,\n        container: container,\n        component: dataSet,\n        label: 'path'\n      });\n      !cylLeftLightDummy && dataSet.addGraphicalElement('cylLeftLight', cylLeftLight);\n\n      cylRightLightAttr = {\n        path: [M, x1, y, L, x4, y,\n          A, topRoundR, topRoundR, 0, 0, 1, x2, y4,\n          L, x2, y1, x1, y1, Z],\n        'stroke-width': 0,\n        fill: toRaphaelColor({\n          FCcolor: {\n            color: lightConColor + COMMASTRING + darkConColor + COMMASTRING + darkConColor,\n            alpha: cylRightLightAlphaStr,\n            ratio: cylRightLightRatioStr,\n            angle: 180\n          }\n        })\n      };\n\n      cylRightLight = animationManager.setAnimation({\n        el: cylRightLightDummy || 'path',\n        attr: cylRightLightAttr,\n        container: container,\n        component: dataSet,\n        label: 'path'\n      });\n      !cylRightLightDummy && dataSet.addGraphicalElement('cylRightLight', cylRightLight);\n\n      cylLeftLight1Attr = {\n        path: [M, l1x, y4, L, x1, y4, x1, y1, l1x, y1, Z],\n        'stroke-width': 0,\n        fill: toRaphaelColor({\n          FCcolor: {\n            color: lightConColor + COMMASTRING + darkConColor,\n            alpha: bulbTopLightAlphaStr,\n            ratio: zeroCommaHundredStr,\n            angle: 180\n          }\n        })\n      };\n\n      cylLeftLight1 = animationManager.setAnimation({\n        el: cylLeftLight1Dummy || 'path',\n        attr: cylLeftLight1Attr,\n        container: container,\n        component: dataSet,\n        label: 'path'\n      });\n      !cylLeftLight1Dummy && dataSet.addGraphicalElement('cylLeftLight1', cylLeftLight1);\n\n      cylRightLight1Attr = {\n        path: [M, l1x - 0.01, y4, L, l2x, y4, l2x, y1, l1x - 0.01, y1, Z],\n        'stroke-width': 0,\n        fill: toRaphaelColor({\n          FCcolor: {\n            color: lightConColor + COMMASTRING + darkConColor,\n            alpha: bulbTopLightAlphaStr,\n            ratio: zeroCommaHundredStr,\n            angle: 0\n          }\n        })\n      };\n\n      cylRightLight1 = animationManager.setAnimation({\n        el: cylRightLight1Dummy || 'path',\n        attr: cylRightLight1Attr,\n        container: container,\n        component: dataSet,\n        label: 'path'\n      });\n      !cylRightLight1Dummy && dataSet.addGraphicalElement('cylRightLight1', cylRightLight1);\n    } else {\n      dataSet.removeGraphicalElement(topLightGlowDummy);\n      dataSet.removeGraphicalElement(bulbBorderLightDummy);\n      dataSet.removeGraphicalElement(bulbTopLightDummy);\n      dataSet.removeGraphicalElement(bulbCenterLightDummy);\n      dataSet.removeGraphicalElement(cylLeftLightDummy);\n      dataSet.removeGraphicalElement(cylRightLightDummy);\n      dataSet.removeGraphicalElement(cylLeftLight1Dummy);\n      dataSet.removeGraphicalElement(cylRightLight1Dummy);\n    }\n\n    trackerContainer = animationManager.setAnimation({\n      el: trackerContainerDummy || 'group',\n      attr: {\n        name: 'col-hot'\n      },\n      container: trackerLayer,\n      component: dataSet,\n      label: 'group'\n    });\n    !trackerContainerDummy && dataSet.addContainer('trackerContainer', trackerContainer);\n\n    hotElementAttr.stroke = hotElementAttr.fill = TRACKER_FILL;\n    hotElement = animationManager.setAnimation({\n      el: hotElementDummy || 'path',\n      attr: hotElementAttr,\n      container: trackerContainer,\n      component: dataSet,\n      label: 'path'\n    });\n    if (!hotElementDummy) {\n      dataSet.addGraphicalElement('hotElement', hotElement);\n      hotElement\n        .on('fc-click', function (setDataArr) {\n          var ele = this;\n          chart.plotEventHandler(ele, setDataArr);\n        })\n        .hover(\n          function (data) {\n            var ele = this;\n            if (dsConfig.showHoverEffect) {\n              dataSet.getGraphicalElement('fluid') && dataSet.getGraphicalElement('fluid').attr(fluidAttr.hover);\n            }\n            chart.plotEventHandler(ele, data, ROLLOVER);\n          },\n          function (data) {\n            var ele = this;\n            if (dsConfig.showHoverEffect) {\n              dataSet.getGraphicalElement('fluid') && dataSet.getGraphicalElement('fluid').attr(fluidAttr.out);\n            }\n            chart.plotEventHandler(ele, data, ROLLOUT);\n          }\n        );\n    }\n    if (!dsConfig.toolText) {\n      toolTipController.disableToolTip(hotElement);\n    } else {\n      toolTipController.enableToolTip(hotElement, dsConfig.toolText);\n    }\n    hotElement.data(EVENTARGS, eventArgs);\n\n    dataLabelContainer = animationManager.setAnimation({\n      el: dataLabelContainerDummy || 'group',\n      attr: {\n        name: 'datalabel'\n      },\n      container: dataLabelsLayer,\n      component: dataSet,\n      label: 'labelGroup'\n    });\n    smartLabel.setStyle(style);\n\n    if (!dataLabelContainerDummy) {\n      dataSet.addContainer('dataLabelContainer', dataLabelContainer);\n    }\n    if (dsConfig.showValue) {\n      ypos = y2 + r + (dsConfig.valuePadding || 0);\n      dataLabelObj = smartLabel.getSmartText(dsConfig.displayValue, chartConfig.width - chartConfig.marginLeft - chartConfig.marginRight - (canvasHorizontalDiff / 2), chartConfig.height - ypos - chartConfig.marginBottom);\n      dataLabelTooltext = dataLabelObj.tooltext || BLANKSTRING;\n      label = animationManager.setAnimation({\n        el: labelDummy || 'text',\n        attr: {\n          text: dataLabelObj.text,\n          x: x,\n          y: ypos,\n          'text-anchor': POSITION_MIDDLE,\n          'vertical-align': POSITION_TOP,\n          fill: style.color,\n          'text-bound': [style.backgroundColor, style.borderColor,\n            style.borderThickness, style.borderPadding,\n            style.borderRadius, style.borderDash]\n        },\n        container: dataLabelContainer,\n        component: dataSet,\n        label: 'text'\n      });\n\n      if (dsConfig.showTooltip) {\n        toolTipController.enableToolTip(label, dataLabelTooltext);\n      } else {\n        toolTipController.disableToolTip(label);\n      }\n      if (!labelDummy) {\n        dataSet.addGraphicalElement('label', label);\n      }\n      label.show();\n    }\n  }\n}\nexport default ThermometerDataset;\n","import { FINALSTR, INITIALSTR } from '@fusioncharts/core/src/lib';\n\nvar fadeEffect = [{\n    initialAttr: function () {\n      return { opacity: 0 };\n    },\n    finalAttr: function () {\n      return { opacity: 1 };\n    }\n  }],\n  textAppearing = function () {\n    fadeEffect[0].slot = FINALSTR;\n    return fadeEffect;\n  },\n  pathAppearing = function () {\n    fadeEffect[0].slot = INITIALSTR;\n    return fadeEffect;\n  },\n  labelGroupAppearing = function () {\n    fadeEffect[0].slot = FINALSTR;\n    return fadeEffect;\n  };\n\nexport default {\n  'initial.dataset.thermometer': function () {\n    var component = this,\n      conf = component.config;\n    return {\n      'plot.appearing': function (input) {\n        var pathArr = input.attr.path.slice(0);\n        pathArr[13] = pathArr[15] = conf.thmBaseY;\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'initial'\n        }, {\n          initialAttr: {\n            path: pathArr\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'middle'\n        }];\n      },\n      'plot.updating': null,\n      'text.appearing': textAppearing,\n      'text.updating': null,\n      'labelGroup.appearing': labelGroupAppearing,\n      'labelGroup.updating': null,\n      'path.appearing': pathAppearing,\n      'path.updating': null\n    };\n  }\n};\n","import Sparkline from '@fusioncharts/widgets/src/chart/sparkline';\nexport default Sparkline;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport SparkChartBase from '../_internal/sparkbase';\nimport SparkLineDataset from '../../dataset/sparkline';\nimport { _parseCanvasCosmetics, _placeOpenCloseValues } from '../sparkwinloss';\n\nconst FRIENDLY_NAME = 'SparkLine Chart',\n  SPARKLINE = 'sparkline';\n\n/**\n * Creates SparkChartBase class\n */\nclass SparkLine extends SparkChartBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'SparkLine';\n  }\n\n  /**\n   * Constructor function of SparkChartBase class\n   */\n  constructor () {\n    super();\n\n    this.showValues = 0;\n    this._parseCanvasCosmetics = _parseCanvasCosmetics;\n    this._placeOpenCloseValues = _placeOpenCloseValues;\n    this.defaultPlotShadow = 0;\n    this.axisPaddingLeft = 0;\n    this.axisPaddingRight = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'SparkLine';\n  }\n  /**\n   * Set default configurations for chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = FRIENDLY_NAME;\n    config.singleseries = true;\n    config.defaultDatasetType = SPARKLINE;\n    config.showvalues = 0;\n    config.anchorsides = 1;\n    config.anchorstartangle = 90;\n    config.enablemousetracking = true;\n  }\n  /**\n   * Returns SparkLineDataset class\n   * @return {Class} SparkLineDataset class\n   */\n  getDSdef () {\n    return SparkLineDataset;\n  }\n}\nexport default SparkLine;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  extend2,\n  defaultGaugePaletteOptions as DefaultGaugePaletteOptions,\n  BLANKSTRING,\n  pluck,\n  pluckNumber,\n  parseUnsafeString,\n  POSITION_BOTTOM,\n  POSITION_MIDDLE,\n  POSITION_START,\n  POSITION_END,\n  PXSTRING,\n  setLineHeight\n} from '@fusioncharts/core/src/lib';\nimport SSCartesian from '@fusioncharts/charts/src/chart/_internal/sscartesian';\n\nvar UNDEF,\n  math = Math,\n  mathMin = math.min,\n  mathMax = math.max,\n  mathCeil = math.ceil,\n  GUTTER_PADDING = 2,\n  defaultGaugePaletteOptions = extend2({}, DefaultGaugePaletteOptions);\n/**\n * Creates SparkChartBase class for spark charts series\n */\nclass SparkChartBase extends SSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'SparkChartBase';\n  }\n\n  /**\n   * Constructor class for SparkChartBase\n   */\n  constructor () {\n    super();\n\n    this.showBorder = 0;\n    this.chartTopMargin = 3;\n    this.chartRightMargin = 3;\n    this.chartBottomMargin = 3;\n    this.chartLeftMargin = 3;\n    this.canvasborderthickness = 0;\n    this.subTitleFontSizeExtender = 0;\n    this.subTitleFontWeight = 0;\n    this.defaultPaletteOptions = extend2(extend2({}, defaultGaugePaletteOptions), {\n      // Store colors now\n      paletteColors: [['555555', 'A6A6A6', 'CCCCCC', 'E1E1E1', 'F0F0F0'],\n        ['A7AA95', 'C4C6B7', 'DEDFD7', 'F2F2EE'],\n        ['04C2E3', '66E7FD', '9CEFFE', 'CEF8FF'],\n        ['FA9101', 'FEB654', 'FED7A0', 'FFEDD5'],\n        ['FF2B60', 'FF6C92', 'FFB9CB', 'FFE8EE']],\n      // Store other colors\n      // ------------- For 2D Chart ---------------//\n      // We're storing 5 combinations, as we've 5 defined palettes.\n      bgColor: ['FFFFFF', 'CFD4BE,F3F5DD', 'C5DADD,EDFBFE', 'A86402,FDC16D', 'FF7CA0,FFD1DD'],\n      bgAngle: [270, 270, 270, 270, 270],\n      bgRatio: ['0,100', '0,100', '0,100', '0,100', '0,100'],\n      bgAlpha: ['100', '60,50', '40,20', '20,10', '30,30'],\n\n      canvasBgColor: ['FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF'],\n      canvasBgAngle: [0, 0, 0, 0, 0],\n      canvasBgAlpha: ['100', '100', '100', '100', '100'],\n      canvasBgRatio: [BLANKSTRING, BLANKSTRING, BLANKSTRING, BLANKSTRING, BLANKSTRING],\n      canvasBorderColor: ['BCBCBC', 'BEC5A7', '93ADBF', 'C97901', 'FF97B1'],\n\n      toolTipBgColor: ['FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF'],\n      toolTipBorderColor: ['545454', '545454', '415D6F', '845001', '68001B'],\n      baseFontColor: ['333333', '60634E', '025B6A', 'A15E01', '68001B'],\n      trendColor: ['666666', '60634E', '415D6F', '845001', '68001B'],\n      plotFillColor: ['666666', 'A5AE84', '93ADBF', 'C97901', 'FF97B1'],\n      borderColor: ['767575', '545454', '415D6F', '845001', '68001B'],\n      borderAlpha: [50, 50, 50, 50, 50],\n      periodColor: ['EEEEEE', 'ECEEE6', 'E6ECF0', 'FFF4E6', 'FFF2F5'],\n\n      // Colors for win loss chart\n      winColor: ['666666', '60634E', '025B6A', 'A15E01', 'FF97B1'],\n      lossColor: ['CC0000', 'CC0000', 'CC0000', 'CC0000', 'CC0000'],\n      drawColor: ['666666', 'A5AE84', '93ADBF', 'C97901', 'FF97B1'],\n      scorelessColor: ['FF0000', 'FF0000', 'FF0000', 'FF0000', 'FF0000']\n    }, false, true);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'SparkChartBase';\n  }\n  /**\n   * Returns the postion for the caption placement\n   * @return {number} extra space needed for caption\n   */\n  _fetchCaptionPos () {\n    var extraSpace,\n      iapi = this,\n      caption = iapi.getChildren('caption')[0],\n      captionConfig = caption.config;\n\n    // check if even after placing the caption\n    // space available on right.\n    // left aligned.\n    /** @todo need to optimize this logic */\n    if (captionConfig.isOnLeft) {\n      extraSpace = -1;\n    } else {\n      // right aligned\n      extraSpace = -1;\n    }\n    return extraSpace;\n  }\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    let iapi = this,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      config = iapi.config;\n    config.origCanvasLeftMargin = pluckNumber(chartAttrs.canvasleftmargin);\n    config.origCanvasRightMargin = pluckNumber(chartAttrs.canvasrightmargin);\n    config.origCanvasTopMargin = pluckNumber(chartAttrs.canvastopmargin);\n    config.origCanvasBottomMargin = pluckNumber(chartAttrs.canvasbottommargin);\n    config.showBorder = pluckNumber(chartAttrs.showborder, 0);\n  }\n\n  /**\n   * Manages space for the chart\n   */\n  _spaceManager () {\n    var availableWidth,\n      availableHeight,\n      iapi = this,\n      config = iapi.config,\n      canvasBaseDepth = config.canvasBaseDepth,\n      canvas = iapi.getChildren('canvas')[0],\n      captionStyle = iapi.getChildren('caption')[0].config.style,\n      subCaptionStyle = iapi.getChildren('subCaption')[0].config.style,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      style = iapi.getFromEnv('style'),\n      canvasBorderWidth = canvas.config.canvasBorderWidth,\n      chartBorderWidth = config.borderWidth,\n      canvasMarginTop = config.canvasMarginTop,\n      canvasMarginBottom = config.canvasMarginBottom,\n      canvasMarginLeft = config.canvasMarginLeft,\n      canvasMarginRight = config.canvasMarginRight,\n      minCanvasHeight = config.minCanvasHeight,\n      minCanvasWidth = config.minCanvasWidth,\n      height = config.height,\n      width = config.width,\n      diff,\n      heightAdjust = false,\n      widthAdjust = false,\n      top,\n      bottom,\n      left,\n      right,\n      currentCanvasHeight,\n      currentCanvasWidth,\n      origCanvasTopMargin = config.origCanvasTopMargin,\n      origCanvasBottomMargin = config.origCanvasBottomMargin,\n      origCanvasLeftMargin = config.origCanvasLeftMargin,\n      origCanvasRightMargin = config.origCanvasRightMargin,\n      sum;\n\n    // Setting the font size every time the viewport is resized\n    // and chart is consequently redrawn\n    captionStyle.fontSize = (pluckNumber(this.computeFontSize(\n      chartAttrs.captionfontsize), this.computeFontSize(\n      style.fontSizeWithUnit) + 3) + PXSTRING);\n    setLineHeight(captionStyle);\n\n    subCaptionStyle.fontSize = (pluckNumber(\n      this.computeFontSize(chartAttrs.subcaptionfontsize),\n      (pluckNumber(mathMax(pluckNumber(\n        this.computeFontSize(chartAttrs.captionfontsize)) - 3, -1),\n      this.computeFontSize(style.fontSizeWithUnit)) +\n        pluckNumber(iapi.subTitleFontSizeExtender, 1))\n    ) + PXSTRING);\n    setLineHeight(subCaptionStyle);\n\n    iapi._allocateSpace({\n      top: chartBorderWidth,\n      bottom: chartBorderWidth,\n      left: chartBorderWidth,\n      right: chartBorderWidth\n    });\n\n    // alocate the space for datasets\n    availableHeight = config.availableHeight * 0.325;\n    iapi._getDSspace && iapi._allocateSpace(iapi._getDSspace(availableHeight));\n\n    iapi._allocateSpace((iapi._manageActionBarSpace &&\n              iapi._manageActionBarSpace(config.availableHeight * 0.225)) || {});\n    config.availableWidth = config.width;\n    availableWidth = config.availableWidth * 0.75;\n    availableWidth = (availableWidth - config.origMarginLeft - config.origMarginRight -\n              (config.borderWidth * 2));\n    availableWidth = mathMax(config.availableWidth * 0.1, availableWidth);\n    // a space manager that manages the space for the tools as well as the captions.\n    iapi._manageChartMenuBar(availableWidth);\n    // iapi._allocateSpace(iapi._manageCaptionSpacing(availableWidth));\n\n    availableWidth = (config.availableWidth - config.borderWidth * 2) * 0.75;\n    // Space management for SparkWinLoss and SparkLine charts\n    iapi._placeOpenCloseValues && iapi._allocateSpace(iapi._placeOpenCloseValues(availableWidth));\n\n    iapi._allocateSpace({\n      top: canvasBorderWidth,\n      bottom: canvasBorderWidth,\n      left: canvasBorderWidth,\n      right: canvasBorderWidth\n    });\n\n    iapi._allocateSpace({\n      bottom: canvasBaseDepth\n    });\n\n    // Check for minimum canvas width and height\n    if (minCanvasHeight > height - canvasMarginTop - canvasMarginBottom) {\n      heightAdjust = true;\n      diff = config.canvasHeight - minCanvasHeight;\n      sum = canvasMarginTop + canvasMarginBottom;\n      canvasMarginTop = config.canvasMarginTop = diff * canvasMarginTop / sum;\n      canvasMarginBottom = config.canvasMarginBottom = diff * canvasMarginBottom / sum;\n    }\n    if (minCanvasWidth > width - canvasMarginLeft - canvasMarginRight) {\n      widthAdjust = true;\n      diff = config.canvasWidth - minCanvasWidth;\n      sum = canvasMarginLeft + canvasMarginRight;\n      canvasMarginLeft = config.canvasMarginLeft = diff * canvasMarginLeft / sum;\n      canvasMarginRight = config.canvasMarginRight = diff * canvasMarginRight / sum;\n    }\n\n    // Allocate space for canvas margin only if the margin is less than the margin entered by the user.\n    top = canvasMarginTop > config.canvasTop ? (canvasMarginTop - config.canvasTop) : 0;\n    bottom = canvasMarginBottom > (height - config.canvasBottom) ? (canvasMarginBottom + config.canvasBottom -\n              height) : 0;\n    left = canvasMarginLeft > config.canvasLeft ? (canvasMarginLeft - config.canvasLeft) : 0;\n    right = canvasMarginRight > (width - config.canvasRight) ? (canvasMarginRight + config.canvasRight - width)\n      : 0;\n\n    iapi._allocateSpace({\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right\n    });\n\n    // Forcing canvas height to its minimum\n    if (heightAdjust) {\n      sum = origCanvasTopMargin + origCanvasBottomMargin;\n      currentCanvasHeight = config.canvasHeight;\n      if (currentCanvasHeight > minCanvasHeight) {\n        diff = currentCanvasHeight - minCanvasHeight;\n        top = diff * origCanvasTopMargin / sum;\n        bottom = diff * origCanvasBottomMargin / sum;\n      }\n      iapi._allocateSpace({\n        top: top,\n        bottom: bottom\n      });\n    }\n\n    // Forcing canvas width to its minimum\n    if (widthAdjust) {\n      sum = origCanvasLeftMargin + origCanvasRightMargin;\n      currentCanvasWidth = config.canvasWidth;\n      if (currentCanvasWidth > minCanvasWidth) {\n        diff = currentCanvasWidth - minCanvasWidth;\n        left = diff * origCanvasLeftMargin / sum;\n        right = diff * origCanvasRightMargin / sum;\n      }\n      iapi._allocateSpace({\n        left: left,\n        right: right\n      });\n    }\n\n    // Manage canvasMargins\n    // If there is user given canvasMargins apply those to the chart\n    if (config.origCanvasLeftMargin !== UNDEF) {\n      config.canvasWidth = mathMax((config.canvasWidth + config.canvasLeft -\n                  config.origCanvasLeftMargin), config.availableWidth * 0.2);\n\n      config.canvasLeft = config.origCanvasLeftMargin;\n    }\n    canvas.setDimension({\n      top: config.canvasTop,\n      left: config.canvasLeft,\n      width: config.canvasWidth,\n      height: config.canvasHeight\n    });\n  }\n  /**\n   * Manages space for Caption placement\n   * @param {number} availableWidth available width for caption\n   * @return {Object} dimension object(width, height)\n   */\n  _manageCaptionSpacing (availableWidth) {\n    var iapi = this,\n      chartConfig = iapi.config,\n      components = iapi.getChildren(),\n      // chartGraphics = iapi.graphics,\n      caption = components.caption && components.caption[0],\n      subCaption = components.subCaption && components.subCaption[0],\n      captionConfig = caption.config,\n      subCaptionConfig = subCaption.config,\n      captionComponents = caption.components,\n      // subCaptionComponents = subCaption.components,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      SmartLabel = iapi.getFromEnv('smartLabel'),\n      titleText = parseUnsafeString(chartAttrs.caption),\n      subTitleText = parseUnsafeString(chartAttrs.subcaption),\n      captionPadding = captionConfig.captionPadding = pluckNumber(chartAttrs.captionpadding, 2),\n      chartMenuBar = components.chartMenuBar && components.chartMenuBar[0],\n      chartMenuLogicalSpace = chartMenuBar && chartMenuBar.getLogicalSpace(),\n      height = chartConfig.height - ((chartMenuLogicalSpace && chartMenuLogicalSpace.height) || 0),\n      // width = chartConfig.width,\n      captionLineHeight = 0,\n      subCaptionLineHeight = 0,\n      // topGutterWidth = 5,\n      canvasBorderThickness = mathMax(components.canvas && components.canvas[0].config.canvasBorderThickness, 0),\n      captionHeight = 0,\n      allowedHeight = height * 0.7,\n      allowedWidth = availableWidth,\n      dimensions = {},\n      maxCaptionWidth,\n      captionObj,\n      subCaptionObj,\n      capStyle,\n      subCapStyle;\n\n    // text below 3px is not properly visible\n    if (allowedHeight > 3) {\n      if (captionPadding < canvasBorderThickness) {\n        captionPadding = canvasBorderThickness + 2;\n      }\n      captionConfig.captionPadding = subCaptionConfig.captionPadding = captionPadding;\n\n      if (titleText !== BLANKSTRING) { // calculatethe single line's height\n        capStyle = captionConfig.style;\n        captionLineHeight = captionConfig.captionLineHeight =\n                      mathCeil(parseFloat(pluck(capStyle.fontHeight, capStyle.lineHeight), 10), 12);\n        // captionFontSize = subCaptionConfig.captionLineHeight =\n        //     pluckNumber(parseInt(capStyle.fontSize, 10), 10);\n      }\n      if (subTitleText !== BLANKSTRING) {\n        subCapStyle = subCaptionConfig.style;\n        subCaptionLineHeight = mathCeil(parseInt(pluck(subCapStyle.lineHeight,\n          subCapStyle.fontHeight), 10), 12);\n        // subCaptionFontSize = pluckNumber(parseInt(subCapStyle.fontSize, 10), 10);\n      }\n\n      SmartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n      if (captionLineHeight > 0 || subCaptionLineHeight > 0) {\n        SmartLabel.setStyle(capStyle);\n        captionObj = SmartLabel.getSmartText(titleText, allowedWidth, height);\n        // Forcefully increase width to give a gutter in caption and sub-caption\n        if (captionObj.width > 0) {\n          captionObj.width += GUTTER_PADDING;\n          captionHeight = captionObj.height;\n        }\n        SmartLabel.setStyle(subCapStyle);\n        subCaptionObj = SmartLabel.getSmartText(subTitleText, allowedWidth, height - captionHeight);\n        // Force fully increase width to give a gutter in caption and subCaption\n        if (subCaptionObj.width > 0) {\n          subCaptionObj.width += GUTTER_PADDING;\n        }\n        captionConfig.captionSubCaptionGap = captionObj.height + 0 +\n                      (subCaptionLineHeight * 0.2);\n\n        maxCaptionWidth = Math.max(captionObj.width, subCaptionObj.width);\n        // Replace the caption and subCaption text with the new wrapped text\n        // captionComponents.text = captionObj.text;\n        captionConfig.height = captionHeight = captionObj.height;\n        captionConfig.width = captionObj.width;\n        captionConfig.tooltext && (captionComponents.originalText = captionObj.tooltext);\n\n        // subCaptionComponents.text = subCaptionObj.text;\n        subCaptionConfig.height = captionHeight = subCaptionObj.height;\n        subCaptionConfig.width = subCaptionObj.width;\n        subCaptionConfig.tooltext && (captionComponents.originalText = subCaptionObj.tooltext);\n\n        maxCaptionWidth = Math.max(captionObj.width, subCaptionObj.width);\n        captionConfig.captionPadding = captionPadding = mathMin(availableWidth - maxCaptionWidth,\n          captionPadding);\n        // Add caption padding, if either caption or sub-caption is to be shown\n        if (maxCaptionWidth > 0) {\n          maxCaptionWidth = mathMin(availableWidth, maxCaptionWidth + captionPadding);\n        }\n        captionConfig.maxCaptionWidth = subCaptionConfig.maxCaptionWidth = maxCaptionWidth;\n\n        // totalHeight = totalHeight || canvasBorderThickness;\n        if (captionConfig.isOnLeft) {\n          dimensions.left = maxCaptionWidth;\n        } else {\n          dimensions.right = maxCaptionWidth;\n        }\n      }\n    }\n\n    return dimensions;\n  }\n  /**\n   * Calculates caption coordinates\n   */\n  _manageCaptionPosition () {\n    var iapi = this,\n      chartConfig = iapi.config,\n      caption = iapi.getChildren('caption')[0],\n      subCaption = iapi.getChildren('subCaption')[0],\n      captionConfig = caption.config,\n      subCaptionConfig = subCaption.config,\n      captionPosition = captionConfig.captionPosition,\n      maxWidth = mathMax(captionConfig.width, subCaptionConfig.width),\n      borderWidth = chartConfig.borderWidth || 0,\n      height = chartConfig.height,\n      sparkValues = chartConfig.sparkValues || {},\n      openValueWidth = sparkValues.openValueWidth || 0,\n      captionPadding = captionConfig.captionPadding,\n      captionSubCaptionGap = captionConfig.captionSubCaptionGap;\n\n    switch (captionPosition) {\n      case POSITION_MIDDLE:\n        captionConfig.y = ((height - (captionConfig.height + subCaptionConfig.height)) / 2) +\n                      ((captionConfig._offsetHeight || 0) * 0.5);\n        break;\n      case POSITION_BOTTOM:\n        captionConfig.y = (height - (captionConfig.height + subCaptionConfig.height)) -\n                      chartConfig.marginBottom - borderWidth;\n        break;\n      default: // We put it on top by default\n        captionConfig.y = chartConfig.marginTop + borderWidth + (captionConfig._offsetHeight || 0);\n        break;\n    }\n\n    subCaptionConfig.y = captionConfig.y + captionSubCaptionGap;\n\n    if (captionConfig.isOnLeft) {\n      captionConfig.align = subCaptionConfig.align = POSITION_END;\n      captionConfig.x = subCaptionConfig.x = chartConfig.canvasLeft -\n                  (borderWidth + openValueWidth + GUTTER_PADDING + captionPadding) +\n                  chartConfig.borderWidth;\n    } else {\n      captionConfig.align = subCaptionConfig.align = POSITION_START;\n      captionConfig.x = subCaptionConfig.x = chartConfig.width -\n                  chartConfig.marginRight - maxWidth - borderWidth;\n    }\n  }\n\n  /**\n   * function to parse JSON data for configurations of axis\n   * @return {Object} configurations of axes\n   */\n  _feedAxesRawData () {\n    let output = super._feedAxesRawData(),\n      xAxisConf = output.xAxisConf[0],\n      yAxisConf = output.yAxisConf[0],\n      chartAttr = this.getFromEnv('chart-attrib'),\n      colorM = this.getFromEnv('color-manager'),\n      periodLength = pluckNumber(chartAttr.periodlength, 0),\n      drawConfig = {\n        isDraw: 0\n      };\n    xAxisConf.lines = yAxisConf.lines = xAxisConf.band = yAxisConf.band = drawConfig;\n    if (periodLength) {\n      xAxisConf.alternateGridColor = pluck(chartAttr.periodcolor, colorM.getColor('periodColor'));\n      xAxisConf.alternateGridAlpha = pluck(chartAttr.periodalpha, 100);\n      xAxisConf.showAlternateGridColor = true;\n      xAxisConf.categoryDivLinesFromZero = 0;\n      xAxisConf.periodLength = periodLength;\n      xAxisConf.band = {\n        isDraw: 1\n      };\n    }\n    return output;\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let jsonData = this.getFromEnv('dataSource'),\n      dataset = jsonData.dataset;\n    if ((!dataset || !dataset.length || !(dataset[0].data && dataset[0].data.length))) {\n      return true;\n    }\n  }\n}\nexport default SparkChartBase;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  BLANKSTRING,\n  pluck,\n  pluckNumber,\n  POSITION_START,\n  parseTooltext,\n  POSITION_END,\n  getLightColor,\n  parseColor\n} from '@fusioncharts/core/src/lib';\nimport LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport sparklineAnimation from './index.animation';\nvar UNDEF,\n  GUTTER_PADDING = 2,\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  drawSparkValues = function () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConf = chart.config,\n      style = chartConf.dataLabelStyle,\n      valuePadding = chartConf.valuepadding + GUTTER_PADDING,\n      dataLabelContainer = dataSet.getContainer('labelGroup'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      closeValueCheck = dataSet.getGraphicalElement('closeValue'),\n      closeValue,\n      openValueCheck = dataSet.getGraphicalElement('openValue'),\n      openValue,\n      startBracesCheck = dataSet.getGraphicalElement('startBraces'),\n      startBraces,\n      highValueCheck = dataSet.getGraphicalElement('highValue'),\n      highValue,\n      separatorCheck = dataSet.getGraphicalElement('separator'),\n      separator,\n      lowValueCheck = dataSet.getGraphicalElement('lowValue'),\n      lowValue,\n      endBracesCheck = dataSet.getGraphicalElement('endBraces'),\n      endBraces,\n      sparkValues = chartConf.sparkValues || (chartConf.sparkValues = {}),\n      SmartLabel = dataSet.getFromEnv('smartLabel'),\n      START_BRACES = `[`,\n      END_BRACES = `]`,\n      SEPARATER = `|`,\n      textAttr = {\n        'class': 'fusioncharts-label',\n        'text-anchor': POSITION_END,\n        fill: style.color,\n        'font-size': style.fontSize,\n        'font-weight': style.fontWeight,\n        'font-style': style.fontStyle,\n        'font-family': style.fontFamily,\n        visibility: 'visible'\n      },\n      attr = {\n        x: 0,\n        y: 0\n      };\n\n    // Spark values are not visible due to the clip-rect,\n    // so removing clip-rect in order to make spark labels visible\n    chart.getChildContainer('datalabelsGroup').attr({\n      'clip-rect': null\n    });\n\n    attr.y = chartConf.canvasHeight * 0.5 + chartConf.canvasTop;\n    // openValue\n    attr.x = chartConf.canvasLeft - valuePadding;\n    if ((sparkValues.openValue && sparkValues.openValue.label) || openValue) {\n      openValue = animationManager.setAnimation({\n        el: openValueCheck || 'text',\n        state: 'appearing',\n        container: dataLabelContainer,\n        attr: {\n          text: sparkValues.openValue.label,\n          x: attr.x,\n          y: attr.y,\n          fill: sparkValues.openValue.color || textAttr.fill,\n          'text-anchor': POSITION_END,\n          'line-height': style.lineHeight,\n          'text-bound': [style.backgroundColor, style.borderColor,\n            style.borderThickness, style.borderPadding, style.borderRadius, style.borderDash],\n          visibility: 'visible'\n        },\n        label: 'label',\n        component: dataSet\n      });\n      if (!openValueCheck) {\n        dataSet.addGraphicalElement('openValue', openValue);\n      }\n    }\n\n    // closeValue\n    textAttr['text-anchor'] = POSITION_START;\n    attr.x = chartConf.canvasWidth + chartConf.canvasLeft + valuePadding;\n    if ((sparkValues.closeValue && sparkValues.closeValue.label) || closeValue) {\n      closeValue = animationManager.setAnimation({\n        el: closeValueCheck || 'text',\n        container: dataLabelContainer,\n        state: 'appearing',\n        attr: {\n          text: sparkValues.closeValue.label,\n          x: attr.x,\n          y: attr.y,\n          fill: sparkValues.closeValue.color || textAttr.fill,\n          'text-anchor': POSITION_START,\n          'line-height': style.lineHeight,\n          'text-bound': [style.backgroundColor, style.borderColor,\n            style.borderThickness, style.borderPadding, style.borderRadius, style.borderDash],\n          visibility: 'visible'\n        },\n        label: 'label',\n        component: dataSet\n      });\n      if (!closeValueCheck) {\n        dataSet.addGraphicalElement('closeValue', closeValue);\n      }\n      attr.x += (sparkValues.closeValue.smartObj &&\n                  sparkValues.closeValue.smartObj.width + GUTTER_PADDING + valuePadding) || 0;\n    }\n\n    // High-low value\n    if ((sparkValues.highLowValue && sparkValues.highLowValue.label) || highValue) {\n      if (sparkValues.highLowValue && sparkValues.highLowValue.label === BLANKSTRING) {\n        SEPARATER = START_BRACES = END_BRACES = BLANKSTRING;\n      }\n\n      SmartLabel.useEllipsesOnOverflow(chartConf.useEllipsesWhenOverflow);\n      SmartLabel.setStyle(style);\n      startBraces = animationManager.setAnimation({\n        el: startBracesCheck || 'text',\n        state: 'appearing',\n        container: dataLabelContainer,\n        attr: {\n          text: START_BRACES,\n          x: attr.x,\n          y: attr.y,\n          'text-anchor': POSITION_START,\n          visibility: 'visible'\n        },\n        label: 'label',\n        component: dataSet\n      });\n      if (!startBracesCheck) {\n        dataSet.addGraphicalElement('startBraces', startBraces);\n      }\n\n      attr.x += SmartLabel.getSmartText(START_BRACES).width;\n      highValue = animationManager.setAnimation({\n        el: highValueCheck || 'text',\n        state: 'appearing',\n        container: dataLabelContainer,\n        attr: {\n          text: sparkValues.highValue.label,\n          x: attr.x,\n          y: attr.y,\n          'text-anchor': POSITION_START,\n          fill: sparkValues.highValue.color || textAttr.fill,\n          visibility: 'visible'\n        },\n        label: 'label',\n        component: dataSet\n      });\n      if (!highValueCheck) {\n        dataSet.addGraphicalElement('highValue', highValue);\n      }\n\n      attr.x += SmartLabel.getSmartText(sparkValues.highValue.label).width;\n\n      separator = animationManager.setAnimation({\n        el: separatorCheck || 'text',\n        state: 'appearing',\n        container: dataLabelContainer,\n        attr: {\n          text: SEPARATER,\n          x: attr.x,\n          y: attr.y,\n          'text-anchor': POSITION_START,\n          visibility: 'visible'\n        },\n        label: 'label',\n        component: dataSet\n      });\n      if (!separatorCheck) {\n        dataSet.addGraphicalElement('separator', separator);\n      }\n\n      attr.x += SmartLabel.getSmartText(SEPARATER).width;\n\n      lowValue = animationManager.setAnimation({\n        el: lowValueCheck || 'text',\n        container: dataLabelContainer,\n        state: 'appearing',\n        attr: {\n          text: sparkValues.lowValue.label,\n          x: attr.x,\n          y: attr.y,\n          'text-anchor': POSITION_START,\n          fill: sparkValues.lowValue.color || textAttr.fill,\n          visibility: 'visible'\n        },\n        label: 'label',\n        component: dataSet\n      });\n      if (!lowValueCheck) {\n        dataSet.addGraphicalElement('lowValue', lowValue);\n      }\n      attr.x += SmartLabel.getSmartText(sparkValues.lowValue.label).width;\n      endBraces = animationManager.setAnimation({\n        el: endBracesCheck || 'text',\n        state: 'appearing',\n        container: dataLabelContainer,\n        attr: {\n          text: END_BRACES,\n          x: attr.x,\n          y: attr.y,\n          'text-anchor': POSITION_START,\n          visibility: 'visible'\n        },\n        label: 'label',\n        component: dataSet\n      });\n      if (!endBracesCheck) {\n        dataSet.addGraphicalElement('endBraces', endBraces);\n      }\n    }\n\n    dataSet.labelDrawn = true;\n  };\naddDep({\n  name: 'sparklineAnimation',\n  type: 'animationRule',\n  extension: sparklineAnimation\n});\n/**\n * Creates class SparkLineDataset\n */\nclass SparkLineDataset extends LineDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'sparkLine';\n  }\n  /**\n   * Constructor function of SparkLineDataset class\n   * @param {Object} datasetJSON data object\n   */\n  parseAttributes () {\n    super.parseAttributes();\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      // parseUnsafeString = lib.parseUnsafeString,\n      conf = dataSet.config,\n      JSONData = dataSet.config.JSONData,\n      chartAttr = chart.getFromEnv('chart-attrib');\n    conf.showValues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 0);\n    // Line configuration attributes parsing\n    conf.linethickness = pluckNumber(JSONData.linethickness,\n      chartAttr.linethickness, 1);\n  }\n  /**\n   * Configures data level attribute settings\n   * @param {Object} newDataset newly added dataset object\n   */\n  _setConfigure (newDataset) {\n    super._setConfigure();\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      // parseUnsafeString = lib.parseUnsafeString,\n      conf = dataSet.config,\n      JSONData = dataSet.config.JSONData,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      setDataArr = newDataset || JSONData.data,\n      setData,\n      dataObj,\n      xAxis = dataSet.getFromEnv('xAxis'),\n      len = (newDataset && newDataset.data.length) || xAxis.getTicksLen(),\n      colorM = dataSet.getFromEnv('color-manager'),\n      chartConf = chart.config,\n      dataStore,\n      // dataLabelStyle = chartConf.dataLabelStyle,\n      config,\n      i,\n      // Fill Color for high, low, open and close (SparkLine Charts)\n      openColor = parseColor(pluck(chartAttr.opencolor, '0099FF')),\n      closeColor = parseColor(pluck(chartAttr.closecolor, '0099FF')),\n      highColor = parseColor(pluck(chartAttr.highcolor, '00CC00')),\n      lowColor = parseColor(pluck(chartAttr.lowcolor, 'CC0000')),\n\n      anchorColor = parseColor(pluck(chartAttr.anchorcolor, colorM.getColor('plotFillColor'))),\n      // Whether to show anchors for open, close, high & low\n      showOpenAnchor =\n                  pluckNumber(chartAttr.showopenanchor, chartAttr.drawanchors, chartAttr.showanchors, 1),\n      showCloseAnchor = pluckNumber(chartAttr.showcloseanchor, chartAttr.drawanchors,\n        chartAttr.showanchors, 1),\n      showHighAnchor =\n                  pluckNumber(chartAttr.showhighanchor, chartAttr.drawanchors, chartAttr.showanchors, 1),\n      showLowAnchor =\n                  pluckNumber(chartAttr.showlowanchor, chartAttr.drawanchors, chartAttr.showanchors, 1),\n      anchorAlpha = pluckNumber(chartAttr.anchoralpha, 100),\n      showAnchors = pluckNumber(chartAttr.drawanchors, chartAttr.showanchors, 0),\n      defAnchorAlpha = showAnchors ? pluckNumber(chartAttr.anchoralpha, 100) : 0,\n      lineColor = pluck(chartAttr.linecolor, colorM.getColor('plotFillColor')),\n      sparkValues,\n      hasValidValue,\n      highValue,\n      lowValue,\n      pointAnchorAlpha,\n      highDisplayValue,\n      lowDisplayValue,\n      openDisplayValue,\n      macroIndices,\n      parserConfig,\n      closeDisplayValue;\n\n    dataStore = dataSet.components.data;\n\n    highValue = conf.maxValue;\n    lowValue = conf.minValue;\n    conf.shadow = {\n      opacity: pluckNumber(chartAttr.showshadow, 0)\n        ? conf.alpha / 100 : 0\n    };\n\n    // openValue\n    dataObj = dataStore[0];\n    config = dataObj.config;\n    config.anchorProps.bgColor = pluck(dataObj.anchorbgcolor, openColor);\n    config.anchorProps.enabled = !!showOpenAnchor;\n    config.anchorProps.bgAlpha = showOpenAnchor ? pointAnchorAlpha : 0;\n    // Apply appropriate hover efffects on openValue\n    if (config.anchorProps.enabled && config.hoverEffects) {\n      config.hoverEffects.anchorColor = pluck(chartAttr.openhovercolor,\n        chartAttr.anchorhovercolor, chartAttr.plotfillhovercolor, getLightColor(openColor, 70));\n      config.hoverEffects.anchorBgAlpha = pluckNumber(chartAttr.openhoveralpha, chartAttr.anchorhoveralpha,\n        chartAttr.plotfillhoveralpha, 100);\n    }\n    openDisplayValue = config.displayValue;\n\n    // closeValue\n    dataObj = dataStore[len - 1];\n    config = dataObj.config;\n    config.anchorProps.bgColor = pluck(dataObj.anchorbgcolor, closeColor);\n    config.anchorProps.enabled = !!showCloseAnchor;\n    config.anchorProps.bgAlpha = showCloseAnchor ? pointAnchorAlpha : 0;\n    // Apply appropriate hover efffects on openValue\n    if (config.anchorProps.enabled && config.hoverEffects) {\n      config.hoverEffects.anchorColor = pluck(chartAttr.closehovercolor,\n        chartAttr.anchorhovercolor, chartAttr.plotfillhovercolor, getLightColor(closeColor, 70));\n      config.hoverEffects.anchorBgAlpha = pluckNumber(chartAttr.closehoveralpha, chartAttr.anchorhoveralpha,\n        chartAttr.plotfillhoveralpha, 100);\n    }\n    closeDisplayValue = config.displayValue;\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj.config;\n      setData = setDataArr[i];\n\n      pointAnchorAlpha = pluckNumber(setData.anchorbgalpha, anchorAlpha);\n      conf.maxRadius = -Infinity;\n      // Skipp color parsing for open and close values\n      if (i !== 0 && i !== len - 1) {\n        config.anchorProps.bgColor = pluck(setData.anchorbgcolor, anchorColor);\n        config.anchorProps.bgAlpha = pluckNumber(setData.anchorbgalpha, defAnchorAlpha);\n        config.hoverEffects.anchorColor = parseColor(pluck(chartAttr.anchorhovercolor,\n          chartAttr.plotfillhovercolor, getLightColor(lineColor, 70)));\n        config.hoverEffects.anchorBgAlpha = pluckNumber(\n          chartAttr.lowhoveralpha, chartAttr.anchorhoveralpha, chartAttr.plotfillhoveralpha, 100);\n      }\n\n      config.dataLabelStyle = dataSet._configureDataLabelStyle(setData);\n\n      config.anchorProps.radius = pluckNumber(chartAttr.anchorradius, setData.anchorradius, 2);\n      config.anchorProps.borderThickness = 0;\n      config.hoverEffects.anchorBorderThickness = 0;\n      config.hoverEffects.anchorRadius = pluckNumber(chartAttr.anchorhoverradius, chartAttr.anchorradius,\n        setData.anchorradius, 3);\n      conf.maxRadius = Math.max(config.anchorProps.radius + (config.anchorProps.borderThickness / 2),\n        conf.maxRadius);\n\n      if (config.setValue === lowValue) {\n        config.anchorProps.bgColor = pluck(setData.anchorbgcolor, lowColor);\n        config.hoverEffects.anchorColor = pluck(chartAttr.lowhovercolor,\n          chartAttr.anchorhovercolor, chartAttr.plotfillhovercolor, getLightColor(lowColor, 70));\n        config.hoverEffects.anchorBgAlpha = pluckNumber(chartAttr.lowhoveralpha, chartAttr.anchorhoveralpha,\n          chartAttr.plotfillhoveralpha, 100);\n        config.anchorProps.enabled = !!showLowAnchor;\n        config.anchorProps.bgAlpha = showLowAnchor ? pointAnchorAlpha : 0;\n        lowDisplayValue = config.displayValue;\n      }\n      if (config.setValue === highValue) {\n        config.anchorProps.bgColor = pluck(setData.anchorbgcolor, highColor);\n        config.hoverEffects.anchorColor = pluck(chartAttr.highhovercolor,\n          chartAttr.anchorhovercolor, chartAttr.plotfillhovercolor, getLightColor(highColor, 70));\n        config.hoverEffects.anchorBgAlpha = pluckNumber(chartAttr.highhoveralpha,\n          chartAttr.anchorhoveralpha, chartAttr.plotfillhoveralpha, 100);\n        config.anchorProps.enabled = !!showHighAnchor;\n        config.anchorProps.bgAlpha = showHighAnchor ? pointAnchorAlpha : 0;\n        highDisplayValue = config.displayValue;\n      }\n      if (defined(config.setValue)) {\n        hasValidValue = 1;\n      }\n      config._x = i;\n      config._y = config.setValue;\n    }\n\n    sparkValues = chartConf.sparkValues = {\n      openValue: {\n        color: openColor\n      },\n      closeValue: {\n        color: closeColor\n      },\n      highValue: {\n        color: highColor\n      },\n      lowValue: {\n        color: lowColor\n      },\n      highLowValue: {\n      }\n    };\n\n    if (hasValidValue) {\n      sparkValues.openValue.label = pluckNumber(chartAttr.showopenvalue, 1)\n        ? openDisplayValue : BLANKSTRING;\n      sparkValues.closeValue.label = pluckNumber(chartAttr.showclosevalue, 1)\n        ? closeDisplayValue : BLANKSTRING;\n      if (pluckNumber(chartAttr.showhighlowvalue, 1)) {\n        // Store complete high, low label to label for the space manager.\n        sparkValues.highLowValue.label = '[' + highDisplayValue + ' | ' +\n                      lowDisplayValue + ']';\n        // Store high, low label separately to render the labels\n        // Using different color style.\n        sparkValues.highValue.label = highDisplayValue;\n        sparkValues.lowValue.label = lowDisplayValue;\n      }\n    }\n\n    for (i = 0; i < len; i++) {\n      let dataObject = dataStore[i],\n        configuration = dataObject.config;\n      if ((configuration.setTooltext !== UNDEF)) {\n        macroIndices = [54, 55, 56, 57, 58, 59, 60, 61];\n        parserConfig = {\n          openValue: sparkValues.openValue.label,\n          openDataValue: sparkValues.openValue.label,\n          closeValue: sparkValues.closeValue.label,\n          closeDataValue: sparkValues.closeValue.label,\n          highValue: sparkValues.highValue.label,\n          highDataValue: sparkValues.highValue.label,\n          lowValue: sparkValues.lowValue.label,\n          lowDataValue: sparkValues.lowValue.label\n        };\n        configuration.toolText = parseTooltext(configuration.setTooltext, macroIndices,\n          parserConfig, setData, chartAttr, JSONData);\n        configuration.finalTooltext = configuration.setTooltext = configuration.toolText;\n      }\n    }\n  }\n  /**\n   * Draws graphics of sparkline\n   */\n  draw () {\n    var dataSet = this;\n\n    super.draw();\n\n    dataSet._drawSparkValues();\n  }\n  /**\n   * Draws spark values\n   */\n  _drawSparkValues () {\n    var dataSet = this;\n\n    drawSparkValues.call(dataSet);\n  }\n}\nexport default SparkLineDataset;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  '*.dataset.sparkLine': lineAnimation['*.dataset.line']\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  pluck,\n  pluckNumber,\n  convertColor,\n  UNDEF\n} from '@fusioncharts/core/src/lib';\nimport SparkChartBase from '../_internal/sparkbase';\nimport SparkWinLossDataset from '../../dataset/sparkwinloss';\nvar GUTTER_PADDING = 2,\n  math = Math,\n  mathMin = math.min,\n  DS_TYPE = 'sparkwinloss',\n  FRIENDLY_NAME = 'sparkwinloss Chart';\n/**\n * Calculates space for values\n * @param {number} availableWidth available width for values\n * @return {Object} dimension taken by values(width, height)\n */\nfunction _placeOpenCloseValues (availableWidth) {\n  var iapi = this,\n    config = iapi.config,\n    smartLabel = iapi.getFromEnv('smartLabel'),\n    style = config.dataLabelStyle,\n    borderThickness = pluckNumber(style.borderThickness, 0),\n    valuePadding = iapi.config.valuepadding + GUTTER_PADDING + borderThickness,\n    openValueWidth = 0,\n    closeValueWidth = 0,\n    // height = chartConfig.height,\n    // width = availableWidth,\n    sparkValues = config.sparkValues || {},\n    left,\n    right;\n  smartLabel.useEllipsesOnOverflow(config.useEllipsesWhenOverflow);\n  smartLabel.setStyle(style);\n\n  if (sparkValues.openValue && sparkValues.openValue.label) {\n    sparkValues.openValue.smartObj = smartLabel.getSmartText(sparkValues.openValue.label);\n    openValueWidth = sparkValues.openValue.smartObj.width + valuePadding;\n  }\n  if (sparkValues.closeValue && sparkValues.closeValue.label) {\n    sparkValues.closeValue.smartObj = smartLabel.getSmartText(sparkValues.closeValue.label);\n    closeValueWidth += sparkValues.closeValue.smartObj.width + valuePadding;\n  }\n  if (sparkValues.highValue && sparkValues.highValue.label) {\n    sparkValues.highValue.smartObj = smartLabel.getSmartText(sparkValues.highValue.label);\n  }\n  if (sparkValues.lowValue && sparkValues.lowValue.label) {\n    sparkValues.lowValue.smartObj = smartLabel.getSmartText(sparkValues.lowValue.label);\n  }\n  if (sparkValues.highLowValue && sparkValues.highLowValue.label) {\n    sparkValues.highLowValue.smartObj = smartLabel.getSmartText(sparkValues.highLowValue.label);\n    closeValueWidth += sparkValues.highLowValue.smartObj.width + valuePadding;\n  }\n\n  // Restrict the space to availableWidth\n  left = sparkValues.openValueWidth = mathMin(openValueWidth, availableWidth);\n  right = sparkValues.closeValueWidth = mathMin(closeValueWidth, (availableWidth - left));\n\n  return {\n    left: left,\n    right: right\n  };\n}\n/**\n * Parse Canvas cosmetics\n * @return {Object} the canvas config that needs to be overridden\n */\nfunction _parseCanvasCosmetics () {\n  var canvasBorderThickness,\n    showCanvasBorder,\n    shadow,\n    iapi = this,\n    canvasConfig = {},\n    chartAttrs = iapi.getFromEnv('dataSource').chart,\n    colorM = iapi.getFromEnv('color-manager');\n\n  canvasConfig.canvasBorderRadius = 0;\n  canvasBorderThickness = canvasConfig.canvasBorderThickness = 0;\n\n  showCanvasBorder = canvasConfig.showCanvasBorder = 0;\n\n  canvasConfig.canvasBorderWidth = !showCanvasBorder ? 0 : canvasBorderThickness;\n  canvasConfig.canvasBorderColor = convertColor(pluck(chartAttrs.canvasbordercolor,\n    colorM.getColor('canvasBorderColor')));\n\n  // Make canvas background transparent for sparkWinLoss and sparkLine charts.\n  canvasConfig.canBGColor = {\n    FCcolor: {\n      color: 'ffffff',\n      alpha: 0,\n      angle: 0,\n      ratio: UNDEF\n    }\n  };\n\n  shadow = canvasConfig.shadow = 0;\n  canvasConfig.shadowOnCanvasFill = shadow && shadow.enabled;\n\n  // canvas padding\n  canvasConfig.origCanvasTopPad = pluckNumber(chartAttrs.canvastoppadding, 0);\n  canvasConfig.origCanvasBottomPad = pluckNumber(chartAttrs.canvasbottompadding, 0);\n  canvasConfig.origCanvasLeftPad = pluckNumber(chartAttrs.canvasleftpadding, 0);\n  canvasConfig.origCanvasRightPad = pluckNumber(chartAttrs.canvasrightpadding, 0);\n\n  canvasConfig.canvasPadding = 0;\n\n  return canvasConfig;\n}\n/**\n * Creates SparkWinLoss class\n */\nclass SparkWinLoss extends SparkChartBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'SparkWinLoss';\n  }\n\n  /**\n   * Constructor function of class SparkWinLoss\n   */\n  constructor () {\n    super();\n    this._placeOpenCloseValues = _placeOpenCloseValues;\n    this._parseCanvasCosmetics = _parseCanvasCosmetics;\n  }\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.drawTrendRegion = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'SparkWinLoss';\n  }\n  /**\n   * Set default configurations for chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = FRIENDLY_NAME;\n    config.singleseries = true;\n    config.defaultDatasetType = DS_TYPE;\n    config.enablemousetracking = true;\n    config.yRangeMin = -1;\n    config.yRangeMax = 1;\n    config.canvasborderthickness = 0;\n  }\n  /**\n   * Returns Dataset type for Spark Win Loss\n   * @return {Class} SparkWinLossDataset class\n   */\n  getDSdef () {\n    return SparkWinLossDataset;\n  }\n}\nexport default SparkWinLoss;\nexport { _placeOpenCloseValues, _parseCanvasCosmetics };\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  BLANKSTRING,\n  pluck,\n  pluckNumber,\n  parseUnsafeString,\n  toRaphaelColor,\n  POSITION_START,\n  POSITION_END,\n  getDashStyle,\n  getValidValue,\n  HUNDREDSTRING,\n  getLightColor,\n  getColumnColor, hashify\n} from '@fusioncharts/core/src/lib';\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport sparkwinlossAnimation from './index.animation';\nvar UNDEF,\n  math = Math,\n  mathMin = math.min,\n  mathMax = math.max,\n  GUTTER_PADDING = 2,\n  drawSparkValues = function () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConf = chart.config,\n      style = chartConf.dataLabelStyle,\n      valuePadding = chartConf.valuepadding + GUTTER_PADDING,\n      dataLabelContainer = dataSet.getContainer('labelGroup'),\n      sparkValues = chartConf.sparkValues || (chartConf.sparkValues = {}),\n      closeValue = dataSet.getGraphicalElement('closeValue'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      textAttr = {\n        'class': 'fusioncharts-label',\n        'text-anchor': POSITION_END,\n        fill: style.color,\n        'font-size': style.fontSize,\n        'font-weight': style.fontWeight,\n        'font-style': style.fontStyle,\n        'font-family': style.fontFamily,\n        visibility: 'visible'\n      },\n      attr = {\n        x: 0,\n        y: 0\n      };\n\n    // Spark values are not visible due to the clip-rect,\n    // so removing clip-rect in order to make spark labels visible\n    chart.getChildContainer('datalabelsGroup').attr({\n      'clip-rect': null\n    });\n\n    attr.y = chartConf.canvasHeight * 0.5 + chartConf.canvasTop;\n    textAttr['text-anchor'] = POSITION_START;\n    attr.x = chartConf.canvasWidth + chartConf.canvasLeft + valuePadding;\n    if (sparkValues.closeValue && sparkValues.closeValue.label) {\n      dataSet.addGraphicalElement(\n        'closeValue',\n        animationManager.setAnimation({\n          el: closeValue || 'text',\n          attr: {\n            text: sparkValues.closeValue.label,\n            x: attr.x,\n            y: attr.y,\n            fill: sparkValues.closeValue.color || textAttr.fill,\n            'text-anchor': POSITION_START,\n            'line-height': style.lineHeight,\n            'text-bound': [style.backgroundColor, style.borderColor,\n              style.borderThickness, style.borderPadding, style.borderRadius, style.borderDash],\n            visibility: 'visible'\n          },\n          container: dataLabelContainer,\n          component: dataSet,\n          label: 'text'\n        })\n      );\n      attr.x += (sparkValues.closeValue.smartObj &&\n                  sparkValues.closeValue.smartObj.width + GUTTER_PADDING + valuePadding) || 0;\n    }\n    dataSet.labelDrawn = true;\n  };\naddDep({\n  name: 'sparkwinlossAnimation',\n  type: 'animationRule',\n  extension: sparkwinlossAnimation\n});\n/**\n * Creates class for SparkWinLossDataset\n */\nclass SparkWinLossDataset extends ColumnDataset {\n  /**\n   * Constructor funtion of SparkWinLossDataset class\n   */\n  constructor () {\n    super();\n    this.drawLabel = drawSparkValues;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'sparkWinLoss';\n  }\n  /**\n   * Configures data level attribute settings\n   * @param {Object} newDataset newly added dataset object\n   * @param {number} newIndex index of newly added dataset\n   */\n  _setConfigure (newDataset, newIndex) {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      conf = dataSet.config,\n      JSONData = dataSet.config.JSONData,\n      setDataArr = newDataset || JSONData.data,\n      setDataLen = setDataArr && setDataArr.length,\n      xAxis = dataSet.getFromEnv('xAxis'),\n      catLen = xAxis.getTicksLen(),\n      len = (newDataset && newDataset.data.length) || mathMin(catLen, setDataLen),\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      colorM = dataSet.getFromEnv('color-manager'),\n      index = dataSet.index || dataSet.positionIndex,\n      showplotborder = chartConfig.showplotborder,\n      plotColor = conf.plotColor = colorM.getPlotColor(index),\n      plotFillColor = pluck(chartAttr.plotfillcolor, colorM.getColor('plotFillColor')),\n      winColor = pluck(chartAttr.wincolor, colorM.getColor('winColor')),\n      lossColor = pluck(chartAttr.losscolor, colorM.getColor('lossColor')),\n      drawColor = pluck(chartAttr.drawcolor, colorM.getColor('drawColor')),\n      scorelessColor = pluck(chartAttr.scorelesscolor, colorM.getColor('scorelessColor')),\n      winHoverColor = chartAttr.winhovercolor,\n      lossHoverColor = chartAttr.losshovercolor,\n      drawHoverColor = chartAttr.drawhovercolor,\n      scoreLessHoverColor = chartAttr.scorelesshovercolor,\n      numWon = 0,\n      numLost = 0,\n      numDraw = 0,\n      tempPlotfillAngle,\n      // toolText,\n      plotDashLen,\n      plotDashGap,\n      plotBorderThickness = chartConfig.plotborderthickness,\n      isRoundEdges = chartConfig.isroundedges,\n      showHoverEffect = chartConfig.plothovereffect,\n      plotfillAngle = conf.plotfillangle,\n      plotFillAlpha,\n      // plotRadius,\n      plotFillRatio,\n      // plotgradientcolor,\n      plotBorderAlpha,\n      plotBorderDashStyle,\n      initailPlotBorderDashStyle = conf.plotBorderDashStyle,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      colorArr,\n      hoverColor,\n      hoverAlpha,\n      hoverGradientColor,\n      hoverRatio,\n      hoverAngle,\n      hoverBorderColor,\n      hoverBorderAlpha,\n      hoverBorderThickness,\n      hoverBorderDashed,\n      hoverBorderDashGap,\n      hoverBorderDashLen,\n      hoverDashStyle,\n      hoverColorArr,\n      // getDashStyle = lib.getDashStyle,\n      dataStore = dataSet.components.data,\n      // definedGroupPadding,\n      isBar = chart.isBar,\n      is3D = chart.is3D,\n      // isStacked = chart.isStacked,\n      // stack100Percent,\n      // enableAnimation,\n      setDataDashed,\n      setDataPlotDashLen,\n      setDataPlotDashGap,\n      i,\n      maxValue = conf.maxValue || -Infinity,\n      minValue = conf.minValue || +Infinity,\n      showPlotBorder,\n      tempIndex;\n\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n\n    super._setConfigure();\n\n    conf.plotgradientcolor = BLANKSTRING;\n    showPlotBorder = conf.showPlotBorder = pluckNumber(chartAttr.showplotborder, conf.usePattern ? 1 : 0);\n    conf.plotborderalpha = plotBorderAlpha = showPlotBorder ? pluck(chartAttr.plotborderalpha,\n      plotFillAlpha, HUNDREDSTRING) : 0;\n    conf.showTooltip = 0;\n    chartConfig.showtooltip = 0;\n    // Parsing the attributes and values at set level.\n    for (i = 0; i < len; i++) {\n      if (newDataset) {\n        setData = (newDataset && newDataset.data[i]);\n\n        if (newIndex !== UNDEF) {\n          tempIndex = newIndex + i;\n          dataObj = dataStore[tempIndex];\n        } else {\n          tempIndex = dataStore.length - len + i;\n          dataObj = dataStore[tempIndex];\n        }\n      } else {\n        dataObj = dataStore[i];\n        setData = setDataArr[i];\n      }\n\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {};\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n\n      switch ((setData.value || '').toLowerCase()) {\n        case 'w':\n          plotColor = pluck(setData.color, winColor, plotFillColor);\n          hoverColor = pluck(setData.hovercolor, winHoverColor, plotColor);\n          config.setValue = setValue = 1;\n          numWon += 1;\n          break;\n        case 'l':\n          plotColor = pluck(setData.color, lossColor, plotFillColor);\n          hoverColor = pluck(setData.hovercolor, lossHoverColor, plotColor);\n          config.setValue = setValue = -1;\n          numLost += 1;\n          break;\n        case 'd':\n          plotColor = pluck(setData.color, drawColor, plotFillColor);\n          hoverColor = pluck(setData.hovercolor, drawHoverColor, plotColor);\n          config.setValue = setValue = 0.1;\n          numDraw += 1;\n          break;\n        default :\n          config.setValue = setValue = null;\n      }\n      if (Number(setData.scoreless) === 1) {\n        plotColor = pluck(setData.color, scorelessColor, plotFillColor);\n        hoverColor = pluck(setData.hovercolor, scoreLessHoverColor,\n          setData.color, scorelessColor, hoverColor);\n      }\n      config.originalPlotColor = hashify(plotColor);\n\n      config.toolText = false;\n      // config.showValue = pluckNumber(setData.showvalue, conf.showValues);\n      config.setLink = pluck(setData.link);\n      // config.toolTipValue = toolTipValue = yAxis.dataLabels(setValue);\n      config.setDisplayValue = parseUnsafeString(setData.displayvalue);\n      // config.displayValue = pluck(setDisplayValue, toolTipValue);\n      setDataDashed = pluckNumber(setData.dashed);\n      setDataPlotDashLen = pluckNumber(setData.dashlen, plotDashLen);\n      setDataPlotDashGap = plotDashGap = pluckNumber(setData.dashgap, conf.plotDashGap);\n\n      if (setValue !== null) {\n        maxValue = mathMax(maxValue, setValue);\n        minValue = mathMin(minValue, setValue);\n      }\n\n      config.plotBorderDashStyle = plotBorderDashStyle = setDataDashed === 1\n        ? getDashStyle(setDataPlotDashLen, setDataPlotDashGap)\n        : (setDataDashed === 0 ? 'none' : initailPlotBorderDashStyle);\n\n      plotFillAlpha = pluck(setData.alpha, conf.plotfillalpha);\n      plotBorderAlpha = pluck(setData.alpha, conf.plotborderalpha, plotFillAlpha).toString();\n      // Setting the angle for plot fill for negative data\n      if (setValue < 0 && !isRoundEdges) {\n        tempPlotfillAngle = conf.plotfillAngle;\n        plotfillAngle = isBar ? 180 - plotfillAngle : 360 - plotfillAngle;\n      }\n      config.plotbordercolor = conf.usePattern && !chartAttr.plotbordercolor\n        ? plotColor\n        : conf.plotbordercolor;\n      // Setting the color Array to be applied to the bar/column.\n      config.colorArr = colorArr = getColumnColor(\n        plotColor + ',' + conf.plotgradientcolor,\n        plotFillAlpha,\n        plotFillRatio = conf.plotfillratio,\n        plotfillAngle,\n        isRoundEdges,\n        config.plotbordercolor,\n        plotBorderAlpha,\n        (isBar ? 1 : 0),\n        (!!is3D)\n      );\n\n      config.label = getValidValue(parseUnsafeString(xAxis.getLabel(pluckNumber(tempIndex -\n                  len, i)).label));\n\n      // Parsing the hover effects only if showhovereffect is not 0.\n      if (showHoverEffect !== 0) {\n        hoverColor = pluck(setData.hovercolor, JSONData.hovercolor, chartAttr.plotfillhovercolor,\n          chartAttr.columnhovercolor, plotColor);\n        hoverAlpha = pluck(setData.hoveralpha, JSONData.hoveralpha,\n          chartAttr.plotfillhoveralpha, chartAttr.columnhoveralpha, plotFillAlpha);\n        hoverGradientColor = pluck(setData.hovergradientcolor,\n          JSONData.hovergradientcolor, chartAttr.plothovergradientcolor, conf.plotgradientcolor);\n        !hoverGradientColor && (hoverGradientColor = '');\n        hoverRatio = pluck(setData.hoverratio,\n          JSONData.hoverratio, chartAttr.plothoverratio, plotFillRatio);\n        hoverAngle = pluckNumber(360 - setData.hoverangle,\n          360 - JSONData.hoverangle, 360 - chartAttr.plothoverangle, plotfillAngle);\n        hoverBorderColor = pluck(setData.borderhovercolor,\n          JSONData.borderhovercolor, chartAttr.plotborderhovercolor, conf.plotbordercolor);\n        hoverBorderAlpha = pluck(setData.borderhoveralpha,\n          JSONData.borderhoveralpha, chartAttr.plotborderhoveralpha,\n          plotBorderAlpha, plotFillAlpha);\n        hoverBorderThickness = pluckNumber(setData.borderhoverthickness,\n          JSONData.borderhoverthickness, chartAttr.plotborderhoverthickness, plotBorderThickness);\n        hoverBorderDashed = pluckNumber(setData.borderhoverdashed,\n          JSONData.borderhoverdashed, chartAttr.plotborderhoverdashed);\n        hoverBorderDashGap = pluckNumber(setData.borderhoverdashgap,\n          JSONData.borderhoverdashgap, chartAttr.plotborderhoverdashgap, plotDashLen);\n        hoverBorderDashLen = pluckNumber(setData.borderhoverdashlen,\n          JSONData.borderhoverdashlen, chartAttr.plotborderhoverdashlen, plotDashGap);\n        hoverDashStyle = hoverBorderDashed\n          ? getDashStyle(hoverBorderDashLen, hoverBorderDashGap)\n          : plotBorderDashStyle;\n\n        config.hoverColor = hoverColor;\n        /* If no hover effects are explicitly defined and\n                   * showHoverEffect is not 0 then hoverColor is set.\n                   */\n        if (showHoverEffect === 1 && hoverColor === plotColor) {\n          hoverColor = getLightColor(hoverColor, 70);\n        }\n        // setting the hover color array which is always applied except when showHoverEffect is not 0.\n        hoverColorArr = getColumnColor(\n          hoverColor + ',' + hoverGradientColor,\n          hoverAlpha,\n          hoverRatio,\n          hoverAngle,\n          isRoundEdges,\n          hoverBorderColor,\n          hoverBorderAlpha.toString(),\n          (isBar ? 1 : 0),\n          (!!is3D)\n        );\n\n        config.setRolloutAttr = {\n          fill: !is3D ? toRaphaelColor(colorArr[0])\n            : [toRaphaelColor(colorArr[0]), !chartConfig.use3dlighting],\n          stroke: showplotborder && toRaphaelColor(colorArr[1]),\n          'stroke-width': plotBorderThickness,\n          'stroke-dasharray': plotBorderDashStyle\n        };\n        config.setRolloverAttr = {\n          fill: !is3D ? toRaphaelColor(hoverColorArr[0])\n            : [toRaphaelColor(hoverColorArr[0]), !chartConfig.use3dlighting],\n          stroke: showplotborder && toRaphaelColor(hoverColorArr[1]),\n          'stroke-width': hoverBorderThickness,\n          'stroke-dasharray': hoverDashStyle\n        };\n      }\n\n      // formatedVal = config.toolTipValue;\n\n      // config.toolText = toolText;\n      // config.setTooltext = toolText;\n      tempPlotfillAngle && (plotfillAngle = tempPlotfillAngle);\n\n      tempIndex++;\n      config._x = i;\n      config._y = setValue;\n    }\n\n    conf.maxValue = 1;\n    conf.minValue = -1;\n\n    if (pluckNumber(chartAttr.showvalue, 1) === 1) {\n      chartConfig.sparkValues = {\n        closeValue: {\n        }\n      };\n      chartConfig.sparkValues.closeValue.label = numWon + '-' + numLost + ((numDraw > 0)\n        ? ('-' + numDraw) : BLANKSTRING);\n    } else {\n      chartConfig.sparkValues = UNDEF;\n    }\n  }\n}\nexport default SparkWinLossDataset;\n","// import { animHelperFN } from '../lib';\nimport columnAnimation from '@fusioncharts/charts/src/dataset/column/index.animation';\n\nexport default {\n  'initial.dataset.sparkWinLoss': columnAnimation['initial.dataset.column']\n};\n","import Sparkcolumn from '@fusioncharts/widgets/src/chart/sparkcolumn';\nexport default Sparkcolumn;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  pluck,\n  pluckNumber,\n  chartPaletteStr,\n  convertColor\n} from '@fusioncharts/core/src/lib';\nimport SparkChartBase from '../_internal/sparkbase';\nimport SparkColumnDataset from '../../dataset/sparkcolumn';\nvar math = Math,\n  mathMax = math.max,\n  DS_TYPE = 'sparkcolumn',\n  FRIENDLY_NAME = 'sparkcolumn Chart';\n  /**\n   * Creates SparkColumn class\n   */\nclass SparkColumn extends SparkChartBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'SparkColumn';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'SparkColumn';\n  }\n  /**\n   * Set default configurations for chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = FRIENDLY_NAME;\n    config.singleseries = false;\n    config.defaultDatasetType = DS_TYPE;\n    config.showplotborder = 0;\n    config.enablemousetracking = true;\n    config.canvasborderthickness = 1;\n  }\n  /**\n   * Returns Class SparkColumnDataset\n   * @return {Class} SparkColumnDataset class\n   */\n  getDSdef () {\n    return SparkColumnDataset;\n  }\n  /**\n   * Configure default canvas cosmetics\n   * @return {Object} the canvas config that needs to be overridden\n   */\n  _parseCanvasCosmetics () {\n    var canvasBorderThickness,\n      canBGAlpha,\n      showCanvasBorder,\n      shadow,\n      iapi = this,\n      canvasConfig = {},\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      colorM = iapi.getFromEnv('color-manager'),\n      is3D = iapi.config.is3D,\n      oriCanvasBorderThickness,\n      palleteString = is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      isRoundEdges = canvasConfig.isRoundEdges = pluckNumber(chartAttrs.useroundedges, 0),\n      showAxisLine = pluckNumber(chartAttrs.showxaxisline, chartAttrs.showyaxisline, 0),\n      hideAxisLine = showAxisLine ? 0 : 1;\n\n    canvasConfig.canvasBorderRadius = pluckNumber(chartAttrs.plotborderradius, isRoundEdges ? 2 : 0);\n\n    showCanvasBorder = canvasConfig.showCanvasBorder =\n              Boolean(pluckNumber(chartAttrs.showcanvasborder, hideAxisLine, canvasBorderThickness,\n                isRoundEdges ? 0 : 1));\n\n    // Storing original canvasBorderThickness for future reference\n    oriCanvasBorderThickness = canvasConfig.oriCanvasBorderThickness = mathMax(pluckNumber(\n      chartAttrs.canvasborderthickness, isRoundEdges ? 0 : pluckNumber(iapi.config.canvasborderthickness, 1), 0));\n\n    canvasBorderThickness = canvasConfig.canvasBorderWidth = iapi.is3D ? 0\n      : showCanvasBorder ? oriCanvasBorderThickness : 0;\n\n    canvasConfig.canvasBorderColor = convertColor(pluck(chartAttrs.canvasbordercolor,\n      colorM.getColor('canvasBorderColor')),\n    pluck(chartAttrs.canvasborderalpha, colorM.getColor('canvasBorderAlpha')));\n    canBGAlpha = canvasConfig.canBGAlpha = pluck(chartAttrs.canvasbgalpha,\n      colorM.getColor('canvasBgAlpha'));\n\n    canvasConfig.canBGColor = {\n      FCcolor: {\n        color: pluck(chartAttrs.canvasbgcolor, colorM.getColor(palleteString.canvasBgColor)),\n        alpha: pluck(chartAttrs.canvasbgalpha, 100),\n        angle: pluck(chartAttrs.canvasbgangle, 0),\n        ratio: pluck(chartAttrs.canvasbgratio)\n      }\n    };\n\n    shadow = canvasConfig.shadow = pluckNumber(chartAttrs.showshadow, isRoundEdges, 0) && isRoundEdges ? {\n      enabled: true,\n      opacity: canBGAlpha / 100\n    } : 0;\n    canvasConfig.shadowOnCanvasFill = shadow && shadow.enabled;\n\n    // canvas padding\n    canvasConfig.canvasPadding = pluckNumber(chartAttrs.canvaspadding, 0);\n\n    canvasConfig.origCanvasTopPad = pluckNumber(chartAttrs.canvastoppadding, 0);\n    canvasConfig.origCanvasBottomPad = pluckNumber(chartAttrs.canvasbottompadding, 0);\n    canvasConfig.origCanvasLeftPad = pluckNumber(chartAttrs.canvasleftpadding, 0);\n    canvasConfig.origCanvasRightPad = pluckNumber(chartAttrs.canvasrightpadding, 0);\n\n    return canvasConfig;\n  }\n}\nexport default SparkColumn;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  BLANKSTRING,\n  pluck,\n  pluckNumber,\n  COMMASTRING,\n  parseTooltext,\n  toRaphaelColor,\n  HUNDREDSTRING,\n  getLightColor,\n  hashify,\n  getColumnColor\n} from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport sparkcolumnAnimation from './index.animation';\nvar UNDEF,\n  math = Math,\n  mathMin = math.min;\n  // mathRound = math.round,\n\naddDep({\n  name: 'sparkcolumnAnimation',\n  type: 'animationRule',\n  extension: sparkcolumnAnimation\n});\n/**\n * Creates class SparkColumnDataset\n */\nclass SparkColumnDataset extends ColumnDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'sparkColumn';\n  }\n  parseAttributes () {\n    super.parseAttributes();\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      JSONData = dataSet.config.JSONData,\n      chartAttr = chart.getFromEnv('chart-attrib');\n    conf.showValues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 0);\n  }\n  /**\n   * Configures data level attribute settings\n   * @param {Object} newDataset newly added dataset object\n   */\n  _setConfigure (newDataset) {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      conf = dataSet.config,\n      chartConfig = chart.config,\n      JSONData = dataSet.config.JSONData,\n      setDataArr = newDataset || JSONData.data,\n      setDataLen = setDataArr && setDataArr.length,\n      xAxis = dataSet.getFromEnv('xAxis'),\n      catLen = xAxis.getTicksLen(),\n      len = (newDataset && newDataset.data.length) || mathMin(catLen, setDataLen),\n      showHoverEffect = chartConfig.plothovereffect,\n      colorM = dataSet.getFromEnv('color-manager'),\n      isRoundEdges = chartConfig.useroundedges,\n      plotFillColor,\n      color,\n      borderColor,\n      rawHoverColor,\n      hoverColor,\n      hoverAlpha,\n      hoverGradientColor,\n      hoverBorderColor,\n      hoverBorderAlpha,\n      borderThickness,\n      config,\n      plotFillAlpha,\n      plotBorderAlpha,\n      plotBorderColor,\n      highColor,\n      lowColor,\n      highBorderColor,\n      lowBorderColor,\n      highDisplayValue,\n      lowDisplayValue,\n      macroIndices,\n      parserConfig,\n      setData,\n      dataObj,\n      colorArr,\n      hoverColorArr,\n      i,\n      cLen,\n      cInd,\n      dataStore,\n      maxValue,\n      minValue;\n\n    conf.plotgradientcolor = BLANKSTRING;\n    conf.showvalues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 0);\n    conf.showShadow = pluckNumber(chartAttr.showshadow, 0);\n\n    // this.__base__._setConfigure.call(this);\n    super._setConfigure();\n\n    dataStore = dataSet.components.data;\n    maxValue = conf.maxValue;\n    minValue = conf.minValue;\n\n    plotFillColor = pluck(chartAttr.plotfillcolor, colorM.getColor('plotFillColor'));\n    plotFillAlpha = pluck(chartAttr.plotfillalpha, HUNDREDSTRING);\n    plotBorderAlpha = pluck(chartAttr.plotborderalpha, HUNDREDSTRING);\n    plotBorderColor = pluck(chartAttr.plotbordercolor, plotFillColor);\n\n    // Fill Color for high column and low column\n    highColor = pluck(chartAttr.highcolor, '000000');\n    lowColor = pluck(chartAttr.lowcolor, '000000');\n    highBorderColor = pluck(chartAttr.highbordercolor, chartAttr.plotbordercolor, highColor);\n    lowBorderColor = pluck(chartAttr.lowbordercolor, chartAttr.plotbordercolor, lowColor);\n    // conf.plotBorderThickness = borderThickness = pluckNumber(chartAttr.showplotborder, 0) ?\n    //         pluckNumber(chartAttr.plotborderthickness, 1) : 0;\n\n    // Loop through datastore and change the cosmetics\n    for (i = 0; i < len; i++) {\n      // Original data provided by user\n      setData = setDataArr[i];\n      // Parsed data previously\n      dataObj = dataStore[i];\n      config = dataObj.config;\n      colorArr = null;\n\n      color = plotFillColor;\n      borderColor = plotBorderColor;\n\n      // Max value\n      if (config.setValue === maxValue) {\n        color = highColor;\n        borderColor = highBorderColor;\n        highDisplayValue = config.displayValue;\n      }\n      // Min value\n      if (dataObj.config.setValue === minValue) {\n        color = lowColor;\n        borderColor = lowBorderColor;\n        lowDisplayValue = config.displayValue;\n      }\n      config.originalPlotColor = hashify(color);\n      config.plotbordercolor = borderColor;\n\n      // Setting the color Array to be applied to the bar/column.\n      config.colorArr = colorArr = getColumnColor(\n        color + COMMASTRING + conf.plotgradientcolor,\n        plotFillAlpha,\n        '0',\n        '90',\n        isRoundEdges,\n        borderColor,\n        plotBorderAlpha,\n        0,\n        0);\n\n      // Parsing the hover effects only if showhovereffect is not 0.\n      if (showHoverEffect !== 0 && colorArr) {\n        hoverColor = hoverAlpha = UNDEF;\n        // Max value\n        if (config.setValue === maxValue) {\n          hoverColor = chartAttr.highhovercolor;\n          hoverAlpha = chartAttr.highhoveralpha;\n        }\n        // Min value\n        if (dataObj.config.setValue === minValue) {\n          hoverColor = chartAttr.lowhovercolor;\n          hoverAlpha = chartAttr.lowhoveralpha;\n        }\n\n        hoverColor = rawHoverColor = pluck(setData.hovercolor, JSONData.hovercolor, hoverColor,\n          chartAttr.plotfillhovercolor, chartAttr.columnhovercolor,\n          colorArr[0].FCcolor.color);\n\n        hoverColor = hoverColor.split(/\\s{0,},\\s{0,}/);\n\n        cLen = hoverColor.length;\n        for (cInd = 0; cInd < cLen; cInd++) {\n          hoverColor[cInd] = getLightColor(hoverColor[cInd], 70);\n        }\n\n        hoverColor = hoverColor.join(',');\n\n        hoverAlpha = pluck(setData.hoveralpha, JSONData.hoveralpha, hoverAlpha,\n          chartAttr.plotfillhoveralpha, chartAttr.columnhoveralpha, plotFillAlpha);\n\n        config.hoverColor = rawHoverColor;\n        config.hoverAlpha = hoverAlpha;\n        hoverGradientColor = pluck(setData.hovergradientcolor,\n          JSONData.hovergradientcolor, chartAttr.plothovergradientcolor, conf.plotgradientcolor);\n        !hoverGradientColor && (hoverGradientColor = BLANKSTRING);\n\n        hoverBorderColor = pluck(setData.borderhovercolor,\n          JSONData.borderhovercolor, chartAttr.plotborderhovercolor, conf.plotbordercolor);\n        hoverBorderAlpha = pluck(setData.borderhoveralpha,\n          JSONData.borderhoveralpha, chartAttr.plotborderhoveralpha,\n          chartAttr.plotfillhoveralpha, plotBorderAlpha, plotFillAlpha);\n        // hoverBorderThickness = pluckNumber(setData.borderhoverthickness,\n        //               JSONData.borderhoverthickness, chartAttr.plotborderhoverthickness, borderThickness);\n\n        /* If no hover effects are explicitly defined and\n                   * showHoverEffect is not 0 then hoverColor is set.\n                   */\n        if (showHoverEffect === 1 && hoverColor === colorArr[0].FCcolor.color) {\n          hoverColor = getLightColor(hoverColor, 70);\n        }\n        // setting the hover color array which is always applied except when showHoverEffect is not 0.\n        hoverColorArr = getColumnColor(\n          hoverColor + COMMASTRING + hoverGradientColor,\n          hoverAlpha,\n          '0',\n          '90',\n          isRoundEdges,\n          hoverBorderColor,\n          hoverBorderAlpha.toString(),\n          0,\n          0);\n\n        config.setRolloutAttr = {\n          fill: toRaphaelColor(colorArr[0]),\n          stroke: borderThickness && toRaphaelColor(colorArr[1]),\n          'stroke-width': borderThickness\n        };\n        config.setRolloverAttr = {\n          fill: toRaphaelColor(hoverColorArr[0]),\n          stroke: borderThickness && toRaphaelColor(hoverColorArr[1]),\n          'stroke-width': borderThickness\n        };\n      }\n      config._x = i;\n      config._y = config.setValue;\n    }\n    for (i = 0; i < len; i++) {\n      let dataObject = dataStore[i],\n        configuration = dataObject.config;\n      if ((configuration.setTooltext !== UNDEF)) {\n        macroIndices = [56, 57, 60, 61];\n        parserConfig = {\n          highValue: highDisplayValue,\n          highDataValue: highDisplayValue,\n          lowValue: lowDisplayValue,\n          lowDataValue: lowDisplayValue\n        };\n        configuration.toolText = parseTooltext(configuration.setTooltext, macroIndices,\n          parserConfig, setData, chartAttr, JSONData);\n        configuration.finalTooltext = configuration.setTooltext = configuration.toolText;\n      }\n    }\n  }\n}\nexport default SparkColumnDataset;\n","import columnAnimation from '@fusioncharts/charts/src/dataset/column/index.animation';\n\nexport default {\n  'initial.dataset.sparkColumn': columnAnimation['initial.dataset.column']\n};\n","import Sparkwinloss from '@fusioncharts/widgets/src/chart/sparkwinloss';\nexport default Sparkwinloss;\n","import Realtimearea from '@fusioncharts/widgets/src/chart/realtimearea';\nexport default Realtimearea;\n","import { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\nimport RealtimeColumn from '../realtimecolumn';\nimport RealtimeAreaDataset from '../../dataset/realtimearea';\n\nconst DS_TYPE = 'realtimearea';\n\nclass RealtimeArea extends RealtimeColumn {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'RealtimeArea';\n  }\n\n  constructor () {\n    super();\n    this.axisPaddingLeft = 0;\n    this.axisPaddingRight = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'RealtimeArea';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    _setDefaultConfig.call(this);\n    let config = this.config;\n    config.defaultDatasetType = DS_TYPE;\n    config.enablemousetracking = true;\n  }\n  getDSdef () {\n    return RealtimeAreaDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   */\n  getDSGroupdef () {\n    // empty fn\n  }\n}\nexport default RealtimeArea;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport { TESTSTR, BLANKSTRING, preDefStr, pluck, pluckNumber,\n  convertColor } from '@fusioncharts/core/src/lib';\nimport RealtimeColumnDataset from '../../dataset/realtimecolumn';\nimport ColumnMultiseriesGroup from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\nimport MessageLogger from '@fusioncharts/features/src/messagelogger';\nimport AlertManager from '@fusioncharts/features/src/alertmanager';\nimport FusionCharts from '@fusioncharts/constructor/src/constructor';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport realtimeColumnChartAnimation from './index.animation';\nimport { _realTimeConfigure, eiMethods, _stopUpdate, _restartUpdate, _isUpdateActive,\n  realTimeUpdate, _RTmanageSpace, realTimeDraw, feedData, _linearDataParser,\n  _clearChart, _setRTmenu as __setRTmenu } from '../_internal/realtime';\nimport _getData from '@fusioncharts/core/src/_internal/misc/fetch-data';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport DataStreamer from '../_internal/datastreamer';\nlet UNDEF,\n  visibleStr = preDefStr.visibleStr,\n  DS_TYPE = 'realtimecolumn';\n\nfunction _setData (value, label, id) {\n  var stream = BLANKSTRING;\n\n  if ((value && value.toString) || value === BLANKSTRING || value === 0) {\n    stream = 'value=' + value.toString();\n  }\n  if ((label && label.toString) || label === BLANKSTRING) {\n    stream = stream + '&label=' + label.toString();\n  }\n  if ((id && id.toString) || id === BLANKSTRING) {\n    stream = stream + '&id=' + id.toString();\n  }\n  if (stream) {\n    this.feedData(stream);\n  }\n}\n\naddDep({\n  name: 'realtimeColumnChartAnimation',\n  type: 'animationRule',\n  extension: realtimeColumnChartAnimation\n});\n\nFusionCharts.addDep(DataStreamer);\n\nclass RealtimeColumn extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'RealtimeColumn';\n  }\n\n  constructor () {\n    super();\n    let iapi = this;\n    FusionCharts.addDep(MessageLogger);\n    FusionCharts.addDep(AlertManager);\n\n    this.showRTvalue = true;\n    this.canvasPadding = true;\n    this.isRealTime = true;\n    this.rtManageSpace = true;\n    this.transposeAxis = true;\n    this._setData = _setData;\n    this.eiMethods = eiMethods;\n    this._drawRTValue = function () {\n      iapi._drawRealTimeValue();\n    };\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'RealtimeColumn';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = DS_TYPE;\n    config.enablemousetracking = true;\n  }\n  asyncRealTimeValueDraw () {\n    this.addJob('realtimevaluedraw', this._drawRTValue, priorityList && priorityList.draw);\n  }\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.drawTrendRegion = 0;\n  }\n  _setCategories () {\n  // Setting the number of categories to be shown.\n    var iapi = this,\n      xAxis = iapi.getChildren('xAxis')[0],\n      tempArr = [],\n      tempCategories,\n      realTimeConfig = iapi.config.realTimeConfig,\n      clear = realTimeConfig && realTimeConfig.clear,\n      categories = clear ? UNDEF : iapi.getFromEnv('dataSource').categories && iapi.getFromEnv('dataSource').categories[0] &&\n                  iapi.getFromEnv('dataSource').categories[0].category,\n      catLen = (categories && Array.isArray(categories) && (categories.filter(data => !data.vline).length)) || 0,\n      numDisplaySets = realTimeConfig.numDisplaySets;\n\n    // Setting category as per numDisplaySets\n    if (catLen < numDisplaySets) {\n      tempArr.length = numDisplaySets - catLen;\n      tempCategories = categories ? tempArr.concat(categories) : tempArr;\n    } else if (catLen > numDisplaySets && numDisplaySets >= 0) {\n      tempCategories = numDisplaySets ? categories.slice(-numDisplaySets) : [];\n    } else {\n      tempCategories = categories.slice(0);\n    }\n    xAxis.setTickValues(tempCategories);\n  }\n\n  // Spacemanagement for real time value\n  _realTimeValuePositioning (availableHeight) {\n    var iapi = this,\n      components = iapi.getChildren(),\n      smartLabel = iapi.getFromEnv('smartLabel'),\n      height,\n      space,\n      config = iapi.config,\n      realTimeConfig = config.realTimeConfig || (config.realTimeConfig = { }),\n      padding = realTimeConfig.realTimeValuePadding,\n      axisConfig = components.xAxis[0].config,\n      style = axisConfig.trend.trendStyle,\n      attr = realTimeConfig.style = {\n        color: convertColor(pluck(realTimeConfig.realtimeValueFontColor, style.color),\n          pluck(axisConfig.trendlineAlpha, 99)),\n        fontFamily: pluck(realTimeConfig.realtimeValueFont, style.fontFamily),\n        fontSize: pluck(realTimeConfig.realtimeValueFontSize, style.fontSize),\n        fontWeight: pluck(realTimeConfig.fontWeight, style.fontWeight),\n        lineHeight: pluckNumber(style.lineHeight)\n      };\n\n    smartLabel.useEllipsesOnOverflow(config.useEllipsesWhenOverflow);\n    smartLabel.setStyle(attr);\n\n    // Setting the height to be left for displaying the value.\n    realTimeConfig.height = height = smartLabel.getOriSize(TESTSTR).height;\n    realTimeConfig.canvasBottom = config.canvasBottom;\n    space = height + padding;\n\n    if (space > availableHeight) {\n      space = availableHeight;\n    }\n    return {\n      bottom: space\n    };\n  }\n  /**\n   * function to manage all draw draw related jobList\n   * this function handle all the draw related jobs like space management,\n   * post space management and draw\n   */\n  draw () {\n    super.draw();\n    if (this.showRTvalue && this.config.realTimeConfig.showRTValue) {\n      this._drawRealTimeValue();\n    }\n  }\n  // Drwaing the real time value.\n  _drawRealTimeValue () {\n    var iapi = this,\n      chart = iapi.getFromEnv('chart'),\n      config = iapi.config,\n      dataset = chart.getDatasets(),\n      animationManager = chart.getFromEnv('animationManager'),\n      smartLabel = iapi.getFromEnv('smartLabel'),\n      realTimeConfig = config.realTimeConfig,\n      realtimeValueSeparator = realTimeConfig.realtimeValueSeparator,\n      len = dataset.length,\n      displayValue = BLANKSTRING,\n      canvasBottom = realTimeConfig.canvasBottom,\n      height = realTimeConfig.height,\n      canvasLeft = config.canvasLeft,\n      canvasRight = config.canvasRight,\n      style = realTimeConfig.style || {},\n      positionX,\n      positionY,\n      realTimeValueGraphics,\n      realTimeValueGraphicsCheck = iapi.getGraphicalElement('realTimeValue'),\n      chartChildContainer = iapi.getChildContainer(),\n      attr,\n      parentLayer = chart.getContainer().parentGroup,\n      realTimeValueGroup = chartChildContainer.realTimeValueGroup,\n      datasetStore,\n      drawn,\n      prevData,\n      dataDisplayValue,\n      i;\n\n    iapi.removeJob('realtimevaluedraw');\n    if (realTimeConfig.clear && realTimeValueGraphics) {\n      animationManager.setAnimation({\n        el: realTimeValueGraphics,\n        attr: { text: BLANKSTRING },\n        component: iapi,\n        label: 'label'\n      });\n    }\n\n    if (!realTimeValueGroup) {\n      realTimeValueGroup = chart.addChildContainer('realTimeValueGroup', animationManager.setAnimation({\n        el: 'group',\n        attr: { name: 'realTimeValue' },\n        container: parentLayer,\n        label: 'group',\n        component: chart\n      }).insertBefore(chartChildContainer.datalabelsGroup));\n    } else {\n      for (i = 0; i < len; i++) {\n        datasetStore = dataset[i].components.data;\n        prevData = datasetStore[datasetStore.length - 1];\n        dataDisplayValue = prevData && prevData.config.displayValue;\n\n        displayValue += (dataDisplayValue\n          ? (dataDisplayValue === UNDEF ? BLANKSTRING : dataDisplayValue + realtimeValueSeparator) : BLANKSTRING);\n      }\n\n      displayValue = displayValue.substring(0, displayValue.length - realtimeValueSeparator.length);\n      smartLabel.useEllipsesOnOverflow(config.useEllipsesWhenOverflow);\n      smartLabel.setStyle(style);\n      positionX = (canvasLeft + canvasRight) / 2;\n      positionY = canvasBottom - height / 2;\n\n      attr = {\n        x: positionX || 0,\n        y: positionY || 0,\n        'font-size': style.fontSize,\n        'font-weight': style.fontWeight,\n        'font-family': style.fontFamily,\n        'line-height': style.lineHeight,\n        text: displayValue,\n        fill: style.color,\n        visibility: visibleStr\n      };\n\n      realTimeValueGraphics = animationManager.setAnimation({\n        el: realTimeValueGraphicsCheck || 'text',\n        attr: attr,\n        container: realTimeValueGroup,\n        label: 'rtValue',\n        component: chart\n      });\n      drawn = true;\n      if (!realTimeValueGraphicsCheck) {\n        iapi.addGraphicalElement('realTimeValue', realTimeValueGraphics);\n      }\n\n      realTimeValueGraphics && !drawn && realTimeValueGraphics.show();\n    }\n  }\n\n  _hideRealTimeValue () {\n    var iapi = this,\n      graphics = iapi.getGraphicalElement('realTimeValue');\n\n    graphics && graphics.hide();\n  }\n  _setRTmenu (showRTmenuItem, useMessageLog) {\n    __setRTmenu.call(this, showRTmenuItem, useMessageLog);\n  }\n\n  _getDataJSON () {\n    return this.config.realTimeConfig.legacyUpdateObj || {\n      values: []\n    };\n  }\n\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let jsonData = this.getFromEnv('dataSource'),\n      datasetsJSON = jsonData.dataset,\n      dataStreamer = this.getChildren('dataStreamer') && this.getChildren('dataStreamer')[0];\n    if (!datasetsJSON) {\n      dataStreamer && dataStreamer._stopUpdate();\n      return true;\n    }\n  }\n\n  /**\n   * function to check if the chart has the proper data or not\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidData () {\n    var iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      dataStreamer = iapi.getChildren('dataStreamer') && this.getChildren('dataStreamer')[0];\n    // Checking if the chart has proper data\n    if (dataObj === {}) {\n      dataStreamer && dataStreamer._stopUpdate();\n      return true;\n    }\n  }\n  /**\n   * to get multiseries group class defined\n   */\n  getDSGroupdef () {\n    return ColumnMultiseriesGroup;\n  }\n  /**\n   * to get Dataset class defined\n   */\n  getDSdef () {\n    return RealtimeColumnDataset;\n  }\n  _realTimeConfigure () {\n    _realTimeConfigure.call(this);\n  }\n  _stopUpdate (source) {\n    _stopUpdate.call(this, source);\n  }\n  _restartUpdate () {\n    _restartUpdate.call(this);\n  }\n  _isUpdateActive () {\n    return _isUpdateActive.call(this);\n  }\n  _getData () {\n    return _getData.call(this);\n  }\n  realTimeUpdate (dataObj) {\n    realTimeUpdate.call(this, dataObj);\n  }\n  _RTmanageSpace () {\n    _RTmanageSpace.call(this);\n  }\n  realTimeDraw (eventArgs = {}) {\n    realTimeDraw.call(this, eventArgs);\n  }\n  feedData (stream) {\n    return feedData.call(this, stream);\n  }\n  _linearDataParser (responseText) {\n    return _linearDataParser.call(this, responseText);\n  }\n  _clearChart (_source) {\n    _clearChart.call(this, _source);\n  }\n}\nexport default RealtimeColumn;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport realtimeColumnAnimation from './index.animation';\naddDep({\n  name: 'realtimeColumnAnimation',\n  type: 'animationRule',\n  extension: realtimeColumnAnimation\n});\n/**\n * Real time column dataset class definition\n */\nclass RealtimeColumnDataset extends ColumnDataset {\n  /**\n   * Setting the dataStore as per the numDisplaySets attributes.\n   * @param  {boolean} force set true during clear chart\n   */\n  _realTimeConfigure (force) {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      datasetStore = dataSet.components.data,\n      tempArr = [],\n      numDisplaySets = chart.config.realTimeConfig.numDisplaySets,\n      catLen;\n\n    catLen = force ? 0 : Math.min(dataSet.getFromEnv('xAxis').getTicksLen(), datasetStore && datasetStore.length);\n\n    if (catLen < numDisplaySets) {\n      tempArr.length = numDisplaySets - catLen;\n      dataSet.components.data = tempArr.concat(datasetStore);\n    } else if (catLen > numDisplaySets) {\n      dataSet.components.data.splice(numDisplaySets, (catLen - numDisplaySets));\n    }\n    dataSet.resetCatPos && dataSet.resetCatPos();\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'realtimeColumn';\n  }\n  /**\n   * Function to reset the _x position of plots when it is a changed due to RT update\n   */\n  resetCatPos () {\n    let dataSet = this,\n      dataStore = dataSet.components.data,\n      len = dataStore.length,\n      i;\n    if (dataStore && len) {\n      for (i = 0; i < len; i++) {\n        if (dataStore[i] && dataStore[i].config) {\n          dataStore[i].config._x = i;\n        }\n      }\n    }\n  }\n}\nlet _realTimeConfigure = RealtimeColumnDataset.prototype._realTimeConfigure,\n  resetCatPos = RealtimeColumnDataset.prototype.resetCatPos;\nexport { _realTimeConfigure, resetCatPos };\nexport default RealtimeColumnDataset;\n","import columnAnimation from '@fusioncharts/charts/src/dataset/column/index.animation';\n\nexport default {\n  'initial.dataset.realtimeColumn': columnAnimation['initial.dataset.column']\n};\n","export default {\n  'initial.chartAPI.RealtimeColumn': function () {\n    return {\n      '*': null\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport AreaDataset from '@fusioncharts/charts/src/dataset/area';\nimport { _realTimeConfigure, resetCatPos } from '../realtimecolumn';\n/**\n * Real time area dataset class definition\n */\nclass RealtimeAreaDataset extends AreaDataset {\n  /**\n   * Setting the dataStore as per the numDisplaySets attributes.\n   * @param  {boolean} force set true during clear chart\n   */\n  _realTimeConfigure (force) {\n    _realTimeConfigure.call(this, force);\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'realTimeArea';\n  }\n}\nRealtimeAreaDataset.prototype.resetCatPos = resetCatPos;\nexport default RealtimeAreaDataset;\n","import Realtimecolumn from '@fusioncharts/widgets/src/chart/realtimecolumn';\nexport default Realtimecolumn;\n","import Realtimeline from '@fusioncharts/widgets/src/chart/realtimeline';\nexport default Realtimeline;\n","import { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\nimport RealtimeColumn from '../realtimecolumn';\nimport RealtimeLineDataset from '../../dataset/realtimeline';\n\nconst DS_TYPE = 'realtimeline';\n\nclass RealtimeLine extends RealtimeColumn {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'RealtimeLine';\n  }\n\n  constructor () {\n    super();\n    this.axisPaddingLeft = 0;\n    this.axisPaddingRight = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'RealtimeLine';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    _setDefaultConfig.call(this);\n    let config = this.config;\n    config.defaultDatasetType = DS_TYPE;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n  }\n  getDSdef () {\n    return RealtimeLineDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   */\n  getDSGroupdef () {\n    // empty fn\n  }\n}\nexport default RealtimeLine;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport { _realTimeConfigure, resetCatPos } from '../realtimecolumn';\n/**\n * Real time line dataset class definition\n */\nclass RealtimeLineDataset extends LineDataset {\n  /**\n   * Setting the dataStore as per the numDisplaySets attributes.\n   * @param  {boolean} force set true during clear chart\n   */\n  _realTimeConfigure (force) {\n    _realTimeConfigure.call(this, force);\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'realtimeLine';\n  }\n}\nRealtimeLineDataset.prototype.resetCatPos = resetCatPos;\nexport default RealtimeLineDataset;\n","import Realtimestackedarea from '@fusioncharts/widgets/src/chart/realtimestackedarea';\nexport default Realtimestackedarea;\n","import { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\nimport RealtimeArea from '../realtimearea';\nimport RealtimeAreaDataset from '../../dataset/realtimearea';\nimport StackManager from '@fusioncharts/charts/src/dataset/groups/cartesian-stack';\nimport { pluck, parseUnsafeString } from '@fusioncharts/core/src/lib';\nimport pluckNumber from '@fusioncharts/utils/src/pluck-number';\n\nconst DS_TYPE = 'realtimearea';\n\nclass RealtimeStackedArea extends RealtimeArea {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'RealtimeStackedArea';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'RealtimeStackedArea';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    _setDefaultConfig.call(this);\n    let config = this.config;\n    config.defaultDatasetType = DS_TYPE;\n    config.isstacked = true;\n    config.enablemousetracking = true;\n    // for realtime stacked area and stacked area chart api the overlapping of sum labels\n    // has been fixed and this has been used to reduce the affected subset\n    this.addToEnv('useImprovedLabelPlacement', true);\n    // The border is a line\n    // Anchor must be at higher position than border\n    this.addToEnv('useLinePlotGroupForAnchorPlacement', true);\n  }\n  configureAttributes (rawAttr) {\n    super.configureAttributes(rawAttr);\n    let config = this.config,\n      chartAttrs = this.getFromEnv('chart-attrib');\n\n    config.showSum = pluckNumber(chartAttrs.showsum, 0);\n\n    // if show sum is on then default value position will be below for better visual\n    if (config.showSum) {\n      config.valueposition = parseUnsafeString(pluck(chartAttrs.valueposition, 'below'));\n    }\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param  {string} name type of dataset class\n   * @return {Object}      dataset class\n   */\n  getDSdef () {\n    return RealtimeAreaDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object} <dataset group class>     dataset group class\n   */\n  getDSGroupdef () {\n    return StackManager;\n  }\n}\nexport default RealtimeStackedArea;\n","import Realtimestackedcolumn from '@fusioncharts/widgets/src/chart/realtimestackedcolumn';\nexport default Realtimestackedcolumn;\n","import RealtimeColumn from '../realtimecolumn';\nimport StackManager from '@fusioncharts/charts/src/dataset/groups/cartesian-stack';\n\nclass RealtimeStackedColumn extends RealtimeColumn {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'RealtimeStackedColumn';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.isstacked = true;\n    config.enablemousetracking = true;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'RealtimeStackedColumn';\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object} <dataset group class>     dataset group class\n   */\n  getDSGroupdef () {\n    return StackManager;\n  }\n}\nexport default RealtimeStackedColumn;\n","import Realtimelinedy from '@fusioncharts/widgets/src/chart/realtimelinedy';\nexport default Realtimelinedy;\n","import { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\nimport RealtimeColumn from '../realtimecolumn';\nimport RealtimeLineDataset from '../../dataset/realtimeline';\nimport { _feedAxesRawData, getSpecificxAxisConf, getSpecificyAxisConf,\n  setAxisDimention } from '@fusioncharts/charts/src/chart/_internal/msdybasecartesian';\nimport axesFactory from '@fusioncharts/charts/src/factories/cartesian-axis-dual-y';\nimport datasetFactory from '@fusioncharts/charts/src/factories/combi-dual-y-dataset';\n\nconst DS_TYPE = 'RealtimeLine';\n\nclass RealtimeLineDy extends RealtimeColumn {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'RealtimeLineDy';\n  }\n\n  constructor () {\n    super();\n    this.isRealTime = true;\n    this.axisPaddingLeft = 0;\n    this.isDual = true;\n    this.axisPaddingRight = 0;\n    this.getSpecificxAxisConf = getSpecificxAxisConf;\n    this.getSpecificyAxisConf = getSpecificyAxisConf;\n    this.registerFactory('axis', axesFactory, ['canvas']);\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'RealtimeLineDy';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    _setDefaultConfig.call(this);\n    let config = this.config;\n    config.defaultDatasetType = DS_TYPE;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.isdual = true;\n    config.syncaxislimits = 0;\n  }\n\n  /**\n   * function to parse JSON data for configurations of axis\n   * @return {Object} configurations of axes\n   */\n  _feedAxesRawData () {\n    return _feedAxesRawData.call(this);\n  }\n  getDSdef () {\n    return RealtimeLineDataset;\n  }\n  /**\n   * function to return dataset type applicable for this chart\n   * @return  {string}        dataset type applicable for this chart\n   */\n  getDSType () {\n    return 'RealtimeLine';\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   */\n  getDSGroupdef () {\n    // empty fn\n  }\n}\nRealtimeLineDy.prototype.setAxisDimention = setAxisDimention;\nexport default RealtimeLineDy;\n","import Hbullet from '@fusioncharts/widgets/src/chart/hbullet';\nexport default Hbullet;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport {\n  pluck,\n  pluckNumber,\n  parseUnsafeString,\n  BLANK,\n  chartPaletteStr,\n  preDefStr,\n  pluckFontSizeMaintainUnit\n} from '@fusioncharts/core/src/lib';\nimport LinearGauge from '../_internal/lineargauge';\nimport { configureAttributes, _getData } from '../_internal/bullet-led-common';\nimport BulletDataset from '../../dataset/bullet';\nimport datasetFactory from '../../factories/vled-dataset';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\nvar UNDEF,\n  GUTTER_PADDING = 2,\n  BLANKSTRING = BLANK,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_END = preDefStr.POSITION_END,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  math = Math,\n  mathCeil = math.ceil,\n  mathMax = math.max,\n  zeroCommaHundredStr = '0,100',\n  HBULLET = 'hbullet',\n  FRIENDLY_NAME = 'Horizontal Bullet Gauge',\n  BULLET = 'bullet',\n  TOP = 'top';\n\n/**\n * Class for hbullet chart\n * @class Hbullet\n * @extends {Vbullet}\n */\nclass Hbullet extends LinearGauge {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Hbullet';\n  }\n  /**\n   * Creates an instance of Hbullet.\n   * @memberof Hbullet\n   */\n  constructor () {\n    super();\n    this.defaultSeriesType = HBULLET;\n    this.gaugeType = 1;\n\n    this.defaultCaptionPadding = 5;\n    this.rendererId = HBULLET;\n    this.isHorizontal = true;\n    this.config.isAxisOpposite = false;\n    this.config.scalePosition = POSITION_BOTTOM;\n    this.config.canBeScalePosition = TOP;\n    this.rtManageSpace = true;\n    this.ticksOnRight = 0;\n\n    this.hasCanvas = true;\n    this.isAxisReverse = false;\n    this.defaultPaletteOptions = {\n      // Store colors now\n      paletteColors: [['A6A6A6', 'CCCCCC', 'E1E1E1', 'F0F0F0'],\n        ['A7AA95', 'C4C6B7', 'DEDFD7', 'F2F2EE'],\n        ['04C2E3', '66E7FD', '9CEFFE', 'CEF8FF'],\n        ['FA9101', 'FEB654', 'FED7A0', 'FFEDD5'],\n        ['FF2B60', 'FF6C92', 'FFB9CB', 'FFE8EE']],\n      // Store other colors\n      // ------------- For 2D Chart ---------------//\n      // We're storing 5 combinations, as we've 5 defined palettes.\n      bgColor: ['FFFFFF', 'CFD4BE,F3F5DD', 'C5DADD,EDFBFE', 'A86402,FDC16D', 'FF7CA0,FFD1DD'],\n      bgAngle: [270, 270, 270, 270, 270],\n      bgRatio: [zeroCommaHundredStr, zeroCommaHundredStr, zeroCommaHundredStr, zeroCommaHundredStr,\n        zeroCommaHundredStr],\n      bgAlpha: ['100', '60,50', '40,20', '20,10', '30,30'],\n\n      toolTipBgColor: ['FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF'],\n      toolTipBorderColor: ['545454', '545454', '415D6F', '845001', '68001B'],\n\n      baseFontColor: ['333333', '60634E', '025B6A', 'A15E01', '68001B'],\n      tickColor: ['333333', '60634E', '025B6A', 'A15E01', '68001B'],\n      trendColor: ['545454', '60634E', '415D6F', '845001', '68001B'],\n\n      plotFillColor: ['545454', '60634E', '415D6F', '845001', '68001B'],\n\n      borderColor: ['767575', '545454', '415D6F', '845001', '68001B'],\n      borderAlpha: [50, 50, 50, 50, 50]\n    };\n    this.showRTvalue = false;\n    this.canvasPadding = false;\n    this.defaultPlotShadow = 1;\n\n    this.realtimeEnabled = true;\n    this.chartleftmargin = 15;\n    this.chartrightmargin = 15;\n    this.charttopmargin = 10;\n    this.chartbottommargin = 10;\n    this.showTooltip = 0;\n    this.connectTickMarks = 0;\n    this.drawPlotlines = false;\n    this.drawPlotBands = false;\n    this.isRealTime = true;\n    this.colorRange = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Hbullet';\n  }\n  /**\n   * Sets default configuration\n   * @memberof Hbullet\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = FRIENDLY_NAME;\n    config.defaultDatasetType = BULLET;\n    config.singleseries = true;\n    config.skipCanvasDrawing = true;\n  }\n  /**\n   * Manage space during real time update\n   * @memberof Hbullet\n   */\n  _RTmanageSpace () {\n    var iapi = this,\n      config = iapi.config,\n      scale = iapi.getChildren('scale')[0],\n      dataset = iapi.getChildren('dataset')[0],\n      diff,\n      currentLabelSpace;\n\n    currentLabelSpace = dataset._manageSpaceHorizontal(config.oriCanvasWidth * 0.7);\n\n    diff = currentLabelSpace.right - config.labelSpace.right;\n\n    iapi._allocateSpace({\n      right: diff\n    });\n\n    scale.setAxisDimention({\n      axisLength: config.canvasWidth\n    });\n\n    config.labelSpace = currentLabelSpace;\n  }\n\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    configureAttributes.call(this);\n  }\n  /**\n   * Method to fetch data\n   * @return {Number} data value\n   */\n  _getData () {\n    return _getData.call(this);\n  }\n  /**\n   * calculate and allote space for various components\n   * every components are get notified with maximum space and then components return\n   * the available space.\n   * @memberof Hbullet\n   */\n  _spaceManager () {\n    var availableWidth,\n      availableHeight,\n      iapi = this,\n      config = iapi.config,\n      canvas = iapi.getChildren('canvas')[0],\n      dataset = iapi.getChildren('dataset')[0],\n      scale = iapi.getChildren('scale')[0],\n      is3D = iapi.config.is3D,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      showBorder = pluckNumber(chartAttrs.showborder, is3D ? 0 : 1),\n      captionSpace,\n      chartBorderHorizontal,\n      chartBorderVertical,\n      minChartWidth = config.minChartWidth,\n      minChartHeight = config.minChartHeight,\n      chartBorderWidth =\n                  config.borderWidth = showBorder ? pluckNumber(chartAttrs.borderthickness, 1) : 0;\n\n    //* ***** Manage space\n\n    if ((config.canvasWidth - 2 * chartBorderWidth) < minChartWidth) {\n      chartBorderVertical = (config.canvasWidth - minChartWidth) / 2;\n    }\n\n    if ((config.canvasHeight - 2 * chartBorderWidth) < minChartHeight) {\n      chartBorderHorizontal = (config.canvasHeight - minChartHeight) / 2;\n    }\n\n    iapi._allocateSpace({\n      top: chartBorderHorizontal || chartBorderWidth,\n      bottom: chartBorderHorizontal || chartBorderWidth,\n      left: chartBorderVertical || chartBorderWidth,\n      right: chartBorderVertical || chartBorderWidth\n    });\n\n    availableWidth = config.canvasWidth * 0.7;\n\n    iapi._allocateSpace(scale.placeAxis(config.availableHeight));\n\n    iapi._allocateSpace((iapi._manageActionBarSpace &&\n              iapi._manageActionBarSpace(config.availableHeight * 0.225)) || {});\n    config.oriCanvasWidth = config.canvasWidth;\n\n    availableHeight = config.canvasHeight * 0.225;\n    // a space manager that manages the space for the tools as well as the captions.\n    iapi._manageChartMenuBar(availableHeight);\n    // get the space calculated by caption\n    captionSpace = mathMax(iapi.getChildren('subCaption')[0].config.width || 0,\n      iapi.getChildren('caption')[0].config.width || 0);\n\n    config.labelSpace = dataset._manageSpaceHorizontal(availableWidth - (captionSpace * 0.7));\n    dataset._manageSpace && iapi._allocateSpace(config.labelSpace);\n    config.oriCanvasWidth -= captionSpace;\n\n    availableHeight = config.canvasHeight * 0.325;\n    canvas.setDimension({\n      top: config.canvasTop,\n      left: config.canvasLeft,\n      width: config.canvasWidth,\n      height: config.canvasHeight\n    });\n  }\n  /**\n   * function to\n   * @param  {number} availableHeight available hieght to alocate\n   * @param  {number} availableWidth  available width to alocate\n   * @return {Object} dimensions\n   * @memberof Hbullet\n   */\n  _manageCaptionSpacing () {\n    var iapi = this,\n      chartConfig = iapi.config,\n      caption = iapi.getChildren('caption')[0],\n      subCaption = iapi.getChildren('subCaption')[0],\n      captionConfig = caption.config,\n      subCaptionConfig = subCaption.config,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      SmartLabel = iapi.getFromEnv('smartLabel'),\n      titleText = parseUnsafeString(chartAttrs.caption),\n      subTitleText = parseUnsafeString(chartAttrs.subcaption),\n      captionPadding = pluckNumber(chartAttrs.captionpadding, 2),\n      height = chartConfig.height,\n      width = chartConfig.width,\n      captionLineHeight = 0,\n      subCaptionLineHeight = 0,\n      captionHeight = 0,\n      allowedHeight = height * 0.3,\n      allowedWidth = width * 0.3,\n      dimensions = {},\n      maxCaptionWidth,\n      captionObj,\n      subCaptionObj,\n      capStyle,\n      subCapStyle;\n\n    // text below 3px is not properly visible\n    if (allowedHeight > 3) {\n      captionConfig.captionPadding = subCaptionConfig.captionPadding = captionPadding;\n\n      if (titleText !== BLANKSTRING) { // calculatethe single line's height\n        capStyle = captionConfig.style;\n        captionLineHeight = captionConfig.captionLineHeight =\n                      mathCeil(parseFloat(pluck(capStyle.fontHeight, capStyle.lineHeight), 10), 12);\n        // captionFontSize = subCaptionConfig.captionLineHeight =\n        //     pluckNumber(parseInt(capStyle.fontSize, 10), 10);\n      }\n      if (subTitleText !== BLANKSTRING) {\n        subCapStyle = subCaptionConfig.style;\n        subCaptionLineHeight = mathCeil(parseInt(pluck(subCapStyle.lineHeight,\n          subCapStyle.fontHeight), 10), 12);\n        // subCaptionFontSize = pluckNumber(parseInt(subCapStyle.fontSize, 10), 10);\n      }\n\n      if (captionLineHeight > 0 || subCaptionLineHeight > 0) {\n        SmartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n        SmartLabel.setStyle(capStyle);\n        captionObj = SmartLabel.getSmartText(titleText, allowedWidth, height);\n        // Forcefully increase width to give a gutter in caption and sub-caption\n        if (captionObj.width > 0) {\n          captionObj.width += GUTTER_PADDING;\n          captionHeight = captionObj.height;\n        }\n        SmartLabel.setStyle(subCapStyle);\n        subCaptionObj = SmartLabel.getSmartText(subTitleText, allowedWidth, height - captionHeight);\n        // Force fully increase width to give a gutter in caption and subCaption\n        if (subCaptionObj.width > 0) {\n          subCaptionObj.width += GUTTER_PADDING;\n        }\n        captionConfig.captionSubCaptionGap = captionObj.height + 0 +\n                      (subCaptionLineHeight * 0.2);\n\n        maxCaptionWidth = Math.max(captionObj.width, subCaptionObj.width);\n        // Replace the caption and subCaption text with the new wrapped text\n        captionConfig.text = captionObj.text;\n        captionConfig.height = captionHeight = captionObj.height;\n        captionConfig.width = captionObj.width;\n        captionConfig.tooltext && (captionConfig.originalText = captionObj.tooltext);\n\n        subCaptionConfig.text = subCaptionObj.text;\n        subCaptionConfig.height = captionHeight = subCaptionObj.height;\n        subCaptionConfig.width = subCaptionObj.width;\n        subCaptionConfig.tooltext && (captionConfig.originalText = subCaptionObj.tooltext);\n\n        maxCaptionWidth = Math.max(captionObj.width, subCaptionObj.width);\n        // Add caption padding, if either caption or sub-caption is to be shown\n        if (maxCaptionWidth > 0) {\n          maxCaptionWidth = maxCaptionWidth + captionPadding;\n        }\n        captionConfig.maxCaptionWidth = subCaptionConfig.maxCaptionWidth = maxCaptionWidth;\n\n        // totalHeight = totalHeight || canvasBorderThickness;\n        if (captionConfig.isOnLeft) {\n          dimensions.left = maxCaptionWidth;\n        } else {\n          dimensions.right = maxCaptionWidth;\n        }\n      }\n    }\n\n    if (captionConfig.isOnLeft) {\n      captionConfig.align = subCaptionConfig.align = POSITION_END;\n    } else {\n      captionConfig.align = subCaptionConfig.align = POSITION_START;\n    }\n\n    return dimensions;\n  }\n  /**\n   * function to calculate caption width and height\n   * @memberof Hbullet\n   */\n  _manageCaptionPosition () {\n    var iapi = this,\n      chartConfig = iapi.config,\n      caption = iapi.getChildren('caption')[0],\n      subCaption = iapi.getChildren('subCaption')[0],\n      captionConfig = caption.config,\n      subCaptionConfig = subCaption.config,\n      captionPosition = captionConfig.captionPosition,\n      maxWidth = mathMax(captionConfig.width, subCaptionConfig.width),\n      borderWidth = chartConfig.borderWidth || 0,\n      // height = chartConfig.height,\n      captionSubCaptionGap = captionConfig.captionSubCaptionGap;\n\n    switch (captionPosition) {\n      case POSITION_MIDDLE:\n        captionConfig.y = (chartConfig.canvasTop + chartConfig.canvasHeight) * 0.5;\n        break;\n      case POSITION_BOTTOM:\n        captionConfig.y = chartConfig.canvasBottom - (captionConfig.height + subCaptionConfig.height);\n        break;\n      default: // We put it on top by default\n        captionConfig.y = chartConfig.canvasTop;\n        break;\n    }\n\n    subCaptionConfig.y = captionConfig.y + captionSubCaptionGap;\n\n    if (captionConfig.isOnLeft) {\n      // captionConfig.align = subCaptionConfig.align = POSITION_END;\n      captionConfig.x = subCaptionConfig.x = chartConfig.marginLeft + maxWidth + borderWidth;\n    } else {\n      // captionConfig.align = subCaptionConfig.align = POSITION_START;\n      captionConfig.x = subCaptionConfig.x = chartConfig.width -\n                  chartConfig.marginRight - maxWidth - borderWidth;\n    }\n  }\n  /**\n   * This method parse all the attributes which are associated with axis compoenents.\n   * So that axis compoenents can be configured\n   * @return {Object} contains axes config\n   * @memberof Hbullet\n   */\n  _feedAxesRawData () {\n    var iapi = this,\n      config = iapi.config,\n      colorM = iapi.getFromEnv('color-manager'),\n      numberFormatter = iapi.getFromEnv('number-formatter'),\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = dataObj.chart,\n      scaleConf,\n      palleteString = chartPaletteStr.chart2D,\n      ticksBelowGraph = pluckNumber(chartAttrs.ticksbelowgraph, !config.isAxisOpposite),\n      isAxisOpposite = pluckNumber(isEqualString(chartAttrs.scaleposition, config.scalePosition)\n        ? config.isAxisOpposite : isEqualString(chartAttrs.scaleposition, config.canBeScalePosition)\n          ? !config.isAxisOpposite : UNDEF,\n      !ticksBelowGraph),\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    scaleConf = {\n      isVertical: !iapi.isHorizontal,\n      isReverse: false,\n      isOpposit: isAxisOpposite,\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, 'Verdana,sans'),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      // axisNamePadding: chartAttrs.xaxisnamepadding,\n      // axisValuePadding: chartAttrs.labelpadding,\n      // axisNameFont: chartAttrs.xaxisnamefont,\n      // axisNameFontSize: chartAttrs.xaxisnamefontsize,\n      // axisNameFontColor: chartAttrs.xaxisnamefontcolor,\n      // axisNameFontBold: chartAttrs.xaxisnamefontbold,\n      // axisNameFontItalic: chartAttrs.xaxisnamefontitalic,\n      // axisNameBgColor: chartAttrs.xaxisnamebgcolor,\n      // axisNameBorderColor: chartAttrs.xaxisnamebordercolor,\n      // axisNameAlpha: chartAttrs.xaxisnamealpha,\n      // axisNameFontAlpha: chartAttrs.xaxisnamefontalpha,\n      // axisNameBgAlpha: chartAttrs.xaxisnamebgalpha,\n      // axisNameBorderAlpha: chartAttrs.xaxisnameborderalpha,\n      // axisNameBorderPadding: chartAttrs.xaxisnameborderpadding,\n      // axisNameBorderRadius: chartAttrs.xaxisnameborderradius,\n      // axisNameBorderThickness: chartAttrs.xaxisnameborderthickness,\n      // axisNameBorderDashed: chartAttrs.xaxisnameborderdashed,\n      // axisNameBorderDashLen: chartAttrs.xaxisnameborderdashlen,\n      // axisNameBorderDashGap: chartAttrs.xaxisnameborderdashgap,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: pluck(chartAttrs.vdivlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.vdivlinealpha, colorM.getColor('divLineAlpha')),\n      divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n      alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor('altVGridColor')),\n      alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor('altVGridAlpha')),\n      numDivLines: chartAttrs.numvdivlines,\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      axisName: chartAttrs.xaxisname,\n      axisMinValue: numberFormatter.getCleanValue(chartAttrs.lowerlimit),\n      axisMaxValue: numberFormatter.getCleanValue(chartAttrs.upperlimit),\n      setAdaptiveMin: chartAttrs.setadaptivexmin,\n      // adjusttm will be internally parsed as adjustdiv\n      adjustDiv: chartAttrs.adjusttm,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: chartAttrs.showlabels,\n      rotateLabels: chartAttrs.rotatelabels,\n      slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      showDivLineValues: pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues),\n      showZeroPlane: chartAttrs.showvzeroplane,\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      zeroPlaneThickness: chartAttrs.vzeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, '#000000'),\n      // Tick properties\n      majorTMNumber: chartAttrs.majortmnumber,\n      majorTMColor: chartAttrs.majortmcolor,\n      majorTMAlpha: chartAttrs.majortmalpha,\n      majorTMHeight: chartAttrs.majortmheight,\n      tickValueStep: chartAttrs.tickvaluestep,\n      showTickMarks: chartAttrs.showtickmarks,\n      connectTickMarks: chartAttrs.connecttickmarks,\n      showTickValues: chartAttrs.showtickvalues,\n      majorTMThickness: chartAttrs.majortmthickness,\n      reverseScale: chartAttrs.reversescale,\n      // Whether to display the Limits\n      showLimits: pluckNumber(chartAttrs.showlimits, chartAttrs.showtickmarks),\n      minorTMNumber: pluckNumber(chartAttrs.minortmnumber, 0),\n      minorTMColor: chartAttrs.minortmcolor,\n      minorTMAlpha: chartAttrs.minortmalpha,\n      minorTMHeight: pluckNumber(chartAttrs.minortmheight, chartAttrs.minortmwidth),\n      minorTMThickness: chartAttrs.minortmthickness,\n      // Padding between tick mark start position and gauge\n      tickMarkDistance: pluckNumber(chartAttrs.tickmarkdistance, chartAttrs.tickmarkgap),\n      // Tick value distance\n      tickValueDistance: pluckNumber(chartAttrs.tickvaluedistance, chartAttrs.displayvaluedistance),\n      placeTicksInside: chartAttrs.placeticksinside,\n      placeValuesInside: chartAttrs.placevaluesinside,\n      upperLimitDisplay: chartAttrs.upperlimitdisplay,\n      lowerLimitDisplay: chartAttrs.lowerlimitdisplay\n    };\n\n    return [scaleConf];\n  }\n  /**\n   * get dataset defination\n   * @return {Object} The dataset defination\n   */\n  getDSdef () {\n    return BulletDataset;\n  }\n  /**\n   * Returns the postion for the caption placement.\n   * @return {number} extraspace\n   * @memberof Hbullet\n   */\n  _fetchCaptionPos () {\n    var extraSpace,\n      iapi = this,\n      caption = iapi.getChildren('caption')[0],\n      captionConfig = caption.config;\n\n    // check if even after placing the caption\n    // space available on right.\n    // left aligned.\n    if (captionConfig.align === POSITION_END) {\n      extraSpace = 0;\n    } else {\n      // right aligned\n      extraSpace = -1;\n    }\n    return extraSpace;\n  }\n}\nexport default Hbullet;\n","import Vbullet from '@fusioncharts/widgets/src/chart/vbullet';\nexport default Vbullet;\n","\nimport {\n  pluck,\n  pluckNumber,\n  chartPaletteStr,\n  pluckFontSizeMaintainUnit\n} from '@fusioncharts/core/src/lib';\nimport LinearGauge from '../_internal/lineargauge';\nimport { configureAttributes, _getData } from '../_internal/bullet-led-common';\nimport BulletDataset from '../../dataset/bullet';\nimport datasetFactory from '../../factories/vled-dataset';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\nvar UNDEF,\n  zeroCommaHundredStr = '0,100',\n  BULLET = 'bullet',\n  FRIENDLY_NAME = 'Vertical Bullet Gauge',\n  RIGHT = 'right',\n  LEFT = 'left';\n\nclass Vbullet extends LinearGauge {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Vbullet';\n  }\n\n  constructor () {\n    super();\n    this.defaultSeriesType = BULLET;\n    this.gaugeType = 4;\n    this.ticksOnRight = 0;\n\n    this.hasCanvas = true;\n    this.isHorizontal = false;\n    this.config.isAxisOpposite = false;\n    this.config.scalePosition = LEFT;\n    this.config.canBeScalePosition = RIGHT;\n    this.isAxisReverse = false;\n    this.defaultPaletteOptions = {\n      // Store colors now\n      paletteColors: [['A6A6A6', 'CCCCCC', 'E1E1E1', 'F0F0F0'],\n        ['A7AA95', 'C4C6B7', 'DEDFD7', 'F2F2EE'],\n        ['04C2E3', '66E7FD', '9CEFFE', 'CEF8FF'],\n        ['FA9101', 'FEB654', 'FED7A0', 'FFEDD5'],\n        ['FF2B60', 'FF6C92', 'FFB9CB', 'FFE8EE']],\n      // Store other colors\n      // ------------- For 2D Chart ---------------//\n      // We're storing 5 combinations, as we've 5 defined palettes.\n      bgColor: ['FFFFFF', 'CFD4BE,F3F5DD', 'C5DADD,EDFBFE', 'A86402,FDC16D', 'FF7CA0,FFD1DD'],\n      bgAngle: [270, 270, 270, 270, 270],\n      bgRatio: [zeroCommaHundredStr, zeroCommaHundredStr, zeroCommaHundredStr, zeroCommaHundredStr,\n        zeroCommaHundredStr],\n      bgAlpha: ['100', '60,50', '40,20', '20,10', '30,30'],\n\n      toolTipBgColor: ['FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF', 'FFFFFF'],\n      toolTipBorderColor: ['545454', '545454', '415D6F', '845001', '68001B'],\n\n      baseFontColor: ['333333', '60634E', '025B6A', 'A15E01', '68001B'],\n      tickColor: ['333333', '60634E', '025B6A', 'A15E01', '68001B'],\n      trendColor: ['545454', '60634E', '415D6F', '845001', '68001B'],\n\n      plotFillColor: ['545454', '60634E', '415D6F', '845001', '68001B'],\n\n      borderColor: ['767575', '545454', '415D6F', '845001', '68001B'],\n      borderAlpha: [50, 50, 50, 50, 50]\n    };\n    this.showRTvalue = false;\n    this.canvasPadding = false;\n    this.defaultPlotShadow = 1;\n\n    this.realtimeEnabled = true;\n    this.chartleftmargin = 15;\n    this.chartrightmargin = 15;\n    this.charttopmargin = 10;\n    this.chartbottommargin = 10;\n    this.showTooltip = 0;\n    this.connectTickMarks = 0;\n    this.drawPlotlines = false;\n    this.drawPlotBands = false;\n    this.isRealTime = true;\n    this.colorRange = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Vbullet';\n  }\n\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    configureAttributes.call(this);\n  }\n  /**\n   * Method to fetch data\n   * @return {Number} data value\n   */\n  _getData () {\n    return _getData.call(this);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = FRIENDLY_NAME;\n    config.defaultDatasetType = BULLET;\n    config.singleseries = true;\n    config.skipCanvasDrawing = true;\n  }\n\n  getDSdef () {\n    return BulletDataset;\n  }\n\n  _feedAxesRawData () {\n    var iapi = this,\n      config = iapi.config,\n      colorM = iapi.getFromEnv('color-manager'),\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = dataObj.chart,\n      numberFormatter = iapi.getFromEnv('number-formatter'),\n      scaleConf,\n      palleteString = chartPaletteStr.chart2D,\n      ticksOnRight = pluckNumber(chartAttrs.ticksonright),\n      isAxisOpposite = pluckNumber(isEqualString(chartAttrs.scaleposition, config.scalePosition)\n        ? config.isAxisOpposite : isEqualString(chartAttrs.scaleposition, config.canBeScalePosition)\n          ? !config.isAxisOpposite : UNDEF, (\n        ticksOnRight !== UNDEF ? ticksOnRight : UNDEF),\n      config.isAxisOpposite),\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    scaleConf = {\n      isVertical: !iapi.isHorizontal,\n      isReverse: true,\n      isOpposit: isAxisOpposite,\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, 'Verdana,sans'),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      // axisNamePadding: chartAttrs.xaxisnamepadding,\n      // axisValuePadding: chartAttrs.labelpadding,\n      // axisNameFont: chartAttrs.xaxisnamefont,\n      // axisNameFontSize: chartAttrs.xaxisnamefontsize,\n      // axisNameFontColor: chartAttrs.xaxisnamefontcolor,\n      // axisNameFontBold: chartAttrs.xaxisnamefontbold,\n      // axisNameFontItalic: chartAttrs.xaxisnamefontitalic,\n      // axisNameBgColor: chartAttrs.xaxisnamebgcolor,\n      // axisNameBorderColor: chartAttrs.xaxisnamebordercolor,\n      // axisNameAlpha: chartAttrs.xaxisnamealpha,\n      // axisNameFontAlpha: chartAttrs.xaxisnamefontalpha,\n      // axisNameBgAlpha: chartAttrs.xaxisnamebgalpha,\n      // axisNameBorderAlpha: chartAttrs.xaxisnameborderalpha,\n      // axisNameBorderPadding: chartAttrs.xaxisnameborderpadding,\n      // axisNameBorderRadius: chartAttrs.xaxisnameborderradius,\n      // axisNameBorderThickness: chartAttrs.xaxisnameborderthickness,\n      // axisNameBorderDashed: chartAttrs.xaxisnameborderdashed,\n      // axisNameBorderDashLen: chartAttrs.xaxisnameborderdashlen,\n      // axisNameBorderDashGap: chartAttrs.xaxisnameborderdashgap,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: pluck(chartAttrs.vdivlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.vdivlinealpha, colorM.getColor('divLineAlpha')),\n      divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n      alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor('altVGridColor')),\n      alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor('altVGridAlpha')),\n      numDivLines: chartAttrs.numvdivlines,\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      axisName: chartAttrs.xaxisname,\n      axisMinValue: numberFormatter.getCleanValue(chartAttrs.lowerlimit),\n      axisMaxValue: numberFormatter.getCleanValue(chartAttrs.upperlimit),\n      setAdaptiveMin: chartAttrs.setadaptivexmin,\n      // adjusttm will be internally parsed as adjustdiv\n      adjustDiv: chartAttrs.adjusttm,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: chartAttrs.showlabels,\n      rotateLabels: chartAttrs.rotatelabels,\n      slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      showDivLineValues: pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues),\n      showZeroPlane: chartAttrs.showvzeroplane,\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      zeroPlaneThickness: chartAttrs.vzeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, '#000000'),\n      // Tick properties\n      majorTMNumber: chartAttrs.majortmnumber,\n      majorTMColor: chartAttrs.majortmcolor,\n      majorTMAlpha: chartAttrs.majortmalpha,\n      majorTMHeight: chartAttrs.majortmheight,\n      tickValueStep: chartAttrs.tickvaluestep,\n      showTickMarks: chartAttrs.showtickmarks,\n      connectTickMarks: chartAttrs.connecttickmarks,\n      showTickValues: chartAttrs.showtickvalues,\n      majorTMThickness: chartAttrs.majortmthickness,\n      reverseScale: chartAttrs.reversescale,\n      // Whether to display the Limits\n      showLimits: pluckNumber(chartAttrs.showlimits, chartAttrs.showtickmarks),\n      minorTMNumber: pluckNumber(chartAttrs.minortmnumber, 0),\n      minorTMColor: chartAttrs.minortmcolor,\n      minorTMAlpha: chartAttrs.minortmalpha,\n      minorTMHeight: pluckNumber(chartAttrs.minortmheight, chartAttrs.minortmwidth),\n      minorTMThickness: chartAttrs.minortmthickness,\n      // Padding between tick mark start position and gauge\n      tickMarkDistance: pluckNumber(chartAttrs.tickmarkdistance, chartAttrs.tickmarkgap),\n      // Tick value distance\n      tickValueDistance: pluckNumber(chartAttrs.tickvaluedistance, chartAttrs.displayvaluedistance),\n      placeTicksInside: chartAttrs.placeticksinside,\n      placeValuesInside: chartAttrs.placevaluesinside,\n      upperLimitDisplay: chartAttrs.upperlimitdisplay,\n      lowerLimitDisplay: chartAttrs.lowerlimitdisplay\n    };\n    return [scaleConf];\n  }\n\n  // _drawCanvas: stubFN\n}\nexport default Vbullet;\n","import Funnel from '@fusioncharts/widgets/src/chart/funnel';\nexport default Funnel;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport FunnelPyramidBase from '../_internal/funnelpyramidbase';\nimport FunnelDataset from '../../dataset/funnel';\nimport { pluckNumber } from '@fusioncharts/core/src/lib';\n\nconst FRIENDLY_NAME = 'Funnel Chart',\n  DS_TYPE = 'funnel';\n\n/**\n * Class for Funnel chart\n * @class Funnel\n * @extends {FunnelPyramidBase}\n */\nclass Funnel extends FunnelPyramidBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Funnel';\n  }\n  /**\n   * Creates an instance of Funnel.\n   * @memberof Funnel\n   */\n  constructor () {\n    super();\n\n    this.useSortedData = true;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'funnel';\n  }\n  /**\n   * Sets default configuration\n   * @memberof Funnel\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = FRIENDLY_NAME;\n    config.defaultDatasetType = DS_TYPE;\n    config.enablemousetracking = true;\n  }\n  /**\n   * Configures Attributes of chart\n   *\n   * @memberof Funnel\n   */\n  configureAttributes () {\n    super.configureAttributes();\n    let chart = this,\n      dataSource = chart.getFromEnv('dataSource'),\n      streamLinedData = pluckNumber(dataSource.chart.streamlineddata, 1);\n\n    chart.config.PLOT_COLOR_INDEX_START = streamLinedData ? -1 : 0;\n    chart.config.alignLegendWithCanvas = 0;\n  }\n  /**\n   * This method return the dataset definations for this chart\n   * @return {Object} dataset\n   * @memberof Funnel\n   */\n  getDSdef () {\n    return FunnelDataset;\n  }\n}\nexport default Funnel;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport { pluckNumber } from '@fusioncharts/core/src/lib';\nimport CommonSpaceManager from '@fusioncharts/charts/src/chart/_internal/commonspacemanager';\nimport * as defaultPaletteOptions from '@fusioncharts/charts/src/_internal/color-utils/chart-palette-colors';\nimport datasetFactory from '@fusioncharts/charts/src/factories/singleseries-dataset';\nimport legendItemFactory from '@fusioncharts/charts/src/factories/legend';\nimport { _manageLegendSpace } from '@fusioncharts/charts/src/chart/_internal/legend-spacemanager';\n\nconst DS_TYPE = 'funnelpyramidbaseds';\n\n/**\n * Class for Funnel pyramid chart\n * @class FunnelPyramidBase\n * @extends {GaugeBase}\n */\nclass FunnelPyramidBase extends CommonSpaceManager {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'FunnelPyramidBase';\n  }\n  /**\n   * Creates an instance of FunnelPyramidBase.\n   * @memberof FunnelPyramidBase\n   */\n  constructor () {\n    super();\n    this.showRTvalue = false;\n    this.canvasPadding = false;\n    this.sliceOnLegendClick = true;\n    this.defaultPlotShadow = 1;\n    this.subTitleFontSizeExtender = 0;\n    this.tooltippadding = 3;\n    this.defaultPaletteOptions = defaultPaletteOptions;\n    this.drawAnnotations = true;\n    this.isDataLabelBold = false;\n    this.dontShowLegendByDefault = true;\n    this.formatnumberscale = 1;\n    this.alignCaptionWithCanvas = 0;\n\n    this.registerFactory('dataset', datasetFactory, ['vCanvas', 'legend']);\n    this.registerFactory('legend', legendItemFactory);\n  }\n  /**\n   * Sets default configuration\n   * @memberof FunnelPyramidBase\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.showRTvalue = false;\n    config.canvasPadding = false;\n    config.sliceOnLegendClick = true;\n    config.defaultPlotShadow = 1;\n    config.subTitleFontSizeExtender = 0;\n    config.tooltippadding = 3;\n    config.defaultPaletteOptions = defaultPaletteOptions;\n    config.drawAnnotations = true;\n    config.isDataLabelBold = false;\n    config.dontShowLegendByDefault = true;\n    config.alignCaptionWithCanvas = 0;\n    config.formatnumberscale = 1;\n    config.isSingleSeries = true;\n    config.hasLegend = true;\n    config.decimals = 2;\n    config.defaultDatasetType = DS_TYPE;\n    config.skipCanvasDrawing = true;\n  }\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    let iapi = this,\n      chartAttrs = iapi.getFromEnv('chart-attrib');\n    iapi.config.showLegend = pluckNumber(chartAttrs.showlegend, 0);\n    if (iapi.config.usePattern) {\n      iapi.config.is2d = 1;\n    }\n  }\n  /**\n   * Checks if valid data is given as input\n   *\n   * @returns {any} returns true if invalid data, else false\n   * @memberof FunnelPyramidBase\n   */\n  _checkInvalidSpecificData () {\n    var chart = this,\n      chartAttr = chart.getFromEnv('dataSource'),\n      i,\n      len,\n      zeroSum = 0,\n      nullSum = 0,\n      data = chartAttr.data,\n      value;\n\n    /**\n     * Case 1: If no data is present, return true\n     * Case 2: If no valid data is present(ie, data has all zero and/or null values)\n     */\n    if (!data) {\n      return true;\n    }\n    len = data.length;\n\n    for (i = 0; i < len; i++) {\n      value = Number(data[i].value);\n      zeroSum += (!isNaN(value) && value === 0) ? 1 : 0;\n      nullSum += isNaN(value) ? 1 : 0;\n    }\n\n    // Number of zero values + number of null values >= total data present.\n    if (zeroSum + nullSum >= len) {\n      return true;\n    }\n  }\n\n  /**\n   * function to calculate and allote space for legend\n   */\n  _manageLegendSpace () {\n    _manageLegendSpace.call(this);\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'FunnelPyramidBase';\n  }\n}\nexport default FunnelPyramidBase;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  stubFN,\n  pluckNumber,\n  setLineHeight,\n  PXSTRING\n} from '@fusioncharts/core/src/lib';\nimport FunnelPyramidBaseDataset from '../_internal/funnelpyramidbase';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport FunnelPoint from '../_internal/data/funnel-point';\nvar UNDEF;\n/**\n * Creates dataset class for Funnel\n */\nclass FunnelDataset extends FunnelPyramidBaseDataset {\n  /**\n   * Constructor function to initialise attributes of Funnel dataset object\n   */\n  constructor () {\n    super();\n    this.config.pointInContext = FunnelPoint;\n    this.config.LABEL_PLACEMENT_ITERATOR_INDEX_START = 1;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'funnel';\n  }\n\n  /**\n   * Configure dataset component and parse default values\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   * @return {boolean} Indicates whether the configuration was successful or not\n   */\n  configure (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.config.JSONData = datasetJSON;\n    var datasetDefStore = this,\n      chart = datasetDefStore.getFromEnv('chart'),\n      numberFormatter = datasetDefStore.getFromEnv('number-formatter'),\n      utils = datasetDefStore.utils(datasetDefStore),\n      sortObjArrByKey = utils.sortObjArrByKey,\n      chartAttr = chart.getFromEnv('dataSource') ? chart.getFromEnv('dataSource').chart : {},\n      data = datasetDefStore.config.JSONData.data,\n      streamLinedData,\n      index,\n      dsItem,\n      length;\n\n    if (!datasetDefStore._checkValidData(data)) {\n      return;\n    }\n\n    for (index = 0, length = data.length; index < length; index++) {\n      dsItem = data[index];\n      if (dsItem && dsItem.value !== UNDEF) {\n        dsItem.value = numberFormatter.getCleanValue(dsItem.value, true);\n      }\n    }\n\n    streamLinedData = datasetDefStore.config.streamLinedData = pluckNumber(chartAttr.streamlineddata, 1);\n    datasetDefStore.config.JSONData.data = !streamLinedData ? data : sortObjArrByKey(data, 'value');\n    /**\n     * configure the data before calling addlegend so that the legenditems of\n     * removed datas do not get drawn\n     */\n    datasetDefStore._configure();\n    data = datasetDefStore.getChildren('data');\n    streamLinedData && (data[0].pseudoPoint = true);\n    chart.config.showLegend && datasetDefStore.addLegend();\n  }\n\n  /**\n   * Configure specific attributes\n   */\n  configureSpecifics () {\n    var datasetStore = this,\n      chart = datasetStore.getFromEnv('chart'),\n      datasetConf = datasetStore.config,\n      chartAttr = chart.getFromEnv('dataSource') ? chart.getFromEnv('dataSource').chart : {},\n      utils = datasetStore.utils(datasetStore),\n      copyProperties = utils.copyProperties;\n\n    // Properties specific to the funnel only\n    copyProperties(chartAttr, datasetConf, [\n      ['funnelyscale', 'yScale', pluckNumber, UNDEF, function (datasetConfig) {\n        var ys = datasetConfig.yScale;\n        datasetConfig.yScale = (ys >= 0 && ys <= 40) ? ys / 200 : 0.2;\n      }],\n      ['usesameslantangle', 'useSameSlantAngle', pluckNumber, function (datasetConfig) {\n        return datasetConfig.streamLinedData ? 0 : 1;\n      }],\n      ['ishollow', 'isHollow', pluckNumber, UNDEF, function (datasetConfig) {\n        var isHollow = datasetConfig.isHollow;\n\n        if (isHollow === UNDEF) {\n          datasetConfig.isHollow = datasetConfig.streamLinedData ? 1 : 0;\n        }\n      }]\n    ]);\n  }\n  /**\n   * Process data before drawing to calculate space management\n   * @param {Array} pointsArr data points\n   */\n  prePointProcessingHookFn (pointsArr) {\n    var datasetStore = this,\n      chart = datasetStore.getFromEnv('chart'),\n      chartConf = chart.config,\n      conf = datasetStore.config,\n      chartWorkingWidth = chartConf.canvasWidth,\n      smartLabel = chart.getFromEnv('smartLabel'),\n      nonStreamLinedData = !conf.streamLinedData,\n      point, lineHeight, smartTextObj, origHeight;\n\n    point = pointsArr[0];\n    // Wrapping the first label to the whole drawing width\n    point && (point.pseudoPoint = true);\n    if (point && point.displayValue) {\n      smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n      point.style.fontSize = this.computeFontSize(point.style.fontSizeWithUnit) + PXSTRING;\n      smartLabel.setStyle(point.style);\n      setLineHeight(point.style);\n      lineHeight = parseFloat(point.style.lineHeight.match(/^\\d+/)[0] || conf.lineHeight, 10);\n      origHeight = smartLabel.getOriSize(point.displayValue).height;\n      smartTextObj = smartLabel.getSmartText(point.displayValue, chartWorkingWidth, origHeight);\n      point.displayValue = smartTextObj.text;\n      smartTextObj.tooltext && (point.originalText = smartTextObj.tooltext);\n      point.labelWidth = smartLabel.getOriSize(smartTextObj.text).width;\n      // Reducing the chart height to place the top most label\n      chartConf.marginTop += lineHeight + 4;\n    }\n\n    conf.totalValue = nonStreamLinedData ? (pointsArr[0].y - pointsArr[1].y) : 0;\n    conf.offsetVal = function (i) {\n      return nonStreamLinedData ? -((pointsArr[i + 1] && pointsArr[i + 1].y) || 0) : point.y;\n    };\n  }\n\n  /**\n   * Process data array to normalise\n   * @param {Array} dataArr data array\n   * @return {Object} processed calculated dataobject\n   */\n  datasetCalculations (dataArr) {\n    var datasetStore = this,\n      conf = datasetStore.config,\n      numberFormatter = datasetStore.getFromEnv('number-formatter'),\n      index, length, dataObj, itemValue, res = {},\n      isStreamLinedData = conf.streamLinedData,\n      percentOfPrevious = conf.percentOfPrevious;\n\n    res.highestValue = Number.NEGATIVE_INFINITY;\n    res.refreshedData = [];\n    res.sumValue = res.countPoint = 0;\n\n    for (index = 0, length = dataArr.length; index < length; index++) {\n      dataObj = dataArr[index];\n\n      if (dataObj.vline) {\n        // Funnel or pyramid does not use vline. Ignoring the same if user put it mistakenly.\n        continue;\n      }\n\n      dataObj.cleanValue = itemValue = Math.abs(numberFormatter.getCleanValue(dataObj.value, true));\n\n      if (itemValue !== null) {\n        // If a valid value is provided in the configuration\n        res.hasValidPoint = true;\n        res.highestValue = res.highestValue || itemValue;\n        res.refreshedData.push(dataObj);\n        res.sumValue += itemValue;\n        res.countPoint += 1;\n        res.highestValue = Math.max(res.highestValue, itemValue);\n      }\n    }\n\n    if (isStreamLinedData) {\n      res.sumValue = res.highestValue;\n      percentOfPrevious && (res.prevPerValReq = true);\n    }\n\n    return res;\n  }\n\n  /**\n   * Calculates plot values\n   *\n   * @memberof FunnelDataset\n   */\n  calculatePositionOfPlots () {\n    var datasetStore = this,\n      chart = datasetStore.getFromEnv('chart'),\n      chartConfig = chart.config,\n      conf = datasetStore.config,\n      utils = datasetStore.utils(datasetStore),\n      getSumValueOfObjArrByKey = utils.getSumValueOfObjArrByKey,\n      DistributionMatrix = utils.DistributionMatrix,\n      calculatePositionCoordinate = datasetStore.calculatePositionCoordinate,\n      psmMargin = conf.psmMargin,\n      dataStore = datasetStore.getChildren('data'),\n      index, length, plotObj, unitHeight,\n      streamLinedData = conf.streamLinedData,\n      heightAllotted, widthAllotted, drawingRadius,\n      section = 2,\n      dataStoreLength = datasetStore.getDataLength(),\n      maxDataValue = conf.maxValue = dataStore[0].y,\n      minDataValue = conf.minValue = dataStore[dataStoreLength - 1].y,\n      mvMockNonStreamLine, alignmentType, uh,\n      distributionKey, currentSliceHeight = 0, blockLabelLenFromOffset,\n      blockLenFromOffset = 0,\n      lineHeight = conf.lineHeight,\n      mFloorFn = Math.floor, distributedResult,\n      dMatrix, adMatrix, curr, ele, forceKeys, fKey,\n      distributionMatrix;\n\n    if (!conf.sumValue) {\n      return;\n    }\n\n    datasetStore.postPlotCallback = stubFN;\n\n    chartConfig.canvasTop += chartConfig.marginTop - psmMargin.top;\n    chartConfig.effCanvasHeight =\n                heightAllotted = chartConfig.canvasHeight - (chartConfig.marginTop + chartConfig.marginBottom) +\n                                (psmMargin.top + psmMargin.bottom);\n    chartConfig.effCanvasWidth =\n                widthAllotted = chartConfig.width - (chartConfig.marginLeft + chartConfig.marginRight);\n    drawingRadius = conf.drawingRadius = widthAllotted / section;\n\n    // Calculating the left position for drawing the chart\n    conf.x = chartConfig.canvasLeft + ((chartConfig.canvasRight - chartConfig.canvasLeft) / 2);\n\n    if (streamLinedData && dataStoreLength < 2) {\n      // datasetStore.hide(datasetStore.components.data, dataStoreLength);\n      return;\n    }\n\n    if (!streamLinedData) {\n      uh = unitHeight = maxDataValue ? heightAllotted / maxDataValue : heightAllotted;\n    } else {\n      unitHeight = heightAllotted / (maxDataValue - minDataValue);\n      mvMockNonStreamLine = getSumValueOfObjArrByKey(dataStore, 'value');\n      uh = mvMockNonStreamLine ? heightAllotted / mvMockNonStreamLine\n        : heightAllotted;\n    }\n\n    conf.unitHeight = unitHeight;\n    conf.lastRadius = drawingRadius;\n\n    // For funnel no x shift calculation required since the shape of the funnel causes the labels to be\n    // placed in non overlapping fashion\n    conf.globalMinXShift = 0;\n\n    // Defines how to align the labels of the chart.\n    alignmentType = conf.alignmentType = {};\n\n    // Default alignment is labels placing in the right side of the pyramid, and chart is left aligned\n    alignmentType['default'] = 1;\n    alignmentType.alternate = 2;\n\n    // Length of distribution matrix is how many labels ca be placed at one\n    // side of the pyramid without overlapping\n    distributionMatrix = new DistributionMatrix(mFloorFn(heightAllotted / lineHeight));\n\n    for (index = 0, length = dataStoreLength; index < length; index++) {\n      plotObj = dataStore[index];\n      if (plotObj.getState('removed')) {\n        continue;\n      }\n\n      if ((!streamLinedData && index === 0) || (!streamLinedData && index === length - 1)) {\n        // For non streamedlineData the first element contains the total hence continue\n        distributionMatrix.forcePush(plotObj, index);\n        continue;\n      }\n      currentSliceHeight = plotObj.y * uh;\n      // Effective length of the current slice from the top of pyramid drawing\n      blockLenFromOffset += (plotObj.y * uh);\n      blockLabelLenFromOffset = blockLenFromOffset - currentSliceHeight + (currentSliceHeight / 2);\n      distributionKey = mFloorFn(blockLabelLenFromOffset / lineHeight);\n      distributionMatrix.push(plotObj, distributionKey);\n    }\n\n    distributedResult = distributionMatrix.getDistributedResult();\n\n    // Alternatively merge the data after distribution\n    dataStore.length = 0;\n    if ((distributedResult.matrix)[1] === UNDEF) {\n      [].push.apply(dataStore, (distributedResult.matrix)[0]);\n    } else {\n      dMatrix = (distributedResult.matrix)[0];\n      adMatrix = (distributedResult.matrix)[1];\n      length = Math.max(dMatrix.length, adMatrix.length);\n      for (index = 0; index < length; index++) {\n        ele = dMatrix[index];\n        curr = adMatrix[index];\n        dataStore.push(ele || curr);\n      }\n    }\n\n    // Placing the elements to be forced in distribution matrix\n    forceKeys = Object.keys(distributedResult.forceMatrix);\n    if (forceKeys.length > 0) {\n      for (fKey in distributedResult.forceMatrix) {\n        [].splice.apply(dataStore, [parseInt(fKey, 10), 0].concat(distributedResult.forceMatrix[fKey]));\n      }\n    }\n\n    switch (distributedResult.suggestion) {\n      case alignmentType['default']:\n        calculatePositionCoordinate.call(datasetStore, dataStore, false);\n        break;\n\n      case alignmentType.alternate:\n        conf.labelAlignment = alignmentType.alternate;\n        // 1st section for left labels, 2nd sector for chart itself, 3rd section for right label\n        section = 3;\n        drawingRadius = widthAllotted / section;\n        chartConfig.canvasLeft = (chartConfig.canvasWidth / 2) - (drawingRadius);\n        conf.x = chartConfig.canvasLeft + drawingRadius;\n        // lastRadius = drawingRadius;\n        calculatePositionCoordinate.call(datasetStore, dataStore, true);\n        break;\n    }\n  }\n  /**\n   * Draws funnel plot\n   */\n  draw () {\n    var datasetStore = this,\n      chart = datasetStore.getFromEnv('chart'),\n      conf = datasetStore.config,\n      trackerArgs = datasetStore.config.trackerArgs = [],\n      dataStore = datasetStore.getChildren('data'),\n      index, length,\n      dlGroup = chart.getChildContainer('datalabelsGroup'),\n      streamLinedData = conf.streamLinedData,\n      dataStoreLength = dataStore.length,\n      mMinFn = Math.min,\n      slicingDistance, noOfGap, halfDistance,\n      point,\n      postPlotCallbackInitiated;\n\n    datasetStore.config.labelDrawingConfig = datasetStore.config.labelDrawingConfig || [];\n    datasetStore.config.labelDrawingConfig.length = 0;\n\n    if (!conf.sumValue) {\n      return;\n    }\n\n    datasetStore.animateFunction = function (group) {\n      return function () {\n        group.attr({\n          opacity: 1\n        });\n      };\n    };\n\n    slicingDistance = conf.slicingDistance;\n    halfDistance = slicingDistance / 2;\n\n    if (streamLinedData && dataStoreLength < 2) {\n      datasetStore.hide(datasetStore.getChildren('data'), dataStoreLength);\n      return;\n    }\n\n    for (index = 0, length = dataStore.length; index < length; index++) {\n      dataStore[index] && dataStore[index].shapeArgs && !dataStore[index].getState('removed') &&\n        (dataStore[index].shapeArgs.renderer = chart.getFromEnv('paper'));\n    }\n    noOfGap = conf.noOfGap;\n    if (noOfGap) {\n      conf.perGapDistance = mMinFn(halfDistance * 1.5, slicingDistance / noOfGap);\n      conf.distanceAvailed = halfDistance;\n    }\n\n    index = dataStore.length;\n\n    if (conf.alreadyPlotted) {\n      datasetStore.postPlotCallback = function () {\n        if (postPlotCallbackInitiated) {\n          return;\n        }\n\n        postPlotCallbackInitiated = true;\n\n        datasetStore.animateFunction(dlGroup)();\n      };\n    }\n\n    while (index--) {\n      point = dataStore[index];\n      point.index = index;\n      point.syncDraw();\n    }\n    conf.oldLastData = Object.assign({}, dataStore[dataStore.length - 1].shapeArgs);\n    datasetStore.hide(datasetStore.getChildren('data'), dataStoreLength);\n\n    conf.connectorEndSwitchHistoryY = {};\n\n    index = dataStore.length;\n    while (index--) {\n      if (!dataStore[index].getState('removed')) {\n        trackerArgs.push(dataStore[index]);\n      }\n    }\n\n    datasetStore.addJob('labelDrawID', datasetStore.drawAllLabels.bind(datasetStore), priorityList.label);\n\n    datasetStore.addJob('trackerDrawID', datasetStore.drawAllTrackers.bind(datasetStore), priorityList.tracker);\n\n    datasetStore.removePlots();\n    conf.alreadyPlotted = true;\n    conf.prevIs2d = conf.is2d;\n  }\n\n  /**\n   * Calculates parser configuration for tooltip\n   * @param {Object} options configuration object\n   * @return {Object} parserConfig for tooltip\n   */\n  getTooltipMacroStub (options) {\n    var datasetStore = this,\n      conf = datasetStore.config,\n      numberFormatter = datasetStore.getFromEnv('number-formatter'),\n      baseStub, percentOfPrevValue;\n\n    if (conf.streamLinedData) {\n      percentOfPrevValue = conf.percentOfPrevious ? options.pValue\n        : numberFormatter.percentValue(options.dataValue / options.prevValue * 100);\n    }\n    baseStub = super.getTooltipMacroStub(options);\n    baseStub.percentValue = conf.percentOfPrevious ? numberFormatter.percentValue(options.dataValue /\n      options.highestValue * 100) : options.pValue;\n    baseStub.percentOfPrevValue = percentOfPrevValue;\n\n    return baseStub;\n  }\n}\nexport default FunnelDataset;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  stubFN,\n  pluck,\n  pluckNumber,\n  BLANK,\n  preDefStr,\n  COMMASTRING,\n  COMMASPACE,\n  HASHSTRING,\n  toRaphaelColor,\n  setLineHeight,\n  parsexAxisStyles,\n  extend2,\n  regex,\n  componentFactory,\n  convertColor,\n  getDarkColor,\n  getLightColor,\n  parseUnsafeString\n} from '@fusioncharts/core/src/lib';\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { trimData } from '@fusioncharts/charts/src/dataset/pie2d';\nimport funnelPyramidBaseAnimation from './funnelpyramidbase.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\n\nconst PATTERN_TYPES = ['line', 'circle', 'square'];\n\nvar UNDEF,\n  showHoverEffectStr = preDefStr.showHoverEffectStr,\n  noneStr = 'none',\n  PXSTRING = 'px',\n  fillStr = 'fill',\n  EASE_IN = 'easeIn',\n  NORMALSTRING = 'normal',\n  math = Math,\n  mathRound = math.round,\n  mathCeil = math.ceil,\n  mathMax = math.max,\n  mathMin = math.min,\n  mathPow = math.pow,\n  mathSqrt = math.sqrt,\n  EMPTY_OBJ = {},\n  colorStrings = preDefStr.colors,\n  COLOR_000000 = colorStrings.c000000,\n  // configStr = preDefStr.configStr,\n  // animationObjStr = preDefStr.animationObjStr,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  pathStr = 'path',\n  zeroCommaHundredStr = '0,100',\n  EVENTARGS = 'eventArgs',\n  win = window,\n  userAgent = win.navigator.userAgent,\n  isIE = /msie/i.test(userAgent) && !win.opera,\n  HEXCODE = regex.hexcode,\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')',\n  dropHash = regex.dropHash,\n  isObject = function (obj) {\n    return typeof obj === 'object';\n  },\n  isString = function (s) {\n    return typeof s === 'string';\n  },\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  getTooltipMacroStub = function (options) {\n    return {\n      formattedValue: options.formatedVal,\n      label: options.name,\n      percentValue: options.pValue,\n      sum: options.sum,\n      unformattedSum: options.sumValue\n    };\n  },\n  M = 'M',\n  A = 'A',\n  L = 'L',\n  Z = 'Z',\n  startsRGBA = regex.startsRGBA,\n  /**\n   * Handle color operations. The object methods are chainable.\n   * @param {string} input The input color in either rbga or hex format\n   * @return {Object} returns the member functions needed of class color\n   * @private\n   */\n  Color = function (input) {\n    // declare variables\n    var rgba = [], result;\n\n    /**\n    * Parse the input color to rgba array\n    * @param {string} inp color string\n    * @private\n    */\n    function init (inp) {\n      // rgba\n      result = /rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]?(?:\\.[0-9]+)?)\\s*\\)/.exec(inp);\n      if (result) {\n        rgba = [parseInt(result[1], 10), parseInt(result[2], 10),\n          parseInt(result[3], 10), parseFloat(result[4])];\n      } else {\n        // hex\n        result = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(inp);\n        if (result) {\n          rgba = [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16), 1];\n        }\n      }\n    }\n    /**\n    * Return the color a specified format\n    * @param {string} format color format, hex or rgba\n    * @return {string} color string\n    * @private\n    */\n    function get (format) {\n      var ret;\n\n      // it's NaN if gradient color on a column chart\n      if (rgba && !isNaN(rgba[0])) {\n        if (format === 'rgb') {\n          ret = 'rgb(' + rgba[0] + ',' + rgba[1] + ',' + rgba[2] + ')';\n          /** ^\n                     * capability to return hex code\n                     */\n        } else if (format === 'hex') {\n          ret = '#' + (COLOR_000000 +\n                          (rgba[0] << 16 | rgba[1] << 8 | rgba[2]).toString(16)).slice(-6);\n        } else if (format === 'a') {\n          /* EOP^ */\n          ret = rgba[3];\n        } else {\n          ret = 'rgba(' + rgba.join(',') + ')';\n        }\n      } else {\n        ret = input;\n      }\n      return ret;\n    }\n\n    /**\n     * Brighten the color\n     * @param {number} alpha alpha string\n     * @return {Object} object instance\n     * @private\n     */\n    function brighten (alpha) {\n      if (!isNaN(alpha) && alpha !== 0) {\n        var i;\n        for (i = 0; i < 3; i++) {\n          rgba[i] += parseInt(alpha * 255, 10);\n\n          if (rgba[i] < 0) {\n            rgba[i] = 0;\n          }\n          if (rgba[i] > 255) {\n            rgba[i] = 255;\n          }\n        }\n      }\n      return this;\n    }\n    /**\n     * Set the color's opacity to a given alpha value\n     * @param {number} alpha alpha string\n     * @return {Object} object instance\n     * @private\n     */\n    function setOpacity (alpha) {\n      rgba[3] = alpha;\n      return this;\n    }\n\n    // initialize: parse the input\n    init(input);\n\n    // public methods\n    return {\n      get: get,\n      brighten: brighten,\n      setOpacity: setOpacity\n    };\n  };\n\naddDep({\n  name: 'funnelPyramidBaseAnimation',\n  type: 'animationRule',\n  extension: funnelPyramidBaseAnimation\n});\n/**\n * Creates class FunnelPyramidBaseDataset\n */\nclass FunnelPyramidBaseDataset extends ComponentInterface {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'funnelPyramidBase';\n  }\n  /**\n   * Construction funtion for FunnelPyramidBaseDataset class\n   */\n  constructor () {\n    super();\n    this.components = { };\n    // Stub for saving all the computed configuration\n    // this.removeData = function () {\n    //   // Override parent fn\n    // };\n    this.utils = function (_contextParam) {\n      let _context = _contextParam;\n      /**\n       * Utility to create associative array with the facility to get non-undefined element in optimized way.\n       * O(1) length retrieval\n       */\n      function ArrayableObj () {\n        var _map = [],\n          _eLength = 0; // Effective length. Only count of defined element\n\n        // Set a value in associative array\n        this.set = function (key, value) {\n          _eLength++;\n          _map[key] = value;\n        };\n\n        // Get an value based on the key\n        this.get = function (key) {\n          return _map[key];\n        };\n\n        // Get the complete array\n        this.getAll = function () {\n          return _map;\n        };\n\n        // Merge with a given array and return a new one. However instance remains immutable.\n        this.mergeWith = function (anotherArray) {\n          var sArr,\n            itemIndex,\n            item,\n            newArr = _map.slice(0);\n          if (anotherArray instanceof Array) {\n            sArr = anotherArray;\n          } else if (anotherArray instanceof ArrayableObj) {\n            sArr = anotherArray.getAll();\n          } else {\n            return;\n          }\n          for (itemIndex in sArr) {\n            item = sArr[itemIndex];\n            if (newArr[itemIndex]) {\n              continue;\n            }\n            newArr[itemIndex] = item;\n          }\n          return newArr;\n        };\n\n        this.getEffectiveLength = function () {\n          return _eLength;\n        };\n      }\n\n      ArrayableObj.prototype.constructor = ArrayableObj;\n\n      /**\n       * Matrix that calculates the distribution of the labels.\n       * If the distribution is not uniform it calculates a variable factor to make it uniform\n       * It calculates the following cases :-\n       * a) If the distribution is permitted for one given side, it suggestes chart.alignmentType['default']\n       * b) If the distribution exceeds to a given limit it suggestes chart.alignmentType.alternate\n       *\n       * If the original distribution (non uniform) is like\n       * ------------------------------------------------------\n       *   4  |  2  |  0  |  0  |  0  |  0  |  0  | 1   |  0  |\n       * ------------------------------------------------------\n       * After make it uniform it would look like\n       * ------------------------------------------------------\n       *   1  |  1  |  1  |  1  |  1  |  1  |  0  | 1   |  0  |\n       * ------------------------------------------------------\n       *\n       * If the original distribution array is not sufficient to hold all the elements one more array is\n       * introduced.\n       * @param {number} length Permitted limit of distribution\n       */\n      function DistributionMatrix (length) {\n        // Allowed length of distribution\n        this.distributionLength = length;\n        // Represents the recalculated distribution for default side\n        this.distributedMatrix = [];\n        // Represents the recalculated distribution for alternate side\n        this.altDistributedMatrix = [];\n        // Represents the normal distribution\n        this.nonDistributedMatrix = {};\n        // For focefully pushing elements which are need not be distributed, but required to be placed in\n        // the final distribution matrix\n        this.forcePushObj = {};\n        this.flags = {\n          exhaustion: false\n        };\n      }\n\n      DistributionMatrix.prototype.constructor = DistributionMatrix;\n\n      /**\n       * Puts items in the matrix to calculate dependency.\n       * @param {Object} item Item to be distributed\n       * @param {number} rangeBottom distribution index\n      */\n      DistributionMatrix.prototype.push = function (item, rangeBottom) {\n        // Original distribution before recalculation\n        this.nonDistributedMatrix[rangeBottom] = this.nonDistributedMatrix[rangeBottom] || [];\n        this.nonDistributedMatrix[rangeBottom].push(item);\n      };\n\n      /*\n       * Forcefully pushes element in already distributed array. The system does not calculate the overall\n       * distribution after the data being pushed.\n       * @param item {{object}} - object to be forcefully distributed\n       * @param index {{int}} - corrosponds to the index of the main array where the element to be placed\n      */\n      DistributionMatrix.prototype.forcePush = function (item, index) {\n        this.forcePushObj[index] = item;\n      };\n\n      /*\n       * Controls and spread distribution of non-uniform matrix to uniform matrix.\n       * Gets called when result is prepared.\n       */\n      DistributionMatrix.prototype.distribute = function (legendSkip) {\n        var datasetStore = _context,\n          distributionItems,\n          alternateSwitch = true,\n          distributedMatrix = new ArrayableObj(),\n          alternateDistributedMatrix = new ArrayableObj(),\n          orphanMatrix = new ArrayableObj(),\n          altOrphanMatrix = new ArrayableObj(),\n          flags = this.flags,\n          currentMatrix, distributionIndexAlt,\n          distributionIndex, index, length, currentItem,\n          absIndex = 0,\n          dataLength = datasetStore.getDataLength();\n\n        // If there are too many labels even after placing them in alternate size, the system skips label.\n        // This behaviour is observable especially with low height. On top of that if legend is positioned\n        // at right side, system places labels only one side.\n        // This is applied because two side space management\n        // cannot be done in this scope.\n        if (legendSkip) {\n          // If legend is in right side place all the labels in one side\n          if ((dataLength - (this.distributionLength)) > 0) {\n            // willMatricsExhaust = true;\n            // matricsExhaustionIndex = diff;\n\n            for (distributionIndexAlt in this.nonDistributedMatrix) {\n              distributionItems = this.nonDistributedMatrix[distributionIndexAlt];\n              for (index = 1; index < distributionItems.length; index++) {\n                // Keep only the first element in the block as\n                // distribution will not be calculated since\n                // labels are skipped.\n                currentItem = distributionItems[index];\n                currentItem.dontPlot = true;\n                currentItem.displayValue = BLANK;\n              }\n            }\n          }\n        } else {\n          // If legend is not in right side but possibility of canvas overflow\n          if ((dataLength - (2 * this.distributionLength)) > 0) {\n            // willMatricsExhaust = true;\n            // matricsExhaustionIndex = diff;\n\n            for (distributionIndexAlt in this.nonDistributedMatrix) {\n              distributionItems = this.nonDistributedMatrix[distributionIndexAlt];\n              for (index = 1; index < distributionItems.length - 1; index++) {\n                currentItem = distributionItems[index];\n                currentItem.dontPlot = true;\n                currentItem.displayValue = BLANK;\n              }\n            }\n          }\n        }\n        /*\n                   * If number of data to be distributed is greater than allowed length (in one side),\n                   * alternate distribution happens.\n                   * There are few concept here how the skipping is dealt with.\n                   * The pyramid plot can have labels or can not. If the plot doesn't associate with a label we call\n                   * it a orphan. While calculating the distribution orphans are not considered as their labels won't\n                   * occupy any space. Hence these are kept in a separate matrix;\n                   * Separately the orphans and non-orphans\n                   * create one associative array. But when they are merged they create a complete array.\n                   */\n        if (dataLength > this.distributionLength && !legendSkip) {\n          // If data exhausts two matrics, skip labels\n          flags.exhaustion = true;\n          for (distributionIndexAlt in this.nonDistributedMatrix) {\n            distributionItems = this.nonDistributedMatrix[distributionIndexAlt];\n            // Alternatively place every item in two different arrays\n            for (index = 0, length = distributionItems.length; index < length; index++) {\n              currentItem = distributionItems[index];\n              if (!currentItem.dontPlot) {\n                alternateSwitch ? (currentMatrix = distributedMatrix)\n                  : (currentMatrix = alternateDistributedMatrix);\n                if (currentMatrix.getEffectiveLength() > parseInt(distributionIndexAlt, 10)) {\n                  currentItem.distributionFactor =\n                                          (currentMatrix.getEffectiveLength() - 1) - distributionIndexAlt;\n                } else {\n                  // currentItem.distributionFactor = 0;\n                  currentItem.distributionFactor = 0;\n                }\n              } else {\n                alternateSwitch ? (currentMatrix = orphanMatrix)\n                  : (currentMatrix = altOrphanMatrix);\n              }\n              currentMatrix.set(absIndex++, currentItem);\n              alternateSwitch = !alternateSwitch;\n            }\n          }\n          // Forms the complete array in both of the side\n          this.distributedMatrix = distributedMatrix.mergeWith(orphanMatrix);\n          this.altDistributedMatrix = alternateDistributedMatrix.mergeWith(altOrphanMatrix);\n        } else {\n          // Distribution happens in one side. Hence data can be accommodated in one side\n          for (distributionIndex in this.nonDistributedMatrix) {\n            distributionItems = this.nonDistributedMatrix[distributionIndex];\n            for (index = 0, length = distributionItems.length; index < length; index++) {\n              currentItem = distributionItems[index];\n              // Calculating distribution offset\n              if (!currentItem.dontPlot) {\n                currentMatrix = distributedMatrix;\n                if (currentMatrix.getEffectiveLength() > parseInt(distributionIndex, 10)) {\n                  currentItem.distributionFactor =\n                                          (currentMatrix.getEffectiveLength() - 1) - distributionIndex;\n                } else {\n                  currentItem.distributionFactor = 0;\n                }\n              } else {\n                currentMatrix = orphanMatrix;\n              }\n              currentMatrix.set(absIndex++, currentItem);\n            }\n          }\n          this.distributedMatrix = distributedMatrix.mergeWith(orphanMatrix);\n        }\n      };\n\n      /*\n               * Gets the distributed result.\n               * @return {{object}} - {\n               *   suggestion :\n               *   matrix\n               * }\n               * Suggestion - suggests what kind of allignment to be taken\n               * Matrix - Uniform distribution matrix\n               */\n      DistributionMatrix.prototype.getDistributedResult = function () {\n        var datasetStore = _context,\n          chart = datasetStore.getFromEnv('chart'),\n          chartConfig = chart.config,\n          legend = chart.getFromEnv('legend'),\n          conf = datasetStore.config,\n          alignmentType = conf.alignmentType,\n          suggestion,\n          matrix = [],\n          isLegendRight = chart.isLegendRight,\n          allowedRightX = chartConfig.width - conf.blankSpace;\n\n        if (chartConfig.showLegend && legend.config.width) {\n          isLegendRight && (allowedRightX -= legend.config.width + chartConfig.marginRight);\n        } else {\n          isLegendRight = 0;\n        }\n        chart.isLegendRight = isLegendRight;\n\n        this.distribute(isLegendRight);\n\n        // When legend is in right side the plot will be in one side with skipped labels.\n        if (isLegendRight) {\n          suggestion = alignmentType['default'];\n          matrix.push(this.distributedMatrix);\n        } else {\n          suggestion = this.flags.exhaustion\n            ? alignmentType.alternate : alignmentType['default'];\n\n          this.flags.exhaustion ? [].push.call(matrix, this.distributedMatrix,\n            this.altDistributedMatrix) : matrix.push(this.distributedMatrix);\n        }\n        return {\n          'forceMatrix': this.forcePushObj,\n          'suggestion': suggestion,\n          'matrix': matrix\n        };\n      };\n\n      return {\n        DistributionMatrix: DistributionMatrix,\n\n        setContext: function (context) {\n          _context = context;\n        },\n\n        invokeHookFns: function () {\n          var fn, params = [], ctx = _context;\n\n          switch (arguments.length) {\n            case 3:\n              ctx = arguments[2];\n              /* falls through */\n            case 2:\n              params = arguments[1];\n              /* falls through */\n            case 1:\n              fn = arguments[0];\n              break;\n\n            default:\n              return;\n          }\n\n          fn && typeof fn === 'function' && fn.apply(ctx, params);\n        },\n\n        copyProperties: function (fromObject, toObject, mappingArray) {\n          var index, length, confArr, fromName, toName, convertFunction, defaultValue, additionalFn,\n            DEFAULT_FN = stubFN;\n          /**\n           * Calculates default value of key received\n           * @param {number|string} key key value\n           * @return {number|string} returns default value of key\n           */\n          function getDefaultValue (key) {\n            var nKey;\n\n            if (typeof key === 'string' && key.indexOf('$') === 0) {\n              nKey = key.substring(1);\n              return toObject[nKey];\n            }\n\n            if (typeof key === 'function') {\n              return key.call(_context, toObject);\n            }\n\n            return key;\n          }\n\n          for (index = 0, length = mappingArray.length; index < length; index++) {\n            confArr = mappingArray[index];\n            fromName = confArr[0];\n            toName = confArr[1];\n            convertFunction = confArr[2];\n            defaultValue = getDefaultValue(confArr[3]);\n            additionalFn = confArr[4] || DEFAULT_FN;\n\n            toObject[toName] = convertFunction(fromObject[fromName], defaultValue);\n            additionalFn(toObject);\n          }\n        },\n\n        sortObjArrByKey: function (objArr, valueKey) {\n          return objArr.sort(function (obj1, obj2) {\n            return Math.abs(obj2[valueKey]) - Math.abs(obj1[valueKey]);\n          });\n        },\n\n        getSumValueOfObjArrByKey: function (objArr, valueKey) {\n          var index, length, total = 0;\n\n          for (index = 0, length = objArr.length; index < length; index++) {\n            total += parseFloat(objArr[index][valueKey], 10);\n          }\n\n          return total;\n        }\n      };\n    };\n    this.hide = function (plotArr, currentDsLengthParam) {\n      var index,\n        animationManager = this.getFromEnv('animationManager'),\n        callbackFn = function () {\n          this.hide();\n        },\n        plot,\n        currentDsLength = currentDsLengthParam;\n\n      if (!plotArr || plotArr.length === 0) {\n        return;\n      }\n\n      currentDsLength = currentDsLength < 2 && (this.getName() === 'funnel') ? 0 : currentDsLength;\n      for (index = plotArr.length - 1; index >= currentDsLength; index--) {\n        plot = plotArr[index].getGraphicalElement();\n\n        if (plot.graphic) {\n          plot.graphic.front && animationManager.setAnimation({\n            el: plot.graphic.front,\n            callback: callbackFn,\n            component: this\n          });\n\n          plot.graphic.back && animationManager.setAnimation({\n            el: plot.graphic.back,\n            callback: callbackFn,\n            component: this\n          });\n\n          plot.graphic.funnel2D && animationManager.setAnimation({\n            el: plot.graphic.funnel2D,\n            callback: callbackFn,\n            component: this\n          });\n\n          plot.graphic.lighterHalf && animationManager.setAnimation({\n            el: plot.graphic.lighterHalf,\n            callback: callbackFn,\n            component: this\n          });\n          // plot.graphic.lighterHalf && !lighterHalf && plot.graphic.lighterHalf.hide();\n\n          plot.graphic.darkerHalf && animationManager.setAnimation({\n            el: plot.graphic.darkerHalf,\n            callback: callbackFn,\n            component: this\n          });\n          // plot.graphic.darkerHalf && !darkerHalf && plot.graphic.darkerHalf.hide();\n\n          plot.graphic.borderElement && animationManager.setAnimation({\n            el: plot.graphic.borderElement,\n            callback: callbackFn,\n            component: this\n          });\n          // plot.graphic.borderElement && !silhuettePath && plot.graphic.borderElement.hide();\n\n          plot.graphic.centerLight && animationManager.setAnimation({\n            el: plot.graphic.centerLight,\n            callback: callbackFn,\n            component: this\n          });\n          // plot.graphic.centerLight && !centerLight && plot.graphic.centerLight.hide();\n\n          plot.graphic.centerLight1 && animationManager.setAnimation({\n            el: plot.graphic.centerLight1,\n            callback: callbackFn,\n            component: this\n          });\n          // plot.graphic.centerLight1 && !centerLight1 && plot.graphic.centerLight1.hide();\n\n          plot.graphic.toptop && animationManager.setAnimation({\n            el: plot.graphic.toptop,\n            callback: callbackFn,\n            component: this\n          });\n          // plot.graphic.toptop && !toptop && plot.graphic.toptop.hide();\n\n          plot.graphic.topLight && animationManager.setAnimation({\n            el: plot.graphic.topLight,\n            callback: callbackFn,\n            component: this\n          });\n          // plot.graphic.topLight && !topLight && plot.graphic.topLight.hide();\n\n          plot.graphic.topLight1 && animationManager.setAnimation({\n            el: plot.graphic.topLight1,\n            callback: callbackFn,\n            component: this\n          });\n          // plot.graphic.topLight1 && !topLight1 && plot.graphic.topLight1.hide();\n        }\n        plot.dataLabel && animationManager.setAnimation({\n          el: plot.dataLabel,\n          callback: callbackFn,\n          component: this\n        });\n        plot.trackerObj && animationManager.setAnimation({\n          el: plot.trackerObj,\n          callback: callbackFn,\n          component: this\n        });\n      }\n    };\n    this.pyramidFunnelShape = (function () {\n      // @todo generic fn for pyramid and funnel\n\n      // list of attr that will handled here\n      var attrList = {\n          y: true,\n          R1: true,\n          R2: true,\n          h: true,\n          r3dFactor: true,\n          color: true,\n          opacity: true,\n          fill: true,\n          stroke: true,\n          strokeColor: true,\n          strokeAlpha: true,\n          'stroke-width': true\n        },\n        // FIX for #FWXT-600\n        // for zero radius calcPoints return erroneous value\n        minRadius = 0.01,\n\n        getArcPath = function (endX, endY, rX, rY, isClockWise, isLargeArc) {\n          return [A, rX, rY, 0, isLargeArc, isClockWise, endX, endY];\n        },\n\n        /**\n         * calcPoints method calculates and returns the\n         * coordinates of four points of common tangency\n         * between the upper and lower ellipses.\n         * @param {number} a1          semi-major axis length of the upper ellipse\n         * @param {number} b1          semi-minor axis length of the upper ellipse\n         * @param {number} h1          height of upper ellipse center\n         * @param {number} a2          semi-major axis length of the lower ellipse\n         * @param {number} b2          semi-minor axis length of the lower ellipse\n         * @param {number} h2          height of lower ellipse center\n         * @return {Object}            object holding point instances corresponding\n         *                       to the 4 points of tangencies.\n        */\n        calcPoints = function (a1, b1, h1, a2, b2, h2) {\n          // calcuating parameters of formula\n          var alpha = mathPow(a2, 2) - mathPow(a1, 2),\n            beta = -2 * (mathPow(a2, 2) * h1 - mathPow(a1, 2) * h2),\n            gamma = mathPow(a1 * b2, 2) + mathPow(a2 * h1, 2) -\n                                          mathPow(a2 * b1, 2) - mathPow(a1 * h2, 2),\n            k = mathSqrt(mathPow(beta, 2) - 4 * alpha * gamma),\n            // getting the 2 y-intercepts for there are 2 pairs of tangents\n            c1 = (-beta + k) / (2 * alpha),\n            c2 = (-beta - k) / (2 * alpha),\n            oneHND = 100,\n            objPoints,\n            c,\n            m1,\n            m2,\n            p1,\n            p2,\n            p3,\n            p4,\n            i;\n\n          // but we need only one pair and hence one value of y-intercept\n          if (c1 < h2 && c1 > h1) {\n            c = c2;\n          } else if (c2 < h2 && c2 > h1) {\n            c = c1;\n          }\n          // getting the slopes of the 2 tangents of the selected pair\n          m1 = mathSqrt((mathPow(c - h1, 2) - mathPow(b1, 2)) / mathPow(a1, 2));\n          m2 = -m1;\n\n          // getting the 4 points of tangency\n          // right sided points\n          // upper\n          p1 = {\n            x: mathRound((mathPow(a1, 2) * m1 / (c - h1)) * oneHND) / oneHND,\n            y: mathRound(((mathPow(b1, 2) / (c - h1)) + h1) * oneHND) / oneHND\n          };\n          // lower\n          p2 = {\n            x: mathRound((mathPow(a2, 2) * m1 / (c - h2)) * oneHND) / oneHND,\n            y: mathRound(((mathPow(b2, 2) / (c - h2)) + h2) * oneHND) / oneHND\n          };\n          // left sided points\n          // upper\n          p3 = {\n            x: mathRound((mathPow(a1, 2) * m2 / (c - h1)) * oneHND) / oneHND,\n            y: mathRound(((mathPow(b1, 2) / (c - h1)) + h1) * oneHND) / oneHND\n          };\n          // lower\n          p4 = {\n            x: mathRound((mathPow(a2, 2) * m2 / (c - h2)) * oneHND) / oneHND,\n            y: mathRound(((mathPow(b2, 2) / (c - h2)) + h2) * oneHND) / oneHND\n          };\n          // storing in object to be passed as a collection\n          objPoints = {\n            topLeft: p3,\n            bottomLeft: p4,\n            topRight: p1,\n            bottomRight: p2\n          };\n          // checking for invalid situations\n          for (i in objPoints) {\n            if (isNaN(objPoints[i].x) || isNaN(objPoints[i].y)) {\n              // The funnel is extremely thin and points of tangencies\n              // coincide with ellipse ends\n              if (i === 'topLeft' || i === 'bottomLeft') {\n                objPoints[i].x = -a1;\n              } else {\n                objPoints[i].x = a1;\n              }\n              objPoints[i].y = (i === 'bottomRight' || i === 'bottomLeft') ? h2 : h1;\n            }\n          }\n          // object returned\n          return objPoints;\n        },\n\n        getFunnel3DShapeArgs = function (x, y, R1, R2, h, r3dFactor, isHollow) {\n          var y2 = y + h,\n            R3 = R1 * r3dFactor, R4 = R2 * r3dFactor, shapearge,\n            objPoints = calcPoints(R1, R3, y, R2, R4, y2),\n            topLeft = objPoints.topLeft,\n            bottomLeft = objPoints.bottomLeft,\n            topRight = objPoints.topRight,\n            bottomRight = objPoints.bottomRight,\n            X1 = x + topLeft.x, X2 = x + topRight.x, X3 = x + bottomLeft.x, X4 = x + bottomRight.x,\n            y3 = topLeft.y, y4 = bottomLeft.y,\n\n            arc1 = getArcPath(X2, y3, R1, R3, 0, 0),\n            arc2 = getArcPath(X2, y3, R1, R3, 1, 1),\n            arc3 = getArcPath(X3, y4, R2, R4, 1, 0),\n            arc4 = getArcPath(X3, y4, R2, R4, 0, 1);\n\n          shapearge = {\n            front: [M, X1, y3].concat(arc1, [L, X4, y4], arc3, [Z]),\n\n            back: [M, X1, y3].concat(arc2, [L, X4, y4], arc4, [Z]),\n            silhuette: [M, X1, y3].concat(arc2, [L, X4, y4], arc3, [Z])\n          };\n          if (!isHollow) {\n            shapearge.top = [M, X1, y3].concat(arc1, [L, X2, y3],\n              getArcPath(X1, y3, R1, R3, 0, 1), [Z]);\n          }\n\n          return shapearge;\n        },\n\n        getPyramid3DShapeArgs = function (xParam, yParam, R1Param, R2Param, hParam, r3dFactorParam, is2DParam, rendererParam, isFunnelParam, isHollowParam) {\n          let x = xParam,\n            y = yParam,\n            R1 = R1Param,\n            R2 = R2Param,\n            h = hParam,\n            r3dFactor = r3dFactorParam,\n            is2D = is2DParam,\n            renderer = rendererParam,\n            isFunnel = isFunnelParam,\n            isHollow = isHollowParam;\n\n          if (isObject(x)) {\n            y = x.y;\n            R1 = x.R1;\n            R2 = x.R2;\n            h = x.h;\n            r3dFactor = x.r3dFactor;\n            is2D = x.is2D;\n            // use3DLighting = x.use3DLighting;\n            isHollow = x.isHollow;\n            isFunnel = x.isFunnel;\n            renderer = x.renderer;\n            x = x.x;\n          }\n          var X1 = x - R1, X2 = x + R1, X3 = x - R2, X4 = x + R2, y2 = y + h, shapeArgs,\n            R3,\n            R4,\n            lightLength,\n            lightLengthH,\n            lightLengthH1,\n            lightWidth;\n          if (is2D) {\n            shapeArgs = {\n              silhuette: [M, X1, y, L, X2, y, X4, y2, X3, y2, Z]\n            };\n\n            if (!isFunnel) {\n              // Rounding the x value to remove the thin white gap between following two halfs due\n              // to sub-pixel rendering.\n              x = Math.round(x);\n              shapeArgs.lighterHalf = [M, X1, y, L, x, y, x, y2, X3, y2, Z];\n              shapeArgs.darkerHalf = [M, x, y, L, X2, y, X4, y2, x, y2, Z];\n            }\n          } else if (isFunnel) {\n            shapeArgs = getFunnel3DShapeArgs(x, y, R1 || minRadius, R2 ||\n                          minRadius, h, r3dFactor, isHollow, renderer);\n          } else {\n            R3 = R1 * r3dFactor;\n            R4 = R2 * r3dFactor;\n            lightLength = mathMin(5, R1);\n            lightLengthH = mathMin(2, 2 * R3);\n            lightLengthH1 = mathMin(2, lightLengthH);\n            lightWidth = lightLengthH1 / r3dFactor;\n            shapeArgs = {\n              top: [M, X1, y, L, x, y + R3, X2, y, x, y - R3, Z],\n              front: [M, X1, y, L, x, y + R3, X2, y, X4, y2, x, y2 + R4,\n                X3, y2, Z],\n              topLight: [M, X1, y + 0.5, L, x, y + R3 + 0.5, x, y + R3 - lightLengthH,\n                X1 + lightWidth, y, Z], // x, y + R3 - lightLengthH, Z],\n              topLight1: [M, X2, y + 0.5, L, x, y + R3 + 0.5, x, y + R3 - lightLengthH1,\n                X2 - lightWidth, y, Z], // x, y + R3 - lightLengthH, Z],\n              silhuette: [M, X1, y, L, x, y - R3, X2, y, X4, y2, x, y2 + R4,\n                X3, y2, Z],\n              centerLight: [M, x, y + R3, L, x, y2 + R4, x - 5, y2 + R4,\n                x - lightLength, y + R3, Z],\n              centerLight1: [M, x, y + R3, L, x, y2 + R4, x + 5, y2 + R4,\n                x + lightLength, y + R3, Z]\n            };\n          }\n\n          return shapeArgs;\n        },\n\n        attr = function (hashParam, val) {\n          var key,\n            value,\n            element = this,\n            color,\n            alpha,\n            colorObject,\n            shapeChanged = false,\n            colorChanged = false,\n            lightColor,\n            lightColor1,\n            darkColor,\n            attr3D = this._3dAttr,\n            shapeArgs,\n            colorDark,\n            colorLight,\n            zero100STR,\n            lightAlphaSTR,\n            lightShade,\n            slantAngle,\n            lightShadeStop,\n            hash = hashParam;\n\n          // single key-value pair\n          if (isString(hash) && defined(val)) {\n            key = hash;\n            hash = {};\n            hash[key] = val;\n          }\n\n          // used as a getter: first argument is a string, second is UNDEF\n          if (isString(hash)) {\n            // if belongs from the list then handle here\n            if (attrList[hash]) {\n              element = this._3dAttr[hash];\n            } else { // else leve for the original attr\n              element = this._attr(hash);\n            }\n\n            // setter\n          } else {\n            for (key in hash) {\n              value = hash[key];\n\n              // if belongs from the list then handle here\n              if (attrList[key]) {\n                // store the att in attr3D for further use\n                attr3D[key] = value;\n                // if it is 'fill' or 'lighting3D' the redefine the colors for all the 3 elements\n                if (key === fillStr) {\n                  if (value && value.linearGradient && value.stops && value.stops[0]) {\n                    value = value.stops[0][1];\n                  }\n\n                  if (startsRGBA.test(value)) {\n                    colorObject = new Color(value);\n                    color = colorObject.get('hex');\n                    alpha = colorObject.get('a') * 100;\n                  } else if (value && value.FCcolor) {\n                    color = value.FCcolor.color.split(COMMASTRING)[0];\n                    alpha = value.FCcolor.opacity.split(COMMASTRING)[0];\n                  } else if (HEXCODE.test(value)) {\n                    color = value.replace(dropHash, HASHSTRING);\n                    alpha = pluckNumber(attr3D.opacity, 100);\n                  }\n                  attr3D.color = color;\n                  attr3D.opacity = alpha;\n                  colorChanged = true;\n                } else if (key === 'color' || key === 'opacity') {\n                  attr3D.fill = toRaphaelColor(convertColor(attr3D.color,\n                    pluckNumber(attr3D.opacity, 100)));\n                  colorChanged = true;\n                } else if (key === 'stroke' || key === 'strokeColor' || key === 'strokeAlpha') {\n                  if (attr3D.is2D) { // stroke is only applicable on 2d shape\n                    if (key === 'stroke') {\n                      if (value && value.linearGradient && value.stops && value.stops[0]) {\n                        value = value.stops[0][1];\n                      }\n\n                      if (startsRGBA.test(value)) {\n                        colorObject = new Color(value);\n                        color = colorObject.get('hex');\n                        alpha = colorObject.get('a') * 100;\n                      } else if (value && value.FCcolor) {\n                        color = value.FCcolor.color.split(COMMASTRING)[0];\n                        alpha = value.FCcolor.opacity.split(COMMASTRING)[0];\n                      } else if (HEXCODE.test(value)) {\n                        color = value.replace(dropHash, HASHSTRING);\n                        alpha = pluckNumber(attr3D.opacity, 100);\n                      }\n                      attr3D.strokeColor = color;\n                      attr3D.strokeAlpha = alpha;\n                    } else {\n                      attr3D.stroke = convertColor(attr3D.strokeColor,\n                        pluckNumber(attr3D.strokeAlpha, 100));\n                    }\n                    if (attr3D.isFunnel) {\n                      this.funnel2D.attr('stroke', attr3D.stroke);\n                    } else {\n                      this.borderElement.attr('stroke', attr3D.stroke);\n                    }\n                  }\n                } else if (key === 'stroke-width') {\n                  if (attr3D.is2D) { // stroke is only applicable on 2d shape\n                    if (attr3D.isFunnel) {\n                      this.funnel2D.attr(key, value);\n                    } else {\n                      this.borderElement.attr(key, value);\n                    }\n                  }\n                } else {\n                  shapeChanged = true;\n                }\n              } else { // else leave for the original attr\n                this._attr(key, value);\n              }\n            }\n\n            if (attr3D.is2D) {\n              if (shapeChanged) {\n                shapeArgs = getPyramid3DShapeArgs(attr3D.x, attr3D.y,\n                  attr3D.R1, attr3D.R2, attr3D.h, attr3D.r3dFactor, attr3D.is2D);\n                element.shadowElement.attr({\n                  path: shapeArgs.silhuette\n                });\n                if (attr3D.isFunnel) {\n                  element.funnel2D.attr({\n                    path: shapeArgs.silhuette\n                  });\n                } else {\n                  element.lighterHalf.attr({\n                    path: shapeArgs.lighterHalf\n                  });\n                  element.darkerHalf.attr({\n                    path: shapeArgs.darkerHalf\n                  });\n                  element.borderElement.attr({\n                    path: shapeArgs.silhuette\n                  });\n                }\n              }\n              // if color change requared\n              if (colorChanged) {\n                if (attr3D.isFunnel) {\n                  element.funnel2D.attr(fillStr, toRaphaelColor(convertColor(attr3D.color,\n                    pluckNumber(attr3D.opacity, 100))));\n                } else {\n                  if (attr3D.use3DLighting === false) {\n                    colorDark = colorLight = attr3D.color;\n                  } else {\n                    colorDark = getDarkColor(attr3D.color, 80);\n                    colorLight = getLightColor(attr3D.color, 80);\n                  }\n                  element.lighterHalf.attr(fillStr, toRaphaelColor(convertColor(colorLight,\n                    pluckNumber(attr3D.opacity, 100))));\n                  element.darkerHalf.attr(fillStr, toRaphaelColor(convertColor(colorDark,\n                    pluckNumber(attr3D.opacity, 100))));\n                }\n              }\n            } else {\n              // if shape changed requared\n              if (shapeChanged) {\n                shapeArgs = getPyramid3DShapeArgs(attr3D.x, attr3D.y, attr3D.R1, attr3D.R2,\n                  attr3D.h, attr3D.r3dFactor, attr3D.is2D);\n                element.shadowElement.attr(pathStr, shapeArgs.silhuette);\n                if (attr3D.isFunnel) {\n                  element.front.attr(pathStr, shapeArgs.front);\n                  element.back.attr(pathStr, shapeArgs.back);\n                  if (element.toptop && shapeArgs.top) {\n                    element.toptop.attr(pathStr, shapeArgs.top);\n                  }\n                } else {\n                  element.front.attr(pathStr, shapeArgs.front);\n                  element.toptop.attr(pathStr, shapeArgs.top);\n                  element.topLight.attr(pathStr, shapeArgs.topLight);\n                  element.topLight1.attr(pathStr, shapeArgs.topLight1);\n                  element.centerLight.attr(pathStr, shapeArgs.centerLight);\n                  element.centerLight1.attr(pathStr, shapeArgs.centerLight1);\n                }\n              }\n              // if color change requared\n              if (colorChanged) {\n                color = attr3D.color;\n                alpha = attr3D.opacity;\n                if (attr3D.isFunnel) {\n                  lightColor = getLightColor(color, 60);\n                  darkColor = getDarkColor(color, 60);\n                  element.back.attr(fillStr, toRaphaelColor({\n                    FCcolor: {\n                      color: darkColor + COMMASTRING + lightColor + COMMASTRING + color,\n                      alpha: alpha + COMMASTRING + alpha + COMMASTRING + alpha,\n                      ratio: '0,60,40',\n                      angle: 0\n                    }\n                  }));\n                  element.front.attr(fillStr, toRaphaelColor({\n                    FCcolor: {\n                      color: color + COMMASTRING + lightColor + COMMASTRING + darkColor,\n                      alpha: alpha + COMMASTRING + alpha + COMMASTRING + alpha,\n                      ratio: '0,40,60',\n                      angle: 0\n                    }\n                  }));\n                  if (element.toptop) {\n                    element.toptop.attr(fillStr, toRaphaelColor({\n                      FCcolor: {\n                        color: lightColor + COMMASTRING + darkColor,\n                        alpha: alpha + COMMASTRING + alpha,\n                        ratio: zeroCommaHundredStr,\n                        angle: -65\n                      }\n                    }));\n                  }\n                } else {\n                  lightColor = getLightColor(color, 80);\n                  lightColor1 = getLightColor(color, 70);\n                  darkColor = getDarkColor(color, 80);\n                  zero100STR = zeroCommaHundredStr;\n                  lightAlphaSTR = '0,' + alpha;\n                  lightShade = color + COMMASTRING + lightColor1;\n                  slantAngle = -45;\n                  lightShadeStop = (5 / (attr3D.R1 * attr3D.r3dFactor)) * 100;\n                  // slantAngle = - math.atan(1 / attr3D.r3dFactor) / deg2rad\n\n                  element.centerLight.attr(fillStr, toRaphaelColor({\n                    FCcolor: {\n                      color: lightShade,\n                      alpha: lightAlphaSTR,\n                      ratio: zero100STR,\n                      angle: 0\n                    }\n                  }));\n                  element.centerLight1.attr(fillStr, toRaphaelColor({\n                    FCcolor: {\n                      color: lightShade,\n                      alpha: lightAlphaSTR,\n                      ratio: zero100STR,\n                      angle: 180\n                    }\n                  }));\n                  element.topLight.attr(fillStr, toRaphaelColor({\n                    FCcolor: {\n                      color: lightColor1 + COMMASTRING + lightColor1 + COMMASTRING +\n                                              color + COMMASTRING + color,\n                      alpha: alpha + COMMASTRING + alpha + COMMASTRING + 0 + COMMASTRING + 0,\n                      ratio: '0,50,' + lightShadeStop + COMMASTRING + (50 - lightShadeStop),\n                      angle: slantAngle\n                    }\n                  }));\n                  element.topLight1.attr(fillStr, toRaphaelColor({\n                    FCcolor: {\n                      color: lightColor1 + COMMASTRING + color + COMMASTRING + darkColor,\n                      alpha: alpha + COMMASTRING + alpha + COMMASTRING + alpha,\n                      ratio: '0,50,50',\n                      angle: 0\n                    }\n                  }));\n                  element.front.attr(fillStr, toRaphaelColor({\n                    FCcolor: {\n                      color: color + COMMASTRING + color + COMMASTRING +\n                                          darkColor + COMMASTRING + darkColor,\n                      alpha: alpha + COMMASTRING + alpha + COMMASTRING +\n                                            alpha + COMMASTRING + alpha,\n                      ratio: '0,50,0,50',\n                      angle: 0\n                    }\n                  }));\n                  element.toptop.attr(fillStr, toRaphaelColor({\n                    FCcolor: {\n                      color: lightColor + COMMASTRING + color + COMMASTRING +\n                                              darkColor + COMMASTRING + darkColor,\n                      alpha: alpha + COMMASTRING + alpha + COMMASTRING +\n                                            alpha + COMMASTRING + alpha,\n                      ratio: '0,25,30,45',\n                      angle: slantAngle\n                    }\n                  }));\n                }\n              }\n            }\n          }\n          return element;\n        },\n\n        shadow = function () {\n          var silhuette = this.shadowElement;\n          if (shadow) {\n            silhuette.shadow.apply(silhuette, arguments);\n          }\n        },\n\n        normalizeShapes = function (group, newAttrs) {\n          var shapes = ['silhuette', 'lighterHalf', 'darkerHalf', 'centerLight', 'centerLight1', 'front',\n              'toptop', 'topLight', 'topLight1', 'shadowElement', 'funnel2D', 'borderElement', 'back'],\n            shapeGElem,\n            index,\n            shapeName,\n            oldAttrs,\n            length;\n\n          if (!group) {\n            return;\n          }\n\n          oldAttrs = group._3dAttr;\n\n          if ((oldAttrs.isFunnel === newAttrs.isFunnel) && (oldAttrs.is2D === newAttrs.is2D) &&\n                      (oldAttrs.isHollow === newAttrs.isHollow)) {\n            return group;\n          }\n\n          for (index = 0, length = shapes.length; index < length; index++) {\n            shapeName = shapes[index];\n            shapeGElem = group[shapeName];\n\n            if (!shapeGElem) {\n              continue;\n            }\n            delete group[shapeName];\n            shapeGElem.remove();\n          }\n\n          return group;\n        },\n\n        animatePathIfPresent = function (datasetStore, parentElem) {\n          var chart = datasetStore.getFromEnv('chart');\n\n          return function (elemType, pathArr, nonAnimAttr = EMPTY_OBJ) {\n            var prevEle = parentElem[elemType];\n\n            if (prevEle) {\n              // return prevEle.animateWith(dummyAnimElem, dummyAnimObj, {\n              //   path: pathArr\n              // }, animDuration, animType, datasetStore.postPlotCallback);\n              chart.getFromEnv('animationManager').setAnimation({\n                el: prevEle,\n                attr: { path: pathArr },\n                component: datasetStore\n              });\n              return prevEle;\n            }\n\n            datasetStore.postPlotCallback();\n            return chart.getFromEnv('animationManager').setAnimation({\n              el: 'path',\n              label: 'path',\n              attr: Object.assign({ path: pathArr }, nonAnimAttr),\n              container: parentElem,\n              component: datasetStore\n            });\n            // renderer.path(pathArr, parentElem).attr(nonAnimAttr);\n          };\n        };\n\n      return function (xParam, yParam, R1Param, R2Param, hParam, r3dFactorParam, gStrParam, is2DParam, rendererParam, isFunnelParam, isHollowParam, use3DLightingParam) {\n        var datasetStore = this,\n          chart = datasetStore.getFromEnv('chart'),\n          graphicsGroup = chart.getChildContainer().plotGroup,\n          _3dAttr,\n          Shapeargs,\n          Shapeargs2,\n          oldLastData = datasetStore.config.oldLastData,\n          rect3D,\n          squeezedFormPathObj,\n          squeezedShapeArgs,\n          existingGElement,\n          animationType = EASE_IN,\n          animOrDraw,\n          x = xParam,\n          y = yParam,\n          R1 = R1Param,\n          R2 = R2Param,\n          h = hParam,\n          r3dFactor = r3dFactorParam,\n          gStr = gStrParam,\n          is2D = is2DParam,\n          renderer = rendererParam,\n          isFunnel = isFunnelParam,\n          isHollow = isHollowParam,\n          use3DLighting = use3DLightingParam;\n\n        if (isObject(x)) {\n          y = x.y;\n          R1 = x.R1;\n          R2 = x.R2;\n          h = x.h;\n          r3dFactor = x.r3dFactor;\n          gStr = x.gStr;\n          is2D = x.is2D;\n          use3DLighting = x.use3DLighting;\n          renderer = x.renderer;\n          isHollow = x.isHollow;\n          isFunnel = x.isFunnel;\n          existingGElement = x.graphics;\n          x = x.x;\n        }\n        r3dFactor = pluckNumber(r3dFactor, 0.15);\n        _3dAttr = {\n          x: x,\n          y: y,\n          R1: R1,\n          R2: R2,\n          h: h,\n          r3dFactor: r3dFactor,\n          is2D: is2D,\n          use3DLighting: use3DLighting,\n          isHollow: isHollow,\n          isFunnel: isFunnel,\n          renderer: renderer\n        };\n        // Shapeargs = getPyramid3DShapeArgs(_3dAttr);\n\n        rect3D = normalizeShapes(existingGElement, _3dAttr) || renderer.group(gStr, graphicsGroup);\n        rect3D.toFront();\n\n        if (((!rect3D.front && !is2D) || (!(rect3D.funnel2D || rect3D.lighterHalf) && is2D)) &&\n          datasetStore.getState('notInitial') && (datasetStore.config.prevIs2d === _3dAttr.is2D)) {\n          Shapeargs2 = getPyramid3DShapeArgs(_3dAttr);\n          oldLastData.y = oldLastData.y + oldLastData.h;\n          oldLastData.R1 = oldLastData.R2;\n          oldLastData.h = 0;\n          Shapeargs = getPyramid3DShapeArgs(oldLastData);\n        } else {\n          Shapeargs = getPyramid3DShapeArgs(_3dAttr);\n          datasetStore.getState('notInitial', true);\n        }\n\n        squeezedShapeArgs = Object.assign({}, _3dAttr);\n        squeezedShapeArgs.y = squeezedShapeArgs.y + squeezedShapeArgs.h;\n        squeezedShapeArgs.R1 = squeezedShapeArgs.R2;\n        squeezedShapeArgs.h = 0;\n        squeezedFormPathObj = getPyramid3DShapeArgs(squeezedShapeArgs);\n\n        rect3D.squeezedFormPathObj = squeezedFormPathObj;\n\n        rect3D.Shapeargs = Shapeargs2 || Shapeargs;\n\n        animOrDraw = animatePathIfPresent(datasetStore, rect3D, animationType);\n\n        rect3D.shadowElement = animOrDraw('shadowElement', Shapeargs.silhuette, {\n          fill: TRACKER_FILL,\n          stroke: noneStr\n        });\n\n        // modify the attr function of the group so that it can handle pyramid attrs\n        // store the old function\n        rect3D._attr = rect3D._attr || rect3D.attr;\n        rect3D.attr = attr;\n\n        // Replace the shadow function with a modified version.\n        rect3D.shadow = shadow;\n\n        // store the 3d attr(requared in new attr function to change any related\n        //                  attr modiffiaction)\n        rect3D._3dAttr = _3dAttr;\n\n        // add the new attr function\n        if (isFunnel) {\n          // if the drawing is a 2d drawing\n          if (is2D) {\n            rect3D.funnel2D = animOrDraw('funnel2D', Shapeargs.silhuette);\n            Shapeargs2 && (rect3D.funnel2D = animOrDraw('funnel2D', Shapeargs2.silhuette));\n          } else {\n            rect3D.back = animOrDraw('back', Shapeargs.back, {\n              'stroke-width': 0,\n              stroke: noneStr\n            });\n\n            rect3D.front = animOrDraw('front', Shapeargs.front, {\n              'stroke-width': 0,\n              stroke: noneStr\n            });\n\n            Shapeargs2 && (rect3D.back = animOrDraw('back', Shapeargs2.back, {\n              'stroke-width': 0,\n              stroke: noneStr\n            }));\n\n            Shapeargs2 && (rect3D.front = animOrDraw('front', Shapeargs2.front, {\n              'stroke-width': 0,\n              stroke: noneStr\n            }));\n\n            if (Shapeargs.top) {\n              rect3D.toptop = animOrDraw('toptop', Shapeargs.top, {\n                'stroke-width': 0,\n                stroke: noneStr\n              });\n              Shapeargs2 && (rect3D.toptop = animOrDraw('toptop', Shapeargs2.top, {\n                'stroke-width': 0,\n                stroke: noneStr\n              }));\n            }\n          }\n        } else {\n          // if the drawing is a 2d drawing\n          if (is2D) {\n            rect3D.lighterHalf = animOrDraw('lighterHalf', Shapeargs.lighterHalf, {\n              'stroke-width': 0\n            });\n            Shapeargs2 && (rect3D.lighterHalf = animOrDraw('lighterHalf', Shapeargs2.lighterHalf, {\n              'stroke-width': 0\n            }));\n\n            rect3D.darkerHalf = animOrDraw('darkerHalf', Shapeargs.darkerHalf, {\n              'stroke-width': 0\n            });\n            Shapeargs2 && (rect3D.darkerHalf = animOrDraw('darkerHalf', Shapeargs2.darkerHalf, {\n              'stroke-width': 0\n            }));\n\n            rect3D.borderElement = animOrDraw('borderElement', Shapeargs.silhuette, {\n              fill: TRACKER_FILL,\n              stroke: noneStr\n            });\n            Shapeargs2 && (rect3D.borderElement = animOrDraw('borderElement', Shapeargs2.silhuette, {\n              fill: TRACKER_FILL,\n              stroke: noneStr\n            }));\n          } else {\n            // else it should be 3d\n\n            rect3D.front = animOrDraw('front', Shapeargs.front, {\n              'stroke-width': 0\n            });\n            Shapeargs2 && (rect3D.front = animOrDraw('front', Shapeargs2.front, {\n              'stroke-width': 0\n            }));\n\n            rect3D.centerLight = animOrDraw('centerLight', Shapeargs.centerLight, {\n              'stroke-width': 0\n            });\n            Shapeargs2 && (rect3D.centerLight = animOrDraw('centerLight', Shapeargs2.centerLight, {\n              'stroke-width': 0\n            }));\n\n            rect3D.centerLight1 = animOrDraw('centerLight1', Shapeargs.centerLight1, {\n              'stroke-width': 0\n            });\n            Shapeargs2 && (rect3D.centerLight1 = animOrDraw('centerLight1', Shapeargs2.centerLight1, {\n              'stroke-width': 0\n            }));\n\n            rect3D.toptop = animOrDraw('toptop', Shapeargs.top, {\n              'stroke-width': 0\n            });\n            Shapeargs2 && (rect3D.toptop = animOrDraw('toptop', Shapeargs2.top, {\n              'stroke-width': 0\n            }));\n\n            rect3D.topLight = animOrDraw('topLight', Shapeargs.topLight, {\n              'stroke-width': 0\n            });\n            Shapeargs2 && (rect3D.topLight = animOrDraw('topLight', Shapeargs2.topLight, {\n              'stroke-width': 0\n            }));\n\n            rect3D.topLight1 = animOrDraw('topLight1', Shapeargs.topLight1, {\n              'stroke-width': 0\n            });\n            Shapeargs2 && (rect3D.topLight1 = animOrDraw('topLight1', Shapeargs2.topLight1, {\n              'stroke-width': 0\n            }));\n          }\n        }\n\n        return rect3D;\n      };\n    })();\n    this.config.legendItemIds = [];\n\n    var utils = this.utils(this),\n      invokeHookFns = utils.invokeHookFns,\n      postInitHookFn = this.postInitHook;\n    invokeHookFns(postInitHookFn);\n  }\n  /**\n   * Trim extra old data compared to new data\n   * @param {Object} datasetJSON input JSON data\n   */\n  trimData (datasetJSON) {\n    trimData.call(this, datasetJSON);\n  }\n\n  /**\n   * Finds total number of data components not in removed state\n   *\n   * @returns {Number} total number of components not in removed state\n   * @memberof FunnelPyramidBaseDataset\n   */\n  getDataLength () {\n    var dataset = this,\n      i,\n      data = dataset.getChildren('data'),\n      dataLen = 0,\n      len = data.length;\n\n    for (i = 0; i < len; i++) {\n      if (!data[i].getState('removed')) {\n        dataLen++;\n      }\n    }\n    return dataLen;\n  }\n  /**\n   * Stores the data which are to be removed in removedDataArr during\n   * configure\n   *\n   * @param {any} indexArg index\n   * @param {any} stretchArg how many elements to be deleted\n   * @param {any} draw whether to draw after removing\n   * @memberof FunnelPyramidBaseDataset\n   */\n  removeData (indexArg, stretchArg, draw = false) {\n    var dataset = this,\n      components = dataset.components,\n      dataStore = dataset.getChildren('data'),\n      removedDataArr,\n      i,\n      len,\n      stretch = stretchArg,\n      index = indexArg;\n\n    stretch = pluckNumber(stretch, 1);\n    index = pluckNumber(index, 0);\n\n    // Store the elements which are no longer required\n    removedDataArr = components.removedDataArr = dataStore.splice(index, stretch);\n    len = removedDataArr.length;\n\n    for (i = 0; i < len; i++) {\n      if (!removedDataArr[i]) {\n        removedDataArr.splice(i, 1);\n      }\n    }\n\n    draw && dataset.asyncDraw();\n  }\n  /**\n   * Removes extra plot elements when number of current data\n   * is less than number of previous data\n   */\n  removePlots () {\n    var dataset = this,\n      components = dataset.components,\n      removedDataArr = components.removedDataArr,\n      i,\n      elem,\n      graphics,\n      point;\n\n    if (!removedDataArr) {\n      return;\n    }\n    for (i = removedDataArr.length - 1; i >= 0; i--) {\n      point = removedDataArr[i];\n      graphics = point.getGraphicalElement();\n\n      for (elem in graphics) {\n        point.removeGraphicalElement(graphics[elem]);\n      }\n\n      removedDataArr.splice(i, 1);\n    }\n  }\n  /**\n   * Configure dataset\n   */\n  _configure () {\n    var datasetStore = this,\n      chart = datasetStore.getFromEnv('chart'),\n      colorManager = datasetStore.getFromEnv('color-manager'),\n      chartConfig = chart.config,\n      globalStyle = chartConfig.style,\n      datasetConf = datasetStore.config || {},\n      jsonDataObj = datasetStore.config.JSONData,\n      datasetDataArr = jsonDataObj.data || [],\n      chartAttr = chart.getFromEnv('dataSource') ? chart.getFromEnv('dataSource').chart : {},\n      utils = datasetStore.utils(datasetStore),\n      invokeHookFns = utils.invokeHookFns,\n      copyProperties = utils.copyProperties,\n      BLANK_SPACE = 3,\n      DEFAULT_LABEL_DISTANCE = 50,\n      DEFAULT_BLANK_SPACE = 3,\n      configureSpecificsFn = datasetStore.configureSpecifics,\n      baseFontColor = colorManager.getColor('baseFontColor');\n\n    // Parse all the attributes common to pyramid and funnel\n    copyProperties(chartAttr, datasetConf, [\n      ['showlabels', 'showLabels', pluckNumber, 1],\n      ['showvalues', 'showValues', pluckNumber, 1],\n      ['plottooltext', 'toolText', pluck, BLANK],\n      ['enableslicing', 'enableSlicing', pluckNumber, 1],\n      ['plotfillalpha', 'plotFillAlpha', pluckNumber, 100],\n      ['showplotborder', 'showPlotBorder', pluckNumber, 0],\n      ['plotborderalpha', 'plotBorderAlpha', pluckNumber, UNDEF],\n      ['plotbordercolor', 'plotBorderColor', pluck, UNDEF],\n      ['plotborderthickness', 'plotBorderThickness', pluckNumber, 1],\n      ['showshadow', 'showShadow', pluckNumber, 1],\n      ['showhovereffect', showHoverEffectStr, pluckNumber, 0],\n      ['hovercapsepchar', 'hoverCapSepChar', pluck, COMMASPACE],\n      ['tooltipsepchar', 'tooltipSepChar', pluck, '$hoverCapSepChar'],\n      ['labelsepchar', 'labelSepChar', (...args) => parseUnsafeString(pluck(...args)), '$tooltipSepChar'],\n      ['showpercentintooltip', 'showPercentInToolTip', pluckNumber, 1],\n      ['showpercentvalues', 'showPercentValues', pluckNumber, 0],\n      [BLANK, 'blankSpace', pluckNumber, BLANK_SPACE],\n      ['labeldistance', 'labelDistance', pluckNumber, DEFAULT_LABEL_DISTANCE],\n      ['issliced', 'isSliced', pluckNumber, 0],\n      ['is2d', 'is2d', pluckNumber, 0],\n      [BLANK, 'blankSpace', pluckNumber, DEFAULT_BLANK_SPACE],\n      ['showlabelsatcenter', 'showLabelsAtCenter', pluckNumber, 0],\n      ['smartlinethickness', 'connectorWidth', pluckNumber, 1],\n      ['smartlinealpha', 'connectorAlpha', pluckNumber, 100],\n      ['smartlinecolor', 'rawSmartLineColorCode', pluck, function () {\n        return colorManager.getColor('baseFontColor');\n      }],\n      ['labelalpha', 'labelAlpha', pluckNumber, 100],\n      ['basefont', 'baseFont', pluck, 'Verdana,sans'],\n      ['basefontsize', 'baseFontSize', pluckNumber, 10],\n      ['basefontcolor', 'baseFontColor', pluck, baseFontColor],\n      ['labelfontcolor', 'labelFontColor', pluck, '$baseFontColor'],\n      ['showtooltip', 'showTooltip', pluckNumber, 1],\n      ['percentofprevious', 'percentOfPrevious', pluckNumber, 0],\n      ['animationduration', 'animationDuration', pluckNumber, 1, function (datasetConfig) {\n        datasetConfig.animationDuration *= 1000;\n      }]\n    ]);\n\n    datasetConf.usePattern = pluckNumber(chartConfig.usePattern, 0);\n    datasetConf.patternType = PATTERN_TYPES.includes(jsonDataObj.patterntype)\n      ? jsonDataObj.patterntype\n      : chartConfig.patternType;\n    datasetConf.patternDensity = pluckNumber(jsonDataObj.patterndensity, chartConfig.patternDensity);\n    datasetConf.patternAlpha = pluckNumber(jsonDataObj.patternalpha, chartConfig.patternAlpha);\n    datasetConf.patternBgColor = pluck(jsonDataObj.patternbgcolor, TRACKER_FILL);\n\n    // when pattern is used all 3d effects is disabled\n    if (datasetConf.usePattern) {\n      datasetConf.is2d = 1;\n      datasetConf.showPlotBorder = pluck(chartAttr.showplotorder, 1);\n      datasetConf.showHoverEffect = 0;\n    }\n\n    datasetConf.connectorColor = convertColor(datasetConf.rawSmartLineColorCode,\n      datasetConf.connectorAlpha);\n\n    // Store original labelDistance. The labelDistance calculation should use the originalLabelDistance as initial value.\n    datasetConf.origLabelDistance = datasetConf.labelDistance;\n\n    // Calculate the line height with the style applied in chart level\n    setLineHeight(globalStyle);\n    // Get only the starting digits from the line height string. This is a temprary property.\n    globalStyle.nLineHeight = (globalStyle.lineHeight.match(/^\\d+/))[0];\n\n    copyProperties(globalStyle, datasetConf, [\n      [BLANK, 'lineHeight', pluckNumber, datasetConf.baseFontSize]\n    ]);\n\n    // Stores the state when isSliced is set to 1 at dataset level.\n    // Used to keep the plot in clicked state.\n    if (datasetConf.isSliced) {\n      datasetConf.clicked = true;\n    }\n    // Detele the property as it was created for computation purpose only.\n    delete globalStyle.nLineHeight;\n\n    // Call function for specific configuration partucular to a chart.\n    invokeHookFns(configureSpecificsFn);\n\n    if (!datasetConf.showLabels && !datasetConf.showValues) {\n      // If the labels and values both are disabled, refrain from plotting the datalabels.\n      // This is a flag that let the drawing components know about the user choice.\n      datasetConf.datalabelDisabled = true;\n    } else {\n      datasetConf.datalabelDisabled = false;\n    }\n\n    // Normalize the data set. This process handles all the parseInt, parseFloat like methods, computes\n    // additional keys if necessary\n    datasetStore.getNormalizeDataSet(datasetDataArr);\n  }\n\n  /**\n   * Is called during post spacemanagement, it sets the slicing distance by using canvasHeight.\n   * Also, does preDrawing calculations required when data is streamlined.\n   *\n   * @memberof FunnelPyramidBaseDataset\n   */\n  _preDrawingHook () {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      datasetConf = dataset.config,\n      chartConf = chart.config,\n      utils = dataset.utils(dataset),\n      chartAttr = chart.getFromEnv('dataSource') ? chart.getFromEnv('dataSource').chart : {},\n      heightAllotted = chartConf.canvasHeight,\n      copyProperties = utils.copyProperties;\n\n    // Set slicing distance. This parsing cannot be done in configure because\n    // it needs canvasHeight, which is calculated after space management of chart\n    copyProperties(chartAttr, datasetConf, [\n      [BLANK, 'slicingDistance', pluckNumber, (heightAllotted * 0.1)],\n      ['slicingdistance', 'slicingHeight', pluckNumber, '$slicingDistance', function () {\n        if (datasetConf.slicingHeight > 2 * datasetConf.slicingDistance) {\n          datasetConf.slicingDistance = 0;\n        } else {\n          datasetConf.slicingDistance = datasetConf.slicingHeight;\n        }\n      }]\n    ]);\n  }\n  /**\n   * Checks whether input data is valid or not\n   * @param {Object} data input data\n   * @return {boolean} returns boolean value whether data is valid or not\n   */\n  _checkValidData (data) {\n    var datasetDefStore = this,\n      chart = datasetDefStore.getFromEnv('chart');\n\n    if (!(data && data.length)) {\n      chart.setChartMessage();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Add legend items\n   */\n  addLegend () {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      config,\n      conf,\n      tempId,\n      legendItemIndex = 0,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      i,\n      dataObj,\n      data = dataset.getChildren('data') || dataset.config.JSONData.data,\n      legend = chart.getFromEnv('legend'),\n      legendItem = legend.getChildren('legendItem');\n\n    for (i = 0; i < data.length; i++) {\n      dataObj = data[i];\n      conf = dataObj.config;\n      if (dataObj.pseudoPoint || dataObj.getState('removed') || (!dataObj.label && !dataObj.categoryLabel)) {\n        if (dataObj.pseudoPoint) {\n          continue;\n        }\n        typeof (dataObj.categoryLabel !== 'undefined') && legendItemIndex++;\n        if (conf.legendItemId) {\n          legendItem = legend.getItem(conf.legendItemId);\n          legendItem && legend.disposeItem(legendItem.getId());\n          delete conf.legendItemId;\n        }\n      } else {\n        config = {\n          type: dataset.getName(),\n          label: dataObj.label || dataObj.categoryLabel,\n          index: legendItemIndex,\n          enabled: pluckNumber(chartAttr.includeinlegend, 1),\n          legendItemId: dataObj.legendItemId,\n          usePattern: dataset.config.usePattern,\n          legendIconAlpha: pluckNumber(data[i].legendiconalpha),\n          patternAttr: dataObj.patternAttr\n        };\n        legendItem = legend.getItem(conf.legendItemId);\n        if (!legendItem) {\n          tempId = legend.createItem(dataset);\n          dataObj.config.legendItemId = tempId;\n          legendItem = legend.getItem(conf.legendItemId);\n          legendItem.addEventListener('fc-click', legendItem.itemClickFn);\n        }\n        legendItem.configure(config);\n        // count the number of legenditems\n        legendItemIndex++;\n        legendItem.setStateCosmetics('default', {\n          symbol: {\n            bgAlpha: pluckNumber(data[i].legendiconbgalpha, data[i].legendiconalpha, chartAttr.legendiconbgalpha, chartAttr.legendiconalpha, data[i].alpha),\n            borderAlpha: pluckNumber(data[i].legendiconborderalpha, data[i].legendiconalpha, chartAttr.legendiconborderalpha, chartAttr.legendiconalpha, '100'),\n            fill: data[i].legendColor,\n            rawFillColor: data[i].rawColor,\n            stroke: getLightColor(data[i].rawColor, 60).replace(dropHash, HASHSTRING)\n          }\n        });\n      }\n    }\n  }\n\n  /**\n  *Handler for legend interaction\n  * @param {Object} legendItem the clicked legend Item\n  */\n  legendInteractivity (legendItem) {\n    let plotItems = this.getChildren('data'),\n      i,\n      len,\n      legendId = legendItem.getId();\n\n    for (i = 0, len = plotItems.length; i < len; i++) {\n      if (plotItems[i].config.legendItemId === legendId) {\n        this.legendClick({\n          datasetStore: this,\n          plotItem: plotItems[i].plot\n        }, true, false);\n        break;\n      }\n    }\n    // this.legendClick({datasetStore: this, plotItem: plotItem}, true, false);\n  }\n  /**\n   * Normalize dataset\n   * @param {Array} dataArr input data\n   */\n  getNormalizeDataSet (dataArr) {\n    var datasetStore = this,\n      dsStore = datasetStore.getChildren('data') || [],\n      chart = datasetStore.getFromEnv('chart'),\n      conf = datasetStore.config,\n      smartLabel = datasetStore.getFromEnv('smartLabel'),\n      Point = conf.pointInContext,\n      index, dataObj,\n      refreshedData,\n      hasValidPoint,\n      sumValue = 0,\n      refreshedDataLength,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      defStyle,\n      dataConnectorStyle = conf.dataConnectorStyle = {},\n      colorIndexStart = chart.config.PLOT_COLOR_INDEX_START,\n      res,\n      counter = 0,\n      point,\n      notStreamlinedFunnel = 0;\n\n    extend2((defStyle = conf.style = {}), chart.config.style);\n\n    conf.noOFSlicedElement = 0;\n    defStyle.borderDash = noneStr;\n    defStyle.borderPadding = 2;\n    defStyle.borderRadius = 0;\n    defStyle.borderThickness = 1;\n    defStyle.color = convertColor(conf.labelFontColor, conf.labelAlpha);\n    defStyle.fontFamily = conf.baseFont;\n    defStyle.fontSize = conf.baseFontSize + PXSTRING;\n    defStyle.fontSizeWithUnit = conf.baseFontSize + PXSTRING;\n    defStyle.fontStyle = NORMALSTRING;\n    defStyle.fontWeight = NORMALSTRING;\n\n    dataConnectorStyle.connectorWidth = conf.connectorWidth;\n    dataConnectorStyle.connectorColor = conf.connectorColor;\n\n    res = datasetStore.datasetCalculations(dataArr);\n    hasValidPoint = res.hasValidPoint;\n    refreshedData = res.refreshedData;\n    sumValue = res.sumValue;\n    notStreamlinedFunnel = +(!conf.streamLinedData && datasetStore.getName() === 'funnel');\n\n    datasetStore._chartLevelAttr = parsexAxisStyles.apply(this, [{}, {}, chartAttr, defStyle]);\n\n    if (hasValidPoint) {\n      conf.sumValue = sumValue;\n\n      refreshedDataLength = refreshedData.length;\n\n      componentFactory(datasetStore, Point, 'data', refreshedDataLength + notStreamlinedFunnel);\n      dsStore = datasetStore.getChildren('data');\n      smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n\n      for (index = 0, counter = notStreamlinedFunnel; index < refreshedDataLength; index += 1, counter += 1) {\n        dataObj = refreshedData[index];\n        point = dsStore[counter];\n        if (point.getState('removed')) {\n          continue;\n        }\n\n        point.parseAndConfigurePoint(dataObj, res, colorIndexStart++, index);\n      }\n    }\n\n    if (notStreamlinedFunnel && dsStore[0]) {\n      dsStore[0].configure({\n        displayValue: BLANK,\n        y: conf.sumValue,\n        index: 0\n      });\n    }\n  }\n  /**\n   * Calculates data points and configures\n   * @param {Array} dataArr input data\n   * @return {Object} returns calculated object with configurations and data array\n   */\n  datasetCalculations (dataArr) {\n    var datasetStore = this,\n      numberFormatter = datasetStore.getFromEnv('number-formatter'),\n      index, length, dataObj, itemValue, res = {};\n\n    res.refreshedData = [];\n    res.sumValue = res.countPoint = 0;\n    res.highestValue = Number.NEGATIVE_INFINITY;\n\n    for (index = 0, length = dataArr.length; index < length; index++) {\n      dataObj = dataArr[index];\n\n      if (dataObj.vline) {\n        // Funnel or pyramid does not use vline. Ignoring the same if user put it mistakenly.\n        continue;\n      }\n\n      dataObj.cleanValue = itemValue = Math.abs(numberFormatter.getCleanValue(dataObj.value, true));\n      if (itemValue !== null) {\n        // If a valid value is provided in the configuration\n        res.hasValidPoint = true;\n        res.highestValue = res.highestValue || itemValue;\n        res.refreshedData.push(dataObj);\n        res.sumValue += itemValue;\n        res.countPoint += 1;\n        res.highestValue = Math.max(res.highestValue, res.itemValue);\n      }\n    }\n\n    return res;\n  }\n  /**\n   * Configure data point hover effects\n   * @param {Object} dataObj data point object\n   * @param {Object} pointCosmetics styles and cosmetics for particular data object\n   * @return {Object} parsed styles and cosmetics\n   */\n  pointHoverOptions (dataObj, pointCosmetics) {\n    var datasetStore = this,\n      conf = datasetStore.config,\n      chart = datasetStore.getFromEnv('chart'),\n      hoverEffect = conf.usePattern ? 0 : pluckNumber(dataObj.showhovereffect, conf.showHoverEffect),\n      hoverEffects = {\n        enabled: hoverEffect\n      },\n      rolloverProperties = {},\n      highlightColors,\n      colorLen,\n      index,\n      chartAttr = chart.getFromEnv('dataSource') ? chart.getFromEnv('dataSource').chart : {};\n\n    // Detect whether any of the hover effect attributes are explicitly set or not\n    // Enable hover effect when any of the hover attributes are explicitly set\n    if (!hoverEffect && !conf.usePattern) {\n      hoverEffect = hoverEffects.enabled = pluck(dataObj.hovercolor,\n        chartAttr.plotfillhovercolor, dataObj.hoveralpha, chartAttr.plotfillhoveralpha,\n        dataObj.borderhovercolor, chartAttr.plotborderhovercolor,\n        dataObj.borderhoverthickness, chartAttr.plotborderhoverthickness,\n        dataObj.borderhoveralpha, chartAttr.plotborderhoveralpha) !== UNDEF;\n    }\n\n    if (hoverEffect) {\n      // Parse hover attributes\n      hoverEffects.highlight = pluckNumber(dataObj.highlightonhover,\n        chartAttr.highlightonhover);\n      hoverEffects.color = pluck(dataObj.hovercolor,\n        chartAttr.plotfillhovercolor);\n      hoverEffects.alpha = pluck(dataObj.hoveralpha,\n        chartAttr.plotfillhoveralpha, pointCosmetics.alpha);\n      hoverEffects.borderColor = pluck(dataObj.borderhovercolor,\n        chartAttr.plotborderhovercolor, pointCosmetics.borderColor);\n      hoverEffects.borderThickness = pluckNumber(dataObj.borderhoverthickness,\n        chartAttr.plotborderhoverthickness, pointCosmetics.borderWidth);\n      hoverEffects.borderAlpha = pluck(dataObj.borderhoveralpha,\n        chartAttr.plotborderhoveralpha, pointCosmetics.borderAlpha);\n\n      // If hover effect is enabled but no hover color is provided, just highlight the default color\n      if (hoverEffects.highlight !== 0 && hoverEffects.color === UNDEF) {\n        hoverEffects.highlight = 1;\n      }\n\n      hoverEffects.color = pluck(hoverEffects.color, pointCosmetics.color).replace(/,+?$/, BLANK);\n\n      if (hoverEffects.highlight === 1) {\n        highlightColors = hoverEffects.color.split(/\\s{0,},\\s{0,}/);\n\n        colorLen = highlightColors.length;\n\n        for (index = 0; index < colorLen; index += 1) {\n          highlightColors[index] = getLightColor(highlightColors[index], 70);\n        }\n        hoverEffects.color = highlightColors.join(',');\n      }\n\n      rolloverProperties = {\n        color: hoverEffects.color,\n        alpha: +hoverEffects.alpha,\n        borderColor: convertColor(hoverEffects.borderColor,\n          hoverEffects.borderAlpha),\n        rawBorderColor: hoverEffects.borderColor,\n        borderAlpha: hoverEffects.borderAlpha,\n        borderWidth: hoverEffects.borderThickness\n      };\n    }\n\n    return {\n      enabled: hoverEffect,\n      options: hoverEffects,\n      rolloverOptions: rolloverProperties\n    };\n  }\n  /**\n   * Provides tooltip options\n   * @param {Object} options congigurations of data points\n   * @return {Object} returns tooltip options\n   */\n  getTooltipMacroStub (options) {\n    return getTooltipMacroStub.call(this, options);\n  }\n\n  /**\n   * Called during post space management, does pre drawing calculations\n  */\n  allocatePosition () {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = chart.config,\n      dsConfig = dataset.config;\n\n    chartConfig.style.fontSize = this.computeFontSize(\n      chartConfig.style.fontSizeWithUnit);\n    dsConfig.lineHeight = (dsConfig.lineHeight === 0 ? 0 : parseInt(dataset._chartLevelAttr.lineHeight, 10));\n\n    // Checks and modify for streamLined data\n    dataset._preDrawingHook();\n\n    if (!dsConfig.sumValue) {\n      return;\n    }\n\n    dsConfig.labelDrawingConfig = dsConfig.labelDrawingConfig || [];\n    dsConfig.labelDrawingConfig.length = 0;\n\n    // Store the marginTop and marginBottom before managing space\n    dsConfig.psmMargin = {\n      top: chartConfig.marginTop,\n      bottom: chartConfig.marginBottom\n    };\n\n    // Plot area management to decide the drawing area measurement\n    dataset.preDrawingSpaceManagement();\n  }\n\n  /**\n   * Calculates plot spaces before drawing\n   */\n  preDrawingSpaceManagement () {\n    var datasetStore = this,\n      chart = datasetStore.getFromEnv('chart'),\n      chartConf = chart.config,\n      caption = chart.getChildren('caption')[0],\n      subCaption = chart.getChildren('subCaption')[0],\n      capHeight = caption.config.height || 0,\n      subCapHeight = subCaption.config.height || 0,\n      conf = datasetStore.config,\n      showTooltip = conf.showTooltip,\n      slicingDistance = conf.slicingDistance,\n      canvasHeight, canvasMaxWidth,\n      chartWorkingHeight = chartConf.height - (chartConf.marginTop + chartConf.marginBottom),\n      chartWorkingWidth = chartConf.width - (chartConf.marginRight + chartConf.marginLeft),\n      dataArr = datasetStore.getChildren('data'),\n      length, labelDistance, showLabelsAtCenter,\n      blankSpace = conf.blankSpace,\n      i = datasetStore.config.LABEL_PLACEMENT_ITERATOR_INDEX_START,\n      upperRadiusFactor = datasetStore.getName() === 'funnel' ? 1 : 0,\n      minWidthForChart, drawingWillExtend, maxWidthForLabel,\n      labelMaxUsedWidth, hasPoint, maxValue, valueRadiusIncrementRatio,\n      smartLabel = datasetStore.getFromEnv('smartLabel'),\n      totalValue, point, lineHeight, smartTextObj, chartDrawingWidth,\n      currentValue, ratioK, currentDiameter, labelMaxWidth, extraSpace,\n      newDiameter = 0, lowestRadiusFactor, labelMaxW = 0, tempSnap, labelOverlappingW,\n      utils = datasetStore.utils(datasetStore),\n      gutter = 5,\n      snapOffset,\n      invokeHookFns = utils.invokeHookFns,\n      labelStyle,\n      prePointProcessingHookFn = datasetStore.prePointProcessingHookFn,\n      legend = chart.getFromEnv('legend'),\n      legendPos = chartConf.showLegend && legend && legend.config && legend.config.legendPos ? legend.config.legendPos.split('-') : [],\n      legendWidth = 0;\n\n    if (chartConf.showLegend && (legendPos[0] === 'right' || legendPos[0] === 'left')) {\n      legendWidth = legend.config.width + 2 * gutter;\n    }\n\n    chartConf.oriCanvasLeft = chart.config.canvasLeft;\n    chartConf.oriBottomSpace = chart.config.marginBottom;\n    chartConf.oriTopSpace = chart.config.marginTop;\n    // outCanvasSpace += chart.config.canvasRight;\n\n    // For Anotation macros store temp conf\n    tempSnap = conf._tempSnap = {\n      top3DSpace: 0,\n      bottom3DSpace: 0,\n      topLabelSpace: 0,\n      rightLabelSpace: 0\n    };\n\n    canvasHeight = chartWorkingHeight - slicingDistance;\n    canvasMaxWidth = Math.min(2 * canvasHeight, chartWorkingWidth);\n\n    chartConf.marginTop += slicingDistance / 2;\n    chartConf.marginBottom += slicingDistance / 2;\n\n    // Find the label maximun width\n    length = datasetStore.getDataLength();\n    labelDistance = conf.origLabelDistance + blankSpace;\n    showLabelsAtCenter = conf.showLabelsAtCenter;\n\n    minWidthForChart = Math.min(canvasMaxWidth, chartWorkingWidth * 0.3);\n    drawingWillExtend = chartWorkingWidth - minWidthForChart;\n    chartWorkingWidth -= legendWidth;\n    maxWidthForLabel = (chartWorkingWidth / 2) - (minWidthForChart / 2) - labelDistance - chartConf.marginLeft;\n    labelMaxUsedWidth = 0;\n    hasPoint = dataArr[0];\n    maxValue = hasPoint && dataArr[0].y ? dataArr[0].y : 1;\n\n    valueRadiusIncrementRatio = 0.8 / maxValue;\n    // conf.useSameSlantAngle = 1;\n\n    invokeHookFns(prePointProcessingHookFn, [dataArr]);\n\n    totalValue = conf.totalValue || 0;\n\n    smartLabel.useEllipsesOnOverflow(chartConf.useEllipsesWhenOverflow);\n\n    for (;i < length; i += 1) {\n      point = dataArr[i];\n\n      if (point.legendItemId) {\n        legend.configureItems && legend.configureItems(point.legendItemId, {\n          configuration: {\n            fillColor: point.legendColor\n          }\n        });\n      }\n\n      labelStyle = point.style;\n      setLineHeight(labelStyle);\n      lineHeight = pluckNumber(mathCeil(parseFloat(labelStyle.lineHeight) +\n                    labelStyle.borderPadding + labelStyle.borderThickness + gutter), 10);\n      smartLabel.setStyle(labelStyle);\n      currentValue = point.y;\n      if (showLabelsAtCenter) {\n        smartTextObj = smartLabel.getSmartText(point.origValue, chartWorkingWidth, lineHeight);\n      } else {\n        currentValue = (point.getModifiedCurrentValue && point.getModifiedCurrentValue(totalValue)) ||\n                            currentValue;\n\n        ratioK = point.getRatioK(datasetStore, currentValue, valueRadiusIncrementRatio,\n          totalValue, maxValue);\n\n        currentDiameter = minWidthForChart * ratioK;\n        labelMaxWidth = maxWidthForLabel + ((minWidthForChart - currentDiameter) / 2);\n\n        smartTextObj = smartLabel.getSmartText(point.origValue, labelMaxWidth, lineHeight);\n        point.displayValue = smartTextObj.text;\n        showTooltip && smartTextObj.tooltext && (point.originalText = smartTextObj.tooltext);\n        labelMaxUsedWidth = Math.max(labelMaxUsedWidth, smartTextObj.width);\n        if (drawingWillExtend > 0) {\n          if (smartTextObj.width > 0) {\n            extraSpace = labelMaxWidth - smartTextObj.width;\n          } else {\n            extraSpace = labelMaxWidth + labelDistance;\n          }\n          newDiameter = (1 / (ratioK + 1)) * (currentDiameter + 2 * extraSpace + minWidthForChart);\n\n          drawingWillExtend = Math.min(drawingWillExtend, newDiameter - minWidthForChart);\n        }\n        totalValue += conf.offsetVal === UNDEF ? point.y\n          : (typeof conf.offsetVal === 'function' ? conf.offsetVal(i) : conf.offsetVal);\n      }\n    }\n\n    if (chartConf.showLegend && (legendPos[0] === 'right' || legendPos[0] === 'left')) {\n      chart.isLegendRight = true;\n      chartConf.marginRight += legendWidth;\n      // outCanvasSpace += legendWidth;\n    } else {\n      chart.isLegendRight = false;\n    }\n\n    if (point) {\n      lowestRadiusFactor = point.getLowestRadiusFactor(datasetStore, maxValue);\n    }\n    chartDrawingWidth = minWidthForChart + drawingWillExtend;\n    if (chartDrawingWidth > canvasMaxWidth) {\n      chartDrawingWidth = canvasMaxWidth;\n    }\n\n    totalValue = conf.offsetVal === UNDEF ? 0\n      : (typeof conf.offsetVal === 'function' ? conf.offsetVal() : conf.offsetVal);\n\n    // Now we have the actual drawing width for the\n    // funnel and pyramid reiterate through the data and find the\n    // max label width\n    if (!showLabelsAtCenter) {\n      i = datasetStore.config.LABEL_PLACEMENT_ITERATOR_INDEX_START;\n      for (length = datasetStore.getDataLength(); i < length; i += 1) {\n        point = dataArr[i];\n        currentValue = point.y;\n\n        currentValue = (point.getModifiedCurrentValue && point.getModifiedCurrentValue(totalValue)) ||\n                            currentValue;\n\n        ratioK = point.getRatioK(datasetStore, currentValue, valueRadiusIncrementRatio, totalValue, maxValue);\n\n        currentDiameter = chartDrawingWidth * ratioK;\n        labelMaxWidth = maxWidthForLabel + ((minWidthForChart - currentDiameter) / 2) - legendWidth;\n        smartTextObj = smartLabel.getSmartText(point.displayValue, labelMaxWidth, lineHeight);\n        labelMaxW = mathMax(labelMaxW, (currentDiameter * 0.5) + smartTextObj.width + labelDistance);\n        totalValue += conf.offsetVal === UNDEF ? point.y\n          : (typeof conf.offsetVal === 'function' ? conf.offsetVal() : conf.offsetVal);\n      }\n    }\n\n    if (labelMaxUsedWidth > 0) {\n      tempSnap.rightLabelSpace = (chartWorkingWidth - chartDrawingWidth);\n      // Keep the chart at center and find extra space required to place the label\n      labelOverlappingW = labelMaxW - (chartConf.canvasWidth * 0.5);\n      if (labelOverlappingW > 0) {\n        // Adjust the extra space required to place the label\n        chartConf.marginRight += labelOverlappingW;\n        chartConf.marginLeft -= labelOverlappingW;\n      }\n\n      chartConf.marginRight += tempSnap.rightLabelSpace * 0.5;\n      chartConf.marginLeft += tempSnap.rightLabelSpace * 0.5;\n    } else {\n      labelDistance = 0;\n    }\n\n    conf.labelDistance = conf.connectorWidth = labelDistance;\n\n    if ((showLabelsAtCenter || !labelMaxUsedWidth) && canvasMaxWidth < chartWorkingWidth) {\n      chartConf.marginLeft += (chartWorkingWidth - canvasMaxWidth - labelDistance) * 0.5;\n      chartConf.marginRight += (chartWorkingWidth - canvasMaxWidth - labelDistance) * 0.5;\n    }\n\n    if (!conf.is2d) {\n      chartConf.marginTop += tempSnap.top3DSpace =\n                  (chartDrawingWidth * conf.yScale * upperRadiusFactor) / 2;\n      chartConf.marginBottom += tempSnap.bottom3DSpace =\n                    (chartDrawingWidth * conf.yScale * lowestRadiusFactor) / 2;\n    }\n\n    datasetStore.calculatePositionOfPlots();\n    snapOffset = capHeight + subCapHeight + gutter;\n    if (datasetStore.getName() === 'funnel') {\n      if (conf.streamLinedData && dataArr.length < 2) {\n        chartConf.gaugeStartX = chartConf.marginLeft;\n        chartConf.gaugeStartY = chartConf.marginTop + snapOffset;\n        chartConf.gaugeEndX = chartDrawingWidth + chartConf.marginLeft;\n        chartConf.gaugeEndY = chartConf.canvasHeight + chartConf.marginTop;\n      } else {\n        chartConf.gaugeStartX = dataArr[0].plotX - dataArr[1].shapeArgs.R1;\n        chartConf.gaugeEndX = dataArr[0].plotX + dataArr[1].shapeArgs.R1;\n        chartConf.gaugeStartY = dataArr[0].plotY;\n        chartConf.gaugeEndY = dataArr[length - 1].plotY;\n      }\n    } else {\n      chartConf.gaugeStartX = dataArr[length - 1].plotX - dataArr[length - 1].shapeArgs.R2;\n      chartConf.gaugeEndX = dataArr[length - 1].plotX + dataArr[length - 1].shapeArgs.R2;\n      chartConf.gaugeStartY = dataArr[0].shapeArgs.y;\n      chartConf.gaugeEndY = dataArr[length - 1].shapeArgs.y + dataArr[length - 1].shapeArgs.h;\n    }\n    chartConf.gaugeCenterX = chartConf.canvasCenterX = (chartConf.gaugeStartX + chartConf.gaugeEndX) / 2;\n    chartConf.gaugeCenterY = (chartConf.gaugeStartY + chartConf.gaugeEndY) / 2;\n    chartConf.plotSemiWidth = (chartConf.canvasWidth - tempSnap.rightLabelSpace) / 2;\n  }\n\n  /**\n   * Animate plot elements\n   * @param {Array} elements plot elements\n   * @param {string} subElem type of elements\n   * @param {Array} subElemKeys type of elements\n   * @param {Object} conditions element attributes to be set for preanimation and postanimation\n   * @param {Function} callback animation callback function\n   */\n  animateElements (elements, subElem, subElemKeys = [], conditions/* , callback */) {\n    var datasetStore = this,\n      // chart = datasetStore.getFromEnv('chart'),\n      // animDuration = animationObj.duration,\n      // dummyAnimElem = animationObj.dummyObj,\n      // dummyAnimObj = animationObj.animObj,\n      // isPromiseExecuted = false,\n      target,\n      index,\n      length,\n      ele,\n      i,\n      l;\n    /**\n     * Promise function\n     * @return {undefined} return if already callback executed\n     */\n    // function promise () {\n    //   if (isPromiseExecuted) {\n    //     return;\n    //   }\n\n    //   callback();\n    //   isPromiseExecuted = true;\n    // }\n    /**\n     * Animate plots\n     * @param {Object} _t plot element\n     * @param {Object} point data object\n     */\n    function animate (_t, point) {\n      var ialpha = (point || {}).alpha;\n\n      ialpha = ialpha === UNDEF ? conditions.post : { opacity: ialpha };\n      if (!_t) {\n        return;\n      }\n      // _t.attr(conditions.pre);\n      // _t.attr(ialpha);\n      datasetStore.getFromEnv('animationManager').setAnimation({\n        el: _t,\n        attr: ialpha,\n        component: datasetStore\n      });\n      // _t.animateWith(dummyAnimElem, dummyAnimObj, ialpha, animDuration, animType, promise);\n    }\n\n    // callback = callback || stubFN;\n\n    for (index = 0, length = elements.length; index < length; index++) {\n      ele = elements[index];\n      if (!ele) {\n        continue;\n      }\n\n      if (!subElemKeys.length) {\n        target = ele;\n        animate(target[subElem], ele.point);\n      } else {\n        for (i = 0, l = subElemKeys.length; i < l; i++) {\n          target = ((elements[index])[subElem])[subElemKeys[i]];\n          animate(target, ele.point);\n        }\n      }\n    }\n  }\n\n  /**\n   * Draws all labels\n   */\n  drawAllLabels () {\n    var datasetStore = this,\n      chart = datasetStore.getFromEnv('chart'),\n      labelDrawingConfigArr = datasetStore.config.labelDrawingConfig,\n      dataLabelsGroup = chart.getChildContainer('datalabelsGroup'),\n      removeCSSProps = ['fontFamily', 'fontSize', 'fontWeight', 'fontStyle'],\n      groupLabelCssProps = removeCSSProps,\n      groupLabelCss = {},\n      labelDrawingConfig,\n      point,\n      index,\n      length,\n      attr;\n\n    // Extract the required css from the list of css (guard for IE)\n    for (index = 0, length = groupLabelCssProps.length; index < length; index++) {\n      attr = groupLabelCssProps[index];\n\n      if (attr in datasetStore._chartLevelAttr) {\n        groupLabelCss[attr] = datasetStore._chartLevelAttr[attr];\n      }\n    }\n\n    dataLabelsGroup.css(groupLabelCss);\n\n    for (index = labelDrawingConfigArr.length - 1; index > -1; index--) {\n      labelDrawingConfig = labelDrawingConfigArr[index];\n      if (labelDrawingConfig.css) {\n        labelDrawingConfig.css.fontSize = this.computeFontSize(labelDrawingConfig.css.fontSizeWithUnit);\n      }\n      point = labelDrawingConfig.point;\n      point.index = index;\n      point.drawLabel();\n    }\n  }\n\n  /**\n   * Draws all trackers\n   */\n  drawAllTrackers () {\n    var datasetStore = this,\n      trackerArgs = datasetStore.config.trackerArgs,\n      index,\n      point,\n      length;\n\n    for (index = 0, length = trackerArgs.length; index < length; index++) {\n      point = trackerArgs[index];\n      point.drawTracker();\n    }\n  }\n  /**\n   * Calculates the data plot coordinates\n   * @param {Array} dataArr data points\n   * @param {boolean} placeOtherSide whether to put on left side or right side\n   */\n  calculatePositionCoordinate (dataArr, placeOtherSide) {\n    var datasetStore = this,\n      conf = datasetStore.config,\n      maxValue = conf.maxValue,\n      is2d = conf.is2d,\n      x = conf.x,\n      chart = datasetStore.getFromEnv('chart'),\n      chartConfig = chart.config,\n      y = chartConfig.canvasTop,\n      unitHeight = conf.unitHeight,\n      drawingRadius = conf.drawingRadius,\n      labelDistance = conf.labelDistance,\n      showLabelsAtCenter = conf.showLabelsAtCenter,\n      isHollow = conf.isHollow,\n      fontSize = chartConfig.style.fontSize,\n      yShift = fontSize * 0.3,\n      yScale = conf.yScale,\n      blankSpace = conf.blankSpace,\n      lastRadius = conf.lastRadius,\n      smartLabel = datasetStore.getFromEnv('smartLabel'),\n      index, length,\n      totalHeight = 0,\n      point, sliceHeight,\n      lastIndex = datasetStore.getDataLength() - 1,\n      alignmentSwitchToggle = false,\n      distributionOffset = 0,\n      labelMeasurement, newRadius,\n      negativeSpanningDataEnd,\n      normalizedLabel,\n      lineHeight = conf.lineHeight,\n      widthHeightRatio = 0.8 / chartConfig.effCanvasHeight,\n      chartWidth = chart.config.width - 2,\n      streamlinedData = conf.streamLinedData,\n      // Base of the  maximum trimmed label.\n      trimmedInfo = {\n        flag: false,\n        point: UNDEF,\n        sLabel: UNDEF,\n        setAll: function (flag, pt, sLabel) {\n          this.flag = flag;\n          this.point = pt;\n          this.sLabel = sLabel;\n        }\n      },\n      // Base of the maximum spanned labels\n      largestLabel = {\n        point: UNDEF,\n        sLabel: UNDEF,\n        set: function (calcFn, predicate) {\n          var _calcFn = calcFn,\n            _predicate = predicate;\n          return function (pt, sLabel) {\n            var existingLabelSpan,\n              currentLabelSpan;\n            if (pt.dontPlot) {\n              return;\n            }\n\n            if (!(this.point && this.sLabel)) {\n              this.point = pt;\n              this.sLabel = sLabel;\n              return;\n            }\n            existingLabelSpan = _calcFn(this.point, this.sLabel);\n            currentLabelSpan = _calcFn(pt, sLabel);\n            if (_predicate(existingLabelSpan, currentLabelSpan)) {\n              this.point = pt;\n              this.sLabel = sLabel;\n            }\n          };\n        }\n      },\n      leftTrimmedInfo = {},\n      rightTrimmedInfo = {},\n      lLargestLabel = {},\n      rLargestLabel = {},\n      extraConnectorSpace, xPos,\n      slicingGapPosition = conf.slicingGapPosition = {};\n\n    extend2(leftTrimmedInfo, trimmedInfo);\n    extend2(rightTrimmedInfo, trimmedInfo);\n\n    leftTrimmedInfo.setAll = function (flag, pt, sLabel) {\n      var _point = this.point,\n        _sLabel = this.sLabel,\n        existingLabelSpan,\n        currentLabelSpan;\n\n      this.flag = flag;\n      if (!(_point && _sLabel)) {\n        this.point = pt;\n        this.sLabel = sLabel;\n        return;\n      }\n      existingLabelSpan = _point.labelX - (_sLabel.oriTextWidth - _sLabel.width);\n      currentLabelSpan = pt.labelX - (sLabel.oriTextWidth - sLabel.width);\n      if (existingLabelSpan > currentLabelSpan) {\n        this.point = pt;\n        this.sLabel = sLabel;\n      }\n    };\n\n    // Override the base class method for labels which are kept right\n    rightTrimmedInfo.setAll = function (flag, pt, sLabel) {\n      var _point = this.point,\n        _sLabel = this.sLabel,\n        existingLabelSpan,\n        currentLabelSpan;\n\n      this.flag = flag;\n      if (!(_point && _sLabel)) {\n        this.point = pt;\n        this.sLabel = sLabel;\n        return;\n      }\n      existingLabelSpan = _point.labelX + _sLabel.oriTextWidth;\n      currentLabelSpan = pt.labelX + sLabel.oriTextWidth;\n      if (existingLabelSpan < currentLabelSpan) {\n        this.point = pt;\n        this.sLabel = sLabel;\n      }\n    };\n\n    extend2(lLargestLabel, largestLabel);\n    extend2(rLargestLabel, largestLabel);\n\n    lLargestLabel.set = (function () {\n      return largestLabel.set.apply(lLargestLabel, [function (pt) {\n        return pt.labelX;\n      }, function (existingLabelSpan, currentLabelSpan) {\n        return existingLabelSpan > currentLabelSpan;\n      }]);\n    })();\n\n    rLargestLabel.set = (function () {\n      return largestLabel.set.apply(rLargestLabel, [function (pt, sLabel) {\n        return pt.labelX + sLabel.oriTextWidth;\n      }, function (existingLabelSpan, currentLabelSpan) {\n        return existingLabelSpan < currentLabelSpan;\n      }]);\n    })();\n\n    conf.noOfGap = 0;\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    for (index = 0, length = dataArr.length; index < length; index++) {\n      point = dataArr[index];\n      if (!point) {\n        continue;\n      }\n      point.x = index;\n      if (point.plot) {\n        // @todo correct the slicing here\n        point.isSliced = !!point.isSliced || !!conf.isSliced;\n      }\n      point.isSliced = pluckNumber(point.isSliced, conf.isSliced);\n\n      if (index) {\n        placeOtherSide && (alignmentSwitchToggle = !alignmentSwitchToggle);\n\n        // code for slicing drawing\n        if (point.isSliced) {\n          xPos = point.x;\n          if (xPos > 1 && !slicingGapPosition[xPos]) {\n            slicingGapPosition[xPos] = true;\n            conf.noOfGap += 1;\n          }\n          if (xPos < lastIndex) {\n            slicingGapPosition[xPos + 1] = true;\n            conf.noOfGap += 1;\n          }\n        }\n        if (!streamlinedData) {\n          totalHeight += sliceHeight = unitHeight * dataArr[index].y;\n          newRadius = drawingRadius * (1 - (totalHeight * widthHeightRatio));\n        } else {\n          if (conf.useSameSlantAngle === 1) {\n            newRadius = maxValue ? drawingRadius * point.y / maxValue : drawingRadius;\n          } else {\n            newRadius = maxValue ? drawingRadius * mathSqrt(point.y / maxValue) : drawingRadius;\n          }\n          // Default sliceHeight is set to one, in case its NaN.\n          sliceHeight = unitHeight * (dataArr[index - 1].y - point.y) || 1;\n        }\n        point.shapeArgs = {\n          x: x,\n          y: y,\n          R1: lastRadius,\n          R2: newRadius,\n          h: sliceHeight || 1,\n          r3dFactor: yScale,\n          isHollow: isHollow,\n          gStr: 'point',\n          is2D: is2d,\n          renderer: chart.getFromEnv('paper'),\n          isFunnel: true\n        };\n\n        smartLabel.setStyle(point.style);\n        point.oriText = point.displayValue;\n        labelMeasurement = labelMeasurement = smartLabel\n          .getSmartText(point.displayValue, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\n        if (showLabelsAtCenter) {\n          point.labelAline = POSITION_MIDDLE;\n          point.labelX = x;\n          point.labelY = (is2d ? y : y + (yScale * lastRadius)) + (sliceHeight / 2) + yShift;\n          if (point.shapeArgs.h < point.minplotheightforvalue) {\n            point.showValue = 0;\n          } else {\n            point.showValue = 1;\n          }\n        } else {\n          point.labelAline = POSITION_START;\n          point.alignmentSwitch = alignmentSwitchToggle;\n          point.distributionFactor = point.distributionFactor || 0;\n\n          if (alignmentSwitchToggle) {\n            point.labelX = x - (labelDistance + newRadius + blankSpace + labelMeasurement.width);\n            point.labelX -= point.distributionFactor * conf.globalMinXShift;\n            lLargestLabel.set(point, labelMeasurement);\n          } else {\n            point.labelX = x + labelDistance + newRadius + blankSpace;\n            point.labelX += point.distributionFactor * conf.globalMinXShift;\n            rLargestLabel.set(point, labelMeasurement);\n          }\n          distributionOffset = point.distributionFactor * lineHeight;\n          point.labelY = y + yShift + sliceHeight + distributionOffset;\n        }\n        // Checking text overflow for alternate alignment\n        if (placeOtherSide) {\n          if (alignmentSwitchToggle && (point.labelX < 0)) {\n            // Left and behind the margin\n            negativeSpanningDataEnd = point.labelX + labelMeasurement.width;\n            normalizedLabel = smartLabel.getSmartText(point.displayValue, negativeSpanningDataEnd,\n              Number.POSITIVE_INFINITY, true);\n            point.labelX = 2;\n            point.isLabelTruncated = true;\n            point.displayValue = normalizedLabel.text;\n            point.virtualWidth = normalizedLabel.maxWidth;\n            leftTrimmedInfo.setAll(true, point, normalizedLabel);\n          } else if (!alignmentSwitchToggle && (point.labelX + labelMeasurement.width > chartWidth)) {\n            // Right side and spanning the margin\n            normalizedLabel = smartLabel.getSmartText(point.displayValue, chartWidth - point.labelX,\n              Number.POSITIVE_INFINITY, true);\n            point.isLabelTruncated = true;\n            point.displayValue = normalizedLabel.text;\n            point.virtualWidth = normalizedLabel.maxWidth;\n            rightTrimmedInfo.setAll(true, point, normalizedLabel);\n          }\n        }\n        point.pWidth = point.virtualWidth = labelMeasurement.width;\n        y += sliceHeight;\n        lastRadius = newRadius;\n      } else {\n        point.oriText = point.displayValue;\n        if (conf.useSameSlantAngle === 1) {\n          newRadius = maxValue ? drawingRadius * point.y / maxValue : drawingRadius;\n        } else {\n          newRadius = maxValue ? drawingRadius * mathSqrt(point.y / maxValue) : drawingRadius;\n        }\n        if (point.labelWidth > newRadius * 2 && !placeOtherSide) {\n          point.labelAline = POSITION_START;\n          point.labelX = conf.x - (point.labelWidth / 2);\n        } else {\n          point.labelAline = POSITION_MIDDLE;\n          point.labelX = x;\n        }\n        extraConnectorSpace = labelDistance * 2;\n        point.displayValue = smartLabel.getSmartText(point.origValue, newRadius * 2 +\n                        extraConnectorSpace, Number.POSITIVE_INFINITY, true).text;\n        point.labelY = (is2d ? y : y - (yScale * lastRadius)) - yShift - blankSpace;\n      }\n      point.plotX = x;\n      point.plotY = y;\n    }\n\n    // Recalculate the space one more time. Ideally this should be given by space manager.\n    // However in the current scope space manager cannot be called from here.\n    datasetStore.findBestPosition(dataArr, {\n      'lTrimmedInfo': leftTrimmedInfo,\n      'rTrimmedInfo': rightTrimmedInfo,\n      'lLargestLabel': lLargestLabel,\n      'rLargestLabel': rLargestLabel\n    });\n  }\n  /**\n   * Calculates optimum position for labels\n   * @param {Array} dataArr data array\n   * @param {Object} config data point configuration\n   */\n  findBestPosition (dataArr, config) {\n    var datasetStore = this,\n      conf = datasetStore.config,\n      chart = datasetStore.getFromEnv('chart'),\n      chartConfig = chart.config,\n      shift = 0,\n      lTrimmedInfo = config.lTrimmedInfo,\n      rTrimmedInfo = config.rTrimmedInfo,\n      lLargestLabel = config.lLargestLabel,\n      rLargestLabel = config.rLargestLabel,\n      smartLabel = datasetStore.getFromEnv('smartLabel'),\n      trimmedLength,\n      sLabel, leftXSpace, rightXSpace, newLabel,\n      data, index, length,\n      unfoldWidth = 0, overflow,\n      streamLinedData = conf.streamLinedData,\n      allowedLeftX = conf.blankSpace,\n      allowedRightX = chartConfig.width - conf.blankSpace;\n\n    if (lTrimmedInfo.flag && rTrimmedInfo.flag) {\n      // If labels are large in both of the sides. No need to shift the system\n      return;\n    }\n\n    if (rTrimmedInfo.flag) {\n      // Only right side labels are large. Shift left\n      if (!lLargestLabel.point) {\n        return;\n      }\n      // point = rTrimmedInfo.point;\n      sLabel = rTrimmedInfo.sLabel;\n      trimmedLength = sLabel.oriTextWidth - sLabel.width;\n      leftXSpace = lLargestLabel.point.labelX - allowedLeftX;\n      shift = -Math.ceil(Math.min(trimmedLength, leftXSpace));\n    } else if (lTrimmedInfo.flag) {\n      // Only left side labels are large. Shift right\n      if (!rLargestLabel.point) {\n        return;\n      }\n      // point = lTrimmedInfo.point;\n      sLabel = lTrimmedInfo.sLabel;\n      trimmedLength = sLabel.oriTextWidth - sLabel.width;\n      rightXSpace = allowedRightX - (rLargestLabel.point.labelX + rLargestLabel.sLabel.width);\n      shift = Math.ceil(Math.min(trimmedLength, rightXSpace));\n    }\n\n    // Apply shift to the whole system\n    if (!shift) {\n      smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n      for (index = 0, length = dataArr.length; index < length; index++) {\n        data = dataArr[index];\n\n        if ((overflow = (data.labelX + data.pWidth - allowedRightX)) > 0) {\n          data.lOverflow = overflow;\n          data.labelX -= overflow;\n          if (chart.isLegendRight) {\n            data.displayValue = smartLabel.getSmartText(data.oriText, (data.pWidth - overflow),\n              Number.POSITIVE_INFINITY, true).text;\n          } else {\n            data.lOverflow = overflow;\n            data.labelX -= overflow;\n          }\n        }\n      }\n      return;\n    }\n\n    for (index = 0, length = dataArr.length; index < length; index++) {\n      data = dataArr[index];\n      if (!index && streamLinedData) {\n        data.labelX += shift;\n        continue;\n      }\n      if (data.alignmentSwitch) {\n        // left labels\n        if (shift < 0) {\n          newLabel = smartLabel\n            .getSmartText(data.oriText, (data.pWidth), Number.POSITIVE_INFINITY, true);\n        } else {\n          newLabel = smartLabel.getSmartText(data.oriText, (data.pWidth + shift),\n            Number.POSITIVE_INFINITY, true);\n        }\n        if (data.isLabelTruncated) {\n          unfoldWidth = (newLabel.width - data.pWidth);\n        }\n        data.virtualWidth = newLabel.width;\n      } else {\n        // Labels at right\n        if (shift > 0) {\n          newLabel = smartLabel\n            .getSmartText(data.oriText, (data.pWidth), Number.POSITIVE_INFINITY, true);\n        } else {\n          newLabel = smartLabel.getSmartText(data.oriText, (data.pWidth - shift),\n            Number.POSITIVE_INFINITY, true);\n        }\n        data.virtualWidth = newLabel.width;\n      }\n      data.displayValue = newLabel.text;\n      data.labelX += shift - unfoldWidth;\n      data.shapeArgs && (data.shapeArgs.x += shift);\n      unfoldWidth = 0;\n    }\n  }\n  /**\n   * Returns data plot\n   * @param {number} id data plot id\n   * @return {Object} data plot\n   */\n  getPlotData (id) {\n    var datasetStore = this,\n      data = datasetStore.getChildren('data')[id],\n      userData = datasetStore.userData || (datasetStore.userData = []),\n      props = [\n        'y',\n        'name',\n        'color',\n        'alpha',\n        'borderColor',\n        'borderWidth',\n        'link',\n        'label',\n        'displayValue',\n        'datasetIndex',\n        'toolText'\n      ],\n      plotData,\n      i,\n      prop;\n\n    if (!userData[id]) {\n      plotData = userData[id] = {};\n      for (i = 0; i < props.length; i++) {\n        plotData[prop = props[i]] = data[prop];\n      }\n\n      plotData.value = plotData.y;\n      plotData.label = plotData.name;\n\n      delete plotData.y;\n      delete plotData.name;\n    } else {\n      plotData = userData[id];\n    }\n\n    return plotData;\n  }\n  // eslint-disable-next-line no-unused-vars\n  /**\n   * Slice data plots on interaction\n   */\n  slice () {\n    var context = this,\n      datasetStore = context.datasetStore,\n      dataItem = context.plotItem,\n      index = dataItem.index,\n      data = datasetStore.getChildren('data'),\n      point = data[index],\n      graphicalElement = point.getGraphicalElement(),\n      chart = datasetStore.getFromEnv('chart'),\n      animationManager = datasetStore.getFromEnv('animationManager'),\n      conf = datasetStore.config,\n      sliced = arguments[3] || conf.clicked,\n      slicingDistance = conf.slicingDistance,\n      seriesOptionsHalf = slicingDistance / 2,\n      i = 0,\n      noOFPrevPoint = 0,\n      length = data.length,\n      transformObj,\n      dataObj,\n      reflowData = [],\n      itemClicked,\n      clickedItemId,\n      dyPrev,\n      dyNext,\n      dyOld,\n      dyNew,\n      graphic,\n      dataLabel,\n      slicingEnd;\n\n    if (conf.sliceLock) {\n      return;\n    }\n\n    // Flag that informs whether slicing is on-going\n    conf.sliceLock = 1;\n\n    sliced = dataItem.sliced = defined(sliced) ? sliced : !dataItem.sliced;\n\n    dyPrev = -seriesOptionsHalf;\n    dyNext = seriesOptionsHalf;\n\n    slicingEnd = function () {\n      return function () {\n        conf.sliceLock = 0;\n        /**\n                     * SlicingEnd event is usually associated with a pie chart.\n                     * In pie charts, on click a certain entity of the pie, the clicked slice is shown distinctly.\n                     * The slicing start event is triggered as soon as the particular entity\n                     * is clicked when the slicing is finished,\n                     * the slicingEnd event is triggered.\n                     * @event FusionCharts#slicingEnd\n                     * @param {boolean} slicedState Indicates whether the data is sliced or not.\n                     * @param {string} data The plot data from the chart to slice.\n                     */\n        chart.fireChartInstanceEvent('SlicingEnd', {\n          slicedState: sliced,\n          data: datasetStore.getPlotData(clickedItemId)\n        });\n      };\n    };\n\n    for (i = 0; i < length; i += 1) {\n      dataObj = data[i].plot;\n      if (!dataObj || data[i].getState('removed')) {\n        continue;\n      }\n\n      graphicalElement = data[i].getGraphicalElement();\n      if (dataObj !== dataItem) {\n        data[i].isSliced = 0;\n        dataObj.sliced = false;\n        reflowData[i] = { isSliced: false };\n        itemClicked = false;\n      } else {\n        data[i].isSliced = +!data[i].isSliced;\n        reflowData[i] = { isSliced: sliced };\n        itemClicked = true;\n        clickedItemId = i;\n      }\n\n      if (graphicalElement.graphic) {\n        dyOld = dataObj.dy;\n        dyNew = -dyOld;\n\n        if (sliced) {\n          if (dataObj.x < dataItem.x) {\n            dyNew += dyPrev;\n            noOFPrevPoint += 1;\n          } else if (dataObj.x === dataItem.x) {\n            if (!noOFPrevPoint) {\n              dyNew += -seriesOptionsHalf * 0.5;\n            } else if (i === length - 1) {\n              dyNew += seriesOptionsHalf * 0.5;\n            }\n          } else {\n            dyNew += dyNext;\n          }\n        }\n        // The plot should be sent to ending y position, before invoking\n        // next slicing movement, as in the case of rapid slicing interactions.\n        graphicalElement.graphic.attr({\n          transform: 't0,' + dataObj.dy\n        });\n\n        dataObj.dy += dyNew;\n\n        transformObj = { transform: '...t0,' + dyNew };\n\n        // dataItem.distanceAvailed = dyNew;\n        /**\n                     * SlicingStart event is usually associated with a pie chart.\n                     * In pie charts, on click a certain entity of the pie, the clicked slice is shown distinctly.\n                     * The slicing start event is triggered as soon as the particular entity is clicked.\n                     * @event FusionCharts#slicingStart\n                     * @param {boolean} slicedState Indicates whether the data is sliced or not.\n                     * @param {string} data The plot data from the chart to slice.\n                     */\n        itemClicked && chart.fireChartInstanceEvent('SlicingStart', {\n          slicedState: !sliced,\n          data: datasetStore.getPlotData(clickedItemId)\n        });\n\n        // dataObj.graphic.animateWith(dummyAnimElem, dummyAnimObj, transformObj, animDuration, animType,\n        //                 itemClicked && slicingEnd(sliced, clickedItemId));\n        animationManager.setAnimation({\n          el: graphicalElement.graphic,\n          attr: transformObj,\n          component: datasetStore,\n          callback: itemClicked && slicingEnd(sliced, clickedItemId)\n        });\n        // for labels at center translate the labels\n        if (graphicalElement.dataLabel) {\n          // dataObj.dataLabel.animateWith(dummyAnimElem, dummyAnimObj, transformObj, animDuration,\n          //                   animType);\n          animationManager.setAnimation({\n            el: graphicalElement.dataLabel,\n            attr: transformObj,\n            component: datasetStore\n          });\n        }\n        if (graphicalElement.connector) {\n          // dataObj.connector.animateWith(dummyAnimElem, dummyAnimObj, transformObj, animDuration,\n          //                   animType);\n          animationManager.setAnimation({\n            el: graphicalElement.connector,\n            attr: transformObj,\n            component: datasetStore\n          });\n        }\n        // for tracker translate it\n        if (graphicalElement.trackerObj) {\n          // dataObj.trackerObj.animateWith(dummyAnimElem, dummyAnimObj, transformObj, animDuration,\n          //                   animType);\n          animationManager.setAnimation({\n            el: graphicalElement.trackerObj,\n            attr: transformObj,\n            component: datasetStore\n          });\n        }\n        // For Funnel streamlinedData, the top label should move with top funnel,\n        // characterised by no graphic but with label for the plot. Topmost funnel\n        // is not the topmost plot here.\n        graphic = data[0].getGraphicalElement('graphic');\n        dataLabel = data[0].getGraphicalElement('dataLabel');\n        if (i === 1 && !graphic && dataLabel) {\n          // data[0].dataLabel.animateWith(dummyAnimElem, dummyAnimObj, transformObj, animDuration,\n          //                   animType);\n          animationManager.setAnimation({\n            el: dataLabel,\n            attr: transformObj,\n            component: datasetStore\n          });\n        }\n      }\n    }\n    // After first click delete state\n    delete conf.clicked;\n  }\n  /**\n   * Handles legend interactivity\n   * @param {Object} plotItem plot object\n   */\n  legendClick (plotItem) {\n    this.slice.call(plotItem);\n  }\n  /**\n   * Fetch event arguements of legendItems\n   * @param {Object} legendItem legend item object of particular data\n   * @return {Object} event arguements\n   */\n  getEventArgs (legendItem) {\n    var dataset = this,\n      dataStore = dataset.getChildren('data'),\n      configuration = legendItem.config,\n      index = configuration.index,\n      dataObj = dataStore[index] || {},\n      eventArgs;\n    eventArgs = {\n      alpha: dataObj.alpha,\n      value: dataObj.y,\n      color: dataObj.color,\n      borderColor: dataObj.borderColor,\n      borderWidth: dataObj.borderWidth,\n      link: dataObj.link,\n      displayValue: dataObj.displayValue,\n      datasetIndex: dataObj.datasetIndex,\n      toolText: dataObj.toolText,\n      label: dataObj.categoryLabel\n    };\n    return eventArgs;\n  }\n  /**\n   * Handler for plot click\n   *\n   * @param {any} data data\n   * @memberof FunnelPyramidBaseDataset\n   */\n  plotMouseUp (data) {\n    var context = this,\n      plotItem = context.plotItem,\n      dataset = context.datasetStore,\n      dataStore = dataset.getChildren('data'),\n      funnelPoint = dataStore[plotItem.index],\n      chart = dataset.getFromEnv('chart'),\n      tracker = funnelPoint.getGraphicalElement('trackerObj');\n    tracker.data(EVENTARGS, Object.assign(tracker.data(EVENTARGS), { isSliced: funnelPoint.isSliced }));\n    chart.plotEventHandler(tracker, data, 'dataplotclick');\n  }\n}\nexport default FunnelPyramidBaseDataset;\n","let fadeIn = {\n    initialAttr: {\n      opacity: 0\n    },\n    finalAttr: {\n      opacity: 1\n    },\n    slot: 'final'\n  },\n  effect = () => {\n    return {\n      'connector.appearing': () => {\n        return [fadeIn];\n      },\n      'connector.transform': (input) => {\n        return [{\n          initialAttr: {\n            path: input.attr.path\n          },\n          finalAttr: {\n            path: input.attr.path\n          }\n        }];\n      },\n      'dataLabel.appearing': () => {\n        return [fadeIn];\n      },\n      'dataLabel.transform': (input) => {\n        return [{\n          initialAttr: {\n            transform: input.attr.transform\n          },\n          finalAttr: {\n            transform: input.attr.transform\n          }\n        }];\n      },\n      'path.appearing': () => {\n        return [Object.assign({}, fadeIn, {slot: 'plot'})];\n      }\n    };\n  };\nexport default {\n  'initial.dataset.funnel': effect,\n  'initial.dataset.pyramid': effect\n};\n","import FunnelPyramidBasePoint from './funnelpyramidbase-point';\nimport { BLANK, preDefStr } from '@fusioncharts/core/src/lib';\n\nvar UNDEF,\n  POINTER = 'pointer',\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_END = preDefStr.POSITION_END,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  textHAlign = {\n    right: POSITION_END,\n    left: POSITION_START,\n    middle: POSITION_MIDDLE,\n    start: POSITION_START,\n    end: POSITION_END,\n    center: POSITION_MIDDLE,\n    'undefined': BLANK,\n    BLANK: BLANK\n  };\n\nclass FunnelPoint extends FunnelPyramidBasePoint {\n  /**\n   * Configures an instance of FunnelPoint.\n   * @param {any} [options={}]\n   * @memberof FunnelPoint\n   */\n  configure (options = {}) {\n    for (var key in options) {\n      this[key] = options[key];\n    }\n    this.upperRadiusFactor = 1;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'data';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'funnelpoint';\n  }\n  /**\n   * Returns value after modifying\n   *\n   * @returns {any}\n   * @memberof FunnelPoint\n   */\n  // eslint-disable-next-line\n  getModifiedCurrentValue () {\n    return UNDEF;\n  }\n\n  // eslint-disable-next-line\n  getRatioK (context, currentValue, valueRadiusIncrementRatio, totalValue, maxValue) {\n    var point = this,\n      conf = context.config,\n      // pointConfig = point.config,\n      nonStreamlinedData = !conf.streamLinedData,\n      useSameSlantAngle = conf.useSameSlantAngle;\n\n    return nonStreamlinedData ? 0.2 + (valueRadiusIncrementRatio * totalValue)\n      : (point.y ? (useSameSlantAngle ? point.y / maxValue : Math.sqrt(point.y / maxValue)) : 1);\n  }\n\n  getLowestRadiusFactor (context, maxValue) {\n    var point = this,\n      conf = context.config,\n      // pointConfig = point.config,\n      nonStreamlinedData = !conf.streamLinedData,\n      useSameSlantAngle = conf.useSameSlantAngle;\n\n    return nonStreamlinedData ? 0.2\n      : (point.y ? (useSameSlantAngle ? point.y / maxValue : Math.sqrt(point.y / maxValue)) : 1);\n  }\n\n  // eslint-disable-next-line\n  allocatePosition () { }\n\n  /**\n   * Draws individual plot graphics\n   * @return {Object} individual pointItem object\n   */\n  drawPlots () {\n    var point = this,\n      index = point.index,\n      datasetStore = point.getLinkedParent(),\n      toolTipController = datasetStore.getFromEnv('toolTipController'),\n      conf = datasetStore.config,\n      value = point.y,\n      displayValue = point.displayValue,\n      chartSliced = conf.isSliced,\n      labelAlign = point.labelAline,\n      css = point.appliedStyle,\n      parentCSS = point.style,\n      textDirection = BLANK,\n      chart = datasetStore.getFromEnv('chart'),\n      trackerGroup = chart.getChildContainer('trackerGroup'),\n      sliced, plotItem = point.plot, translateXY,\n      setLink = !!point.link,\n      graphic,\n      trackerObj,\n      // attaching the hoverHandler made once in constructor of funnel-pyramid-base\n      hoverHandler = this.hoverHandler,\n      distanceAvailed = conf.distanceAvailed,\n      // legend = datasetStore.getFromEnv('legend'),\n      labelDrawingConfigArr = datasetStore.config.labelDrawingConfig,\n      animationManager = datasetStore.getFromEnv('animationManager'),\n      setRolloutAttr = point.setRolloutAttr,\n      setRolloverAttr = point.setRolloverAttr,\n      setRolloverProperties = point.rolloverProperties,\n      sliceContext = {},\n      pointFill,\n      labelDrawingConfig,\n      textDrawingArgs;\n\n    // If all plots are sliced, then set flag to false, to make the first\n    // slicing click on any of the plots will make it sliced.\n    sliced = chartSliced ? 1 : point.isSliced;\n\n    pointFill = (css && css.color) || (parentCSS && parentCSS.color) || datasetStore._chartLevelAttr.color;\n\n    textDrawingArgs = {\n      text: displayValue,\n      direction: textDirection,\n      cursor: setLink ? POINTER : BLANK,\n      x: 0,\n      y: 0,\n      fill: pointFill,\n      'text-anchor': textHAlign[labelAlign]\n    };\n\n    if (value === null || value === UNDEF || !point.shapeArgs) {\n      labelDrawingConfigArr[index] = (labelDrawingConfig = {\n        args: textDrawingArgs,\n        css: css,\n        point: point\n      });\n\n      return;\n    }\n\n    graphic = point.getGraphicalElement('graphic');\n    trackerObj = point.getGraphicalElement('trackerObj');\n\n    // Hover consmetics\n    !setRolloutAttr && (point.setRolloutAttr = setRolloutAttr = {});\n    !setRolloverAttr && (point.setRolloverAttr = setRolloverAttr = {});\n    if (point.hoverEffects) {\n      // hover-out cosmetics\n      setRolloutAttr.color = point.rawColor;\n      setRolloutAttr.opacity = point.rawAlpha;\n      setRolloutAttr['stroke-width'] = point.borderWidth;\n      setRolloutAttr.stroke = point.borderColor;\n\n      // hover-in cosmetics\n      setRolloverAttr.color = setRolloverProperties.color;\n      setRolloverAttr.opacity = setRolloverProperties.alpha;\n      setRolloverAttr['stroke-width'] = setRolloverProperties.borderWidth;\n      setRolloverAttr.stroke = setRolloverProperties.borderColor;\n      setRolloverAttr.rawBorderColor = setRolloverProperties.rawBorderColor;\n      setRolloverAttr.borderAlpha = setRolloverProperties.borderAlpha;\n    } else {\n      // If hoverEffects is disabled, clear all cosmetics\n      setRolloutAttr = point.setRolloutAttr = {};\n      setRolloverAttr = point.setRolloverAttr = {};\n    }\n\n    if (!plotItem) {\n      point.shapeArgs.graphics = plotItem;\n      point.plot = plotItem = {};\n      graphic = datasetStore.pyramidFunnelShape(point.shapeArgs).attr({\n        fill: point.color,\n        'stroke-width': point.borderWidth,\n        stroke: point.borderColor\n      });\n      trackerObj = animationManager.setAnimation({\n        el: 'path',\n        container: trackerGroup,\n        component: datasetStore\n      })\n        .on('fc-click', datasetStore.plotMouseUp, sliceContext)\n        .hover(hoverHandler, hoverHandler);\n\n      point.addGraphicalElement('graphic', graphic);\n      point.addGraphicalElement('trackerObj', trackerObj);\n\n      labelDrawingConfigArr[index] = (labelDrawingConfig = {\n        args: textDrawingArgs,\n        css: css,\n        point: point\n      });\n    } else {\n      point.shapeArgs.graphics = graphic;\n      graphic = datasetStore.pyramidFunnelShape(point.shapeArgs);\n      point.addGraphicalElement('graphic', graphic);\n\n      graphic = animationManager.setAnimation({\n        el: graphic,\n        attr: {\n          fill: point.color,\n          'stroke-width': point.borderWidth,\n          stroke: point.borderColor\n        },\n        component: datasetStore\n      });\n\n      point.addGraphicalElement('graphic', graphic);\n      graphic.show();\n\n      labelDrawingConfigArr[index] = (labelDrawingConfig = {\n        args: textDrawingArgs,\n        css: css,\n        point: point\n      });\n    }\n    graphic.funnel2D && graphic.funnel2D.addPattern(point.patternAttr, conf.usePattern);\n\n    if (conf.showTooltip) {\n      toolTipController.enableToolTip(trackerObj, point.toolText);\n    } else {\n      toolTipController.disableToolTip(trackerObj);\n    }\n\n    plotItem.value = value;\n    plotItem.displayValue = displayValue;\n    plotItem.sliced = !!sliced;\n    plotItem.cursor = setLink ? POINTER : BLANK;\n    plotItem.x = point.x;\n    plotItem.index = index;\n\n    sliceContext.datasetStore = datasetStore;\n    sliceContext.plotItem = plotItem;\n\n    trackerObj.off('fc-click', datasetStore.slice);\n    !point.doNotSlice && trackerObj.on('fc-click', datasetStore.slice, sliceContext);\n\n    labelDrawingConfig.context = sliceContext;\n    labelDrawingConfig.actions = {\n      click: datasetStore.slice,\n      hover: [hoverHandler, hoverHandler]\n    };\n\n    plotItem.dy = 0;\n\n    if (conf.noOfGap) {\n      if (distanceAvailed) {\n        plotItem._startTranslateY = translateXY = 't0,' + distanceAvailed;\n        plotItem.dy = plotItem.distanceAvailed = distanceAvailed;\n      }\n\n      if (conf.slicingGapPosition[point.x]) {\n        conf.distanceAvailed -= conf.perGapDistance;\n      }\n    } else {\n      plotItem._startTranslateY = translateXY = 't0,' + 0;\n    }\n\n    animationManager.setAnimation({\n      el: graphic,\n      attr: {\n        transform: translateXY\n      },\n      component: datasetStore\n    });\n\n    labelDrawingConfig.transform = translateXY;\n    return plotItem;\n  }\n}\n\nexport default FunnelPoint;\n","import { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport {\n  pluck,\n  pluckNumber,\n  BLANK,\n  BLANKSTRING,\n  UNDEF,\n  parseUnsafeString,\n  COMMASTRING,\n  ZEROSTRING,\n  getValidValue,\n  parseTooltext,\n  parsexAxisStyles,\n  pluckFontSizeMaintainUnit,\n  convertColor,\n  getLightColor\n} from '@fusioncharts/core/src/lib';\nimport { labelClickFn } from '@fusioncharts/charts/src/dataset/pie2d';\nimport { PATTERN_TYPES } from '@fusioncharts/charts/src/dataset/column';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\n\nvar CRISP = 'crisp',\n  M = 'M',\n  L = 'L',\n  POINTER = 'pointer',\n  DEFAULT = 'default',\n  win = window,\n  userAgent = win.navigator.userAgent,\n  isIE = /msie/i.test(userAgent) && !win.opera,\n  noneStr = 'none',\n  EVENTARGS = 'eventArgs',\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')',\n  removeCSSProps = ['fontFamily', 'fontSize', 'fontWeight', 'fontStyle'],\n  hideFn = function () {\n    this.hide();\n  },\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  MOUSEOVER = 'mouseover',\n  /**\n   * Extract the text styles\n   * @param {Object} dataObj input data\n   * @return {Object} returns parsed style object\n   */\n  extractTextStyle = function (dataObj, chartAttr) {\n    var keyMap = {\n        'labelfont': 'fontFamily',\n        'labelfontcolor': 'color',\n        'labelfontsize': 'fontSize',\n        'labelfontbold': 'fontWeight',\n        'labelfontitalic': 'fontStyle',\n        'labelalpha': 'alpha'\n      },\n      style,\n      key;\n\n    for (key in keyMap) {\n      if (!(key in dataObj) && !(key in chartAttr)) {\n        continue;\n      }\n\n      style = style || {};\n      if (key === 'labelfontsize') {\n        style[keyMap[key]] = pluck(dataObj[key], this.computeFontSize(chartAttr[key]));\n        style.fontSizeWithUnit = pluckFontSizeMaintainUnit(\n          dataObj.labelfontsize, chartAttr.labelfontsize);\n      } else {\n        style[keyMap[key]] = pluck(dataObj[key], chartAttr[key]);\n      }\n    }\n\n    if (!style) {\n      return style;\n    }\n\n    if (style.fontWeight) {\n      style.fontWeight = pluckNumber(style.fontWeight) ? 'bold' : 'normal';\n    }\n\n    if (style.fontStyle) {\n      style.fontStyle = pluckNumber(style.fontStyle) ? 'italic' : 'normal';\n    }\n\n    // Convert color to rgba. If color is not provided, black is assigned\n    style.color = convertColor(style.color, style.alpha);\n    return style;\n  };\n\nclass FunnelPyramidBasePoint extends ComponentInterface {\n  /**\n   * constructor to intantiate handler on the hover only once in lifetime of chart\n  */\n  constructor () {\n    super();\n    var point = this;\n    /**\n    * attaches the function of hover of actions of dataLabel\n    * handler is defined in constructor and attached in funnel-point and pyramid-point\n    */\n    this.hoverHandler = function (evt) {\n      let graphic = point.getGraphicalElement('graphic'),\n        chart = point.getLinkedParent().getFromEnv('chart'),\n        ele = this;\n      ele.data(EVENTARGS, Object.assign(ele.data(EVENTARGS), { isSliced: point.isSliced }));\n      if (evt.type === MOUSEOVER) {\n        graphic.attr(point.setRolloverAttr);\n        chart.plotEventHandler(ele, evt, ROLLOVER);\n      } else {\n        graphic.attr(point.setRolloutAttr);\n        chart.plotEventHandler(ele, evt, ROLLOUT);\n      }\n    };\n  }\n  /**\n   * Parses the attributes and configures the point component.\n   *\n   * @param {any} dataObj dataObj\n   * @param {any} res Contains calculations\n   * @param {any} colorIndex colorIndex is used to depict the color to be used for the point component\n   * @param {Number} index index of the plot\n   * @memberof FunnelPyramidBasePoint\n   */\n  parseAndConfigurePoint (dataObj, res, colorIndex, index) {\n    var point = this,\n      datasetStore = point.getLinkedParent(),\n      chart = datasetStore.getFromEnv('chart'),\n      conf = datasetStore.config,\n      numberFormatter = datasetStore.getFromEnv('number-formatter'),\n      smartLabel = datasetStore.getFromEnv('smartLabel'),\n      colorManager = datasetStore.getFromEnv('color-manager'),\n      showValue,\n      refreshedData,\n      highestValue,\n      patternType,\n      patternAngle,\n      patternDensity,\n      patternSize,\n      patternAlpha,\n      patternBgColor,\n      sumValue = 0,\n      sum, dataValue, prevValue, name, smartTextObj,\n      pointSliced, pValue, formatedVal, labelText,\n      displayValueText, displayValue, toolText, ttValue, filteredDataObj, id,\n      showPercentValues = conf.showPercentValues,\n      labelSepChar = conf.labelSepChar,\n      chartAttr = chart.getFromEnv('chart-attrib'),\n      isSliced = conf.isSliced,\n      plotColor, plotAlpha, plotBorderColor, plotBorderAlpha,\n      pointShadow = {\n        apply: conf.showShadow,\n        opacity: 1\n      },\n      minplotheightforvalue = pluckNumber(dataObj.minplotheightforvalue, chartAttr.minplotheightforvalue, 0),\n      tooltipOptions, hoverEffects, displayValueArgs,\n      plotBorderWidth = conf.plotBorderThickness,\n      defStyle = conf.style,\n      legendItemId,\n      colorApplied,\n      labellink,\n      legendColor,\n      legendIconAlpha,\n      legendIconBgAlpha;\n\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    refreshedData = res.refreshedData;\n    sumValue = res.sumValue;\n    sum = numberFormatter.dataLabels(sumValue);\n    highestValue = res.highestValue;\n    labellink = pluck(dataObj.labellink, chartAttr.labellink, dataObj.link, UNDEF);\n    legendItemId = dataObj.legendItemId;\n    dataValue = dataObj.cleanValue;\n    prevValue = index ? refreshedData[index - 1].value : dataValue;\n    name = parseUnsafeString(pluck(dataObj.label, dataObj.name, BLANKSTRING));\n    // parsing the id property in config\n    id = dataObj.id ? parseUnsafeString(pluck(dataObj.id)) : name;\n\n    smartLabel.setStyle(point.getFromEnv('dataLabelStyle'));\n    smartTextObj = smartLabel.getOriSize(name);\n\n    patternType = PATTERN_TYPES.includes(dataObj.patterntype)\n      ? dataObj.patterntype\n      : conf.patternType;\n    patternAngle = pluckNumber(dataObj.patternangle,\n      chart.getFromEnv('chart-attrib').patternangle, patternType === PATTERN_TYPES[0] ? 40 : 0);\n    patternDensity = pluckNumber(dataObj.patterndensity, conf.patternDensity);\n    patternSize = pluckNumber(dataObj.patternsize,\n      patternType === PATTERN_TYPES[0] ? 2 : 4);\n    patternAlpha = pluckNumber(dataObj.patternalpha, conf.patternAlpha);\n    patternBgColor = pluck(dataObj.patternbgcolor, conf.patternBgColor);\n\n    plotAlpha = dataObj.alpha || conf.plotFillAlpha;\n\n    colorApplied = pluck(dataObj.color, colorManager.getPlotColor(colorIndex));\n    legendColor = convertColor(colorApplied);\n    legendIconAlpha = dataObj.legendiconalpha;\n    legendIconBgAlpha = dataObj.legendiconbgalpha;\n    plotColor = convertColor(colorApplied, plotAlpha);\n\n    plotBorderColor = pluck(dataObj.bordercolor, conf.plotBorderColor,\n      conf.usePattern ? colorApplied : getLightColor(colorApplied, 25)).split(COMMASTRING)[0];\n\n    plotBorderAlpha = !conf.showPlotBorder ? ZEROSTRING\n      : pluck(dataObj.borderalpha, conf.plotBorderAlpha, conf.usePattern ? '100' : '80');\n\n    pointShadow.opacity = Math.max(plotAlpha, plotBorderAlpha) / 100;\n\n    pointSliced = pluckNumber(dataObj.issliced, isSliced);\n    if (pointSliced) {\n      conf.noOFSlicedElement += 1;\n      conf.preSliced = pointSliced;\n    }\n\n    if (res.prevPerValReq) {\n      sumValue = prevValue;\n    }\n\n    pValue = numberFormatter.percentValue(dataValue / sumValue * 100);\n    if (!conf.datalabelDisabled) {\n      formatedVal = numberFormatter.dataLabels(dataValue) || BLANKSTRING;\n\n      labelText = conf.showLabels === 1 ? name : BLANKSTRING;\n      showValue = pluckNumber(dataObj.showvalue, conf.showValues, 1);\n      displayValueText = showValue === 1\n        ? (showPercentValues === 1 ? pValue : formatedVal) : BLANKSTRING;\n\n      displayValue = getValidValue(parseUnsafeString(dataObj.displayvalue));\n\n      displayValueArgs = pluck(displayValue, name + labelSepChar + (showPercentValues ? pValue\n        : formatedVal), BLANKSTRING);\n\n      if (displayValue) {\n        displayValueText = displayValue;\n      } else {\n        if (displayValueText !== BLANKSTRING && labelText !== BLANKSTRING) {\n          displayValueText = labelText + labelSepChar + displayValueText;\n        } else {\n          displayValueText = pluck(labelText, displayValueText) || BLANKSTRING;\n        }\n      }\n    }\n\n    toolText = getValidValue(parseUnsafeString(pluck(dataObj.tooltext, conf.toolText), false));\n\n    if (toolText !== UNDEF) {\n      tooltipOptions = {\n        formatedVal: formatedVal,\n        name: name,\n        pValue: pValue,\n        sum: sum,\n        sumValue: sum,\n        dataValue: dataValue,\n        prevValue: prevValue,\n        highestValue: highestValue\n      };\n\n      toolText = parseTooltext(toolText, [1, 2, 3, 7, 14, 24, 25, 37],\n        datasetStore.getTooltipMacroStub(tooltipOptions), dataObj, chartAttr);\n    } else {\n      ttValue = conf.showPercentInToolTip === 1 ? pValue : formatedVal;\n      toolText = name !== BLANKSTRING ? name + conf.tooltipSepChar + ttValue : ttValue;\n    }\n\n    hoverEffects = datasetStore.pointHoverOptions(dataObj, {\n      color: colorApplied,\n      alpha: plotAlpha,\n      borderColor: plotBorderColor,\n      borderAlpha: plotBorderAlpha,\n      borderWidth: plotBorderWidth\n    });\n\n    filteredDataObj = {\n      displayValue: displayValueText,\n      origValue: displayValueText,\n      displayValueArgs: displayValueArgs,\n      style: parsexAxisStyles.apply(this, [dataObj, {}, chartAttr, defStyle, plotColor]),\n      appliedStyle: extractTextStyle.apply(this, [dataObj, chartAttr]),\n      name: name,\n      categoryLabel: name,\n      rawColor: colorApplied,\n      rawAlpha: plotAlpha,\n      toolText: toolText,\n      legendCosmetics: UNDEF,\n      legendItemId: legendItemId || (point &&\n        point.legendItemId),\n      showInLegend: UNDEF,\n      y: dataValue,\n      shadow: pointShadow,\n      smartTextObj: smartTextObj,\n      legendColor: legendColor,\n      color: plotColor,\n      alpha: plotAlpha,\n      legendiconalpha: legendIconAlpha,\n      legendiconbgalpha: legendIconBgAlpha,\n      borderColor: convertColor(plotBorderColor, plotBorderAlpha),\n      plotBorderColor,\n      plotBorderAlpha,\n      borderWidth: plotBorderWidth,\n      link: getValidValue(dataObj.link),\n      isSliced: pointSliced,\n      doNotSlice: !conf.enableSlicing,\n      hoverEffects: hoverEffects.enabled && hoverEffects.options,\n      labellink: labellink,\n      rolloverProperties: hoverEffects.enabled && hoverEffects.rolloverOptions,\n      minplotheightforvalue,\n      showValue,\n      id: id,\n      patternAttr: {\n        patternType,\n        patternAngle,\n        patternDensity,\n        patternSize,\n        patternAlpha,\n        patternBgColor,\n        color: plotColor,\n        alpha: plotAlpha,\n        x: 0,\n        y: 0\n      }\n    };\n\n    point.configure(filteredDataObj);\n  }\n  /**\n   * Draws individual data labels\n   */\n  drawLabel () {\n    var point = this,\n      index = point.index,\n      datasetStore = point.getLinkedParent(),\n      chart = datasetStore.getFromEnv('chart'),\n      animationManager = datasetStore.getFromEnv('animationManager'),\n      toolTipController = datasetStore.getFromEnv('toolTipController'),\n      conf = datasetStore.config,\n      dataLabelsGroup = chart.getChildContainer('datalabelsGroup'),\n      dataStore = datasetStore.getChildren('data'),\n      displayValue = point.displayValue,\n      plotItem = point.plot || {},\n      dataLabel = point.getGraphicalElement('dataLabel'),\n      connector = point.getGraphicalElement('connector'),\n      isNewDataLabel = !dataLabel,\n      labelY = point.labelY,\n      labelX = point.labelX,\n      style = point.style || {},\n      fontSize = pluckNumber(parseInt(style.fontSize, 10), conf.baseFontSize),\n      isFunnel = datasetStore.getName() === 'funnel',\n      lineHeight = conf.lineHeight,\n      value,\n      connectorAttr,\n      actions,\n      drawConnector,\n      labelDrawingConfig,\n      yShift = fontSize * 0.3,\n      yDisplacement = lineHeight * 0.3,\n      connectorStartY, connectorEndY, lastConnectorEndY,\n      showLabelsAtCenter = conf.showLabelsAtCenter,\n      rolloverAttr = point.setRolloverAttr,\n      eventArgs,\n      connectorEndSwitchHistoryY = conf.connectorEndSwitchHistoryY,\n      connectorEndX, connectorStartX,\n      labelDistance = conf.labelDistance,\n      blankSpace = conf.blankSpace,\n      connectorPath, yD,\n      streamLinedData = conf.streamLinedData,\n      // shapeArgs might not exist for streamlined data when the point is the\n      // top point.\n      shapeArgs = point.shapeArgs,\n      // If shapeArgs don't exist, labels can be drawn.\n      // Otherwise, shapeArgs exist and labels can only be shown if the computed\n      // point height is greater than the user defined minimum plot height to\n      // show labels.\n      canLabelBeShown = !shapeArgs || shapeArgs.h > point.minplotheightforvalue;\n\n    if (!point.displayValue || (isFunnel && !conf.streamLinedData && !index)) {\n      // in case displayvalue is blank or undefined, hide the existing label and connector\n      // For funnel chart, when streamlineddata is disable, label of last plot should not be drawn\n      dataLabel && animationManager.setAnimation({\n        el: dataLabel,\n        component: datasetStore,\n        callback: hideFn,\n        doNotRemove: true\n      });\n      connector && animationManager.setAnimation({\n        el: connector,\n        component: datasetStore,\n        callback: hideFn,\n        doNotRemove: true\n      });\n      return;\n    }\n    labelDrawingConfig = datasetStore.config.labelDrawingConfig[index];\n    actions = labelDrawingConfig.actions;\n    value = point.y;\n    connectorAttr = {\n      'stroke-width': conf.dataConnectorStyle.connectorWidth,\n      stroke: conf.dataConnectorStyle.connectorColor,\n      transform: labelDrawingConfig.transform\n    };\n    labelDrawingConfig.args.cursor = point.labellink ? 'pointer' : 'default';\n    // temporary fix till the time fill is inherited from the parent nodes in VML\n    if (labelDrawingConfig.args && labelDrawingConfig.css) {\n      labelDrawingConfig.args.fill = labelDrawingConfig.css.color || labelDrawingConfig.css.fill;\n    }\n\n    if (value === null || value === UNDEF || !shapeArgs) {\n      if (dataLabel) {\n        dataLabel.removeCSS(removeCSSProps);\n        dataLabel && animationManager.setAnimation({\n          el: dataLabel,\n          attr: labelDrawingConfig.args,\n          component: datasetStore\n        });\n        dataLabel && dataLabel.css(labelDrawingConfig.css);\n      } else {\n        dataLabel = animationManager.setAnimation({\n          el: 'text',\n          label: 'dataLabel',\n          attr: labelDrawingConfig.args,\n          css: labelDrawingConfig.css,\n          container: dataLabelsGroup,\n          component: datasetStore\n        });\n        point.addGraphicalElement('dataLabel', dataLabel);\n      }\n      dataLabel.outlineText(conf.showTextOutline, labelDrawingConfig.args.fill);\n    } else {\n      drawConnector = !(isFunnel && index === 0 && conf.streamLinedData);\n      if (point.plot) {\n        dataLabel && dataLabel.removeCSS(removeCSSProps); // Remove text css\n        dataLabel = animationManager.setAnimation({\n          el: dataLabel || 'text',\n          label: 'dataLabel',\n          attr: labelDrawingConfig.args,\n          css: labelDrawingConfig.css,\n          container: dataLabelsGroup,\n          component: datasetStore\n        });\n        dataLabel.outlineText(conf.showTextOutline, labelDrawingConfig.args.fill);\n        point.addGraphicalElement('dataLabel', dataLabel);\n\n        connector = animationManager.setAnimation({\n          el: connector || 'path',\n          attr: drawConnector && connectorAttr,\n          container: dataLabelsGroup,\n          callback: function () {\n            conf.showLabelsAtCenter && this.hide();\n          },\n          component: datasetStore,\n          label: 'connector'\n        });\n        drawConnector && point.addGraphicalElement('connector', connector);\n      }\n\n      toolTipController.enableToolTip(dataLabel, point.originalText);\n\n      // Previous click handlers are removed before attaching new ones when chart is updated or resized\n      if (!isNewDataLabel) {\n        // Applying dirty check as error arises in IE8\n        point.labelClickFn && dataLabel.off('fc-click', point.labelClickFn);\n        point.actionsClick && dataLabel.off('fc-click', point.actionsClick);\n      }\n      eventArgs = {\n        index: point.index,\n        link: point.link,\n        value: point.y,\n        displayValue: point.displayValueArgs,\n        categoryLabel: point.categoryLabel,\n        dataIndex: point.index || BLANK,\n        toolText: point.toolText,\n        label: point.categoryLabel,\n        color: point.rawColor,\n        alpha: point.rawAlpha,\n        showValue: point.showValue,\n        isSliced: point.isSliced,\n        borderColor: point.plotBorderColor,\n        borderAlpha: point.plotBorderAlpha,\n        hoverColor: rolloverAttr.color,\n        hoverAlpha: rolloverAttr.opacity,\n        borderHoverColor: rolloverAttr.rawBorderColor,\n        borderHoverAlpha: rolloverAttr.borderAlpha,\n        borderHoverThickness: rolloverAttr['stroke-width'],\n        id: point.id\n      };\n      dataLabel.data(EVENTARGS, eventArgs);\n      point.labellink && dataLabel.on('fc-click', (function (_dataLabel, labellink) {\n        point.labelClickFn = function () {\n          labelClickFn.call(_dataLabel, chart, labellink);\n        };\n        return point.labelClickFn;\n      })(dataLabel, point.labellink));\n\n      !point.doNotSlice && dataLabel.on('fc-click', (function (context) {\n        point.actionsClick = function () {\n          actions.click.call(context);\n        };\n        return point.actionsClick;\n      })(labelDrawingConfig.context));\n\n      // hover effect is attached only once\n      isNewDataLabel && dataLabel.hover(actions.hover[0], actions.hover[1]);\n    }\n    if (!showLabelsAtCenter) {\n      connectorStartY = labelY - yShift - (point.distributionFactor * lineHeight);\n      connectorEndY = labelY - yShift;\n      lastConnectorEndY = connectorEndSwitchHistoryY[point.alignmentSwitch];\n\n      if (conf.lastplotY !== UNDEF && lastConnectorEndY !== UNDEF &&\n                    lastConnectorEndY - connectorEndY < lineHeight) {\n        connectorEndY = lastConnectorEndY - lineHeight;\n        labelY = connectorEndY;\n      }\n\n      point.displayValue && (connectorEndSwitchHistoryY[point.alignmentSwitch] = connectorEndY);\n      conf.lastplotY = point.plotY;\n\n      if (conf.labelAlignment === conf.alignmentType.alternate) {\n        if (point.alignmentSwitch) {\n          connectorEndX = labelX + blankSpace + point.virtualWidth;\n          connectorStartX = connectorEndX + labelDistance +\n                        (point.distributionFactor * conf.globalMinXShift);\n        } else {\n          connectorEndX = labelX - blankSpace;\n          connectorStartX = connectorEndX - (labelDistance - (point.lOverflow || 0)) -\n                        (point.distributionFactor * conf.globalMinXShift);\n        }\n      } else {\n        connectorEndX = labelX - blankSpace;\n        connectorStartX = connectorEndX - (labelDistance - (point.lOverflow || 0)) -\n                    (point.distributionFactor * conf.globalMinXShift);\n      }\n\n      // Drawing the connector for labels\n      // Check if the label is not blank and,\n      // label is not the first label of Funnel Chart\n      if ((typeof displayValue !== 'undefined' && displayValue !== BLANKSTRING) &&\n                    !(isFunnel && index === 0 && streamLinedData)) {\n        connectorPath = [M, connectorStartX, connectorStartY, L, connectorEndX, connectorEndY];\n\n        animationManager.setAnimation({\n          el: connector,\n          state: 'transform',\n          label: 'connector',\n          attr: {\n            path: connectorPath,\n            'shape-rendering': (connectorStartY === connectorEndY) && connectorEndY < 1 ? CRISP : BLANK\n          },\n          component: datasetStore\n        });\n        connector.show();\n      } else {\n        connector && animationManager.setAnimation({\n          el: connector,\n          component: datasetStore\n        });\n      }\n\n      if (index === 0 && streamLinedData) {\n        yD = (labelY + (dataStore[1].plot.dy || 0));\n      } else {\n        yD = (connectorEndY + (plotItem.dy || 0));\n      }\n\n      if (displayValue !== BLANKSTRING) {\n        animationManager.setAnimation({\n          el: dataLabel,\n          state: 'transform',\n          attr: { transform: ['t', labelX, yD] },\n          component: datasetStore,\n          label: 'dataLabel'\n        });\n        dataLabel.show();\n      } else {\n        dataLabel && animationManager.setAnimation({\n          el: dataLabel,\n          component: datasetStore\n        });\n      }\n    } else {\n      if (index === 0 && streamLinedData) {\n        // access to the first plot item\n        yD = (labelY - yDisplacement + (dataStore[1].plot.distanceAvailed || 0));\n      } else {\n        yD = (labelY - yDisplacement + (plotItem.distanceAvailed || 0));\n      }\n\n      if (displayValue !== BLANKSTRING) {\n        animationManager.setAnimation({\n          el: dataLabel,\n          attr: { transform: ['t', labelX, yD] },\n          component: datasetStore\n        });\n        dataLabel.show();\n      } else {\n        dataLabel && animationManager.setAnimation({\n          el: dataLabel,\n          component: datasetStore\n        });\n      }\n\n      // If labels can't be shown, hide the data labels if they exist.\n      if (!canLabelBeShown && point.getGraphicalElement('dataLabel')) {\n        point.getGraphicalElement('dataLabel').hide();\n      }\n    }\n\n    dataLabel.attr({ 'text-bound': [style.backgroundColor, style.borderColor, style.borderThickness,\n      style.borderPadding, style.borderRadius, style.borderDash] });\n  }\n\n  /**\n   * Draws individual trackers\n   * @param {Object} set point object\n   */\n  drawTracker () {\n    var point = this,\n      datasetStore = point.getLinkedParent(),\n      chart = datasetStore.getFromEnv('chart'),\n      renderer = chart.getFromEnv('paper'),\n      trackerGroup = chart.getChildContainer('trackerGroup'),\n      shapeArgs,\n      trackerObj,\n      trackerLabel = +new Date(),\n      graphic,\n      rolloverAttr,\n      eventArgs;\n\n    if (!point) {\n      return;\n    }\n    graphic = point.getGraphicalElement('graphic');\n    trackerObj = point.getGraphicalElement('trackerObj');\n\n    if (graphic) {\n      shapeArgs = graphic.Shapeargs.silhuette;\n      rolloverAttr = point.setRolloverAttr;\n      eventArgs = {\n        index: point.index,\n        link: point.link,\n        value: point.y,\n        displayValue: point.displayValueArgs,\n        categoryLabel: point.categoryLabel,\n        dataIndex: point.index || BLANK,\n        toolText: point.toolText,\n        label: point.categoryLabel,\n        color: point.rawColor,\n        alpha: point.rawAlpha,\n        showValue: point.showValue,\n        isSliced: point.isSliced,\n        borderColor: point.plotBorderColor,\n        borderAlpha: point.plotBorderAlpha,\n        hoverColor: rolloverAttr.color,\n        hoverAlpha: rolloverAttr.opacity,\n        borderHoverColor: rolloverAttr.rawBorderColor,\n        borderHoverAlpha: rolloverAttr.borderAlpha,\n        borderHoverThickness: rolloverAttr['stroke-width'],\n        id: point.id\n      };\n      if (datasetStore.config.usePattern) {\n        eventArgs.pattern = {\n          patternType: point.patternAttr.patternType,\n          patternColor: point.patternAttr.color,\n          patternBgColor: point.patternAttr.patternBgColor === TRACKER_FILL ? UNDEF : point.patternAttr.patternBgColor\n        };\n        delete eventArgs.color;\n      }\n      point.datasetIndex = point.index;\n      if (trackerObj) {\n        trackerObj.attr({\n          path: shapeArgs,\n          isTracker: trackerLabel,\n          fill: TRACKER_FILL,\n          stroke: noneStr,\n          transform: 't0,' + (point.plot._startTranslateY || 0),\n          cursor: point.link ? POINTER : DEFAULT\n        });\n      } else {\n        trackerObj = renderer.path(shapeArgs, trackerGroup)\n          .attr({\n            isTracker: trackerLabel,\n            fill: TRACKER_FILL,\n            stroke: noneStr,\n            transform: 't0,' + (point.plot._startTranslateY || 0),\n            cursor: point.link ? POINTER : DEFAULT\n          });\n\n        point.addGraphicalElement('trackerObj', trackerObj);\n      }\n      trackerObj.data(EVENTARGS, eventArgs);\n      trackerObj.show();\n    }\n  }\n\n  /**\n   * Method to call the drawing of a component synchronoously\n   */\n  syncDraw () {\n    var component = this;\n    // fire the preDraw event\n    component.fireEvent('predraw');\n    // If the component has an pending drawing JOB then remove that job\n    component.removeJob('draw');\n    // Now call whether the drawing or removing draw of the component in sync manner\n    component.getState('removed') ? component.removingDraw() : component.drawPlots && component.drawPlots();\n    component.addExtEventListener('animationComplete', component.__remove, component.getFromEnv('animationManager'));\n    component.childrenSyncDraw();\n\n    component.setState('dirty', false);\n    component.setState('parentChanged', false);\n    // TODO: make the draw capable of async. i.e. incase of havey draw, we will split it into multiple thread and at the end will call a call back sent from here to fire the \"drawn\" event\n    // fire the drawn event asynchronously\n    component.addJob('draw-complete', function () {\n      component.fireEvent('drawn');\n    }, priorityList.instant);\n  }\n}\n\nexport default FunnelPyramidBasePoint;\n","import Pyramid from '@fusioncharts/widgets/src/chart/pyramid';\nexport default Pyramid;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport FunnelPyramidBase from '../_internal/funnelpyramidbase';\nimport PyramidDataset from '../../dataset/pyramid';\n\nconst DS_TYPE = 'pyramid',\n  FRIENDLY_NAME = 'Funnel Chart';\n\n/**\n * Class for Pyramid chart\n * @class Pyramid\n * @extends {FunnelPyramidBase}\n */\nclass Pyramid extends FunnelPyramidBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Pyramid';\n  }\n  /**\n * Creates an instance of Pyramid.\n * @memberof Pyramid\n */\n  constructor () {\n    super();\n\n    this.useSortedData = false;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Pyramid';\n  }\n  /**\n * Sets default configuration\n * @memberof Pyramid\n */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = FRIENDLY_NAME;\n    config.defaultDatasetType = DS_TYPE;\n  }\n  /**\n   * Configures Attributes of chart\n   *\n   * @memberof Funnel\n   */\n  configureAttributes () {\n    super.configureAttributes();\n    this.config.PLOT_COLOR_INDEX_START = 0;\n    this.alignLegendWithCanvas = 0;\n  }\n  /**\n * This method return the dataset definations for this chart\n * @return {Object} dataset\n * @memberof Pyramid\n */\n  getDSdef () {\n    return PyramidDataset;\n  }\n}\nexport default Pyramid;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  stubFN,\n  preDefStr,\n  pluckNumber,\n  extend2\n} from '@fusioncharts/core/src/lib';\nimport FunnelPyramidBaseDataset from '../_internal/funnelpyramidbase';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport PyramidPoint from '../_internal/data/pyramid-point';\nvar UNDEF,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE;\n/**\n * Creates PyramidDataset class\n */\nclass PyramidDataset extends FunnelPyramidBaseDataset {\n  /**\n   * Constructor function of PyramidDataset class\n   */\n  constructor () {\n    super();\n    this.preDrawingHook = function () {\n      // Not required\n    };\n    this.config.pointInContext = PyramidPoint;\n    this.config.LABEL_PLACEMENT_ITERATOR_INDEX_START = 0;\n  }/**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'pyramid';\n  }\n  /**\n    * Configures Dataset by parsing attribute values\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configure (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.config.JSONData = datasetJSON;\n    var datasetDefStore = this,\n      chartConfig = datasetDefStore.getFromEnv('chartConfig');\n\n    if (!datasetDefStore._checkValidData(datasetDefStore.config.JSONData.data)) {\n      return;\n    }\n    /**\n     * update the data before calling addlegend so that the legenditems of\n     * removed datas do not get drawn\n     */\n    datasetDefStore._configure();\n    chartConfig.showLegend && datasetDefStore.addLegend();\n  }\n  /**\n   * Configure specific attributes for pyramid\n   */\n  configureSpecifics () {\n    var datasetStore = this,\n      chart = datasetStore.getFromEnv('chart'),\n      datasetConf = datasetStore.config,\n      chartAttr = chart.getFromEnv('dataSource') ? chart.getFromEnv('dataSource').chart : {},\n      utils = datasetStore.utils(datasetStore),\n      copyProperties = utils.copyProperties;\n\n    copyProperties(chartAttr, datasetConf, [\n      ['pyramidyscale', 'yScale', pluckNumber, UNDEF, function (datasetConfig) {\n        var ys = datasetConfig.yScale;\n        datasetConfig.yScale = (ys >= 0 && ys <= 40) ? ys / 200 : 0.2;\n      }],\n      ['use3dlighting', 'use3DLighting', pluckNumber, 1]\n    ]);\n  }\n\n  /**\n   * Calculates plot position during space management\n   *\n   * @memberof PyramidDataset\n   */\n  calculatePositionOfPlots () {\n    var datasetStore = this,\n      chart = datasetStore.getFromEnv('chart'),\n      chartConfig = chart.config,\n      conf = datasetStore.config,\n      utils = datasetStore.utils(datasetStore),\n      DistributionMatrix = utils.DistributionMatrix,\n      calculatePositionCoordinate = datasetStore.calculatePositionCoordinate,\n      psmMargin = conf.psmMargin,\n      dataStore = datasetStore.getChildren('data'),\n      index, length, plotObj, unitHeight,\n      heightAllotted, widthAllotted, drawingRadius,\n      section = 2,\n      dataStoreLength = dataStore.length,\n      alignmentType,\n      distributionKey, currentSliceHeight = 0, blockLabelLenFromOffset,\n      blockLenFromOffset = 0,\n      lineHeight = conf.lineHeight,\n      mFloorFn = Math.floor, distributedResult,\n      dMatrix, adMatrix, curr, ele,\n      distributionMatrix, inclination;\n\n    datasetStore.postPlotCallback = stubFN;\n\n    chartConfig.canvasTop += chartConfig.marginTop - psmMargin.top;\n    chartConfig.effCanvasHeight =\n                heightAllotted = chartConfig.canvasHeight - (chartConfig.marginTop + chartConfig.marginBottom) +\n                                (psmMargin.top + psmMargin.bottom);\n    chartConfig.effCanvasWidth = widthAllotted = chartConfig.width - (chartConfig.marginLeft +\n                chartConfig.marginRight);\n    drawingRadius = conf.drawingRadius = widthAllotted / section;\n\n    // Calculating the left position for drawing the chart\n    conf.x = chartConfig.canvasLeft + ((chartConfig.canvasRight - chartConfig.canvasLeft) / 2);\n\n    inclination = Math.atan((widthAllotted / 2) / heightAllotted);\n\n    conf.unitHeight = unitHeight = heightAllotted / conf.sumValue;\n    conf.lastRadius = 0;\n\n    // For funnel no x shift calculation required since the shape of the funnel causes the labels to be\n    // placed in non overlapping fashion\n    conf.globalMinXShift = Math.floor((lineHeight) / Math.cos(inclination));\n\n    // Defines how to align the labels of the chart.\n    alignmentType = conf.alignmentType = {};\n\n    // Default alignment is labels placing in the right side of the pyramid, and chart is left aligned\n    alignmentType['default'] = 1;\n    alignmentType.alternate = 2;\n\n    // Length of distribution matrix is how many labels ca be placed at one\n    // side of the pyramid without overlapping\n    distributionMatrix = new DistributionMatrix(mFloorFn(heightAllotted / lineHeight));\n\n    for (index = 0, length = dataStoreLength; index < length; index++) {\n      plotObj = dataStore[index];\n      if (plotObj.getState('removed')) {\n        continue;\n      }\n\n      currentSliceHeight = plotObj.y * unitHeight;\n      // Effective length of the current slice from the top of pyramid drawing\n      blockLenFromOffset += (plotObj.y * unitHeight);\n      blockLabelLenFromOffset = blockLenFromOffset - currentSliceHeight + (currentSliceHeight / 2);\n      distributionKey = mFloorFn(blockLabelLenFromOffset / lineHeight);\n      distributionMatrix.push(plotObj, distributionKey);\n    }\n\n    distributedResult = distributionMatrix.getDistributedResult();\n\n    // Alternatively merge the data after distribution\n    dataStore.length = 0;\n    if ((distributedResult.matrix)[1] === UNDEF) {\n      [].push.apply(dataStore, (distributedResult.matrix)[0]);\n    } else {\n      dMatrix = (distributedResult.matrix)[0];\n      adMatrix = (distributedResult.matrix)[1];\n      length = Math.max(dMatrix.length, adMatrix.length);\n      for (index = 0; index < length; index++) {\n        ele = dMatrix[index];\n        curr = adMatrix[index];\n        dataStore.push(ele || curr);\n      }\n    }\n\n    switch (distributedResult.suggestion) {\n      case alignmentType['default']:\n        calculatePositionCoordinate.call(datasetStore, dataStore, false);\n        break;\n\n      case alignmentType.alternate:\n        conf.labelAlignment = alignmentType.alternate;\n        // 1st section for left labels, 2nd sector for chart itself, 3rd section for right label\n        section = 3;\n        conf.drawingRadius = drawingRadius = widthAllotted / section;\n        chartConfig.canvasLeft = (chartConfig.canvasWidth / 2) - (drawingRadius);\n        conf.x = chartConfig.canvasLeft + drawingRadius;\n        calculatePositionCoordinate.call(datasetStore, dataStore, true);\n        break;\n    }\n  }\n  /**\n   * Draws the pyramid plots\n   */\n  draw () {\n    var datasetStore = this,\n      chart = datasetStore.getFromEnv('chart'),\n      conf = datasetStore.config,\n      trackerArgs = datasetStore.config.trackerArgs = [],\n      dataStore = datasetStore.getChildren('data'),\n      index, length,\n      dataStoreLength = dataStore.length,\n      mMinFn = Math.min,\n      slicingDistance, noOfGap, halfDistance,\n      point,\n      postPlotCallbackInitiated;\n\n    if (!conf.sumValue) {\n      return;\n    }\n\n    datasetStore.config.labelDrawingConfig = datasetStore.config.labelDrawingConfig || [];\n    datasetStore.config.labelDrawingConfig.length = 0;\n\n    datasetStore.animateFunction = function (group) {\n      return function () {\n        group.attr({\n          opacity: 1\n        });\n      };\n    };\n\n    slicingDistance = conf.slicingDistance;\n    halfDistance = slicingDistance / 2;\n\n    for (index = 0, length = dataStore.length; index < length; index++) {\n      dataStore[index] && dataStore[index].shapeArgs &&\n        (dataStore[index].shapeArgs.renderer = chart.getFromEnv('paper'));\n    }\n    noOfGap = conf.noOfGap;\n    if (noOfGap) {\n      conf.perGapDistance = mMinFn(halfDistance * 1.5, slicingDistance / noOfGap);\n      conf.distanceAvailed = halfDistance;\n    }\n    index = dataStore.length;\n\n    if (conf.alreadyPlotted) {\n      datasetStore.postPlotCallback = function () {\n        if (postPlotCallbackInitiated) {\n          return;\n        }\n\n        postPlotCallbackInitiated = true;\n      };\n    }\n\n    while (index--) {\n      point = dataStore[index];\n      point.index = index;\n      point.syncDraw();\n    }\n    conf.oldLastData = Object.assign({}, dataStore[dataStore.length - 1].shapeArgs);\n    datasetStore.hide(datasetStore.getChildren('data'), dataStoreLength);\n\n    conf.connectorEndSwitchHistoryY = {};\n\n    index = dataStore.length;\n    while (index--) {\n      trackerArgs.push(dataStore[index]);\n    }\n\n    datasetStore.addJob('labelDrawID', datasetStore.drawAllLabels.bind(datasetStore), priorityList.label);\n\n    datasetStore.addJob('trackerDrawID', datasetStore.drawAllTrackers.bind(datasetStore), priorityList.tracker);\n\n    datasetStore.removePlots();\n    conf.alreadyPlotted = true;\n    conf.prevIs2d = conf.is2d;\n  }\n  /**\n   * Calculates the data plot coordinates\n   * @param {Array} dataArr data points\n   * @param {boolean} placeOtherSide whether to put on left side or right side\n   */\n  calculatePositionCoordinate (dataArr, placeOtherSide) {\n    var datasetStore = this,\n      conf = datasetStore.config,\n      is2d = conf.is2d,\n      x = conf.x,\n      // plotItemArr = datasetStore.graphics.plotItems || [],\n      chart = datasetStore.getFromEnv('chart'),\n      chartConfig = chart.config,\n      y = chartConfig.canvasTop,\n      unitHeight = conf.unitHeight,\n      labelDistance = conf.labelDistance,\n      showLabelsAtCenter = conf.showLabelsAtCenter,\n      fontSize = chartConfig.style.fontSize,\n      yShift = fontSize * 0.3,\n      yScale = conf.yScale,\n      blankSpace = conf.blankSpace,\n      lastRadius = conf.lastRadius,\n      smartLabel = datasetStore.getFromEnv('smartLabel'),\n      index, length,\n      point, sliceHeight,\n      lastIndex = dataArr.length - 1,\n      alignmentSwitchToggle = false,\n      distributionOffset = 0,\n      labelMeasurement, newRadius,\n      negativeSpanningDataEnd,\n      normalizedLabel,\n      lineHeight = conf.lineHeight,\n      totalValues = 0,\n      // Base of the  maximum trimmed label.\n      trimmedInfo = {\n        flag: false,\n        point: UNDEF,\n        sLabel: UNDEF,\n        setAll: function (flag, pt, sLabel) {\n          this.flag = flag;\n          this.point = pt;\n          this.sLabel = sLabel;\n        }\n      },\n      // Base of the maximum spanned labels\n      largestLabel = {\n        point: UNDEF,\n        sLabel: UNDEF,\n        set: function (calcFn, predicate) {\n          var _calcFn = calcFn,\n            _predicate = predicate;\n          return function (pt, sLabel) {\n            var existingLabelSpan,\n              currentLabelSpan;\n            if (pt.dontPlot) {\n              return;\n            }\n\n            if (!(this.point && this.sLabel)) {\n              this.point = pt;\n              this.sLabel = sLabel;\n              return;\n            }\n            existingLabelSpan = _calcFn(this.point, this.sLabel);\n            currentLabelSpan = _calcFn(pt, sLabel);\n            if (_predicate(existingLabelSpan, currentLabelSpan)) {\n              this.point = pt;\n              this.sLabel = sLabel;\n            }\n          };\n        }\n      },\n      leftTrimmedInfo = {},\n      rightTrimmedInfo = {},\n      lLargestLabel = {},\n      rLargestLabel = {},\n      xPos,\n      chartWidth = chart.config.width - 2,\n      slicingGapPosition = conf.slicingGapPosition = {};\n\n    extend2(leftTrimmedInfo, trimmedInfo);\n    extend2(rightTrimmedInfo, trimmedInfo);\n\n    leftTrimmedInfo.setAll = function (flag, pt, sLabel) {\n      var _point = this.point,\n        _sLabel = this.sLabel,\n        existingLabelSpan,\n        currentLabelSpan;\n\n      this.flag = flag;\n      if (!(_point && _sLabel)) {\n        this.point = pt;\n        this.sLabel = sLabel;\n        return;\n      }\n      existingLabelSpan = _point.labelX - (_sLabel.oriTextWidth - _sLabel.width);\n      currentLabelSpan = pt.labelX - (sLabel.oriTextWidth - sLabel.width);\n      if (existingLabelSpan > currentLabelSpan) {\n        this.point = pt;\n        this.sLabel = sLabel;\n      }\n    };\n\n    // Override the base class method for labels which are kept right\n    rightTrimmedInfo.setAll = function (flag, pt, sLabel) {\n      var _point = this.point,\n        _sLabel = this.sLabel,\n        existingLabelSpan,\n        currentLabelSpan;\n\n      this.flag = flag;\n      if (!(_point && _sLabel)) {\n        this.point = pt;\n        this.sLabel = sLabel;\n        return;\n      }\n      existingLabelSpan = _point.labelX + _sLabel.oriTextWidth;\n      currentLabelSpan = pt.labelX + sLabel.oriTextWidth;\n      if (existingLabelSpan < currentLabelSpan) {\n        this.point = pt;\n        this.sLabel = sLabel;\n      }\n    };\n\n    extend2(lLargestLabel, largestLabel);\n    extend2(rLargestLabel, largestLabel);\n\n    lLargestLabel.set = (function () {\n      return largestLabel.set.apply(lLargestLabel, [function (pt) {\n        return pt.labelX;\n      }, function (existingLabelSpan, currentLabelSpan) {\n        return existingLabelSpan > currentLabelSpan;\n      }]);\n    })();\n\n    rLargestLabel.set = (function () {\n      return largestLabel.set.apply(rLargestLabel, [function (pt, sLabel) {\n        return pt.labelX + sLabel.oriTextWidth;\n      }, function (existingLabelSpan, currentLabelSpan) {\n        return existingLabelSpan < currentLabelSpan;\n      }]);\n    })();\n\n    conf.noOfGap = 0;\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    for (index = 0, length = dataArr.length; index < length; index++) {\n      point = dataArr[index];\n      if (!point) {\n        continue;\n      }\n      point.x = index;\n      if (point.plot) {\n        point.isSliced = !!point.isSliced || !!conf.isSliced;\n      }\n      point.isSliced = pluckNumber(point.isSliced, conf.isSliced);\n\n      placeOtherSide && (alignmentSwitchToggle = !alignmentSwitchToggle);\n\n      if (point.isSliced) {\n        xPos = point.x;\n        if (xPos && !slicingGapPosition[xPos]) {\n          slicingGapPosition[xPos] = true;\n          conf.noOfGap += 1;\n        }\n        if (xPos < lastIndex) {\n          slicingGapPosition[xPos + 1] = true;\n          conf.noOfGap += 1;\n        }\n      }\n\n      smartLabel.setStyle(point.style);\n      point.oriText = point.displayValue;\n      labelMeasurement = labelMeasurement = smartLabel\n        .getSmartText(point.displayValue, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\n\n      totalValues += point.y;\n      newRadius = conf.drawingRadius * totalValues / conf.sumValue;\n      sliceHeight = unitHeight * point.y;\n      point.shapeArgs =\n      {\n        x: x,\n        y: y,\n        R1: lastRadius,\n        R2: newRadius,\n        h: sliceHeight,\n        r3dFactor: yScale,\n        gStr: 'point',\n        is2D: is2d,\n        use3DLighting: !!conf.use3DLighting,\n        renderer: datasetStore.getFromEnv('paper')\n      };\n\n      if (showLabelsAtCenter) {\n        point.labelAline = POSITION_MIDDLE;\n        point.labelX = x;\n        point.labelY = (is2d ? y : y + (yScale * lastRadius)) + (sliceHeight / 2) + yShift;\n      } else {\n        point.labelAline = POSITION_START;\n        point.alignmentSwitch = alignmentSwitchToggle;\n        point.distributionFactor = point.distributionFactor || 0;\n\n        if (alignmentSwitchToggle) {\n          point.labelX = x - (labelDistance + (newRadius + lastRadius) / 2 +\n                            blankSpace + labelMeasurement.width);\n          point.labelX -= point.distributionFactor * conf.globalMinXShift;\n          lLargestLabel.set(point, labelMeasurement);\n        } else {\n          point.labelX = x + labelDistance + (newRadius + lastRadius) / 2 + blankSpace;\n          point.labelX += point.distributionFactor * conf.globalMinXShift;\n          rLargestLabel.set(point, labelMeasurement);\n        }\n        distributionOffset = point.distributionFactor * lineHeight;\n\n        point.labelY = y + yShift + (sliceHeight / 2) + distributionOffset;\n      }\n\n      // Checking text overflow for alternate alignment\n      if (placeOtherSide) {\n        if (alignmentSwitchToggle && (point.labelX < 0)) {\n          // Left and behind the margin\n          negativeSpanningDataEnd = point.labelX + labelMeasurement.width;\n          normalizedLabel = smartLabel.getSmartText(point.displayValue, negativeSpanningDataEnd,\n            Number.POSITIVE_INFINITY, true);\n          point.labelX = 2;\n          point.isLabelTruncated = true;\n          point.displayValue = normalizedLabel.text;\n          point.virtualWidth = normalizedLabel.maxWidth;\n          leftTrimmedInfo.setAll(true, point, normalizedLabel);\n        } else if (!alignmentSwitchToggle && (point.labelX + labelMeasurement.width > chartWidth)) {\n          // Right side and spanning the margin\n          normalizedLabel = smartLabel.getSmartText(point.displayValue, chartWidth -\n                            point.labelX, Number.POSITIVE_INFINITY, true);\n          point.isLabelTruncated = true;\n          point.displayValue = normalizedLabel.text;\n          point.virtualWidth = normalizedLabel.maxWidth;\n          rightTrimmedInfo.setAll(true, point, normalizedLabel);\n        }\n\n        point.pWidth = point.virtualWidth || labelMeasurement.width;\n        distributionOffset = point.distributionFactor * lineHeight;\n        point.labelY = y + yShift + (sliceHeight / 2) + distributionOffset;\n      }\n\n      y += sliceHeight;\n      point.plotX = x;\n      point.plotY = y - sliceHeight / 2;\n      lastRadius = newRadius;\n      point.virtualWidth = point.virtualWidth || labelMeasurement.width;\n    }\n\n    // Recalculate the space one more time. Ideally this should be given by space manager.\n    // However in the current scope space manager cannot be called from here.\n    datasetStore.findBestPosition(dataArr, {\n      'lTrimmedInfo': leftTrimmedInfo,\n      'rTrimmedInfo': rightTrimmedInfo,\n      'lLargestLabel': lLargestLabel,\n      'rLargestLabel': rLargestLabel\n    });\n  }\n  /**\n   * Provides tooltip options\n   * @param {Object} options congigurations of data points\n   * @return {Object} returns tooltip options\n   */\n  getTooltipMacroStub (options) {\n    var datasetStore = this,\n      conf = datasetStore.config,\n      numberFormatter = datasetStore.getFromEnv('number-formatter'),\n      baseStub, percentOfPrevValue;\n\n    percentOfPrevValue = conf.percentOfPrevious ? options.pValue : numberFormatter.percentValue(options.dataValue /\n      options.prevValue * 100);\n    baseStub = super.getTooltipMacroStub(options);\n    baseStub.percentValue = conf.percentOfPrevious ? numberFormatter.percentValue(options.dataValue /\n      options.highestValue * 100) : options.pValue;\n    baseStub.percentOfPrevValue = percentOfPrevValue;\n\n    return baseStub;\n  }\n}\nexport default PyramidDataset;\n","import FunnelPyramidBasePoint from './funnelpyramidbase-point';\nimport { BLANK, preDefStr } from '@fusioncharts/core/src/lib';\n\nvar UNDEF,\n  POINTER = 'pointer',\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_END = preDefStr.POSITION_END,\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  textHAlign = {\n    right: POSITION_END,\n    left: POSITION_START,\n    middle: POSITION_MIDDLE,\n    start: POSITION_START,\n    end: POSITION_END,\n    center: POSITION_MIDDLE,\n    'undefined': BLANK,\n    BLANK: BLANK\n  };\nclass PyramidPoint extends FunnelPyramidBasePoint {\n  /**\n   * Consfigures the point\n   *\n   * @param {any} [options={}]\n   * @memberof PyramidPoint\n   */\n  configure (options = {}) {\n    for (var key in options) {\n      this[key] = options[key];\n    }\n    this.upperRadiusFactor = 0;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'data';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'pyramidpoint';\n  }\n\n  getModifiedCurrentValue (totalValue) {\n    return totalValue + (this.y / 2);\n  }\n\n  // eslint-disable-next-line\n  getRatioK (context, currentValue) {\n    var conf = context.config;\n    return currentValue ? currentValue / conf.sumValue : 1;\n  }\n\n  // eslint-disable-next-line\n  getLowestRadiusFactor () {\n    return 1;\n  }\n\n  // eslint-disable-next-line\n  allocatePosition () {}\n  /**\n   * Draws individual data plots\n   * @return {Object} plot item object\n   */\n  drawPlots () {\n    var point = this,\n      index = point.index,\n      datasetStore = point.getLinkedParent(),\n      conf = datasetStore.config,\n      toolTipController = datasetStore.getFromEnv('toolTipController'),\n      // plotItems = datasetStore.graphics.plotItems,\n      value = point.y,\n      displayValue = point.displayValue,\n      chartSliced = conf.isSliced,\n      textDirection = BLANK,\n      chart = datasetStore.getFromEnv('chart'),\n      animationManager = datasetStore.getFromEnv('animationManager'),\n      //  data = datasetStore.components.data,\n      trackerGroup = chart.getChildContainer('trackerGroup'),\n      dataLabelsGroup = chart.getChildContainer('datalabelsGroup'),\n      graphicsGroup = chart.getChildContainer().plotGroup,\n      sliced, plotItem = point.plot, translateXY,\n      setLink = !!point.link,\n      graphic,\n      tempConfig,\n      trackerObj,\n      Point = conf.pointInContext,\n      distanceAvailed = conf.distanceAvailed,\n      labelAlign = point.labelAline,\n      css = point.appliedStyle,\n      // attaching the hoverHandler made once in constructor of funnel-pyramid-base\n      hoverHandler = this.hoverHandler,\n      parentCSS = point.style,\n      setRolloutAttr = point.setRolloutAttr,\n      setRolloverAttr = point.setRolloverAttr,\n      setRolloverProperties = point.rolloverProperties,\n      sliceContext = {},\n      // legend = datasetStore.getFromEnv('legend'),\n      textDrawingArgs,\n      labelDrawingConfigArr = datasetStore.config.labelDrawingConfig,\n      pointFill,\n      labelDrawingConfig;\n\n    // In case of streamlinedData = 0, the first plot is not configured\n    if (!(point instanceof PyramidPoint)) {\n      tempConfig = point;\n      point = new Point();\n      point.configure(tempConfig);\n      datasetStore.components.data[index] = point;\n    }\n\n    if (conf.prevIs2d && conf.prevIs2d !== conf.is2d) {\n      animationManager.setAnimation({\n        el: graphicsGroup,\n        attr: {opacity: 1},\n        component: datasetStore\n      });\n      animationManager.setAnimation({\n        el: dataLabelsGroup,\n        attr: {opacity: 1},\n        component: datasetStore\n      });\n    }\n\n    pointFill = (css && css.color) || (parentCSS && parentCSS.color) || datasetStore._chartLevelAttr.color;\n    sliced = chartSliced ? 1 : point.isSliced;\n\n    textDrawingArgs = {\n      text: displayValue,\n      direction: textDirection,\n      cursor: setLink ? POINTER : BLANK,\n      x: 0,\n      y: 0,\n      fill: pointFill,\n      'text-anchor': textHAlign[labelAlign]\n    };\n\n    if (value === null || value === UNDEF || !point.shapeArgs) {\n      labelDrawingConfigArr[index] = (labelDrawingConfig = {\n        args: textDrawingArgs,\n        css: css,\n        point: point\n      });\n\n      return;\n    }\n\n    graphic = point.getGraphicalElement('graphic');\n    trackerObj = point.getGraphicalElement('trackerObj');\n\n    // Hover consmetics\n    !setRolloutAttr && (point.setRolloutAttr = setRolloutAttr = {});\n    !setRolloverAttr && (point.setRolloverAttr = setRolloverAttr = {});\n    if (point.hoverEffects) {\n      // hover-out cosmetics\n      setRolloutAttr.color = point.rawColor;\n      setRolloutAttr.opacity = point.rawAlpha;\n      setRolloutAttr['stroke-width'] = point.borderWidth;\n      setRolloutAttr.stroke = point.borderColor;\n\n      // hover-in cosmetics\n      setRolloverAttr.color = setRolloverProperties.color;\n      setRolloverAttr.opacity = setRolloverProperties.alpha;\n      setRolloverAttr['stroke-width'] = setRolloverProperties.borderWidth;\n      setRolloverAttr.stroke = setRolloverProperties.borderColor;\n      setRolloverAttr.rawBorderColor = setRolloverProperties.rawBorderColor;\n      setRolloverAttr.borderAlpha = setRolloverProperties.borderAlpha;\n    } else {\n      // If hoverEffects is disabled, clear all cosmetics\n      setRolloutAttr = point.setRolloutAttr = {};\n      setRolloverAttr = point.setRolloverAttr = {};\n    }\n\n    if (!plotItem) {\n      point.shapeArgs.graphics = plotItem;\n      point.plot = plotItem = {};\n      graphic = datasetStore.pyramidFunnelShape(point.shapeArgs).attr({\n        fill: point.color,\n        'stroke-width': point.borderWidth,\n        stroke: point.borderColor\n      });\n      trackerObj = animationManager.setAnimation({\n        el: 'path',\n        container: trackerGroup,\n        component: datasetStore\n      })\n        .on('fc-click', datasetStore.plotMouseUp, sliceContext)\n        .hover(hoverHandler, hoverHandler);\n\n      point.addGraphicalElement('graphic', graphic);\n      point.addGraphicalElement('trackerObj', trackerObj);\n\n      labelDrawingConfigArr[index] = (labelDrawingConfig = {\n        args: textDrawingArgs,\n        css: css,\n        point: point\n      });\n    } else {\n      point.shapeArgs.graphics = graphic;\n      graphic = datasetStore.pyramidFunnelShape(point.shapeArgs);\n      point.addGraphicalElement('graphic', graphic);\n\n      animationManager.setAnimation({\n        el: graphic,\n        attr: {\n          fill: point.color,\n          'stroke-width': point.borderWidth,\n          stroke: point.borderColor\n        },\n        component: datasetStore\n      });\n      graphic.show();\n\n      labelDrawingConfigArr[index] = (labelDrawingConfig = {\n        args: textDrawingArgs,\n        css: css,\n        point: point\n      });\n    }\n\n    graphic.lighterHalf && graphic.lighterHalf.addPattern(point.patternAttr, conf.usePattern);\n    graphic.darkerHalf && graphic.darkerHalf.addPattern(point.patternAttr, conf.usePattern);\n\n    if (conf.showTooltip) {\n      toolTipController.enableToolTip(trackerObj, point.toolText);\n    } else {\n      toolTipController.disableToolTip(trackerObj);\n    }\n\n    plotItem.value = value;\n    plotItem.displayValue = displayValue;\n    plotItem.sliced = !!sliced;\n    plotItem.cursor = setLink ? POINTER : BLANK;\n    plotItem.x = point.x;\n    plotItem.index = index;\n\n    sliceContext.datasetStore = datasetStore;\n    sliceContext.plotItem = plotItem;\n\n    trackerObj.off('fc-click', datasetStore.slice);\n    !point.doNotSlice && trackerObj.on('fc-click', datasetStore.slice, sliceContext);\n\n    labelDrawingConfig.context = sliceContext;\n    labelDrawingConfig.actions = {\n      click: datasetStore.slice,\n      hover: [hoverHandler, hoverHandler]\n    };\n\n    plotItem.dy = 0;\n\n    if (conf.noOfGap) {\n      if (distanceAvailed) {\n        plotItem._startTranslateY = translateXY = 't0,' + distanceAvailed;\n        plotItem.dy = plotItem.distanceAvailed = distanceAvailed;\n      }\n\n      if (conf.slicingGapPosition[point.x]) {\n        conf.distanceAvailed -= conf.perGapDistance;\n      }\n    } else {\n      plotItem._startTranslateY = translateXY = 't0,' + 0;\n    }\n\n    animationManager.setAnimation({\n      el: graphic,\n      attr: {transform: translateXY},\n      component: datasetStore\n    });\n    labelDrawingConfig.transform = translateXY;\n    return plotItem;\n  }\n}\n\nexport default PyramidPoint;\n","import RadialBar from '@fusioncharts/widgets/src/chart/radialbar';\nexport default RadialBar;\n","import CommonAPI from '@fusioncharts/charts/src/chart/_internal/commonchartapi';\nimport legendItemFactory from '@fusioncharts/charts/src/factories/legend';\nimport { _manageLegendSpace } from '@fusioncharts/charts/src/chart/_internal/legend-spacemanager';\nimport RadialTrack from '../../dataset/radialtrack';\nimport RadialBarPlot from '../../../src/dataset/radialbar';\nimport { pluck, pluckFontSizeMaintainUnit, pluckNumber, UNDEF, convertToPixels, PXSTRING, parseUnsafeString } from '@fusioncharts/core/src/lib';\nimport { findArc, pointOnCircleFromCenter, changeAngleBase, normaliseAngle } from '@fusioncharts/utils/src/scale-utils/polar-util';\n\nconst TICK_VALUE_GAP = 8,\n  ICON_PADDING = 10;\n\n/**\n * Creates the padding object for padding of labels\n * @param {String} paddingStr string with padding values\n * @returns {Object} Object with directional padding values\n */\nfunction createLabelPadding (paddingStr) {\n  let labelPaddingArr = paddingStr.split(' ').map(padding => parseInt(padding, 10));\n\n  if (labelPaddingArr.every(padding => isNaN(padding))) {\n    return {\n      top: 6,\n      right: 10,\n      bottom: 6,\n      left: 10\n    };\n  }\n\n  if (labelPaddingArr.length === 1) {\n    labelPaddingArr.push(labelPaddingArr[0]);\n    labelPaddingArr.push(labelPaddingArr[0]);\n    labelPaddingArr.push(labelPaddingArr[0]);\n  } else if (labelPaddingArr.length === 2) {\n    labelPaddingArr.push(labelPaddingArr[0]);\n    labelPaddingArr.push(labelPaddingArr[1]);\n  } else if (labelPaddingArr.length === 3) {\n    labelPaddingArr.push(labelPaddingArr[1]);\n  }\n\n  labelPaddingArr.map((padding, index) => {\n    if (isNaN(padding)) {\n      if (index === 0) {\n        return 6;\n      } else if (index === 1) {\n        return labelPaddingArr[index - 1];\n      }\n\n      // eslint-disable-next-line no-else-return\n      return labelPaddingArr[index - 2];\n    }\n\n    return padding;\n  });\n\n  return {\n    top: labelPaddingArr[0],\n    right: labelPaddingArr[1],\n    bottom: labelPaddingArr[2],\n    left: labelPaddingArr[3]\n  };\n}\n\n/**\n * Populates radial bar dataset.\n */\nfunction radialBarFactoryFn (chart) {\n  let parent = chart,\n    config = chart.config,\n    bars = parent.getChildren(RadialBarPlot.getType()),\n    lenBars = bars ? bars.length : 0,\n    dataSource = chart.getFromEnv('dataSource');\n  if (Array.isArray(dataSource.data)) {\n    // when no of tracks greater than existing\n    if (dataSource.data.length > lenBars) {\n      let children = parent.getChildren('plot');\n      for (let child = 0; child < lenBars; child++) {\n        children[child].configure({\n          startangle: config.startangle,\n          endangle: config.endangle,\n          barstartradius: config.barstartradius,\n          barendradius: config.barendradius,\n          barborder: config.barborder,\n          barbordercolor: config.barbordercolor,\n          barborderalpha: config.barborderalpha,\n          barborderthickness: config.barborderthickness,\n          color: config.plots[child].color,\n          baralpha: config.plots[child].baralpha,\n          legenditemalpha: config.plots[child].baralpha,\n          legenditemcolor: config.plots[child].color,\n          legenditembordercolor: config.barbordercolor,\n          value: config.plots[child].value,\n          dataValue: config.plots[child].dataValue,\n          label: config.plots[child].label,\n          iconurl: config.plots[child].iconurl,\n          contexttext: config.plots[child].contextlabeltext,\n          tooltext: config.plots[child].tooltext,\n          plotHidden: config.plots[child].initiallyhidden,\n          plotIndex: child\n        });\n      }\n      for (let child = 0; child < dataSource.data.length - lenBars; child++) {\n        let childInstance = new RadialBarPlot(),\n          childComp = parent.attachChild(childInstance, 'plot');\n        childComp.configure({\n          startangle: config.startangle,\n          endangle: config.endangle,\n          barstartradius: config.barstartradius,\n          barendradius: config.barendradius,\n          barborder: config.barborder,\n          barbordercolor: config.barbordercolor,\n          barborderalpha: config.barborderalpha,\n          barborderthickness: config.barborderthickness,\n          color: config.plots[child].color,\n          baralpha: config.plots[child].baralpha,\n          legenditemalpha: config.plots[child].baralpha,\n          legenditemcolor: config.plots[child].color,\n          legenditembordercolor: config.barbordercolor,\n          value: config.plots[child].value,\n          dataValue: config.plots[child].dataValue,\n          label: config.plots[child].label,\n          iconurl: config.plots[child].iconurl,\n          contexttext: config.plots[child].contextlabeltext,\n          tooltext: config.plots[child].tooltext,\n          plotHidden: config.plots[child].initiallyhidden,\n          plotIndex: child\n        });\n      }\n    } else if (dataSource.data.length === lenBars) {\n      let children = parent.getChildren('plot');\n      for (let index = 0; index < lenBars; index++) {\n        children[index].configure({\n          startangle: config.startangle,\n          endangle: config.endangle,\n          barstartradius: config.barstartradius,\n          barendradius: config.barendradius,\n          barborder: config.barborder,\n          barbordercolor: config.barbordercolor,\n          barborderalpha: config.barborderalpha,\n          barborderthickness: config.barborderthickness,\n          color: config.plots[index].color,\n          baralpha: config.plots[index].baralpha,\n          legenditemalpha: config.plots[index].baralpha,\n          legenditemcolor: config.plots[index].color,\n          legenditembordercolor: config.barbordercolor,\n          value: config.plots[index].value,\n          dataValue: config.plots[index].dataValue,\n          label: config.plots[index].label,\n          iconurl: config.plots[index].iconurl,\n          contexttext: config.plots[index].contextlabeltext,\n          tooltext: config.plots[index].tooltext,\n          plotHidden: config.plots[index].initiallyhidden,\n          plotIndex: index\n        });\n      };\n    } else {\n      let children = parent.getChildren('plot');\n      for (let index = 0; index < dataSource.data.length; index++) {\n        children[index].configure({\n          startangle: config.startangle,\n          endangle: config.endangle,\n          barstartradius: config.barstartradius,\n          barendradius: config.barendradius,\n          barborder: config.barborder,\n          barbordercolor: config.barbordercolor,\n          barborderalpha: config.barborderalpha,\n          barborderthickness: config.barborderthickness,\n          color: config.plots[index].color,\n          baralpha: config.plots[index].baralpha,\n          legenditemalpha: config.plots[index].baralpha,\n          legenditemcolor: config.plots[index].color,\n          legenditembordercolor: config.barbordercolor,\n          value: config.plots[index].value,\n          dataValue: config.plots[index].dataValue,\n          label: config.plots[index].label,\n          iconurl: config.plots[index].iconurl,\n          contexttext: config.plots[index].contextlabeltext,\n          tooltext: config.plots[index].tooltext,\n          plotHidden: config.plots[index].initiallyhidden,\n          plotIndex: index\n        });\n      }\n      for (let child = dataSource.data.length; child < lenBars; child++) {\n        children[child].remove();\n      }\n    }\n  } else {\n    let children = parent.getChildren('plot');\n    for (let index = 0; index < lenBars; index++) {\n      children[index].remove();\n    }\n  }\n};\n\n/**\n * Populates radial track dataset.\n */\nfunction radialTrackFactoryFn (chart) {\n  let parent = chart,\n    config = chart.config,\n    tracks = parent.getChildren(RadialTrack.getType()),\n    lenTracks = tracks ? tracks.length : 0,\n    dataSource = chart.getFromEnv('dataSource');\n\n  if (Array.isArray(dataSource.data)) {\n    // when no of tracks greater than existing\n    if (dataSource.data.length > lenTracks) {\n      let children = parent.getChildren('dataset');\n      for (let child = 0; child < lenTracks; child++) {\n        children[child].configure({\n          startangle: config.startangle,\n          endangle: config.endangle,\n          trackpadding: config.trackpadding,\n          trackmargin: config.trackmargin,\n          trackstartradius: config.trackstartradius,\n          trackendradius: config.trackendradius,\n          trackfillcolor: config.tracks[child].trackfillcolor,\n          trackalpha: config.tracks[child].trackalpha,\n          trackborder: config.trackborder,\n          trackbordercolor: config.trackbordercolor,\n          trackborderalpha: config.trackborderalpha,\n          trackborderthickness: config.trackborderthickness,\n          numTicks: config.numticks,\n          tickMarkLength: config.tickmarklength,\n          tickvaluefontsizeWithUnit: config.tickvaluefontsizeWithUnit,\n          showticks: config.showticks,\n          showtickmarks: config.showtickmarks,\n          showtickvalues: config.showtickvalues,\n          tickmarkcolor: config.tickmarkcolor,\n          tickmarkthickness: config.tickmarkthickness,\n          tickalpha: config.tickalpha,\n          tickvaluealpha: config.tickvaluealpha,\n          tickvaluelabelfont: config.tickvaluelabelfont,\n          tickvaluefontcolor: config.tickvaluefontcolor,\n          baseFontColor: config.baseFontColor,\n          tickvaluegap: TICK_VALUE_GAP,\n          label: config.tracks[child].label,\n          iconurl: config.tracks[child].iconurl,\n          labelFontColor: config.tracks[child].labelFontColor,\n          value: config.tracks[child].value\n        });\n      }\n      for (let child = 0; child < dataSource.data.length - lenTracks; child++) {\n        let childInstance = new RadialTrack(),\n          childComp = parent.attachChild(childInstance, 'dataset');\n\n        childComp.configure({\n          startangle: config.startangle,\n          endangle: config.endangle,\n          trackpadding: config.trackpadding,\n          trackmargin: config.trackmargin,\n          trackstartradius: config.trackstartradius,\n          trackendradius: config.trackendradius,\n          trackfillcolor: config.tracks[child].trackfillcolor,\n          trackalpha: config.tracks[child].trackalpha,\n          trackborder: config.trackborder,\n          trackbordercolor: config.trackbordercolor,\n          trackborderalpha: config.trackborderalpha,\n          trackborderthickness: config.trackborderthickness,\n          numTicks: config.numticks,\n          tickMarkLength: config.tickmarklength,\n          tickvaluefontsizeWithUnit: config.tickvaluefontsizeWithUnit,\n          showticks: config.showticks,\n          showtickmarks: config.showtickmarks,\n          showtickvalues: config.showtickvalues,\n          tickmarkcolor: config.tickmarkcolor,\n          tickmarkthickness: config.tickmarkthickness,\n          tickalpha: config.tickalpha,\n          tickvaluealpha: config.tickvaluealpha,\n          tickvaluelabelfont: config.tickvaluelabelfont,\n          tickvaluefontcolor: config.tickvaluefontcolor,\n          baseFontColor: config.baseFontColor,\n          tickvaluegap: TICK_VALUE_GAP,\n          label: config.tracks[child].label,\n          iconurl: config.tracks[child].iconurl,\n          labelFontColor: config.tracks[child].labelFontColor,\n          value: config.tracks[child].value\n        });\n      }\n    } else if (dataSource.data.length === lenTracks) {\n      let children = parent.getChildren('dataset');\n      for (let index = 0; index < lenTracks; index++) {\n        children[index].configure({\n          startangle: config.startangle,\n          endangle: config.endangle,\n          trackpadding: config.trackpadding,\n          trackmargin: config.trackmargin,\n          trackstartradius: config.trackstartradius,\n          trackendradius: config.trackendradius,\n          trackfillcolor: config.tracks[index].trackfillcolor,\n          trackalpha: config.tracks[index].trackalpha,\n          trackborder: config.trackborder,\n          trackbordercolor: config.trackbordercolor,\n          trackborderalpha: config.trackborderalpha,\n          trackborderthickness: config.trackborderthickness,\n          numTicks: config.numticks,\n          tickMarkLength: config.tickmarklength,\n          tickvaluefontsizeWithUnit: config.tickvaluefontsizeWithUnit,\n          showticks: config.showticks,\n          showtickmarks: config.showtickmarks,\n          showtickvalues: config.showtickvalues,\n          tickmarkcolor: config.tickmarkcolor,\n          tickmarkthickness: config.tickmarkthickness,\n          tickalpha: config.tickalpha,\n          tickvaluealpha: config.tickvaluealpha,\n          tickvaluelabelfont: config.tickvaluelabelfont,\n          tickvaluefontcolor: config.tickvaluefontcolor,\n          baseFontColor: config.baseFontColor,\n          tickvaluegap: TICK_VALUE_GAP,\n          label: config.tracks[index].label,\n          iconurl: config.tracks[index].iconurl,\n          labelFontColor: config.tracks[index].labelFontColor,\n          value: config.tracks[index].value\n        });\n      };\n    } else {\n      let children = parent.getChildren('dataset');\n      for (let child = dataSource.data.length; child < lenTracks; child++) {\n        children[child].remove();\n      }\n    }\n  } else {\n    if (lenTracks === 0) {\n      let childInstance = new RadialTrack();\n      parent.attachChild(childInstance, 'dataset');\n\n      childInstance.configure({\n        startangle: config.startangle,\n        endangle: config.endangle,\n        trackpadding: config.trackpadding,\n        trackmargin: config.trackmargin,\n        trackstartradius: config.trackstartradius,\n        trackendradius: config.trackendradius,\n        trackfillcolor: config.tracks[0].trackfillcolor,\n        trackalpha: config.tracks[0].trackalpha,\n        trackborder: config.trackborder,\n        trackbordercolor: config.trackbordercolor,\n        trackborderalpha: config.trackborderalpha,\n        trackborderthickness: config.trackborderthickness,\n        numTicks: config.numticks,\n        tickMarkLength: config.tickmarklength,\n        tickvaluefontsizeWithUnit: config.tickvaluefontsizeWithUnit,\n        showticks: config.showticks,\n        showtickmarks: config.showtickmarks,\n        showtickvalues: config.showtickvalues,\n        tickmarkcolor: config.tickmarkcolor,\n        tickmarkthickness: config.tickmarkthickness,\n        tickalpha: config.tickalpha,\n        tickvaluealpha: config.tickvaluealpha,\n        tickvaluelabelfont: config.tickvaluelabelfont,\n        tickvaluefontcolor: config.tickvaluefontcolor,\n        baseFontColor: config.baseFontColor,\n        tickvaluegap: TICK_VALUE_GAP,\n        label: config.tracks[0].label,\n        iconurl: config.tracks[0].iconurl,\n        labelFontColor: config.tracks[0].labelFontColor,\n        value: config.tracks[0].value\n      });\n    } else {\n      let child = parent.getChildren('dataset');\n      for (let index = 0; index < lenTracks - 1; index++) {\n        if (index === 0) {\n          tracks[index].configure({\n            startangle: config.startangle,\n            endangle: config.endangle,\n            trackpadding: config.trackpadding,\n            trackmargin: config.trackmargin,\n            trackstartradius: config.trackstartradius,\n            trackendradius: config.trackendradius,\n            trackfillcolor: config.tracks[index].trackfillcolor,\n            trackalpha: config.tracks[index].trackalpha,\n            trackborder: config.trackborder,\n            trackbordercolor: config.trackbordercolor,\n            trackborderalpha: config.trackborderalpha,\n            trackborderthickness: config.trackborderthickness,\n            numTicks: config.numticks,\n            tickMarkLength: config.tickmarklength,\n            tickvaluefontsizeWithUnit: config.tickvaluefontsizeWithUnit,\n            showticks: config.showticks,\n            showtickmarks: config.showtickmarks,\n            showtickvalues: config.showtickvalues,\n            tickmarkcolor: config.tickmarkcolor,\n            tickmarkthickness: config.tickmarkthickness,\n            tickalpha: config.tickalpha,\n            tickvaluealpha: config.tickvaluealpha,\n            tickvaluelabelfont: config.tickvaluelabelfont,\n            tickvaluefontcolor: config.tickvaluefontcolor,\n            baseFontColor: config.baseFontColor,\n            tickvaluegap: TICK_VALUE_GAP,\n            label: config.tracks[index].label,\n            iconurl: config.tracks[index].iconurl,\n            labelFontColor: config.tracks[index].labelFontColor,\n            value: config.tracks[index].value\n          });\n        } else {\n          child[index].remove();\n        }\n      }\n    }\n  }\n};\n\nclass RadialBar extends CommonAPI {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'RadialBar';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} The name of the chart extension\n   */\n  getName () {\n    return 'RadialBar';\n  }\n\n  /**\n   * Provides the type of the chart extension\n   *\n   * @static\n   * @return {string} The type of the chart extension\n   */\n  static getType () {\n    return 'chartAPI';\n  }\n\n  /**\n   * Provides the type of the chart extension\n   *\n   * @return {string} The type of the chart extension\n   */\n  getType () {\n    return 'chartAPI';\n  }\n\n  /**\n   * function to check if the chart has the proper data or not\n   * @return {boolean} if JSON data is valid or not\n   */\n  // eslint-disable-next-line class-methods-use-this\n  _checkInvalidData () {\n    return false;\n  }\n\n  /**\n   * function to check if this Specific chart has the proper data or not\n   * @return {boolean} if specific attribute in is valid or not\n   */\n  // eslint-disable-next-line class-methods-use-this\n  _checkInvalidSpecificData () {\n    let jsonData = this.getFromEnv('dataSource'),\n      datasetsJSON = jsonData.data;\n    if (!datasetsJSON) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n    * Creates an instance of RadialProgress.\n    * @memberof RadialBar\n    */\n  constructor () {\n    super();\n\n    // Deregistering canvas component as this chart is not built on canvas\n    // and commonchartapi constructor automatically registers it.\n    this.deregisterFactory('canvas');\n\n    // Registering dataset for track & bar component\n    this.registerFactory('RadialTrack', radialTrackFactoryFn);\n    this.registerFactory('RadialBarPlot', radialBarFactoryFn, ['legend']);\n    this.registerFactory('legend', legendItemFactory);\n  }\n\n  /**\n    * Sets the default values for parameters of the chart.\n    * @memberof RadialBar\n    */\n  __setDefaultConfig () {\n    let chart = this,\n      config = chart.config;\n\n    // Chart configurations\n    config.innerradius = 55;\n    config.outerradius = 77;\n    config.startangle = 90;\n    config.endangle = 180;\n\n    // Track configs\n    config.trackpadding = 0;\n    config.trackmargin = 6;\n    config.trackstartradius = '100%';\n    config.trackendradius = '100%';\n    config.trackfillcolor = '#cdcdcd';\n    config.trackborder = 'none';\n    config.trackbordercolor = '#000000';\n    config.trackborderalpha = '100%';\n    config.trackborderthickness = 1;\n\n    // Bar configs\n    config.barstartradius = '100%';\n    config.barendradius = '100%';\n    config.barborder = 'none';\n    config.barbordercolor = '#000000';\n    config.barborderalpha = '100%';\n    config.barborderthickness = 1;\n\n    // Default config for plots & tracks\n    config.plots = [{\n      color: '#0000ff',\n      baralpha: '100%',\n      value: 0\n    }];\n    config.tracks = [{\n      trackfillcolor: '#cdcdcd',\n      trackalpha: '40%'\n    }];\n\n    // Ticks configuration\n    config.showticks = 1;\n    config.numticks = 'auto';\n    config.showtickvalues = 1;\n    config.tickvaluelabelfont = 'Verdana,sans';\n    config.tickvaluefontsize = '10' + PXSTRING;\n    config.tickvaluefontcolor = '#000000';\n    config.showtickmarks = 1;\n    config.tickmarkcolor = '#000000';\n    config.tickmarklength = 5;\n    config.tickmarkthickness = 1;\n    config.tickalpha = '100%';\n\n    // Context label configs\n    config.showcontextlabel = 0;\n    config.defaultcontextlabel = '';\n    config.contextlabeltext = '';\n    config.contextlabelfont = 'Verdana,sans';\n    config.contextlabelfontsize = '10' + PXSTRING;\n    config.contextlabelfontcolor = '#000000';\n    config.contextlabelalpha = '100%';\n\n    // Label configs\n    config.showlabels = 0;\n    config.usedataplotcolorforlabels = 0;\n    config.labeltext = '$label, $datavalue';\n    config.placevaluesinside = 0;\n    config.labelposition = 'start';\n    config.labelpadding = '6px 10px 6px 10px';\n    config.showlabelicon = 0;\n    config.iconscale = '100%';\n    config.iconposition = 'end';\n\n    // Legend config\n    config.interactivelegend = 1;\n\n    // Tooltip config\n    config.showtooltip = 1;\n\n    this.config.style = {\n      inCanvasStyle: {}\n    };\n\n    this.config.dataLabelStyle = {};\n  }\n\n  /**\n    * Configures the chart attributes.\n    * @memberof RadialBar\n    */\n  configureAttributes (dataSource) {\n    super.configureAttributes(dataSource);\n    let config = this.config,\n      chartAttr = dataSource.chart,\n      numTicks;\n\n    // Chart attributes\n    config.innerradius = pluck(chartAttr.innerradius, config.innerradius);\n    config.outerradius = pluck(chartAttr.outerradius, config.outerradius);\n\n    // Legend attributes\n    config.interactivelegend = parseInt(pluck(chartAttr.interactivelegend, config.interactivelegend, 1), 10);\n    config.showLegend = parseInt(chartAttr.showlegend, 10);\n\n    config.startangle = pluckNumber(chartAttr.startangle, config.startangle);\n    config.endangle = pluckNumber(chartAttr.endangle, config.endangle);\n    config.startangle = (config.startangle >= 0 && config.startangle <= 360)\n      ? config.startangle : 90;\n    config.endangle = (config.endangle >= 0 && config.endangle <= 360)\n      ? config.endangle : 180;\n\n    // Track attributes\n    config.trackpadding = pluck(chartAttr.trackpadding, config.trackpadding);\n    config.trackmargin = pluck(chartAttr.trackmargin, config.trackmargin);\n    config.trackstartradius = pluck(chartAttr.trackstartradius, config.trackstartradius);\n    config.trackendradius = pluck(chartAttr.trackendradius, config.trackendradius);\n    config.trackfillcolor = pluck(chartAttr.trackfillcolor, config.trackfillcolor);\n\n    config.trackborder = pluck(chartAttr.trackborder, config.trackborder);\n    config.trackbordercolor = pluck(chartAttr.trackbordercolor, config.trackbordercolor);\n    config.trackborderalpha = parseInt(pluck(chartAttr.trackborderalpha, config.trackborderalpha), 10) / 100;\n    config.trackborderthickness = pluck(chartAttr.trackborderthickness, config.trackborderthickness);\n\n    // Plot attributes\n    config.barstartradius = pluck(chartAttr.barstartradius, config.barstartradius);\n    config.barendradius = pluck(chartAttr.barendradius, config.barendradius);\n\n    config.barborder = pluck(chartAttr.barborder, config.barborder);\n    config.barbordercolor = pluck(chartAttr.barbordercolor, config.barbordercolor);\n    config.barborderalpha = parseInt(pluck(chartAttr.barborderalpha, config.barborderalpha), 10) / 100;\n    config.barborderthickness = pluck(chartAttr.barborderthickness, config.barborderthickness);\n\n    if (config.style.inCancolor.indexOf('#') === -1) {\n      config.style.inCancolor = '#' + config.style.inCancolor;\n    }\n    config.baseFontColor = pluck(chartAttr.baseFontColor, config.style.inCancolor);\n    // Ticks attributes\n    numTicks = pluck(chartAttr.numticks, config.numticks);\n    config.numticks = isNaN(numTicks) ? 'auto' : numTicks;\n    config.tickmarklength = parseInt(pluck(chartAttr.tickmarklength, config.tickmarklength), 10);\n    config.showticks = pluck(chartAttr.showticks, config.showticks);\n    config.showtickmarks = pluck(chartAttr.showtickmarks, config.showtickmarks, config.showticks);\n    config.showtickvalues = pluck(chartAttr.showtickvalues, config.showtickvalues, config.showticks);\n    config.tickmarkcolor = pluck(chartAttr.tickmarkcolor, config.tickmarkcolor);\n    config.tickmarkthickness = parseInt(pluck(chartAttr.tickmarkthickness, config.tickmarkthickness), 10);\n    config.tickalpha = parseInt(pluck(chartAttr.tickalpha, config.tickalpha), 10) / 100;\n    config.tickvaluealpha = parseInt(pluck(chartAttr.tickvaluealpha, chartAttr.tickalpha, '100%'), 10) / 100;\n    config.tickvaluelabelfont = pluck(chartAttr.tickvaluelabelfont, config.style.inCanfontFamily);\n    config.tickvaluefontcolor = pluck(chartAttr.tickvaluefontcolor, config.baseFontColor);\n    config.tickvaluefontsizeWithUnit = pluckFontSizeMaintainUnit(chartAttr.tickvaluefontsize, config.style.inCanfontSizeWithUnit);\n    config.tickvaluefontsize = this.computeFontSize(config.tickvaluefontsizeWithUnit);\n    config.palettecolors = pluck(chartAttr.palettecolors, config.palettecolors);\n\n    if (config.palettecolors) {\n      config.paletteColorsArray = config.palettecolors.trim().split(',');\n      config.paletteColorsArray = config.paletteColorsArray.filter(color => color);\n    }\n\n    // Context label attributes\n    config.showcontextlabel = parseInt(pluck(chartAttr.showcontextlabel, config.showcontextlabel), 10);\n    config.defaultcontextlabel = parseUnsafeString(pluck(chartAttr.defaultcontextlabel, config.defaultcontextlabel));\n    config.contextlabeltext = pluck(chartAttr.contextlabeltext, config.contextlabeltext);\n    config.contextlabelfont = pluck(chartAttr.contextlabelfont, config.style.inCanfontFamily);\n    config.contextlabelfontsizewithunit = pluckFontSizeMaintainUnit(chartAttr.contextlabelfontsize, config.style.inCanfontSizeWithUnit);\n    config.contextlabelfontsize = this.computeFontSize(config.contextlabelfontsizewithunit);\n    config.contextlabelfontcolor = pluck(chartAttr.contextlabelfontcolor, config.baseFontColor);\n    config.contextlabelalpha = parseInt(pluck(chartAttr.contextlabelalpha, config.contextlabelalpha), 10) / 100;\n    config.contexttext = chartAttr.contextlabeltext;\n\n    // Label attributes\n    config.showlabels = pluckNumber(chartAttr.showlabels, config.showlabels) || 0;\n    config.usedataplotcolorforlabels = pluckNumber(chartAttr.usedataplotcolorforlabels, config.usedataplotcolorforlabels) || 0;\n    config.labeltext = pluck(chartAttr.labeltext, config.labeltext);\n    config.placevaluesinside = parseInt((pluckNumber(chartAttr.placevaluesinside, config.placevaluesinside) || 0), 10);\n    config.labelposition = pluck(chartAttr.labelposition, config.labelposition);\n    config.labelpadding = `6px ${config.placevaluesinside ? '10px' : '15px'}`;\n    config.labelpadding = createLabelPadding(pluck(chartAttr.labelpadding, config.labelpadding));\n    config.showlabelicon = pluckNumber(chartAttr.showlabelicon, config.showlabelicon) || 0;\n    config.iconscale = pluck(chartAttr.iconscale, config.iconscale);\n    config.iconposition = pluck(chartAttr.iconposition, config.iconposition);\n\n    if (Array.isArray(dataSource.data)) {\n      for (let i = 0; i < dataSource.data.length; i++) {\n        // configuring track data\n        config.tracks[i] = {};\n        config.tracks[i].trackfillcolor = pluck(dataSource.data[i].trackfillcolor, config.trackfillcolor);\n        config.tracks[i].trackalpha = parseInt(pluck(dataSource.data[i].trackalpha, '40%'), 10) / 100;\n        config.tracks[i].value = pluckNumber(dataSource.data[i].value, 0);\n        config.tracks[i].label = pluck(dataSource.data[i].label, '');\n        config.tracks[i].iconurl = pluck(dataSource.data[i].icon, '');\n        config.tracks[i].labelFontColor = pluck(dataSource.data[i].color, '#0000ff');\n\n        // configuring plot data\n        config.plots[i] = {};\n        config.plots[i].color = pluck(dataSource.data[i].color, config.paletteColorsArray ? config.paletteColorsArray[i] : '#0000ff');\n        config.plots[i].baralpha = parseInt(pluck(dataSource.data[i].baralpha, '100'), 10) / 100;\n        config.plots[i].value = pluckNumber(parseInt(dataSource.data[i].value, 10), 0);\n        config.plots[i].iconurl = pluck(dataSource.data[i].icon, '');\n        config.plots[i].label = pluck(dataSource.data[i].label, '');\n        config.plots[i].contextlabeltext = pluck(dataSource.data[i].contextlabeltext, config.contextlabeltext);\n        config.plots[i].tooltext = pluck(dataSource.data[i].tooltext, chartAttr.plottooltext);\n        config.plots[i].initiallyhidden = config.interactivelegend ? pluckNumber(dataSource.data[i].initiallyhidden, 0) : 0;\n        config.plots[i].dataValue = config.plots[i].value + '%';\n      }\n    }\n\n    // The number of rings\n    config.rings = (Array.isArray(dataSource.data) && dataSource.data.length) || 1;\n\n    this.addToEnv('chartConfig', this.config);\n    this.createBaseComponent();\n  }\n\n  /**\n   * function to calculate and allot space for legend\n   * @memberof RadialBar\n   */\n  _manageLegendSpace () {\n    _manageLegendSpace.call(this);\n  }\n\n  /**\n   * Click event handler for legend item\n   * @param {LegendItem} legendItem the legend item that has been clicked\n   * @memberof RadialBar\n   */\n  legendInteractivity (legendItem) {\n    if (!legendItem.getFromEnv('chart-attrib').interactivelegend) {\n      return;\n    }\n\n    let plots = this.getChildren('plot'),\n      tracks = this.getChildren('dataset'),\n      legendItemId = legendItem.getId(),\n      plot, track;\n\n    if (legendItem.hasState('highlight')) {\n      legendItem.removeLegendState('highlight');\n    }\n\n    for (let i = 0; i < plots.length; i++) {\n      plot = plots[i];\n      track = tracks[i];\n      if (plot.config.legendItemId === legendItemId) {\n        if (!plot.config.plotHidden) {\n          plot.config.realBarAlpha = plot.config.realBarAlpha || plot.config.baralpha;\n          plot.config.realBarBorderAlpha = plot.config.realBarBorderAlpha || plot.config.barborderalpha;\n          plot.setData({\n            'baralpha': 0,\n            'barborderalpha': 0\n          }, true);\n\n          // Remove the existing label\n          if (plot.label) {\n            this.removeGraphicalElement(plot.label);\n          }\n\n          // Remove the existing icon\n          if (plot.iconImage) {\n            this.removeGraphicalElement(plot.iconImage);\n          }\n\n          // Remove the existing plot identifier\n          if (plot.plotIdentifier) {\n            this.removeGraphicalElement(plot.plotIdentifier);\n          }\n\n          // Remove the existing label [if it was a div]\n          if (plot.labelDiv) {\n            this.getFromEnv('chart-container').removeChild(plot.labelDiv);\n            delete plot.labelDiv;\n          }\n\n          legendItem.setLegendState('hidden', true);\n          plot.config.plotHidden = true;\n        } else {\n          plot.setData({\n            'baralpha': plot.config.realBarAlpha,\n            'barborderalpha': plot.config.realBarBorderAlpha\n          }, true);\n\n          this.drawLabel(track, plot);\n          legendItem.removeLegendState('hidden');\n          plot.config.plotHidden = false;\n        }\n\n        legendItem.getFromEnv('chart-attrib').interactivelegend = 0;\n      }\n    }\n  }\n\n  /**\n    * Performs calculation logic for space management for\n    * the chart.\n    * @memberof RadialBar\n    */\n  _spaceManager () {\n    let config = this.config,\n      side,\n      chartMaxDiameter,\n      trackthickness,\n      barthickness,\n      data = this.getFromEnv('dataSource').data,\n      box = UNDEF,\n      counter = 0,\n      captionSpace;\n\n    // Managing space for legend\n    this.config.showLegend && this._manageLegendSpace();\n\n    // Setting the values & calculating maximum chart diameter\n    config.tickvaluefontsize = this.computeFontSize(config.tickvaluefontsizeWithUnit);\n    config.availableHeight = this.getFromEnv('chartConfig').availableHeight;\n    config.availableWidth = this.getFromEnv('chartConfig').availableWidth;\n    side = config.availableHeight > config.availableWidth ? config.availableWidth : config.availableHeight;\n    config.outerradius = convertToPixels(config.outerradius, side / 2);\n\n    config.outerradius = config.outerradius < 0 ? 77 : config.outerradius;\n    config.innerradius = convertToPixels(config.innerradius, side / 2);\n    config.innerradius = config.innerradius < 0 ? 55 : config.innerradius;\n\n    config.trackstartradius = convertToPixels(config.trackstartradius, side / 2);\n    config.trackstartradius = config.trackstartradius > 100 ? 100 : config.trackstartradius;\n    config.trackendradius = convertToPixels(config.trackendradius, side / 2);\n    config.trackendradius = config.trackendradius > 100 ? 100 : config.trackendradius;\n\n    config.barstartradius = convertToPixels(config.barstartradius, side / 2);\n    config.barstartradius = config.barstartradius > 100 ? 100 : config.barstartradius;\n    config.barendradius = convertToPixels(config.barendradius, side / 2);\n    config.barendradius = config.barendradius > 100 ? 100 : config.barendradius;\n\n    config.trackmargin = convertToPixels(config.trackmargin, side / 2);\n\n    if (config.innerradius >= config.outerradius) {\n      config.innerradius = 55;\n      config.outerradius = 77;\n    }\n\n    chartMaxDiameter = (config.outerradius + (config.showticks ? config.tickmarklength : 0) + (config.showtickvalues ? (TICK_VALUE_GAP + config.tickvaluefontsize) : 0)) * 2;\n\n    // Managing space for caption\n    captionSpace = this._manageChartMenuBar(chartMaxDiameter < config.availableHeight\n      ? config.availableHeight - chartMaxDiameter : config.availableHeight / 2);\n    chartMaxDiameter -= ((captionSpace.top || 0) + (captionSpace.bottom || 0));\n\n    // Adjusting outer radius of the chart according to available space\n    if (chartMaxDiameter > side) {\n      config.outerradius = (side / 2) - (config.showticks ? config.tickmarklength : 0) - (config.showtickvalues ? config.tickvaluefontsize : 0);\n    }\n\n    // Calculating the thickness of track and bar\n    trackthickness = (config.outerradius - config.innerradius - (config.rings - 1) * config.trackmargin) / config.rings;\n    if (trackthickness < 0) {\n      config.trackmargin = 0;\n      trackthickness = (config.outerradius - config.innerradius) / config.rings;\n    }\n\n    config.trackpadding = convertToPixels(config.trackpadding, trackthickness / 2);\n    if (config.trackpadding > trackthickness / 2) {\n      config.trackpadding = 0;\n    }\n\n    barthickness = trackthickness - config.trackpadding * 2;\n    if (barthickness < 0) {\n      barthickness = (config.outerradius - config.innerradius) / config.rings;\n    }\n\n    // Space management for tracks\n    this.getChildren('dataset') && this.getChildren('dataset').forEach((el, index) => {\n      box = UNDEF;\n\n      if (!data || (Array.isArray(data) && data.length === 0)) {\n        box = side;\n      } else {\n        if (!config.tracks[counter].thickness) {\n          config.tracks[counter].thickness = trackthickness;\n        }\n\n        box = (config.innerradius + (counter + 1) * trackthickness + counter * config.trackmargin) * 2;\n      }\n\n      el.setNodePath(box, trackthickness, config);\n      counter += 1;\n      counter %= config.rings;\n\n      if (index === this.getChildren('dataset').length - 1) {\n        el.config.isLast = true;\n      }\n    });\n\n    counter = 0;\n\n    // Space management for plots\n    this.getChildren('plot') && this.getChildren('plot').forEach((el) => {\n      box = UNDEF;\n\n      if (!data || (Array.isArray(data) && data.length === 0)) {\n        box = side;\n      } else {\n        if (!config.plots[counter].thickness) {\n          config.plots[counter].thickness = trackthickness;\n        }\n\n        box = ((config.innerradius + (counter + 1) * trackthickness + counter * config.trackmargin) * 2) - (2 * config.trackpadding);\n      }\n\n      el.setNodePath(box, barthickness, config);\n      counter += 1;\n      counter %= config.rings;\n    });\n  }\n\n  _postSpaceManagement () {\n    this.allocateDimensionOfChartMenuBar();\n    this.config.showLegend && this.getChildren('legend') && this.getChildren('legend')[0].postSpaceManager();\n  }\n\n  /**\n    * Creates the node container group svg element and takes\n    * care of registering the mouse events on the chart.\n    *\n    * @memberof RadialBar\n    */\n  draw () {\n    super.draw();\n\n    let node = this,\n      animationManager = this.getFromEnv('animationManager'),\n      element = this.getChildContainer('node-container'),\n      ticksContainer = this.getChildContainer('ticks-container');\n\n    // Creating the 'node-container' element\n    node.addChildContainer('node-container', animationManager.setAnimation({\n      el: element || 'group',\n      component: node,\n      label: 'node-container',\n      id: 'node-container',\n      attr: {\n        name: 'node-container'\n      },\n      container: this.getChildContainer('plotGroup')\n    }));\n\n    // Creating the 'ticks-container' for drawing ticks and tick values\n    node.addChildContainer('ticks-container', animationManager.setAnimation({\n      el: ticksContainer || 'group',\n      component: node,\n      label: 'ticks-container',\n      id: 'ticks-container',\n      attr: {\n        name: 'ticks-container'\n      },\n      container: this.getChildContainer('node-container')\n    }));\n\n    // Adding event listeners for the data plots\n    for (let i = 0; i < this.config.plots.length && i < this.config.tracks.length; i++) {\n      const currentPlot = this.getChildren('plot')[i];\n      this.addExtEventListener('fc-mouseover', currentPlot._mouseOverHandler, currentPlot);\n      this.addExtEventListener('fc-mouseout', currentPlot._mouseOutHandler, currentPlot);\n    }\n\n    // Adding the context label text element\n    if (!this.config.defaultcontextlabel) {\n      this.config.defaultcontextlabel = '';\n    }\n    this.drawContextLabel(this.config.defaultcontextlabel);\n  }\n\n  /**\n    * creates the chart labels\n    * @param {RadialTrack} track the track instance for which label is being drawn\n    * @param {RadialBarPlot} plot the plot instance for which label is being drawn\n    * @memberof RadialBar\n    */\n  drawLabel (track, plot) {\n    let chartConfig = this.getFromEnv('chartConfig'),\n      animationManager = this.getFromEnv('animationManager'),\n      toolTipController = this.getFromEnv('toolTipController'),\n      smartLabel = this.getFromEnv('smartLabel'),\n      config = this.config,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      availableWidth = chartConfig.canvasWidth,\n      availableHeight = chartConfig.canvasHeight,\n      centerX = canvasLeft + (availableWidth / 2),\n      centerY = canvasTop + (availableHeight / 2),\n      startAngle = changeAngleBase(track.config.startingAngle),\n      endingAngle = changeAngleBase(track.config.endingAngle),\n      endAngle = (startAngle === endingAngle) ? (endingAngle - 0.1) : endingAngle,\n      labelFontSize = track.config.thickness - config.labelpadding.top - config.labelpadding.bottom,\n      labelFontColor = config.usedataplotcolorforlabels ? plot.config.color : config.style.inCancolor, labelTextObj,\n      theta, labelText = config.labeltext, iconSize,\n      labelGraphicsAttr, plotIdentifierShow = (labelText.toLowerCase().indexOf('$plotidentifier') > -1), plotIdSvgString, radius,\n      showIcon = this.config.showlabelicon;\n\n    plot.config.labelFontSize = labelFontSize = (labelFontSize < 5) ? track.config.thickness : labelFontSize;\n    iconSize = labelFontSize * parseInt(config.iconscale, 10) / 100;\n\n    // adding iconSize validation\n    if (iconSize >= Math.abs(config.innerradius - config.outerradius)) {\n      iconSize = labelFontSize;\n    }\n    iconSize = iconSize < 0 ? labelFontSize : iconSize;\n\n    // Remove the existing label\n    if (plot.label) {\n      this.removeGraphicalElement(plot.label);\n    }\n\n    // Remove the existing icon\n    if (plot.iconImage) {\n      this.removeGraphicalElement(plot.iconImage);\n    }\n\n    // Remove the existing plot identifier\n    if (plot.plotIdentifier) {\n      this.removeGraphicalElement(plot.plotIdentifier);\n    }\n\n    // Remove the existing label [if it was a div]\n    if (plot.labelDiv) {\n      this.getFromEnv('chart-container').removeChild(plot.labelDiv);\n      delete plot.labelDiv;\n    }\n\n    if (config.placevaluesinside) {\n      // This block is for when the labels are curved, inside the track.\n\n      // If no labels are present the icon are by default at the start position\n      if (!config.showlabels || labelText.length === 0) {\n        config.iconposition = 'start';\n      }\n\n      // Getting the plotidentifier svg separately & removing it from labelText\n      if (plotIdentifierShow) {\n        labelText = labelText.toLowerCase().replace('$plotidentifier', '');\n        plotIdSvgString = plot.getParsedText('$plotIdentifier', false, labelFontSize);\n      }\n\n      // Getting the parsed text\n      labelText = plot.getParsedText(labelText, false, labelFontSize) || track.config.label;\n\n      /** Below is the code for placement of the three components of the labels\n       * namely - icon, plotIdentifier and the text.\n       */\n      // ===== PLACING THE ICON =====\n      // We need to place the icon first for two conditions - [iconposition = end, labelposition = end]\n      // and [iconposition = start, labelposition = start]. For other conditions we will place the icon\n      // after the text is placed.\n      if (config.showlabelicon && track.config.iconurl) {\n        if (config.iconposition !== 'end') {\n          let iconRotation, iconCoords, iconTransform;\n          if (config.labelposition === 'end') {\n            // iconposition = start, labelposition = end\n            radius = track.config.innerRadius + (track.config.thickness - iconSize) / 2;\n            iconRotation = normaliseAngle(endAngle) - track.config.paddingAngle;\n            iconCoords = pointOnCircleFromCenter(centerX, centerY, radius, iconRotation);\n            iconTransform = `R${iconRotation - 180}, ${iconCoords.x}, ${iconCoords.y}`;\n          } else {\n            // iconposition = start, labelposition = start\n            radius = track.config.outerRadius - (track.config.thickness - iconSize) / 2;\n            iconRotation = normaliseAngle(startAngle) + track.config.paddingAngle;\n            iconCoords = pointOnCircleFromCenter(centerX, centerY, radius, iconRotation);\n            iconTransform = `R${iconRotation}, ${iconCoords.x}, ${iconCoords.y}`;\n          }\n\n          plot.iconImage = animationManager.setAnimation({\n            el: 'image',\n            attr: {\n              'src': track.config.iconurl,\n              'x': iconCoords.x,\n              'y': iconCoords.y,\n              'width': iconSize,\n              'height': iconSize,\n              'transform': iconTransform\n            },\n            container: {\n              id: 'node-container',\n              isParent: true\n            },\n            component: this,\n            label: 'image'\n          });\n\n          this.addGraphicalElement('iconImage', plot.iconImage, true);\n        }\n      }\n\n      // ===== PLACING THE PLOT IDENTIFIER NEXT =====\n      if (config.showlabels && plotIdentifierShow) {\n        const el = document.createElement('div');\n        el.innerHTML = plotIdSvgString;\n\n        let pathElement = el.firstChild.firstElementChild || el.firstChild,\n          pathAttributes = pathElement && pathElement.attributes,\n          plotIdentifierAttr = {}, path,\n          legend = this.getFromEnv('legend'),\n          legendItem = config.showLegend && legend.getItem(plot.config.legendItemId),\n          graphicalElement = legendItem && legendItem.getGraphicalElement(),\n          legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol,\n          iconAngle = config.iconposition !== 'end' ? track.config.iconAngle : 0,\n          symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox(), svgScale = 1,\n          plotIdentifierCoords, plotIdentifierRotation;\n\n        if (!symbolBBox) {\n          symbolBBox = { width: labelFontSize };\n        }\n        if (labelFontSize && symbolBBox && labelFontSize < symbolBBox.height) {\n          svgScale = labelFontSize / symbolBBox.height;\n        }\n\n        if (config.labelposition === 'end') {\n          radius = track.config.innerRadius + (track.config.thickness - labelFontSize) / 2;\n          plotIdentifierRotation = normaliseAngle(endAngle) - track.config.paddingAngle - iconAngle;\n          plotIdentifierCoords = pointOnCircleFromCenter(centerX, centerY, radius, plotIdentifierRotation);\n          plotIdentifierRotation -= 180;\n        } else {\n          radius = track.config.outerRadius - (track.config.thickness - labelFontSize) / 2;\n          plotIdentifierRotation = normaliseAngle(startAngle) + track.config.paddingAngle + iconAngle;\n          plotIdentifierCoords = pointOnCircleFromCenter(centerX, centerY, radius, plotIdentifierRotation);\n        }\n\n        if (pathElement.tagName === 'path') {\n          for (let i = 0; i < pathAttributes.length; i++) {\n            if (pathAttributes[i].name === 'd') {\n              path = pathAttributes[i].nodeValue;\n            } else {\n              plotIdentifierAttr[pathAttributes[i].name] = pathAttributes[i].nodeValue;\n            }\n          }\n\n          plotIdentifierAttr.path = path;\n        } else {\n          plotIdentifierAttr.path = `M0,0L${labelFontSize},0,${labelFontSize},${labelFontSize},0,${labelFontSize}Z`;\n          plotIdentifierAttr['stroke-width'] = 0.1;\n          plotIdentifierAttr.fill = plot.config.realColor || plot.config.color;\n        }\n\n        plotIdentifierAttr.transform = `T${plotIdentifierCoords.x}, ${plotIdentifierCoords.y} R${plotIdentifierRotation}, ${plotIdentifierCoords.x}, ${plotIdentifierCoords.y} S${svgScale}`;\n        plot.plotIdentifier = animationManager.setAnimation({\n          el: 'path',\n          attr: plotIdentifierAttr,\n          container: {\n            id: 'plot',\n            isParent: true\n          },\n          label: 'plotIdentifier',\n          component: this\n        });\n\n        this.addGraphicalElement('plotIdentifier', plot.plotIdentifier, true);\n      }\n\n      // ===== PLACING THE LABEL TEXT AFTER THAT =====\n      if (config.showlabels && labelText.length > 0) {\n        let trackArc = findArc(startAngle, (startAngle === endingAngle) ? (endingAngle - 0.1) : endingAngle),\n          trackLength = (2 * Math.PI * track.config.innerRadius / 360) * trackArc;\n\n        // update styles of smartLabel\n        const labelStyle = {\n          'font-family': config.style.inCanfontFamily,\n          'font-size': labelFontSize,\n          'line-height': labelFontSize * 1.2\n        };\n        smartLabel.setStyle(labelStyle);\n        labelTextObj = smartLabel.getSmartText(\n          labelText,\n          trackLength - config.labelpadding.left - config.labelpadding.right - (config.showlabelicon ? iconSize + 15 : 0) - (plotIdentifierShow ? labelFontSize : 0),\n          labelFontSize * 1.2,\n          false\n        );\n\n        labelGraphicsAttr = {\n          'text': labelTextObj.text,\n          'x': track.config.path_d[1],\n          'y': track.config.path_d[2],\n          'fill': labelFontColor,\n          'font-family': config.style.inCanfontFamily,\n          'font-size': labelFontSize,\n          'text-anchor': 'start',\n          'textpath': { path: track.config.labelPath[config.labelposition][config.iconposition] }\n        };\n\n        plot.label = animationManager.setAnimation({\n          el: 'text',\n          attr: labelGraphicsAttr,\n          container: {\n            id: 'plot',\n            isParent: true\n          },\n          label: 'label',\n          component: this\n        });\n\n        this.addGraphicalElement('trackLabel', plot.label, true);\n      }\n\n      // ===== PLACING THE ICON =====\n      // We need to place the icon after the text is placed for for these two conditions -\n      // [iconposition = end, labelposition = start] and [iconposition = end, labelposition = end].\n      // For other conditions we icon placement has been done above.\n      if (config.showlabelicon && track.config.iconurl) {\n        if (config.iconposition === 'end') {\n          let iconRotation, iconCoords, iconTransform,\n            numberOfChars = (plot.label.node.getNumberOfChars()) - 1;\n\n          if (config.labelposition === 'start') {\n            // iconposition = end, labelposition = start\n            radius = track.config.outerRadius - (track.config.thickness - iconSize) / 2;\n            iconRotation = plot.label.node.getRotationOfChar(numberOfChars) + track.config.iconAngle;\n            iconCoords = pointOnCircleFromCenter(centerX, centerY, radius, iconRotation);\n            iconTransform = `R${iconRotation}, ${iconCoords.x}, ${iconCoords.y}`;\n          } else {\n            // iconposition = end, labelposition = end\n            radius = track.config.innerRadius + (track.config.thickness - iconSize) / 2;\n            iconRotation = plot.label.node.getRotationOfChar(numberOfChars) - 180 - track.config.iconAngle;\n            iconCoords = pointOnCircleFromCenter(centerX, centerY, radius, iconRotation);\n            iconTransform = `R${iconRotation - 180}, ${iconCoords.x}, ${iconCoords.y}`;\n          }\n\n          plot.iconImage = animationManager.setAnimation({\n            el: 'image',\n            attr: {\n              'src': track.config.iconurl,\n              'x': iconCoords.x,\n              'y': iconCoords.y,\n              'width': iconSize,\n              'height': iconSize,\n              'transform': iconTransform\n            },\n            container: {\n              id: 'node-container',\n              isParent: true\n            },\n            component: this,\n            label: 'image'\n          });\n\n          this.addGraphicalElement('iconImage', plot.iconImage, true);\n        }\n      }\n    } else if (startAngle !== endingAngle) {\n      // For labels outside\n      let newRadius, iconAttr = {}, labelTextAttr = {}, plotIdentifierAttr = {},\n        distance = 0;\n\n      if (config.labelposition === 'end') {\n        if ((endAngle >= 0 && endAngle < 180) || endAngle === 360) {\n          if (config.iconposition === 'end') {\n            // labelposition end angle 0-180\n            // iconposition end => place plotIdentifier, place text, place icon\n            distance = distance + config.labelpadding.left;\n            if (plotIdentifierShow && config.showlabels) {\n              const el = document.createElement('div');\n              el.innerHTML = plot.getParsedText('$plotIdentifier');\n\n              let pathElement = el.firstChild.firstElementChild || el.firstChild,\n                pathAttributes = pathElement && pathElement.attributes, path,\n                legend = this.getFromEnv('legend'),\n                legendItem = config.showLegend && legend.getItem(plot.config.legendItemId),\n                graphicalElement = legendItem && legendItem.getGraphicalElement(),\n                legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol,\n                symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox(), svgScale = 1,\n                plotIdentifierCoords;\n\n              distance = distance + labelFontSize / 2;\n              newRadius = Math.sqrt(Math.pow(track.config.outerRadius - track.config.thickness / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / track.config.outerRadius) * (180 / Math.PI);\n              plotIdentifierCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) + theta);\n              if (!symbolBBox) {\n                symbolBBox = { width: labelFontSize };\n              }\n              if (labelFontSize && symbolBBox && labelFontSize < symbolBBox.height) {\n                svgScale = labelFontSize / symbolBBox.height;\n              }\n\n              if (pathElement.tagName === 'path') {\n                for (let i = 0; i < pathAttributes.length; i++) {\n                  if (pathAttributes[i].name === 'd') {\n                    path = pathAttributes[i].nodeValue;\n                  } else {\n                    plotIdentifierAttr[pathAttributes[i].name] = pathAttributes[i].nodeValue;\n                  }\n                }\n\n                plotIdentifierAttr.path = path;\n              } else {\n                plotIdentifierAttr.path = `M0,0L${labelFontSize},0,${labelFontSize},${labelFontSize},0,${labelFontSize}Z`;\n                plotIdentifierAttr['stroke-width'] = 0.1;\n                plotIdentifierAttr.fill = plot.config.realColor || plot.config.color;\n              }\n\n              plotIdentifierAttr.transform = `T${plotIdentifierCoords.x - (symbolBBox.width * svgScale / 2)}, ${plotIdentifierCoords.y - (symbolBBox.height * svgScale / 2)} R${endAngle - 90}, ${plotIdentifierCoords.x}, ${plotIdentifierCoords.y} S${svgScale}`;\n              this.addPlotIdentifier(plotIdentifierAttr, plot);\n\n              // Adding the space taken by the plot identifier to the distance for the next element\n              distance = distance + labelFontSize + 1;\n            }\n\n            if (config.showlabels) {\n              radius = track.config.outerRadius - (track.config.thickness - labelFontSize) / 2 - (labelFontSize / 2);\n              newRadius = Math.sqrt(Math.pow(radius, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / track.config.outerRadius) * (180 / Math.PI);\n              labelText = plot.getParsedText(labelText.replace('$plotIdentifier', '').replace('$plotidentifier', ''));\n              let labelCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) + theta),\n                labelLength;\n\n              // update styles of smartLabel\n              const labelStyle = {\n                'font-family': config.style.inCanfontFamily,\n                'font-size': labelFontSize,\n                'line-height': labelFontSize * 1.2\n              };\n              smartLabel.setStyle(labelStyle);\n              labelTextObj = smartLabel.getSmartText(\n                labelText,\n                config.outerradius,\n                labelFontSize * 1.2,\n                false\n              );\n\n              labelTextAttr.x = labelCoords.x;\n              labelTextAttr.y = labelCoords.y;\n              labelTextAttr.fill = labelFontColor;\n              labelTextAttr['font-family'] = config.style.inCanfontFamily;\n              labelTextAttr['font-size'] = labelFontSize;\n              labelTextAttr['text-anchor'] = 'start';\n              labelTextAttr.transform = `R${endAngle - 90}, ${labelTextAttr.x}, ${labelTextAttr.y}`;\n              labelTextAttr.text = labelTextObj.text;\n\n              labelLength = this.addLabel(labelTextAttr, plot);\n              distance = distance + labelLength;\n            }\n\n            if (showIcon && track.config.iconurl) {\n              distance = distance + ICON_PADDING;\n              newRadius = Math.sqrt(Math.pow(track.config.outerRadius + (track.config.thickness - labelFontSize) / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan((distance) / track.config.outerRadius) * (180 / Math.PI);\n              iconAttr.iconCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) + theta);\n              iconAttr.transform = `R${endAngle - 90}, ${iconAttr.iconCoords.x}, ${iconAttr.iconCoords.y}`;\n              iconAttr.iconSize = labelFontSize;\n              this.addIcon(iconAttr, plot, track);\n            }\n          } else {\n            // labelposition end angle 0-180\n            // iconposition start => place icon, place plotIdentifier, place text\n            distance = distance + config.labelpadding.left;\n            if (showIcon) {\n              if (track.config.iconurl) {\n                newRadius = Math.sqrt(Math.pow(track.config.outerRadius + (track.config.thickness - labelFontSize) / 2, 2) + Math.pow(distance, 2));\n                theta = Math.atan((distance) / track.config.outerRadius) * (180 / Math.PI);\n                iconAttr.iconCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) + theta);\n                iconAttr.transform = `R${endAngle - 90}, ${iconAttr.iconCoords.x}, ${iconAttr.iconCoords.y}`;\n                iconAttr.iconSize = labelFontSize;\n                this.addIcon(iconAttr, plot, track);\n              }\n\n              distance = distance + labelFontSize + ICON_PADDING;\n            }\n\n            if (plotIdentifierShow && config.showlabels) {\n              distance = distance + labelFontSize / 2;\n              const el = document.createElement('div');\n              el.innerHTML = plot.getParsedText('$plotIdentifier');\n\n              let pathElement = el.firstChild.firstElementChild || el.firstChild,\n                pathAttributes = pathElement && pathElement.attributes, path,\n                legend = this.getFromEnv('legend'),\n                legendItem = config.showLegend && legend.getItem(plot.config.legendItemId),\n                graphicalElement = legendItem && legendItem.getGraphicalElement(),\n                legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol,\n                symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox(), svgScale = 1,\n                plotIdentifierCoords;\n\n              newRadius = Math.sqrt(Math.pow(track.config.outerRadius - track.config.thickness / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / track.config.outerRadius) * (180 / Math.PI);\n              plotIdentifierCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) + theta);\n              if (!symbolBBox) {\n                symbolBBox = { width: labelFontSize };\n              }\n              if (labelFontSize && symbolBBox && labelFontSize < symbolBBox.height) {\n                svgScale = labelFontSize / symbolBBox.height;\n              }\n\n              if (pathElement.tagName === 'path') {\n                for (let i = 0; i < pathAttributes.length; i++) {\n                  if (pathAttributes[i].name === 'd') {\n                    path = pathAttributes[i].nodeValue;\n                  } else {\n                    plotIdentifierAttr[pathAttributes[i].name] = pathAttributes[i].nodeValue;\n                  }\n                }\n\n                plotIdentifierAttr.path = path;\n              } else {\n                plotIdentifierAttr.path = `M0,0L${labelFontSize},0,${labelFontSize},${labelFontSize},0,${labelFontSize}Z`;\n                plotIdentifierAttr['stroke-width'] = 0.1;\n                plotIdentifierAttr.fill = plot.config.realColor || plot.config.color;\n              }\n\n              plotIdentifierAttr.transform = `T${plotIdentifierCoords.x - (symbolBBox.width * svgScale / 2)}, ${plotIdentifierCoords.y - (symbolBBox.height * svgScale / 2)} R${endAngle - 90}, ${plotIdentifierCoords.x}, ${plotIdentifierCoords.y} S${svgScale}`;\n              this.addPlotIdentifier(plotIdentifierAttr, plot);\n\n              // Adding the space taken by the plot identifier to the distance for the next element\n              distance = distance + labelFontSize;\n            }\n\n            if (config.showlabels) {\n              radius = track.config.outerRadius - (track.config.thickness - labelFontSize) / 2 - (labelFontSize / 2);\n              newRadius = Math.sqrt(Math.pow(radius, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / radius) * (180 / Math.PI);\n              labelText = plot.getParsedText(labelText.replace('$plotIdentifier', '').replace('$plotidentifier', ''));\n              let labelCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) + theta);\n\n              // update styles of smartLabel\n              const labelStyle = {\n                'font-family': config.style.inCanfontFamily,\n                'font-size': labelFontSize,\n                'line-height': labelFontSize * 1.2\n              };\n              smartLabel.setStyle(labelStyle);\n              labelTextObj = smartLabel.getSmartText(\n                labelText,\n                config.outerradius,\n                labelFontSize * 1.2,\n                false\n              );\n\n              labelTextAttr.x = labelCoords.x;\n              labelTextAttr.y = labelCoords.y;\n              labelTextAttr.fill = labelFontColor;\n              labelTextAttr['font-family'] = config.style.inCanfontFamily;\n              labelTextAttr['font-size'] = labelFontSize;\n              labelTextAttr['text-anchor'] = 'start';\n              labelTextAttr.transform = `R${endAngle - 90}, ${labelTextAttr.x}, ${labelTextAttr.y}`;\n              labelTextAttr.text = labelTextObj.text;\n\n              this.addLabel(labelTextAttr, plot);\n            }\n          }\n        } else if (endAngle >= 180 && endAngle < 360) {\n          if (config.iconposition === 'end') {\n            // labelposition end angle 180-360\n            // iconposition end => place icon, place plotIdentifier, place text\n            distance = distance - config.labelpadding.right;\n            if (showIcon) {\n              distance = distance - labelFontSize;\n              if (track.config.iconurl) {\n                newRadius = Math.sqrt(Math.pow(track.config.innerRadius - (track.config.thickness - labelFontSize) / 2, 2) + Math.pow(distance, 2));\n                theta = Math.atan((distance) / track.config.innerRadius) * (180 / Math.PI);\n                iconAttr.iconCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) - theta);\n                iconAttr.transform = `R${endAngle + 90}, ${iconAttr.iconCoords.x}, ${iconAttr.iconCoords.y}`;\n                iconAttr.iconSize = labelFontSize;\n                this.addIcon(iconAttr, plot, track);\n              }\n\n              distance = distance - ICON_PADDING;\n            }\n\n            if (config.showlabels) {\n              radius = track.config.innerRadius + (track.config.thickness - labelFontSize) / 2 + (labelFontSize / 2);\n              newRadius = Math.sqrt(Math.pow(radius, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / radius) * (180 / Math.PI);\n              labelText = plot.getParsedText(labelText.replace('$plotIdentifier', '').replace('$plotidentifier', ''));\n              let labelCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) - theta),\n                labelLength;\n\n              // update styles of smartLabel\n              const labelStyle = {\n                'font-family': config.style.inCanfontFamily,\n                'font-size': labelFontSize,\n                'line-height': labelFontSize * 1.2\n              };\n              smartLabel.setStyle(labelStyle);\n              labelTextObj = smartLabel.getSmartText(\n                labelText,\n                config.outerradius,\n                labelFontSize * 1.2,\n                false\n              );\n\n              labelTextAttr.x = labelCoords.x;\n              labelTextAttr.y = labelCoords.y;\n              labelTextAttr.fill = labelFontColor;\n              labelTextAttr['font-family'] = config.style.inCanfontFamily;\n              labelTextAttr['font-size'] = labelFontSize;\n              labelTextAttr['text-anchor'] = 'end';\n              labelTextAttr.transform = `R${endAngle + 90}, ${labelTextAttr.x}, ${labelTextAttr.y}`;\n              labelTextAttr.text = labelTextObj.text;\n\n              labelLength = this.addLabel(labelTextAttr, plot);\n              distance = distance - labelLength - labelFontSize;\n            }\n\n            if (plotIdentifierShow && config.showlabels) {\n              const el = document.createElement('div');\n              el.innerHTML = plot.getParsedText('$plotIdentifier');\n\n              let pathElement = el.firstChild.firstElementChild || el.firstChild,\n                pathAttributes = pathElement && pathElement.attributes, path,\n                legend = this.getFromEnv('legend'),\n                legendItem = config.showLegend && legend.getItem(plot.config.legendItemId),\n                graphicalElement = legendItem && legendItem.getGraphicalElement(),\n                legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol,\n                symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox(), svgScale = 1,\n                plotIdentifierCoords;\n\n              newRadius = Math.sqrt(Math.pow(track.config.innerRadius + track.config.thickness / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / track.config.innerRadius) * (180 / Math.PI);\n              plotIdentifierCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) - theta);\n              if (!symbolBBox) {\n                symbolBBox = { width: labelFontSize };\n              }\n              if (labelFontSize && symbolBBox && labelFontSize < symbolBBox.height) {\n                svgScale = labelFontSize / symbolBBox.height;\n              }\n\n              if (pathElement.tagName === 'path') {\n                for (let i = 0; i < pathAttributes.length; i++) {\n                  if (pathAttributes[i].name === 'd') {\n                    path = pathAttributes[i].nodeValue;\n                  } else {\n                    plotIdentifierAttr[pathAttributes[i].name] = pathAttributes[i].nodeValue;\n                  }\n                }\n\n                plotIdentifierAttr.path = path;\n              } else {\n                plotIdentifierAttr.path = `M0,0L${labelFontSize},0,${labelFontSize},${labelFontSize},0,${labelFontSize}Z`;\n                plotIdentifierAttr['stroke-width'] = 0.1;\n                plotIdentifierAttr.fill = plot.config.realColor || plot.config.color;\n              }\n              plotIdentifierAttr.transform = `T${plotIdentifierCoords.x - (symbolBBox.width * svgScale / 2)}, ${plotIdentifierCoords.y - (symbolBBox.height * svgScale / 2)} R${endAngle + 90}, ${plotIdentifierCoords.x}, ${plotIdentifierCoords.y} S${svgScale}`;\n              this.addPlotIdentifier(plotIdentifierAttr, plot);\n            }\n          } else {\n            // labelposition end angle 180-360\n            // iconposition start => place text, place plotIdentifier, place icon\n            distance = distance - config.labelpadding.right;\n            if (config.showlabels) {\n              radius = track.config.innerRadius + (track.config.thickness - labelFontSize) / 2 + (labelFontSize / 2);\n              newRadius = Math.sqrt(Math.pow(radius, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / radius) * (180 / Math.PI);\n              labelText = plot.getParsedText(labelText.replace('$plotIdentifier', '').replace('$plotidentifier', ''));\n              let labelCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) - theta),\n                labelLength;\n\n              // update styles of smartLabel\n              const labelStyle = {\n                'font-family': config.style.inCanfontFamily,\n                'font-size': labelFontSize,\n                'line-height': labelFontSize * 1.2\n              };\n              smartLabel.setStyle(labelStyle);\n              labelTextObj = smartLabel.getSmartText(\n                labelText,\n                config.outerradius,\n                labelFontSize * 1.2,\n                false\n              );\n\n              labelTextAttr.x = labelCoords.x;\n              labelTextAttr.y = labelCoords.y;\n              labelTextAttr.fill = labelFontColor;\n              labelTextAttr['font-family'] = config.style.inCanfontFamily;\n              labelTextAttr['font-size'] = labelFontSize;\n              labelTextAttr['text-anchor'] = 'end';\n              labelTextAttr.transform = `R${endAngle + 90}, ${labelTextAttr.x}, ${labelTextAttr.y}`;\n              labelTextAttr.text = labelTextObj.text;\n\n              labelLength = this.addLabel(labelTextAttr, plot);\n              distance = distance - labelLength - labelFontSize;\n            }\n\n            if (plotIdentifierShow && config.showlabels) {\n              const el = document.createElement('div');\n              el.innerHTML = plot.getParsedText('$plotIdentifier');\n\n              let pathElement = el.firstChild.firstElementChild || el.firstChild,\n                pathAttributes = pathElement && pathElement.attributes, path,\n                legend = this.getFromEnv('legend'),\n                legendItem = config.showLegend && legend.getItem(plot.config.legendItemId),\n                graphicalElement = legendItem && legendItem.getGraphicalElement(),\n                legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol,\n                symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox(), svgScale = 1,\n                plotIdentifierCoords;\n\n              newRadius = Math.sqrt(Math.pow(track.config.innerRadius + track.config.thickness / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / track.config.innerRadius) * (180 / Math.PI);\n              plotIdentifierCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) - theta);\n              if (!symbolBBox) {\n                symbolBBox = { width: labelFontSize };\n              }\n              if (labelFontSize && symbolBBox && labelFontSize < symbolBBox.height) {\n                svgScale = labelFontSize / symbolBBox.height;\n              }\n\n              if (pathElement.tagName === 'path') {\n                for (let i = 0; i < pathAttributes.length; i++) {\n                  if (pathAttributes[i].name === 'd') {\n                    path = pathAttributes[i].nodeValue;\n                  } else {\n                    plotIdentifierAttr[pathAttributes[i].name] = pathAttributes[i].nodeValue;\n                  }\n                }\n\n                plotIdentifierAttr.path = path;\n              } else {\n                plotIdentifierAttr.path = `M0,0L${labelFontSize},0,${labelFontSize},${labelFontSize},0,${labelFontSize}Z`;\n                plotIdentifierAttr['stroke-width'] = 0.1;\n                plotIdentifierAttr.fill = plot.config.realColor || plot.config.color;\n              }\n              plotIdentifierAttr.transform = `T${plotIdentifierCoords.x - (symbolBBox.width * svgScale / 2)}, ${plotIdentifierCoords.y - (symbolBBox.height * svgScale / 2)} R${endAngle + 90}, ${plotIdentifierCoords.x}, ${plotIdentifierCoords.y} S${svgScale}`;\n              this.addPlotIdentifier(plotIdentifierAttr, plot);\n              distance = distance - labelFontSize;\n            }\n\n            if (showIcon) {\n              if (track.config.iconurl) {\n                distance = distance - ICON_PADDING;\n                newRadius = Math.sqrt(Math.pow(track.config.innerRadius - (track.config.thickness - labelFontSize) / 2, 2) + Math.pow(distance, 2));\n                theta = Math.atan((distance) / track.config.innerRadius) * (180 / Math.PI);\n                iconAttr.iconCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(endAngle) - theta);\n                iconAttr.transform = `R${endAngle + 90}, ${iconAttr.iconCoords.x}, ${iconAttr.iconCoords.y}`;\n                iconAttr.iconSize = labelFontSize;\n                this.addIcon(iconAttr, plot, track);\n              }\n            }\n          }\n        }\n      } else {\n        if ((startAngle >= 0 && startAngle < 180) || startAngle === 360) {\n          if (config.iconposition === 'end') {\n            // labelposition start angle 0-180\n            // iconposition end => place icon, place plotIdentifier, place text\n            distance = distance + config.labelpadding.right;\n            if (showIcon) {\n              distance = distance + labelFontSize;\n              if (track.config.iconurl) {\n                newRadius = Math.sqrt(Math.pow(track.config.outerRadius - (track.config.thickness - labelFontSize) / 2, 2) + Math.pow(distance, 2));\n                theta = Math.atan(distance / track.config.outerRadius) * (180 / Math.PI);\n                iconAttr.iconCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) - theta);\n                iconAttr.transform = `R${startAngle - 90}, ${iconAttr.iconCoords.x}, ${iconAttr.iconCoords.y}`;\n                iconAttr.iconSize = labelFontSize;\n                this.addIcon(iconAttr, plot, track);\n              }\n\n              distance = distance + ICON_PADDING;\n            }\n\n            if (plotIdentifierShow && config.showlabels) {\n              const el = document.createElement('div');\n              el.innerHTML = plot.getParsedText('$plotIdentifier');\n\n              let pathElement = el.firstChild.firstElementChild || el.firstChild,\n                pathAttributes = pathElement && pathElement.attributes, path,\n                legend = this.getFromEnv('legend'),\n                legendItem = config.showLegend && legend.getItem(plot.config.legendItemId),\n                graphicalElement = legendItem && legendItem.getGraphicalElement(),\n                legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol,\n                symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox(), svgScale = 1,\n                plotIdentifierCoords;\n\n              newRadius = Math.sqrt(Math.pow(track.config.outerRadius - track.config.thickness / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / track.config.outerRadius) * (180 / Math.PI);\n              plotIdentifierCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) - theta);\n              if (!symbolBBox) {\n                symbolBBox = { width: labelFontSize };\n              }\n              if (labelFontSize && symbolBBox && labelFontSize < symbolBBox.height) {\n                svgScale = labelFontSize / symbolBBox.height;\n              }\n\n              if (pathElement.tagName === 'path') {\n                for (let i = 0; i < pathAttributes.length; i++) {\n                  if (pathAttributes[i].name === 'd') {\n                    path = pathAttributes[i].nodeValue;\n                  } else {\n                    plotIdentifierAttr[pathAttributes[i].name] = pathAttributes[i].nodeValue;\n                  }\n                }\n\n                plotIdentifierAttr.path = path;\n              } else {\n                plotIdentifierAttr.path = `M0,0L${labelFontSize},0,${labelFontSize},${labelFontSize},0,${labelFontSize}Z`;\n                plotIdentifierAttr['stroke-width'] = 0.1;\n                plotIdentifierAttr.fill = plot.config.realColor || plot.config.color;\n              }\n              plotIdentifierAttr.transform = `T${plotIdentifierCoords.x - (symbolBBox.width * svgScale / 2)}, ${plotIdentifierCoords.y - (symbolBBox.height * svgScale / 2)} R${startAngle - 90}, ${plotIdentifierCoords.x}, ${plotIdentifierCoords.y} S${svgScale}`;\n              this.addPlotIdentifier(plotIdentifierAttr, plot);\n\n              // Adding the space taken by the plot identifier to the distance for the next element\n              distance = distance + labelFontSize;\n            }\n\n            if (config.showlabels) {\n              radius = track.config.outerRadius - (track.config.thickness - labelFontSize) / 2 - (labelFontSize / 2);\n              newRadius = Math.sqrt(Math.pow(radius, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / radius) * (180 / Math.PI);\n              labelText = plot.getParsedText(labelText.replace('$plotIdentifier', '').replace('$plotidentifier', ''));\n              let labelCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) - theta);\n\n              // update styles of smartLabel\n              const labelStyle = {\n                'font-family': config.style.inCanfontFamily,\n                'font-size': labelFontSize,\n                'line-height': labelFontSize * 1.2\n              };\n              smartLabel.setStyle(labelStyle);\n              labelTextObj = smartLabel.getSmartText(\n                labelText,\n                config.outerradius,\n                labelFontSize * 1.2,\n                false\n              );\n\n              labelTextAttr.x = labelCoords.x;\n              labelTextAttr.y = labelCoords.y;\n              labelTextAttr.fill = labelFontColor;\n              labelTextAttr['font-family'] = config.style.inCanfontFamily;\n              labelTextAttr['font-size'] = labelFontSize;\n              labelTextAttr['text-anchor'] = 'end';\n              labelTextAttr.transform = `R${startAngle - 90}, ${labelTextAttr.x}, ${labelTextAttr.y}`;\n              labelTextAttr.text = labelTextObj.text;\n\n              this.addLabel(labelTextAttr, plot);\n            }\n          } else {\n            // labelposition start angle 0-180\n            // iconposition start => place text, place plotIdentifier, place icon\n            if (config.showlabels) {\n              distance = distance + config.labelpadding.right;\n              radius = track.config.outerRadius - (track.config.thickness - labelFontSize) / 2 - (labelFontSize / 2);\n              newRadius = Math.sqrt(Math.pow(radius, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / radius) * (180 / Math.PI);\n              labelText = plot.getParsedText(labelText.replace('$plotIdentifier', '').replace('$plotidentifier', ''));\n              let labelCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) - theta),\n                labelLength;\n\n              // update styles of smartLabel\n              const labelStyle = {\n                'font-family': config.style.inCanfontFamily,\n                'font-size': labelFontSize,\n                'line-height': labelFontSize * 1.2\n              };\n              smartLabel.setStyle(labelStyle);\n              labelTextObj = smartLabel.getSmartText(\n                labelText,\n                config.outerradius,\n                labelFontSize * 1.2,\n                false\n              );\n\n              labelTextAttr.x = labelCoords.x;\n              labelTextAttr.y = labelCoords.y;\n              labelTextAttr.fill = labelFontColor;\n              labelTextAttr['font-family'] = config.style.inCanfontFamily;\n              labelTextAttr['font-size'] = labelFontSize;\n              labelTextAttr['text-anchor'] = 'end';\n              labelTextAttr.transform = `R${startAngle - 90}, ${labelTextAttr.x}, ${labelTextAttr.y}`;\n              labelTextAttr.text = labelTextObj.text;\n\n              labelLength = this.addLabel(labelTextAttr, plot);\n              distance = distance + labelLength;\n            }\n\n            if (plotIdentifierShow && config.showlabels) {\n              distance = distance + labelFontSize;\n              const el = document.createElement('div');\n              el.innerHTML = plot.getParsedText('$plotIdentifier');\n              let pathElement = el.firstChild.firstElementChild || el.firstChild,\n                pathAttributes = pathElement && pathElement.attributes, path,\n                legend = this.getFromEnv('legend'),\n                legendItem = config.showLegend && legend.getItem(plot.config.legendItemId),\n                graphicalElement = legendItem && legendItem.getGraphicalElement(),\n                legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol,\n                symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox(), svgScale = 1,\n                plotIdentifierCoords;\n\n              newRadius = Math.sqrt(Math.pow(track.config.outerRadius - track.config.thickness / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / track.config.outerRadius) * (180 / Math.PI);\n              plotIdentifierCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) - theta);\n              if (!symbolBBox) {\n                symbolBBox = { width: labelFontSize };\n              }\n              if (labelFontSize && symbolBBox && labelFontSize < symbolBBox.height) {\n                svgScale = labelFontSize / symbolBBox.height;\n              }\n\n              if (pathElement.tagName === 'path') {\n                for (let i = 0; i < pathAttributes.length; i++) {\n                  if (pathAttributes[i].name === 'd') {\n                    path = pathAttributes[i].nodeValue;\n                  } else {\n                    plotIdentifierAttr[pathAttributes[i].name] = pathAttributes[i].nodeValue;\n                  }\n                }\n\n                plotIdentifierAttr.path = path;\n              } else {\n                plotIdentifierAttr.path = `M0,0L${labelFontSize},0,${labelFontSize},${labelFontSize},0,${labelFontSize}Z`;\n                plotIdentifierAttr['stroke-width'] = 0.1;\n                plotIdentifierAttr.fill = plot.config.realColor || plot.config.color;\n              }\n              plotIdentifierAttr.transform = `T${plotIdentifierCoords.x - (symbolBBox.width * svgScale / 2)}, ${plotIdentifierCoords.y - (symbolBBox.height * svgScale / 2)} R${startAngle - 90}, ${plotIdentifierCoords.x}, ${plotIdentifierCoords.y} S${svgScale}`;\n              this.addPlotIdentifier(plotIdentifierAttr, plot);\n              distance = distance + labelFontSize;\n            }\n\n            if (showIcon && track.config.iconurl) {\n              distance = distance + labelFontSize + ICON_PADDING;\n              newRadius = Math.sqrt(Math.pow(track.config.outerRadius - (track.config.thickness - labelFontSize) / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan((distance) / track.config.outerRadius) * (180 / Math.PI);\n              iconAttr.iconCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) - theta);\n              iconAttr.transform = `R${startAngle - 90}, ${iconAttr.iconCoords.x}, ${iconAttr.iconCoords.y}`;\n              iconAttr.iconSize = labelFontSize;\n              this.addIcon(iconAttr, plot, track);\n            }\n          }\n        } else if (startAngle >= 180 && startAngle < 360) {\n          if (config.iconposition === 'end') {\n            // labelposition start angle 180-360\n            // iconposition end => place plotIdentifier, place text, place icon\n            distance = distance - config.labelpadding.left;\n            if (plotIdentifierShow && config.showlabels) {\n              const el = document.createElement('div');\n              el.innerHTML = plot.getParsedText('$plotIdentifier');\n\n              let pathElement = el.firstChild.firstElementChild || el.firstChild,\n                pathAttributes = pathElement && pathElement.attributes, path,\n                legend = this.getFromEnv('legend'),\n                legendItem = config.showLegend && legend.getItem(plot.config.legendItemId),\n                graphicalElement = legendItem && legendItem.getGraphicalElement(),\n                legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol,\n                symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox(), svgScale = 1,\n                plotIdentifierCoords;\n\n              newRadius = Math.sqrt(Math.pow(track.config.innerRadius + track.config.thickness / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / track.config.innerRadius) * (180 / Math.PI);\n              plotIdentifierCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) + theta);\n              if (!symbolBBox) {\n                symbolBBox = { width: labelFontSize };\n              }\n              if (labelFontSize && symbolBBox && labelFontSize < symbolBBox.height) {\n                svgScale = labelFontSize / symbolBBox.height;\n              }\n\n              if (pathElement.tagName === 'path') {\n                for (let i = 0; i < pathAttributes.length; i++) {\n                  if (pathAttributes[i].name === 'd') {\n                    path = pathAttributes[i].nodeValue;\n                  } else {\n                    plotIdentifierAttr[pathAttributes[i].name] = pathAttributes[i].nodeValue;\n                  }\n                }\n\n                plotIdentifierAttr.path = path;\n              } else {\n                plotIdentifierAttr.path = `M0,0L${labelFontSize},0,${labelFontSize},${labelFontSize},0,${labelFontSize}Z`;\n                plotIdentifierAttr['stroke-width'] = 0.1;\n                plotIdentifierAttr.fill = plot.config.realColor || plot.config.color;\n              }\n              plotIdentifierAttr.transform = `T${plotIdentifierCoords.x - (symbolBBox.width * svgScale / 2)}, ${plotIdentifierCoords.y - (symbolBBox.height * svgScale / 2)} R${startAngle + 90}, ${plotIdentifierCoords.x}, ${plotIdentifierCoords.y} S${svgScale}`;\n              this.addPlotIdentifier(plotIdentifierAttr, plot);\n\n              // Adding the space taken by the plot identifier to the distance for the next element\n              distance = distance - labelFontSize;\n            }\n\n            if (config.showlabels) {\n              radius = track.config.innerRadius + ((track.config.thickness - labelFontSize) / 2) + (labelFontSize / 2);\n              newRadius = Math.sqrt(Math.pow(radius, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / track.config.innerRadius) * (180 / Math.PI);\n              labelText = plot.getParsedText(labelText.replace('$plotIdentifier', '').replace('$plotidentifier', ''));\n              let labelCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) + theta),\n                labelLength;\n\n              // update styles of smartLabel\n              const labelStyle = {\n                'font-family': config.style.inCanfontFamily,\n                'font-size': labelFontSize,\n                'line-height': labelFontSize * 1.2\n              };\n              smartLabel.setStyle(labelStyle);\n              labelTextObj = smartLabel.getSmartText(\n                labelText,\n                config.outerradius,\n                labelFontSize * 1.2,\n                false\n              );\n\n              labelTextAttr.x = labelCoords.x;\n              labelTextAttr.y = labelCoords.y;\n              labelTextAttr.fill = labelFontColor;\n              labelTextAttr['font-family'] = config.style.inCanfontFamily;\n              labelTextAttr['font-size'] = labelFontSize;\n              labelTextAttr['text-anchor'] = 'start';\n              labelTextAttr.transform = `R${startAngle + 90}, ${labelTextAttr.x}, ${labelTextAttr.y}`;\n              labelTextAttr.text = labelTextObj.text;\n\n              labelLength = this.addLabel(labelTextAttr, plot);\n              distance = distance - labelLength;\n            }\n\n            if (showIcon && track.config.iconurl) {\n              distance = distance - ICON_PADDING;\n              newRadius = Math.sqrt(Math.pow(track.config.innerRadius + (track.config.thickness - labelFontSize) / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan((distance) / track.config.innerRadius) * (180 / Math.PI);\n              iconAttr.iconCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) + theta);\n              iconAttr.transform = `R${startAngle + 90}, ${iconAttr.iconCoords.x}, ${iconAttr.iconCoords.y}`;\n              iconAttr.iconSize = labelFontSize;\n              this.addIcon(iconAttr, plot, track);\n            }\n          } else {\n            // labelposition start angle 180-360\n            // iconposition start => place icon, place plotIdentifier, place text\n            distance = distance - config.labelpadding.left;\n            if (showIcon) {\n              if (track.config.iconurl) {\n                newRadius = Math.sqrt(Math.pow(track.config.innerRadius + (track.config.thickness - labelFontSize) / 2, 2) + Math.pow(distance, 2));\n                theta = Math.atan((distance) / track.config.innerRadius) * (180 / Math.PI);\n                iconAttr.iconCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) + theta);\n                iconAttr.transform = `R${startAngle + 90}, ${iconAttr.iconCoords.x}, ${iconAttr.iconCoords.y}`;\n                iconAttr.iconSize = labelFontSize;\n                this.addIcon(iconAttr, plot, track);\n              }\n\n              // Adding the space taken by the icon to the distance for the next element (And 10px distance from icon)\n              distance = distance - labelFontSize - ICON_PADDING;\n            }\n\n            if (plotIdentifierShow && config.showlabels) {\n              const el = document.createElement('div');\n              el.innerHTML = plot.getParsedText('$plotIdentifier');\n\n              let pathElement = el.firstChild.firstElementChild || el.firstChild,\n                pathAttributes = pathElement && pathElement.attributes, path,\n                legend = this.getFromEnv('legend'),\n                legendItem = config.showLegend && legend.getItem(plot.config.legendItemId),\n                graphicalElement = legendItem && legendItem.getGraphicalElement(),\n                legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol,\n                symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox(), svgScale = 1,\n                plotIdentifierCoords;\n\n              newRadius = Math.sqrt(Math.pow(track.config.innerRadius + track.config.thickness / 2, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / track.config.innerRadius) * (180 / Math.PI);\n              plotIdentifierCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) + theta);\n              if (!symbolBBox) {\n                symbolBBox = { width: labelFontSize };\n              }\n              if (labelFontSize && symbolBBox && labelFontSize < symbolBBox.height) {\n                svgScale = labelFontSize / symbolBBox.height;\n              }\n\n              if (pathElement.tagName === 'path') {\n                for (let i = 0; i < pathAttributes.length; i++) {\n                  if (pathAttributes[i].name === 'd') {\n                    path = pathAttributes[i].nodeValue;\n                  } else {\n                    plotIdentifierAttr[pathAttributes[i].name] = pathAttributes[i].nodeValue;\n                  }\n                }\n\n                plotIdentifierAttr.path = path;\n              } else {\n                plotIdentifierAttr.path = `M0,0L${labelFontSize},0,${labelFontSize},${labelFontSize},0,${labelFontSize}Z`;\n                plotIdentifierAttr['stroke-width'] = 0.1;\n                plotIdentifierAttr.fill = plot.config.realColor || plot.config.color;\n              }\n              plotIdentifierAttr.transform = `T${plotIdentifierCoords.x - (symbolBBox.width * svgScale / 2)}, ${plotIdentifierCoords.y - (symbolBBox.height * svgScale / 2)} R${startAngle + 90}, ${plotIdentifierCoords.x}, ${plotIdentifierCoords.y} S${svgScale}`;\n              this.addPlotIdentifier(plotIdentifierAttr, plot);\n\n              // Adding the space taken by the plot identifier to the distance for the next element\n              distance = distance - labelFontSize - 1;\n            }\n\n            if (config.showlabels) {\n              radius = track.config.innerRadius + ((track.config.thickness - labelFontSize) / 2) + (labelFontSize / 2);\n              newRadius = Math.sqrt(Math.pow(radius, 2) + Math.pow(distance, 2));\n              theta = Math.atan(distance / radius) * (180 / Math.PI);\n              labelText = plot.getParsedText(labelText.replace('$plotIdentifier', '').replace('$plotidentifier', ''));\n              let labelCoords = pointOnCircleFromCenter(centerX, centerY, newRadius, normaliseAngle(startAngle) + theta);\n\n              // update styles of smartLabel\n              const labelStyle = {\n                'font-family': config.style.inCanfontFamily,\n                'font-size': labelFontSize,\n                'line-height': labelFontSize * 1.2\n              };\n              smartLabel.setStyle(labelStyle);\n              labelTextObj = smartLabel.getSmartText(\n                labelText,\n                config.outerradius,\n                labelFontSize * 1.2,\n                false\n              );\n\n              labelTextAttr.x = labelCoords.x;\n              labelTextAttr.y = labelCoords.y;\n              labelTextAttr.fill = labelFontColor;\n              labelTextAttr['font-family'] = config.style.inCanfontFamily;\n              labelTextAttr['font-size'] = labelFontSize;\n              labelTextAttr['text-anchor'] = 'start';\n              labelTextAttr.transform = `R${startAngle + 90}, ${labelTextAttr.x}, ${labelTextAttr.y}`;\n              labelTextAttr.text = labelTextObj.text;\n\n              this.addLabel(labelTextAttr, plot);\n            }\n          }\n        }\n      }\n    }\n\n    if (labelTextObj) {\n      if (config.showToolTip && labelTextObj.oriText !== labelTextObj.text) {\n        toolTipController.enableToolTip(plot.label, labelTextObj.oriText);\n      } else {\n        toolTipController.disableToolTip(plot.label);\n      }\n    }\n  }\n\n  addIcon (iconAttr, plot, track) {\n    let animationManager = this.getFromEnv('animationManager');\n    plot.iconImage = animationManager.setAnimation({\n      el: 'image',\n      attr: {\n        'src': track.config.iconurl,\n        'x': iconAttr.iconCoords.x,\n        'y': iconAttr.iconCoords.y,\n        'width': iconAttr.iconSize,\n        'height': iconAttr.iconSize,\n        'transform': iconAttr.transform\n      },\n      container: {\n        id: 'node-container',\n        isParent: true\n      },\n      component: this,\n      label: 'image'\n    });\n\n    this.addGraphicalElement('iconImage', plot.iconImage, true);\n  }\n\n  addPlotIdentifier (plotIdentifierAttr, plot) {\n    let animationManager = this.getFromEnv('animationManager');\n    plot.plotIdentifier = animationManager.setAnimation({\n      el: 'path',\n      attr: plotIdentifierAttr,\n      container: {\n        id: 'plot',\n        isParent: true\n      },\n      label: 'plotIdentifier',\n      component: this\n    });\n\n    this.addGraphicalElement('plotIdentifier', plot.plotIdentifier, true);\n  }\n\n  addLabel (labelTextAttr, plot) {\n    let animationManager = this.getFromEnv('animationManager');\n    plot.label = animationManager.setAnimation({\n      el: 'text',\n      attr: labelTextAttr,\n      container: {\n        id: 'plot',\n        isParent: true\n      },\n      label: 'label',\n      component: this\n    });\n\n    this.addGraphicalElement('trackLabel', plot.label, true);\n    return plot.label.node.getBBox().width;\n  }\n\n  /**\n    * Draws the center context label component on the chart\n    * @param {String} labelText the text to be shown\n    * @memberof RadialBar\n    */\n  drawContextLabel (labelText, htmlObj) {\n    if (!this.config.showcontextlabel) { return; }\n\n    let chartConfig = this.getFromEnv('chartConfig'),\n      smartLabel = this.getFromEnv('smartLabel'),\n      animationManager = this.getFromEnv('animationManager'),\n      config = this.config,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      availableWidth = chartConfig.canvasWidth,\n      availableHeight = chartConfig.canvasHeight,\n      centerX = canvasLeft + (availableWidth / 2),\n      centerY = canvasTop + (availableHeight / 2),\n      innerDiameter = config.innerradius * 2,\n      fontSize = this.computeFontSize(config.contextlabelfontsizewithunit),\n      contextLabelDivSide = Math.sqrt(2) * config.innerradius,\n      containerDivStyle, spanStyle, labelTextObj, labelGraphicsAttr;\n\n    if (config.contextlabelObject) {\n      this.removeGraphicalElement(config.contextlabelObject);\n    }\n\n    if (htmlObj) {\n      if (!config.div) {\n        config.div = document.createElement('div');\n        config.span = document.createElement('span');\n        config.div.setAttribute('style', '');\n        config.span.setAttribute('style', '');\n      }\n\n      containerDivStyle = config.div.style;\n      spanStyle = config.span.style;\n      containerDivStyle.color = config.contextlabelfontcolor;\n      containerDivStyle.fontSize = fontSize + PXSTRING;\n      containerDivStyle.overflow = 'hidden';\n      containerDivStyle['text-overflow'] = 'ellipsis';\n      containerDivStyle['word-break'] = 'break-all';\n      containerDivStyle['text-align'] = 'center';\n      containerDivStyle['font-family'] = config.contextlabelfont;\n      containerDivStyle.opacity = config.contextlabelalpha;\n      containerDivStyle.top = (centerY - contextLabelDivSide / 2) + PXSTRING;\n      containerDivStyle.left = (centerX - contextLabelDivSide / 2) + PXSTRING;\n      containerDivStyle.visibility = 'visible';\n      containerDivStyle.position = 'absolute';\n      containerDivStyle.width = contextLabelDivSide + PXSTRING;\n      containerDivStyle.height = contextLabelDivSide + PXSTRING;\n      spanStyle['margin-top'] = 'auto';\n      spanStyle['margin-bottom'] = 'auto';\n      spanStyle.display = 'flex';\n      spanStyle['flex-direction'] = 'row';\n      spanStyle['justify-content'] = 'center';\n      spanStyle['flex-wrap'] = 'wrap';\n      spanStyle['align-items'] = 'flex-start';\n      config.div.id = 'contextlabeldiv';\n      config.span.innerHTML = labelText;\n      config.div.appendChild(config.span);\n      this.getFromEnv('chart-container').appendChild(config.div);\n    } else {\n      if (this.getFromEnv('chart-container').querySelector('#contextlabeldiv')) {\n        this.getFromEnv('chart-container').removeChild(config.div);\n      }\n\n      // update styles of smartLabel\n      const labelStyle = {\n        'font-family': config.style.inCanfontFamily,\n        'font-size': fontSize,\n        'line-height': fontSize * 1.2\n      };\n      smartLabel.setStyle(labelStyle);\n      labelTextObj = smartLabel.getSmartText(\n        labelText,\n        innerDiameter - 10,\n        innerDiameter - 10,\n        false\n      );\n\n      labelGraphicsAttr = {\n        'text': labelTextObj.text,\n        'x': centerX,\n        'y': centerY,\n        'fill': config.contextlabelfontcolor,\n        'font-family': config.contextlabelfont,\n        'font-size': fontSize + PXSTRING,\n        'fill-opacity': config.contextlabelalpha\n      };\n\n      // Add the new label\n      config.contextlabelObject = animationManager.setAnimation({\n        el: 'text',\n        attr: labelGraphicsAttr,\n        container: {\n          id: 'plot',\n          isParent: true\n        },\n        label: 'label',\n        component: this\n      });\n\n      this.addGraphicalElement('contentLabel', config.contextlabelObject, true);\n    }\n  }\n}\n\nexport default RadialBar;\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport {\n  pointOnCircleFromCenter,\n  normaliseAngle,\n  findArc,\n  changeAngleBase,\n  radiansInAngle\n} from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport { toPrecision, UNDEF } from '@fusioncharts/core/src/lib';\nimport AnimationManager from '@fusioncharts/core/src/animation-manager';\nimport { getDep } from '@fusioncharts/core/src/dependency-manager/index';\n\nconst PERCENT_STR = '%',\n  M = 'M',\n  A = 'A',\n  L = 'L',\n  Z = 'Z';\n\n/**\n * Sets the svg path for drawing\n * @param {Number} _startAngle - angle where the bar starts\n * @param {Number} _endAngle - angle where the bar ends\n * @param {Number} arc - arc between the two angles\n * @param {Number} outerRadius - outer radius for the bar\n * @param {Number} innerRadius - inner radius for the bar\n * @param {Number} centerX - x coordinate of the center of the arc\n * @param {Number} centerY - y coordinate of the center of the arc\n * @param {Number} thickness - thickness of the bar\n * @param {Number} startRadius - radius for the rounded starting\n * @param {Number} endRadius - radius for rounded ending\n * @param {Boolean} trackClockwise - flag to tell if the path is clockwise or anti-clockwise\n * @returns {Array} The path array for the path to be drawn\n */\nfunction setPath (_startAngle, _endAngle, arc, outerRadius, innerRadius, centerX, centerY, thickness, startRadius, endRadius, trackClockwise) {\n  // in case of round edges, angles will be shifted so as to adjust round edge arc in the same place\n  if (startRadius > 0 && arc !== 360) {\n    // eslint-disable-next-line no-param-reassign\n    _startAngle += radiansInAngle(startRadius, innerRadius + startRadius);\n  }\n\n  if (endRadius > 0 && arc !== 360) {\n    // eslint-disable-next-line no-param-reassign\n    _endAngle -= radiansInAngle(endRadius, innerRadius + endRadius);\n  }\n\n  let startAngle = normaliseAngle(_startAngle),\n    endAngle = normaliseAngle(_endAngle),\n    { x: x1, y: y1 } = pointOnCircleFromCenter(centerX, centerY, outerRadius, startAngle),\n    { x: x2, y: y2 } = pointOnCircleFromCenter(centerX, centerY, outerRadius, endAngle),\n    { x: x3, y: y3 } = pointOnCircleFromCenter(centerX, centerY, innerRadius, startAngle),\n    { x: x4, y: y4 } = pointOnCircleFromCenter(centerX, centerY, innerRadius, endAngle);\n\n  x1 = toPrecision(x1, 4);\n  y1 = toPrecision(y1, 4);\n  x2 = toPrecision(x2, 4);\n  y2 = toPrecision(y2, 4);\n  x3 = toPrecision(x3, 4);\n  y3 = toPrecision(y3, 4);\n  x4 = toPrecision(x4, 4);\n  y4 = toPrecision(y4, 4);\n\n  return [\n    M, x1, y1,\n    A, outerRadius, outerRadius, 0, (arc <= 180) ? 0 : 1, trackClockwise ? 1 : 0, x2, y2,\n    (endRadius > 0 && arc !== 360) ? `${A}, ${thickness / 2}, ${endRadius}, 0, 1, 1, ${x4}, ${y4}` : `${L}, ${x4}, ${y4}`,\n    A, innerRadius, innerRadius, 0, (arc <= 180) ? 0 : 1, trackClockwise ? 0 : 1, x3, y3,\n    (startRadius > 0 && arc !== 360) ? `${A}, ${startRadius}, ${thickness / 2}, 0, 1, 1, ${x1}, ${y1}` : '',\n    Z\n  ];\n}\n\nfunction setTextPath (_startAngle, _endAngle, arc, radius, centerX, centerY, trackClockwise) {\n  let startAngle = normaliseAngle(_startAngle),\n    endAngle = normaliseAngle(_endAngle),\n    { x: x1, y: y1 } = pointOnCircleFromCenter(centerX, centerY, radius, startAngle),\n    { x: x2, y: y2 } = pointOnCircleFromCenter(centerX, centerY, radius, endAngle);\n\n  x1 = toPrecision(x1, 4);\n  y1 = toPrecision(y1, 4);\n  x2 = toPrecision(x2, 4);\n  y2 = toPrecision(y2, 4);\n\n  return `M ${x1} ${y1} A ${radius} ${radius} 0 ${(arc <= 180) ? 0 : 1} ${trackClockwise ? 1 : 0} ${x2} ${y2} Z`;\n}\n\nclass RadialTrack extends SmartRenderer {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @return {string} The name of the chart extension\n   */\n  getName () {\n    return 'RadialTrack';\n  }\n\n  /**\n   * Provides the type of the chart extension\n   *\n   * @return {string} The type of the chart extension\n   */\n  getType () {\n    return 'dataset';\n  }\n\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'RadialTrack';\n  }\n\n  /**\n   * Provides the type of the chart extension\n   *\n   * @static\n   * @return {string} The type of the chart extension\n   */\n  static getType () {\n    return 'dataset';\n  }\n\n  /**\n   * Sets the default values for parameters of the chart.\n   * @memberof RadialTrack\n   */\n  __setDefaultConfig () {\n    this.config.startangle = 90;\n    this.config.endangle = 180;\n\n    this.config.trackpadding = 0;\n    this.config.trackmargin = 6;\n    this.config.trackstartradius = '100%';\n    this.config.trackendradius = '100%';\n    this.config.trackfillcolor = '#0000ff';\n    this.config.trackalpha = 0.4;\n    this.config.trackborder = 'none';\n    this.config.trackbordercolor = '#000000';\n    this.config.trackborderalpha = 1;\n    this.config.trackborderthickness = 1;\n\n    this.config.value = 0;\n  }\n\n  /**\n   * Configures the chart attributes.\n   * @memberof RadialTrack\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    this.config = {\n      ...this.config,\n      ...dataObj\n    };\n\n    if (!this.getFromEnv('chartConfig')) { this.addToEnv('chartConfig', this.config); }\n\n    this.createBaseComponent();\n\n    if (dataObj.thickness) { this.config.thickness = dataObj.thickness; }\n    if (dataObj.startangle || dataObj.startangle === 0) { this.config.startingAngle = dataObj.startangle; }\n    if (dataObj.endangle || dataObj.endangle === 0) { this.config.endingAngle = dataObj.endangle; }\n\n    if (this.config.trackborder === 'none') {\n      this.config.trackborderalpha = 0;\n      this.config.trackborderthickness = 0;\n    }\n  }\n\n  createBaseComponent () {\n    let iapi = this,\n      animationManager = iapi.getFromEnv('animationManager');\n\n    if (!animationManager) {\n      animationManager = new AnimationManager();\n      iapi.addToEnv('animationManager', animationManager);\n      animationManager.addToEnv('chart', iapi);\n    }\n\n    animationManager.configure();\n    animationManager._setAnimDuration();\n  }\n\n  addPaperToEnv () {\n    var container = this.getFromEnv('chart-container'),\n      Raphael = getDep('redraphael', 'plugin'),\n      paper = new Raphael(container, this.getFromEnv('chartWidth'), this.getFromEnv('chartHeight'));\n\n    paper.setHTMLClassName('fusioncharts-div');\n    let animationManager = this.getFromEnv('animationManager');\n    animationManager.addToEnv('paper', paper);\n  }\n\n  /**\n   * Called from the parent chart class. Sets values needed for\n   * space management and kicks off drawing process.\n   * @param {Number} box side of the square in which chart will be drawn.\n   * @param {Number} thickness thickness of a track\n   * @memberof RadialTrack\n   */\n  setNodePath (box, thickness, config) {\n    this.config.thickness = thickness;\n    this.config.outerRadius = box / 2;\n    this.config.innerRadius = this.config.outerRadius - this.config.thickness;\n    this.config.trackstartradius = config.trackstartradius;\n    this.config.trackendradius = config.trackendradius;\n    this.manageSpace();\n  }\n\n  /**\n   * Calculate margins and space for and mange space for components\n   * @memberof RadialTrack\n   */\n  manageSpace () {\n    let chartConfig = this.getFromEnv('chartConfig'),\n      config = this.config,\n      radialBar = this.getLinkedParent(),\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      availableWidth = chartConfig.canvasWidth,\n      availableHeight = chartConfig.canvasHeight,\n      centerX = canvasLeft + (availableWidth / 2),\n      centerY = canvasTop + (availableHeight / 2),\n      startAngle = changeAngleBase(config.startingAngle),\n      endingAngle = changeAngleBase(config.endingAngle),\n      endAngle = (startAngle === endingAngle) ? (endingAngle - 0.1) : endingAngle,\n      arc = findArc(startAngle, endAngle),\n      startRadius = (parseInt(config.trackstartradius, 10) / 100) * (config.thickness / 2),\n      endRadius = (parseInt(config.trackendradius, 10) / 100) * (config.thickness / 2),\n      labelFontSize = config.thickness - radialBar.config.labelpadding.top - radialBar.config.labelpadding.bottom,\n      iconSize, numTicksBaseNumber = parseInt((arc / ((radialBar.config.tickvaluefontsize / (2 * Math.PI * radialBar.config.outerradius)) * 360)) / 2, 10);\n    labelFontSize = iconSize = (labelFontSize < 5) ? config.thickness : labelFontSize;\n    iconSize = iconSize * parseInt(radialBar.config.iconscale, 10) / 100;\n\n    if (iconSize >= Math.abs(config.outerRadius - config.innerRadius)) {\n      iconSize = Math.abs(config.outerRadius - config.innerRadius);\n    }\n    iconSize = iconSize < 0 ? Math.abs(config.outerRadius - config.innerRadius) : iconSize;\n\n    // Calculating the number of ticks as per start & end angles and font size\n    config.numTicks = parseInt(config.numTicks, 10);\n    if (isNaN(config.numTicks)) {\n      // When numticks is auto\n      config.numTicks = numTicksBaseNumber > 10 ? 10 : numTicksBaseNumber;\n    } else {\n      config.numTicks = config.numTicks > numTicksBaseNumber ? numTicksBaseNumber : config.numTicks;\n    }\n\n    // Setting the angle occupied by icon display\n    iconSize = radialBar.config.iconposition === 'end' ? iconSize / 2 + 10 : iconSize + 10;\n    config.iconAngle = (iconSize / (2 * Math.PI * (config.outerRadius - config.thickness / 2))) * 360;\n    config.iconAngle = radialBar.config.showlabelicon ? config.iconAngle : 0;\n\n    // Setting the angle occupied by plot identifier display\n    config.plotIdentifierAngle = (radialBar.config.labeltext.toLowerCase().indexOf('$plotidentifier') > -1) ? ((labelFontSize + 1) / (2 * Math.PI * (config.outerRadius - config.thickness))) * 360 : 0;\n\n    // Setting the angle occupied by padding\n    config.paddingAngle = ((radialBar.config.labelpadding.left) / (2 * Math.PI * (config.outerRadius - config.thickness / 2))) * 360;\n\n    config.labelPath = {\n      start: {\n        start: setTextPath(\n          startAngle + config.paddingAngle + config.iconAngle + config.plotIdentifierAngle,\n          endAngle,\n          arc,\n          config.outerRadius - config.thickness / 2,\n          centerX,\n          centerY,\n          config.thickness,\n          startRadius,\n          endRadius,\n          true\n        ),\n        end: setTextPath(\n          startAngle + config.paddingAngle + config.plotIdentifierAngle,\n          endAngle,\n          arc,\n          config.outerRadius - config.thickness / 2,\n          centerX,\n          centerY,\n          true\n        )\n      },\n      end: {\n        start: setTextPath(\n          endAngle - config.paddingAngle - config.iconAngle - config.plotIdentifierAngle,\n          startAngle,\n          arc,\n          config.outerRadius - config.thickness / 2,\n          centerX,\n          centerY,\n          false\n        ),\n        end: setTextPath(\n          endAngle - config.paddingAngle - config.plotIdentifierAngle,\n          startAngle,\n          arc,\n          config.outerRadius - config.thickness / 2,\n          centerX,\n          centerY,\n          false\n        )\n      }\n    };\n\n    config.arcLength = (arc / 360) * (2 * Math.PI * (config.outerRadius - config.thickness / 2));\n    config.path_d = setPath(\n      startAngle,\n      endAngle,\n      arc,\n      config.outerRadius,\n      config.innerRadius,\n      centerX,\n      centerY,\n      config.thickness,\n      startRadius,\n      endRadius,\n      true\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  allocatePosition () {\n    return false;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  checkInvalidData () {\n    return false;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  checkInvalidSpecificData () {\n    return false;\n  }\n\n  /**\n   * Draws the track\n   * @memberof RadialTrack\n   */\n  draw () {\n    this.addGraphicalElement({\n      el: 'path',\n      attr: {\n        'path': this.config.path_d,\n        'fill': this.config.trackfillcolor,\n        'stroke': this.config.trackbordercolor,\n        'stroke-width': this.config.trackborderthickness,\n        'stroke-opacity': this.config.trackborderalpha,\n        'stroke-dasharray': (this.config.trackborder === 'dashed') ? 5 : UNDEF,\n        'fill-opacity': this.config.trackalpha\n      },\n      container: {\n        id: 'node-container',\n        isParent: true\n      },\n      label: 'track',\n      component: this\n    });\n\n    // Create ticks\n    if (this.config.isLast) {\n      this.drawTicks();\n    }\n  }\n\n  /**\n   * Draws the ticks anf tick labels\n   * @memberof RadialTrack\n   */\n  drawTicks () {\n    let chartConfig = this.getFromEnv('chartConfig'),\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      availableWidth = chartConfig.canvasWidth,\n      availableHeight = chartConfig.canvasHeight,\n      centerX = canvasLeft + (availableWidth / 2),\n      centerY = canvasTop + (availableHeight / 2),\n      startAngle = changeAngleBase(this.config.startingAngle),\n      endingAngle = changeAngleBase(this.config.endingAngle),\n      trackArc = findArc(startAngle, (startAngle === endingAngle) ? (endingAngle - 0.1) : endingAngle),\n      diff = trackArc / this.config.numTicks,\n      percentDiff = 100 / this.config.numTicks,\n      start, end, finalAngle, labelstart, tickValueRadius,\n      labelStartArr = [];\n\n    if (startAngle === endingAngle) {\n      this.config.numTicks -= 1;\n    }\n    for (let i = 0; i <= this.config.numTicks; i++) {\n      finalAngle = normaliseAngle(startAngle) + (i * diff);\n      tickValueRadius = this.config.outerRadius + this.config.tickMarkLength + this.config.tickvaluegap;\n      labelstart = pointOnCircleFromCenter(centerX, centerY, tickValueRadius, finalAngle);\n\n      if (this.config.showtickvalues) {\n        labelStartArr.push(labelstart);\n      }\n\n      end = pointOnCircleFromCenter(centerX, centerY, this.config.outerRadius + this.config.tickMarkLength, finalAngle);\n      start = pointOnCircleFromCenter(centerX, centerY, this.config.outerRadius, finalAngle);\n\n      // Adding the tick marks\n      if (this.config.showtickmarks && this.config.showticks) {\n        this.addGraphicalElement({\n          el: 'path',\n          attr: {\n            'path': `${M} ${start.x} ${start.y} ${L} ${end.x} ${end.y} ${Z}`,\n            'stroke': this.config.tickmarkcolor,\n            'stroke-width': (this.config.tickmarkthickness / 2),\n            'stroke-opacity': this.config.tickalpha\n          },\n          container: {\n            id: 'ticks-container',\n            isParent: true\n          },\n          label: 'tick',\n          component: this\n        });\n      }\n    }\n\n    if (this.config.showtickvalues && this.config.showticks) {\n      labelStartArr.forEach((labelPos, index) => {\n        finalAngle = changeAngleBase(normaliseAngle(startAngle) + (index * diff));\n        finalAngle = finalAngle < 0 ? 360 + finalAngle : finalAngle;\n        finalAngle = finalAngle % 360;\n        this.addGraphicalElement({\n          el: 'text',\n          attr: {\n            'text': Math.round(index * percentDiff) + PERCENT_STR,\n            'x': labelPos.x,\n            'y': labelPos.y,\n            'fill': this.config.tickvaluefontcolor,\n            'font-family': this.config.tickvaluelabelfont,\n            'font-size': this.computeFontSize(this.config.tickvaluefontsizeWithUnit),\n            'opacity': this.config.tickvaluealpha,\n            'text-anchor': finalAngle > 180 ? 'end' : 'start'\n          },\n          container: {\n            id: 'ticks-container',\n            isParent: true\n          },\n          label: 'label',\n          component: this\n        });\n      });\n    }\n  }\n}\n\nexport default RadialTrack;\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport { toPrecision, UNDEF, isIpad, BLANKSTRING, parseTooltext, toRaphaelColor } from '@fusioncharts/core/src/lib';\nimport AnimationManager from '@fusioncharts/core/src/animation-manager';\nimport { getDep } from '@fusioncharts/core/src/dependency-manager/index';\nimport {\n  pointOnCircleFromCenter,\n  normaliseAngle,\n  findArc,\n  changeAngleBase,\n  radiansInAngle } from '@fusioncharts/utils/src/scale-utils/polar-util';\n\nconst M = 'M',\n  A = 'A',\n  L = 'L',\n  Z = 'Z';\n\n/**\n * Sets the svg path for drawing\n * @param {Number} _startAngle - angle where the bar starts\n * @param {Number} _endAngle - angle where the bar ends\n * @param {Number} arc - arc between the two angles\n * @param {Number} outerRadius - outer radius for the bar\n * @param {Number} innerRadius - inner radius for the bar\n * @param {Number} centerX - x coordinate of the center of the arc\n * @param {Number} centerY - y coordinate of the center of the arc\n * @param {Number} startRadius - radius for the rounded starting\n * @param {Number} endRadius - radius for rounded ending\n * @returns {Array} The path array for the path to be drawn\n */\nfunction setPath (_startAngle, _endAngle, arc, outerRadius, innerRadius, centerX, centerY, thickness, startRadius, endRadius) {\n  // in case of round edges, angles will be shifted so as to adjust round edge arc in the same place\n  if (startRadius > 0 && arc !== 360) {\n    // eslint-disable-next-line no-param-reassign\n    _startAngle += radiansInAngle(startRadius, innerRadius + startRadius);\n  }\n\n  if (endRadius > 0 && arc !== 360) {\n    // eslint-disable-next-line no-param-reassign\n    _endAngle -= radiansInAngle(endRadius, innerRadius + endRadius);\n  }\n\n  let startAngle = normaliseAngle(_startAngle),\n    endAngle = normaliseAngle(_endAngle),\n    { x: x1, y: y1 } = pointOnCircleFromCenter(centerX, centerY, outerRadius, startAngle),\n    { x: x2, y: y2 } = pointOnCircleFromCenter(centerX, centerY, outerRadius, endAngle),\n    { x: x3, y: y3 } = pointOnCircleFromCenter(centerX, centerY, innerRadius, startAngle),\n    { x: x4, y: y4 } = pointOnCircleFromCenter(centerX, centerY, innerRadius, endAngle);\n\n  x1 = toPrecision(x1, 4);\n  y1 = toPrecision(y1, 4);\n  x2 = toPrecision(x2, 4);\n  y2 = toPrecision(y2, 4);\n  x3 = toPrecision(x3, 4);\n  y3 = toPrecision(y3, 4);\n  x4 = toPrecision(x4, 4);\n  y4 = toPrecision(y4, 4);\n\n  return [\n    M, x1, y1,\n    A, outerRadius, outerRadius, 0, arc <= 180 ? 0 : 1, 1, x2, y2,\n    (endRadius > 0 && arc !== 360) ? `${A}, ${endRadius}, ${endRadius}, 0, 1, 1, ${x4}, ${y4}` : `${L}, ${x4}, ${y4}`,\n    A, innerRadius, innerRadius, 0, arc <= 180 ? 0 : 1, 0, x3, y3,\n    (startRadius > 0 && arc !== 360) ? `${A}, ${startRadius}, ${startRadius}, 0, 1, 1, ${x1}, ${y1}` : '',\n    Z\n  ];\n}\n\nclass RadialBarPlot extends SmartRenderer {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @return {string} The name of the chart extension\n   */\n  getName () {\n    return 'RadialBarPlot';\n  }\n\n  /**\n   * Provides the type of the chart extension\n   *\n   * @return {string} The type of the chart extension\n   */\n  getType () {\n    return 'plot';\n  }\n\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'RadialBarPlot';\n  }\n\n  /**\n   * Provides the type of the chart extension\n   *\n   * @static\n   * @return {string} The type of the chart extension\n   */\n  static getType () {\n    return 'plot';\n  }\n\n  /**\n   * This method handles mouseover event of a plot\n   * @param {Event} e - reference of the original mouse event\n   * @memberof RadialBarPlot\n   */\n  _mouseOverHandler (e) {\n    const toolTipController = this.getFromEnv('toolTipController'),\n      radialBar = this.getLinkedParent();\n\n    // Create context label text if not present\n    if (radialBar.config.showcontextlabel) {\n      radialBar.drawContextLabel(this.getParsedText(this.config.contexttext, true), true);\n    }\n\n    // Create plot tooltext if not present\n    if (radialBar.config.showtooltip && !this.config.currentToolTip) {\n      this.config.currentToolTip = toolTipController.draw(e.originalEvent, this.getParsedText(this.config.tooltext, true));\n    }\n    this.config.realBarAlpha = this.config.realBarAlpha || this.config.baralpha;\n    this.config.realBarBorderAlpha = this.config.realBarBorderAlpha || this.config.barborderalpha;\n    this.setData({\n      'baralpha': 0.25 * this.config.realBarAlpha,\n      'barborderalpha': 0.25 * this.config.realBarBorderAlpha\n    }, true);\n  }\n\n  /**\n   * This method handles mouseout event of a plot\n   * @param {Event} e - reference of the original mouse event\n   * @memberof RadialBarPlot\n   */\n  _mouseOutHandler (e) {\n    const toolTipController = this.getFromEnv('toolTipController'),\n      radialBar = this.getLinkedParent();\n\n    if (this.config.currentToolTip) {\n      toolTipController.hide(this.config.currentToolTip);\n      this.config.currentToolTip = UNDEF;\n    }\n\n    this.setData({\n      'baralpha': this.config.realBarAlpha,\n      'barborderalpha': this.config.realBarBorderAlpha\n    }, true);\n\n    if (radialBar.config.showcontextlabel) {\n      radialBar.drawContextLabel(radialBar.config.defaultcontextlabel);\n    }\n  }\n\n  /**\n   * Sets the default values for parameters of the chart.\n   * @memberof RadialBarPlot\n   */\n  __setDefaultConfig () {\n    this.config.startangle = 90;\n    this.config.endangle = 180;\n    this.config.barstartradius = '100%';\n    this.config.barendradius = '100%';\n    this.config.barborder = 'none';\n    this.config.barbordercolor = '#000000';\n    this.config.barborderalpha = 1;\n    this.config.barborderthickness = 1;\n    this.config.color = '#0000ff';\n    this.config.baralpha = 1;\n    this.config.value = 0;\n  }\n\n  /**\n   * Configures the chart attributes.\n   * @memberof RadialBarPlot\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    this.config = {\n      ...this.config,\n      ...dataObj\n    };\n\n    if (!this.getFromEnv('chartConfig')) { this.addToEnv('chartConfig', this.config); }\n\n    this.createBaseComponent();\n\n    if (dataObj.thickness) { this.config.thickness = dataObj.thickness; }\n    if (dataObj.startangle || dataObj.startangle === 0) { this.config.startingAngle = dataObj.startangle; }\n    if (dataObj.endangle || dataObj.endangle === 0) { this.config.endingAngle = dataObj.endangle; }\n\n    if (this.config.barborder === 'none') {\n      this.config.barborderalpha = 0;\n      this.config.barborderthickness = 0;\n    }\n\n    this.getLinkedParent().config.showLegend && this._addLegend();\n  }\n\n  createBaseComponent () {\n    let iapi = this,\n      animationManager = iapi.getFromEnv('animationManager');\n\n    if (!animationManager) {\n      animationManager = new AnimationManager();\n      iapi.addToEnv('animationManager', animationManager);\n      animationManager.addToEnv('chart', iapi);\n    }\n\n    animationManager.configure();\n    animationManager._setAnimDuration();\n  }\n\n  addPaperToEnv () {\n    var container = this.getFromEnv('chart-container'),\n      Raphael = getDep('redraphael', 'plugin'),\n      paper = new Raphael(container, this.getFromEnv('chartWidth'), this.getFromEnv('chartHeight'));\n\n    paper.setHTMLClassName('fusioncharts-div');\n    let animationManager = this.getFromEnv('animationManager');\n    animationManager.addToEnv('paper', paper);\n  }\n\n  /**\n   * Called from the parent chart class. Sets values needed for\n   * space management and kicks off drawing process.\n   * @param {Number} box side of the square in which chart will be drawn.\n   * @param {Number} thickness thickness of a track\n   * @memberof RadialBarPlot\n   */\n  setNodePath (box, thickness, config) {\n    this.config.thickness = thickness;\n    this.config.outerRadius = box / 2;\n    this.config.innerRadius = this.config.outerRadius - this.config.thickness;\n    this.config.barstartradius = config.barstartradius;\n    this.config.barendradius = config.barendradius;\n    this.manageSpace();\n  }\n\n  /**\n   * Calculate margins and space for and mange space for components\n   * @memberof RadialBarPlot\n   */\n  manageSpace () {\n    let chartConfig = this.getFromEnv('chartConfig'),\n      radialBar = this.getLinkedParent(),\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      availableWidth = chartConfig.canvasWidth,\n      availableHeight = chartConfig.canvasHeight,\n      centerX = canvasLeft + (availableWidth / 2),\n      centerY = canvasTop + (availableHeight / 2),\n      startAngle = changeAngleBase(this.config.startingAngle),\n      endingAngle = changeAngleBase(this.config.endingAngle),\n      trackArc = findArc(startAngle, (startAngle === endingAngle) ? (endingAngle - 0.1) : endingAngle),\n      endAngle = startAngle + Math.round(((this.config.value > 100 ? 100 : this.config.value) / 100) * trackArc),\n      arc,\n      startRadius = (parseInt(this.config.barstartradius, 10) / 100) * (this.config.thickness / 2),\n      endRadius = (parseInt(this.config.barendradius, 10) / 100) * (this.config.thickness / 2);\n\n    endAngle = startAngle === endingAngle ? endAngle - 0.01 : endAngle;\n    arc = findArc(startAngle, endAngle);\n\n    this.getFromEnv('chart-attrib').interactivelegend = radialBar.config.interactivelegend;\n    this.config.path_d = setPath(\n      startAngle,\n      endAngle,\n      arc,\n      this.config.outerRadius,\n      this.config.innerRadius,\n      centerX,\n      centerY,\n      this.config.thickness,\n      startRadius,\n      endRadius\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  allocatePosition () {\n    return false;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  checkInvalidData () {\n    return false;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  checkInvalidSpecificData () {\n    return false;\n  }\n\n  /**\n   * Adds the legend component\n   * @memberof RadialBarPlot\n   */\n  _addLegend () {\n    let legend = this.getFromEnv('legend'),\n      legendItem = legend.getItem(this.config.legendItemId),\n      radialBar = this.getLinkedParent(),\n      config = {\n        label: this.config.label,\n        type: 'radialBar',\n        showIcon: parseInt(radialBar.config.showiconinlegend, 10) && this.config.iconurl,\n        iconUrl: this.config.iconurl\n      };\n\n    if (!legendItem) {\n      this.config.legendItemId = legend.createItem(this.getLinkedParent());\n      legendItem = legend.getItem(this.config.legendItemId);\n    }\n\n    legendItem.configure(config);\n    legendItem.setStateCosmetics('default', {\n      symbol: {\n        fill: (this.config.realColor || this.config.color),\n        stroke: this.config.barbordercolor,\n        rawFillColor: (this.config.realColor || this.config.color),\n        rawStrokeColor: this.config.barbordercolor,\n        bgColor: (this.config.realColor || this.config.color),\n        bgAlpha: (this.config.realBarAlpha || this.config.baralpha) * 100,\n        opacity: (this.config.realBarAlpha || this.config.baralpha) * 100\n      }\n    });\n\n    legendItem.setStateCosmetics('highlight', {\n      symbol: {\n        fill: this.config.legenditemcolor,\n        stroke: this.config.legenditembordercolor,\n        rawFillColor: this.config.legenditemcolor,\n        rawStrokeColor: this.config.legenditembordercolor,\n        bgColor: this.config.legenditemcolor,\n        bgAlpha: 25,\n        opacity: 25\n      },\n      text: {\n        fill: toRaphaelColor({ alpha: 25 })\n      }\n    });\n\n    this.addExtEventListener('fc-click', function () {\n      legendItem.itemClickFn();\n    }, legendItem);\n  }\n\n  /**\n   * Returns text with processed macro values\n   * @param {String} text the text to be processed.\n   * @param {Boolean} isIcon flag for including icons.\n   * @returns {String} The parsed text with svg/span macro elements\n   * @memberof RadialBarPlot\n   */\n  getParsedText (text, isIcon, textSize) {\n    let legend = this.getFromEnv('legend'),\n      chartConfig = this.getFromEnv('chartConfig'),\n      radialBar = this.getLinkedParent(),\n      SMALLSQUARE = '&#9632;',\n      MEDIUMSQUARE = '&#x25FC;',\n      uniChar = isIpad ? SMALLSQUARE : MEDIUMSQUARE,\n      pathArr,\n      newPathArr = [],\n      i,\n      j,\n      symbolBBox,\n      legendItemSymbol,\n      pathStart = [],\n      finalPath = BLANKSTRING,\n      legendItem = this.getLinkedParent().config.showLegend && legend.getItem(this.config.legendItemId),\n      graphicalElement = legendItem && legendItem.getGraphicalElement(),\n      transformText = '',\n      svgSize = textSize || this.config.labelFontSize,\n      plotIdentifier,\n      parseConfig,\n      imageSize,\n      svgScale,\n      strokeWidth,\n      iconSpacing;\n\n    if (legendItem && !chartConfig.showiconinlegend) {\n      legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol;\n      pathArr = legendItemSymbol && legendItemSymbol.attrs.path.split(/(?=[LMCA])/);\n      symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox();\n      svgSize = symbolBBox.height;\n      strokeWidth = graphicalElement.legendItemSymbol.node.getAttribute('stroke-width');\n      if (textSize && textSize < symbolBBox.height) {\n        svgSize = textSize;\n        svgScale = textSize / symbolBBox.height;\n        strokeWidth = strokeWidth * svgScale / 2;\n        transformText = `transform=scale(${svgScale},${svgScale})`;\n      }\n      if (pathArr && pathArr.length) {\n        for (i = 0; i < pathArr.length; i++) {\n          pathStart.push(pathArr[i][0]);\n          pathArr[i] = pathArr[i].substring(1, pathArr[i].length);\n          if (i === (pathArr.length - 1)) {\n            pathArr[i] = pathArr[i].substring(0, pathArr[i].length - 1);\n          }\n          newPathArr[i] = pathArr[i].split(',');\n        }\n      }\n      if (newPathArr && newPathArr.length) {\n        for (i = 0; i < newPathArr.length; i++) {\n          if (newPathArr[i].length) {\n            for (j = 0; j < newPathArr[i].length; j++) {\n              newPathArr[i][j] = Number(newPathArr[i][j]);\n              if (pathStart[i] !== 'A') {\n                if (j % 2 === 0) {\n                  newPathArr[i][j] = newPathArr[i][j] - symbolBBox.x;\n                } else {\n                  newPathArr[i][j] = newPathArr[i][j] - symbolBBox.y;\n                }\n              } else if (pathStart[i] === 'A') {\n                if (j === 5) {\n                  newPathArr[i][j] = newPathArr[i][j] - symbolBBox.x;\n                } else if (j === 6) {\n                  newPathArr[i][j] = newPathArr[i][j] - symbolBBox.y;\n                }\n              }\n            }\n          }\n          finalPath += pathStart[i] + newPathArr[i].toString();\n        }\n      }\n      finalPath = finalPath + 'Z';\n    }\n\n    plotIdentifier = (legendItem && finalPath) ? `<svg style=\"margin:0px 1px 0px 1px;\" height= ${svgSize} width = ${svgSize} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= ${finalPath} fill = ${this.config.realColor || this.config.color} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n      stroke-opacity = 1 fill-opacity = 1 ${transformText}\n      stroke-width = ${strokeWidth} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n    </svg>` : `<span style='color: ${this.config.realColor || this.config.color};'>${uniChar}&nbsp;</span>`;\n\n    parseConfig = {\n      value: this.config.value,\n      barColor: this.config.realColor || this.config.color,\n      plotIdentifier: plotIdentifier\n    };\n\n    if (isIcon) {\n      if (this.config.iconurl) {\n        imageSize = svgSize * parseInt(radialBar.config.iconscale, 10) / 100;\n        if (imageSize >= Math.abs(this.config.outerRadius - this.config.innerRadius)) {\n          imageSize = Math.abs(this.config.outerRadius - this.config.innerRadius);\n        }\n        imageSize = imageSize < 0 ? Math.abs(this.config.outerRadius - this.config.innerRadius) : imageSize;\n        if (textSize) {\n          iconSpacing = radialBar.config.iconposition === 'end' ? '0px 0px 0px 10px' : '0px 10px 0px 0px';\n        }\n        parseConfig.icon = `<svg style=\"margin:${iconSpacing};\" height= ${imageSize} width = ${imageSize} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n          <image preserveAspectRatio=\"none\" href=${this.config.iconurl}\n          x=\"0\" y=\"0\" width= ${imageSize} height=${imageSize}></image>\n        </svg>`;\n      } else {\n        parseConfig.icon = plotIdentifier;\n      }\n    }\n\n    // Setting the custom tooltip text for the plot\n    return (parseTooltext(text, [1, 2, 3, 172, 145, 173], {\n      label: this.config.label,\n      formattedValue: this.config.dataValue\n    }, parseConfig) || this.config.label);\n  }\n\n  /**\n   * Draws the plot\n   * @memberof RadialBarPlot\n   */\n  draw () {\n    const radialBar = this.getLinkedParent();\n    this.addGraphicalElement({\n      el: 'path',\n      attr: {\n        'path': this.config.path_d,\n        'fill': this.config.color,\n        'stroke': this.config.barbordercolor,\n        'stroke-width': this.config.barborderthickness,\n        'stroke-opacity': (this.config.plotHidden ? 0 : this.config.barborderalpha),\n        'stroke-dasharray': (this.config.barborder === 'dashed') ? 5 : UNDEF,\n        'fill-opacity': (this.config.plotHidden ? 0 : this.config.baralpha)\n      },\n      container: {\n        id: 'node-container',\n        isParent: true\n      },\n      label: 'bar',\n      component: this\n    });\n\n    // Draw label for this bar\n    if (!this.config.plotHidden) {\n      radialBar.drawLabel(radialBar.getChildren('dataset')[this.config.plotIndex], this);\n    }\n  }\n}\n\nexport default RadialBarPlot;\n"],"sourceRoot":""}