{"version":3,"sources":["webpack:///./packages/fusioncharts/charts/index.js","webpack:///./packages/fusioncharts/viz/column2d.js","webpack:///./packages/fc-charts/src/chart/column2d/index.js","webpack:///./packages/fusioncharts/viz/column3d.js","webpack:///./packages/fc-charts/src/chart/column3d/index.js","webpack:///./packages/fc-charts/src/chart/_internal/sscartesian3d.js","webpack:///./packages/fc-charts/src/factories/canvas-3d-axis-ref-cartesian.js","webpack:///./packages/fc-charts/src/_internal/components/canvases/canvas3d.js","webpack:///./packages/fc-charts/src/_internal/components/canvases/canvas3d.animation.js","webpack:///./packages/fc-core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.cubepath.js","webpack:///./packages/fc-charts/src/factories/singleseries3d-dataset.js","webpack:///./packages/fc-charts/src/dataset/groups/column3d/index.js","webpack:///./packages/fc-charts/src/dataset/groups/column3d/index.animation.js","webpack:///./packages/fc-charts/src/dataset/column3d/index.js","webpack:///./packages/fc-charts/src/dataset/_internal/column3d-utils.js","webpack:///./packages/fc-charts/src/dataset/column3d/index.animation.js","webpack:///./packages/fusioncharts/viz/line.js","webpack:///./packages/fc-charts/src/chart/line/index.js","webpack:///./packages/fusioncharts/viz/area2d.js","webpack:///./packages/fc-charts/src/chart/area2d/index.js","webpack:///./packages/fusioncharts/viz/bar2d.js","webpack:///./packages/fc-charts/src/chart/bar2d/index.js","webpack:///./packages/fc-charts/src/chart/_internal/ssbarcartesian.js","webpack:///./packages/fusioncharts/viz/bar3d.js","webpack:///./packages/fc-charts/src/chart/bar3d/index.js","webpack:///./packages/fc-charts/src/chart/_internal/ssbarcartesian3d.js","webpack:///./packages/fc-charts/src/dataset/bar3d/index.js","webpack:///./packages/fc-charts/src/dataset/bar3d/index.animation.js","webpack:///./packages/fusioncharts/viz/pie2d.js","webpack:///./packages/fc-charts/src/chart/pie2d/index.js","webpack:///./packages/fc-charts/src/factories/pie-dataset.js","webpack:///./packages/fusioncharts/viz/pie3d.js","webpack:///./packages/fc-charts/src/chart/pie3d/index.js","webpack:///./packages/fc-charts/src/dataset/pie3d/index.js","webpack:///./packages/fc-charts/src/dataset/doughnut2d/index.js","webpack:///./packages/fc-charts/src/dataset/doughnut2d/index.animation.js","webpack:///./packages/fc-charts/src/dataset/pie3d/index.animation.js","webpack:///./packages/fusioncharts/viz/doughnut2d.js","webpack:///./packages/fc-charts/src/chart/doughnut2d/index.js","webpack:///./packages/fusioncharts/viz/doughnut3d.js","webpack:///./packages/fc-charts/src/chart/doughnut3d/index.js","webpack:///./packages/fc-charts/src/dataset/doughnut3d/index.js","webpack:///./packages/fc-charts/src/dataset/doughnut3d/index.animation.js","webpack:///./packages/fusioncharts/viz/pareto2d.js","webpack:///./packages/fc-charts/src/chart/pareto2d/index.js","webpack:///./packages/fc-charts/src/dataset/pareto/index.js","webpack:///./packages/fc-charts/src/dataset/pareto/index.animation.js","webpack:///./packages/fc-charts/src/dataset/paretoline/index.js","webpack:///./packages/fc-charts/src/factories/pareto-axis.js","webpack:///./packages/fc-charts/src/factories/pareto-dataset.js","webpack:///./packages/fusioncharts/viz/pareto3d.js","webpack:///./packages/fc-charts/src/chart/pareto3d/index.js","webpack:///./packages/fc-charts/src/dataset/pareto3d/index.js","webpack:///./packages/fusioncharts/viz/scrollcombidy2d.js","webpack:///./packages/fc-charts/src/chart/scrollcombidy2d/index.js","webpack:///./packages/fc-charts/src/chart/mscombidy2d/index.js","webpack:///./packages/fusioncharts/viz/scrollcombi2d.js","webpack:///./packages/fc-charts/src/chart/scrollcombi2d/index.js","webpack:///./packages/fc-charts/src/chart/scrollarea2d/index.js","webpack:///./packages/fc-charts/src/chart/scrollcolumn2d/index.js","webpack:///./packages/fusioncharts/viz/scrollstackedcolumn2d.js","webpack:///./packages/fc-charts/src/chart/scrollstackedcolumn2d/index.js","webpack:///./packages/fusioncharts/viz/scrollmsstackedcolumn2d.js","webpack:///./packages/fc-charts/src/chart/scrollmsstackedcolumn2d/index.js","webpack:///./packages/fusioncharts/viz/scrollmsstackedcolumn2dlinedy.js","webpack:///./packages/fc-charts/src/chart/scrollmsstackedcolumn2dlinedy/index.js","webpack:///./packages/fusioncharts/viz/scrollstackedbar2d.js","webpack:///./packages/fc-charts/src/chart/scrollstackedbar2d/index.js","webpack:///./packages/fc-charts/src/chart/scrollbar2d/index.js","webpack:///./packages/fusioncharts/viz/scrollarea2d.js","webpack:///./packages/fusioncharts/viz/scrollline2d.js","webpack:///./packages/fc-charts/src/chart/scrollline2d/index.js","webpack:///./packages/fusioncharts/viz/scrollcolumn2d.js","webpack:///./packages/fusioncharts/viz/scrollbar2d.js","webpack:///./packages/fusioncharts/viz/bubble.js","webpack:///./packages/fc-charts/src/chart/bubble/index.js","webpack:///./packages/fc-charts/src/chart/scatter/index.js","webpack:///./packages/fc-charts/src/dataset/bubble/index.js","webpack:///./packages/fc-charts/src/dataset/bubble/index.animation.js","webpack:///./packages/fc-charts/src/dataset/groups/bubble/index.js","webpack:///./packages/fusioncharts/viz/scatter.js","webpack:///./packages/fusioncharts/viz/msstackedcolumn2d.js","webpack:///./packages/fusioncharts/viz/stackedarea2d.js","webpack:///./packages/fc-charts/src/chart/stackedarea2d/index.js","webpack:///./packages/fusioncharts/viz/stackedbar3d.js","webpack:///./packages/fc-charts/src/chart/stackedbar3d/index.js","webpack:///./packages/fc-charts/src/chart/msbar3d/index.js","webpack:///./packages/fc-charts/src/chart/_internal/msbarcartesian3d.js","webpack:///./packages/fc-charts/src/factories/multiseries3d-dataset.js","webpack:///./packages/fusioncharts/viz/stackedbar2d.js","webpack:///./packages/fc-charts/src/chart/stackedbar2d/index.js","webpack:///./packages/fc-charts/src/chart/msbar2d/index.js","webpack:///./packages/fusioncharts/viz/stackedcolumn3d.js","webpack:///./packages/fc-charts/src/chart/stackedcolumn3d/index.js","webpack:///./packages/fc-charts/src/chart/mscolumn3d/index.js","webpack:///./packages/fc-charts/src/chart/_internal/mscartesian3d.js","webpack:///./packages/fusioncharts/viz/stackedcolumn2d.js","webpack:///./packages/fc-charts/src/chart/stackedcolumn2d/index.js","webpack:///./packages/fusioncharts/viz/msstackedcolumn2dlinedy.js","webpack:///./packages/fusioncharts/viz/stackedcolumn3dlinedy.js","webpack:///./packages/fc-charts/src/chart/stackedcolumn3dlinedy/index.js","webpack:///./packages/fc-charts/src/chart/mscolumn3dlinedy/index.js","webpack:///./packages/fc-charts/src/chart/_internal/msdybasecartesian3d.js","webpack:///./packages/fc-charts/src/factories/combi-dual-y-3d-dataset.js","webpack:///./packages/fusioncharts/viz/mscolumn3dlinedy.js","webpack:///./packages/fusioncharts/viz/mscombidy2d.js","webpack:///./packages/fusioncharts/viz/mscombidy3d.js","webpack:///./packages/fc-charts/src/chart/mscombidy3d/index.js","webpack:///./packages/fusioncharts/viz/stackedcolumn3dline.js","webpack:///./packages/fc-charts/src/chart/stackedcolumn3dline/index.js","webpack:///./packages/fc-charts/src/chart/mscombi3d/index.js","webpack:///./packages/fusioncharts/viz/stackedcolumn2dline.js","webpack:///./packages/fc-charts/src/chart/stackedcolumn2dline/index.js","webpack:///./packages/fc-charts/src/chart/mscombi2d/index.js","webpack:///./packages/fusioncharts/viz/mscolumnline3d.js","webpack:///./packages/fc-charts/src/chart/mscolumnline3d/index.js","webpack:///./packages/fusioncharts/viz/mscombi3d.js","webpack:///./packages/fusioncharts/viz/mscombi2d.js","webpack:///./packages/fusioncharts/viz/marimekko.js","webpack:///./packages/fc-charts/src/chart/marimekko/index.js","webpack:///./packages/fc-charts/src/dataset/marimekko/index.js","webpack:///./packages/fc-charts/src/dataset/marimekko/index.animation.js","webpack:///./packages/fc-charts/src/dataset/groups/marimekko-stack/index.js","webpack:///./packages/fusioncharts/viz/msarea.js","webpack:///./packages/fusioncharts/viz/msbar3d.js","webpack:///./packages/fusioncharts/viz/msbar2d.js","webpack:///./packages/fusioncharts/viz/msline.js","webpack:///./packages/fusioncharts/viz/mscolumn3d.js","webpack:///./packages/fusioncharts/viz/mscolumn2d.js","webpack:///./packages/fusioncharts/viz/stackedcolumn2dlinedy.js","webpack:///./packages/fc-charts/src/chart/stackedcolumn2dlinedy/index.js","webpack:///./packages/fusioncharts/viz/stackedarea2dlinedy.js","webpack:///./packages/fc-charts/src/chart/stackedarea2dlinedy/index.js"],"names":["name","type","requiresFusionCharts","extension","FusionCharts","addDep","Column2D","Column3D","Line","Area","Bar2D","Bar3D","Pie2D","Pie3D","Doughnut2D","Doughnut3D","Pareto2D","Pareto3D","ScrollCombiDy2D","ScrollCombi2D","ScrollStackedColumn2D","ScrollMSStackedColumn2D","ScrollMSStackedColumn2dLineDY","ScrollStackedBar2D","ScrollArea2D","ScrollLine2D","ScrollColumn2D","ScrollBar2D","Bubble","Scatter","MSStackedColumn2D","StackedArea2D","StackedBar3D","StackedBar2D","StackedColumn3D","StackedColumn2D","MSStackedColumn2DLineDy","StackedColumn3DLineDy","StackedColumn2DLineDy","StackedArea2DLineDy","MSColumn3DLineDy","MSCombidy2D","MSCombidy3D","StackedColumn3DLine","StackedColumn2DLine","MSColumnLine3D","MSCombi3D","MSCombi2D","Marimekko","MSArea","MSBar3D","MSBar2D","MSLine","MSColumn3D","MSColumn2D","Spline","Splinearea","MSSplineDy","Msspline","Mssplinearea","Column2d","getName","__setDefaultConfig","this","config","friendlyName","singleseries","defaultDatasetType","enablemousetracking","getDSdef","ColumnDataset","SSCartesian","Column3d","defaultPlotShadow","defaultZeroPlaneHighlighted","is3D","hasLegend","showplotborder","Column3DDataset","SSCartesian3D","registerFactory","canvas3dFactory","datasetFactory","drawcrosslineontop","showzeroplaneontop","chart","canvas","componentFactory","Canvas","showVolumeChart","getChildren","i","len","length","configure","AxisRefVisualCartesian","R","getDep","ROUND","preDefStr","miterStr","mathMax","Math","max","Raphael","M","chartPaletteStr","chart2D","bgColor","bgAlpha","bgAngle","bgRatio","canvasBgColor","canvasBaseColor","divLineColor","legendBgColor","legendBorderColor","toolTipbgColor","toolTipBorderColor","baseFontColor","anchorBgColor","chart3D","divLineAlpha","hideFn","hide","hide3dBaseFn","_","cubeside","cubetop","show3dBaseFn","show","canvas3dAnimation","getType","drawCanvas","getFromEnv","isBar","drawCanvas3dBar","drawCanvas3dColumn","configureAttributes","xDepth","yDepth","canvasBorderElement","canvasElement","canvasBg","canvas3DBase","path","attr","x","y","w","h","zw","zh","clipCanvas","canvas3dbaseline","jsonData","canvasConfig","chartConfig","canvasLeft","canvasTop","canvasWidth","canvasHeight","chartAttrs","animationManager","colorM","canvasBorderElementCheck","getGraphicalElement","canvasElementCheck","clip","canvasGroup","getContainer","canvasBgCheck","canvas3DBaseCheck","dsGroup","getChildContainer","dataLabelsLayer","canvas3dbaselineCheck","showCanvasBg","showCanvasBG","Boolean","pluckNumber","showcanvasbg","canvasBgDepth","showCanvasBase","canvasBaseDepth","canvasBaseColor3D","pluck","canvasbasecolor","getColor","use3DLighting","use3dlighting","palleteString","canvasBorderRadius","plotborderradius","canvasBorderColor","convertColor","canvasbordercolor","canvasBorderColorStr","canBGAlpha","canvasbgalpha","canBGColor","canvasbgcolor","canvasBasePadding","FCcolor","color","getDarkColor","COMMASTRING","getLightColor","alpha","ratio","BGRATIOSTRING","angle","getAngle","width","marginLeft","marginRight","height","marginTop","marginBottom","split","canvasBorderWidth","r","stroke","setAnimation","el","component","label","container","addGraphicalElement","slice","fill","toRaphaelColor","callback","stubFN","index","cubepath","replace","dropHash","HASHSTRING","noGradient","tintshade","rgba","call","borderWHlf","initialAttr","opacity","finalAttr","slot","UNDEF","mathAtan2","atan2","define","top","side","a","face","paper","shapeDefaultAttrs","args","arguments","lastArg","group","generateCubepath","_x","_y","_w","_h","_zw","_zh","o","t","s","attrs","_attr","dropShadow","dx","dy","spread","topShadow","sideShadow","dropshadow","constructor","follow","fn","ca","_shadow","shadow","_value","isObject","value","push","apply","concat","appendTo","_group","appendChild","_getBBox2","sideBox","getBBox","topBox","bbox","_color","_nogradient","nogradient","g","b","join","deg","DSClass","datasetJSON","groupManager3d","datasetParent","dataObj","dataset","dsType","data","dataOnlyArr","fcEach","datum","vline","_dataSegregator","setChartMessage","Column3dGroup","column3dManagerAnimation","setState","getCanvasPadding","dim","key","returnDimension","paddingLeft","paddingRight","paddingTop","paddingBottom","_mapChildren","child","hasOwnProperty","createContainer","pContainer","parentChildContainers","getLinkedParent","addChildContainer","draw3DContainer","ii","getTicksLen","plotNegativeGroup","negative","plotPositiveGroup","positive","parentContainer","columnVcanvasGroup","addToEnv","zeroPlane","insertBefore","negativeGroupArray","Array","positiveGroupAarray","drawZeroPlane","zeroPlaneGroup","yAxis","yAxisMaxmin","getLimit","yMax","yMin","min","zeroplaneAttr","yBasePos","getPixel","getAxisBase","graphics","zeroPlaneColor","zeroPlaneBorderColor","zeroPlaneShowBorder","doNotRemove","draw","childChanged","updateInfo","range","informParent","parent","count","prevVisiblity","getState","changeInfo","dataLimitChanged","getDataLimits","asyncDraw","getAxisValuePadding","paddingObj","axisPaddingLeft","Infinity","axisPaddingRight","left","right","padding","allVisible","maxminObj","numOfColumns","getMaxMin","_maxminObj","dataMin","dataMax","isVisible","isNotVisible","ComponentInterface","column3dAnimation","setContainerVisibility","addContainer","groupName","createGroup","_getHoveredPlot","chartX","chartY","pX","getValue","round","_checkPointerOverColumn","pY","hovered","halfPlotBorderThickness","xPos","yPos","plotBorderThickness","plotborderthickness","showPlotBorder","dataStore","components","pointObj","setValue","mathRound","_xPos","_width","_yPos","_height","pointIndex","columnAnimation","SEVENTYSTRING","anchorborderthickness","anchorimageurl","anchorimagepadding","anchorsides","anchoralpha","anchorbgalpha","HUNDREDSTRING","anchorimagealpha","anchorimagescale","anchorstartangle","anchorshadow","anchorbgcolor","anchorbordercolor","anchorradius","showvalues","plotfillalpha","linedashlen","linedashgap","linedashed","linealpha","linethickness","drawfullareaborder","connectnulldata","zeroplanethickness","zeroplanealpha","defaultcrosslinethickness","LineDataset","Area2d","inheritplotbordercolor","AreaDataset","Bar2d","Bar2DDataset","getDSGroupdef","SSBarCartesian","_feedAxesRawData","__feedAxesRawData","_spaceManager","__spaceManager","_postSpaceManagement","__postSpaceManagement","Bar3d","fireGroupEvent","Bar3DDataset","SSBarCartesian3D","bar3DAnimation","drawLabel","conf","scrollMinVal","scrollMaxVal","bar2dAnimation","Pie2d","math","mathMin","mathAbs","abs","mathPI","PI","deg2rad","rad2deg","performSlicing","indx","dataConfig","output","selectedDataPlot","sliceVal","reversePlotOrder","sliced","plotGraphicClick","element","defaultSeriesType","reverseLegend","defaultPaletteOptions","sliceOnLegendClick","dontShowLegendByDefault","hasCanvas","eiMethods","isPlotItemSliced","apiInstance","getDatasets","addData","removeData","updateData","slicePlotItem","addJob","slicingResult","priorityList","postRender","startingAngle","relative","_startingAngle","legendItemFactory","alignCaptionWithCanvas","formatnumberscale","isSingleSeries","decimals","alphaanimation","singletonPlaceValue","usedataplotcolorforlabels","enableslicing","ONESTRING","skipCanvasDrawing","parseChartAttr","showLegend","showlegend","showlabels","createComponent","skipConfigureIteration","axis","configureChildren","setStyle","hasSVG","tooltipbgcolor","tooltipbgalpha","tooltipcolor","basefontcolor","tooltipbordercolor","tooltipborderalpha","tooltipborderthickness","showtooltipshadow","tooltipborderradius","computeFontSize","basefontsize","basefont","inCanfontFamily","tooltippadding","createBaseComponent","setAnimationState","_firstConfigure","Caption","caption","SubCaption","subCaption","Background","background","_createConfigurableComponents","realtimeEnabled","_realTimeConfigure","postSpaceManager","allocateDimensionOfChartMenuBar","_checkInvalidSpecificData","zeroSum","nullSum","Number","isNaN","totalDistnace","legendSpace","captionSpace","textObj","avaiableMaxpieSliceDepth","totalSpaceReq","dataSet","legend","SmartLabel","chartwidth","chartHeight","textWidthArr","dataLabelCounter","labelMaxW","fcJSONChart","manageLabelOverflow","managelabeloverflow","userGivenSlicingDist","slicingdistance","slicingDistance","preSliced","allPlotSliceEnabled","ZEROSTRING","interactivelegend","isPieRadiusInPerentage","test","pieradius","pieRadius","parseFloat","enableSmartLabels","enablesmartlabels","enablesmartlabel","skipOverlapLabels","skipoverlaplabels","skipoverlaplabel","isSmartLineSlanted","issmartlineslanted","labelDistance","labeldistance","smartlabelclearance","actionBarHeight","_manageActionBarSpace","bottom","chartWorkingWidth","chartWorkingHeight","minOfWH","smartLineColor","smartlinecolor","smartLineAlpha","smartlinealpha","smartLineThickness","smartlinethickness","dataLabelOptions","_parseDataLabelOptions","style","lineHeight","parseInt","pieMinRadius","pieMinDia","pieYScale","pieSliceDepth","legendPos","legendposition","POSITION_BOTTOM","toLowerCase","connectorWidth","connectorPadding","connectorpadding","connectorColor","labelPosition","valuePosition","_manageChartMenuBar","POSITION_RIGHT","POSITION_LEFT","_manageLegendPosition","_allocateSpace","useEllipsesOnOverflow","useEllipsesWhenOverflow","dataLabelStyle","getOriSize","displayValue","_stubRadius","distance","managedPieSliceDepth","totalDist","sliceDistance","minRadius","availableRadius","angl","ang","seriesData","currentAngle","startAngle","singletonCase","isRotating","_rotate","_manageLegendSpace","Pie2DDataset","CommonAPI","catData","Pie3d","animate","point","pointGraphics","up","start","end","dataSetConfig","plotItems","alphaAnim","alphaAnimation","animationObj","get","animationDuration","duration","mainElm","dummyObj","animObj","animType","shapeArgs","sAngle","eAngle","graphic","animateWith","cx","cy","chartWrkngHt","lblDistance","pieMinRad","Pie3DDataset","win","window","VISIBLE","document","documentMode","elementStr","L","V","A","Z","mathCeil","ceil","mathSin","sin","mathATan2","mathCos","cos","mathFloor","floor","pi","pi2","piBy2","pi3By2","map","arr","results","isString","pInt","mag","pie3DCacheColorStore","lighting3D","lighting2D","getClickArcTangent","center","ref","plotRollOver","e","plotItem","setGraphics","setConfig","hoverEffects","plotEventHandler","enabled","isHovered","plotRollOut","_3dAlpha","borderWidth","borderColor","plotDragStart","evt","button","originalEvent","isRightClicked","touchEnabled","enableRotation","chartPosition","getPosition","dragStartAngle","_lastAngle","startingAngleOnDragStart","plotDragEnd","startingAng","setTimeout","fireChartInstanceEvent","normalizeAngle","changeInAngle","plotDragMove","currentTime","deltaAngle","evtData","moveDuration","Date","getTime","_lastTime","timerThreshold","timerId","disposed","disposing","elementZSortFn","_conf","cIndex","isStart","si","sortArrayByPoint","sortArrayByAngle","alignments","ySign","xSign","attrKeyList","strokeWidth","dashstyle","translateX","translateY","transform","cursor","borderAlpha","rolloverProps","showBorderEffect","positionIndex","radiusYFactor","innerR","attrFN","hsh","val","updateShape","updateColor","applyCommonAttr","obj","hash","confObject","_confObject","commonAttr","elements","Pie3DManager","_setSliceShape","refreshDrawing","_setSliceCosmetics","onFN","eventType","handler","callFromRaphael","on","_on","onDragFN","dragStart","dragMove","dragEnd","isAndroid","navigator","userAgent","indexOf","drag","_drag","hideFN","_hide","showFN","_show","destroyFN","destroy","clipTop","clipOuterFront","clipOuterBack","clipOuterFront1","clipInnerFront","clipInnerBack","_destroy","dataFN","_data","pie3dAnimation","setBorderWidth","placeDataLabels","remainingHeight","align","labelWidth","j","oriY","maxYmayHave","spaceRequired","k","x1","x2","x3","x4","y1","y2","y3","points","excess","excessArr","dataLabel","dataLabelCheck","transX","transY","smartLabelObj","pointConfig","connector","connectorPath","labelQuardentHeight","maxQuardentLabel","_textCss","_textAttrs","toolTipController","plotOptions","piePlotOptions","smartLabel","dataLabelsOptions","placeInside","getFirstValue","distanceOption","quarters","plotLeft","plotTop","plotWidth","labelFontSize","fontSize","labelHeight","halfLabelHeight","xDisplacement","outside","size","innerSize","centerY","centerX","radius","radiusY","dataLabelsRadius","labelsRadius","dataLabelsRadiusY","labelsRadiusY","maxLabels","pieSliceDepthHalf","dataLabelContainer","slicedTranslation","visibility","labellink","css","showtooltip","abbrArr","enableToolTip","labelClickFn","bind","plotClickHandler","eventArgs","plotPoint","text","sort","splice","reverse","asin","border","getSmartText","tooltip","tooltext","outlineText","showTextOutline","_parsePie3DOptions","slicedOffset","allowPointSelect","_getInnerSize","_parseBorderConfig","setColor","setAlpha","dataJSON","pieBorderColor","chartAttr","setPlotBorderColor","bordercolor","setPlotBorderAlpha","borderalpha","plotborderalpha","pieborderalpha","_initPie3dManager","lastEnd","maxEnd","fraction","radiusX","total","dataSetComponents","pie3DOptions","plotHeight","positions","smallestSize","slicedOffsetY","pie3DManager","getX","datapoint","quadrantHeight","quadrantWidth","attachChild","_configurePie3DManager","centerAngle","tooltipPos","percentage","allocatePosition","plotData","plotpoint","parsePlotAttributes","parseLabelAttributes","set","setLink","toolText","setElAttr","connectorAttr","setElCosmetics","dataLength","colorLabelFromPoint","usePerPointLabelColor","textDirection","prevPositions","link","fontFamily","fontWeight","fontStyle","backgroundColor","borderThickness","borderPadding","borderRadius","borderDash","direction","BLANKSTRING","slicedX","slicedY","labelText","originalIndex","displayValueArgs","categoryLabel","isSliced","borderConfig","dashed","setBorderDashed","showLabel","showValue","labelFont","labelFontColor","labelLink","hoverColor","hoverAlpha","borderHoverColor","hoverBorderColor","borderHoverAlpha","id","extend2","props","plotGroup","setElement","isnewElem","sliceElements","valueTotal","removeDataArr","visible","_createContainer","remove","useSliceFromPool","createSlice","removeCSS","state","drawn","ele","elem","pool","hideFunc","removeSlice","stAngle","setAngle","rotate","newAngleArgs","pointAngle","cosAngle","sinAngle","foldingFn","_availableAnimAttrs","depth","manager","linkedItems","returnElement","renderer","slicingWallsArr","renderingPath","thisElement","pointElemStore","topBorder","bottomBorder","frontOuter","backOuter","startSlice","endSlice","frontOuter1","isDoughnut","frontInner","backInner","sWall","startIndex","lastElem2","lastElem3","ln","frontGroup","backGroup","array","l","startsAtFrontHalf","getStartIndex","dpth","hasOnePt","use3DLight","isDghnut","hasOnePoint","seriesGroup","moveCmdArr","lineCmdArr","closeCmdArr","colorObjs","_parseSliceColor","clr","alph","pointConf","dark1","dark2","dark4","dark5","dark6","light1","light2","light3","light4","light6","alpha1","colorStr1","colorStr2","alphaStr1","alphaStr2","alphaStr3","colorStr3","colorStr4","colorStr5","colorsObj","alphaFactor","cacheStore","rx","ry","innerRx","rightX","leftX","rightInnerX","leftInnerX","rawRGBtoHEX","gradientUnits","radialGradient","topInnerBorder","fx","fy","wallElement","_slicePool","slicePool","newSlice","shift","doNotApply","scaleAngle","startCos","startSin","endCos","endSin","startOuterX","startOuterY","startOuterTopClipX","startOuterTopClipY","endOuterTopClipX","endOuterTopClipY","startInnerX","startInnerY","endInnerX","endInnerY","startInnerY1","endInnerY1","startOuterY1","endOuterX","endOuterY","endOuterY1","tempArr1","tempArr2","tempArr3","tempArr4","tempArr5","tempArr6","centerPoint","leftPoint","topPoint","rightPoint","bottomPoint","leftDepthPoint","rightDepthPoint","leftInnerPoint","rightInnerPoint","leftInnerDepthPoint","rightInnerDepthPoint","frontOuterIndex","BackOuterIndex","getArcPath","startX","startY","endX","endY","rX","rY","isClockWise","isLargeArc","startOri","endOri","topCliprx","topClipry","innerRy","depthY","topY","clipPathforNoClip","pathAttrString","middleAngle","crossed2Pi","getAbsScaleAngle","clipTopPath","clipOuterFrontPath1","clipTopBorderPath","clipOuterFrontPath","clipOuterBackPath","clipInnerBackPath","clipInnerFrontPath","clipBottomBorderPath","colorObj","topAttrObj","topElement","innerradius","innerpercentR","diff50Percent","radius3Dpercent","ratioStr","doughnutRadius","doughnutradius","radius3D","radius3d","innerRadius","doughnut2dAnimation","_parsePiePlotOptions","pie2dAnimation","inputJSON","dsConfig","animateClockWise","startEnd","Doughnut2d","Doughnut2DDataset","Doughnut3d","Doughnut3DDataset","doughnut3dAnimation","pie3danimation","Pareto2d","NINETYSTRING","_setCategories","numberFormatter","xAxis","catArr","vLine","getCleanValue","setTickValues","isPercentage","axisFactory","ParetoColumnDataset","ParetoLineDataset","MSDyBaseCartesian","paretoAnimation","trimData","JSONData","formatedVal","parserConfig","setTooltext","macroIndices","tempPlotfillAngle","plotDashLen","plotDashGap","isRoundEdges","showHoverEffect","plotfillAngle","plotFillAlpha","plotFillRatio","plotgradientcolor","plotBorderAlpha","plotBorderColor","plotBorderDashStyle","initailPlotBorderDashStyle","setData","colorArr","setDisplayValue","hoverGradientColor","hoverRatio","hoverAngle","hoverBorderAlpha","hoverBorderThickness","hoverBorderDashed","hoverBorderDashGap","hoverBorderDashLen","hoverDashStyle","hoverColorArr","enableAnimation","setDataDashed","setDataPlotDashLen","setDataPlotDashGap","catObj","useDataPlotColorForLabels","setDataArr","plotColor","getPlotColor","plotBorderDash","plotborderdashed","usePlotGradientColor","useplotgradientcolor","showTooltip","yAxisName","parseUnsafeString","yaxisname","xAxisName","xaxisname","maxValue","minValue","sumValue","cleanArr","cumulativeSumValue","tooltipSepChar","tootipSepChar","tooltipsepchar","minAbsNonZeroValue","minAbsNonZeroData","defaultPadding","animation","defaultanimation","animationduration","textoutline","valuePadding","valuepadding","rotateValues","rotatevalues","usePattern","patternType","PATTERN_TYPES","includes","patterntype","patternDensity","patterndensity","patternAlpha","patternalpha","patternBgColor","patternbgcolor","plothovereffect","showhovereffect","showShadow","showshadow","use3dlineshift","plotborderdashlen","plotborderdashgap","plotfillangle","useroundedges","plotRadius","useRoundEdges","plotfillratio","getDefinedColor","plotbordercolor","getDashStyle","showValues","definedGroupPadding","plotspacepercent","plotSpacePercent","maxcolwidth","plotpaddingpercent","placevaluesinside","parentYAxis","imageCount","getLabel","getValidValue","showvalue","displayvalue","dataLabels","patternAngle","patternangle","patternSize","patternsize","_configureDataLabelStyle","dashlen","dashgap","getColumnColor","toString","hovercolor","plotfillhovercolor","columnhovercolor","hoveralpha","plotfillhoveralpha","columnhoveralpha","hovergradientcolor","plothovergradientcolor","hoverratio","plothoverratio","hoverangle","plothoverangle","borderhovercolor","plotborderhovercolor","borderhoveralpha","plotborderhoveralpha","borderhoverthickness","plotborderhoverthickness","borderhoverdashed","plotborderhoverdashed","borderhoverdashgap","plotborderhoverdashgap","borderhoverdashlen","plotborderhoverdashlen","setRolloutAttr","setRolloverAttr","updateTicksValues","labelfontcolor","originalPlotColor","hashify","origToolText","plottooltext","toolTipValue","formattedValue","yaxisName","xaxisName","cumulativeValue","cumulativeDataValue","cumulativePercentValue","displayValuePercent","sum","unformattedSum","parseTooltext","lineDashStyle","anchorProps","drawLine","linecolor","getFirstColor","drawanchors","showanchors","valueposition","showlinevalues","showCumulativeLine","showcumulativeline","maxRadius","percentValue","_parseAnchorProperties","_parseHoverEffectOptions","children","yAxes","axisRefVisualCartesian","zoomObj","zoomable","pannable","redraw","CategoryAxis","xAxisConf","setLinkedItem","getId","attachAxis","zoomX","NumericAxis","yAxisConf","setAxisConfig","isPercent","drawLabels","drawPlotLines","drawAxisName","drawAxisLine","drawPlotBands","drawTrendLines","drawTrendLabels","forEach","zoomY","addExtEventListener","detachAxis","Pareto3d","ParetoColumn3DDataset","Scrollcombidy2d","hasScroll","scrollTo","includeInputOptions","avgScrollPointWidth","canvasborderthickness","configurer","_setAxisScale","setAxisScale","_resetViewPortConfig","resetViewPortConfig","isDual","sDefaultDatasetType","isdual","SplineAreaDataset","SplineLineDataset","ColumnGroup","getDSType","Scrollcombi2d","ColumnMultiSeriesGroup","UNDEFINED","binSize","tooltipConstraint","Columngroup","MScolumn2D","Scrollstackedcolumn2d","isstacked","showSum","CartesianStackGroup","ScrollMSStackedColumn2d","MSStackedColumn2d","prototype","ScrollMSStackedColumn2DLineDY","MSStackedColumn2dLineDY","Scrollstackedbar2d","MSBarCartesian","Scrollarea2d","Scrollline2d","Scrollcolumn2d","Scrollbar2d","BubbleDataset","BubbleDatasetGroup","isXY","allowreversexaxis","ScatterDataset","ScatterBase","HTP","hasTouch","TOUCH_THRESHOLD_PIXELS","CLICK_THRESHOLD_PIXELS","SETROLLOVERATTR","setRolloverAttrStr","SETROLLOUTATTR","setRolloutAttrStr","bubbleAnimation","seriesname","isHoverColorString","hColorsLoop","hColorsLen","quickEnabled","highlightColors","rawDataObj","infMin","infMax","xMax","xMin","zMax","zMin","includeinlegend","plotfillcolor","anchorBorderThickness","anchorBorderColor","bubblefillalpha","negativeColor","negativecolor","is3d","bubbleScale","bubblescale","minBubbleRadius","minbubbleradius","minRadiusForValue","minradiusforvalue","clipBubbles","clipbubbles","transposeAnimation","transposeanimation","transposeAnimDuration","transposeanimduration","seriesNameInTooltip","seriesnameintooltip","fillColor","getPointColor","strokeColor","z","_z","plotShowValue","plotMinRadiusForValue","yDataValue","xDataValue","zDataValue","formatValue","bubblehoveralpha","bubblehovercolor","hoverscale","bubblehoverscale","negativehovercolor","is3donhover","scale","initiallyhidden","_addLegend","res","dataTree","getNeighbour","_hoverPlotAnchor","hoverEnabled","setElem","hoverAttr","legendItem","includeInLegend","anchorSide","legendIconAlpha","legendiconalpha","patternAttr","getItem","legendItemId","itemStyle","hiddenStyle","itemHiddenStyle","datasetVisible","hoverStyle","itemHoverStyle","createItem","itemClickFn","setStateCosmetics","symbol","legendiconbgalpha","legendiconborderalpha","rawFillColor","rawStrokeColor","removeLegendState","setLegendState","disposeItem","getBubbleRadius","zValue","bubbleRadius","mathSqrt","sqrt","radiusLimit","sqrtMaxZ","getDataLimitRange","sqrtBubbleZ","createCoordinates","previousY","Px","Py","Pb","dsComponents","dsData","yBase","isVertical","_b","_Px","_Py","_Pby","_Pbx","finalTooltext","userID","datasetIndex","datasetName","is3dOnHover","hoverScale","use3dLighting","pattern","patternColor","TRACKER_FILL","canvasBottom","trackerConfig","trackerRadius","plotConfig","kdTreeArr","KdTree","buildKdTree","radiusFactor","configAttr","configAttrFirst","configAttrLast","dataConf","minPoint","xReduced","xReducedFirst","xReducedLast","bubbleRadiusVal","maxPoint","dataLen","firstData","leftMostData","lastData","rightMostData","firstDataChangeFlag","secondDataChangeFlag","axisRange","xAxisMax","xAxisMin","endPixel","startPixel","labelDimEnd","labelDimStart","drawPlots","setElemCheck","hotElem","containers","animCallBack","commonElemsGroup","_containerHidden","hotElement","addPattern","isDrawn","transposeAxis","regressionPoints","getRegressionPoints","limits","ifInformParent","paddingChanged","xMaxValue","xMinValue","Msstackedcolumn2d","Stackedarea2d","rawAttr","showsum","Stackedbar3d","maxbarheight","StackGroup","Bar3Dgroup","MSBarCartesian3D","drawTrendRegion","vCanvas","DsGroupClass","groupManager","datasetsJSON","Stackedbar2d","Stackedcolumn3d","ColumnMultiSeriesgroup","MSCartesian3D","MSCartesian","StackedColumn2d","Msstackedcolumn2dlinedy","Stackedcolumn3dlinedy","Column3DGroup","secondaryAxis","MSDybaseCartesian3D","manager3D","datasetsDef","datasetDef","parentyaxis","relatedVCanvas","relatedPrevDatasetMap","vCanvasArr","svCanvas","canvasDatasetsDef","vCanvasDatasetsDef0","vCanvasDatasetsDef1","prevDatasetMap","vCanvas0","vCanvas1","renderas","indices","classDef","pYAxis","removeComponents","Object","keys","Mscolumn3dlinedy","Mscombidy2d","MSCombiDY3D","MSDYBasecartesian3D","Stackedcolumn3dline","stack100percent","Stackedcolumn2dline","AreaBase","Mscolumnline3d","Mscombi3d","Mscombi2d","isValueAbs","distributedColumns","isStacked","categories","category","showXAxisPercentValues","showxaxispercentvalues","showpercentvalues","usepercentdistribution","MarimekkoDataset","Marimekkogroup","regex","dropHypeash","marimekkoAnimation","charAt","substring","legendSymbolColor","legendiconbordergalpha","searchIndex","searchElementIndex","currentIndex","currentElementIndex","minIndex","maxIndex","columnWidth","_setStackDimensions","returnValue","stackConf","getstackConf","configManager","setColumnPosition","fineTunePlotDimension","xPosition","yPosition","ht","wdth","hasValidCanvasBorder","canvasRight","yAttrVal","hAttrVal","endPosWRT0","zeroPos","actualFinalAttr","sign","animHelperFN","getTimeByValue","startPx","endPx","yAxisMaxPixel","yAxisMinPixel","effect","_setStackPosition","stackPercentValues","positionStackConfig","stackSumValue","stackValues","sumPercent","getVisibleConfig","diff","tempX","totalSumValue","widthpercent","toFixed","setUserWidth","getStackSumPercent","formatedPercentValue","labelEle","labelEleCheck","datasets","commonLabelContainer","inCanvasStyle","sumValues","labels","prevLabelLen","inCancolor","visibleStr","xAxisPercentValue","toPrecision","_getXpos","CartesianStackgroup","Msarea","Msbar3d","Msbar2d","Msline","Mscolumn3d","Mscolumn2d","Stackedcolumn2dlinedy","CHART_STR"],"mappings":"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","file":"fusioncharts.charts.js","sourcesContent":["import Column2D from '../viz/column2d';\nimport Column3D from '../viz/column3d';\nimport Line from '../viz/line';\nimport Area from '../viz/area2d';\nimport Bar2D from '../viz/bar2d';\nimport Bar3D from '../viz/bar3d';\nimport Pie2D from '../viz/pie2d';\nimport Pie3D from '../viz/pie3d';\nimport Doughnut2D from '../viz/doughnut2d';\nimport Doughnut3D from '../viz/doughnut3d';\nimport Pareto2D from '../viz/pareto2d';\nimport Pareto3D from '../viz/pareto3d';\nimport ScrollCombiDy2D from '../viz/scrollcombidy2d';\nimport ScrollCombi2D from '../viz/scrollcombi2d';\nimport ScrollStackedColumn2D from '../viz/scrollstackedcolumn2d';\nimport ScrollMSStackedColumn2D from '../viz/scrollmsstackedcolumn2d';\nimport ScrollMSStackedColumn2dLineDY from '../viz/scrollmsstackedcolumn2dlinedy';\nimport ScrollStackedBar2D from '../viz/scrollstackedbar2d';\nimport ScrollArea2D from '../viz/scrollarea2d';\nimport ScrollLine2D from '../viz/scrollline2d';\nimport ScrollColumn2D from '../viz/scrollcolumn2d';\nimport ScrollBar2D from '../viz/scrollbar2d';\nimport Bubble from '../viz/bubble';\nimport Scatter from '../viz/scatter';\nimport MSStackedColumn2D from '../viz/msstackedcolumn2d';\nimport StackedArea2D from '../viz/stackedarea2d';\nimport StackedBar3D from '../viz/stackedbar3d';\nimport StackedBar2D from '../viz/stackedbar2d';\nimport StackedColumn3D from '../viz/stackedcolumn3d';\nimport StackedColumn2D from '../viz/stackedcolumn2d';\nimport MSStackedColumn2DLineDy from '../viz/msstackedcolumn2dlinedy';\nimport StackedColumn3DLineDy from '../viz/stackedcolumn3dlinedy';\nimport MSColumn3DLineDy from '../viz/mscolumn3dlinedy';\nimport MSCombidy2D from '../viz/mscombidy2d';\nimport MSCombidy3D from '../viz/mscombidy3d';\nimport StackedColumn3DLine from '../viz/stackedcolumn3dline';\nimport StackedColumn2DLine from '../viz/stackedcolumn2dline';\nimport MSColumnLine3D from '../viz/mscolumnline3d';\nimport MSCombi3D from '../viz/mscombi3d';\nimport MSCombi2D from '../viz/mscombi2d';\nimport Marimekko from '../viz/marimekko';\nimport MSArea from '../viz/msarea';\nimport MSBar3D from '../viz/msbar3d';\nimport MSBar2D from '../viz/msbar2d';\nimport MSLine from '../viz/msline';\nimport MSColumn3D from '../viz/mscolumn3d';\nimport MSColumn2D from '../viz/mscolumn2d';\nimport Spline from '../viz/spline';\nimport Splinearea from '../viz/splinearea';\nimport Msspline from '../viz/msspline';\nimport MSSplineDy from '../viz/mssplinedy';\nimport Mssplinearea from '../viz/mssplinearea';\nimport StackedColumn2DLineDy from '../viz/stackedcolumn2dlinedy';\nimport StackedArea2DLineDy from '../viz/stackedarea2dlinedy';\n\nexport {\n  Column2D,\n  Column3D,\n  Line,\n  Area,\n  Bar2D,\n  Bar3D,\n  Pie2D,\n  Pie3D,\n  Doughnut2D,\n  Doughnut3D,\n  Pareto2D,\n  Pareto3D,\n  ScrollCombiDy2D,\n  ScrollCombi2D,\n  ScrollStackedColumn2D,\n  ScrollMSStackedColumn2D,\n  ScrollMSStackedColumn2dLineDY,\n  ScrollStackedBar2D,\n  ScrollArea2D,\n  ScrollLine2D,\n  ScrollColumn2D,\n  ScrollBar2D,\n  Bubble,\n  Scatter,\n  MSStackedColumn2D,\n  StackedArea2D,\n  StackedBar3D,\n  StackedBar2D,\n  StackedColumn3D,\n  StackedColumn2D,\n  MSStackedColumn2DLineDy,\n  StackedColumn2DLineDy,\n  StackedArea2DLineDy,\n  StackedColumn3DLineDy,\n  MSColumn3DLineDy,\n  MSCombidy2D,\n  MSCombidy3D,\n  StackedColumn3DLine,\n  StackedColumn2DLine,\n  MSColumnLine3D,\n  MSCombi3D,\n  MSCombi2D,\n  Marimekko,\n  MSArea,\n  MSBar3D,\n  MSBar2D,\n  MSLine,\n  MSColumn3D,\n  MSColumn2D,\n  Spline,\n  Splinearea,\n  MSSplineDy,\n  Msspline,\n  Mssplinearea\n};\n\nexport default {\n  name: 'charts',\n  type: 'package',\n  requiresFusionCharts: true,\n  extension: FusionCharts => {\n    FusionCharts.addDep(Column2D);\n    FusionCharts.addDep(Column3D);\n    FusionCharts.addDep(Line);\n    FusionCharts.addDep(Area);\n    FusionCharts.addDep(Bar2D);\n    FusionCharts.addDep(Bar3D);\n    FusionCharts.addDep(Pie2D);\n    FusionCharts.addDep(Pie3D);\n    FusionCharts.addDep(Doughnut2D);\n    FusionCharts.addDep(Doughnut3D);\n    FusionCharts.addDep(Pareto2D);\n    FusionCharts.addDep(Pareto3D);\n    FusionCharts.addDep(ScrollCombiDy2D);\n    FusionCharts.addDep(ScrollCombi2D);\n    FusionCharts.addDep(ScrollStackedColumn2D);\n    FusionCharts.addDep(ScrollMSStackedColumn2D);\n    FusionCharts.addDep(ScrollMSStackedColumn2dLineDY);\n    FusionCharts.addDep(ScrollStackedBar2D);\n    FusionCharts.addDep(ScrollArea2D);\n    FusionCharts.addDep(ScrollLine2D);\n    FusionCharts.addDep(ScrollColumn2D);\n    FusionCharts.addDep(ScrollBar2D);\n    FusionCharts.addDep(Bubble);\n    // FusionCharts.addDep(ZoomScatter);\n    FusionCharts.addDep(Scatter);\n    FusionCharts.addDep(MSStackedColumn2D);\n    FusionCharts.addDep(StackedArea2D);\n    FusionCharts.addDep(StackedBar3D);\n    FusionCharts.addDep(StackedBar2D);\n    FusionCharts.addDep(StackedColumn3D);\n    FusionCharts.addDep(StackedColumn2D);\n    FusionCharts.addDep(MSStackedColumn2DLineDy);\n    FusionCharts.addDep(StackedColumn3DLineDy);\n    FusionCharts.addDep(StackedColumn2DLineDy);\n    FusionCharts.addDep(StackedArea2DLineDy);\n    FusionCharts.addDep(MSColumn3DLineDy);\n    FusionCharts.addDep(MSCombidy2D);\n    FusionCharts.addDep(MSCombidy3D);\n    FusionCharts.addDep(StackedColumn3DLine);\n    FusionCharts.addDep(StackedColumn2DLine);\n    FusionCharts.addDep(MSColumnLine3D);\n    FusionCharts.addDep(MSCombi3D);\n    FusionCharts.addDep(MSCombi2D);\n    FusionCharts.addDep(Marimekko);\n    FusionCharts.addDep(MSArea);\n    FusionCharts.addDep(MSBar3D);\n    FusionCharts.addDep(MSBar2D);\n    FusionCharts.addDep(MSLine);\n    FusionCharts.addDep(MSColumn3D);\n    FusionCharts.addDep(MSColumn2D);\n    FusionCharts.addDep(Spline);\n    FusionCharts.addDep(Splinearea);\n    FusionCharts.addDep(MSSplineDy);\n    FusionCharts.addDep(Msspline);\n    FusionCharts.addDep(Mssplinearea);\n  }\n};\n","import Column2d from '@fusioncharts/charts/src/chart/column2d';\nexport default Column2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport SSCartesian from '../_internal/sscartesian';\nimport ColumnDataset from '../../dataset/column';\n\nconst COLUMN_CHART = 'Column Chart',\n  COLUMN_STR = 'column';\n/**\n * Class for single series column charts and who depend on this class\n * @type {class}\n */\nclass Column2D extends SSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Column2D';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Column2D';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.friendlyName = COLUMN_CHART;\n    this.config.singleseries = true;\n    this.config.defaultDatasetType = COLUMN_STR;\n    this.config.enablemousetracking = true;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object}       Column dataset definition\n   */\n  getDSdef () {\n    return ColumnDataset;\n  }\n}\nexport default Column2D;\n","import Column3d from '@fusioncharts/charts/src/chart/column3d';\nexport default Column3d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport SSCartesian3D from '../_internal/sscartesian3d';\nimport Column3DDataset from '../../dataset/column3d';\n\nconst COLUMN3D_CHART = '3D Column Chart';\n/**\n * Creates class Column3D\n */\nclass Column3D extends SSCartesian3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Column3D';\n  }\n  /**\n   * Constructor function of Column3D class\n   */\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n    this.defaultZeroPlaneHighlighted = false;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Column3D';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.hasLegend = false;\n    config.singleseries = true;\n    config.friendlyName = COLUMN3D_CHART;\n    config.showplotborder = 0;\n    config.enablemousetracking = true;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object}       Column dataset definition\n   */\n  getDSdef () {\n    return Column3DDataset;\n  }\n}\nexport default Column3D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport SSCartesian from './sscartesian';\nimport canvas3dFactory from '../../factories/canvas-3d-axis-ref-cartesian';\nimport datasetFactory from '../../factories/singleseries3d-dataset';\n\n/**\n * Creates class SSCartesian3D\n */\nclass SSCartesian3D extends SSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'SSCartesian3D';\n  }\n  /**\n   * Constructor function for SSCartesian3D class\n   */\n  constructor () {\n    super();\n    this.registerFactory('canvas', canvas3dFactory);\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'SSCartesian3D';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.hasLegend = false;\n    config.showplotborder = 0;\n    config.drawcrosslineontop = 0;\n    config.showzeroplaneontop = 0;\n  }\n}\nexport default SSCartesian3D;\n","import Canvas from '../_internal/components/canvases/canvas3d';\nimport AxisRefVisualCartesian from '@fusioncharts/core/src/axis-ref-visuals/axis-ref-component';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n/**\n * canvas factory creates canvas only. for those charts where cartesian axis ref visuals are required\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas;\n  componentFactory(chart, Canvas, 'canvas', chart.config.showVolumeChart ? 2 : 1);\n  canvas = chart.getChildren('canvas');\n  if (canvas) {\n    for (let i = 0, len = canvas.length; i < len; i++) {\n      canvas[i].configure();\n      componentFactory(canvas[i], AxisRefVisualCartesian, 'axisRefVisualCartesian');\n    }\n  }\n}\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Canvas from './canvas';\nimport { pluckNumber, preDefStr, toRaphaelColor, pluck, canvasBorderColorStr,\n  BGRATIOSTRING, COMMASTRING, dropHash, HASHSTRING, stubFN,\n  convertColor, getDarkColor, getLightColor, getAngle } from '@fusioncharts/core/src/lib';\nimport { getDep, addDep } from '@fusioncharts/core/src/dependency-manager';\nimport canvas3dAnimation from './canvas3d.animation';\nimport raphaelShapesCubepath from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.cubepath';\n\nlet R = getDep('redraphael', 'plugin'),\n  canvasBaseColor3DStr = 'canvasBaseColor3D',\n  canvasBGAlphaStr = 'canvasBgAlpha',\n  clipCanvasStr = 'clip-canvas',\n  clipCanvasInitStr = 'clip-canvas-init',\n  COMMA = ',',\n  MAX_MITER_LINEJOIN = 2,\n  CANVAS_BASE_DEFAULT_VISIBILITY = 'hidden',\n  ROUND = preDefStr.ROUND,\n  miterStr = preDefStr.miterStr,\n  math = Math,\n  mathMax = math.max,\n  Raphael = R,\n  NONE = 'none',\n  M = 'M',\n  L = 'L',\n  Z = 'Z',\n  H = 'H',\n  V = 'V',\n  chartPaletteStr = {\n    chart2D: {\n      bgColor: 'bgColor',\n      bgAlpha: 'bgAlpha',\n      bgAngle: 'bgAngle',\n      bgRatio: 'bgRatio',\n      canvasBgColor: 'canvasBgColor',\n      canvasBaseColor: 'canvasBaseColor',\n      divLineColor: 'divLineColor',\n      legendBgColor: 'legendBgColor',\n      legendBorderColor: 'legendBorderColor',\n      toolTipbgColor: 'toolTipbgColor',\n      toolTipBorderColor: 'toolTipBorderColor',\n      baseFontColor: 'baseFontColor',\n      anchorBgColor: 'anchorBgColor'\n    },\n    chart3D: {\n      bgColor: 'bgColor3D',\n      bgAlpha: 'bgAlpha3D',\n      bgAngle: 'bgAngle3D',\n      bgRatio: 'bgRatio3D',\n      canvasBgColor: 'canvasBgColor3D',\n      canvasBaseColor: canvasBaseColor3DStr,\n      divLineColor: 'divLineColor3D',\n      divLineAlpha: 'divLineAlpha3D',\n      legendBgColor: 'legendBgColor3D',\n      legendBorderColor: 'legendBorderColor3D',\n      toolTipbgColor: 'toolTipbgColor3D',\n      toolTipBorderColor: 'toolTipBorderColor3D',\n      baseFontColor: 'baseFontColor3D',\n      anchorBgColor: 'anchorBgColor3D'\n    }\n  },\n  hideFn = function () {\n    this.hide();\n  },\n  // for hiding cubepath\n  hide3dBaseFn = function () {\n    this.hide();\n    this._.cubeside.hide();\n    this._.cubetop.hide();\n  },\n  // for showing cubepath\n  show3dBaseFn = function () {\n    this.show();\n    this._.cubeside.show();\n    this._.cubetop.show();\n  };\n\naddDep({\n  name: 'canvas3dAnimation',\n  type: 'animationRule',\n  extension: canvas3dAnimation\n});\n\n// Adding required shapes for chart.\nraphaelShapesCubepath(R);\n\n/**\n * Canvas is responsible for create the groups where the chart is going to render.\n * Canvas has also ability to add input buttons, all input components have to be added to\n * canvas to activate them. Ex. ZoomIn,ZoomOut etc Button in zoomscatter chart.\n * Before adding any input component to canvas it is required to attach axes to canvas,\n * so that input components can recognize what axis is zoomable or pannable.\n */\nclass Canvas3d extends Canvas {\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'canvas';\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'canvas';\n  }\n  /**\n   * Draws canvas3d\n   */\n  drawCanvas () {\n    if (this.getFromEnv('chart').isBar) {\n      this.drawCanvas3dBar();\n    } else {\n      this.drawCanvas3dColumn();\n    }\n  }\n  configureAttributes () {\n    super.configureAttributes();\n    this.config.xDepth = 10;\n    this.config.yDepth = 10;\n  }\n  /**\n   * Draws the 3d canvas for column\n   */\n  drawCanvas3dColumn () {\n    var canvas = this,\n      chart = canvas.getFromEnv('chart'),\n      jsonData = chart.getFromEnv('dataSource'),\n      canvasConfig = canvas.config,\n      chartConfig = chart.config,\n      canvasLeft = canvasConfig.canvasLeft,\n      canvasTop = canvasConfig.canvasTop,\n      canvasWidth = canvasConfig.canvasWidth,\n      canvasHeight = canvasConfig.canvasHeight,\n      chartAttrs = jsonData.chart,\n      animationManager = canvas.getFromEnv('animationManager'),\n      colorM = chart.getFromEnv('color-manager'),\n      canvasBorderElementCheck = canvas.getGraphicalElement('canvasBorderElement'),\n      canvasBorderElement,\n      canvasElement,\n      canvasElementCheck = canvas.getGraphicalElement('canvasElement'),\n      config = canvas.config,\n      clip = config.clip = { },\n      canvasGroup = canvas.getContainer('canvasGroup'),\n      canvasBg,\n      canvasBgCheck = canvas.getGraphicalElement('canvasBg'),\n      canvas3DBase,\n      canvas3DBaseCheck = canvas.getGraphicalElement('canvas3DBase'),\n      path,\n      attr,\n      x,\n      y,\n      w,\n      h,\n      zw,\n      zh,\n\n      clipCanvas,\n      dsGroup = chart.getChildContainer('plotGroup'),\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n\n      // animationObj = chart.get(configStr, animationObjStr),\n      // animType = animationObj.animType,\n      // animObj = animationObj.animObj,\n      // dummyObj = animationObj.dummyObj,\n      // animationDuration = animationObj.duration,\n\n      canvas3dbaselineCheck = canvas.getGraphicalElement('canvas3dbaseline'),\n      canvas3dbaseline,\n      canvasBgColor = config.canvasBgColor,\n      showCanvasBg = config.showCanvasBG = Boolean(pluckNumber(chartAttrs.showcanvasbg, 1)),\n      canvasBgDepth = chartConfig.canvasBgDepth,\n      showCanvasBase = chartConfig.showCanvasBase,\n      canvasBaseDepth = chartConfig.canvasBaseDepth,\n      canvasBaseColor3D = config.canvasBaseColor3D = pluck(chartAttrs.canvasbasecolor,\n        colorM.getColor(canvasBaseColor3DStr)),\n      use3DLighting = config.use3DLighting = pluckNumber(chartAttrs.use3dlighting, 1),\n\n      palleteString = chartPaletteStr.chart3D,\n      canvasBorderRadius = config.canvasBorderRadius = pluckNumber(chartAttrs.plotborderradius, 0),\n      canvasBorderWidth = 0,\n      borderWHlf = canvasBorderWidth * 0.5,\n      canvasBorderColor = config.canvasBorderColor = convertColor(pluck(chartAttrs.canvasbordercolor,\n        colorM.getColor(canvasBorderColorStr))),\n      canBGAlpha = config.canBGAlpha = pluck(chartAttrs.canvasbgalpha, colorM.getColor(canvasBGAlphaStr)),\n      canBGColor = config.canBGColor = pluck(chartAttrs.canvasbgcolor,\n        colorM.getColor(palleteString.canvasBgColor)),\n      xDepth,\n      yDepth,\n      // 2 px extra xDepth and yDepth in 3d chart's base\n      canvasBasePadding = chartConfig.canvasBasePadding || 2;\n\n    if (use3DLighting) {\n      canvasBgColor = config.canvasBgColor = {\n        FCcolor: {\n          color: getDarkColor(canBGColor, 85) + COMMASTRING + getLightColor(canBGColor, 55),\n          alpha: canBGAlpha + COMMASTRING + canBGAlpha,\n          ratio: BGRATIOSTRING,\n          angle: getAngle(chartConfig.width - (chartConfig.marginLeft + chartConfig.marginRight),\n            chartConfig.height - (chartConfig.marginTop + chartConfig.marginBottom), 1)\n        }\n      };\n    } else {\n      canvasBgColor = config.canvasBgColor = convertColor(canBGColor, canBGAlpha);\n    }\n\n    canBGColor = canBGColor.split(COMMASTRING)[0];\n    canBGAlpha = canBGAlpha.split(COMMASTRING)[0];\n\n    xDepth = config.xDepth;\n    yDepth = config.yDepth;\n\n    attr = {\n      x: canvasLeft - borderWHlf,\n      y: canvasTop - borderWHlf,\n      width: canvasWidth + canvasBorderWidth,\n      height: canvasHeight + canvasBorderWidth,\n      r: canvasBorderRadius,\n      'stroke-width': canvasBorderWidth,\n      stroke: canvasBorderColor,\n      'stroke-linejoin': canvasBorderWidth > MAX_MITER_LINEJOIN ? ROUND : miterStr\n    };\n\n    canvasBorderElement = animationManager.setAnimation({\n      el: canvasBorderElementCheck || 'rect',\n      attr: attr,\n      component: canvas,\n      label: 'canvas',\n      container: canvasGroup\n    });\n    if (!canvasBorderElementCheck) {\n      canvas.addGraphicalElement('canvasBorderElement', canvasBorderElement);\n    }\n\n    // create a clip-rect to clip canvas for later use\n    clip[clipCanvasStr] = [\n      mathMax(0, canvasLeft - xDepth),\n      mathMax(0, canvasTop),\n      mathMax(1, canvasWidth + xDepth),\n      mathMax(1, canvasHeight + yDepth)\n    ];\n    clip[clipCanvasInitStr] = [\n      mathMax(0, canvasLeft - xDepth),\n      mathMax(0, canvasTop - yDepth),\n      1,\n      mathMax(1, canvasHeight + yDepth * 2)\n    ];\n\n    clipCanvas = clip[clipCanvasStr].slice(0);\n    animationManager.setAnimation({\n      el: dsGroup,\n      attr: {'clip-rect': clipCanvas},\n      component: canvas\n    });\n\n    animationManager.setAnimation({\n      el: dataLabelsLayer,\n      attr: {'clip-rect': clipCanvas},\n      component: canvas\n    });\n\n    attr = {\n      x: canvasLeft,\n      y: canvasTop,\n      width: canvasWidth,\n      height: canvasHeight,\n      r: canvasBorderRadius,\n      'stroke-width': 0,\n      'stroke': NONE,\n      fill: toRaphaelColor(canvasBgColor)\n    };\n\n    canvasElement = animationManager.setAnimation({\n      el: canvasElementCheck || 'rect',\n      attr: attr,\n      component: canvas,\n      label: 'canvas',\n      callback: showCanvasBg ? stubFN : hideFn,\n      container: canvasGroup\n    });\n    if (!canvasElementCheck) {\n      canvas.addGraphicalElement('canvasElement', canvasElement);\n    }\n\n    path = [\n      M, (canvasLeft + canvasWidth), canvasTop,\n      L, (canvasLeft + canvasWidth + canvasBgDepth),\n      (canvasTop + (canvasBgDepth * 1.2)),\n      (canvasLeft + canvasWidth + canvasBgDepth),\n      (canvasTop + canvasHeight - canvasBgDepth),\n      (canvasLeft + canvasWidth), (canvasTop + canvasHeight),\n      Z\n    ];\n\n    // Horizontal 3D Base\n    canvasBg = animationManager.setAnimation({\n      el: canvasBgCheck || 'path',\n      attr: {\n        'path': path,\n        'stroke-width': 0,\n        'stroke': NONE,\n        fill: toRaphaelColor(canvasBgColor)\n      },\n      component: canvas,\n      label: 'canvas',\n      callback: showCanvasBg ? stubFN : hideFn,\n      container: canvasGroup\n    });\n    if (!canvasBgCheck) {\n      canvas.addGraphicalElement('canvasBg', canvasBg);\n    }\n\n    if (showCanvasBg) {\n      canvasBg.show();\n      canvasElement.show();\n    } else {\n      canvasBg.hide();\n      canvasElement.hide();\n    }\n\n    x = canvasLeft - xDepth - canvasBasePadding;\n    y = canvasTop + canvasHeight + yDepth + canvasBasePadding;\n    w = canvasWidth;\n    h = canvasBaseDepth;\n    zw = xDepth + canvasBasePadding;\n    zh = yDepth + canvasBasePadding;\n\n    // if (!canvas3DBase) {\n    canvas3DBase = animationManager.setAnimation({\n      el: canvas3DBaseCheck || 'cubepath',\n      component: canvas,\n      index: 0,\n      attr: {\n        cubepath: [x, y, w, h, zw, zh],\n        'stroke': NONE,\n        'stroke-width': 0,\n        'visibility': showCanvasBase ? 'visible' : 'hidden',\n        'fill': canvasBaseColor3D.replace(dropHash, HASHSTRING),\n        noGradient: !use3DLighting\n      },\n      callback: showCanvasBase ? stubFN : hide3dBaseFn,\n      label: 'canvas',\n      container: canvasGroup\n    });\n\n    if (!canvas3DBaseCheck) {\n      canvas.addGraphicalElement('canvas3DBase', canvas3DBase);\n    }\n\n    canvas3dbaseline = animationManager.setAnimation({\n      el: canvas3dbaselineCheck || 'path',\n      attr: {\n        'path': [M, canvasLeft, canvasTop + canvasHeight, H, canvasWidth + canvasLeft],\n        stroke: R.tintshade(canvasBaseColor3D.replace(dropHash, HASHSTRING), 0.05).rgba\n      },\n      component: canvas,\n      callback: showCanvasBase ? stubFN : hideFn,\n      label: 'canvas',\n      container: canvasGroup\n    });\n    if (!canvas3dbaselineCheck) {\n      canvas.addGraphicalElement('canvas3dbaseline', canvas3dbaseline);\n    }\n\n    if (showCanvasBase) {\n      show3dBaseFn.call(canvas3DBase);\n      canvas3dbaseline.show();\n    }\n  }\n  /**\n   * Draws the 3d canvas for bar\n   */\n  drawCanvas3dBar () {\n    var canvas = this,\n      chart = canvas.getFromEnv('chart'),\n      jsonData = chart.getFromEnv('dataSource'),\n      chartConfig = chart.config,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasHeight = chartConfig.canvasHeight,\n      chartAttrs = jsonData.chart,\n      colorM = chart.getFromEnv('color-manager'),\n      canvasBorderElement,\n      canvasBorderElementCheck = canvas.getGraphicalElement('canvasBorderElement'),\n      canvasElementCheck = canvas.getGraphicalElement('canvasElement'),\n      canvasElement,\n      config = canvas.config,\n      clip = config.clip = { },\n      canvasGroup = canvas.getContainer('canvasGroup'),\n      canvasBg,\n      canvasBgCheck = canvas.getGraphicalElement('canvasBg'),\n      canvas3DBase,\n      canvas3DBaseCheck = canvas.getGraphicalElement('canvas3DBase'),\n      attr,\n      path,\n      x,\n      y,\n      w,\n      h,\n      zw,\n      zh,\n      clipCanvas,\n      dsGroup = chart.getChildContainer('plotGroup'),\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n      animationManager = canvas.getFromEnv('animationManager'),\n      canvas3dbaseline,\n      canvas3dbaselineCheck = canvas.getGraphicalElement('canvas3dbaseline'),\n      canvasBgColor = config.canvasBgColor,\n      showCanvasBg = config.showCanvasBG = Boolean(pluckNumber(chartAttrs.showcanvasbg, 1)),\n      canvasBgDepth = chartConfig.canvasBgDepth,\n      showCanvasBase = chartConfig.showCanvasBase,\n      canvasBaseDepth = chartConfig.canvasBaseDepth,\n      canvasBaseColor3D = config.canvasBaseColor3D = pluck(chartAttrs.canvasbasecolor,\n        colorM.getColor(canvasBaseColor3DStr)),\n      use3DLighting = config.use3DLighting = pluckNumber(chartAttrs.use3dlighting, 1),\n\n      palleteString = chartPaletteStr.chart3D,\n      canvasBorderRadius = config.canvasBorderRadius = pluckNumber(chartAttrs.plotborderradius, 0),\n      canvasBorderWidth = config.canvasBorderWidth = 0,\n      borderWHlf = canvasBorderWidth * 0.5,\n      canvasBorderColor = config.canvasBorderColor = convertColor(pluck(chartAttrs.canvasbordercolor,\n        colorM.getColor(canvasBorderColorStr))),\n      canBGAlpha = config.canBGAlpha = pluck(chartAttrs.canvasbgalpha, colorM.getColor(canvasBGAlphaStr)),\n      canBGColor = config.canBGColor = pluck(chartAttrs.canvasbgcolor,\n        colorM.getColor(palleteString.canvasBgColor)),\n      xDepth = config.xDepth,\n      yDepth = config.yDepth;\n    if (use3DLighting) {\n      canvasBgColor = config.canvasBgColor = {\n        FCcolor: {\n          color: getDarkColor(canBGColor, 85) + COMMA + getLightColor(canBGColor, 55),\n          alpha: canBGAlpha + COMMA + canBGAlpha,\n          ratio: BGRATIOSTRING,\n          angle: getAngle(chartConfig.width - (chartConfig.marginLeft + chartConfig.marginRight),\n            chartConfig.height - (chartConfig.marginTop + chartConfig.marginBottom), 1)\n        }\n      };\n    } else {\n      canvasBgColor = config.canvasBgColor = convertColor(canBGColor, canBGAlpha);\n    }\n\n    canBGColor = canBGColor.split(COMMA)[0];\n    canBGAlpha = canBGAlpha.split(COMMA)[0];\n\n    xDepth = config.xDepth = 5;\n    yDepth = config.yDepth = 5;\n\n    attr = {\n      x: canvasLeft - borderWHlf,\n      y: canvasTop - borderWHlf,\n      width: canvasWidth + canvasBorderWidth,\n      height: canvasHeight + canvasBorderWidth,\n      r: canvasBorderRadius,\n      'stroke-width': canvasBorderWidth,\n      stroke: canvasBorderColor,\n      'stroke-linejoin': canvasBorderWidth > MAX_MITER_LINEJOIN ? ROUND : miterStr\n    };\n\n    canvasBorderElement = animationManager.setAnimation({\n      el: canvasBorderElementCheck || 'rect',\n      attr: attr,\n      container: canvasGroup,\n      label: 'canvas',\n      component: canvas\n    });\n    if (!canvasBorderElementCheck) {\n      canvas.addGraphicalElement('canvasBorderElement', canvasBorderElement);\n    }\n\n    // create a clip-rect to clip canvas for later use\n    clip[clipCanvasStr] = [\n      mathMax(0, canvasLeft - xDepth),\n      mathMax(0, canvasTop),\n      mathMax(1, canvasWidth + xDepth),\n      mathMax(1, canvasHeight + yDepth)\n    ];\n    clip[clipCanvasInitStr] = [\n      mathMax(0, canvasLeft - xDepth),\n      mathMax(0, canvasTop - yDepth),\n      1,\n      mathMax(1, canvasHeight + yDepth * 2)\n    ];\n\n    clipCanvas = clip[clipCanvasStr].slice(0);\n    animationManager.setAnimation({\n      el: dsGroup,\n      attr: {'clip-rect': clipCanvas},\n      component: canvas\n    });\n\n    animationManager.setAnimation({\n      el: dataLabelsLayer,\n      attr: {'clip-rect': clipCanvas},\n      component: canvas\n    });\n\n    attr = {\n      x: canvasLeft,\n      y: canvasTop,\n      width: canvasWidth,\n      height: canvasHeight,\n      r: canvasBorderRadius,\n      'stroke-width': 0,\n      'stroke': NONE,\n      fill: toRaphaelColor(canvasBgColor)\n    };\n\n    canvasElement = animationManager.setAnimation({\n      el: canvasElementCheck || 'rect',\n      attr: attr,\n      component: canvas,\n      label: 'canvas',\n      container: canvasGroup\n    });\n    if (!canvasElementCheck) {\n      canvas.addGraphicalElement('canvasElement', canvasElement);\n    }\n\n    // Vertical 3D Base\n    path = [\n      M, canvasLeft, canvasTop,\n      L, (canvasLeft + (canvasBgDepth * 1.2)),\n      (canvasTop - canvasBgDepth), (canvasLeft + canvasWidth - canvasBgDepth),\n      (canvasTop - canvasBgDepth), (canvasLeft + canvasWidth), canvasTop,\n      Z\n    ];\n    // if (!canvasBg) {\n    canvasBg = animationManager.setAnimation({\n      el: canvasBgCheck || 'path',\n      attr: {\n        'path': path,\n        'stroke-width': 0,\n        'stroke': NONE,\n        fill: toRaphaelColor(canvasBgColor)\n      },\n      component: canvas,\n      callback: showCanvasBg ? stubFN : hideFn,\n      label: 'canvas',\n      container: canvasGroup\n    });\n    if (!canvasBgCheck) {\n      canvas.addGraphicalElement('canvasBg', canvasBg);\n    }\n\n    // Show canvas background if showCanvasBg is enabled\n    if (showCanvasBg) {\n      canvasElement.show();\n      canvasBg.show();\n    } else {\n      canvasElement.hide();\n      canvasBg.hide();\n    }\n\n    x = canvasLeft - xDepth - canvasBaseDepth - 1;\n    y = canvasTop + yDepth + 1;\n    w = canvasBaseDepth;\n    h = canvasHeight;\n    zw = xDepth + 1;\n    zh = yDepth + 1;\n    canvas3DBase = animationManager.setAnimation({\n      el: canvas3DBaseCheck || 'cubepath',\n      attr: {\n        'cubepath': [x, y, w, h, zw, zh],\n        'stroke': NONE,\n        'stroke-width': 0,\n        'visibility': CANVAS_BASE_DEFAULT_VISIBILITY,\n        'fill': canvasBaseColor3D.replace(dropHash, HASHSTRING),\n        noGradient: !use3DLighting\n      },\n      component: canvas,\n      callback: showCanvasBase ? stubFN : hide3dBaseFn,\n      label: 'canvas',\n      container: canvasGroup\n    });\n    if (!canvas3DBaseCheck) {\n      canvas.addGraphicalElement('canvas3DBase', canvas3DBase);\n    }\n\n    canvas3dbaseline = animationManager.setAnimation({\n      el: canvas3dbaselineCheck || 'path',\n      attr: {\n        'path': [M, canvasLeft, canvasTop, V, canvasHeight + canvasTop],\n        stroke: Raphael.tintshade(canvasBaseColor3D.replace(dropHash, HASHSTRING), 0.05).rgba\n      },\n      component: canvas,\n      callback: showCanvasBase ? stubFN : hideFn,\n      label: 'canvas',\n      container: canvasGroup\n    });\n    if (!canvas3dbaselineCheck) {\n      canvas.addGraphicalElement('canvas3dbaseline', canvas3dbaseline);\n    }\n\n    // Show canvas base if showCanvasBase is enabled\n    if (showCanvasBase) {\n      canvas3dbaseline.show();\n      show3dBaseFn.call(canvas3DBase);\n    }\n  }\n}\n\nexport default Canvas3d;\n","let animationObject = {\n  initialAttr: {\n    opacity: 0\n  },\n  finalAttr: {\n    opacity: 1\n  },\n  slot: 'initial'\n};\n\nexport default {\n  'initial.canvas.canvas': {\n    'canvas.appearing': [animationObject]\n  }\n};\n","import { pluckNumber } from '../../../lib';\nexport default function (R) {\n  var UNDEF,\n    math = Math,\n    mathAtan2 = math.atan2,\n\n    NONE = 'none',\n    FILL = 'fill',\n    PATH = 'path',\n    CUBEPATH = 'cubepath';\n\n  R.define && R.define([{\n    name: 'cubepath',\n    // args: [x, y, w, h, zw, zh]\n    cubepath: function () {\n      var paper = this,\n        shapeDefaultAttrs = {\n          'stroke-linejoin': 'round',\n          'shape-rendering': 'precision',\n          'stroke': NONE\n        },\n        args = arguments,\n        lastArg = args.length - 1,\n        group = args[lastArg],\n        top,\n        side,\n        a,\n        face,\n        generateCubepath = function (_x, _y, _w, _h, _zw, _zh) {\n          var o = this,\n            t = o._.cubetop,\n            s = o._.cubeside,\n            x = _x,\n            y = _y,\n            w = _w,\n            h = _h,\n            zw = _zw,\n            zh = _zh;\n\n          if (typeof x === 'object' || (x === UNDEF && y === UNDEF && w === UNDEF && h === UNDEF &&\n                                  zw === UNDEF && zh === UNDEF)) {\n            return this;\n          }\n\n          x = pluckNumber(x, o.attrs.x, 0);\n          y = pluckNumber(y, o.attrs.y, 0);\n          w = pluckNumber(w, o.attrs.width, 0);\n          h = pluckNumber(h, o.attrs.height, 0);\n          zw = pluckNumber(zw, o.attrs.xDepth, 0);\n          zh = pluckNumber(zh, o.attrs.yDepth, 0);\n\n          o.attrs.x = x;\n          o.attrs.y = y;\n          o.attrs.width = w;\n          o.attrs.height = h;\n          o.attrs.xDepth = zw;\n          o.attrs.yDepth = zh;\n\n          /* The issue of pixel wide gap found between adjacent faces when input params\n                      * are not all intezers, is solved by adding extra portion in top and side faces.\n                      * The side face is extended to the left with a pixel wide rectange, whole top\n                      * end is cut diagonally to avoid overlapping stoke effect. Like wise, the top face\n                      * is extended below with a pixel height rectangle whose left end is cut diagonally for\n                      * the same rason as above. Motive was to keep the bounding box intact as intended.\n                      */\n          o._attr(PATH, ['M', x + w, y, 'l', 0, h, -w, 0, 0, -h, 'z']);\n          t.attr(PATH, ['M', x, y, 'l', 1, 1, w - 1, 0, 0, -1, zw, -zh, -w, 0, 'z']);\n          s.attr(PATH, ['M', x + w - 1, y + 1, 'l', 0, h - 1, 1, 0, zw, -zh, 0, -h, -zw, zh]);\n\n          return this;\n        },\n        dropShadow = function (dx, dy, spread, color) {\n          var o = this,\n            topShadow = o._.cubetop,\n            sideShadow = o._.cubeside;\n\n          // Only allow filter based shadow.\n          if (o.dropshadow) {\n            topShadow.dropshadow(dx, -dy, spread, color);\n            sideShadow.dropshadow(dx, -dy, spread, color);\n          }\n\n          return false;\n        };\n\n      group && (group.constructor === R.el.constructor)\n        ? (args[lastArg] = UNDEF) : (group = UNDEF);\n\n      top = paper.path(shapeDefaultAttrs, group);\n      side = paper.path(shapeDefaultAttrs, group);\n      face = paper.path(shapeDefaultAttrs, group);\n\n      face._.cubetop = top.follow(face, UNDEF, 'before');\n      face._.cubeside = side.follow(face, UNDEF, 'before');\n\n      for (a in R.fn.cubepath.ca) {\n        face.ca[a] = R.fn.cubepath.ca[a];\n      }\n\n      face._attr = face.attr;\n      face._shadow = face.shadow;\n\n      face.attr = function (name, _value) {\n        var isObject = (typeof (name) === 'object'),\n          value = _value;\n        if (isObject) {\n          // When cubepath is given as an array of inputs\n          if (name.cubepath) {\n            value = [...name.cubepath];\n          } else {\n            value = [];\n            value.push(name.x);\n            value.push(name.y);\n            value.push(name.width);\n            value.push(name.height);\n            value.push(name.xDepth);\n            value.push(name.yDepth);\n          }\n          if (name.noGradient !== UNDEF) {\n            face.attrs.noGradient = name.noGradient;\n          }\n        }\n\n        if (name === UNDEF && value === UNDEF) {\n          return this.attrs;\n        } else if (value === UNDEF) {\n          return this.attrs[name];\n        }\n\n        if (isObject) {\n          generateCubepath.apply(this, value);\n        } else if (name === 'drop-shadow') {\n          dropShadow.apply(this, [].concat(value));\n        }\n        face._attr(name);\n\n        return this;\n      };\n\n      face.appendTo = function (_group) {\n        _group.appendChild(face._.cubetop);\n        _group.appendChild(face._.cubeside);\n        _group.appendChild(face);\n      };\n\n      if (typeof args[0] === 'object') {\n        return face.attr(args[0]);\n      }\n      // return face.attr(CUBEPATH, [args[0], args[1], args[2], args[3], args[4], args[5]]);\n      return generateCubepath.apply(face, [args[0], args[1], args[2], args[3], args[4], args[5]]);\n    },\n    fn: {\n      // Return the bounding box of the back face of the 3D shape.\n      // This is an internal function, which is not implemented to the complete level, as such\n      // there is no proper definition the function is supposed to do, hence it is prefixed with\n      // an '_' and named as _getBBox2\n      _getBBox2: function () {\n        var shape = this,\n          sideBox = shape._.cubeside.getBBox(),\n          topBox = shape._.cubetop.getBBox(),\n          bbox = shape.getBBox();\n\n        // Calculate the backface bbox like object consisting of x,y width, height\n        // using the sideBox,topBox,bBox\n        return {\n          x: bbox.x + topBox.height,\n          y: bbox.y - sideBox.width,\n          width: bbox.width,\n          height: bbox.height\n        };\n      },\n      shadow: function () {\n        this._.cubeside.shadow.apply(this._.cubeside, arguments);\n        this._.cubetop.shadow.apply(this._.cubetop, arguments);\n        return this._shadow.apply(this, arguments);\n      }\n    },\n    ca: {\n      'stroke-linejoin': function () {\n        // We force the linejoin to always be round. Otherwise, the cube\n        // edges will look horrible.\n        return {\n          'stroke-linejoin': 'round'\n        };\n      },\n\n      'fill': function (_color, _nogradient) {\n        var o = this,\n          top = o._.cubetop,\n          side = o._.cubeside,\n          attr = o._attr(CUBEPATH) || [0, 0, 0, 0, 0, 0],\n          color = _color,\n          nogradient = _nogradient,\n          width = attr[2],\n          zw = attr[4],\n          zh = attr[5],\n          rgba;\n\n        if (nogradient === UNDEF) {\n          nogradient = o._attr('noGradient');\n        }\n        color = R.color(color);\n        /*\n          As the join method internally calls toString(), but is overwritten in this object\n          so, an extracted string it sent to it\n        */\n        if (typeof color === 'object') {\n          color = rgba = ('opacity' in color)\n            ? ('rgba(' + [color.r, color.g, color.b, color.opacity] + ')')\n            : ('rgb(' + [color.r, color.g, color.b] + ')');\n        }\n        if (nogradient) {\n          o._attr(FILL, color);\n          top.attr(FILL, R.tintshade(color, -0.78).rgba);\n          side.attr(FILL, R.tintshade(color, -0.65).rgba);\n        } else {\n          // Since the color has been already calculated in object form,\n          // we manually recalculate the rgba here since re-sending object\n          // to Raphael's tintshade can cause it to return stale result\n          // from its cache.\n\n          o._attr(FILL, [270, R.tintshade(rgba, 0.55).rgba,\n            R.tintshade(rgba, -0.65).rgba].join('-'));\n          side.attr(FILL, [270,\n            R.tintshade(rgba, -0.75).rgba,\n            R.tintshade(rgba, -0.35).rgba].join('-'));\n          top.attr(FILL, [45 + R.deg(mathAtan2(zh, zw + width)),\n            R.tintshade(rgba, -0.78).rgba,\n            R.tintshade(rgba, 0.22).rgba].join('-'));\n          /**\n                     * @note\n                    // This is the gradient calculation mapping that accounts for\n                    // the skew of the top face.\n                    o.attr(FILL, [285, R.tintshade(rgba, .55).rgba,\n                        R.tintshade(rgba, -.65).rgba].join('-'));\n                    side.attr(FILL, [50 + R.deg(mathAtan2(height + zh, zw)),\n                        R.tintshade(rgba, -.45).rgba,\n                        R.tintshade(rgba, -.75).rgba].join('-'));\n                    top.attr(FILL, [R.deg(mathAtan2(zh, zw + width)),\n                        R.tintshade(rgba, -.85).rgba,\n                        R.tintshade(rgba, .35).rgba].join('-'));\n                    */\n        }\n\n        // We return false so that the attribute is not applied to the\n        // composite shape's leading element (the front face.)\n        return false;\n      }\n    }\n  }]);\n}\n","import { componentFactory, fcEach, datasetFactory } from '@fusioncharts/core/src/lib';\nimport Column3dGroup from '../dataset/groups/column3d';\n\nlet TRUE_STRING = 'true',\n  ONE_STRING = '1',\n  /**\n   * Filters data\n   * @param {Array} data user input data\n   * @return {Object} filtered data array\n   */\n  _dataSegregator = (data) => {\n    var dataOnlyArr = [];\n\n    fcEach(data, function (datum) {\n      if (!(datum.vline === TRUE_STRING || datum.vline === true || datum.vline === 1 ||\n                  datum.vline === ONE_STRING)) {\n        dataOnlyArr.push(datum);\n      }\n    });\n    return {\n      data: dataOnlyArr\n    };\n  };\n/**\n * Create dataset for 3d charts\n * @param {Object} chart Chart API\n */\nexport default function (chart) {\n  let children = chart.getChildren(),\n    canvas = children.canvas[0],\n    datasetParent = canvas.getChildren('vCanvas')[0],\n    dataObj = chart.getFromEnv('dataSource'),\n    dataset = dataObj.dataset,\n    dsType = chart.config.defaultDatasetType || '',\n    data = dataObj.data || (dataset && dataset[0].data),\n    DSClass,\n    datasetJSON,\n    groupManager3d;\n\n  datasetJSON = _dataSegregator(data);\n\n  if (!(data && data.length !== 0)) {\n    chart.setChartMessage();\n    return;\n  }\n  componentFactory(datasetParent, Column3dGroup, 'datasetGroup_' + dsType);\n  groupManager3d = datasetParent.getChildren('datasetGroup_' + dsType)[0];\n\n  DSClass = chart.getDSdef();\n  datasetFactory(groupManager3d, DSClass, 'dataset', 1, [datasetJSON]);\n}\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport column3dManagerAnimation from './index.animation';\n\naddDep({\n  name: 'column3dManagerAnimation',\n  type: 'animationRule',\n  extension: column3dManagerAnimation\n});\n/**\n * ColumnMultiSeriesgroup basically manages all the position of multiseries columns side by side.\n * suppose multiseries column chart contains 2 dataset now what will be the column width and\n * position to accomodate all the columns. This manager conveys the column width and position\n * for every column plots to its children\n */\nclass Column3dGroup extends ComponentInterface {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  /**\n   * constructor function this class\n   */\n  constructor () {\n    super();\n    this.setState('visible', true);\n  }\n\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'group';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'column3d';\n  }\n  /**\n   * function to calculate maximum canvas padding is required by the children of this manager\n   * @return {Object} contains dimension required\n   */\n  getCanvasPadding () {\n    var manager = this,\n      dim,\n      key,\n      returnDimension = {\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        paddingBottom: 0\n      };\n\n    manager._mapChildren((child) => {\n      dim = (child.getCanvasPadding && child.getCanvasPadding()) || {};\n      for (key in dim) {\n        if (dim.hasOwnProperty(key)) {\n          returnDimension[key] = Math.max(dim[key], returnDimension[key]);\n        }\n      }\n    });\n    return returnDimension;\n  }\n  /**\n   * Create child containers\n   */\n  createContainer () {\n    let manager = this,\n      animationManager = manager.getFromEnv('animationManager'),\n      key,\n      parent = manager.getLinkedParent(),\n      pContainer,\n      parentChildContainers = parent.getChildContainer();\n\n    for (key in parentChildContainers) {\n      pContainer = parentChildContainers[key];\n\n      !manager.getChildContainer(key) && manager.addChildContainer(\n        key,\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {\n            name: 'manager' + key\n          },\n          container: pContainer,\n          component: manager,\n          label: 'group'\n        })\n      );\n    }\n  }\n  /**\n   * Draws container for 3d plots\n   */\n  draw3DContainer () {\n    var manager = this,\n      animationManager = manager.getFromEnv('animationManager'),\n      container = manager.getChildContainer('plotGroup3d'),\n      xAxis = manager.getFromEnv('xAxis'),\n      ii = xAxis.getTicksLen(),\n      i,\n      plotNegativeGroup = container && container.negative,\n      plotPositiveGroup = container && container.positive,\n      parentContainer = this.getLinkedParent().getChildContainer().columnVcanvasGroup;\n\n    // Create plotGroup3d group\n    !manager.getChildContainer('plotGroup3d') && manager.addChildContainer(\n      'plotGroup3d',\n      animationManager.setAnimation({\n        el: 'group',\n        attr: {\n          name: '3d-plots'\n        },\n        container: parentContainer,\n        component: manager,\n        label: 'group'\n      })\n    );\n    container = manager.getChildContainer('plotGroup3d');\n    manager.addToEnv('plotGroup3d', container);\n\n    // Create plotNegativeGroup\n    plotNegativeGroup = container.negative = animationManager.setAnimation({\n      el: plotNegativeGroup || 'group',\n      attr: {\n        name: 'negative-values'\n      },\n      container: container,\n      component: manager,\n      label: 'group'\n    });\n\n    // Create plotPositivegroup\n    plotPositiveGroup = container.positive = animationManager.setAnimation({\n      el: plotPositiveGroup || 'group',\n      attr: {\n        name: 'positive-values'\n      },\n      container: container,\n      component: manager,\n      label: 'group'\n    });\n\n    // Create zeroPlane group\n    container.zeroPlane = animationManager.setAnimation({\n      el: container.zeroPlane || 'group',\n      attr: {\n        name: 'zero-plane'\n      },\n      container: container,\n      component: manager,\n      label: 'group'\n    }).insertBefore(container.positive);\n    // Create Negative group array for data plots having Negative value, if not present.\n    if (!(container.negativeGroupArray =\n                container.negativeGroupArray = plotNegativeGroup.data('categoryplots'))) {\n      plotNegativeGroup.data('categoryplots', new Array(ii));\n      container.negativeGroupArray = plotNegativeGroup.data('categoryplots');\n    }\n\n    // Create Positive group array for data plots having Positive value, if not present.\n    if (!(container.positiveGroupAarray =\n                container.positiveGroupAarray = plotPositiveGroup.data('categoryplots'))) {\n      plotPositiveGroup.data('categoryplots', new Array(ii));\n      container.positiveGroupAarray = plotPositiveGroup.data('categoryplots');\n    }\n\n    for (i = 0; i < ii; i++) {\n      /*\n      * Create seperate group for each data plot having Negative value, if not present.\n      * Store the group in Negative group array\n      */\n      container.negativeGroupArray[i] = animationManager.setAnimation({\n        el: container.negativeGroupArray[i] || 'group',\n        attr: {\n          name: 'negative-group-' + i\n        },\n        container: plotNegativeGroup,\n        component: manager,\n        label: 'group'\n      });\n\n      /*\n      * Create seperate group for each data plot having Positive value, if not present.\n      * Store the group in Positive group array\n      */\n      container.positiveGroupAarray[i] = animationManager.setAnimation({\n        el: container.positiveGroupAarray[i] || 'group',\n        attr: {\n          name: 'positive-group-' + i\n        },\n        container: plotPositiveGroup,\n        component: manager,\n        label: 'group'\n      });\n    }\n  }\n  /**\n   * Draws zero plane\n   */\n  drawZeroPlane () {\n    var manager = this,\n      chart = manager.getFromEnv('chart'),\n      animationManager = chart.getFromEnv('animationManager'),\n      isBar = chart.isBar,\n      chartConfig = chart.config,\n      use3DLighting = chartConfig.use3dlighting,\n      container = manager.getChildContainer('plotGroup3d'),\n      yAxis = manager.getFromEnv('yAxis'),\n      yAxisMaxmin = yAxis.getLimit(),\n      yMax = yAxisMaxmin.max,\n      yMin = yAxisMaxmin.min,\n      zeroPlane = manager.getGraphicalElement('zeroplane'),\n      zeroplaneAttr = {},\n      xDepth = chartConfig.xDepth,\n      yDepth = chartConfig.yDepth,\n      yBasePos = yAxis.getPixel(yAxis.getAxisBase()),\n      MINWIDTH = 1,\n      data,\n      attr,\n      zeroPlaneGroup;\n\n    if (yMin < 0 && yMax >= 0) {\n      !manager.graphics && (manager.graphics = {});\n      zeroPlaneGroup = container.zeroPlane;\n      zeroplaneAttr.fill = chartConfig.zeroPlaneColor;\n      zeroplaneAttr.noGradient = !use3DLighting;\n      zeroplaneAttr.stroke = chartConfig.zeroPlaneBorderColor || 'none';\n      zeroplaneAttr['stroke-width'] = chartConfig.zeroPlaneShowBorder ? 1 : 0;\n      zeroplaneAttr.x = isBar ? yBasePos - xDepth : chartConfig.canvasLeft - xDepth;\n      zeroplaneAttr.y = isBar ? chartConfig.canvasTop + yDepth : yBasePos + yDepth;\n      zeroplaneAttr.width = isBar ? MINWIDTH : chartConfig.canvasWidth;\n      zeroplaneAttr.height = isBar ? chartConfig.canvasHeight : MINWIDTH;\n      zeroplaneAttr.xDepth = xDepth;\n      zeroplaneAttr.yDepth = yDepth;\n\n      // If zeroPlane is present, show it.\n      if (zeroPlane) {\n        zeroPlane.show();\n        zeroPlane._.cubetop.show();\n        zeroPlane._.cubeside.show();\n      }\n      data = {\n        el: zeroPlane || 'cubepath',\n        attr: zeroplaneAttr,\n        container: zeroPlaneGroup,\n        component: manager,\n        label: 'zeroPlane'\n      };\n    } else {\n      if (zeroPlane) {\n        if (isBar) {\n          attr = {\n            x: yBasePos - yDepth\n          };\n        } else {\n          attr = {\n            y: yBasePos + yDepth\n          };\n        }\n        data = {\n          el: zeroPlane,\n          attr: attr,\n          component: manager,\n          doNotRemove: true,\n          callback: function () {\n            zeroPlane.hide();\n            zeroPlane._.cubetop.hide();\n            zeroPlane._.cubeside.hide();\n          },\n          container: container,\n          label: 'zeroPlane'\n        };\n      }\n    }\n\n    data && manager.addGraphicalElement(\n      'zeroplane',\n      animationManager.setAnimation(data)\n    );\n  }\n  /**\n   * function call sync draw of its children\n   */\n  draw () {\n    this.createContainer();\n    this.draw3DContainer();\n    this.drawZeroPlane();\n  }\n  /**\n   * function to accomodate the changes of its child and notify its parent for further action if its needed\n   * @param  {Object} updateInfo is an object with the informations about the changes in its child\n   */\n  childChanged (updateInfo = {}) {\n    let manager = this,\n      config = manager.config,\n      parent = manager.getLinkedParent(),\n      range,\n      count = 0,\n      prevVisiblity = manager.getState('visible'),\n      changeInfo = {},\n      informParent;\n    // get the number of visible children\n    manager._mapChildren((child) => {\n      if (child.getState('visible')) {\n        count++;\n      }\n    });\n    // set the manager visiblity according to number of children visible\n    manager.setState('visible', !!count);\n    // if the visiblity state changed then parent inform flag set to true\n    (prevVisiblity !== !!count) && (informParent = true);\n    // if the managers data limit get changed then also inform the parent\n    if (updateInfo.dataLimitChanged !== false) {\n      range = manager.getDataLimits();\n      if (range.min !== config.range.min || range.max !== config.range.max) {\n        config.range.min = range.min;\n        config.range.max = range.max;\n        changeInfo.dataLimitChanged = true;\n        informParent = true;\n      }\n    }\n    // if the axis value got changed then inform parent\n    // right now we do not change value padding on any type of update\n    // if (updateInfo.paddingChanged !== false) {\n    //   padding = manager.getAxisValuePadding();\n    //   if (padding.left !== config.padding.left || padding.right !== config.padding.right) {\n    //     config.padding.left = padding.left;\n    //     config.padding.right = padding.right;\n    //     changeInfo.paddingChanged = true;\n    //     informParent = true;\n    //   }\n    // }\n    if (informParent) {\n      parent.childChanged && parent.childChanged(changeInfo);\n    } else {\n      manager.asyncDraw();\n    }\n  }\n  /**\n   * function to get value for axis padding from is children\n   * @return {Object} with left and right member\n   */\n  getAxisValuePadding () {\n    let paddingObj = {},\n      axisPaddingLeft = -Infinity,\n      axisPaddingRight = -Infinity;\n    this._mapChildren((child) => {\n      if (child.getState('removed')) {\n        return;\n      }\n      paddingObj = (child.getAxisValuePadding && child.getAxisValuePadding()) || {};\n      axisPaddingLeft = Math.max(axisPaddingLeft, paddingObj.left || -Infinity);\n      axisPaddingRight = Math.max(axisPaddingRight, paddingObj.right || -Infinity);\n    });\n\n    if (axisPaddingLeft === -Infinity) {\n      axisPaddingLeft = 0;\n    }\n    if (axisPaddingRight === -Infinity) {\n      axisPaddingRight = 0;\n    }\n    if (!this.config.padding) {\n      this.config.padding = {};\n      this.config.padding.left = axisPaddingLeft;\n      this.config.padding.right = axisPaddingRight;\n    }\n    return {\n      left: axisPaddingLeft,\n      right: axisPaddingRight\n    };\n  }\n  /**\n   * function to get data limits from its child datasets\n   * return minimun and maximum value among the datasets limit\n   * @param {boolean} allVisible  whether consider all the datasets are visible or not\n   * @return {Object}             [min, max]\n   */\n  getDataLimits (allVisible) {\n    let manager = this,\n      min = +Infinity,\n      max = -Infinity,\n      maxminObj,\n      numOfColumns = 0,\n      getMaxMin = function (_maxminObj) {\n        max = Math.max(max, _maxminObj.max);\n        min = Math.min(min, _maxminObj.min);\n      };\n\n    manager._mapChildren((child) => {\n      if (child.getState('removed')) {\n        return;\n      }\n      if (child.getState('visible') === false) {\n        if (allVisible) {\n          maxminObj = child.getDataLimits(allVisible);\n          getMaxMin(maxminObj);\n        }\n        return;\n      }\n      numOfColumns++;\n      maxminObj = child.getDataLimits(allVisible);\n      getMaxMin(maxminObj);\n    });\n    if (!numOfColumns) {\n      manager.setState('visible', false);\n    } else {\n      manager.setState('visible', true);\n    }\n    if (!this.config.range) {\n      this.config.range = {};\n      this.config.range.min = this.config.dataMin;\n      this.config.range.max = this.config.dataMax;\n    }\n    return { max, min };\n  }\n  /**\n   * it return the status of dataset visiblity\n   * @return {boolean} returns the visiblity status of dataset\n   */\n  isVisible () {\n    return !this.isNotVisible;\n  }\n}\nexport default Column3dGroup;\n","export default {\n  'initial.group.column3d': () => {\n    return {\n      'zeroPlane.appearing': () => {\n        return [\n          {\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'axis'\n          }\n        ];\n      }\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ColumnDataset from '../column';\nimport { stubFN, UNDEF } from '@fusioncharts/core/src/lib';\nimport { _checkPointerOverColumn } from '../_internal/column3d-utils';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport column3dAnimation from './index.animation';\n\nlet createGroup = function (groupName, paper, parentContainer) {\n  return paper.group(groupName, parentContainer);\n};\naddDep({\n  name: 'column3dAnimation',\n  type: 'animationRule',\n  extension: column3dAnimation\n});\n/**\n * Creates class for Column3DDataset\n */\nclass Column3DDataset extends ColumnDataset {\n  /**\n   * Constructor function of Column3DDataset class to initiate\n   */\n  constructor () {\n    super();\n    this.setContainerVisibility = stubFN;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'column3D';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.use3dlighting = UNDEF;\n  }\n  /**\n   * function to create group for dataset\n   */\n  createContainer () {\n    var dataset = this,\n      parent = dataset.getLinkedParent(),\n      paper = dataset.getFromEnv('paper');\n\n    !dataset.getContainer('labelGroup') && dataset.addContainer('labelGroup',\n      createGroup('label-group', paper, parent.getChildContainer('vcanvasLabelGroup'))\n        .attr('class', 'fusioncharts-datalabels'))\n      .attr('opacity', 1);\n  }\n  /**\n   * Function that retunr the nearest plot details\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY x-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest polt and whether it is hovered or not\n   */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      isBar = chart.isBar,\n      xAxis = dataset.getFromEnv('xAxis'),\n      x,\n      pX;\n    x = xAxis.getValue(isBar ? chartY : chartX);\n    pX = Math.round(x);\n    // Checking for overlap between two cosecutive column plots along x-axis\n    return (pX - x > 0 ? _checkPointerOverColumn.call(dataset, pX, chartX, chartY) ||\n      _checkPointerOverColumn.call(dataset, pX - 1, chartX, chartY)\n      : _checkPointerOverColumn.call(dataset, pX + 1, chartX, chartY) ||\n      _checkPointerOverColumn.call(dataset, pX, chartX, chartY));\n  }\n}\nexport default Column3DDataset;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nlet math = Math,\n  mathRound = math.round;\n\n/**\n * function to check if given x,y coordiante is over a column plot or not\n * @param  {number} pX     index of column\n * @param  {number} chartX x co-ordinate\n * @param  {number} chartY y co-ordinate\n * @return {Object}        hovered information\n */\nfunction _checkPointerOverColumn (pX, chartX, chartY) {\n  var dataset = this,\n    chart = dataset.getFromEnv('chart'),\n    chartConfig = chart.config,\n    plotBorderThickness = chartConfig.plotborderthickness,\n    showPlotBorder = chartConfig.showplotborder,\n    dataStore = dataset.components.data,\n    pointObj = dataStore[pX],\n    pY,\n    dx,\n    dy,\n    hovered,\n    halfPlotBorderThickness,\n    zDepth = 10,\n    xPos,\n    yPos,\n    width,\n    height;\n\n  if (!pointObj) {\n    return;\n  }\n\n  pY = pointObj.config.setValue;\n  //  if (chartConfig.isstacked && ((pY < 0 && dataset.valueLook) || (pY > 0 && !dataset.valueLook))) {\n  //    return;\n  //  }\n\n  plotBorderThickness = showPlotBorder ? plotBorderThickness : 0;\n  halfPlotBorderThickness = plotBorderThickness / 2;\n\n  halfPlotBorderThickness = halfPlotBorderThickness % 2 === 0 ? halfPlotBorderThickness + 1\n    : mathRound(halfPlotBorderThickness);\n\n  if (pY !== null) {\n    xPos = pointObj._xPos - zDepth;\n    width = pointObj._width + zDepth;\n    yPos = pointObj._yPos;\n    height = pointObj._height + zDepth;\n\n    dx = chartX - xPos + halfPlotBorderThickness;\n    dy = chartY - yPos + halfPlotBorderThickness;\n\n    hovered = dx >= 0 && dx <= width + plotBorderThickness && dy >= 0 &&\n                  dy <= height + plotBorderThickness;\n\n    if (pY >= 0) {\n      hovered = hovered\n        ? (chartX + chartY - (xPos + yPos) - zDepth) > 0 : false;\n      hovered = hovered\n        ? (chartX + chartY - (xPos + yPos + width + height) + zDepth) < 0 : false;\n    } else {\n      hovered = hovered\n        ? (chartX + chartY - (xPos + yPos) - (zDepth)) > 0 : false;\n      hovered = hovered\n        ? (chartX + chartY - (xPos + yPos + width + height) +\n                          (zDepth)) < 0 : false;\n    }\n\n    if (hovered) {\n      return {\n        pointIndex: pX,\n        hovered: hovered,\n        pointObj: dataStore[pX]\n      };\n    }\n  }\n}\n\nexport { _checkPointerOverColumn };\n","import columnAnimation from '../column/index.animation';\n\nexport default {\n  'initial.dataset.column3D': columnAnimation['initial.dataset.column']\n};\n","import Line from '@fusioncharts/charts/src/chart/line';\nexport default Line;\n","import SSCartesian from '../_internal/sscartesian';\nimport LineDataset from '../../dataset/line';\nimport { HUNDREDSTRING, preDefStr } from '@fusioncharts/core/src/lib';\nlet UNDEF,\n  SEVENTYSTRING = preDefStr.SEVENTYSTRING,\n  LINE_CHART = 'Line Chart',\n  LINE_STR = 'line';\nclass Line extends SSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Line';\n  }\n\n  constructor () {\n    super();\n\n    this.defaultPlotShadow = 1;\n    this.axisPaddingLeft = 0;\n    this.axisPaddingRight = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Line';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = LINE_CHART;\n    config.singleseries = true;\n    config.defaultDatasetType = LINE_STR;\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEF;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEF;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEF;\n    config.anchorbordercolor = UNDEF;\n    config.anchorradius = 3;\n    config.showvalues = 1;\n    config.plotfillalpha = SEVENTYSTRING;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEF;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n    config.zeroplanethickness = 1;\n    config.enablemousetracking = true;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.defaultcrosslinethickness = 1;\n  }\n  // This method return the dataset definations for this charts\n  getDSdef () {\n    return LineDataset;\n  }\n  // // This method return the dataset-group definations for this charts\n  // getDSGroupdef (name) {\n  //   return UNDEF;\n  // }\n}\nexport default Line;\n","import Area2d from '@fusioncharts/charts/src/chart/area2d';\nexport default Area2d;\n","\nimport SSCartesian from '../_internal/sscartesian';\nimport AreaDataset from '../../dataset/area';\nimport { HUNDREDSTRING, preDefStr } from '@fusioncharts/core/src/lib';\nlet UNDEF,\n  SEVENTYSTRING = preDefStr.SEVENTYSTRING,\n  AREA_CHART = 'Area Chart',\n  AREA_STR = 'area';\nclass Area2D extends SSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Area2D';\n  }\n\n  constructor () {\n    super();\n\n    this.defaultPlotShadow = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Area2D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = AREA_CHART;\n    config.singleseries = true;\n    config.defaultDatasetType = AREA_STR;\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEF;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEF;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEF;\n    config.anchorbordercolor = UNDEF;\n    config.anchorradius = 3;\n    config.showvalues = 1;\n    config.plotfillalpha = SEVENTYSTRING;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEF;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.inheritplotbordercolor = 0;\n    config.connectnulldata = 0;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n  }\n  // This method return the dataset definations for this charts\n  getDSdef () {\n    return AreaDataset;\n  }\n  // // This method return the dataset-group definations for this charts\n  // getDSGroupdef (name) {\n  //   return UNDEF;\n  // }\n}\nexport default Area2D;\n","import Bar2d from '@fusioncharts/charts/src/chart/bar2d';\nexport default Bar2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport SSBarCartesian from '../_internal/ssbarcartesian';\nimport Bar2DDataset from '../../dataset/bar2d';\n\nconst BAR_CHART = 'Bar Chart',\n  BAR2D_STR = 'bar2d';\n/**\n * chart API of the Bar2Dn chart\n */\nclass Bar2D extends SSBarCartesian {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.isBar = true;\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Bar2D';\n  }\n\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'chartAPI';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Bar2D';\n  }\n  /**\n   * This set the default configuration for this chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.friendlyName = BAR_CHART;\n    this.config.singleseries = true;\n    this.config.defaultDatasetType = BAR2D_STR;\n    this.config.enablemousetracking = true;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @return {class} bar2d dataset definitions\n   */\n  getDSdef () {\n    return Bar2DDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   */\n  getDSGroupdef () {\n    // this fn overrides\n  }\n}\nexport default Bar2D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport SSCartesian from './sscartesian';\nimport {\n  __feedAxesRawData,\n  __spaceManager,\n  __postSpaceManagement\n} from './msbarcartesian';\n\n/**\n * This class is base class for single series bar charts.\n */\nclass SSBarCartesian extends SSCartesian {\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'SSBarCartesian';\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'SSBarCartesian';\n  }\n\n  /**\n   * This method parse all the attributes which are associated with axis compoenents.\n   * So that axis compoenents can be configured\n   * @return { Object } contains axes config\n   */\n  _feedAxesRawData () {\n    return __feedAxesRawData.call(this);\n  }\n  /**\n   * This method first assigns the entire area of the chart to canvas. Then every component (for example toolbox,\n   * caption etc) is asked to allocate its own space. Once every compoenent has had its space allocated, the canvas is\n   * assigned the remaining space.\n   */\n  _spaceManager () {\n    __spaceManager.call(this);\n  }\n  /**\n   * This function is adjusting value padding depending upon data and axis labels and set dimention to axis\n   */\n  _postSpaceManagement () {\n    __postSpaceManagement.call(this);\n  }\n}\nexport default SSBarCartesian;\n","import Bar3d from '@fusioncharts/charts/src/chart/bar3d';\nexport default Bar3d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport SSBarCartesian3D from '../_internal/ssbarcartesian3d';\nimport Bar3DDataset from '../../dataset/bar3d';\n\nconst BARCHART3D = '3D Bar Chart',\n  BAR3D_STR = 'bar3d';\n/**\n * Creates class for Bar3D\n */\nclass Bar3D extends SSBarCartesian3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Bar3D';\n  }\n  /**\n   * Constructor function for Bar3D class\n   */\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n    this.fireGroupEvent = true;\n\n    this.isBar = true;\n    this.defaultZeroPlaneHighlighted = false;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Bar3D';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.singleseries = true;\n    config.friendlyName = BARCHART3D;\n    config.defaultDatasetType = BAR3D_STR;\n    config.showplotborder = 0;\n    config.enablemousetracking = true;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object} dataset class for bar2d\n   */\n  getDSdef () {\n    return Bar3DDataset;\n  }\n}\nexport default Bar3D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport SSCartesian3D from './sscartesian3d';\nimport {\n  __feedAxesRawData,\n  __spaceManager,\n  __postSpaceManagement\n} from './msbarcartesian';\n\n/**\n * Creates class for SSBarCartesian3D\n */\nclass SSBarCartesian3D extends SSCartesian3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'SSBarCartesian3D';\n  }\n  /**\n   * Constructor function of SSBarCartesian3D class\n   */\n  constructor () {\n    super();\n    this.__feedAxesRawData = __feedAxesRawData;\n    this.__spaceManager = __spaceManager;\n    this.__postSpaceManagement = __postSpaceManagement;\n    // this._createAxes = _createAxes;\n    // this._feedAxesRawData = _feedAxesRawData;\n    // this._spaceManager = _spaceManager;\n    // this._postSpaceManagement = _postSpaceManagement;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'SSBarCartesian3D';\n  }\n  /**\n   * This method parse all the attributes which are associated with axis compoenents.\n   * So that axis compoenents can be configured.\n   * @return {Object} configurations of axes\n   */\n  _feedAxesRawData () {\n    return __feedAxesRawData.call(this);\n  }\n  /**\n   * This method first assigns the entire area of the chart to canvas. Then every component (for example toolbox,\n   * caption etc) is asked to allocate its own space. Once every compoenent has had its space allocated, the canvas is\n   * assigned the remaining space.\n   */\n  _spaceManager () {\n    __spaceManager.call(this);\n  }\n  /**\n   * This function is adjusting value padding depending upon data and axis labels and set dimention to axis\n   */\n  _postSpaceManagement () {\n    __postSpaceManagement.call(this);\n  }\n}\nexport default SSBarCartesian3D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport Column3DDataset from '../column3d';\nimport { drawLabel } from '../bar2d';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport bar3DAnimation from './index.animation';\naddDep({\n  name: 'bar3DAnimation',\n  type: 'animationRule',\n  extension: bar3DAnimation\n});\n/**\n * representing bar3d dataset\n */\nclass Bar3DDataset extends Column3DDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'bar3D';\n  }\n  /**\n   * Helper function of _getHoveredPlot().\n   * @param {number} pX index of column\n   * @param {number} chartX x co-ordinate\n   * @param {number} chartY y co-ordinate\n   * @return {Object}        hovered information\n   */\n  _checkPointerOverColumn (pX, chartX, chartY) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = chart.config,\n      plotBorderThickness = chartConfig.plotborderthickness,\n      showPlotBorder = chartConfig.showplotborder,\n      dataStore = dataset.components.data,\n      pointObj = dataStore[pX],\n      pY,\n      dx,\n      dy,\n      hovered,\n      zDepth = 5,\n      xPos,\n      yPos,\n      width,\n      height;\n\n    if (!pointObj) {\n      return;\n    }\n\n    pY = pointObj.config.setValue;\n\n    // if (chartConfig.isstacked && ((pY < 0 && dataset.valueLook) || (pY > 0 && !dataset.valueLook))) {\n    //   return;\n    // }\n\n    plotBorderThickness = showPlotBorder ? plotBorderThickness : 0;\n\n    if (pY !== null) {\n      yPos = pointObj._yPos;\n      height = pointObj._height + zDepth;\n      xPos = pointObj._xPos - zDepth;\n      width = pointObj._width + zDepth;\n      dx = chartX - xPos;\n      dy = chartY - yPos;\n      hovered = dx >= 0 && dx <= width + plotBorderThickness && dy >= 0 && dy <= height + plotBorderThickness;\n      if (pY >= 0) {\n        hovered = hovered ? (chartX + chartY - (xPos + yPos) - zDepth) > 0 : false;\n        hovered = hovered ? (chartX + chartY - (xPos + yPos + width + height) + zDepth) < 0 : false;\n      } else {\n        hovered = hovered ? (chartX + chartY - (xPos + yPos) - (zDepth)) > 0 : false;\n        hovered = hovered ? (chartX + chartY - (xPos + yPos + width + height) + (zDepth)) < 0 : false;\n      }\n      if (hovered) {\n        return {\n          pointIndex: pX,\n          hovered: hovered,\n          pointObj: dataStore[pX]\n        };\n      }\n    }\n  }\n  /**\n   * Function that return the nearest plot details\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY x-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest polt and whether it is hovered or not\n   */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      isBar = chart.isBar,\n      xAxis = dataset.getFromEnv('xAxis'),\n      x,\n      pX;\n    x = xAxis.getValue(isBar ? chartY : chartX);\n    pX = Math.round(x);\n    // Checking for overlap between two cosecutive column plots along x-axis\n    return (pX - x > 0 ? dataset._checkPointerOverColumn(pX, chartX, chartY) ||\n                  dataset._checkPointerOverColumn(pX - 1, chartX, chartY)\n      : dataset._checkPointerOverColumn(pX + 1, chartX, chartY) ||\n                          dataset._checkPointerOverColumn(pX, chartX, chartY));\n  }\n  /**\n   * Function to draw label for every data plot.\n   * It calculates where to draw the label for data plot.\n   */\n  drawLabel () {\n    let conf = this.config;\n    drawLabel.call(this, conf.scrollMinVal, conf.scrollMaxVal);\n  }\n}\n\nexport default Bar3DDataset;\n","import bar2dAnimation from '../bar2d/index.animation';\n\nexport default {\n  'initial.dataset.bar3D': bar2dAnimation['initial.dataset.bar2D']\n};\n","import Pie2d from '@fusioncharts/charts/src/chart/pie2d';\nexport default Pie2d;\n","import Pie2DDataset from '../../dataset/pie2d';\nimport CommonAPI from '../_internal/commonchartapi';\nimport { pluck, pluckNumber, componentFactory,\n  POSITION_BOTTOM, POSITION_RIGHT, ZEROSTRING,\n  ONESTRING, convertColor, hasSVG, POSITION_LEFT } from '@fusioncharts/core/src/lib';\nimport Caption from '../../_internal/components/caption';\nimport SubCaption from '../../_internal/components/sub-caption';\nimport Background from '../../_internal/components/background';\nimport datasetFactory from '../../factories/pie-dataset';\nimport legendItemFactory from '../../factories/legend';\nimport { _manageLegendSpace } from '../_internal/legend-spacemanager';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\n\nlet math = Math,\n  mathMin = math.min,\n  mathMax = math.max,\n  mathAbs = math.abs,\n  mathPI = math.PI,\n  mathRound = math.round,\n  deg2rad = mathPI / 180,\n  rad2deg = 180 / mathPI,\n  PIE_STR = 'pie',\n  CHART_STR = 'Pie Chart',\n  PIE2D_STR = 'Pie2D',\n  count = 0,\n  UNDEF,\n  /**\n   * Slices the dataset\n   * @param {Object} dataset The dataset on which to perform the slicing operation\n   * @param {number} index The index of the data within the dataset which will be sliced\n   * @param {boolean} slice If true, the dataset is sliced out. Else, the dataset is sliced in.\n   *\n   * @return {boolean} Returns the slicing state of the data at the given index after slicing\n   */\n  performSlicing = (dataset, indx, slice) => {\n    let sliceVal = !!slice,\n      index = indx,\n      /**\n       * If the user as not explicitly provided the slice parameter OR if the provided slice\n       * parameter is not the same as the present slice state of the given data plot, the data plot\n       * is eligible for slicing.\n       *\n       * @param {Object} dataPlot The dataplot which needs to be checked for slicing eligibility\n       *\n       * @return {boolean} Whether the given data plot will slice or not\n       */\n      willSlice = dataPlot => sliceVal !== dataPlot.config.sliced || typeof slice === 'undefined',\n      data,\n      dataConfig,\n      output,\n      selectedDataPlot;\n\n    if (!dataset) {\n      return output;\n    }\n\n    // Extract the all data from the dataset\n    data = (dataset.components && dataset.components.data) || [];\n    // Check if dataset is reversed and adjust the user's given index accordingly\n    index = dataset.config.reversePlotOrder ? (data.length - index - 1) : index;\n    selectedDataPlot = data[index];\n\n    if (selectedDataPlot) {\n      dataConfig = selectedDataPlot.config;\n      // If the data is eligible for slicing, slice it. Else, return the present slice state of the\n      // data plot\n      if (willSlice(selectedDataPlot)) {\n        output = dataset.plotGraphicClick.call(selectedDataPlot.graphics.element);\n      } else {\n        output = dataConfig.sliced;\n      }\n    }\n\n    return output;\n  };\n\nclass Pie2D extends CommonAPI {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Pie2D';\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @return {string} The name of the chart extension\n   */\n  getName () {\n    return 'Pie2D';\n  }\n\n  constructor () {\n    super();\n    this.defaultSeriesType = PIE_STR;\n    this.defaultPlotShadow = 1;\n    this.reverseLegend = 1;\n    this.defaultPaletteOptions = UNDEF;\n    this.sliceOnLegendClick = true;\n    this.dontShowLegendByDefault = true;\n    this.defaultZeroPlaneHighlighted = false;\n    this.hasCanvas = true;\n    this.eiMethods = /** @lends FusionCharts# */ {\n      /**\n       * Pie charts have slices that can be clicked to slice in and out.\n       * Checks whether a particular wedge of Pie or Doughnut chart is sliced-out or sliced-in.\n       *\n       * > Available on `pie` and `doughnut` chart types only.\n       *\n       * @group chart:pie-slice\n       *\n       * @param {number} index - The index of the data corresponding to the pie/doughnut slice.\n       * @return {boolean} - The sliced state of the pie/doughnut wedge. Returns `true` if it's sliced out,\n       * or `false` if it's sliced in.\n       *\n       * @example\n       * // Render a pie 2d chart with some data in sliced out state, provide data index\n       * // in an input textfield and get the sliced state of the pie on click of a button\n       * FusionCharts.ready(function () {\n       *     var chart = new FusionCharts({\n       *         type: \"pie2d\",\n       *         renderAt: \"chart-container\",\n       *         dataSource: \"data.json\",\n       *         dataFormat: \"jsonurl\"\n       *     }).render();\n       *\n       *     // Get the sliced state of a pie returned when clicked on a button\n       *     // (with an id pie-sliced-state). It picks the data index from\n       *     // an input textfield (with id pie-data-index).\n       *     document.getElementById(\"pie-sliced-state\").onclick = function () {\n       *         var dataIndex = document.getElementById(\"pie-data-index\").value,\n       *             slicedState = chart.isPlotItemSliced(dataIndex);\n       *     };\n       * });\n       */\n      isPlotItemSliced: function (index) {\n        var data,\n          config,\n          apiInstance = this.apiInstance,\n          dataset = apiInstance && apiInstance.getDatasets();\n\n        return dataset && (dataset = dataset[0]) && (data = dataset.components.data) && data[index] &&\n          (config = data[index].config) && config.sliced;\n      },\n\n      addData: function () {\n        var apiInstance = this.apiInstance,\n          dataset = apiInstance && apiInstance.getDatasets();\n        return dataset && (dataset = dataset[0]) && dataset.addData.apply(dataset, arguments);\n      },\n\n      removeData: function () {\n        var apiInstance = this.apiInstance,\n          dataset = apiInstance && apiInstance.getDatasets();\n        return dataset && (dataset = dataset[0]) && dataset.removeData.apply(dataset, arguments);\n      },\n\n      updateData: function () {\n        var apiInstance = this.apiInstance,\n          dataset = apiInstance && apiInstance.getDatasets();\n        return dataset && (dataset = dataset[0]) && dataset.updateData.apply(dataset, arguments);\n      },\n      /**\n       * Pie charts have slices. These slices can be clicked by users to slice in or slice out.\n       * Slices a pie/doughnut wedge to in / out state. In absence of the optional second parameter, it\n       * toggles the sliced state of the pie. The second parameter only enforces a specific sliced state.\n       *\n       * > Available on `pie` and `doughnut` chart types only.\n       *\n       * @group chart:pie-slice\n       *\n       * @param {number} index - The index of the data corresponding to the pie/doughnut slice.\n       * @param {boolean=} [slice] - Gives direction to chart on what is the required sliced state. For\n       * `true`, it slices out, if in sliced-in state. Or else, maintains it's sliced-out state. And\n       * vice-versa.\n       * @param {Function} [callback] - If the chart is in asyncRender mode, the callback function\n       * is invoked with the result of the slicing operation.\n       *\n       * @return {boolean} - The final sliced state of the pie/doughnut wedge. Returns `true` if it's\n       * sliced out, or `false` if it's sliced in. If the chart is in asyncRender mode, this method\n       * returns `undefined` and instead the callback provided is invoked with the result of the\n       * slicing operation.\n       *\n       * @fires FusionCharts#slicingStart\n       * @fires FusionCharts#slicingEnd\n       *\n       * @example\n       * // Render a pie 2d chart, provide data index in an input textfield\n       * // and toggle the sliced state of the pie on click of a button\n       * FusionCharts.ready(function () {\n       *     var chart = new FusionCharts({\n       *         type: \"pie2d\",\n       *         renderAt: \"chart-container\",\n       *         dataSource: \"data.json\",\n       *         dataFormat: \"jsonurl\"\n       *     }).render();\n       *\n       *     // Toggle the sliced state of the pie when clicked on a button\n       *     // (with an id pie-sliced-state). It picks the data index from\n       *     // an input textfield (with id pie-data-index).\n       *     document.getElementById(\"pie-sliced-state\").onclick = function () {\n       *         var dataIndex = document.getElementById(\"pie-data-index\").value;\n       *         chart.slicePlotItem(dataIndex);\n       *     };\n       * });\n       */\n      slicePlotItem: function (index, slice, callback) {\n        var fcInstance = this,\n          apiInstance = fcInstance.apiInstance;\n\n        if (callback) {\n          apiInstance.addJob(`eiMethods-slice-plot${count++}`, function () {\n            let slicingResult = performSlicing(apiInstance.getDatasets()[0], index, slice);\n            return (typeof callback === 'function') && callback(slicingResult);\n          }, priorityList.postRender);\n        } else {\n          return performSlicing(apiInstance.getDatasets()[0], index, slice);\n        }\n      },\n      /**\n       * Rotates the pie/doughnut chart to a specific angle or by a specific angle. The mode of\n       * operation is controlled by the optional second parameter. Even the first parameter is optional,\n       * in absence of which, the chart doesn't rotate and simply returns the current starting angle\n       * of the pie/doughnut chart.\n       *\n       * Starting angle of a pie/doughnut chart is the angle at which the starting face of the first data is\n       * aligned to. Each pie is drawn in counter clock-wise direction.\n       *\n       * > Available on `pie` and `doughnut` chart types only.\n       *\n       * @group chart:pie-slice\n       *\n       * @param {degrees=} [angle=0] - The angle by which to rotate the entire pie/doughnut chart.\n       * @param {boolean=} [relative=false] - Specify whether the angle being set is relative to the current\n       * angle or with respect to absolute 0.\n       * @return {degrees} - The final state of the starting angle of the chart.\n       *\n       * @example\n       * // Render a pie 2d chart and rotate the chart by 90 degrees on click of a button\n       * FusionCharts.ready(function () {\n       *     var chart = new FusionCharts({\n       *         type: \"pie2d\",\n       *         renderAt: \"chart-container\",\n       *         dataSource: \"data.json\",\n       *         dataFormat: \"jsonurl\"\n       *     }).render();\n       *\n       *     // Assign the functionality of rotating the chart by 90 degrees when clicked on\n       *     // a button (with an id rotate-chart).\n       *     document.getElementById(\"rotate-chart\").onclick = function () {\n       *         chart.startingAngle(90, true);\n       *     };\n       * });\n       */\n      startingAngle: function (angle, relative, callback) {\n        var chart = this.apiInstance,\n          output;\n\n        if (callback) {\n          chart.addJob(`eiMethods-start-angle${count++}`, function () {\n            output = chart._startingAngle(angle, relative);\n            if (typeof callback === 'function') {\n              callback(output);\n            }\n          }, priorityList.postRender);\n        } else {\n          return chart._startingAngle(angle, relative);\n        }\n      }\n    };\n    this.registerFactory('dataset', datasetFactory, ['vCanvas', 'legend']);\n    this.registerFactory('legend', legendItemFactory);\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.alignCaptionWithCanvas = 0;\n    config.formatnumberscale = 1;\n    config.isSingleSeries = true;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = PIE2D_STR;\n    config.plotborderthickness = 1;\n    config.decimals = 2;\n    config.alphaanimation = 0;\n    config.singletonPlaceValue = true;\n    config.usedataplotcolorforlabels = 0;\n    config.enableslicing = ONESTRING;\n    config.skipCanvasDrawing = true;\n  }\n\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    let iapi = this,\n      chartAttrs = iapi.getFromEnv('chart-attrib');\n    iapi.config.showLegend = pluckNumber(chartAttrs.showlegend, 0);\n    iapi.config.showvalues = pluckNumber(chartAttrs.showvalues, 1);\n    iapi.config.showlabels = pluckNumber(chartAttrs.showlabels, 1);\n  }\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    var iapi = this,\n      chartConfig = iapi.config,\n      toolTipController;\n    iapi.parseChartAttr(dataObj);\n    iapi.createComponent(dataObj);\n    iapi.config.skipConfigureIteration.axis = true;\n\n    iapi.configureChildren();\n    // @TODO this is not proper place to invoking this fn\n    // as configureAttributes fn is copied from the mscartesian to\n    // override the parent configureAttributes fn, this _createToolBox\n    // fn invoking is still here.\n    toolTipController = iapi.getFromEnv('toolTipController');\n    toolTipController.setStyle({\n      'backgroundColor': hasSVG ? convertColor((chartConfig.tooltipbgcolor || 'FFF'), (chartConfig.tooltipbgalpha || 100))\n        : (chartConfig.tooltipbgcolor || 'FFF').replace(/\\s+/g, '').replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      'color': (chartConfig.tooltipcolor || chartConfig.basefontcolor || '545454').replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      'borderColor': hasSVG ? convertColor((chartConfig.tooltipbordercolor || '666'), (chartConfig.tooltipborderalpha || 100))\n        : (chartConfig.tooltipbordercolor || '666').replace(/\\s+/g, '').replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      'borderWidth': pluckNumber(chartConfig.tooltipborderthickness, 1) + 'px',\n      'showToolTipShadow': pluckNumber(chartConfig.showtooltipshadow || 0),\n      'borderRadius': pluckNumber(chartConfig.tooltipborderradius, 0) + 'px',\n      'fontSize': pluckNumber(this.computeFontSize(chartConfig.basefontsize), 10) + 'px',\n      'fontFamily': chartConfig.basefont || this.getFromEnv('style').inCanfontFamily,\n      'padding': pluckNumber(chartConfig.tooltippadding || 3) + 'px'\n    });\n  }\n  /**\n   * Create child components of chart\n   * @param {Object} dataObj User input json\n   */\n  createComponent () {\n    let iapi = this,\n      skipConfigureIteration;\n\n    skipConfigureIteration = iapi.config.skipConfigureIteration = {};\n    iapi.createBaseComponent();\n    iapi.getFromEnv('animationManager').setAnimationState(iapi._firstConfigure ? 'initial' : 'update');\n    componentFactory(iapi, Caption, 'caption');\n    skipConfigureIteration.caption = true;\n    componentFactory(iapi, SubCaption, 'subCaption');\n    skipConfigureIteration.subCaption = true;\n    componentFactory(iapi, Background, 'background');\n    skipConfigureIteration.background = true;\n    skipConfigureIteration.canvas = true;\n    // Create dynamic components like message logger\n    iapi._createConfigurableComponents && iapi._createConfigurableComponents();\n\n    // Update alert manager\n    if (iapi.config.realtimeEnabled) {\n      iapi._realTimeConfigure && iapi._realTimeConfigure();\n      // if (AlertManagerClass) {\n      //   componentFactory(iapi, AlertManagerClass, 'alertManager');\n      // }\n    }\n  }\n  /**\n   * function to calculate post space management calculations\n   * calculations like axis dimenetion set, allocate space for xaxis labels,\n   * canvas padding etc.\n   * As pie charts do not have axis and canvas so this api will override the parent api\n   */\n  // eslint-disable-next-line\n  _postSpaceManagement () {\n    this.config.showLegend && this.getChildren('legend') && this.getChildren('legend')[0].postSpaceManager();\n    this.allocateDimensionOfChartMenuBar();\n  }\n\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  // eslint-disable-next-line\n  _checkInvalidSpecificData () {\n    var chart = this,\n      chartAttr = chart.getFromEnv('dataSource'),\n      i,\n      len,\n      zeroSum = 0,\n      nullSum = 0,\n      data = chartAttr.data,\n      value;\n\n    /**\n     * Case 1: If no data is present, return true\n     * Case 2: If no valid data is present(ie, data has all zero and/or null values)\n     */\n    if (!data) {\n      return true;\n    }\n    len = data.length || 0;\n    for (i = 0; i < len; i++) {\n      value = Number(data[i].value);\n      zeroSum += (!isNaN(value) && value === 0) ? 1 : 0;\n      nullSum += isNaN(value) ? 1 : 0;\n    }\n\n    // Number of zero values + number of null values >= total data present.\n    if (zeroSum + nullSum >= len) {\n      return true;\n    }\n\n    return false;\n  }\n\n  _spaceManager () {\n    var chart = this,\n      chartConfig = chart.config,\n      dataSet = chart.getChildren('dataset')[0],\n      data = dataSet.components.data,\n      conf = dataSet.config,\n      legend = chart.getFromEnv('legend'),\n      colorM = chart.getFromEnv('color-manager'),\n      SmartLabel = chart.getFromEnv('smartLabel'),\n      chartwidth = chart.getFromEnv('chartWidth'),\n      chartHeight = chart.getFromEnv('chartHeight'),\n      textWidthArr = [],\n      length = conf.dataLabelCounter,\n      labelMaxW = 0,\n      fcJSONChart = chart.getFromEnv('dataSource').chart,\n      manageLabelOverflow = pluckNumber(fcJSONChart.managelabeloverflow, 0),\n      userGivenSlicingDist = pluckNumber(fcJSONChart.slicingdistance),\n      slicingDistance = !conf.preSliced && (chartConfig.allPlotSliceEnabled === ZEROSTRING) &&\n                  (fcJSONChart.showlegend !== ONESTRING || fcJSONChart.interactivelegend === ZEROSTRING)\n        ? 0 : mathAbs(pluckNumber(userGivenSlicingDist, 20)),\n      // isPieRadiusInPerentage variable is introduced to support NFR pieRadius in percentage, bolean variable to check value given in % or not\n      isPieRadiusInPerentage = /%/g.test(fcJSONChart.pieradius),\n      // percentage is calcluated on half of min of chart's height and width, Otherwise considering the given value\n      pieRadius = pluckNumber(isPieRadiusInPerentage\n        ? Math.min(chartwidth / 2, chartHeight / 2) * (parseFloat(fcJSONChart.pieradius) / 100) : fcJSONChart.pieradius, 0),\n      enableSmartLabels = pluckNumber(fcJSONChart.enablesmartlabels, fcJSONChart.enablesmartlabel, 1),\n      skipOverlapLabels = enableSmartLabels ? pluckNumber(fcJSONChart.skipoverlaplabels,\n        fcJSONChart.skipoverlaplabel, 1) : 0,\n      isSmartLineSlanted = pluckNumber(fcJSONChart.issmartlineslanted, 1),\n      labelDistance = length ? pluckNumber(fcJSONChart.labeldistance, fcJSONChart.smartlabelclearance, 5)\n        : slicingDistance,\n      totalDistnace,\n      width = chartConfig.width,\n      height = chartConfig.height,\n      actionBarHeight = (chart._manageActionBarSpace(height * 0.225) || {}).bottom,\n      chartWorkingWidth = width - (chartConfig.marginRight + chartConfig.marginLeft),\n      chartWorkingHeight = height - (chartConfig.marginTop + chartConfig.marginBottom) -\n                  (actionBarHeight ? actionBarHeight + chartConfig.marginBottom : 0),\n      minOfWH = mathMin(chartWorkingHeight, chartWorkingWidth),\n      smartLineColor = pluck(fcJSONChart.smartlinecolor, colorM.getColor('plotFillColor')),\n      smartLineAlpha = pluckNumber(fcJSONChart.smartlinealpha, 100),\n      smartLineThickness = pluckNumber(fcJSONChart.smartlinethickness, 0.7),\n      dataLabelOptions = (conf.dataLabelOptions = dataSet._parseDataLabelOptions()),\n      style = dataLabelOptions.style,\n      lineHeight = length ? pluckNumber(parseInt(style.lineHeight, 10), 12) : 0, // 2px padding\n      pieMinRadius = pieRadius === 0 ? minOfWH * 0.15 : pieRadius,\n      pieMinDia = (2 * pieMinRadius),\n      legendSpace,\n      captionSpace,\n      pieYScale = conf.pieYScale,\n      pieSliceDepth = conf.pieSliceDepth,\n      textObj,\n      avaiableMaxpieSliceDepth,\n      totalSpaceReq,\n      legendPos = pluck(fcJSONChart.legendposition, POSITION_BOTTOM).toLowerCase().split('-');\n    // Old code for placeValuesInside\n    // placeLabelsInside = pluckNumber ((FCchartName === 'doughnut2d') ? 0 : fcJSONChart.placevaluesinside),\n\n    dataLabelOptions.connectorWidth = smartLineThickness;\n    dataLabelOptions.connectorPadding = pluckNumber(fcJSONChart.connectorpadding, 5);\n    dataLabelOptions.connectorColor = convertColor(smartLineColor, smartLineAlpha);\n\n    // If smart label is on and there is a label defined only then modify the label distance\n    totalDistnace = !(chartConfig.showvalues || chartConfig.showlabels)\n      ? labelDistance : (conf.labelPosition !== 'inside' || conf.valuePosition !== 'inside')\n        ? labelDistance + slicingDistance : labelDistance;\n    // Include label\n    totalSpaceReq = pieMinDia + ((lineHeight + totalDistnace) * 2);\n\n    // Provide at least single line height space for caption.\n    // a space manager that manages the space for the tools as well as the captions.\n    captionSpace = chart._manageChartMenuBar(totalSpaceReq < chartWorkingHeight\n      ? chartWorkingHeight - totalSpaceReq : chartWorkingHeight / 2);\n    chartWorkingHeight -= ((captionSpace.top || 0) + (captionSpace.bottom || 0));\n\n    if (conf.showLegend) {\n      chart.config.hasLegend = true;\n      if (legendPos[0] === POSITION_RIGHT || legendPos[0] === POSITION_LEFT) {\n        legendSpace = legend._manageLegendPosition(chartWorkingHeight / 2);\n        chartWorkingWidth -= mathMax(legendSpace.left, legendSpace.right);\n      } else {\n        legendSpace = legend._manageLegendPosition(chartWorkingHeight / 2);\n        chartWorkingHeight -= mathMax(legendSpace.top, legendSpace.bottom);\n      }\n      legendSpace && chart._allocateSpace(legendSpace);\n    }\n    // Now get the max width required for all display text\n    // set the style\n    SmartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    if (length !== 1) { // Fix for single data in Pie makes pie very small in size.\n      for (; length--;) {\n        SmartLabel.setStyle(data[length].config.style || chartConfig.dataLabelStyle);\n        textWidthArr[length] = textObj = SmartLabel.getOriSize(data[length].config.displayValue);\n        labelMaxW = (conf.labelPosition !== 'inside' || conf.valuePosition !== 'inside')\n          ? mathMax(labelMaxW, textObj.width) : 0;\n      }\n    }\n    // If redius not supplyed then auto calculate it\n    if (pieRadius === 0) {\n      pieMinRadius = chart._stubRadius(chartWorkingWidth, labelMaxW, chartWorkingHeight, totalDistnace,\n        slicingDistance, lineHeight, pieMinRadius, labelDistance);\n    } else {\n      conf.slicingDistance = slicingDistance;\n      conf.pieMinRadius = pieMinRadius;\n      dataLabelOptions.distance = labelDistance;\n    }\n    avaiableMaxpieSliceDepth = chartWorkingHeight - (2 * ((pieMinRadius * pieYScale) + lineHeight));\n    conf.managedPieSliceDepth = (pieSliceDepth > avaiableMaxpieSliceDepth) ? (pieSliceDepth -\n              avaiableMaxpieSliceDepth) : conf.pieSliceDepth;\n    dataLabelOptions.isSmartLineSlanted = isSmartLineSlanted;\n    dataLabelOptions.enableSmartLabels = enableSmartLabels;\n    dataLabelOptions.skipOverlapLabels = skipOverlapLabels;\n    dataLabelOptions.manageLabelOverflow = manageLabelOverflow;\n  }\n  // manages the spaces when no radius is given.\n  _stubRadius (chartWorkingWidth, labelMaxW, chartWorkingHeight, totalDist, sliceDistance,\n    lineHeight, minRadius, labelDistance) {\n    var chart = this,\n      pieMinRadius = minRadius,\n      slicingDistance = sliceDistance,\n      dataSet = chart.getChildren('dataset')[0],\n      conf = dataSet.config,\n      fcJSONChart = chart.getFromEnv('dataSource').chart,\n      userGivenSlicingDist = pluckNumber(fcJSONChart.slicingdistance),\n      dataLabelOptions = conf.dataLabelOptions ||\n                  (conf.dataLabelOptions = dataSet._parseDataLabelOptions()),\n      availableRadius = 0,\n      // Slicing distance can not be less then the MINSLICINGDIST (10)\n      MINSLICINGDIST = 10,\n      shortFall;\n    availableRadius = mathMin((chartWorkingWidth / 2) - labelMaxW - slicingDistance,\n      (chartWorkingHeight / 2) - lineHeight) - totalDist;\n    if (availableRadius >= pieMinRadius) { // there has space for min width\n      pieMinRadius = availableRadius;\n    } else if (!userGivenSlicingDist) { /** @todo smartyfy Labels */\n      // If slicing distance is not given by the user, adjust slicing distance based on pie radius.\n      shortFall = pieMinRadius - availableRadius;\n      // Now reduce the pie slicing distance, but restrict the minimum slicing distance to 10 pixels.\n      slicingDistance = mathMax(mathMin(totalDist - shortFall,\n        slicingDistance), MINSLICINGDIST);\n    }\n    conf.slicingDistance = slicingDistance;\n    conf.pieMinRadius = pieMinRadius;\n    dataLabelOptions.distance = labelDistance;\n\n    return pieMinRadius;\n  }\n  _startingAngle (angl, relative) {\n    var angle = angl,\n      ang,\n      chart = this,\n      dataSet = chart.getChildren('dataset')[0],\n      seriesData = dataSet.config,\n      // Angle is differently handled in Pie2D and Pie3D. So, angles is converted\n      // accordingly to the same base. Its radian in 2D while in degrees in 3D.\n      // Moreover, sense of positive angle is opposite in the two.\n      currentAngle = (ang = seriesData.startAngle) * (-rad2deg) +\n                  ((-1) * ang < 0 ? 360 : 0);\n    if (!isNaN(angle)) {\n      if (!(seriesData.singletonCase || seriesData.isRotating)) {\n        angle += relative ? currentAngle : 0;\n        seriesData.startAngle = -angle * deg2rad;\n        dataSet._rotate(angle);\n        currentAngle = angle;\n      }\n    }\n    // Angle normalised in the range of [0, 360]\n    return mathRound(((currentAngle %= 360) + (currentAngle < 0 ? 360 : 0)) * 100) / 100;\n  }\n\n  /**\n   * function to calculate and allote space for legend\n   */\n  _manageLegendSpace () {\n    _manageLegendSpace.call(this);\n  }\n\n  getDSdef () {\n    return Pie2DDataset;\n  }\n}\nexport default Pie2D;\n","import { fcEach, datasetFactory } from '@fusioncharts/core/src/lib';\nlet TRUE_STRING = 'true',\n  ONE_STRING = '1',\n  /**\n    * Seggregates the original data to data and vline.\n    * @param {Object} data  Original data used for seggregation.\n    * @return {Object}  JSON data to be used further by the child components, e.g. dataSet.\n   */\n  _dataSegregator = (data) => {\n    var dataOnlyArr = [];\n\n    fcEach(data, function (datum) {\n      if (!(datum.vline === TRUE_STRING || datum.vline === true || datum.vline === 1 ||\n                  datum.vline === ONE_STRING)) {\n        dataOnlyArr.push(datum);\n      }\n    });\n    return {\n      catData: [],\n      data: dataOnlyArr\n    };\n  };\n/**\n * function to  create dataset.\n * assign dataset to vCanvas.\n * @param {Object} chart chart API\n **/\nexport default function (chart) {\n  let dataObj = chart.getFromEnv('dataSource'),\n    dataset = dataObj.dataset,\n    data = dataObj.data || (dataset && dataset[0].data),\n    DSClass,\n    datasetJSON;\n\n  datasetJSON = _dataSegregator(data);\n\n  if (!(data && data.length !== 0)) {\n    chart.setChartMessage();\n    return;\n  }\n  DSClass = chart.getDSdef();\n  datasetFactory(chart, DSClass, 'dataset', 1, [datasetJSON]);\n}\n","import Pie3d from '@fusioncharts/charts/src/chart/pie3d';\nexport default Pie3d;\n","\nimport Pie2D from '../pie2d';\nimport Pie3DDataset from '../../dataset/pie3d';\nimport { pluckNumber } from '@fusioncharts/core/src/lib';\nlet math = Math,\n  mathRound = math.round,\n  mathMin = math.min,\n  mathMax = math.max,\n  mathPI = math.PI,\n  CHART_STR = '3D Pie Chart',\n  PIE3D_STR = 'Pie3D';\n\nclass Pie3D extends Pie2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Pie3D';\n  }\n\n  constructor () {\n    super();\n    // this.fireGroupEvent = true;\n    this.defaultPlotShadow = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Pie3D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = PIE3D_STR;\n    config.plotborderthickness = 0.1;\n    config.alphaanimation = 1;\n  }\n\n  // Pie2D (base) has defaultPlotShadow, but 3d does not.\n  animate () {\n    var i,\n      point,\n      graphic,\n      pointGraphics,\n      pointConfig,\n      element,\n      args,\n      up,\n      start,\n      end,\n      chart = this,\n      chartComponents = chart.components,\n      dataSet = chartComponents.dataset[0],\n      dataSetConfig = dataSet.config,\n      dataSetComponents = dataSet.components,\n      plotItems = dataSetComponents.data,\n      len = plotItems.length,\n      alphaAnim = dataSetConfig.alphaAnimation,\n      animationObj = chart.get('config', 'animationObj'),\n      animationDuration = animationObj.duration || 0,\n      mainElm = animationObj.dummyObj,\n      animObj = animationObj.animObj,\n      animType = animationObj.animType;\n\n    if (!alphaAnim) {\n      for (i = 0; i < len; i++) {\n        point = plotItems[i];\n        pointGraphics = point.graphics;\n        pointConfig = point.config;\n        args = pointConfig.shapeArgs;\n        up = 2 * mathPI;\n        element = pointGraphics.element;\n\n        // start values\n        if (element) {\n          element.attr({\n            sAngle: up,\n            eAngle: up\n          });\n\n          start = args.sAngle;\n          end = args.eAngle;\n\n          /* Raphael animation do not support start and end attributes.\n                      * Since the attribute setting for Pie3D goes through attrFN\n                      * method of Pie3DManager, we can safely use some unused\n                      * attributes for pie3D to pass through Raphael animation module\n                      * and trap the attributes to convert to start and end in attrFN */\n          graphic.animateWith(mainElm, animObj, {\n            cx: start - up,\n            cy: end - up\n          }, animationDuration, animType);\n        }\n      }\n    }\n  }\n  // manages the spaces when no radius is given.\n  _stubRadius (chartWorkingWidth, labelMaxW, chartWrkngHt, lblDistance, sliceDistance,\n    lineHeight, pieMinRad) {\n    var chart = this,\n      chartWorkingHeight = chartWrkngHt,\n      pieMinRadius = pieMinRad,\n      slicingDistance = sliceDistance,\n      labelDistance = lblDistance,\n      dataSet = chart.getChildren('dataset')[0],\n      conf = dataSet.config,\n      fcJSONChart = dataSet.config,\n      userGivenSlicingDist = pluckNumber(fcJSONChart.slicingdistance),\n      dataLabelOptions = conf.dataLabelOptions ||\n                  (conf.dataLabelOptions = dataSet._parseDataLabelOptions()),\n      availableRadius = 0,\n      // Slicing distance can not be less then the MINSLICINGDIST (10)\n      MINSLICINGDIST = 10,\n      pieYScale = conf.pieYScale,\n      pieSliceDepth = conf.pieSliceDepth,\n      shortFall;\n    chartWorkingHeight -= pieSliceDepth;\n    availableRadius = mathMin((chartWorkingWidth / 2) - labelMaxW - slicingDistance,\n      ((chartWorkingHeight / 2) - lineHeight) / pieYScale) - labelDistance;\n\n    if (availableRadius >= pieMinRadius) { // there has space for min width\n      pieMinRadius = availableRadius;\n    } else if (!userGivenSlicingDist) { /** @todo smartyfy Labels */\n      // If slicing distance is not given by the user, adjust slicing distance based on pie radius.\n      shortFall = pieMinRadius - availableRadius;\n      // Now reduce the pie slicing distance, but restrict the minimum slicing distance to 10 pixels.\n      slicingDistance = labelDistance = mathMax(mathMin(labelDistance - shortFall,\n        slicingDistance), MINSLICINGDIST);\n    }\n    conf.slicingDistance = slicingDistance;\n    conf.pieMinRadius = pieMinRadius;\n    dataLabelOptions.distance = labelDistance;\n\n    return pieMinRadius;\n  }\n  _startingAngle (angl, relative) {\n    var ang,\n      angle = angl,\n      chart = this,\n      dataSet = chart.getChildren('dataset')[0],\n      seriesData = dataSet.config,\n      // Angle is differently handled in Pie2D and Pie3D. So, angles is converted\n      // accordingly to the same base. Its radian in 2D while in degrees in 3D.\n      // Moreover, sense of positive angle is opposite in the two.\n      currentAngle = (ang = seriesData.startAngle) + (ang < 0 ? 360 : 0);\n\n    if (!isNaN(angle)) {\n      if (!(seriesData.singletonCase || seriesData.isRotating)) {\n        angle += relative ? currentAngle : 0;\n        dataSet._rotate(angle);\n        currentAngle = angle;\n      }\n    }\n    // Angle normalised in the range of [0, 360]\n    return mathRound(((currentAngle %= 360) + (currentAngle < 0 ? 360 : 0)) * 100) / 100;\n  }\n  getDSdef () {\n    return Pie3DDataset;\n  }\n}\n\nexport default Pie3D;\n","import Pie2DDataset, { labelClickFn, plotClickHandler, hideFn } from '../pie2d';\nimport { ZEROSTRING, touchEnabled, pluck, toRaphaelColor, preDefStr,\n  getPosition, fcEach, getFirstValue, pluckNumber, convertColor, getDarkColor, getLightColor,\n  hasSVG, normalizeAngle, extend2, rawRGBtoHEX, BLANKSTRING } from '@fusioncharts/core/src/lib';\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { _getInnerSize } from '../doughnut2d';\nimport pie3dAnimation from './index.animation';\nimport { getDep, addDep } from '@fusioncharts/core/src/dependency-manager';\nimport raphaelShapesLitepath from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.litepath';\n\nlet Raphael = getDep('redraphael', 'plugin'),\n  win = window,\n  UNDEF,\n  HIDDEN = 'hidden',\n  PATH_STR = 'path',\n  LITEPATH_STR = 'litepath',\n  docMode8 = window.document.documentMode === 8,\n  VISIBLE = docMode8 ? 'visible' : '',\n  COMMASTRING = ',',\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  EVENTARGS = 'eventArgs',\n  GROUPID = 'groupId',\n  POINTER = 'pointer',\n  elementStr = preDefStr.elementStr,\n  M = 'M',\n  L = 'L',\n  V = 'v',\n  A = 'A',\n  Z = 'Z',\n  math = Math,\n  mathMax = math.max,\n  mathMin = math.min,\n  mathAbs = math.abs,\n  mathCeil = math.ceil,\n  mathSin = math.sin,\n  mathATan2 = math.atan2,\n  mathCos = math.cos,\n  mathFloor = math.floor,\n  mathRound = math.round,\n  pi = math.PI,\n  pi2 = 2 * pi,\n  piBy2 = pi / 2,\n  pi3By2 = pi + piBy2,\n  getAbsScaleAngle = function (start, end) {\n    return (start > end ? pi2 : 0) + end - start;\n  },\n  map = function (arr, fn) {\n    var results = [],\n      i = 0,\n      len = arr.length;\n\n    for (; i < len; i++) {\n      results[i] = fn.call(arr[i], arr[i], i, arr);\n    }\n    return results;\n  },\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  isObject = function (obj) {\n    return typeof obj === 'object';\n  },\n  isString = function (s) {\n    return typeof s === 'string';\n  },\n  pInt = function (s, mag) {\n    return parseInt(s, mag || 10);\n  },\n  pie3DCacheColorStore = {\n    lighting3D: {\n\n    },\n    lighting2D: {\n\n    }\n  },\n  getClickArcTangent = function (x, y, center, ref, pieYScale) {\n    return mathATan2((y - center[1] - ref.top) / pieYScale, x - center[0] - ref.left);\n  },\n  plotRollOver = function (e) {\n    var plotItem = this.data('plotItem'),\n      index = plotItem.index,\n      chart = plotItem.chart,\n      animationManager = chart.getFromEnv('animationManager'),\n      chartConfig = chart.config,\n      dataSet = chart.getChildren('dataset')[0],\n      dataSetConfig = dataSet.config,\n      dataSetComponents = dataSet.components,\n      data = dataSetComponents.data[index],\n      setGraphics = data.graphics,\n      setConfig = data.config,\n      element = setGraphics.element,\n      hoverEffects = setConfig.hoverEffects;\n    if (!dataSetConfig.isRotating) {\n      chart.plotEventHandler(element, e, ROLLOVER);\n      hoverEffects.enabled && animationManager.setAnimation({\n        el: element,\n        attr: hoverEffects,\n        component: dataSet\n      });\n    }\n    chartConfig.isHovered = true;\n  },\n  plotRollOut = function (e) {\n    var plotItem = this.data('plotItem'),\n      index = plotItem.index,\n      chart = plotItem.chart,\n      animationManager = chart.getFromEnv('animationManager'),\n      chartConfig = chart.config,\n      dataSet = chart.getChildren('dataset')[0],\n      dataSetConfig = dataSet.config,\n      dataSetComponents = dataSet.components,\n      data = dataSetComponents.data[index],\n      setConfig,\n      element;\n\n    if (!data) {\n      return;\n    }\n    setConfig = data.config;\n    element = data.graphics.element;\n\n    if (!dataSetConfig.isRotating) {\n      chart.plotEventHandler(element, e, ROLLOUT);\n      animationManager.setAnimation({\n        el: element,\n        attr: {\n          color: setConfig.color.color.split(',')[0],\n          alpha: setConfig._3dAlpha,\n          borderWidth: setConfig.borderWidth,\n          borderColor: setConfig.borderColor\n        },\n        component: dataSet\n      });\n    }\n    chartConfig.isHovered = false;\n  },\n  plotDragStart = function (evt) {\n    var plotItem = this.data('plotItem'),\n      chart = plotItem.chart,\n      dataSet = chart.getChildren('dataset')[0],\n      button = pluckNumber(evt.button, evt.originalEvent.button),\n      dataSetConfig = dataSet.config,\n      angle,\n      x = evt.data[0],\n      y = evt.data[1];\n\n    dataSetConfig.isRightClicked = !!(!touchEnabled && (button !== 0 && button !== 1));\n    if (!dataSetConfig.enableRotation || dataSetConfig.isRightClicked) {\n      return;\n    }\n\n    dataSetConfig.isRotating = false;\n    angle = getClickArcTangent.call(evt, x, y, dataSetConfig.center,\n      (dataSetConfig.chartPosition = getPosition(dataSet.getFromEnv('chart-container'))), dataSetConfig.pieYScale);\n    dataSetConfig.dragStartAngle = angle;\n    dataSetConfig._lastAngle = -dataSetConfig.startAngle;\n    dataSetConfig.startingAngleOnDragStart = dataSetConfig.startAngle;\n  },\n  plotDragEnd = function () {\n    var plotItem = this.data('plotItem'),\n      index = plotItem.index,\n      chart = plotItem.chart,\n      animationManager = chart.getFromEnv('animationManager'),\n      chartConfig = chart.config,\n      dataSet = chart.getChildren('dataset')[0],\n      dataSetConfig = dataSet.config,\n      dataSetComponents = dataSet.components,\n      data = dataSetComponents.data[index],\n      setGraphics = data.graphics,\n      setConfig = data.config,\n      element = setGraphics.element,\n      startingAng = dataSetConfig.startAngle;\n      // save state\n      /* reflowUpdate = {\n          hcJSON: {\n              series: [ {\n                  startAngle: startingAng\n              }]\n          }\n      }; */\n    /* if (!chart.disposed) {\n          extend2 (chart.logic.chartInstance.jsVars._reflowData,\n                      reflowUpdate, true);\n      } */\n\n    if (dataSetConfig.isRightClicked) {\n      return;\n    }\n    if (dataSetConfig.isRotating) {\n      /* The events mouseup, dragend and click are raised in order. In order\n        * to update the flag isRotating to false post click event, setTimeout\n        * called, to take immediate effect, is programmed to update the flag.\n        * Thus, the flag gets updated post the series of events, in effect.\n        * NB: Click event is subscribed conditionally.\n        */\n      setTimeout(function () {\n        dataSetConfig.isRotating = false;\n      }, 0);\n      /**\n               * @event FusionCharts#rotationEnd\n               * @group chart:pie-slice\n               *\n               * @param { number} startingAngle - The initial angle. (desc)\n               * @param { number} changeInAngle - It is the difference between the starting angle and the starting\n               * angle on the drag start.\n               */\n      chart.fireChartInstanceEvent('rotationEnd', {\n        startingAngle: normalizeAngle(startingAng, true),\n        changeInAngle: startingAng - dataSetConfig.startingAngleOnDragStart\n      });\n      // if not hovered on this plot and rotation End then undo hovereffect from plot\n      !chartConfig.isHovered && animationManager.setAnimation({\n        el: element,\n        attr: {\n          color: setConfig.color.color.split(',')[0],\n          alpha: setConfig._3dAlpha,\n          borderWidth: setConfig.borderWidth,\n          borderColor: setConfig.borderColor\n        },\n        component: dataSet\n      });\n    }\n  },\n  plotDragMove = function (evt) {\n    var plotItem = this.data('plotItem'),\n      chart = plotItem.chart,\n      evtData = evt.data,\n      dx = evtData[0],\n      dy = evtData[1],\n      x = evtData[2],\n      y = evtData[3],\n      dataSet = chart.getChildren('dataset')[0],\n      dataSetConfig = dataSet.config,\n      angle,\n      currentTime,\n      deltaAngle;\n\n    if (isNaN(dx) || isNaN(dy) || !dataSetConfig.enableRotation || dataSetConfig.singletonCase ||\n      dataSetConfig.isRightClicked) {\n      return;\n    }\n\n    angle = getClickArcTangent.call(evt, x, y, dataSetConfig.center,\n      dataSetConfig.chartPosition, dataSetConfig.pieYScale);\n\n    if (dataSetConfig.dragStartAngle !== angle && !dataSetConfig.isRotating) {\n      dataSetConfig.isRotating = true;\n      /**\n       * This event is fired when a pie or doughnut chart's rotation is triggered.\n       *\n       * @event FusionCharts#rotationStart\n       * @group chart:pie-slice\n       * @param { number} startingAngle - This indicates the angle from where rotation started.\n       */\n      chart.fireChartInstanceEvent('rotationStart',\n        { startingAngle: normalizeAngle(dataSetConfig.startAngle, true) });\n    }\n\n    deltaAngle = angle - dataSetConfig.dragStartAngle;\n\n    dataSetConfig.dragStartAngle = angle;\n    dataSetConfig.moveDuration = 0;\n\n    dataSetConfig._lastAngle += (deltaAngle * 180 / pi);\n    currentTime = new Date().getTime();\n\n    if (!dataSetConfig._lastTime || (dataSetConfig._lastTime + dataSetConfig.timerThreshold <\n              currentTime)) {\n      if (!dataSetConfig._lastTime) {\n        dataSet._rotate();\n      }\n      dataSetConfig.timerId = setTimeout(function () {\n        if (!chart.disposed || !chart.disposing) {\n          dataSet._rotate();\n        }\n      }, dataSetConfig.timerThreshold);\n      dataSetConfig._lastTime = currentTime;\n    }\n  },\n  elementZSortFn = function (a, b) {\n    var centerAngleDiff = (a._conf.index - b._conf.index) || (a._conf.cIndex - b._conf.cIndex) ||\n              (a._conf.isStart - b._conf.isStart) || (a._conf.si - b._conf.si);\n    // !centerAngleDiff && console.log(\"aaa\");\n    return centerAngleDiff;\n  },\n  getStartIndex = function (array) {\n    var l,\n      i,\n      startsAtFrontHalf,\n      startIndex = array[0] && array[0]._conf.index,\n      atFrontHalf,\n      index;\n\n    startsAtFrontHalf = startIndex <= pi;\n    for (i = 1, l = array.length; i < l; i += 1) {\n      index = array[i]._conf.index;\n      atFrontHalf = index <= pi;\n      if (atFrontHalf !== startsAtFrontHalf || index < startIndex) {\n        return i;\n      }\n    }\n    return 0;\n  },\n  /*\n   * Pie Helper Functions.\n   */\n  sortArrayByPoint = function (a, b) {\n    return a.point.value - b.point.value;\n  },\n  sortArrayByAngle = function (a, b) {\n    return a.angle - b.angle;\n  },\n  alignments = ['start', 'start', 'end', 'end'],\n  alignCenter = 'middle',\n  ySign = [-1, 1, 1, -1],\n  xSign = [1, 1, -1, -1],\n  attrKeyList = {\n    // block following attribute\n    stroke: true,\n    strokeWidth: true,\n    'stroke-width': true,\n    dashstyle: true,\n    'stroke-dasharray': true,\n    translateX: true,\n    translateY: true,\n    'stroke-opacity': true,\n    fill: true,\n    'fill-opacity': true,\n    opacity: true,\n    // attribute that has direct effect\n    transform: true,\n    cursor: true,\n    sAngle: true,\n    eAngle: true,\n    color: true,\n    alpha: true,\n    borderColor: true,\n    borderAlpha: true,\n    borderWidth: true,\n    rolloverProps: true,\n    showBorderEffect: true,\n    positionIndex: true,\n    cx: true,\n    cy: true,\n    radiusYFactor: true,\n    r: true,\n    innerR: true\n  },\n  attrFN = function (hsh, val) {\n    var key,\n      value,\n      hash = hsh,\n      slice = this,\n      confObject = slice._confObject,\n      commonAttr = {},\n      elements = confObject.elements,\n      x,\n      updateShape,\n      updateColor,\n      Pie3DManager = confObject.Pie3DManager,\n      applyCommonAttr;\n\n    // single key-value pair\n    if (isString(hash) && defined(val)) {\n      key = hash;\n      hash = {};\n      hash[key] = val;\n    }\n\n    // used as a getter: first argument is a string, second is undefined\n    if (!hash || isString(hash)) {\n      if (attrKeyList[hash]) {\n        slice = confObject[hash];\n      } else {\n        slice = slice._attr(hash);\n      }\n      // setter\n    } else {\n      for (key in hash) {\n        value = hash[key];\n\n        // if belongs from the list then handle here\n        if (attrKeyList[key]) {\n          // store the att in confObject for further use\n          confObject[key] = value;\n          if (key === 'cursor' || key === 'transform' ||\n                          key === 'opacity' || key === 'fill-opacity') {\n            commonAttr[key] = value;\n            applyCommonAttr = true;\n          } else if (key === 'sAngle' || key === 'eAngle' || key === 'cx' || key === 'cy' ||\n                          key === 'radiusYFactor' || key === 'r' || key === 'innerR') {\n            updateShape = true;\n          } else if (key === 'color' || key === 'alpha' || key === 'borderColor' ||\n                          key === 'borderAlpha' || key === 'borderWidth') {\n            updateColor = true;\n          }\n        } else { // else leve for the original attr\n          slice._attr(key, value);\n        }\n      }\n\n      // if paths need to be updated\n      if (updateShape) {\n        Pie3DManager._setSliceShape(confObject);\n        // refreash the drawinh for proper z lavel for elements\n        Pie3DManager.refreshDrawing();\n      }\n      // if colors need to be updated\n      // If the shape got changed, then also cange the color\n      if (updateColor || updateShape) {\n        Pie3DManager._setSliceCosmetics(confObject);\n      }\n      // apply common attributes\n      if (applyCommonAttr) {\n        // other elements\n        for (x in elements) {\n          elements[x].attr(commonAttr);\n        }\n        // main element\n        slice._attr(commonAttr);\n      }\n    }\n    return slice;\n  },\n  onFN = function (eventType, handler, callFromRaphael) {\n    if (callFromRaphael) {\n      this._on(eventType, handler, true);\n      return;\n    }\n    var slice = this,\n      confObject = slice._confObject,\n      elements = confObject.elements,\n      element;\n\n    for (element in elements) {\n      elements[element].on(eventType, handler);\n    }\n    return slice._on(eventType, handler);\n  },\n  onDragFN = function (dragStart, dragMove, dragEnd) {\n    var element,\n      slice = this,\n      confObject = slice._confObject,\n      elements = confObject.elements,\n      navigator = win.navigator,\n      ua = navigator.userAgent.toLowerCase(),\n      isAndroid = ua.indexOf('android') > -1;\n    for (element in elements) {\n      if (isAndroid) {\n        if (element === 'topBorder' || element === 'frontOuter' || element === 'startSlice' ||\n                      element === 'endSlice') {\n          elements[element].drag(dragStart, dragMove, dragEnd);\n        }\n      } else {\n        elements[element].drag(dragStart, dragMove, dragEnd);\n      }\n    }\n    return slice._drag(dragStart, dragMove, dragEnd);\n  },\n  hideFN = function () {\n    var slice = this,\n      confObject = slice._confObject,\n      elements = confObject.elements,\n      element;\n\n    for (element in elements) {\n      elements[element].hide();\n    }\n    return slice._hide();\n  },\n  showFN = function () {\n    var slice = this,\n      confObject = slice._confObject,\n      elements = confObject.elements,\n      element;\n\n    for (element in elements) {\n      elements[element].show();\n    }\n    return slice._show();\n  },\n  destroyFN = function () {\n    var confObject = this._confObject,\n      elements = confObject.elements, x;\n    // other elements\n    for (x in elements) {\n      elements[x].destroy();\n    }\n    if (hasSVG) {\n      // destory other element\n      // TODO: Check whether this clip elements are not destroying from else where\n      confObject.clipTop.destroy();\n      confObject.clipOuterFront.destroy();\n      confObject.clipOuterBack.destroy();\n      if (confObject.clipOuterFront1) {\n        confObject.clipOuterFront1.destroy();\n      }\n      if (confObject.clipInnerFront) {\n        confObject.clipInnerFront.destroy();\n      }\n      if (confObject.clipInnerBack) {\n        confObject.clipInnerBack.destroy();\n      }\n    }\n    // main element\n    return this._destroy();\n  },\n  dataFN = function (key, value) {\n    var slice = this,\n      confObject = slice._confObject,\n      elements = confObject.elements,\n      element;\n    if (value === UNDEF) {\n      return slice._data(key);\n    }\n    // other elements\n    for (element in elements) {\n      elements[element].data(key, value);\n    }\n    // main element\n    return slice._data(key, value);\n  },\n  si = 0; // slice index\naddDep({\n  name: 'pie3dAnimation',\n  type: 'animationRule',\n  extension: pie3dAnimation\n});\nclass Pie3DDataset extends Pie2DDataset {\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.setBorderWidth = UNDEF;\n    config.alphaanimation = 1;\n    config.showBorderEffect = UNDEF;\n  }\n  placeDataLabels (isRotating) {\n    var attr,\n      // prevTextPos,\n      dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      toolTipController = chart.getFromEnv('toolTipController'),\n      chartConfig = chart.config,\n      plotOptions = dataSet.config,\n      plotItems = dataSet.components.data,\n      piePlotOptions = plotOptions.piePlotOptions,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasTop = chartConfig.canvasTop,\n      canvasWidth = chartConfig.canvasWidth,\n      cx = canvasLeft + chartConfig.canvasWidth * 0.5,\n      cy = canvasTop + chartConfig.canvasHeight * 0.5,\n      smartLabel = chart.getFromEnv('smartLabel'),\n      dataLabelsOptions = plotOptions.dataLabelOptions,\n      style = dataLabelsOptions.style,\n      lineHeight = pluckNumber(mathCeil(parseFloat(style.lineHeight)), 12),\n      placeInside = getFirstValue(dataLabelsOptions.placeInside, false),\n      skipOverlapLabels = dataLabelsOptions.skipOverlapLabels,\n      manageLabelOverflow = dataLabelsOptions.manageLabelOverflow,\n      connectorPadding = dataLabelsOptions.connectorPadding,\n      distanceOption = dataLabelsOptions.distance,\n      connectorWidth = dataLabelsOptions.connectorWidth,\n      remainingHeight,\n      // divide the points into quarters for anti collision\n      quarters = [\n        [], // top right\n        [], // bottom right\n        [], // bottom left\n        [] // top left\n      ],\n      // todo remove the dupliace variables.\n      plotLeft = canvasLeft,\n      plotTop = canvasTop,\n      plotWidth = canvasWidth,\n      labelFontSize = parseInt(style.fontSize, 10),\n      labelHeight = labelFontSize,\n      halfLabelHeight = labelHeight / 2,\n      xDisplacement = [connectorPadding,\n        connectorPadding, -connectorPadding, -connectorPadding\n      ],\n      isSmartLineSlanted = dataLabelsOptions.isSmartLineSlanted,\n      align,\n      i,\n      labelWidth,\n      j,\n      oriY,\n      maxYmayHave,\n      spaceRequired,\n      length,\n      k,\n      sliced,\n      x1,\n      x2,\n      x3,\n      x4,\n      y1,\n      y2,\n      y3,\n      points,\n      point,\n      angle,\n      excess,\n      excessArr,\n      dataLabel,\n      dataLabelCheck,\n      quarter,\n      transX,\n      transY,\n      smartLabelObj,\n      pointConfig,\n      pointGraphics,\n      connector,\n      connectorPath,\n      outside = distanceOption > 0,\n      center = plotOptions.center || (plotOptions.center = [\n        cx,\n        cy,\n        piePlotOptions.size,\n        (piePlotOptions.innerSize || 0)\n      ]),\n      centerY = center[1],\n      centerX = center[0],\n      radius = center[2],\n      radiusY = center[4],\n      dataLabelsRadius = plotOptions.labelsRadius,\n      dataLabelsRadiusY = mathRound(plotOptions.labelsRadiusY * 100) / 100,\n      maxLabels = plotOptions.maxLabels,\n      enableSmartLabels = plotOptions.enableSmartLabels,\n      labelQuardentHeight,\n      maxQuardentLabel,\n      pieSliceDepthHalf = plotOptions.pieSliceDepth / 2,\n      _textCss,\n      _textAttrs,\n      animationManager = chart.getFromEnv('animationManager'),\n      dataLabelContainer = dataSet.getContainer('label-group');\n\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    // save the world if there is no labels to be placed.\n    if (!plotOptions.dataLabelCounter) {\n      return;\n    }\n    if (!isRotating) {\n      // do not set the style every time\n      // Do it for first time\n      smartLabel.setStyle(style);\n    }\n    // arrange points for detection collision\n    // Creates an array of quarter containing labels of each quarter\n    // if there has only one label the draw it inside\n    if (plotItems.length === 1) {\n      point = plotItems[0];\n      pointGraphics = point.graphics;\n      pointConfig = point.config;\n      _textAttrs = pointConfig._textAttrs;\n      _textCss = pointConfig._textCss;\n      dataLabel = pointGraphics.label;\n      connector = pointGraphics.connector;\n      pointConfig.slicedTranslation = [plotLeft, plotTop];\n      if (pointConfig.y !== null && pointConfig.y !== UNDEF) {\n        _textAttrs.visibility = VISIBLE;\n        _textAttrs['text-anchor'] = alignCenter;\n        _textAttrs.x = centerX;\n        _textAttrs.y = centerY + halfLabelHeight - 2;\n\n        _textAttrs._x = centerX;\n      }\n\n      _textCss.cursor = pointConfig.labellink ? 'pointer' : '';\n      dataLabel = pointGraphics.label = animationManager.setAnimation({\n        el: pointGraphics.label || 'text',\n        attr: _textAttrs,\n        css: _textCss,\n        label: 'label',\n        container: dataLabelContainer,\n        component: dataSet\n      });\n      if (chartConfig.showtooltip && dataLabel.abbrArr && dataLabel.abbrArr.length) {\n        toolTipController.enableToolTip(dataLabel, UNDEF);\n      }\n      dataLabel.on('fc-dragstart', plotDragStart)\n        .on('fc-dragmove', plotDragMove)\n        .on('fc-dragend', plotDragEnd)\n        .on('fc-click', labelClickFn.bind(dataLabel, chart, point.config.labellink))\n        .on('fc-mouseup', plotClickHandler(dataSet, dataLabel))\n        .on('fc-mouseover', plotRollOver)\n        .on('fc-mouseout', plotRollOut);\n\n      if (_textAttrs._x) {\n        dataLabel.x = _textAttrs._x;\n        delete _textAttrs.x;\n      }\n      dataLabel\n        .data('plotItem', _textAttrs.plotItem)\n        .data(EVENTARGS, _textAttrs.eventArgs);\n\n      if (_textAttrs.visibility === VISIBLE) {\n        dataLabel.show();\n      }\n\n      if (connector) {\n        connector.hide();\n      }\n    } else {\n      if (placeInside) {\n        fcEach(plotItems, function (plotPoint) {\n          var slicedTranslation,\n            translateX,\n            translateY;\n\n          pointGraphics = plotPoint.graphics;\n          pointConfig = plotPoint.config;\n          _textAttrs = pointConfig._textAttrs;\n          dataLabel = pointGraphics.label;\n          if (pointConfig.y !== null && pointConfig.y !== UNDEF) {\n            angle = pointConfig.angle;\n            y3 = centerY + (center[6] * mathSin(angle)) + halfLabelHeight - 2;\n            x3 = centerX + (center[5] * mathCos(angle));\n            _textAttrs._x = x3;\n            _textAttrs._y = y3;\n            if (pointConfig.sliced) {\n              slicedTranslation = plotPoint.slicedTranslation;\n              translateX = slicedTranslation[0] - plotLeft;\n              translateY = slicedTranslation[1] - plotTop;\n              x3 = x3 + translateX;\n              y3 = y3 + translateY;\n            }\n            _textAttrs.visibility = VISIBLE;\n            _textAttrs.align = alignCenter;\n            _textAttrs.x = x3;\n            _textAttrs.y = y3;\n          }\n          _textCss.cursor = pointConfig.labellink ? 'pointer' : '';\n          dataLabel = pointGraphics.label = animationManager.setAnimation({\n            el: pointGraphics.label || 'text',\n            attr: _textAttrs,\n            css: _textCss,\n            label: 'label',\n            container: dataLabelContainer,\n            component: dataSet\n          });\n          if (chartConfig.showtooltip && dataLabel && dataLabel.abbrArr && dataLabel.abbrArr.length) {\n            toolTipController.enableToolTip(dataLabel, UNDEF);\n          }\n          dataLabel.data('plotItem', _textAttrs.plotItem)\n            .data(EVENTARGS, _textAttrs.eventArgs);\n\n          if (_textAttrs.visibility === VISIBLE) {\n            dataLabel.show();\n          }\n\n          dataLabel.x = _textAttrs._x;\n          dataLabel._x = _textAttrs._x;\n          dataLabel._y = _textAttrs._y;\n        });\n      } else { // outside\n        fcEach(plotItems, function (plotPoint) {\n          pointGraphics = plotPoint.graphics;\n          pointConfig = plotPoint.config;\n          _textCss = pointConfig._textCss;\n          _textAttrs = pointConfig._textAttrs;\n          if (!(_textAttrs.text = pointConfig.displayValue)) {\n            pointGraphics.connector && animationManager.setAnimation({\n              el: pointGraphics.connector,\n              component: dataSet,\n              callback: hideFn\n            });\n            pointGraphics.label && animationManager.setAnimation({\n              el: pointGraphics.label,\n              component: dataSet,\n              callback: hideFn\n            });\n            return;\n          }\n          pointGraphics = plotPoint.graphics;\n          if (pointConfig.y !== null && pointConfig.y !== UNDEF) {\n            dataLabel = pointGraphics.label;\n            connector = pointGraphics.connector;\n            connector && connector.show();\n            dataLabel && dataLabel.show();\n          }\n\n          dataLabel = pointGraphics.label;\n          if (chartConfig.showtooltip && dataLabel && dataLabel.abbrArr && dataLabel.abbrArr.length) {\n            toolTipController.enableToolTip(dataLabel, UNDEF);\n          }\n          angle = pointConfig.angle;\n\n          if (angle < 0) {\n            angle = pi2 + angle;\n          }\n          // Calculate top right quarter labels\n          if (angle >= 0 && angle < piBy2) {\n            quarter = 1;\n          } else\n          // Calculate bottom right quarter labels\n          if (angle < pi) {\n            quarter = 2;\n          } else\n          // Calculate bottom left quarter labels\n          if (angle < (pi3By2)) {\n            quarter = 3;\n          } else {\n            // Calculate bottom left quarter labels\n            quarter = 0;\n          }\n          // Now put labels according to each quarter\n          quarters[quarter].push({\n            point: plotPoint,\n            angle: angle\n          });\n\n          /* dataLabel = pointGraphics.label;\n          if (dataLabel) {\n              angle = pointConfig.angle;\n\n              if (angle < 0) {\n                  angle = pi2 + angle;\n              }\n              // Calculate top right quarter labels\n              if (angle >= 0 && angle < piBy2) {\n                  quarter = 1;\n              } else\n              // Calculate bottom right quarter labels\n              if (angle < pi) {\n                  quarter = 2;\n              } else\n              // Calculate bottom left quarter labels\n              if (angle < (pi3By2)) {\n                  quarter = 3;\n              }\n              // Calculate bottom left quarter labels\n              else {\n                  quarter = 0;\n              }\n              // Now put labels according to each quarter\n              quarters[quarter].push ( {\n                  point : point,\n                  angle : angle\n              });\n          } */\n        });\n\n        i = 4;\n        // if excess then remove the low value slice first\n        while (i--) {\n          if (skipOverlapLabels) {\n            // Find labels can fit into the quarters or not\n            excess = quarters[i].length - maxLabels;\n            if (excess > 0) {\n              quarters[i].sort(sortArrayByPoint); // sort by point.y\n              // remove extra data form the array\n              // which labels can not be fitted into the quarters\n              excessArr = quarters[i].splice(0, excess);\n              // hide all removed labels\n              for (j = 0, length = excessArr.length; j < length; j += 1) {\n                point = excessArr[j].point;\n                pointGraphics = point.graphics;\n                if (pointGraphics.label) {\n                  animationManager.setAnimation({\n                    el: pointGraphics.label,\n                    attr: { 'visibility': HIDDEN },\n                    component: dataSet\n                  });\n                }\n                if (pointGraphics.connector) {\n                  animationManager.setAnimation({\n                    el: pointGraphics.connector,\n                    attr: { visibility: HIDDEN },\n                    component: dataSet\n                  });\n                }\n              }\n            }\n          }\n          // now we sort the data labels by its label angle\n          quarters[i].sort(sortArrayByAngle);\n        }\n\n        maxQuardentLabel = mathMax(\n          quarters[0].length,\n          quarters[1].length,\n          quarters[2].length,\n          quarters[3].length\n        );\n        labelQuardentHeight = mathMax(\n          mathMin(maxQuardentLabel, maxLabels) * labelHeight,\n          dataLabelsRadiusY + labelHeight\n        );\n\n        // reverse 1st and 3rd quardent points\n        quarters[1].reverse();\n        quarters[3].reverse();\n        smartLabel.setStyle(style);\n        k = 4;\n        while (k--) {\n          points = quarters[k];\n          length = points.length;\n\n          if (!skipOverlapLabels) {\n            if (length > maxLabels) {\n              labelHeight = labelQuardentHeight / length;\n            } else {\n              labelHeight = labelFontSize;\n            }\n            halfLabelHeight = labelHeight / 2;\n          }\n\n          // 1st pass\n          // place all labels at 1st quarter\n\n          // calculate the total available space to put labels\n          spaceRequired = length * labelHeight;\n          // calculate the remaining height\n          remainingHeight = labelQuardentHeight;\n          // place all child point\n          for (i = 0; i < length; i += 1, spaceRequired -= labelHeight) {\n            // Get the y position of the label (radius where data label is to draw)\n            oriY = mathAbs(labelQuardentHeight * mathSin(points[i].angle));\n            if (remainingHeight < oriY) {\n              oriY = remainingHeight;\n            } else if (oriY < spaceRequired) {\n              oriY = spaceRequired;\n            }\n            remainingHeight = (points[i].oriY = oriY) - labelHeight;\n          }\n\n          // 2nd pass (reverse)\n          align = alignments[k];\n          // place all labels at 1st quarter\n          maxYmayHave = labelQuardentHeight - ((length - 1) * labelHeight);\n          remainingHeight = 0;\n\n          // place all child point\n          for (i = points.length - 1; i >= 0; i -= 1, maxYmayHave += labelHeight) {\n            point = points[i].point;\n            pointGraphics = point.graphics;\n            pointConfig = point.config;\n            _textAttrs = pointConfig._textAttrs;\n            _textCss = pointConfig._textCss;\n\n            if (pointConfig.y === null || !_textAttrs.text) {\n              continue;\n            }\n            angle = points[i].angle;\n            sliced = pointConfig.sliced;\n            dataLabel = pointGraphics.label;\n\n            oriY = mathAbs(labelQuardentHeight * mathSin(angle));\n\n            if (oriY < remainingHeight) {\n              oriY = remainingHeight;\n            } else if (oriY > maxYmayHave) {\n              oriY = maxYmayHave;\n            }\n\n            remainingHeight = oriY + labelHeight;\n\n            y1 = ((oriY + points[i].oriY) / 2);\n            x1 = centerX + xSign[k] * dataLabelsRadius * mathCos(math.asin(y1 /\n                                labelQuardentHeight));\n\n            y1 *= ySign[k];\n            y1 += centerY;\n\n            y2 = centerY + (radiusY * mathSin(angle));\n            x2 = centerX + (radius * mathCos(angle));\n\n            // Relation: centerX <= connectorStartX <= connectorEndX (for right half and vice\n            // versa for left half)\n            ((k < 2 && x1 < x2) || (k > 1 && x1 > x2)) && (x1 = x2);\n\n            x3 = x1 + xDisplacement[k];\n            y3 = y1 + halfLabelHeight - 2;\n            x4 = x3 + xDisplacement[k];\n\n            _textAttrs._x = x4;\n\n            if (manageLabelOverflow) {\n              labelWidth = k > 1 ? x4 - canvasLeft : canvasLeft + plotWidth - x4;\n              smartLabel.setStyle(pointConfig.style);\n              lineHeight = pluckNumber(mathCeil(parseFloat(pointConfig.style.lineHeight)),\n                12) + ((mathCeil(parseFloat(pointConfig.style.border), 12) * 2) || 0);\n              smartLabelObj = smartLabel.getSmartText(pointConfig.displayValue, labelWidth,\n                lineHeight);\n              _textAttrs.text = smartLabelObj.text;\n              _textAttrs.tooltip = smartLabelObj.tooltext;\n            }\n\n            // shift the labels at front pieSliceDepthHalf\n            if (angle < pi) {\n              y1 += pieSliceDepthHalf;\n              y2 += pieSliceDepthHalf;\n              y3 += pieSliceDepthHalf;\n            }\n            _textAttrs._y = y3;\n            // dataLabel.y = y3;\n            if (sliced) {\n              transX = pointConfig.transX;\n              transY = pointConfig.transY;\n              x3 = x3 + transX;\n              x1 = x1 + transX;\n              x2 = x2 + transX;\n              y1 = y1 + transY;\n              y2 = y2 + transY;\n              x4 = x4 + transX;\n            }\n            _textAttrs.visibility = VISIBLE;\n            _textAttrs['text-anchor'] = align;\n            _textAttrs.x = x4;\n            _textAttrs.y = y1;\n            _textAttrs.opacity = 1;\n\n            _textCss.cursor = pointConfig.labellink ? 'pointer' : '';\n            dataLabelCheck = pointGraphics.label;\n            dataLabel = animationManager.setAnimation({\n              el: dataLabelCheck || 'text',\n              attr: _textAttrs,\n              css: _textCss,\n              container: dataLabelContainer,\n              component: dataSet,\n              label: 'label'\n            });\n            if (chartConfig.showtooltip && dataLabel && dataLabel.abbrArr && dataLabel.abbrArr.length) {\n              toolTipController.enableToolTip(dataLabel, UNDEF);\n            }\n            dataLabel.outlineText(plotOptions.showTextOutline, _textAttrs.fill);\n            dataLabel.data('textPos', {\n              x: x4,\n              y: y1\n            }).data('plotItem', _textAttrs.plotItem)\n              .data(EVENTARGS, _textAttrs.eventArgs);\n            if (!dataLabelCheck) {\n              // asssign events on label only on initial creation\n              pointGraphics.label = dataLabel;\n              dataLabel.on('fc-dragstart', plotDragStart)\n                .on('fc-dragmove', plotDragMove)\n                .on('fc-dragend', plotDragEnd)\n                .on('fc-click', labelClickFn.bind(dataLabel, chart, point.config.labellink))\n                .on('fc-click', plotClickHandler(dataSet, dataLabel))\n                .on('fc-mouseover', plotRollOver)\n                .on('fc-mouseout', plotRollOut);\n            }\n\n            dataLabel.x = _textAttrs._x;\n            // storing original x value\n            // to use while slicing in (IE Issue original x get changed form animate)\n            dataLabel._x = _textAttrs._x;\n            dataLabel.y = _textAttrs._y;\n\n            if (_textAttrs.tooltip) {\n              toolTipController.enableToolTip(dataLabel, _textAttrs.tooltip);\n              delete _textAttrs.tooltip;\n            }\n            // draw the connector\n            // draw the connector\n            if (outside && connectorWidth && enableSmartLabels) {\n              connector = pointGraphics.connector;\n              // if (!pointConfig.connectorPath) {\n              //   isNewElem = true;\n              // }\n              pointConfig.connectorPath = connectorPath = [\n                M,\n                x2, y2, // base\n                L,\n                isSmartLineSlanted ? x1 : x2, y1, // first break, next to the label\n                x3, y1 // end of the string at the label\n              ];\n\n              attr = {\n                path: connectorPath,\n                'stroke-width': connectorWidth,\n                stroke: dataLabelsOptions.connectorColor || '#606060',\n                opacity: 1,\n                visibility: VISIBLE\n              };\n              if (connector) {\n                animationManager.setAnimation({\n                  el: connector,\n                  attr: attr,\n                  label: 'connector',\n                  component: dataSet\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  _parsePie3DOptions () {\n    var dataSet = this,\n      conf = dataSet.config;\n    return {\n      size: 2 * conf.pieMinRadius,\n      slicedOffset: conf.slicingDistance,\n      allowPointSelect: true,\n      cursor: POINTER,\n      innerSize: dataSet.getName() === 'pie3d' ? 0 : _getInnerSize.call(dataSet)\n    };\n  }\n  // Some border properties of PIE3D varies from that of its 2d counter part\n  _parseBorderConfig (setColor, setAlpha, dataJSON) {\n    var dataSet = this,\n      conf = dataSet.config,\n      pieBorderColor = conf.pieBorderColor,\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      // each slice border color\n      setPlotBorderColor = pluck(dataJSON.bordercolor, pieBorderColor),\n      // each slice border alpha\n      setPlotBorderAlpha = pluck(dataJSON.borderalpha, chartAttr.plotborderalpha,\n        chartAttr.pieborderalpha);\n\n    setPlotBorderColor = pluck(setPlotBorderColor, getLightColor(setColor, 90)).split(COMMASTRING)[0];\n    setPlotBorderAlpha = chartAttr.showplotborder === ZEROSTRING\n      ? ZEROSTRING : pluck(setPlotBorderAlpha, setAlpha, '80');\n    return {\n      setPlotBorderColor: setPlotBorderColor,\n      setPlotBorderAlpha: setPlotBorderAlpha\n    };\n  }\n  // Initialising the pie3D manager class.\n  _initPie3dManager () {\n    var i,\n      point,\n      dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      precision = 1000,\n      total = 0,\n      dataSetConfig = dataSet.config,\n      dataSetComponents = dataSet.components,\n      dataLabelOptions = dataSetConfig.dataLabelOptions,\n      pie3DOptions = (dataSetConfig.pie3DOptions = dataSet._parsePie3DOptions()),\n      startingAngle = (pluck(dataSetConfig.startAngle, 0) % pi2),\n      fontSize,\n      managedPieSliceDepth = dataSetConfig.managedPieSliceDepth,\n      slicedOffset = dataSetConfig.slicedOffset = pie3DOptions.slicedOffset,\n      plotWidth = chartConfig.canvasWidth,\n      plotHeight = chartConfig.canvasHeight,\n      positions = [chartConfig.canvasLeft + plotWidth * 0.5,\n        chartConfig.canvasTop + plotHeight * 0.5 - managedPieSliceDepth * 0.5],\n      start,\n      pointConfig,\n      end,\n      angle,\n      lastEnd,\n      maxEnd,\n      data = dataSetComponents.data,\n      fraction,\n      smallestSize = mathMin(plotWidth, plotHeight),\n      isPercent,\n      radiusX, // the x component of the radius vector for a given point\n      radiusY,\n      labelDistance = dataLabelOptions.distance,\n      pieYScale = dataSetConfig.pieYScale,\n\n      slicedOffsetY = dataSetConfig.slicedOffsetY || (dataSetConfig.slicedOffsetY =\n                  slicedOffset * dataSetConfig.pieYScale),\n      pie3DManager = dataSet.getFromEnv('pie3DManager');\n\n    // get positions - either an integer or a percentage string must be given\n    positions.push((2 * dataSetConfig.pieMinRadius), pie3DOptions.innerSize || 0);\n\n    positions = map(positions, function (length, index) {\n      isPercent = /%$/.test(length);\n      return isPercent\n        // i == 0: centerX, relative to width\n        // i == 1: centerY, relative to height\n        // i == 2: size, relative to smallestSize\n        // i == 4: innerSize, relative to smallestSize\n        ? [plotWidth, plotHeight - managedPieSliceDepth, smallestSize, smallestSize][index] *\n              pInt(length) / 100\n        : length;\n    });\n\n    // convert all diameter into radius\n    positions[2] /= 2;\n    positions[3] /= 2;\n    // Add the ry\n    positions.push(positions[2] * pieYScale);\n    // centerRadiusX\n    positions.push((positions[2] + positions[3]) / 2);\n    // centerRadiusY\n    positions.push(positions[5] * pieYScale);\n\n    // utility for getting the x value from a given y, used for anticollision logic in data labels\n    dataSet.getX = function (y, left) {\n      angle = math.asin((y - positions[1]) / (positions[2] + labelDistance));\n\n      return positions[0] +\n              (left ? -1 : 1) *\n              (mathCos(angle) * (positions[2] + labelDistance));\n    };\n\n    // set center for later use\n    dataSetConfig.center = positions;\n\n    // get the total sum\n    fcEach(data, function (datapoint) {\n      total += datapoint.config.y;\n    });\n\n    dataSetConfig.labelsRadius = positions[2] + labelDistance;\n    dataSetConfig.labelsRadiusY = dataSetConfig.labelsRadius * pieYScale;\n    dataSetConfig.quadrantHeight = (plotHeight - managedPieSliceDepth) / 2;\n    dataSetConfig.quadrantWidth = plotWidth / 2;\n\n    lastEnd = startingAngle;\n\n    lastEnd = mathRound(lastEnd * precision) / precision;\n    maxEnd = lastEnd + pi2;\n\n    fontSize = pluckNumber(parseInt(dataLabelOptions.style.fontSize, 10), 10) + 4; // 2px padding\n    dataSetConfig.maxLabels = mathFloor(dataSetConfig.quadrantHeight / fontSize); // max labels per quarter\n    dataSetConfig.labelFontSize = fontSize;\n    dataSetConfig.connectorPadding = pluckNumber(dataLabelOptions.connectorPadding, 5);\n    dataSetConfig.isSmartLineSlanted = pluck(dataLabelOptions.isSmartLineSlanted, true);\n    dataSetConfig.connectorWidth = pluckNumber(dataLabelOptions.connectorWidth, 1);\n    dataSetConfig.enableSmartLabels = dataLabelOptions.enableSmartLabels;\n    if (!pie3DManager) {\n      pie3DManager = new Pie3DManager(chart);\n      dataSet.attachChild(pie3DManager, 'pie3DManager', false);\n      dataSet.addToEnv('pie3DManager', pie3DManager);\n    }\n    dataSet._configurePie3DManager();\n\n    // each (data, function (point) {\n    for (i = data.length - 1; i >= 0; i -= 1) {\n      point = data[i];\n      pointConfig = point.config;\n      // set start and end angle\n      start = lastEnd;\n      fraction = total ? pointConfig.y / total : 0;\n\n      lastEnd = mathRound((lastEnd + (fraction * pi2)) * precision) / precision;\n      if (lastEnd > maxEnd) {\n        lastEnd = maxEnd;\n      }\n      end = lastEnd;\n\n      // set the shape\n      pointConfig.shapeArgs = {\n        sAngle: mathRound(start * precision) / precision,\n        eAngle: mathRound(end * precision) / precision\n      };\n\n      // center for the sliced out slice\n      pointConfig.centerAngle = angle = ((end + start) / 2) % pi2;\n      // TODO: slicedTranslation is implemented as string\n      pointConfig.slicedTranslation = [\n        mathRound(mathCos(angle) * slicedOffset),\n        mathRound(mathSin(angle) * slicedOffsetY)\n      ];\n\n      // set the anchor point for tooltips\n      radiusX = mathCos(angle) * positions[2];\n      dataSetConfig.radiusY = radiusY = mathSin(angle) * positions[4];\n      pointConfig.tooltipPos = [\n        positions[0] + radiusX * 0.7,\n        positions[1] + radiusY// changed to reducr mouce on tooltip condition\n      ];\n\n      // API properties\n      pointConfig.percentage = fraction * 100;\n      pointConfig.total = total;\n    }\n  }\n  _configurePie3DManager () {\n    var dataSet = this,\n      dataSetConfig = dataSet.config,\n      dataSetComponents = dataSet.components,\n      pie3DManager = dataSet.getFromEnv('pie3DManager'),\n      data = dataSetComponents.data;\n\n    if (pie3DManager) {\n      pie3DManager.configure(dataSetConfig.pieSliceDepth, data.length === 1, dataSetConfig.use3DLighting,\n        false);\n    }\n  }\n\n  allocatePosition () {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = chart.config,\n      dataSetConfig = dataset.config,\n      plotData = dataset.components.data,\n      i,\n      precision = 1000,\n      dataObj,\n      startingAngle = (pluck(dataSetConfig.startAngle, 0) % pi2),\n      lastEnd = startingAngle,\n      start,\n      end,\n      point,\n      fraction,\n      isPercent,\n      pie3DOptions = (dataSetConfig.pie3DOptions = dataset._parsePie3DOptions()),\n      pieYScale = dataSetConfig.pieYScale,\n      managedPieSliceDepth = dataSetConfig.managedPieSliceDepth,\n      plotWidth = chartConfig.canvasWidth,\n      plotHeight = chartConfig.canvasHeight,\n      smallestSize = mathMin(plotWidth, plotHeight),\n      positions = [chartConfig.canvasLeft + plotWidth * 0.5,\n        chartConfig.canvasTop + plotHeight * 0.5 - managedPieSliceDepth * 0.5],\n      total = 0,\n      maxEnd,\n      len = plotData.length;\n\n    // get positions - either an integer or a percentage string must be given\n    positions.push((2 * dataSetConfig.pieMinRadius), pie3DOptions.innerSize || 0);\n\n    positions = map(positions, function (length, index) {\n      isPercent = /%$/.test(length);\n      return isPercent\n        // i == 0: centerX, relative to width\n        // i == 1: centerY, relative to height\n        // i == 2: size, relative to smallestSize\n        // i == 4: innerSize, relative to smallestSize\n        ? [plotWidth, plotHeight - managedPieSliceDepth, smallestSize, smallestSize][index] *\n              pInt(length) / 100\n        : length;\n    });\n\n    // convert all diameter into radius\n    positions[2] /= 2;\n    positions[3] /= 2;\n    // Add the ry\n    positions.push(positions[2] * pieYScale);\n    // centerRadiusX\n    positions.push((positions[2] + positions[3]) / 2);\n    // centerRadiusY\n    positions.push(positions[5] * pieYScale);\n\n    dataSetConfig.center = positions;\n    // get the total sum\n    fcEach(plotData, function (plotpoint) {\n      total += plotpoint.config.y;\n    });\n    lastEnd = mathRound(lastEnd * precision) / precision;\n    maxEnd = lastEnd + pi2;\n    for (i = plotData.length - 1; i >= 0; i -= 1) {\n      point = plotData[i];\n      start = lastEnd;\n      fraction = total ? point.config.y / total : 0;\n\n      lastEnd = mathRound((lastEnd + (fraction * pi2)) * precision) / precision;\n      if (lastEnd > maxEnd) {\n        lastEnd = maxEnd;\n      }\n      end = lastEnd;\n\n      // set the shape\n      point.config.shapeArgs = {\n        sAngle: mathRound(start * precision) / precision,\n        eAngle: mathRound(end * precision) / precision\n      };\n    }\n\n    for (i = 0; i < len; i++) {\n      dataObj = plotData[i];\n      dataset.parsePlotAttributes(dataObj, i);\n      dataset.parseLabelAttributes(dataObj, i);\n    }\n  }\n  parsePlotAttributes (set, index) {\n    var positions,\n      pieYScale,\n      dataSet = this,\n      dataSetComponents = dataSet.components,\n      dataSetConfig = dataSet.config,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      plotData = dataSetComponents.data,\n      dataLabelOptions = dataSetConfig.dataLabelOptions,\n      style = dataLabelOptions.style,\n      slicedOffset = dataSetConfig.slicingDistance,\n      slicedOffsetY = dataSetConfig.slicedOffsetY || (dataSetConfig.slicedOffsetY = slicedOffset * dataSetConfig.pieYScale),\n      showBorderEffect = dataSetConfig.showBorderEffect,\n      dataLength = plotData.length,\n      colorLabelFromPoint = dataSetConfig.usePerPointLabelColor,\n      textDirection = chartConfig.textDirection,\n      eventArgs,\n      plotItem,\n      val,\n      displayValue,\n      setLink,\n      sliced,\n      angle,\n      connectorWidth,\n      shapeArgs,\n      toolText,\n      setConfig,\n      dataLabel,\n      connector,\n      i = index,\n      isTranspose,\n      _textAttrs,\n      _textCss,\n      setElAttr,\n      connectorAttr,\n      setElCosmetics = {},\n      prevPositions,\n      dataLabelStyle = chartConfig.dataLabelStyle;\n\n    positions = dataSetConfig.center;\n    prevPositions = dataSetConfig.prevPositions || positions;\n    pieYScale = dataSetConfig.pieYScale;\n    setConfig = set.config;\n    if (!(_textAttrs = setConfig._textAttrs)) {\n      _textAttrs = setConfig._textAttrs = {};\n    }\n    if (!(_textCss = setConfig._textCss)) {\n      _textCss = setConfig._textCss = {};\n    }\n\n    val = setConfig.y;\n    displayValue = setConfig.displayValue;\n    sliced = setConfig.sliced;\n    shapeArgs = setConfig.shapeArgs;\n    angle = setConfig.centerAngle;\n    toolText = setConfig.toolText;\n    setLink = !!setConfig.link;\n    style = setConfig.style;\n\n    if (val === null || val === UNDEF) {\n      // todo: update null data.\n      return;\n    }\n\n    setElAttr = {\n      sAngle: shapeArgs.sAngle,\n      eAngle: shapeArgs.eAngle,\n      r: !isTranspose ? positions[2] : prevPositions[2],\n      innerR: !isTranspose ? positions[3] : prevPositions[3],\n      cx: !isTranspose ? positions[0] : prevPositions[0],\n      cy: !isTranspose ? positions[1] : prevPositions[1],\n      radiusYFactor: pieYScale,\n      opacity: 1\n    };\n\n    if (displayValue !== UNDEF) {\n      // If data label cosmetics exists.\n      if (style) {\n        if (!(_textCss = setConfig._textCss)) {\n          _textCss = setConfig._textCss = {};\n        }\n        _textCss.fontFamily = style.fontFamily;\n        _textCss.fontSize = style.fontSize;\n        _textCss.lineHeight = style.lineHeight;\n        _textCss.fontWeight = style.fontWeight;\n        _textCss.fontStyle = style.fontStyle;\n      } else if (setConfig._textCss) {\n        /* If there was a perviously applied cosmetics for a data Object, need to restore the chart\n        Label styling to it. */\n        dataLabel && dataLabel.removeCSS();\n        delete setConfig._textCss;\n        _textCss = UNDEF;\n      }\n\n      setConfig.style = (style || (style = dataLabelStyle));\n      _textAttrs.text = displayValue;\n      _textAttrs.fill = (colorLabelFromPoint ? toRaphaelColor(setConfig.color)\n        : style.color) || '#000000';\n      _textAttrs['text-bound'] = [style.backgroundColor, style.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash];\n      _textAttrs.direction = textDirection;\n      _textAttrs.lineHeight = style.lineHeight;\n\n      if (dataLabel) {\n        if (_textCss) {\n          delete _textCss.fontFamily;\n          delete _textCss.fontSize;\n          delete _textCss.lineHeight;\n          delete _textCss.fontWeight;\n          delete _textCss.fontStyle;\n          _textCss = UNDEF;\n        }\n      }\n      if (dataLabelOptions.distance > 0 &&\n                      (connectorWidth = dataLabelOptions.connectorWidth) &&\n                                     dataLabelOptions.enableSmartLabels) {\n        connectorAttr = {\n          'stroke-width': connectorWidth,\n          stroke: dataLabelOptions.connectorColor || '#606060',\n          cursor: setLink ? POINTER : '',\n          opacity: 1\n        };\n      }\n    } else {\n      _textAttrs.text = BLANKSTRING;\n    }\n\n    setConfig.plotItem = plotItem = {\n      chart: chart,\n      index: i,\n      seriesData: dataSetConfig,\n      value: val,\n      angle: (setConfig.angle = angle),\n      link: setConfig.link,\n      shapeArgs: shapeArgs,\n      slicedX: sliced && !dataSetConfig.singletonCase ? mathCos(angle) * slicedOffset : 0,\n      slicedY: sliced && !dataSetConfig.singletonCase ? mathSin(angle) * slicedOffsetY : 0,\n      sliced: sliced,\n      labelText: displayValue,\n      name: setConfig.name,\n      percentage: setConfig.percentage,\n      toolText: toolText,\n      originalIndex: dataLength - i - 1,\n      style: setConfig.style,\n      // graphic: setElement,\n      transX: (setConfig.transX = mathCos(angle) * slicedOffset),\n      transY: (setConfig.transY = mathSin(angle) * slicedOffsetY),\n      slicedTranslation: (setConfig.slicedTranslation = 't' + setConfig.transX + ',' +\n                      setConfig.transY),\n      label: dataLabel,\n      connector: connector\n    };\n    setConfig.eventArgs = eventArgs = {\n      index: dataSetConfig.reversePlotOrder ? dataLength - 1 - i : i,\n      link: setConfig.link,\n      value: setConfig.y,\n      displayValue: setConfig.displayValueArgs,\n      categoryLabel: setConfig.categoryLabel,\n      isSliced: setConfig.sliced,\n      toolText: setConfig.toolText,\n      color: setConfig.setColor,\n      alpha: setConfig.setAlpha,\n      borderColor: setConfig.borderConfig.setPlotBorderColor,\n      borderAlpha: setConfig.borderConfig.setPlotBorderAlpha,\n      dashed: setConfig.setBorderDashed,\n      showLabel: setConfig.showLabel,\n      showValue: setConfig.showValue,\n      labelPosition: setConfig.labelPosition,\n      valuePosition: setConfig.valuePosition,\n      labelFont: setConfig.labelFont,\n      labelFontColor: setConfig.labelFontColor || '#555555',\n      labelLink: setConfig.labelLink,\n      hoverColor: setConfig.hoverEffects.hoverColor,\n      hoverAlpha: setConfig.hoverEffects.alpha,\n      borderHoverColor: setConfig.hoverBorderColor,\n      borderHoverAlpha: setConfig.hoverEffects.borderAlpha,\n      id: setConfig.id\n    };\n\n    setElCosmetics = {\n      color: setConfig.color.color.split(',')[0],\n      alpha: setConfig._3dAlpha,\n      borderWidth: setConfig.borderWidth,\n      borderColor: setConfig.borderColor,\n      borderAlpha: setConfig.borderConfig.setPlotBorderAlpha\n    };\n\n    extend2(setElAttr, setElCosmetics);\n\n    setElAttr.cursor = setLink ? POINTER : '';\n    setElAttr.showBorderEffect = showBorderEffect;\n\n    setElAttr.transform = 't' + plotItem.slicedX + ',' + plotItem.slicedY;\n    _textAttrs.plotItem = plotItem;\n    _textAttrs[EVENTARGS] = eventArgs;\n\n    setConfig.props = {\n      element: {\n        attr: setElAttr\n      },\n      connector: {\n        attr: connectorAttr\n      },\n      label: {\n        attr: _textAttrs,\n        css: _textCss\n      }\n    };\n  }\n  draw () {\n    var positions,\n      pieYScale,\n      dataSet = this,\n      dataSetComponents = dataSet.components,\n      dataSetConfig = dataSet.config,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      animationManager = chart.getFromEnv('animationManager'),\n      // state,\n      plotData = dataSetComponents.data,\n      pie3DManager,\n      dataLabelOptions = dataSetConfig.dataLabelOptions,\n      style = dataLabelOptions.style,\n      slicedOffset = dataSetConfig.slicingDistance,\n      slicedOffsetY = dataSetConfig.slicedOffsetY || (dataSetConfig.slicedOffsetY = slicedOffset * dataSetConfig.pieYScale),\n      showBorderEffect = dataSetConfig.showBorderEffect,\n      dataLength = plotData.length,\n      colorLabelFromPoint = dataSetConfig.usePerPointLabelColor,\n      textDirection = chartConfig.textDirection,\n      eventArgs,\n      plotItem,\n      set,\n      val,\n      valueTotal = dataSetConfig.valueTotal,\n      displayValue,\n      setLink,\n      sliced,\n      angle,\n      connectorWidth,\n      shapeArgs,\n      toolText,\n      setConfig,\n      setGraphics,\n      dataLabel,\n      removeDataArr = dataSetComponents.removeDataArr || [],\n      connector,\n      visible = dataSet.getState('visible'),\n      i,\n      // callBackCalled = false,\n      // datasetGraphics = dataSet.graphics,\n      // dataLabelContainer = datasetGraphics.dataLabelContainer,\n      dataLabelContainer = dataSet.getContainer('labelGroup'),\n      plotGroup,\n      isTranspose,\n      setElement,\n      _textAttrs,\n      _textCss,\n      setElAttr,\n      connectorAttr,\n      isnewElem,\n      element,\n      sliceElements,\n      setElCosmetics = {},\n      prevPositions,\n      toolTipController = dataSet.getFromEnv('toolTipController'),\n      showDataLabels = function () {\n        dataLabelContainer.show();\n        dataSet.placeDataLabels(false);\n      },\n      dataLabelStyle = chartConfig.dataLabelStyle;\n\n    if (!dataSet.getContainer('pie-groups')) {\n      dataSet._createContainer();\n    }\n    dataLabelContainer = dataSet.getContainer('label-group');\n    plotGroup = dataSet.getContainer('plot-group');\n\n    animationManager.setAnimation({\n      el: dataLabelContainer,\n      attr: { css: dataLabelStyle },\n      component: dataSet,\n      label: 'labelcontainer',\n      callback: function () {\n        // hide all groups if dataset is not visible.\n        if (!visible || !valueTotal) {\n          dataLabelContainer.hide();\n          plotGroup.hide();\n        } else {\n          dataLabelContainer.show();\n          plotGroup.show();\n        }\n      }\n    });\n\n    // does the initialising tasks and calculations before the actual rendering.\n    dataSet._initPie3dManager();\n    pie3DManager = dataSet.getFromEnv('pie3DManager');\n    // Remove extra plots\n    removeDataArr.length && dataSet.remove();\n\n    positions = dataSetConfig.center;\n    prevPositions = dataSetConfig.prevPositions || positions;\n    pieYScale = dataSetConfig.pieYScale;\n\n    // Spare the world if no data has been sent\n    if (!(plotData && dataLength)) {\n      plotData = [];\n    }\n\n    i = -1;\n    while (++i < dataLength) {\n      set = plotData[i];\n      setConfig = set.config;\n      if (!(_textAttrs = setConfig._textAttrs)) {\n        _textAttrs = setConfig._textAttrs = {};\n      }\n\n      setGraphics = set.graphics;\n      val = setConfig.y;\n      displayValue = setConfig.displayValue;\n      sliced = setConfig.sliced;\n      shapeArgs = setConfig.shapeArgs;\n      angle = setConfig.centerAngle;\n      toolText = setConfig.toolText;\n      setLink = !!setConfig.link;\n      style = setConfig.style;\n\n      if (val === null || val === UNDEF) {\n        // todo: update null data.\n        continue;\n      }\n\n      setElement = setGraphics.element;\n      dataLabel = setGraphics.label;\n      connector = setGraphics.connector;\n      setElAttr = {\n        sAngle: shapeArgs.sAngle,\n        eAngle: shapeArgs.eAngle,\n        r: !isTranspose ? positions[2] : prevPositions[2],\n        innerR: !isTranspose ? positions[3] : prevPositions[3],\n        cx: !isTranspose ? positions[0] : prevPositions[0],\n        cy: !isTranspose ? positions[1] : prevPositions[1],\n        radiusYFactor: pieYScale,\n        opacity: 1\n      };\n      // create the element if not available.\n      if (!setElement) {\n        isnewElem = true;\n        // pick from the pool (maintained by Pie3dManager).\n        setElement = setGraphics.element = pie3DManager.useSliceFromPool();\n        if (!setElement) {\n          setElement = setGraphics.element = pie3DManager.createSlice()\n            .drag(plotDragMove, plotDragStart, plotDragEnd)\n            .on('fc-mouseover', plotRollOver)\n            .on('fc-mouseout', plotRollOut);\n          setElement.on('fc-click', plotClickHandler(dataSet, setElement));\n        }\n      } else {\n        isnewElem = false;\n      }\n      if (displayValue !== UNDEF) {\n        // If data label cosmetics exists.\n        if (style) {\n          if (!(_textCss = setConfig._textCss)) {\n            _textCss = setConfig._textCss = {};\n          }\n          _textCss.fontFamily = style.fontFamily;\n          _textCss.fontSize = style.fontSize;\n          _textCss.lineHeight = style.lineHeight;\n          _textCss.fontWeight = style.fontWeight;\n          _textCss.fontStyle = style.fontStyle;\n        } else if (setConfig._textCss) {\n          /* If there was a perviously applied cosmetics for a data Object, need to restore the chart\n          Label styling to it. */\n          dataLabel && dataLabel.removeCSS();\n          delete setConfig._textCss;\n          _textCss = UNDEF;\n        }\n\n        setConfig.style = (style || (style = dataLabelStyle));\n        _textAttrs.text = displayValue;\n        _textAttrs.fill = (colorLabelFromPoint ? toRaphaelColor(setConfig.color)\n          : style.color) || '#000000';\n        _textAttrs['text-bound'] = [style.backgroundColor, style.borderColor,\n          style.borderThickness, style.borderPadding,\n          style.borderRadius, style.borderDash];\n        _textAttrs.direction = textDirection;\n        _textAttrs.lineHeight = style.lineHeight;\n        if (dataLabelOptions.distance > 0 &&\n                        (connectorWidth = dataLabelOptions.connectorWidth) &&\n                                       dataLabelOptions.enableSmartLabels) {\n          connectorAttr = {\n            'stroke-width': connectorWidth,\n            stroke: dataLabelOptions.connectorColor || '#606060',\n            cursor: setLink ? POINTER : '',\n            opacity: 1\n            // path: 'M 0 0 l 0 0'\n          };\n          dataLabelContainer.show();\n          connector = setGraphics.connector = animationManager.setAnimation({\n            el: setGraphics.connector || 'path',\n            attr: connectorAttr,\n            container: dataLabelContainer,\n            label: 'connector',\n            component: dataSet\n          }).show()\n            .on('fc-dragstart', plotDragStart)\n            .on('fc-dragmove', plotDragMove)\n            .on('fc-dragend', plotDragEnd)\n            .on('fc-mouseover', plotRollOver)\n            .on('fc-mouseout', plotRollOut);\n        }\n      }\n\n      // --when all values of the dataplots are 0--\n      if (!valueTotal) {\n        dataLabel && dataLabel.hide();\n        connector && connector.hide();\n      } else {\n        dataLabel && dataLabel.show();\n        connector && connector.show();\n      }\n\n      plotItem = {\n        chart: chart,\n        index: i,\n        seriesData: dataSetConfig,\n        value: val,\n        angle: (setConfig.angle = angle),\n        link: setConfig.link,\n        shapeArgs: shapeArgs,\n        slicedX: sliced && !dataSetConfig.singletonCase ? mathCos(angle) * slicedOffset : 0,\n        slicedY: sliced && !dataSetConfig.singletonCase ? mathSin(angle) * slicedOffsetY : 0,\n        sliced: sliced,\n        labelText: displayValue,\n        name: setConfig.name,\n        percentage: setConfig.percentage,\n        toolText: toolText,\n        originalIndex: dataLength - i - 1,\n        style: setConfig.style,\n        graphic: setElement,\n        transX: (setConfig.transX = mathCos(angle) * slicedOffset),\n        transY: (setConfig.transY = mathSin(angle) * slicedOffsetY),\n        slicedTranslation: (setConfig.slicedTranslation = 't' + setConfig.transX + ',' +\n                        setConfig.transY),\n        label: dataLabel,\n        connector: connector\n      };\n      eventArgs = {\n        index: dataSetConfig.reversePlotOrder ? dataLength - 1 - i : i,\n        link: setConfig.link,\n        value: setConfig.y,\n        displayValue: setConfig.displayValueArgs,\n        categoryLabel: setConfig.categoryLabel,\n        isSliced: setConfig.sliced,\n        toolText: setConfig.toolText,\n        color: setConfig.setColor,\n        alpha: setConfig.setAlpha,\n        borderColor: setConfig.borderConfig.setPlotBorderColor,\n        borderAlpha: setConfig.borderConfig.setPlotBorderAlpha,\n        dashed: setConfig.setBorderDashed,\n        showLabel: setConfig.showLabel,\n        showValue: setConfig.showValue,\n        labelPosition: setConfig.labelPosition,\n        valuePosition: setConfig.valuePosition,\n        labelFont: setConfig.labelFont,\n        labelFontColor: setConfig.labelFontColor || '#555555',\n        labelLink: setConfig.labellink,\n        hoverColor: setConfig.hoverEffects.hoverColor,\n        hoverAlpha: setConfig.hoverEffects.alpha,\n        borderHoverColor: setConfig.hoverBorderColor,\n        borderHoverAlpha: setConfig.hoverEffects.borderAlpha,\n        id: setConfig.id\n      };\n\n      setElCosmetics = {\n        color: setConfig.color.color.split(',')[0],\n        alpha: setConfig._3dAlpha,\n        borderWidth: setConfig.borderWidth,\n        borderColor: setConfig.borderColor,\n        borderAlpha: setConfig.borderConfig.setPlotBorderAlpha\n      };\n\n      if (isnewElem) {\n        extend2(setElAttr, setElCosmetics);\n      }\n\n      setElement.data(GROUPID, i)\n        .data('plotItem', plotItem)\n        .data(EVENTARGS, eventArgs);\n\n      setElement.data(GROUPID, i)\n        .data('plotItem', plotItem)\n        .data(EVENTARGS, eventArgs);\n\n      setElAttr.cursor = setLink ? POINTER : '';\n      setElAttr.showBorderEffect = showBorderEffect;\n      setElAttr.color = setConfig.color.color.split(',')[0];\n      setElAttr.alpha = setConfig._3dAlpha;\n      setElAttr.borderWidth = setConfig.borderWidth;\n      setElAttr.borderColor = setConfig.borderColor;\n\n      toolTipController.enableToolTip(setElement, toolText);\n      sliceElements = setElement._confObject.elements;\n      for (element in sliceElements) {\n        toolTipController.enableToolTip(sliceElements[element], toolText);\n      }\n      setElAttr.transform = 't' + plotItem.slicedX + ',' + plotItem.slicedY;\n      _textAttrs.plotItem = plotItem;\n      _textAttrs[EVENTARGS] = eventArgs;\n\n      animationManager.setAnimation({\n        el: setElement,\n        attr: setElAttr,\n        component: dataSet,\n        label: 'slice',\n        state: isnewElem ? 'appearing' : 'updating'\n      });\n\n      connector && connector.data('plotItem', plotItem)\n        .data(EVENTARGS, eventArgs);\n    }\n\n    showDataLabels();\n    // Marking dataSet drawn\n    dataSet.drawn = true;\n    // Savinf prev positions\n    dataSetConfig.prevPositions = positions.slice(0);\n  }\n  remove () {\n    var dataSet = this,\n      conf = dataSet.config,\n      components = dataSet.components,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      removeDataArr = components.removeDataArr || [],\n      pool = dataSet.pool = (dataSet.pool = []),\n      len = removeDataArr.length,\n      pie3DManager = this.getFromEnv('pie3DManager'),\n      removeData,\n      ele,\n      graphics,\n      i,\n      elem,\n      hideFunc = function (graphic, type) {\n        return function () {\n          if (type === elementStr) {\n            pie3DManager.removeSlice(graphic.element);\n            delete graphic.element;\n          } else {\n            graphic[type].hide();\n          }\n        };\n      },\n      startAngle = conf.startAngle,\n      positions = conf.center;\n    for (i = 0; i < len; i++) {\n      removeData = removeDataArr[0];\n      graphics = removeData.graphics;\n      for (ele in graphics) {\n        elem = graphics[ele];\n        if (!pool[ele]) {\n          pool[ele] = [];\n        }\n        if (ele === elementStr) {\n          animationManager.setAnimation({\n            el: elem,\n            attr: {\n              sAngle: -startAngle,\n              eAngle: -startAngle + 0.01,\n              r: positions[2],\n              innerR: positions[3],\n              cx: positions[0],\n              cy: positions[1]\n            },\n            component: dataSet,\n            callback: hideFunc(graphics, ele)\n          });\n        } else {\n          animationManager.setAnimation({\n            el: elem,\n            attr: {\n              opacity: 0\n            },\n            component: dataSet,\n            callback: hideFunc(graphics, ele)\n          });\n        }\n      }\n      removeDataArr.splice(0, 1);\n    }\n  }\n  _rotate (stAngle) {\n    var dataSet = this,\n      setAngle = stAngle,\n      dataSetConfig = dataSet.config,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      dataSetComponents = dataSet.components,\n      data = dataSetComponents.data,\n      slicedOffset = dataSetConfig.slicedOffset,\n      slicedOffsetY = dataSetConfig.slicedOffsetY,\n      startingAngle = dataSetConfig.startAngle,\n      pie3DManager = dataSet.getFromEnv('pie3DManager'),\n      angle;\n\n    setAngle = !isNaN(setAngle) ? setAngle : -dataSetConfig._lastAngle;\n\n    angle = (setAngle - startingAngle) % 360;\n\n    dataSetConfig.startAngle = pluckNumber(setAngle,\n      dataSetConfig.startAngle) % 360;\n\n    angle = -(angle * pi) / 180;\n\n    if (pie3DManager) {\n      pie3DManager.rotate(angle);\n    }\n\n    fcEach(data, function (point) {\n      var slicedTranslation = [],\n        pointGraphics = point.graphics,\n        pointConfig = point.config,\n        element = pointGraphics.element,\n        args = pointConfig.shapeArgs,\n        newAngleArgs = {\n          sAngle: (args.sAngle += angle),\n          eAngle: (args.eAngle += angle)\n        },\n        pointAngle = pointConfig.angle = normalizeAngle((newAngleArgs.sAngle + newAngleArgs.eAngle) / 2),\n        sliced = pointConfig.sliced,\n        cosAngle = mathCos(pointAngle),\n        sinAngle = mathSin(pointAngle);\n\n      // set the  slicedTranslation\n      slicedTranslation = pointConfig.slicedTranslation = [\n        mathRound(cosAngle * slicedOffset),\n        mathRound(sinAngle * slicedOffsetY)\n      ];\n\n      pointConfig.transX = slicedTranslation[0];\n      pointConfig.transY = slicedTranslation[1];\n      pointConfig.slicedX = sliced ? mathCos(angle) * slicedOffset : 0;\n      pointConfig.slicedY = sliced ? mathSin(angle) * slicedOffsetY : 0;\n\n      if (element && sliced) {\n        animationManager.setAnimation({\n          el: element,\n          attr: { transform: 't' + slicedTranslation[0] + ',' + slicedTranslation[1] },\n          component: dataSet\n        });\n      }\n    });\n\n    dataSet.placeDataLabels(true, data);\n  }\n  foldingFn () {\n    var conf = this.config,\n      startAngle = conf.startAngle;\n    return {\n      sAngle: -startAngle,\n      eAngle: -startAngle + 0.01\n    };\n  }\n  /**\n   * Returns the type of the component\n   * @return {string} type of component\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Returns the name of the component\n   * @return {string} name of component\n   */\n  getName () {\n    return 'pie3d';\n  }\n}\n\n// **** pie3d manager ***** //\n// set the new animatable properites\nif (Raphael && Raphael._availableAnimAttrs && Raphael._availableAnimAttrs.cx) {\n  // assuming that cx is also numaric type\n  Raphael._availableAnimAttrs.innerR = Raphael._availableAnimAttrs.depth = Raphael._availableAnimAttrs.radiusYFactor =\n          Raphael._availableAnimAttrs.sAngle = Raphael._availableAnimAttrs.eAngle = Raphael._availableAnimAttrs.cx;\n}\n\n// Adding required shapes for chart.\nraphaelShapesLitepath(Raphael);\n\n// Pie 3D point class\nclass Pie3DManager extends ComponentInterface {\n  constructor (chart) {\n    super();\n    var manager = this;\n    manager.config = {};\n    manager.linkedItems = {\n      chart: chart\n    };\n  }\n  /**\n   * Returns the type of the component\n   * @return {string} type of component\n   */\n  getType () {\n    return 'pie3DManager';\n  }\n  /**\n   * Returns the name of the component\n   * @return {string} name of component\n   */\n  getName () {\n    return 'pie3d';\n  }\n  /**\n   * This function create a new 3d slice and return that for futher use\n   * @return {slice} an raphael like composite object that can be used as a slice element\n   * TODO: update slice color depending upon angle\n   * TODO: For proper z-index create 2 back outer element for larger (>180 deg) slices\n   * TODO: Optimize ***** the element creation, instead of outer1, back and from for all elements,\n   * create few extra element per manager, which will act as outer1, back / front (inner / outer wall) for\n   *  slices, who has both. Because, at max 1 slice can have outer1 and only 2 slice can have\n   *   back and front both\n   */\n  createSlice () {\n    let manager = this,\n      renderer = manager.renderer,\n      returnElement,\n      confObject = {\n        elements: {},\n        Pie3DManager: manager\n      },\n      slicingWallsArr = manager.slicingWallsArr,\n      elements = confObject.elements,\n      renderingPath = hasSVG ? 'litepath' : 'path';\n\n    // create elements\n    returnElement = renderer[renderingPath](manager.getContainer('topGroup'));\n    // store the _confObject reference\n    returnElement._confObject = confObject;\n    confObject.thisElement = returnElement;\n\n    // modify few core function\n\n    returnElement._destroy = returnElement.destroy;\n    returnElement.destroy = destroyFN;\n\n    returnElement._show = returnElement.show;\n    returnElement.show = showFN;\n\n    returnElement._hide = returnElement.hide;\n    returnElement.hide = hideFN;\n\n    returnElement._on = returnElement.on;\n    returnElement.on = onFN;\n\n    returnElement._drag = returnElement.drag;\n    returnElement.drag = onDragFN;\n\n    returnElement._attr = returnElement.attr;\n    returnElement.attr = attrFN;\n\n    returnElement._data = returnElement.data;\n    returnElement.data = dataFN;\n\n    // add the element to the store\n    manager.pointElemStore.push(returnElement);\n\n    elements.topBorder = renderer[renderingPath](manager.getContainer('topGroup'));\n    elements.bottom =\n      renderer[renderingPath](manager.getContainer('bottomBorderGroup'))\n        .attr({\n          'stroke-width': 0\n        });\n    elements.bottomBorder = renderer[renderingPath](manager.getContainer('bottomBorderGroup'));\n    elements.frontOuter = renderer[renderingPath](manager.getContainer('slicingWallsFrontGroup'))\n      .attr({\n        'stroke-width': 0\n      });\n    elements.backOuter = renderer[renderingPath](manager.getContainer('slicingWallsFrontGroup'))\n      .attr({\n        'stroke-width': 0\n      });\n    elements.startSlice = renderer[renderingPath](manager.getContainer('slicingWallsFrontGroup'));\n    elements.endSlice = renderer[renderingPath](manager.getContainer('slicingWallsFrontGroup'));\n    elements.frontOuter1 = renderer[renderingPath](manager.getContainer('slicingWallsFrontGroup'))\n      .attr({\n        'stroke-width': 0\n      });\n\n    // update config object for proper z order\n    elements.frontOuter._conf = {\n      si: si,\n      isStart: 0.5\n    };\n    elements.frontOuter1._conf = {\n      si: si,\n      isStart: 0.5\n    };\n    elements.startSlice._conf = {\n      si: si,\n      isStart: 0\n    };\n    elements.endSlice._conf = {\n      si: si,\n      isStart: 1\n    };\n    elements.backOuter._conf = {\n      si: si,\n      isStart: 0.4\n    };\n    slicingWallsArr.push(elements.startSlice, elements.frontOuter1, elements.frontOuter,\n      elements.backOuter, elements.endSlice);\n    if (manager.isDoughnut) {\n      // innerFront\n      elements.frontInner = renderer[renderingPath](manager.getContainer('slicingWallsFrontGroup'))\n        .attr({\n          'stroke-width': 0\n        });\n      elements.backInner = renderer[renderingPath](manager.getContainer('slicingWallsFrontGroup'))\n        .attr({\n          'stroke-width': 0\n        });\n\n      elements.backInner._conf = {\n        si: si,\n        isStart: 0.5\n      };\n\n      elements.frontInner._conf = {\n        si: si,\n        isStart: 0.4\n      };\n      slicingWallsArr.push(elements.frontInner, elements.backInner);\n    }\n\n    si += 1;\n    return returnElement;\n  }\n  refreshDrawing () {\n    let slicingWallsArr = this.slicingWallsArr,\n      x = 0,\n      sWall,\n      ln = slicingWallsArr.length,\n      startIndex,\n      lastElem2,\n      lastElem3,\n      index,\n      frontGroup = this.getContainer('slicingWallsFrontGroup'),\n      backGroup = this.getContainer('slicingWallsBackGroup');\n\n    // sort the slicing walls for z-placing\n    slicingWallsArr.sort(elementZSortFn);\n    // find the index which cross the pi line\n    startIndex = getStartIndex(slicingWallsArr);\n\n    for (; x < ln; x += 1, startIndex += 1) {\n      if (startIndex === ln) {\n        startIndex = 0;\n      }\n      sWall = slicingWallsArr[startIndex];\n      index = sWall._conf.index;\n      if (index < piBy2) {\n        frontGroup.appendChild(sWall);\n      } else if (index <= pi) {\n        if (lastElem2) {\n          sWall.insertBefore(lastElem2);\n        } else {\n          frontGroup.appendChild(sWall);\n        }\n        lastElem2 = sWall;\n      } else if (index <= pi3By2) {\n        if (lastElem3) {\n          sWall.insertBefore(lastElem3);\n        } else {\n          backGroup.appendChild(sWall);\n        }\n        lastElem3 = sWall;\n      } else {\n        backGroup.appendChild(sWall);\n      }\n    }\n  }\n  configure (dpth, hasOnePt, use3DLight, isDghnut) {\n    var manager = this,\n      depth = dpth,\n      hasOnePoint = hasOnePt,\n      use3DLighting = use3DLight,\n      isDoughnut = isDghnut,\n      dataSet = manager.getLinkedParent(),\n      renderer = manager.getFromEnv('paper'),\n      seriesGroup = dataSet.getContainer('plot-group');\n\n    if (isObject(depth)) {\n      depth = depth.depth;\n      hasOnePoint = depth.hasOnePoint;\n      use3DLighting = depth.use3DLighting;\n      isDoughnut = depth.isDoughnut;\n    }\n    // @todo: need to have pie to daughnut transpose\n\n    // add the values to the instance\n    if (!manager.renderer) {\n      manager.renderer = renderer;\n    }\n    manager.hasOnePoint = hasOnePoint;\n    manager.use3DLighting = use3DLighting;\n    manager.isDoughnut = isDoughnut;\n    manager.depth = depth;\n\n    // create required groups\n    // TODO: if required create bottom side group\n    !manager.getContainer('bottomBorderGroup') && manager.addContainer('bottomBorderGroup',\n      renderer.group('bottom-border', seriesGroup));\n\n    // @todo: need to have animate with for dept\n    manager.getContainer('bottomBorderGroup').attr({\n      transform: 't0,' + depth\n    });\n    !manager.getContainer('slicingWallsBackGroup') && manager.addContainer('slicingWallsBackGroup',\n      renderer.group('slicingWalls-back-Side', seriesGroup));\n    !manager.getContainer('slicingWallsFrontGroup') && manager.addContainer('slicingWallsFrontGroup',\n      renderer.group('slicingWalls-front-Side', seriesGroup));\n    !manager.getContainer('topGroup') && manager.addContainer('topGroup', renderer.group('top-Side',\n      seriesGroup));\n\n    // if arrays are not availabel the create the m for first time\n    !manager.pointElemStore && (manager.pointElemStore = []);\n    !manager.slicingWallsArr && (manager.slicingWallsArr = []);\n\n    // few reusable code\n    manager.moveCmdArr = [M];\n    manager.lineCmdArr = [L];\n    manager.closeCmdArr = [Z];\n\n    manager.colorObjs = [];\n  }\n\n  _parseSliceColor (clr, alph, pointConf) {\n    var manager = this,\n      color = clr,\n      alpha = alph,\n      dark1,\n      dark2,\n      // dark3,\n      dark4,\n      dark5,\n      dark6,\n      light1,\n      light2,\n      light3,\n      light4,\n      // light5,\n      light6,\n      alpha1,\n      colorStr1,\n      colorStr2,\n      alphaStr1,\n      alphaStr2,\n      alphaStr3,\n      colorStr3,\n      colorStr4,\n      colorStr5,\n      alphaFactor = 3,\n      lighting3D = manager.use3DLighting,\n      cacheStore = lighting3D ? pie3DCacheColorStore.lighting3D : pie3DCacheColorStore.lighting2D,\n      colorsObj,\n      radiusYFactor = pointConf.radiusYFactor,\n      cx = pointConf.cx,\n      cy = pointConf.cy,\n      rx = pointConf.r,\n      ry = rx * radiusYFactor,\n      innerRx = pointConf.innerR || 0,\n      rightX = cx + rx,\n      leftX = cx - rx,\n      rightInnerX = cx + innerRx,\n      leftInnerX = cx - innerRx;\n    if (~color.indexOf('rgb')) {\n      color = rawRGBtoHEX(color);\n    }\n    alpha = alpha || 100;\n    alpha1 = alpha / 2;\n\n    // check in cacheStore\n    if (cacheStore[color] && cacheStore[color][alpha]) { // if found return the color\n      colorsObj = cacheStore[color][alpha];\n    } else { // create the color components\n      if (!cacheStore[color]) {\n        cacheStore[color] = {};\n      }\n      if (!cacheStore[color][alpha]) {\n        cacheStore[color][alpha] = {};\n      }\n      colorsObj = cacheStore[color][alpha];\n\n      if (lighting3D) {\n        dark1 = getDarkColor(color, 80);\n        dark2 = getDarkColor(color, 75);\n        light1 = getLightColor(color, 85);\n        light2 = getLightColor(color, 70);\n        light3 = getLightColor(color, 40);\n\n        light4 = getLightColor(color, 50);\n        // light5 = getLightColor(color, 30);\n        light6 = getLightColor(color, 65);\n        // dark3 = getDarkColor(color, 85);\n        dark4 = getDarkColor(color, 69);\n        dark5 = getDarkColor(color, 75);\n        dark6 = getDarkColor(color, 95);\n      } else {\n        alphaFactor = 10;\n        dark1 = getDarkColor(color, 90);\n        dark2 = getDarkColor(color, 87);\n        light1 = getLightColor(color, 93);\n        light2 = getLightColor(color, 87);\n        light3 = getLightColor(color, 80);\n\n        light6 = light4 = getLightColor(color, 85);\n        // light5 = getLightColor(color, 80);\n        dark6 = getDarkColor(color, 85);\n        // dark3 = dark6;\n        dark4 = getDarkColor(color, 75);\n        dark5 = getDarkColor(color, 80);\n      }\n      colorStr1 = dark2 + COMMASTRING + light1 + COMMASTRING + light2 +\n                                    COMMASTRING + light1 + COMMASTRING + dark2;\n      alphaStr1 = alpha + COMMASTRING + alpha + COMMASTRING + alpha +\n                                      COMMASTRING + alpha + COMMASTRING + alpha;\n      colorStr2 = dark2 + COMMASTRING + color + COMMASTRING + light1 +\n                                    COMMASTRING + color + COMMASTRING + dark2;\n      alphaStr2 = alpha1 + COMMASTRING + alpha1 + COMMASTRING + alpha1 +\n                                   COMMASTRING + alpha1 + COMMASTRING + alpha1;\n      colorStr3 = dark2 + COMMASTRING + color + COMMASTRING + light3 +\n                                     COMMASTRING + color + COMMASTRING + dark2;\n      colorStr4 = dark5 + COMMASTRING + light1 + COMMASTRING + light4 +\n                                    COMMASTRING + light1 + COMMASTRING + dark4;\n      colorStr5 = 'FFFFFF' + COMMASTRING + 'FFFFFF' + COMMASTRING + 'FFFFFF' +\n                                    COMMASTRING + 'FFFFFF' + COMMASTRING + 'FFFFFF';\n      alphaStr3 = 0 + COMMASTRING + alpha1 / alphaFactor + COMMASTRING + alpha / alphaFactor +\n                                   COMMASTRING + alpha1 / alphaFactor + COMMASTRING + 0;\n\n      if (hasSVG) {\n        colorsObj.top = {\n          FCcolor: {\n            gradientUnits: 'userSpaceOnUse',\n            radialGradient: true,\n            color: light6 + COMMASTRING + dark6,\n            alpha: alpha + COMMASTRING + alpha,\n            ratio: '0,100'\n          }\n        };\n      } else {\n        colorsObj.top = {\n          FCcolor: {\n            gradientUnits: 'objectBoundingBox',\n            color: light2 + COMMASTRING + light2 + COMMASTRING + light1 + COMMASTRING + dark2,\n            alpha: alpha + COMMASTRING + alpha + COMMASTRING + alpha + COMMASTRING + alpha,\n            angle: -72,\n            ratio: '0,8,15,77'\n          }\n        };\n      }\n\n      colorsObj.frontOuter = {\n        FCcolor: {\n          gradientUnits: 'userSpaceOnUse',\n          y1: 0,\n          y2: 0,\n          color: colorStr4,\n          alpha: alphaStr1,\n          angle: 0,\n          ratio: '0,20,15,15,50'\n        }\n      };\n      colorsObj.backOuter = {\n        FCcolor: {\n          gradientUnits: 'userSpaceOnUse',\n          y1: 0,\n          y2: 0,\n          color: colorStr3,\n          alpha: alphaStr2,\n          angle: 0,\n          ratio: '0,62,8,8,22'\n        }\n      };\n      colorsObj.frontInner = {\n        FCcolor: {\n          gradientUnits: 'userSpaceOnUse',\n          y1: 0,\n          y2: 0,\n          color: colorStr2,\n          alpha: alphaStr2,\n          angle: 0,\n          ratio: '0,25,5,5,65'\n        }\n      };\n      colorsObj.backInner = {\n        FCcolor: {\n          gradientUnits: 'userSpaceOnUse',\n          y1: 0,\n          y2: 0,\n          color: colorStr1,\n          alpha: alphaStr1,\n          angle: 0,\n          ratio: '0,62,8,8,22'\n        }\n      };\n      colorsObj.topBorder = {\n        FCcolor: {\n          gradientUnits: 'userSpaceOnUse',\n          y1: 0,\n          y2: 0,\n          color: colorStr5,\n          alpha: alphaStr3,\n          angle: 0,\n          ratio: '0,20,15,15,50'\n        }\n      };\n      colorsObj.topInnerBorder = {\n        FCcolor: {\n          gradientUnits: 'userSpaceOnUse',\n          y1: 0,\n          y2: 0,\n          color: colorStr5,\n          alpha: alphaStr3,\n          angle: 0,\n          ratio: '0,50,15,15,20'\n        }\n      };\n      colorsObj.bottom = toRaphaelColor(convertColor(color, alpha1));\n      /** TODO will be changed w. r. t. angle */\n      colorsObj.startSlice = toRaphaelColor(convertColor(dark1, alpha));\n      colorsObj.endSlice = toRaphaelColor(convertColor(dark1, alpha));\n    }\n\n    // check if non color attributes match, else apply them\n    if (colorsObj.cx !== cx || colorsObj.cy !== cy || colorsObj.rx !== rx ||\n              colorsObj.radiusYFactor !== radiusYFactor || colorsObj.innerRx !== innerRx) {\n      // appaly positional properties in colors\n      if (hasSVG) {\n        colorsObj.top.FCcolor.cx = cx;\n        colorsObj.top.FCcolor.cy = cy;\n        colorsObj.top.FCcolor.r = rx;\n        colorsObj.top.FCcolor.fx = cx - 0.3 * rx;\n        colorsObj.top.FCcolor.fy = cy + ry * 1.2;\n      }\n      colorsObj.topBorder.FCcolor.x1 = colorsObj.backOuter.FCcolor.x1 = colorsObj.frontOuter.FCcolor.x1 =\n                  leftX;\n      colorsObj.topBorder.FCcolor.x2 = colorsObj.backOuter.FCcolor.x2 = colorsObj.frontOuter.FCcolor.x2 =\n                  rightX;\n      colorsObj.topInnerBorder.FCcolor.x1 = colorsObj.backInner.FCcolor.x1 =\n                  colorsObj.frontInner.FCcolor.x1 = leftInnerX;\n      colorsObj.topInnerBorder.FCcolor.x2 = colorsObj.backInner.FCcolor.x2 =\n                  colorsObj.frontInner.FCcolor.x2 = rightInnerX;\n\n      // Set positional attributes in color Object\n      colorsObj.cx = cx;\n      colorsObj.cy = cy;\n      colorsObj.rx = rx;\n      colorsObj.radiusYFactor = radiusYFactor;\n      colorsObj.innerRx = innerRx;\n    }\n\n    return colorsObj;\n  }\n\n  // eslint-disable-next-line\n  allocatePosition () {\n\n  }\n  rotate (angle) {\n    var manager = this,\n      pointElemStore = manager.pointElemStore,\n      x = 0, ln = pointElemStore.length, point, confObject;\n    if (!manager.hasOnePoint) {\n      for (; x < ln; x += 1) {\n        point = pointElemStore[x];\n        confObject = point._confObject;\n        confObject.sAngle += angle;\n        confObject.eAngle += angle;\n        manager._setSliceShape(confObject);\n      }\n      manager.refreshDrawing();\n    }\n  }\n\n  removeSlice (slice) {\n    var manager = this,\n      pointElemStore = manager.pointElemStore,\n      confObject = slice._confObject,\n      elements = confObject.elements,\n      slicingWallsArr = manager.slicingWallsArr,\n      x,\n      ln = pointElemStore.length,\n      point,\n      wallElement;\n    // remove the slice from the point store\n    for (x = ln - 1; x >= 0; x -= 1) {\n      point = pointElemStore[x];\n      if (point === slice) {\n        pointElemStore.splice(x, 1);\n      }\n    }\n    // remove the side elements from the side wall arr\n    ln = slicingWallsArr.length;\n    for (x = ln - 1; x >= 0; x -= 1) {\n      wallElement = slicingWallsArr[x];\n      if (wallElement === elements.startSlice || wallElement === elements.frontOuter1 ||\n                  wallElement === elements.frontOuter || wallElement === elements.backInner ||\n                  wallElement === elements.endSlice) {\n        slicingWallsArr.splice(x, 1);\n      }\n    }\n\n    // hide corrosponding elements\n    slice.hide && slice.hide();\n\n    // store the element in pool for future reuse\n    if (!manager._slicePool) {\n      manager._slicePool = [];\n    }\n    manager._slicePool.push(slice);\n\n    manager.refreshDrawing();\n  }\n  useSliceFromPool () {\n    var manager = this,\n      slicePool = manager._slicePool || (manager._slicePool = []),\n      slicingWallsArr = manager.slicingWallsArr,\n      newSlice = false,\n      elements;\n    if (slicePool.length) {\n      newSlice = slicePool.shift();\n      // restore the element in point store\n      manager.pointElemStore.push(newSlice);\n      // show the slice\n      newSlice.show();\n      // push the side walls in to the side wall array\n      elements = newSlice._confObject.elements;\n      slicingWallsArr.push(elements.startSlice, elements.frontOuter1, elements.frontOuter);\n\n      elements.backInner && slicingWallsArr.push(elements.backInner);\n      slicingWallsArr.push(elements.endSlice);\n    }\n    return newSlice;\n  }\n  // This function do the z-index management\n\n  // @todo: needs to be optimize\n  _setSliceShape (pointConf, doNotApply) {\n    var pie3DManager = this,\n      getArcPath = function (startX, startY, endX, endY, rX, rY, isClockWise, isLargeArc) {\n        return (startX === endX && startY === endY) ? [] : [A, rX, rY, 0, isLargeArc, isClockWise, endX, endY];\n      },\n      startOri = pointConf.sAngle, endOri = pointConf.eAngle,\n      start = normalizeAngle(startOri),\n      end = normalizeAngle(endOri),\n      scaleAngle,\n      startCos, startSin, endCos, endSin, startOuterX, startOuterY,\n      startOuterTopClipX, startOuterTopClipY, endOuterTopClipX, endOuterTopClipY,\n      startInnerX, startInnerY, endInnerX, endInnerY, startInnerY1, endInnerY1,\n      borderThickness = 1,\n      isDoughnut = pie3DManager.isDoughnut,\n      radiusYFactor = pointConf.radiusYFactor,\n      cx = pointConf.cx,\n      cy = pointConf.cy,\n      rx = pointConf.r,\n      ry = rx * radiusYFactor,\n      topCliprx = rx + (hasSVG ? -borderThickness : 2),\n      topClipry = ry + (hasSVG ? -borderThickness : 2),\n      innerRx = pointConf.innerR || 0,\n      innerRy = innerRx * radiusYFactor,\n      depth = pie3DManager.depth,\n      depthY = depth + cy,\n      rightX = cx + rx,\n      leftX = cx - rx,\n      rightInnerX = cx + innerRx,\n      leftInnerX = cx - innerRx,\n      topY = cy - ry,\n      bottomY = depthY + ry,\n      clipPathforNoClip = [M, leftInnerX, topY, L, leftInnerX, bottomY, Z],\n      elements = pointConf.elements,\n      startOuterY1, endOuterX, endOuterY, endOuterY1,\n      tempArr1, tempArr2, tempArr3, tempArr4, tempArr5, tempArr6,\n      moveCmdArr,\n      lineCmdArr,\n      closeCmdArr,\n      centerPoint,\n      leftPoint,\n      topPoint,\n      rightPoint,\n      bottomPoint,\n      leftDepthPoint,\n      rightDepthPoint,\n      leftInnerPoint,\n      rightInnerPoint,\n      leftInnerDepthPoint,\n      rightInnerDepthPoint,\n      pathAttrString = PATH_STR,\n      middleAngle = (start + end) / 2, // not applicable for the slices that are crossing the 0deg\n      frontOuterIndex,\n      BackOuterIndex,\n      crossed2Pi = start > end;\n\n    startCos = mathCos(start);\n    startSin = mathSin(start);\n    endCos = mathCos(end);\n    endSin = mathSin(end);\n\n    startOuterX = cx + (rx * startCos);\n    startOuterY = cy + (ry * startSin);\n    startOuterTopClipX = cx + (topCliprx * startCos);\n    startOuterTopClipY = cy + (topClipry * startSin);\n    startOuterY1 = startOuterY + depth;\n    endOuterX = cx + (rx * endCos);\n    endOuterY = cy + (ry * endSin);\n    endOuterTopClipX = cx + (topCliprx * endCos);\n    endOuterTopClipY = cy + (topClipry * endSin);\n    endOuterY1 = endOuterY + depth;\n\n    if (isDoughnut) { // doughnut like slice\n      startInnerX = cx + (innerRx * startCos);\n      startInnerY = cy + (innerRy * startSin);\n      startInnerY1 = startInnerY + depth;\n      endInnerX = cx + (innerRx * endCos);\n      endInnerY = cy + (innerRy * endSin);\n      endInnerY1 = endInnerY + depth;\n      pointConf.startSlice = [M, startOuterX, startOuterY, L, startOuterX, startOuterY1, startInnerX,\n        startInnerY1, startInnerX, startInnerY, Z];\n      pointConf.endSlice = [M, endOuterX, endOuterY, L, endOuterX, endOuterY1, endInnerX, endInnerY1,\n        endInnerX, endInnerY, Z];\n    } else {\n      pointConf.startSlice = [M, startOuterX, startOuterY, L, startOuterX, startOuterY1, cx, depthY, cx,\n        cy, Z];\n      pointConf.endSlice = [M, endOuterX, endOuterY, L, endOuterX, endOuterY1, cx, depthY, cx, cy, Z];\n    }\n\n    if (hasSVG) {\n      scaleAngle = getAbsScaleAngle(start, end);\n      // create the clip for top and bottom\n      if (!isDoughnut) {\n        pointConf.clipTopPath = [[M, startOuterX, startOuterY,\n          A, rx, ry, 0, (scaleAngle > pi ? 1 : 0), 1, endOuterX, endOuterY,\n          L, cx, cy,\n          Z]];\n      } else {\n        pointConf.clipTopPath = [[M, startOuterX, startOuterY, A, rx, ry, 0, (scaleAngle > pi ? 1 : 0),\n          1, endOuterX, endOuterY, L, endInnerX, endInnerY, A, innerRx, innerRy,\n          0, (scaleAngle > pi ? 1 : 0), 0, startInnerX, startInnerY, Z]];\n      }\n\n      pointConf.clipOuterFrontPath1 = [clipPathforNoClip];\n\n      pointConf.clipTopBorderPath = [[M, startOuterTopClipX, startOuterTopClipY, A, topCliprx, topClipry,\n        0, (scaleAngle > pi ? 1 : 0), 1, endOuterTopClipX, endOuterTopClipY,\n        L, endOuterX, endOuterY, endOuterX, endOuterY + borderThickness, A,\n        rx, ry, 0, (scaleAngle > pi ? 1 : 0), 0, startOuterX, startOuterY +\n                                             borderThickness, L, startOuterX, startOuterY, Z]];\n\n      if (startOri !== endOri) {\n        if (start > end) { // crossed the 0 deg line\n          if (start < pi) { // crossed the 180 deg line also\n            pointConf.clipOuterFrontPath = [[M, rightX, cy,\n              A, rx, ry, 0, 0, 1, endOuterX, endOuterY,\n              V, depth,\n              A, rx, ry, 0, 0, 0, rightX, cy + depth,\n              Z]];\n            pointConf.clipOuterFrontPath1 = [[M, leftX, cy,\n              A, rx, ry, 0, 0, 0, startOuterX, startOuterY,\n              V, depth,\n              A, rx, ry, 0, 0, 1, leftX, cy + depth,\n              Z]];\n            pointConf.clipOuterBackPath = [[M, rightX, cy,\n              A, rx, ry, 0, 1, 0, leftX, cy,\n              V, depth,\n              A, rx, ry, 0, 1, 1, rightX, cy + depth,\n              Z]];\n            if (isDoughnut) {\n              pointConf.clipInnerBackPath = [[M, rightInnerX, cy,\n                A, innerRx, innerRy, 0, 1, 0, leftInnerX, cy,\n                V, depth,\n                A, innerRx, innerRy, 0, 1, 1, rightInnerX, cy +\n                                                             depth, Z]];\n\n              pointConf.clipInnerFrontPath = [[M, rightInnerX, cy,\n                A, innerRx, innerRy, 0, 0, 1, endInnerX, endInnerY,\n                V, depth,\n                A, innerRx, innerRy, 0, 0, 0, rightInnerX, cy +\n                                                              depth, Z,\n                M, leftInnerX, cy,\n                A, innerRx, innerRy, 0, 0, 0, startInnerX,\n                startInnerY, V, depth,\n                A, innerRx, innerRy, 0, 0, 1, leftInnerX, cy +\n                                                              depth, Z]];\n            }\n          } else if (end > pi) { // crossed the 180 deg line also\n            pointConf.clipOuterFrontPath = [[M, rightX, cy,\n              A, rx, ry, 0, 1, 1, leftX, cy,\n              V, depth,\n              A, rx, ry, 0, 1, 0, rightX, cy + depth,\n              Z]];\n            pointConf.clipOuterBackPath = [[M, leftX, cy,\n              A, rx, ry, 0, 0, 1, endOuterX, endOuterY,\n              V, depth,\n              A, rx, ry, 0, 0, 0, leftX, cy + depth,\n              Z,\n              M, rightX, cy,\n              A, rx, ry, 0, 0, 0, startOuterX, startOuterY,\n              V, depth,\n              A, rx, ry, 0, 0, 1, rightX, cy + depth,\n              Z]];\n            if (isDoughnut) {\n              pointConf.clipInnerFrontPath = [[M, rightInnerX, cy,\n                A, innerRx, innerRy, 0, 1, 1, leftInnerX, cy,\n                V, depth,\n                A, innerRx, innerRy, 0, 1, 0, rightInnerX, cy +\n                                                              depth, Z]];\n\n              pointConf.clipInnerBackPath = [[M, leftInnerX, cy,\n                A, innerRx, innerRy, 0, 0, 1, endInnerX, endInnerY,\n                V, depth,\n                A, innerRx, innerRy, 0, 0, 0, leftInnerX, cy +\n                                                             depth, Z,\n                M, rightInnerX, cy,\n                A, innerRx, innerRy, 0, 0, 0, startInnerX,\n                startInnerY, V, depth,\n                A, innerRx, innerRy, 0, 0, 1, rightInnerX, cy +\n                                                             depth, Z]];\n            }\n          } else {\n            pointConf.clipOuterFrontPath = [[M, rightX, cy,\n              A, rx, ry, 0, 0, 1, endOuterX, endOuterY,\n              V, depth,\n              A, rx, ry, 0, 0, 0, rightX, cy + depth,\n              Z]];\n            pointConf.clipOuterBackPath = [[M, startOuterX, startOuterY,\n              A, rx, ry, 0, 0, 1, rightX, cy,\n              V, depth,\n              A, rx, ry, 0, 0, 0, startOuterX, startOuterY1,\n              Z]];\n            if (isDoughnut) {\n              pointConf.clipInnerFrontPath = [[M, rightInnerX, cy,\n                A, innerRx, innerRy, 0, 0, 1, endInnerX, endInnerY,\n                V, depth,\n                A, innerRx, innerRy, 0, 0, 0, rightInnerX, cy +\n                                                              depth, Z]];\n\n              pointConf.clipInnerBackPath = [[M, startInnerX, startInnerY,\n                A, innerRx, innerRy, 0, 0, 1, rightInnerX, cy,\n                V, depth,\n                A, innerRx, innerRy, 0, 0, 0, startInnerX,\n                startInnerY1, Z]];\n            }\n          }\n        } else if (start < pi) {\n          if (end > pi) { // crossed the 180 deg line only\n            pointConf.clipOuterFrontPath = [[M, startOuterX, startOuterY,\n              A, rx, ry, 0, 0, 1, leftX, cy,\n              V, depth,\n              A, rx, ry, 0, 0, 0, startOuterX, startOuterY1,\n              Z]];\n            pointConf.clipOuterBackPath = [[M, leftX, cy,\n              A, rx, ry, 0, 0, 1, endOuterX, endOuterY,\n              V, depth,\n              A, rx, ry, 0, 0, 0, leftX, cy + depth,\n              Z]];\n            if (isDoughnut) {\n              pointConf.clipInnerFrontPath = [[M, startInnerX, startInnerY,\n                A, innerRx, innerRy, 0, 0, 1, leftInnerX,\n                cy, V, depth,\n                A, innerRx, innerRy, 0, 0, 0, startInnerX,\n                startInnerY1, Z]];\n              pointConf.clipInnerBackPath = [[M, leftInnerX, cy,\n                A, innerRx, innerRy, 0, 0, 1, endInnerX,\n                endInnerY, V, depth,\n                A, innerRx, innerRy, 0, 0, 0, leftInnerX,\n                cy + depth, Z]];\n            }\n          } else { // haven't crossed any thing\n            pointConf.clipOuterFrontPath = [[M, startOuterX, startOuterY,\n              A, rx, ry, 0, 0, 1, endOuterX, endOuterY,\n              V, depth,\n              A, rx, ry, 0, 0, 0, startOuterX, startOuterY1,\n              Z]];\n            pointConf.clipOuterBackPath = [clipPathforNoClip];\n\n            if (isDoughnut) {\n              pointConf.clipInnerFrontPath = [[M, startInnerX, startInnerY,\n                A, innerRx, innerRy, 0, 0, 1, endInnerX, endInnerY,\n                V, depth,\n                A, innerRx, innerRy, 0, 0, 0, startInnerX,\n                startInnerY1, Z]];\n\n              pointConf.clipInnerBackPath = [clipPathforNoClip];\n            }\n          }\n        } else { // haven't crossed any thing\n          pointConf.clipOuterFrontPath = [clipPathforNoClip];\n          pointConf.clipOuterBackPath = [[M, startOuterX, startOuterY,\n            A, rx, ry, 0, 0, 1, endOuterX, endOuterY,\n            V, depth,\n            A, rx, ry, 0, 0, 0, startOuterX, startOuterY1,\n            Z]];\n          if (isDoughnut) {\n            pointConf.clipInnerFrontPath = [clipPathforNoClip];\n\n            pointConf.clipInnerBackPath = [[M, startInnerX, startInnerY,\n              A, innerRx, innerRy, 0, 0, 1, endInnerX, endInnerY,\n              V, depth,\n              A, innerRx, innerRy, 0, 0, 0, startInnerX, startInnerY1,\n              Z]];\n          }\n        }\n      } else { // zero Pie\n        pointConf.clipOuterFrontPath = pointConf.clipOuterBackPath = pointConf.clipInnerBackPath =\n                  pointConf.clipInnerFrontPath = [clipPathforNoClip];\n      }\n\n      pathAttrString = LITEPATH_STR;\n      pointConf.clipBottomBorderPath = pointConf.clipTopPath;\n      pointConf.startSlice = [pointConf.startSlice];\n      pointConf.endSlice = [pointConf.endSlice];\n    } else { // for VML\n      moveCmdArr = pie3DManager.moveCmdArr;\n      lineCmdArr = pie3DManager.lineCmdArr;\n      closeCmdArr = pie3DManager.closeCmdArr;\n      centerPoint = [cx, cy];\n      leftPoint = [leftX, cy];\n      topPoint = [cx, topY];\n      rightPoint = [rightX, cy];\n      bottomPoint = [cx, cy + ry];\n      leftDepthPoint = [leftX, depthY];\n      rightDepthPoint = [rightX, depthY];\n      leftInnerPoint = [leftInnerX, cy];\n      rightInnerPoint = [rightInnerX, cy];\n      leftInnerDepthPoint = [leftInnerX, depthY];\n      rightInnerDepthPoint = [rightInnerX, depthY];\n      pointConf.clipOuterFrontPath1 = [];\n      if (startOri !== endOri) {\n        if (start > end) { // crossed the 0 deg line\n          if (start < pi) { // crossed the 180 deg line also\n            tempArr1 = getArcPath(startOuterX, startOuterY, leftX, cy, rx, ry, 1, 0);\n            tempArr3 = getArcPath(leftX, cy, rightX, cy, rx, ry, 1, 0);\n            tempArr5 = getArcPath(rightX, cy, endOuterX, endOuterY, rx, ry, 1, 0);\n            pointConf.clipOuterBackPath = moveCmdArr.concat(leftPoint, tempArr3, lineCmdArr,\n              rightDepthPoint, getArcPath(rightX, depthY, leftX, depthY, rx, ry, 0, 0), closeCmdArr);\n            pointConf.clipOuterFrontPath1 = moveCmdArr.concat([startOuterX, startOuterY], tempArr1, lineCmdArr,\n              leftDepthPoint, getArcPath(leftX, depthY, startOuterX, startOuterY1, rx, ry, 0, 0), closeCmdArr);\n            pointConf.clipOuterFrontPath = moveCmdArr.concat(rightPoint, tempArr5, lineCmdArr, [endOuterX, endOuterY1],\n              getArcPath(endOuterX, endOuterY1, rightX, depthY, rx, ry, 0, 0), closeCmdArr);\n            pointConf.clipTopBorderPath = moveCmdArr.concat([startOuterX, startOuterY], tempArr1,\n              tempArr3, tempArr5);\n            if (isDoughnut) {\n              tempArr2 = getArcPath(endInnerX, endInnerY, rightInnerX, cy, innerRx, innerRy, 0, 0);\n              tempArr4 = getArcPath(rightInnerX, cy, leftInnerX, cy, innerRx, innerRy, 0, 0);\n              tempArr6 = getArcPath(leftInnerX, cy, startInnerX, startInnerY, innerRx, innerRy, 0, 0);\n              pointConf.clipInnerBackPath = moveCmdArr.concat(rightInnerPoint, tempArr4, lineCmdArr, leftInnerDepthPoint,\n                getArcPath(leftInnerX, depthY, rightInnerX, depthY, innerRx, innerRy, 1, 0), closeCmdArr);\n              pointConf.clipInnerFrontPath = moveCmdArr.concat(leftInnerPoint, tempArr6,\n                lineCmdArr, [startInnerX, startInnerY1], getArcPath(startInnerX,\n                  startInnerY1, leftInnerX, depthY, innerRx, innerRy, 1, 0), closeCmdArr,\n                moveCmdArr, [endInnerX, endInnerY], tempArr2, lineCmdArr, rightInnerDepthPoint,\n                getArcPath(rightInnerX, depthY, endInnerX, endInnerY1, innerRx, innerRy, 1, 0), closeCmdArr);\n              pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, [endInnerX,\n                endInnerY], tempArr2, tempArr4, tempArr6, closeCmdArr);\n              pointConf.clipTopBorderPath = pointConf.clipTopBorderPath.concat(moveCmdArr,\n                [endInnerX, endInnerY], tempArr2, tempArr4, tempArr6);\n            } else {\n              pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, centerPoint,\n                closeCmdArr);\n            }\n          } else if (end > pi) { // crossed the 180 deg line also\n            tempArr1 = getArcPath(startOuterX, startOuterY, rightX, cy, rx, ry, 1, 0);\n            tempArr3 = getArcPath(rightX, cy, leftX, cy, rx, ry, 1, 0);\n            tempArr5 = getArcPath(leftX, cy, endOuterX, endOuterY, rx, ry, 1, 0);\n            pointConf.clipOuterFrontPath = moveCmdArr.concat(rightPoint, tempArr3, lineCmdArr,\n              leftDepthPoint, getArcPath(leftX, depthY, rightX, depthY, rx, ry, 0, 0), closeCmdArr);\n            pointConf.clipOuterBackPath = moveCmdArr.concat([startOuterX, startOuterY], tempArr1,\n              lineCmdArr, rightDepthPoint, getArcPath(rightX, depthY, startOuterX,\n                startOuterY1, rx, ry, 0, 0), closeCmdArr, moveCmdArr, leftPoint,\n              tempArr5, lineCmdArr, [endOuterX, endOuterY1], getArcPath(endOuterX,\n                endOuterY1, leftX, depthY, rx, ry, 0, 0), closeCmdArr);\n            pointConf.clipTopBorderPath = moveCmdArr.concat([startOuterX, startOuterY], tempArr1,\n              tempArr3, tempArr5);\n            if (isDoughnut) {\n              tempArr2 = getArcPath(endInnerX, endInnerY, leftInnerX, cy, innerRx, innerRy, 0, 0);\n              tempArr4 = getArcPath(leftInnerX, cy, rightInnerX, cy, innerRx, innerRy, 0, 0);\n              tempArr6 = getArcPath(rightInnerX, cy, startInnerX, startInnerY, innerRx, innerRy, 0, 0);\n              pointConf.clipInnerFrontPath = moveCmdArr.concat(leftInnerPoint, tempArr4, lineCmdArr, rightInnerDepthPoint,\n                getArcPath(rightInnerX, depthY, leftInnerX, depthY, innerRx, innerRy, 1, 0), closeCmdArr);\n              pointConf.clipInnerBackPath = moveCmdArr.concat(rightInnerPoint, tempArr6,\n                lineCmdArr, [startInnerX, startInnerY1], getArcPath(startInnerX,\n                  startInnerY1, rightInnerX, depthY, innerRx, innerRy, 1, 0),\n                closeCmdArr, moveCmdArr, [endInnerX, endInnerY], tempArr2, lineCmdArr,\n                leftInnerDepthPoint, getArcPath(leftInnerX, depthY,\n                  endInnerX, endInnerY1, innerRx, innerRy, 1, 0), closeCmdArr);\n\n              pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, [endInnerX,\n                endInnerY], tempArr2, tempArr4, tempArr6, closeCmdArr);\n              pointConf.clipTopBorderPath = pointConf.clipTopBorderPath.concat(moveCmdArr,\n                [endInnerX, endInnerY], tempArr2, tempArr4, tempArr6);\n            } else {\n              pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, centerPoint,\n                closeCmdArr);\n            }\n          } else {\n            tempArr1 = getArcPath(startOuterX, startOuterY, rightX, cy, rx, ry, 1, 0);\n            tempArr3 = getArcPath(rightX, cy, endOuterX, endOuterY, rx, ry, 1, 0);\n            pointConf.clipOuterFrontPath = moveCmdArr.concat(rightPoint, tempArr3, lineCmdArr, [endOuterX, endOuterY1],\n              getArcPath(endOuterX, endOuterY1, rightX, depthY, rx, ry, 0, 0), closeCmdArr);\n            pointConf.clipOuterBackPath = moveCmdArr.concat([startOuterX, startOuterY], tempArr1,\n              lineCmdArr, rightDepthPoint, getArcPath(rightX, depthY,\n                startOuterX, startOuterY1, rx, ry, 0, 0), closeCmdArr);\n            pointConf.clipTopBorderPath = moveCmdArr.concat([startOuterX, startOuterY], tempArr1,\n              tempArr3);\n            if (isDoughnut) {\n              tempArr2 = getArcPath(endInnerX, endInnerY, rightInnerX, cy, innerRx, innerRy, 0, 0);\n              tempArr4 = getArcPath(rightInnerX, cy, startInnerX, startInnerY, innerRx, innerRy, 0, 0);\n              pointConf.clipInnerFrontPath = moveCmdArr.concat([endInnerX, endInnerY], tempArr2, lineCmdArr,\n                rightInnerDepthPoint, getArcPath(rightInnerX, depthY, endInnerX, endInnerY1,\n                  innerRx, innerRy, 1, 0), closeCmdArr);\n              pointConf.clipInnerBackPath = moveCmdArr.concat(rightInnerPoint, tempArr4, lineCmdArr,\n                [startInnerX, startInnerY1],\n                getArcPath(startInnerX, startInnerY1, rightInnerX, depthY, innerRx, innerRy, 1, 0),\n                closeCmdArr);\n              pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, [endInnerX,\n                endInnerY], tempArr2, tempArr4, closeCmdArr);\n              pointConf.clipTopBorderPath = pointConf.clipTopBorderPath.concat(moveCmdArr,\n                [endInnerX, endInnerY], tempArr2, tempArr4);\n            } else {\n              pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, centerPoint,\n                closeCmdArr);\n            }\n          }\n        } else if (start < pi) {\n          if (end > pi) { // crossed the 180 deg line only\n            tempArr1 = getArcPath(startOuterX, startOuterY, leftX, cy, rx, ry, 1, 0);\n            tempArr3 = getArcPath(leftX, cy, endOuterX, endOuterY, rx, ry, 1, 0);\n            pointConf.clipOuterBackPath = moveCmdArr.concat(leftPoint, tempArr3, lineCmdArr, [endOuterX, endOuterY1],\n              getArcPath(endOuterX, endOuterY1, leftX, depthY, rx, ry, 0, 0), closeCmdArr);\n            pointConf.clipOuterFrontPath = moveCmdArr.concat([startOuterX, startOuterY], tempArr1, lineCmdArr,\n              leftDepthPoint, getArcPath(leftX, depthY, startOuterX, startOuterY1, rx, ry, 0, 0), closeCmdArr);\n            pointConf.clipTopBorderPath = moveCmdArr.concat([startOuterX, startOuterY], tempArr1,\n              tempArr3);\n            if (isDoughnut) {\n              tempArr2 = getArcPath(endInnerX, endInnerY, leftInnerX, cy, innerRx, innerRy, 0, 0);\n              tempArr4 = getArcPath(leftInnerX, cy, startInnerX, startInnerY, innerRx, innerRy, 0, 0);\n              pointConf.clipInnerBackPath = moveCmdArr.concat([endInnerX, endInnerY], tempArr2,\n                lineCmdArr, leftInnerDepthPoint,\n                getArcPath(leftInnerX, depthY, endInnerX, endInnerY1, innerRx,\n                  innerRy, 1, 0), closeCmdArr);\n              pointConf.clipInnerFrontPath = moveCmdArr.concat(leftInnerPoint, tempArr4,\n                lineCmdArr, [startInnerX, startInnerY1], getArcPath(startInnerX,\n                  startInnerY1, leftInnerX, depthY, innerRx, innerRy, 1, 0),\n                closeCmdArr);\n              pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, [endInnerX,\n                endInnerY], tempArr2, tempArr4, closeCmdArr);\n              pointConf.clipTopBorderPath = pointConf.clipTopBorderPath.concat(moveCmdArr,\n                [endInnerX, endInnerY], tempArr2, tempArr4);\n            } else {\n              pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, centerPoint,\n                closeCmdArr);\n            }\n          } else { // haven't crossed any thing\n            tempArr1 = getArcPath(startOuterX, startOuterY, endOuterX, endOuterY, rx, ry, 1, 0);\n            pointConf.clipOuterBackPath = moveCmdArr.concat([startOuterX, startOuterY]);\n            pointConf.clipTopBorderPath = pointConf.clipOuterBackPath.concat(tempArr1);\n            pointConf.clipOuterFrontPath = pointConf.clipTopBorderPath.concat(lineCmdArr,\n              [endOuterX, endOuterY1], getArcPath(endOuterX,\n                endOuterY1, startOuterX, startOuterY1, rx, ry, 0, 0), closeCmdArr);\n            if (isDoughnut) {\n              tempArr2 = getArcPath(endInnerX, endInnerY, startInnerX, startInnerY, innerRx, innerRy, 0, 0);\n              pointConf.clipInnerBackPath = moveCmdArr.concat([endInnerX, endInnerY]);\n              pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, [endInnerX,\n                endInnerY], tempArr2, closeCmdArr);\n              pointConf.clipTopBorderPath = pointConf.clipTopBorderPath.concat(moveCmdArr,\n                [endInnerX, endInnerY], tempArr2);\n              pointConf.clipInnerFrontPath = pointConf.clipInnerBackPath.concat(tempArr2,\n                lineCmdArr, [startInnerX, startInnerY1], getArcPath(startInnerX,\n                  startInnerY1, endInnerX, endInnerY1, innerRx, innerRy, 1, 0), closeCmdArr);\n            } else {\n              pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, centerPoint,\n                closeCmdArr);\n            }\n          }\n        } else { // haven't crossed any thing\n          tempArr1 = getArcPath(startOuterX, startOuterY, endOuterX, endOuterY, rx, ry, 1, 0);\n          pointConf.clipOuterFrontPath = moveCmdArr.concat([startOuterX, startOuterY]);\n          pointConf.clipTopBorderPath = pointConf.clipOuterFrontPath.concat(tempArr1);\n          pointConf.clipOuterBackPath = pointConf.clipTopBorderPath.concat(lineCmdArr,\n            [endOuterX, endOuterY1], getArcPath(endOuterX, endOuterY1, startOuterX,\n              startOuterY1, rx, ry, 0, 0), closeCmdArr);\n          if (isDoughnut) {\n            tempArr2 = getArcPath(endInnerX, endInnerY, startInnerX, startInnerY, innerRx, innerRy, 0, 0);\n            pointConf.clipInnerFrontPath = moveCmdArr.concat([endInnerX, endInnerY]);\n            pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, [endInnerX,\n              endInnerY], tempArr2, closeCmdArr);\n            pointConf.clipTopBorderPath = pointConf.clipTopBorderPath.concat(\n              pointConf.clipInnerFrontPath, tempArr2);\n            pointConf.clipInnerBackPath = pointConf.clipInnerFrontPath.concat(tempArr2,\n              lineCmdArr, [startInnerX, startInnerY1], getArcPath(startInnerX,\n                startInnerY1, endInnerX, endInnerY1, innerRx, innerRy, 1, 0), closeCmdArr);\n          } else {\n            pointConf.clipTopPath = pointConf.clipTopBorderPath.concat(lineCmdArr, centerPoint,\n              closeCmdArr);\n          }\n        }\n        // enlarge the bounded box so that the gradient works perfactly\n        tempArr1 = moveCmdArr.concat(leftPoint, lineCmdArr, rightPoint);\n        tempArr2 = moveCmdArr.concat(topPoint, lineCmdArr, bottomPoint);\n        pointConf.clipTopPath = pointConf.clipTopPath.concat(tempArr1, tempArr2);\n        pointConf.clipOuterFrontPath = pointConf.clipOuterFrontPath.concat(tempArr1);\n        pointConf.clipOuterFrontPath1 = pointConf.clipOuterFrontPath1.concat(tempArr1);\n        pointConf.clipOuterBackPath = pointConf.clipOuterBackPath.concat(tempArr1);\n\n        if (isDoughnut) {\n          tempArr2 = moveCmdArr.concat(leftInnerPoint, lineCmdArr, rightInnerPoint);\n          pointConf.clipInnerFrontPath = pointConf.clipInnerFrontPath.concat(tempArr2);\n          pointConf.clipInnerBackPath = pointConf.clipInnerBackPath.concat(tempArr2);\n        }\n      } else { // zero Pie\n        pointConf.clipTopPath =\n                  pointConf.clipOuterFrontPath =\n                  pointConf.clipOuterBackPath = [];\n        if (isDoughnut) {\n          pointConf.clipInnerFrontPath =\n                      pointConf.clipInnerBackPath = [];\n        }\n      }\n\n      pointConf.clipBottomBorderPath = pointConf.clipTopBorderPath;\n    }\n\n    // now apply the changes\n    if (!doNotApply) {\n      elements.startSlice._conf.index = start;\n      elements.endSlice._conf.index = end;\n      elements.backOuter._conf.index = BackOuterIndex =\n               (crossed2Pi && (start <= pi3By2 || end > pi3By2)) ||\n               (start <= pi3By2 && end > pi3By2) ? pi3By2 : (start > pi ? start : end);\n\n      elements.frontOuter._conf.index = frontOuterIndex = end <= piBy2 ? end : ((start > end ||\n                  start <= piBy2) ? piBy2 : start);\n      elements.frontOuter1._conf.index = start;\n      elements.frontOuter1._conf.cIndex = pi;\n      if (start > end) {\n        elements.backOuter._conf.cIndex = start < pi3By2 ? pi3By2 : pi2;\n        elements.startSlice._conf.cIndex = start < pi ? (start + pi) / 2 : (start + pi2) / 2;\n        elements.endSlice._conf.cIndex = elements.frontOuter._conf.cIndex = 0;\n      } else {\n        elements.backOuter._conf.cIndex = elements.startSlice._conf.cIndex =\n                  elements.endSlice._conf.cIndex = elements.frontOuter._conf.cIndex = middleAngle;\n      }\n\n      if (scaleAngle > pi) {\n        elements.frontOuter1.show().attr(\n          pathAttrString, pointConf.clipOuterFrontPath1\n        );\n      } else {\n        elements.frontOuter1.hide();\n      }\n      pointConf.thisElement._attr(\n        pathAttrString, pointConf.clipTopPath\n      );\n      elements.bottom.attr(\n        pathAttrString, pointConf.clipTopPath\n      );\n      elements.bottomBorder.attr(\n        pathAttrString, pointConf.clipBottomBorderPath\n      );\n\n      elements.topBorder && elements.topBorder.attr(\n        pathAttrString, pointConf.clipTopBorderPath\n      );\n      elements.frontOuter.attr(\n        pathAttrString, pointConf.clipOuterFrontPath\n      );\n      elements.backOuter.attr(\n        pathAttrString, pointConf.clipOuterBackPath\n      );\n\n      if (isDoughnut) {\n        elements.backInner.attr(\n          pathAttrString, pointConf.clipInnerBackPath\n        );\n        elements.frontInner.attr(\n          pathAttrString, pointConf.clipInnerFrontPath\n        );\n        elements.backInner._conf.index = BackOuterIndex;\n        elements.frontInner._conf.index = frontOuterIndex;\n        if (start > end) {\n          elements.backInner._conf.cIndex = pi2;\n          elements.frontInner._conf.cIndex = 0;\n        } else {\n          elements.backInner._conf.cIndex =\n                       elements.frontInner._conf.cIndex = middleAngle;\n        }\n      }\n\n      if (pie3DManager.hasOnePoint) {\n        elements.startSlice.hide();\n        elements.endSlice.hide();\n      } else {\n        elements.startSlice.attr(\n          pathAttrString, pointConf.startSlice\n        ).show();\n        elements.endSlice.attr(\n          pathAttrString, pointConf.endSlice\n        ).show();\n      }\n    }\n  }\n\n  _setSliceCosmetics (pointConf) {\n    var manager = this,\n      topElement = pointConf.thisElement,\n      showBorderEffect = pointConf.showBorderEffect,\n      elements = pointConf.elements,\n      colorObj,\n      borderColor = convertColor(pointConf.borderColor, pluckNumber(pointConf.borderAlpha,\n        pointConf.alpha)),\n      borderWidth = pointConf.borderWidth,\n      topAttrObj;\n    if (!pointConf.color) {\n      return;\n    }\n    // in case of hover, color is color object, have property color containing values\n    pointConf.color = pointConf.color.color ? pointConf.color.color : pointConf.color;\n    colorObj = manager._parseSliceColor(pointConf.color, pointConf.alpha, pointConf);\n    if (hasSVG) {\n      topAttrObj = { fill: toRaphaelColor(colorObj.top), 'stroke-width': 0 };\n\n      if (showBorderEffect) {\n        elements.topBorder.show().attr({\n          fill: toRaphaelColor(colorObj.topBorder),\n          'stroke-width': 0\n        });\n      } else {\n        elements.topBorder.hide();\n        topAttrObj.stroke = borderColor;\n        topAttrObj['stroke-width'] = borderWidth;\n      }\n\n      // top\n      topElement._attr(topAttrObj);\n    } else {\n      topElement._attr({\n        fill: toRaphaelColor(colorObj.top),\n        'stroke-width': 0\n      });\n      // top border\n      elements.topBorder.attr({\n        stroke: borderColor,\n        'stroke-width': borderWidth\n      });\n    }\n\n    // bottom\n    elements.bottom.attr({\n      fill: toRaphaelColor(colorObj.bottom)\n    });\n\n    // bottom\n    elements.bottomBorder.attr({\n      stroke: borderColor,\n      'stroke-width': borderWidth\n    });\n\n    elements.frontOuter.attr({\n      fill: toRaphaelColor(colorObj.frontOuter)\n    });\n    elements.frontOuter1.attr({\n      fill: toRaphaelColor(colorObj.frontOuter)\n    });\n\n    // outerback\n    elements.backOuter.attr({\n      fill: toRaphaelColor(colorObj.backOuter)\n    });\n\n    // startSlice\n    // whenAtBack\n    elements.startSlice.attr({\n      fill: toRaphaelColor(colorObj.startSlice),\n      stroke: borderColor,\n      'stroke-width': borderWidth\n    });\n\n    // endSlice\n    // whenAtBack\n    elements.endSlice.attr({\n      fill: toRaphaelColor(colorObj.endSlice),\n      stroke: borderColor,\n      'stroke-width': borderWidth\n    });\n    if (manager.isDoughnut) {\n      // innerFront\n      elements.frontInner.attr({\n        fill: toRaphaelColor(colorObj.frontInner)\n      });\n\n      elements.backInner.attr({\n        fill: toRaphaelColor(colorObj.backInner)\n      });\n    }\n  }\n}\nexport default Pie3DDataset;\n","import Pie2DDataset from '../pie2d';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport { hasSVG, pluckNumber, pluck } from '@fusioncharts/core/src/lib';\nimport doughnut2dAnimation from './index.animation';\nlet COMMASTRING = ',',\n  FIFTY_PERCENT = '50%',\n  _getInnerSize = function () {\n    var innerradius,\n      dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      dataSetConfig = dataSet.config,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      doughnutRadius = dataSetConfig.doughnutradius,\n      use3DLighting = pluckNumber(chartAttr.use3dlighting, 1),\n      radius3D = use3DLighting ? pluckNumber(chartAttr.radius3d, chartAttr['3dradius'], 50) : 100,\n      innerpercentR,\n      diff50Percent,\n      radius3Dpercent,\n      pointConfig,\n      poin2nd,\n      ratioStr,\n      x,\n      point,\n      data,\n      length,\n      pieMinRadius = dataSetConfig.pieMinRadius;\n    if (radius3D > 100) {\n      radius3D = 100;\n    }\n    if (radius3D < 0) {\n      radius3D = 0;\n    }\n    /*\n     * Decide inner radius\n     */\n    if (/%/.test(doughnutRadius)) {\n      doughnutRadius = Number(doughnutRadius.split('%')[0]) / 100;\n      innerradius = pieMinRadius * doughnutRadius;\n    } else if (doughnutRadius <= 0 || doughnutRadius >= pieMinRadius) {\n      innerradius = pieMinRadius / 2;\n    } else {\n      innerradius = pluckNumber(doughnutRadius);\n    }\n\n    dataSetConfig.innerRadius = innerradius;\n    // hcJSON.plotOptions.pie3d.innerSize = hcJSON.plotOptions.pie.innerSize = 2 * innerradius;\n\n    /*\n      * Create doughnut type 3d lighting\n      */\n    if (radius3D > 0 && hasSVG) { // Radial gradient is not supported in VML\n      innerpercentR = parseInt(innerradius / pieMinRadius * 100, 10);\n      diff50Percent = (100 - innerpercentR) / 2;\n      radius3Dpercent = parseInt(diff50Percent * radius3D / 100, 10);\n      poin2nd = 2 * (diff50Percent - radius3Dpercent);\n      ratioStr = innerpercentR + COMMASTRING + radius3Dpercent + COMMASTRING + poin2nd + COMMASTRING +\n                    radius3Dpercent;\n      // Loop for all points\n      if (dataSet && (data = dataSet.components.data)) {\n        for (x = 0, length = data.length; x < length; x += 1) {\n          point = data[x];\n          pointConfig = point.config;\n          if (pointConfig.color) {\n            pointConfig.color.ratio = ratioStr;\n            if (pointConfig.hoverEffects && pointConfig.hoverEffects.color) {\n              pointConfig.hoverEffects.color.ratio = ratioStr;\n            }\n          }\n        }\n      }\n    }\n    return innerradius * 2;\n  };\naddDep({\n  name: 'doughnut2dAnimation',\n  type: 'animationRule',\n  extension: doughnut2dAnimation\n});\nclass Doughnut2DDataset extends Pie2DDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'doughnut2D';\n  }\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    let dataset = this,\n      conf = dataset.config,\n      chartConfig = dataset.getFromEnv('chartConfig');\n    conf.doughnutradius = pluck(chartConfig.doughnutradius, conf.doughnutradius, '50%');\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.doughnutradius = FIFTY_PERCENT;\n  }\n  _parsePiePlotOptions () {\n    var dataSet = this,\n      piePlotOptions = super._parsePiePlotOptions();\n\n    piePlotOptions.innerSize = dataSet._getInnerSize();\n    return piePlotOptions;\n  }\n  _getInnerSize () {\n    return _getInnerSize.call(this);\n  }\n\n  allocatePosition () {\n    this.config.innerSize = this._getInnerSize();\n    super.allocatePosition();\n  }\n}\nexport { _getInnerSize };\nexport default Doughnut2DDataset;\n","import pie2dAnimation from '../pie2d/index.animation';\n\nexport default {\n  'initial.dataset.doughnut2D': pie2dAnimation['initial.dataset.pie2D']\n};\n","export default {\n  'initial.dataset.pie3d': function () {\n    return {\n      'group.appearing': (inputJSON) => {\n        let component = inputJSON.component,\n          chartConfig = component.getFromEnv('chartConfig');\n        if (inputJSON.attr.name === 'plots') {\n          return [{\n            initialAttr: {\n              opacity: '0'\n            },\n            finalAttr: {\n              opacity: '1'\n            },\n            slot: chartConfig.alphaanimation ? 'plot' : 'initial'\n          }];\n        }\n        return [{\n          initialAttr: {\n            opacity: '1'\n          },\n          finalAttr: {\n            opacity: '1'\n          },\n          slot: 'final'\n        }];\n      },\n      'slice.appearing': inputJSON => {\n        let component = inputJSON.component,\n          chart = component.getFromEnv('chart'),\n          chartConfig = chart.config,\n          dsConfig = component.config,\n          attr = inputJSON.attr;\n\n        if (!chartConfig.alphaanimation) {\n          if (!dsConfig.animateClockWise) {\n            return [{\n              initialAttr: {\n                sAngle: 2 * Math.PI,\n                eAngle: 2 * Math.PI,\n                transform: ''\n              },\n              finalAttr: {\n                sAngle: attr.sAngle,\n                eAngle: attr.eAngle,\n                transform: ''\n              },\n              slot: 'plot',\n              startEnd: {\n                start: 0,\n                end: 0.75\n              }\n            }, {\n              finalAttr: {\n                transform: attr.transform\n              },\n              slot: 'plot',\n              startEnd: {\n                start: 0.75,\n                end: 1\n              }\n            }];\n          }\n          return [{\n            initialAttr: {\n              sAngle: 0,\n              eAngle: 0,\n              transform: ''\n            },\n            finalAttr: {\n              sAngle: attr.sAngle,\n              eAngle: attr.eAngle,\n              transform: ''\n            },\n            slot: 'plot',\n            startEnd: {\n              start: 0,\n              end: 0.75\n            }\n          }, {\n            finalAttr: {\n              transform: attr.transform\n            },\n            slot: 'plot',\n            startEnd: {\n              start: 0.75,\n              end: 1\n            }\n          }];\n        }\n        return [{\n          initialAttr: {\n            opacity: '1'\n          },\n          slot: 'plot'\n        }];\n      },\n      'label.updating': [{\n        initialAttr: {\n          opacity: '1'\n        },\n        finalAttr: {\n          opacity: '1'\n        },\n        slot: 'final'\n      }],\n      'label.appearing': [{\n        initialAttr: {\n          opacity: '0'\n        },\n        finalAttr: {\n          opacity: '1'\n        },\n        slot: 'final'\n      }],\n      'connector.updating': (inputJSON) => {\n        return [{\n          initialAttr: {\n            path: inputJSON.el.attr('path') || inputJSON.attr.path,\n            opacity: inputJSON.el.attr('opacity')\n          },\n          finalAttr: {\n            path: inputJSON.attr.path\n          },\n          slot: 'final'\n        }];\n      },\n      'connector.appearing': (inputJSON) => {\n        let initialAttr;\n        if (typeof inputJSON.el === 'string') {\n          initialAttr = {opacity: '0'};\n        } else {\n          initialAttr = {\n            path: inputJSON.attr.path,\n            opacity: '0'\n          };\n        }\n        return [{\n          initialAttr: initialAttr,\n          slot: 'final'\n        }];\n      },\n      'connector-sliced.updating': (inputJSON) => {\n        return [{\n          initialAttr: {\n            path: inputJSON.el.attr('path')\n          },\n          finalAttr: {\n            path: inputJSON.attr.path\n          },\n          slot: 'plot'\n        }];\n      },\n      'label-sliced.updating': (inputJSON) => {\n        return [{\n          initialAttr: {\n            x: inputJSON.el.attr('x'),\n            y: inputJSON.el.attr('y')\n          },\n          slot: 'plot'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","import Doughnut2d from '@fusioncharts/charts/src/chart/doughnut2d';\nexport default Doughnut2d;\n","import Pie2D from '../pie2d';\nimport Doughnut2DDataset from '../../dataset/doughnut2d';\n// import CenterLabel from '../components/centerlabel';\nimport { pluck } from '@fusioncharts/core/src/lib';\n\nconst DOUGHNUT_CHART = 'Doughnut Chart',\n  DOUGHNUT_STR = 'Doughnut2D';\nclass Doughnut2D extends Pie2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Doughnut2D';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Doughnut2D';\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    let iapi = this,\n      conf = iapi.config,\n      chartAttrs = iapi.getFromEnv('chart-attrib');\n      // dataset = iapi.getChildren('dataset')[0],\n      // centerLabel;\n    conf.doughnutradius = pluck(chartAttrs.doughnutradius, '50%');\n    // if (!(centerLabel = iapi.getChildren('centerLabel'))) {\n    //   centerLabel = iapi.attachChild(new CenterLabel(), 'centerLabel', false);\n    //   iapi.addToEnv('centerLabel', centerLabel);\n    //   centerLabel.setLinkedItem('dataset', dataset);\n    // }\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = DOUGHNUT_CHART;\n    config.defaultDatasetType = DOUGHNUT_STR;\n    config.singletonPlaceValue = false;\n  }\n  getDSdef () {\n    return Doughnut2DDataset;\n  }\n}\nexport default Doughnut2D;\n","import Doughnut3d from '@fusioncharts/charts/src/chart/doughnut3d';\nexport default Doughnut3d;\n","import Pie3D from '../pie3d';\nimport Doughnut3DDataset from '../../dataset/doughnut3d';\nconst DOUGHTNUT3D_CHART = '3D Doughnut Chart',\n  DOUGHNUT_STR = 'Doughnut3D';\nclass Doughnut3D extends Pie3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Doughnut3D';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Doughnut3D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = DOUGHTNUT3D_CHART;\n    config.defaultDatasetType = DOUGHNUT_STR;\n    config.singletonPlaceValue = false;\n  }\n  getDSdef () {\n    return Doughnut3DDataset;\n  }\n}\nexport default Doughnut3D;\n","import Pie3DDataset from '../pie3d';\nimport doughnut3dAnimation from './index.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport { pluck } from '@fusioncharts/core/src/lib';\nconst FIFTY_PERCENT = '50%';\n\naddDep({\n  name: 'doughnut3dAnimation',\n  type: 'animationRule',\n  extension: doughnut3dAnimation\n});\nclass Doughnut3DDataset extends Pie3DDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'doughnut3D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.doughnutradius = FIFTY_PERCENT;\n  }\n  _configurePie3DManager () {\n    var dataSet = this,\n      dataSetConfig = dataSet.config,\n      dataSetComponents = dataSet.components,\n      pie3DManager = dataSet.getFromEnv('pie3DManager'),\n      data = dataSetComponents.data;\n\n    if (pie3DManager) {\n      pie3DManager.configure(dataSetConfig.pieSliceDepth, data.length === 1, dataSetConfig.use3DLighting,\n        true);\n    }\n  }\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    let dataset = this,\n      conf = dataset.config,\n      chartConfig = dataset.getFromEnv('chartConfig');\n    conf.doughnutradius = pluck(chartConfig.doughnutradius, conf.doughnutradius, FIFTY_PERCENT);\n  }\n}\nexport default Doughnut3DDataset;\n","import pie3danimation from '../pie3d/index.animation';\nexport default {\n  'initial.dataset.doughnut3D': pie3danimation['initial.dataset.pie3d']\n};\n","import Pareto2d from '@fusioncharts/charts/src/chart/pareto2d';\nexport default Pareto2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSDyBaseCartesian from '../_internal/msdybasecartesian';\nimport { ParetoColumnDataset } from '../../dataset/pareto';\nimport { ParetoLineDataset } from '../../dataset/paretoline';\nimport axisFactory from '../../factories/pareto-axis';\nimport { preDefStr } from '@fusioncharts/core/src/lib';\nimport datasetFactory from '../../factories/pareto-dataset';\n\nlet NINETYSTRING = preDefStr.NINETYSTRING,\n  COLUMN_STR = 'column';\n/**\n * Set categories to Axis\n */\nfunction _setCategories () {\n  var iapi = this,\n    dataObj = iapi.getFromEnv('dataSource'),\n    dataset = dataObj.dataset,\n    numberFormatter = iapi.getFromEnv('number-formatter'),\n    xAxis = iapi.getChildren('xAxis'),\n    data = dataObj.data || (dataset && dataset[0].data) || [],\n    catArr = [],\n    datum,\n    dataLen = data.length,\n    i,\n    vLine = {};\n\n  // iterate all data and remove null and vlines\n  for (i = dataLen - 1; i >= 0; i--) {\n    datum = data[i];\n    if (datum.vline === 'true' || datum.vline === '1' || datum.vline === 1 ||\n                datum.vline === true) {\n      vLine[i] = datum;\n      data.splice(i, 1);\n    } else if (numberFormatter.getCleanValue(datum.value, true) === null) {\n      data.splice(i, 1);\n    }\n  }\n\n  // Sort the original data\n  data.sort(function (a, b) {\n    return numberFormatter.getCleanValue(b.value, true) - numberFormatter.getCleanValue(a.value, true);\n  });\n\n  // clone the sorted data for categories\n  catArr = data.slice();\n  // add the v lines\n  for (i in vLine) {\n    catArr.splice(i, 0, vLine[i]);\n  }\n  xAxis[0].setTickValues(catArr);\n}\n\n/**\n * Creates class for  Pareto2D\n */\nclass Pareto2D extends MSDyBaseCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Pareto2D';\n  }\n  /**\n   * Constructor function for class Pareto2D\n   */\n  constructor () {\n    super();\n    this.isPercentage = true;\n    this.registerFactory('axis', axisFactory, ['canvas']);\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Pareto2D';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.singleseries = true;\n    config.hasLegend = false;\n    config.defaultDatasetType = COLUMN_STR;\n    config.plotfillalpha = NINETYSTRING;\n    config.enablemousetracking = true;\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  _setCategories () {\n    _setCategories.call(this);\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let jsonData = this.getFromEnv('dataSource'),\n      data = jsonData.data;\n    if (!data || !data.length) {\n      return true;\n    }\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param {string} name Name of dataset class\n   * @return {Class}       Pareto dataset\n   */\n  getDSdef (name) {\n    return name === 'column' ? ParetoColumnDataset : ParetoLineDataset;\n  }\n  /**\n   * Overrides parent fn\n   */\n  getDSGroupdef () {\n    // this fn overrides\n  }\n}\nexport default Pareto2D;\nexport { _setCategories };\n","import { extend2, pluck, pluckNumber, toRaphaelColor, getValidValue, convertColor, getLightColor,\n  getColumnColor, parseUnsafeString, parseTooltext, getDashStyle,\n  getDefinedColor, hashify } from '@fusioncharts/core/src/lib';\nimport ColumnDataset, { PATTERN_TYPES } from '../column';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport paretoAnimation from './index.animation';\n\nlet PLOTBORDERCOLOR = 'plotBorderColor',\n  PLOTGRADIENTCOLOR = 'plotGradientColor',\n  SHOWSHADOW = 'showShadow',\n  UNDEF,\n  math = Math,\n  mathMin = math.min,\n  mathMax = math.max,\n  mathAbs = math.abs,\n  HUNDREDSTRING = '100';\n\naddDep({\n  name: 'paretoAnimation',\n  type: 'animationRule',\n  extension: paretoAnimation\n});\nclass ParetoColumnDataset extends ColumnDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'paretoColumn';\n  }\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      xAxis = dataSet.getFromEnv('xAxis'),\n      JSONData = conf.JSONData,\n      setDataArr = JSONData.data,\n      setDataLen = setDataArr && setDataArr.length,\n      len = setDataLen,\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      colorM = dataSet.getFromEnv('color-manager'),\n      index = dataSet.index || dataSet.positionIndex,\n      showplotborder,\n      plotColor = colorM.getPlotColor(index),\n      plotBorderDash = pluckNumber(JSONData.dashed, chartAttr.plotborderdashed),\n      chartConfig = chart.config,\n      usePlotGradientColor = chartConfig.useplotgradientcolor,\n      showTooltip = pluckNumber(chartAttr.showtooltip, 1),\n      yAxisName = parseUnsafeString(chartAttr.yaxisname),\n      xAxisName = parseUnsafeString(chartAttr.xaxisname),\n      formatedVal,\n      parserConfig,\n      setTooltext,\n      macroIndices,\n      tempPlotfillAngle,\n      toolText,\n      plotDashLen,\n      plotDashGap,\n      plotBorderThickness,\n      isRoundEdges,\n      showHoverEffect,\n      plotfillAngle,\n      plotFillAlpha,\n      plotFillRatio,\n      plotgradientcolor,\n      plotBorderAlpha,\n      plotBorderColor,\n      plotBorderDashStyle,\n      initailPlotBorderDashStyle,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      colorArr,\n      dataStore = dataSet.components.data,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      setDisplayValue,\n      is3D = chartConfig.is3D,\n      hoverColor,\n      hoverAlpha,\n      hoverGradientColor,\n      hoverRatio,\n      hoverAngle,\n      hoverBorderColor,\n      hoverBorderAlpha,\n      hoverBorderThickness,\n      hoverBorderDashed,\n      hoverBorderDashGap,\n      hoverBorderDashLen,\n      hoverDashStyle,\n      hoverColorArr,\n      enableAnimation,\n      setDataDashed,\n      setDataPlotDashLen,\n      setDataPlotDashGap,\n      i,\n      maxValue = -Infinity,\n      minValue = +Infinity,\n      displayValue,\n      displayValuePercent,\n      sumValue = 0,\n      value,\n      catObj,\n      cleanArr = [],\n      cumulativeSumValue = 0,\n      useDataPlotColorForLabels,\n      tooltipSepChar = conf.tootipSepChar = pluck(chartAttr.tooltipsepchar, ', ');\n\n    conf.minAbsNonZeroValue = Infinity;\n    conf.minAbsNonZeroData = {};\n\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    conf.enableAnimation = enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.valuePadding = pluckNumber(chartAttr.valuepadding, 2);\n    conf.rotateValues = pluckNumber(chartAttr.rotatevalues) ? 270 : 0;\n\n    conf.usePattern = pluckNumber(chartConfig.usePattern, 0);\n    conf.patternType = PATTERN_TYPES.includes(JSONData.patterntype)\n      ? JSONData.patterntype\n      : chartConfig.patternType;\n    conf.patternDensity = pluckNumber(JSONData.patterndensity, chartConfig.patternDensity);\n    conf.patternAlpha = pluckNumber(JSONData.patternalpha, chartConfig.patternAlpha);\n    conf.patternBgColor = pluck(JSONData.patternbgcolor, conf.patternBgColor);\n\n    conf.showHoverEffect = showHoverEffect = pluckNumber(chartAttr.plothovereffect,\n      chartAttr.showhovereffect, UNDEF);\n    conf.usePattern && (conf.showHoverEffect = showHoverEffect = 0);\n    conf.showShadow = (isRoundEdges || is3D) ? pluckNumber(chartAttr.showshadow, 1)\n      : pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.useDataPlotColorForLabels = useDataPlotColorForLabels =\n                pluckNumber(chartAttr.usedataplotcolorforlabels, 0);\n    conf.use3dlineshift = pluckNumber(chartAttr.use3dlineshift, chart.use3dlineshift);\n\n    showplotborder = conf.showplotborder = pluckNumber(chartAttr.showplotborder, is3D ? 0 : 1);\n    conf.plotDashLen = plotDashLen = pluckNumber(chartAttr.plotborderdashlen, 5);\n    conf.plotDashGap = plotDashGap = pluckNumber(chartAttr.plotborderdashgap, 4);\n    conf.plotfillangle = plotfillAngle = pluckNumber(360 - chartAttr.plotfillangle, 90);\n    conf.plotfillalpha = plotFillAlpha = pluck(chartAttr.plotfillalpha, HUNDREDSTRING);\n    conf.plotColor = plotColor;\n    conf.isRoundEdges = isRoundEdges = pluckNumber(chartAttr.useroundedges, 0);\n    conf.plotRadius = pluckNumber(chartAttr.useRoundEdges, conf.isRoundEdges ? 1 : 0);\n    conf.plotfillratio = plotFillRatio = pluck(chartAttr.plotfillratio);\n    conf.plotgradientcolor = plotgradientcolor = getDefinedColor(chartAttr.plotgradientcolor,\n      colorM.getColor(PLOTGRADIENTCOLOR));\n    !usePlotGradientColor && (plotgradientcolor = '');\n    conf.plotborderalpha = plotBorderAlpha =\n                  (showplotborder && !is3D) ? pluck(chartAttr.plotborderalpha,\n                    plotFillAlpha, HUNDREDSTRING) : 0;\n    conf.plotbordercolor = plotBorderColor = pluck(chartAttr.plotbordercolor,\n      is3D ? '#ffffff' : colorM.getColor(PLOTBORDERCOLOR));\n    conf.plotborderthickness = plotBorderThickness = pluckNumber(chartAttr.plotborderthickness, 1);\n    conf.plotBorderDashStyle = initailPlotBorderDashStyle = plotBorderDash\n      ? getDashStyle(plotDashLen, plotDashGap) : 'none';\n    conf.showValues = pluckNumber(chartAttr.showvalues, 1);\n    conf.definedGroupPadding = mathMax(pluckNumber(chartAttr.plotspacepercent), 0);\n    conf.plotSpacePercent = mathMax(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0);\n    conf.maxcolwidth = pluckNumber(chartAttr.maxcolwidth, 50);\n    conf.plotpaddingpercent = pluckNumber(chartAttr.plotpaddingpercent);\n    conf.placevaluesinside = pluckNumber(chartAttr.placevaluesinside, 0);\n    conf.use3dlighting = pluckNumber(chartAttr.use3dlighting, 1);\n    conf.parentYAxis = 0;\n\n    dataSet.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n    dataSet.setState('dirty', true);\n\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n    // Get the sum value and create the clean Array of value\n    for (i = 0; i < len; i++) {\n      value = mathAbs(numberFormatter.getCleanValue(setDataArr[i].value));\n      sumValue += value;\n      cleanArr[i] = extend2({}, setDataArr[i]);\n      cleanArr[i].value = value;\n    }\n    // Sort the clean Array of values\n    cleanArr.sort(function (a, b) {\n      return b.value - a.value;\n    });\n\n    conf.imageCount = 0;\n    // Parsing the attributes and values at set level.\n    for (i = 0; i < len; i++) {\n      setData = cleanArr[i];\n      dataObj = dataStore[i];\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n      setValue = mathAbs(numberFormatter.getCleanValue(setData.value));\n      if (setValue === null) {\n        continue;\n      }\n      config = dataObj && dataObj.config;\n      catObj = xAxis.getLabel(i);\n      config.label = getValidValue(parseUnsafeString(pluck(catObj.label)));\n      config.showValue = pluckNumber(setData.showvalue, conf.showValues);\n      config.setValue = setValue;\n      config.setLink = pluck(setData.link);\n      config.setDisplayValue = setDisplayValue = parseUnsafeString(setData.displayvalue);\n      cumulativeSumValue += config.setValue;\n      displayValue = numberFormatter.dataLabels(setValue);\n      // parsing the id property in config\n      config.id = setData.id ? getValidValue(parseUnsafeString(pluck(setData.id))) : config.label;\n\n      config.valuePadding = pluckNumber(setData.valuepadding, JSONData.valuepadding, chartConfig.valuepadding);\n\n      config.patternType = PATTERN_TYPES.includes(setData.patterntype)\n        ? setData.patterntype\n        : conf.patternType;\n      config.patternAngle = pluckNumber(setData.patternangle, JSONData.patternangle,\n        chartAttr.patternangle, config.patternType === PATTERN_TYPES[0] ? 40 : 0);\n      config.patternDensity = pluckNumber(setData.patterndensity, conf.patternDensity);\n      config.patternSize = pluckNumber(setData.patternsize, JSONData.patternsize,\n        config.patternType === PATTERN_TYPES[0] ? 2 : 4);\n      config.patternAlpha = pluckNumber(setData.patternalpha, conf.patternAlpha);\n      config.patternBgColor = pluck(setData.patternbgcolor, conf.patternBgColor);\n\n      config.dataLabelStyle = dataSet._configureDataLabelStyle(setData);\n      config.shadow = {\n        opacity: conf.showShadow ? plotFillAlpha / 100 : 0\n      };\n\n      setDataDashed = pluckNumber(setData.dashed);\n      setDataPlotDashLen = pluckNumber(setData.dashlen, plotDashLen);\n      setDataPlotDashGap = plotDashGap = pluckNumber(setData.dashgap, plotDashGap);\n\n      config.plotBorderDashStyle = plotBorderDashStyle = setDataDashed === 1\n        ? getDashStyle(setDataPlotDashLen, setDataPlotDashGap)\n        : (setDataDashed === 0 ? 'none' : initailPlotBorderDashStyle);\n      plotColor = colorM.getPlotColor(i);\n      plotColor = pluck(setData.color, plotColor);\n      plotFillRatio = pluck(setData.ratio, conf.plotfillratio);\n      plotFillAlpha = pluck(setData.alpha, conf.plotfillalpha);\n\n      plotBorderAlpha = pluck(setData.alpha, conf.plotborderalpha);\n      // Setting the angle for plot fill for negative data\n      if (setValue < 0 && !isRoundEdges) {\n        tempPlotfillAngle = plotfillAngle;\n        plotfillAngle = 360 - plotfillAngle;\n      }\n\n      // Setting the color Array to be applied to the bar/column.\n      config.colorArr = colorArr = getColumnColor(\n        plotColor + ',' + plotgradientcolor,\n        plotFillAlpha,\n        plotFillRatio,\n        plotfillAngle,\n        isRoundEdges,\n        plotBorderColor,\n        plotBorderAlpha.toString(),\n        0,\n        (!!is3D)\n      );\n      if (showHoverEffect !== 0) {\n        hoverColor = pluck(setData.hovercolor, chartAttr.plotfillhovercolor,\n          chartAttr.columnhovercolor, plotColor);\n        hoverAlpha = pluck(setData.hoveralpha,\n          chartAttr.plotfillhoveralpha, chartAttr.columnhoveralpha, plotFillAlpha);\n        hoverGradientColor = pluck(setData.hovergradientcolor, chartAttr.plothovergradientcolor,\n          plotgradientcolor);\n        !hoverGradientColor && (hoverGradientColor = '');\n        hoverRatio = pluck(setData.hoverratio, chartAttr.plothoverratio, plotFillRatio);\n        hoverAngle = pluckNumber(360 - setData.hoverangle,\n          360 - JSONData.hoverangle, 360 - chartAttr.plothoverangle, plotfillAngle);\n        hoverBorderColor = pluck(setData.borderhovercolor, chartAttr.plotborderhovercolor,\n          plotBorderColor);\n        hoverBorderAlpha = pluck(setData.borderhoveralpha, JSONData.borderhoveralpha,\n          chartAttr.plotborderhoveralpha, chartAttr.plotfillhoveralpha, plotBorderAlpha,\n          plotFillAlpha);\n        hoverBorderThickness = pluckNumber(setData.borderhoverthickness,\n          JSONData.borderhoverthickness, chartAttr.plotborderhoverthickness, plotBorderThickness);\n        hoverBorderDashed = pluckNumber(setData.borderhoverdashed, chartAttr.plotborderhoverdashed);\n        hoverBorderDashGap = pluckNumber(setData.borderhoverdashgap,\n          chartAttr.plotborderhoverdashgap, plotDashLen);\n        hoverBorderDashLen = pluckNumber(setData.borderhoverdashlen,\n          chartAttr.plotborderhoverdashlen, plotDashGap);\n        hoverDashStyle = hoverBorderDashed\n          ? getDashStyle(hoverBorderDashLen, hoverBorderDashGap)\n          : plotBorderDashStyle;\n\n        /* If no hover effects are explicitly defined and\n                       * showHoverEffect is not 0 then hoverColor is set.\n                       */\n        if (showHoverEffect === 1 && hoverColor === plotColor) {\n          hoverColor = getLightColor(hoverColor, 70);\n        }\n\n        // setting the hover color array which is always applied except\n        // when showHoverEffect is not 0.\n        hoverColorArr = getColumnColor(\n          hoverColor + ',' + hoverGradientColor,\n          hoverAlpha,\n          hoverRatio,\n          hoverAngle,\n          isRoundEdges,\n          hoverBorderColor,\n          hoverBorderAlpha.toString(), 0,\n          (!!is3D)\n        );\n\n        config.setRolloutAttr = {\n          fill: !is3D ? toRaphaelColor(colorArr[0])\n            : [toRaphaelColor(colorArr[0]), !conf.use3dlighting],\n          stroke: showplotborder && toRaphaelColor(colorArr[1]),\n          'stroke-width': plotBorderThickness,\n          'stroke-dasharray': plotBorderDashStyle\n        };\n        config.setRolloverAttr = {\n          fill: !is3D ? toRaphaelColor(hoverColorArr[0])\n            : [toRaphaelColor(hoverColorArr[0]), !conf.use3dlighting],\n          stroke: showplotborder && toRaphaelColor(hoverColorArr[1]),\n          'stroke-width': hoverBorderThickness,\n          'stroke-dasharray': hoverDashStyle\n        };\n      }\n\n      useDataPlotColorForLabels && xAxis.updateTicksValues(i, {\n        labelfontcolor: convertColor(plotColor)\n      });\n      config.originalPlotColor = hashify(plotColor);\n      config.displayValue = pluck(setDisplayValue, displayValue);\n      setTooltext = config.setTooltext = config.origToolText =\n                      getValidValue(parseUnsafeString(pluck(setData.tooltext, chartAttr.plottooltext), false));\n      config.toolTipValue = numberFormatter.dataLabels(setValue, conf.parentYAxis);\n      config._x = i;\n      config._y = setValue;\n\n      formatedVal = config.toolTipValue;\n      maxValue = mathMax(maxValue, setValue);\n      minValue = mathMin(minValue, setValue);\n      if (setValue !== 0 && conf.minAbsNonZeroValue > Math.abs(setValue)) {\n        conf.minAbsNonZeroValue = Math.abs(setValue);\n        conf.minAbsNonZeroData = config;\n      }\n      // Parsing tooltext against various configurations provided by the user.\n      if (!showTooltip) {\n        toolText = false;\n      } else {\n        if (!conf.showTooltip) {\n          toolText = false;\n        } else if (setTooltext !== UNDEF) {\n          parserConfig = {\n            formattedValue: formatedVal,\n            label: config.label,\n            yaxisName: yAxisName,\n            xaxisName: xAxisName,\n            cumulativeValue: cumulativeSumValue,\n            cumulativeDataValue: numberFormatter.dataLabels(cumulativeSumValue),\n            cumulativePercentValue: displayValuePercent,\n            sum: numberFormatter.dataLabels(sumValue),\n            unformattedSum: sumValue\n          };\n          macroIndices = [1, 2, 3, 5, 6, 7, 20, 21, 22, 23, 24, 25];\n          toolText = parseTooltext(setTooltext, macroIndices, parserConfig, setData,\n            chartAttr);\n        } else { // determine the dispalay value then\n          toolText = config.label ? config.label + tooltipSepChar : '';\n        }\n        config.toolText = toolText;\n      }\n      config.toolText = toolText;\n      config.tooltext = setTooltext;\n      config.setTooltext = toolText;\n      tempPlotfillAngle && (plotfillAngle = tempPlotfillAngle);\n    }\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n  }\n}\n\nexport { ParetoColumnDataset };\n","import columnAnimation from '../column/index.animation';\n\nexport default {\n  'initial.dataset.paretoColumn': columnAnimation['initial.dataset.column']\n};\n","import LineDataset from '../line';\nimport { extend2, pluck, pluckNumber, getValidValue, getFirstColor,\n  parseUnsafeString, parseTooltext, getDashStyle } from '@fusioncharts/core/src/lib';\n\nlet PLOTBORDERCOLOR = 'plotBorderColor',\n  SHOWSHADOW = 'showShadow',\n  UNDEF,\n  math = Math,\n  mathMin = math.min,\n  mathMax = math.max,\n  mathAbs = math.abs,\n  HUNDREDSTRING = '100';\n\nclass ParetoLineDataset extends LineDataset {\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      xAxis = dataSet.getFromEnv('xAxis'),\n      JSONData = conf.JSONData,\n      setDataArr = JSONData.data,\n      setDataLen = setDataArr && setDataArr.length,\n      len = setDataLen,\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      colorM = dataSet.getFromEnv('color-manager'),\n      showTooltip = pluckNumber(chartAttr.showtooltip, 1),\n      yAxisName = parseUnsafeString(chartAttr.yaxisname),\n      xAxisName = parseUnsafeString(chartAttr.xaxisname),\n      formatedVal,\n      parserConfig,\n      setTooltext,\n      macroIndices,\n      toolText,\n      isRoundEdges,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      dataStore = dataSet.components.data,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      is3D = chart.config.is3D,\n      enableAnimation,\n      lineDashStyle,\n      i,\n      maxValue = -Infinity,\n      minValue = +Infinity,\n      displayValuePercent,\n      sumValue = 0,\n      value,\n      catObj,\n      cleanArr = [],\n      cumulativeSumValue = 0,\n      tooltipSepChar = conf.tootipSepChar = pluck(chartAttr.tooltipsepchar, ', '),\n      anchorProps;\n\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    conf.enableAnimation = enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.valuePadding = pluckNumber(chartAttr.valuepadding, 2);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.rotateValues = pluckNumber(chartAttr.rotatevalues) ? 270 : 0;\n    conf.showHoverEffect = pluckNumber(chartAttr.plothovereffect,\n      chartAttr.showhovereffect, UNDEF);\n    conf.showShadow = (isRoundEdges || is3D) ? pluckNumber(chartAttr.showshadow, 1)\n      : pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.useDataPlotColorForLabels =\n                  pluckNumber(chartAttr.usedataplotcolorforlabels, 0);\n    conf.use3dlineshift = pluckNumber(chartAttr.use3dlineshift, chart.use3dlineshift);\n    // Line configuration attributes parsing\n    conf.drawLine = 1;\n    conf.linecolor = getFirstColor(pluck(chartAttr.linecolor, colorM.getColor(PLOTBORDERCOLOR)));\n    conf.linethickness = pluckNumber(chartAttr.linethickness, 2);\n    conf.linealpha = pluck(chartAttr.linealpha, HUNDREDSTRING);\n    conf.linedashed = pluckNumber(chartAttr.linedashed, 0);\n    conf.linedashlen = pluckNumber(JSONData.linedashlen, chartAttr.linedashlen, 5);\n    conf.linedashgap = pluckNumber(JSONData.linedashgap, chartAttr.linedashgap, 4);\n    lineDashStyle = getDashStyle(conf.linedashlen, conf.linedashgap);\n    conf.lineDashStyle = conf.linedashed ? lineDashStyle : 'none';\n    conf.drawanchors = pluckNumber(chartAttr.drawanchors,\n      chartAttr.showanchors);\n    conf.anchorbgcolor = pluck(chartAttr.anchorbgcolor, colorM.getColor('anchorBgColor'));\n    conf.anchorbordercolor = pluck(chartAttr.anchorbordercolor, conf.linecolor);\n    conf.anchorradius = pluckNumber(chartAttr.anchorradius, 3);\n    conf.anchoralpha = pluck(chartAttr.anchoralpha);\n    conf.anchorbgalpha = pluck(chartAttr.anchorbgalpha, 100);\n    conf.anchorborderthickness = pluck(chartAttr.anchorborderthickness, 1);\n    conf.anchorsides = pluck(chartAttr.anchorsides, 0);\n    // Anchor image cosmetics attributes\n    conf.anchorimageurl = pluck(chartAttr.anchorimageurl);\n    conf.anchorimagealpha = pluckNumber(chartAttr.anchorimagealpha, 100);\n    conf.anchorimagescale = pluckNumber(chartAttr.anchorimagescale, 100);\n    conf.anchorimagepadding = pluckNumber(chartAttr.anchorimagepadding, 1);\n    conf.anchorstartangle = pluckNumber(chartAttr.anchorstartangle, 90);\n    conf.parentYAxis = 1;\n    conf.valuePosition = pluck(chartAttr.valueposition, 'auto');\n    conf.showvalues = conf.showValues = pluckNumber(chartAttr.showlinevalues, chartAttr.showvalues, 1);\n\n    dataSet.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n    dataSet.setState('dirty', true);\n\n    conf.shadow = {\n      opacity: conf.showShadow ? conf.linealpha / 100 : 0\n    };\n\n    conf.showCumulativeLine = pluckNumber(chartAttr.showcumulativeline, 1);\n    conf.maxRadius = -Infinity;\n\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n    // Get the sum value and create the clean Array of value\n    for (i = 0; i < len; i++) {\n      value = mathAbs(numberFormatter.getCleanValue(setDataArr[i].value));\n      sumValue += value;\n      cleanArr[i] = extend2({}, setDataArr[i]);\n      cleanArr[i].value = value;\n    }\n    // Sort the clean Array of values\n    cleanArr.sort(function (a, b) {\n      return b.value - a.value;\n    });\n\n    conf.imageCount = 0;\n    // Parsing the attributes and values at set level.\n    for (i = 0; i < len; i++) {\n      setData = cleanArr[i];\n      dataObj = dataStore[i];\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n      setValue = mathAbs(numberFormatter.getCleanValue(setData.value));\n      if (setValue === null) {\n        continue;\n      }\n      config = dataObj && dataObj.config;\n      catObj = xAxis.getLabel(i);\n      config.label = getValidValue(parseUnsafeString(pluck(catObj.label)));\n      config.showValue = pluckNumber(setData.showvalue, conf.showValues);\n      config.setValue = setValue;\n      config.setLink = pluck(setData.link);\n      config.setDisplayValue = parseUnsafeString(setData.displayvalue);\n      cumulativeSumValue += config.setValue;\n\n      config.dataLabelStyle = dataSet._configureDataLabelStyle(setData);\n\n      config.valuePadding = pluckNumber(setData.valuepadding, JSONData.valuepadding, chart.config.valuepadding);\n\n      setValue = config.setValue = (cumulativeSumValue / sumValue) * 100;\n      displayValuePercent = numberFormatter.percentValue(setValue);\n      config.toolTipValue = displayValuePercent;\n      config.displayValue = displayValuePercent;\n      config.valuePosition = pluck(setData.valueposition, conf.valuePosition);\n      config.anchorProps = this._parseAnchorProperties(i, cleanArr);\n      config.hoverEffects = this._parseHoverEffectOptions(dataObj);\n      anchorProps = config.anchorProps;\n      conf.maxRadius = Math.max(conf.maxRadius,\n        anchorProps.radius + anchorProps.borderThickness / 2);\n      config._x = i;\n      config._y = setValue;\n      // setTooltext = config.setTooltext = getValidValue(parseUnsafeString(\n      //     pluck(setData.cumulativeplottooltext, chartAttr.cumulativeplottooltext)));\n\n      formatedVal = config.toolTipValue;\n      maxValue = mathMax(maxValue, setValue);\n      minValue = mathMin(minValue, setValue);\n      // Parsing tooltext against various configurations provided by the user.\n      if (!showTooltip) {\n        toolText = false;\n      } else {\n        if (!conf.showTooltip) {\n          toolText = false;\n        } else if (setTooltext !== UNDEF) {\n          parserConfig = {\n            formattedValue: formatedVal,\n            label: config.label,\n            yaxisName: yAxisName,\n            xaxisName: xAxisName,\n            cumulativeValue: cumulativeSumValue,\n            cumulativeDataValue: numberFormatter.dataLabels(cumulativeSumValue),\n            cumulativePercentValue: displayValuePercent,\n            sum: numberFormatter.dataLabels(sumValue),\n            unformattedSum: sumValue\n          };\n          macroIndices = [1, 2, 3, 5, 6, 7, 20, 21, 22, 23, 24, 25];\n          toolText = parseTooltext(setTooltext, macroIndices, parserConfig, setData,\n            chartAttr);\n        } else { // determine the dispalay value then\n          toolText = config.label ? config.label + tooltipSepChar + config.toolTipValue : '';\n        }\n        config.toolText = toolText;\n      }\n      config.toolText = toolText;\n      config.tooltext = setTooltext;\n      config.setTooltext = toolText;\n    }\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n  }\n}\nexport { ParetoLineDataset };\n","import NumericAxis from '@fusioncharts/core/src/axis/numeric';\nimport CategoryAxis from '@fusioncharts/core/src/axis/category';\nimport { componentFactory, pluckNumber } from '@fusioncharts/core/src/lib';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let children,\n    chartAttr = chart.getFromEnv('chart-attrib'),\n    showCumulativeLine = pluckNumber(chartAttr.showcumulativeline, 1),\n    canvas = chart.getChildren('canvas')[0],\n    axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n    zoomObj = {\n      zoomable: true,\n      pannable: true\n    },\n    config = chart._feedAxesRawData(),\n    yAxes,\n    xAxis,\n    redraw = () => axisRefVisualCartesian.asyncDraw();\n\n  componentFactory(chart, CategoryAxis, 'xAxis', 1, config.xAxisConf);\n  children = chart.getChildren();\n  xAxis = children.xAxis[0];\n\n  axisRefVisualCartesian.setLinkedItem(xAxis.getId(), xAxis);\n  canvas.attachAxis(xAxis, false, chart.zoomX ? zoomObj : {});\n  xAxis.setLinkedItem('canvas', canvas);\n\n  componentFactory(chart, NumericAxis, 'yAxis', showCumulativeLine ? 2 : 1, config.yAxisConf);\n  yAxes = chart.getChildren('yAxis');\n\n  yAxes && yAxes[1] && yAxes[1].setAxisConfig({\n    isPercent: true,\n    drawLabels: true,\n    drawPlotLines: true,\n    drawAxisName: true,\n    drawAxisLine: true,\n    drawPlotBands: true,\n    drawTrendLines: true,\n    drawTrendLabels: true\n  });\n\n  yAxes.forEach(axis => {\n    if (axis.getState('removed') !== true) {\n      axis.setLinkedItem('canvas', canvas);\n      axisRefVisualCartesian.setLinkedItem(axis.getId(), axis);\n      canvas.attachAxis(axis, true, chart.zoomY ? zoomObj : {});\n      axisRefVisualCartesian.setLinkedItem(axis.getId(), axis);\n      axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, axis);\n    } else {\n      canvas.detachAxis(axis);\n    }\n  });\n  chart._setCategories();\n}\n","import Column3dGroup from '../dataset/groups/column3d';\nimport { pluckNumber, componentFactory, datasetFactory } from '@fusioncharts/core/src/lib';\n/**\n * function to  create dataset.\n * assign dataset to vCanvas.\n **/\nexport default function (chart) {\n  let children = chart.getChildren(),\n    chartAttr = chart.getFromEnv('chart-attrib'),\n    canvas = children.canvas[0],\n    datasetParent = canvas.getChildren('vCanvas'),\n    dataObj = chart.getFromEnv('dataSource'),\n    dataset = dataObj.dataset,\n    showCumulativeLine = pluckNumber(chartAttr.showcumulativeline, 1),\n    data = dataObj.data || (dataset && dataset[0].data),\n    DSClass,\n    groupManager3d,\n    datasetJSON;\n\n  datasetJSON = {\n    data: data\n  };\n\n  if (!(data && data.length !== 0)) {\n    chart.setChartMessage();\n    return;\n  }\n  DSClass = chart.getDSdef('column');\n\n  if (chart.config.is3D) {\n    componentFactory(datasetParent[0], Column3dGroup, 'datasetGroup_column');\n    groupManager3d = datasetParent[0].getChildren('datasetGroup_column')[0];\n  }\n\n  datasetFactory(groupManager3d || datasetParent[0], DSClass, 'dataset', 1, [datasetJSON]);\n  if (showCumulativeLine) {\n    DSClass = chart.getDSdef('line');\n    datasetFactory(datasetParent[1], DSClass, 'dataset', 1, [datasetJSON], [1]);\n  }\n}\n","import Pareto3d from '@fusioncharts/charts/src/chart/pareto3d';\nexport default Pareto3d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Pareto2D from '../pareto2d';\nimport { preDefStr } from '@fusioncharts/core/src/lib';\nimport { ParetoColumn3DDataset } from '../../dataset/pareto3d';\nimport { ParetoLineDataset } from '../../dataset/paretoline';\nimport canvas3dFactory from '../../factories/canvas-3d-axis-ref-cartesian';\n\nconst CHART_STR = '3D Pareto Chart',\n  COLUMN3D_STR = 'column3d';\n/**\n * Creates class for  Pareto3D\n */\nclass Pareto3D extends Pareto2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Pareto3D';\n  }\n  /**\n   * Constructor function for class Pareto3D\n   */\n  constructor () {\n    super();\n    this.fireGroupEvent = true;\n    this.defaultPlotShadow = 1;\n    this.isPercentage = true;\n    this.registerFactory('canvas', canvas3dFactory);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Pareto3D';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.friendlyName = CHART_STR;\n    config.singleseries = true;\n    config.hasLegend = false;\n    config.defaultDatasetType = COLUMN3D_STR;\n    config.plotfillalpha = preDefStr.NINETYSTRING;\n    config.use3dlineshift = 1;\n    config.enablemousetracking = true;\n    config.showzeroplaneontop = 0;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param {string} name Name of dataset class\n   * @return {Class}       Pareto dataset\n   */\n  getDSdef (name) {\n    return name === 'column' ? ParetoColumn3DDataset : ParetoLineDataset;\n  }\n}\nexport default Pareto3D;\n","import { ParetoColumnDataset } from '../pareto';\nimport { _checkPointerOverColumn } from '../_internal/column3d-utils';\n\nlet\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {string} groupName                Name of the group to be created.\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (groupName, parentContainer, dataset) {\n    var animationManager = dataset.getFromEnv('animationManager');\n    return animationManager.setAnimation({\n      el: 'group',\n      attr: {name: groupName},\n      container: parentContainer,\n      state: 'appearing',\n      component: dataset,\n      label: 'group'\n    });\n  };\n\nclass ParetoColumn3DDataset extends ParetoColumnDataset {\n  /**\n   * Function that retunr the nearest plot details\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY x-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest polt and whether it is hovered or not\n   */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      xAxis = dataset.getFromEnv('xAxis'),\n      x,\n      pX;\n    x = xAxis.getValue(chartX);\n    pX = Math.round(x);\n    // Checking for overlap between two cosecutive column plots along x-axis\n    return (pX - x > 0 ? _checkPointerOverColumn.call(dataset, pX, chartX, chartY) ||\n      _checkPointerOverColumn.call(dataset, pX - 1, chartX, chartY)\n      : _checkPointerOverColumn.call(dataset, pX + 1, chartX, chartY) ||\n      _checkPointerOverColumn.call(dataset, pX, chartX, chartY));\n  }\n  /**\n   * function to create group for dataset\n   */\n  createContainer () {\n    var dataset = this,\n      parent = dataset.getLinkedParent();\n\n    !dataset.getContainer('labelGroup') && dataset.addContainer('labelGroup',\n      createGroup('label-group', parent.getChildContainer('vcanvasLabelGroup'), dataset)\n        .attr('class', 'fusioncharts-datalabels'));\n  }\n}\n\nexport { ParetoColumn3DDataset };\n","import Scrollcombidy2d from '@fusioncharts/charts/src/chart/scrollcombidy2d';\nexport default Scrollcombidy2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSCombidy2D from '../mscombidy2d';\nimport { scrollTo, setAxisScale, resetViewPortConfig, configurer } from '../_internal/utils/scroll-apis';\n\nconst CHART_STR = 'Scrollable Dual Y-Axis Combination Chart',\n  COLUMN_STR = 'column';\n/**\n * Creates ScrollCombiDy2D class\n */\nclass ScrollCombiDy2D extends MSCombidy2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ScrollCombiDy2D';\n  }\n\n  /**\n   * Function to state if inputOptions are to be used for this charts\n   * @return {Array} value\n   */\n  static includeInputOptions () {\n    return ['SwipeGesture'];\n  }\n\n  /**\n   * Constructor fn of class ScrollCombiDy2D\n   */\n  constructor () {\n    super();\n    this.hasScroll = true;\n    this.eiMethods = {\n      'scrollTo': scrollTo\n    };\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ScrollCombiDy2D';\n  }\n  /**\n   * Sets default configuration\n   * @memberof ScrollCombiDy2D\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = COLUMN_STR;\n    config.showzeroplaneontop = 0;\n    config.avgScrollPointWidth = 40;\n    config.canvasborderthickness = 1;\n  }\n\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    configurer.call(this, dataObj);\n  }\n\n  /**\n   * Sets xAxis scale visible region\n   */\n  _setAxisScale () {\n    setAxisScale.call(this);\n  }\n\n  /**\n   * Reset view port\n   */\n  _resetViewPortConfig () {\n    resetViewPortConfig.call(this);\n  }\n}\nexport default ScrollCombiDy2D;\n","\nimport MSDyBaseCartesian from '../_internal/msdybasecartesian';\nimport ColumnDataset from '../../dataset/column';\nimport AreaDataset from '../../dataset/area';\nimport LineDataset from '../../dataset/line';\nimport SplineAreaDataset from '../../dataset/mssplinearea';\nimport SplineLineDataset from '../../dataset/msspline';\nimport ColumnGroup from '../../dataset/groups/column-multiseries';\nimport { HUNDREDSTRING, preDefStr } from '@fusioncharts/core/src/lib';\nimport datasetFactory from '../../factories/combi-dual-y-dataset';\nlet UNDEF,\n  SEVENTYSTRING = preDefStr.SEVENTYSTRING,\n  MS_DUAL_Y_COMBI_CHART = 'Multi-series Dual Y-Axis Combination Chart',\n  LINE_STR = 'line',\n  COLUMN_STR = 'column';\n\nclass MSCombidy2D extends MSDyBaseCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSCombidy2D';\n  }\n\n  constructor () {\n    super();\n    this.isDual = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSCombidy2D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = MS_DUAL_Y_COMBI_CHART;\n    config.sDefaultDatasetType = LINE_STR;\n    config.defaultDatasetType = COLUMN_STR;\n    config.enablemousetracking = true;\n    config.isdual = 1;\n    // Area default configurations\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEF;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEF;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEF;\n    config.anchorbordercolor = UNDEF;\n    config.anchorradius = 3;\n    config.showvalues = 1;\n    config.plotfillalpha = SEVENTYSTRING;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEF;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n    config.showzeroplaneontop = 0;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param  {string} name type of dataset class\n   * @return {class}      class of dataset\n   */\n  getDSdef (name) {\n    if (name === 'splinearea') {\n      return SplineAreaDataset;\n    } else if (name === 'spline') {\n      return SplineLineDataset;\n    } else if (name === 'area') {\n      return AreaDataset;\n    } else if (name === 'line') {\n      return LineDataset;\n    }\n    return ColumnDataset;\n  }\n  /**\n   * This method return the dataset group definations for this charts\n   * @param  {string} name type of dataset group class\n   * @return {class}      class of dataset group\n   */\n  getDSGroupdef (name) {\n    return name === 'column' ? ColumnGroup : UNDEF;\n  }\n  /**\n   * function to return dataset type applicable for this chart\n   * @param   {string}  name  dataset type\n   * @return  {string}        dataset type applicable for this chart\n   */\n  getDSType (name = '') {\n    if (name.toLowerCase() === 'splinearea') {\n      return 'splinearea';\n    } else if (name.toLowerCase() === 'spline') {\n      return 'spline';\n    } else if (name.toLowerCase() === 'area') {\n      return 'area';\n    } else if (name.toLowerCase() === 'line') {\n      return 'line';\n    }\n    return 'column';\n  }\n}\nexport default MSCombidy2D;\n","import Scrollcombi2d from '@fusioncharts/charts/src/chart/scrollcombi2d';\nexport default Scrollcombi2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ScrollArea2D from '../scrollarea2d';\nimport ColumnDataset from '../../dataset/column';\nimport AreaDataset from '../../dataset/area';\nimport LineDataset from '../../dataset/line';\nimport SplineAreaDataset from '../../dataset/mssplinearea';\nimport SplineLineDataset from '../../dataset/msspline';\nimport ColumnMultiSeriesGroup from '../../dataset/groups/column-multiseries';\nimport datasetFactory from '../../factories/combi-dual-y-dataset';\nvar UNDEFINED,\n  CHART_STR = 'Scrollable Combination Chart',\n  COLUMN_STR = 'column';\n/**\n * Creates ScrollCombi2D class\n */\nclass ScrollCombi2D extends ScrollArea2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ScrollCombi2D';\n  }\n\n  /**\n   * Constructor fn of ScrollCombi2D class\n   */\n  constructor () {\n    super();\n    this.hasScroll = true;\n    this.defaultPlotShadow = 1;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ScrollCombi2D';\n  }\n\n  /**\n   * Sets default chart configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = COLUMN_STR;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 80;\n    config.enablemousetracking = true;\n    config.showzeroplaneontop = 0;\n    config.defaultcrosslinethickness = null;\n    config.avgScrollPointWidth = 40;\n    config.canvasborderthickness = 1;\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @param  {string} name type of dataset class\n   * @return {Object}      dataset class\n   */\n  getDSdef (name) {\n    if (name === 'splinearea') {\n      return SplineAreaDataset;\n    } else if (name === 'spline') {\n      return SplineLineDataset;\n    } else if (name === 'area') {\n      return AreaDataset;\n    } else if (name === 'line') {\n      return LineDataset;\n    }\n    return ColumnDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @param  {string} name is type of dataset group\n   * @return {Object} <dataset group class>     dataset group class\n   */\n  getDSGroupdef (name) {\n    return name === 'column' ? ColumnMultiSeriesGroup : UNDEFINED;\n  }\n  /**\n   * function to return dataset type applicable for this chart\n   * @param   {string}  name  dataset type\n   * @return  {string}        dataset type applicable for this chart\n   */\n  getDSType (name = '') {\n    if (name.toLowerCase() === 'splinearea') {\n      return 'splinearea';\n    } else if (name.toLowerCase() === 'spline') {\n      return 'spline';\n    } else if (name.toLowerCase() === 'area') {\n      return 'area';\n    } else if (name.toLowerCase() === 'line') {\n      return 'line';\n    }\n    return 'column';\n  }\n}\nexport default ScrollCombi2D;\n","import ScrollColumn2D from '../scrollcolumn2d';\nimport AreaDataset from '../../dataset/area';\nimport { HUNDREDSTRING, preDefStr } from '@fusioncharts/core/src/lib';\nlet UNDEF,\n  SEVENTYSTRING = preDefStr.SEVENTYSTRING,\n  CHART_STR = 'Scrollable Multi-series Area Chart',\n  SCROLL_AREA_STR = 'scrollarea2d';\n/**\n * Creates ScrollArea2D class\n */\nclass ScrollArea2D extends ScrollColumn2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ScrollArea2D';\n  }\n\n  /**\n   * Constructor fn of ScrollArea2D class\n   */\n  constructor () {\n    super();\n    this.hasScroll = true;\n    this.defaultPlotShadow = 0;\n    this.binSize = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ScrollArea2D';\n  }\n  /**\n   * Sets default chart configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = SCROLL_AREA_STR;\n    config.enablemousetracking = true;\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEF;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEF;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEF;\n    config.anchorbordercolor = UNDEF;\n    config.anchorradius = 3;\n    config.showvalues = 1;\n    config.plotfillalpha = SEVENTYSTRING;\n    config.canvasborderthickness = 1;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEF;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n    config.defaultcrosslinethickness = 1;\n    config.avgScrollPointWidth = 75;\n  }\n\n  /** This method return the dataset definations for this charts **/\n  getDSdef () {\n    return AreaDataset;\n  }\n  /** This method return the dataset-group definations for this charts **/\n  getDSGroupdef () {\n    return UNDEF;\n  }\n}\nexport default ScrollArea2D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MScolumn2D from '../mscolumn2d';\nimport ColumnDataset from '../../dataset/column';\nimport Columngroup from '../../dataset/groups/column-multiseries';\nimport { scrollTo, setAxisScale, resetViewPortConfig, configurer } from '../_internal/utils/scroll-apis';\nconst CHART_STR = 'Scrollable Multi-series Column Chart',\n  COLUMN_STR = 'column',\n  PLOT_STR = 'plot';\n/**\n * Creates ScrollColumn2D class\n */\nclass ScrollColumn2D extends MScolumn2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ScrollColumn2D';\n  }\n\n  /**\n   * Function to state if inputOptions are to be used for this charts\n   * @return {Array} value\n   */\n  static includeInputOptions () {\n    return ['SwipeGesture'];\n  }\n\n  /**\n   * Constructor fn of ScrollColumn2D class\n   */\n  constructor () {\n    super();\n    this.tooltipConstraint = PLOT_STR;\n    this.hasScroll = true;\n    this.defaultPlotShadow = 1;\n    this.binSize = 0;\n    this.eiMethods.scrollTo = scrollTo;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ScrollColumn2D';\n  }\n  /**\n   * Sets default configuration\n   * @memberof ScrollColumn2D\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = COLUMN_STR;\n    config.showzeroplaneontop = 1;\n    config.friendlyName = CHART_STR;\n    config.avgScrollPointWidth = 40;\n    config.canvasborderthickness = 1;\n  }\n\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    configurer.call(this, dataObj);\n  }\n\n  /**\n   * Sets xAxis scale visible region\n   */\n  _setAxisScale () {\n    setAxisScale.call(this);\n  }\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    // this.config.drawTrendRegion = 0;\n  }\n\n  /**\n   * Reset view port\n   */\n  _resetViewPortConfig () {\n    resetViewPortConfig.call(this);\n  }\n  /**\n   * Returns dataset class\n   * @return {class} returns ColumnDataset class\n   */\n  getDSdef () {\n    return ColumnDataset;\n  }\n  /**\n   * Returns dataset group class\n   * @return {class} returns Columngroup class\n   */\n  getDSGroupdef () {\n    return Columngroup;\n  }\n}\nexport default ScrollColumn2D;\n","import Scrollstackedcolumn2d from '@fusioncharts/charts/src/chart/scrollstackedcolumn2d';\nexport default Scrollstackedcolumn2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ScrollColumn2D from '../scrollcolumn2d';\nimport CartesianStackGroup from '../../dataset/groups/cartesian-stack';\n\nconst CHART_STR = 'Scrollable Stacked Column Chart';\n/**\n * Creates ScrollStackedColumn2D class\n */\nclass ScrollStackedColumn2D extends ScrollColumn2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ScrollStackedColumn2D';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ScrollStackedColumn2D';\n  }\n  /**\n   * Sets default chart configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.isstacked = true;\n    config.showSum = 0;\n    config.canvasborderthickness = 1;\n    config.avgScrollPointWidth = 75;\n  }\n  /**\n   * Return Dataset Group class\n   * @return {Class} CartesianStackGroup class\n   */\n  getDSGroupdef () {\n    return CartesianStackGroup;\n  }\n}\nexport default ScrollStackedColumn2D;\n","import ScrollMSStackedColumn2d from '@fusioncharts/charts/src/chart/scrollmsstackedcolumn2d';\nexport default ScrollMSStackedColumn2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSStackedColumn2d from '../msstackedcolumn2d';\nimport { setAxisScale, resetViewPortConfig, configurer, scrollTo } from '../_internal/utils/scroll-apis';\n\nconst CHART_STR = 'Scrollable MultiSeries Stacked Column Chart',\n  COLUMN_STR = 'column';\n/**\n * Creates ScrollMSStackedColumn2D class\n */\nclass ScrollMSStackedColumn2D extends MSStackedColumn2d {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ScrollMSStackedColumn2D';\n  }\n\n  /**\n   * Function to state if inputOptions are to be used for this charts\n   * @return {Array} value\n   */\n  static includeInputOptions () {\n    return ['SwipeGesture'];\n  }\n\n  /**\n   * Constructor fn of class ScrollCombiDy2D\n   */\n  constructor () {\n    super();\n    this.hasScroll = true;\n    this.eiMethods = {\n      'scrollTo': scrollTo\n    };\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ScrollMSStackedColumn2D';\n  }\n  /**\n   * Sets default configuration\n   * @memberof ScrollMSStackedColumn2D\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.isstacked = true;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = COLUMN_STR;\n    config.showzeroplaneontop = 1;\n    config.avgScrollPointWidth = 75;\n    config.canvasborderthickness = 1;\n  }\n\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    configurer.call(this, dataObj);\n  }\n}\n/**\n* Sets xAxis scale visible region\n*/\nScrollMSStackedColumn2D.prototype._setAxisScale = setAxisScale;\n/**\n* Reset view port\n*/\nScrollMSStackedColumn2D.prototype._resetViewPortConfig = resetViewPortConfig;\nexport default ScrollMSStackedColumn2D;\n","import ScrollMSStackedColumn2dLineDY from '@fusioncharts/charts/src/chart/scrollmsstackedcolumn2dlinedy';\nexport default ScrollMSStackedColumn2dLineDY;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSStackedColumn2dLineDY from '../msstackedcolumn2dlinedy';\nimport { scrollTo, setAxisScale, resetViewPortConfig, configurer } from '../_internal/utils/scroll-apis';\n\nconst CHART_STR = 'Scrollable Multi-series Dual Y-Axis Stacked Column and Line Chart',\n  COLUMN_STR = 'column',\n  LINE_STR = 'line';\n/**\n * Creates ScrollMSStackedColumn2DLineDY class\n */\nclass ScrollMSStackedColumn2DLineDY extends MSStackedColumn2dLineDY {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ScrollMSStackedColumn2DLineDY';\n  }\n\n  /**\n   * Function to state if inputOptions are to be used for this charts\n   * @return {Array} value\n   */\n  static includeInputOptions () {\n    return ['SwipeGesture'];\n  }\n\n  /**\n   * Constructor fn of class ScrollCombiDy2D\n   */\n  constructor () {\n    super();\n    this.hasScroll = true;\n    this.eiMethods = {\n      'scrollTo': scrollTo\n    };\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ScrollMSStackedColumn2DLineDY';\n  }\n  /**\n   * Sets default configuration\n   * @memberof ScrollMSStackedColumn2DLineDY\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.isstacked = true;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = COLUMN_STR;\n    config.sDefaultDatasetType = LINE_STR;\n    config.showzeroplaneontop = 1;\n    config.avgScrollPointWidth = 75;\n    config.canvasborderthickness = 1;\n  }\n\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    configurer.call(this, dataObj);\n  }\n\n  /**\n   * Sets xAxis scale visible region\n   */\n  _setAxisScale () {\n    setAxisScale.call(this);\n  }\n\n  /**\n   * Reset view port\n   */\n  _resetViewPortConfig () {\n    resetViewPortConfig.call(this);\n  }\n}\n/**\n* Sets xAxis scale visible region\n*/\nScrollMSStackedColumn2DLineDY.prototype._setAxisScale = setAxisScale;\n/**\n* Reset view port\n*/\nScrollMSStackedColumn2DLineDY.prototype._resetViewPortConfig = resetViewPortConfig;\nexport default ScrollMSStackedColumn2DLineDY;\n","import Scrollstackedbar2d from '@fusioncharts/charts/src/chart/scrollstackedbar2d';\nexport default Scrollstackedbar2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ScrollBar2D from '../scrollbar2d';\nimport CartesianStackGroup from '../../dataset/groups/cartesian-stack';\n\nconst CHART_STR = 'Scrollable Stacked Bar Chart';\n/**\n * Creates ScrollStackedBar2D class\n */\nclass ScrollStackedBar2D extends ScrollBar2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ScrollStackedBar2D';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ScrollStackedBar2D';\n  }\n  /**\n   * Sets default chart configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.isstacked = true;\n    config.avgScrollPointWidth = 75;\n    config.canvasborderthickness = 1;\n    config.showSum = 0;\n  }\n  /**\n   * Return Dataset Group class\n   * @return {Class} CartesianStackGroup class\n   */\n  getDSGroupdef () {\n    return CartesianStackGroup;\n  }\n}\nexport default ScrollStackedBar2D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport MSBarCartesian from '../_internal/msbarcartesian';\nimport Bar2DDataset from '../../dataset/bar2d';\nimport ColumnMultiSeriesGroup from '../../dataset/groups/column-multiseries';\nimport datasetFactory from '../../factories/multiseries-dataset';\nimport { scrollTo, setAxisScale, resetViewPortConfig, configurer } from '../_internal/utils/scroll-apis';\n\nconst SCROLL_BAR_CHART = 'Scrollable Multi-series Bar Chart',\n  BAR2D_STR = 'bar2d';\n\n/**\n * Class for ScrollBar2D chart\n * @class ScrollBar2D\n * @extends {MSBarCartesian}\n */\nclass ScrollBar2D extends MSBarCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ScrollBar2D';\n  }\n\n  /**\n   * Function to state if inputOptions are to be used for this charts\n   * @return {Array} value\n   */\n  static includeInputOptions () {\n    return ['SwipeGesture'];\n  }\n\n  /**\n   * Creates an instance of ScrollBar2D.\n   * @memberof ScrollBar2D\n   */\n  constructor () {\n    super();\n    this.isBar = true;\n    this.eiMethods = { scrollTo: scrollTo };\n    this.hasScroll = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ScrollBar2D';\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object} dataset\n   */\n  getDSdef () {\n    return Bar2DDataset;\n  }\n  /** This method return the dataset-group definations for this charts\n    * @return {Object} dataset group **/\n  getDSGroupdef () {\n    return ColumnMultiSeriesGroup;\n  }\n  /**\n   * Function to create dataset of ScrollBar2D chart.\n   * @memberof ScrollBar2D\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = SCROLL_BAR_CHART;\n    config.hasLegend = true;\n    config.defaultDatasetType = BAR2D_STR;\n    config.avgScrollPointWidth = 40;\n  }\n\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    configurer.call(this, dataObj);\n  }\n\n  /**\n   * Sets xAxis scale visible region\n   */\n  _setAxisScale () {\n    setAxisScale.call(this, BAR2D_STR);\n  }\n\n  /**\n   * Reset view port\n   */\n  _resetViewPortConfig () {\n    resetViewPortConfig.call(this);\n  }\n}\nexport default ScrollBar2D;\n","import Scrollarea2d from '@fusioncharts/charts/src/chart/scrollarea2d';\nexport default Scrollarea2d;\n","import Scrollline2d from '@fusioncharts/charts/src/chart/scrollline2d';\nexport default Scrollline2d;\n","import ScrollArea2D from '../scrollarea2d';\nimport LineDataset from '../../dataset/line';\n\nconst CHART_STR = 'Scrollable Multi-series Line Chart',\n  LINE_STR = 'line';\n/**\n * Creates ScrollLine2D class\n */\nlet UNDEF;\nclass ScrollLine2D extends ScrollArea2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ScrollLine2D';\n  }\n\n  /**\n   * Constructor fn of ScrollLine2D class\n   */\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n    this.binSize = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ScrollLine2D';\n  }\n\n  /**\n   * Sets default chart configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = LINE_STR;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n    config.avgScrollPointWidth = 75;\n    config.canvasborderthickness = 1;\n  }\n\n  /** This method return the dataset definations for this charts **/\n  getDSdef () {\n    return LineDataset;\n  }\n  /** This method return the dataset-group definations for this charts **/\n  getDSGroupdef () {\n    return UNDEF;\n  }\n}\nexport default ScrollLine2D;\n","import Scrollcolumn2d from '@fusioncharts/charts/src/chart/scrollcolumn2d';\nexport default Scrollcolumn2d;\n","import Scrollbar2d from '@fusioncharts/charts/src/chart/scrollbar2d';\nexport default Scrollbar2d;\n","import Bubble from '@fusioncharts/charts/src/chart/bubble';\nexport default Bubble;\n","\nimport Scatter from '../scatter';\nimport BubbleDataset from '../../dataset/bubble';\nimport BubbleDatasetGroup from '../../dataset/groups/bubble';\n\nconst BUBBLE_CHART = 'Bubble Chart';\nclass Bubble extends Scatter {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Bubble';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Bubble';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = BUBBLE_CHART;\n    config.enablemousetracking = true;\n  }\n\n  // This method return the dataset definations for this charts\n  getDSdef () {\n    return BubbleDataset;\n  }\n\n  getDSGroupdef () {\n    return BubbleDatasetGroup;\n  }\n}\nexport default Bubble;\n","import ScatterBase from '../_internal/scatterbase';\nimport ScatterDataset from '../../dataset/scatter';\n\nlet UNDEF,\n  CHART_STR = 'Scatter Chart';\n\nclass Scatter extends ScatterBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Scatter';\n  }\n\n  constructor () {\n    super();\n    this.isXY = true;\n\n    this.defaultZeroPlaneHighlighted = false;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Scatter';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.hasLegend = true;\n    config.allowreversexaxis = true;\n    config.enablemousetracking = true;\n  }\n  getDSdef () {\n    return ScatterDataset;\n  }\n  // This method return the dataset-group definations for this charts\n  getDSGroupdef () {\n    return UNDEF;\n  }\n}\n\nexport default Scatter;\n","\nimport ScatterDataset from '../scatter';\nimport { PATTERN_TYPES } from '../column';\nimport {\n  TOUCH_THRESHOLD_PIXELS, CLICK_THRESHOLD_PIXELS, pluck, pluckNumber, toRaphaelColor,\n  hasTouch, getValidValue, preDefStr, parseUnsafeString, parseTooltext, getFirstValue,\n  getLightColor, getPointColor, getFirstColor, BLANKSTRING, TRACKER_FILL\n} from '@fusioncharts/core/src/lib';\nimport KdTree from '../_internal/kdtree';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport bubbleAnimation from './index.animation';\n\nvar UNDEF,\n  // ROLLOUT = 'DataPlotRollOut',\n  // hot/tracker threshold in pixels\n  HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS : CLICK_THRESHOLD_PIXELS,\n  // add the tools thats are requared\n  EVENTARGS = 'eventArgs',\n  DEFAULT_MIN_RADIUS_FOR_VALUE = 0,\n  // visibleStr = preDefStr.visibleStr,\n  SETROLLOVERATTR = preDefStr.setRolloverAttrStr,\n  SETROLLOUTATTR = preDefStr.setRolloutAttrStr,\n  ROLLOUT = 'DataPlotRollOut',\n  HUNDREDSTRING = '100',\n  math = Math,\n  mathRound = math.round,\n  mathMin = math.min,\n  mathMax = math.max;\n// mathPow = math.pow,\n// defined = function (obj) {\n//   return obj !== UNDEF && obj !== null;\n// };\n\naddDep({\n  name: 'bubbleAnimation',\n  type: 'animationRule',\n  extension: bubbleAnimation\n});\nclass BubbleDataset extends ScatterDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'bubble';\n  }\n\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      rawDataObj = chart.getFromEnv('dataSource'),\n      chartConfig = chart.config,\n      chartAttr = rawDataObj.chart,\n      JSONData = dataset.config.JSONData,\n      conf = dataset.config,\n      setDataArr = JSONData.data || [],\n      len,\n      i,\n      dataObj,\n      dataStore,\n      setColor,\n      setAlpha,\n      colorM = dataset.getFromEnv('color-manager'),\n      index = dataset.index,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      // regressionObj,\n      tooltipSepChar = pluck(parseUnsafeString(chartAttr.tooltipsepchar), ', '),\n      formatedVal,\n      enableAnimation,\n      setData,\n      config,\n      toolText,\n      hoverEffects,\n      seriesname,\n      parserConfig,\n      macroIndices,\n      label,\n      setDisplayValue,\n      isHoverColorString,\n      hColorsLoop,\n      hColorsLen,\n      infMin = -Infinity,\n      infMax = +Infinity,\n      xMax = infMin,\n      xMin = infMax,\n      yMax = infMin,\n      yMin = infMax,\n      zMax = infMin,\n      zMin = infMax,\n      colorObj,\n      highLight,\n      quickEnabled,\n      highlightColors;\n\n    conf.usePattern = pluckNumber(chartConfig.usePattern, 0);\n    conf.patternType = PATTERN_TYPES.includes(JSONData.patterntype)\n      ? JSONData.patterntype\n      : chartConfig.patternType;\n    conf.patternAngle = pluckNumber(JSONData.patternangle,\n      chartAttr.patternangle, conf.patternType === PATTERN_TYPES[0] ? 40 : 0);\n    conf.patternDensity = pluckNumber(JSONData.patterndensity, chartConfig.patternDensity);\n    conf.patternSize = pluckNumber(JSONData.patternsize,\n      conf.patternType === PATTERN_TYPES[0] ? 2 : 4);\n    conf.patternAlpha = pluckNumber(JSONData.patternalpha, chartConfig.patternAlpha);\n    conf.patternBgColor = pluck(JSONData.patternbgcolor, conf.patternBgColor);\n    conf.seriesname = parseUnsafeString(JSONData.seriesname);\n    conf.includeinlegend = pluckNumber(JSONData.includeinlegend, (conf.seriesname ? 1 : 0));\n    conf.anchorBgColor = getFirstColor(pluck(JSONData.color, JSONData.plotfillcolor,\n      chartAttr.plotfillcolor, colorM.getPlotColor(index)));\n    conf.showPlotBorder = pluckNumber(JSONData.showplotborder, chartAttr.showplotborder, 1);\n    conf.anchorBorderThickness = conf.showPlotBorder\n      ? pluckNumber(JSONData.plotborderthickness, chartAttr.plotborderthickness, 1) : 0;\n    conf.anchorBorderColor = getFirstColor(pluck(JSONData.plotbordercolor,\n      chartAttr.plotbordercolor, conf.usePattern ? conf.anchorBgColor : '666666'));\n    conf.plotFillAlpha = pluck(JSONData.plotfillalpha, JSONData.bubblefillalpha, chartAttr.plotfillalpha,\n      HUNDREDSTRING);\n    conf.plotBorderAlpha = pluck(JSONData.plotborderalpha, chartAttr.plotborderalpha, '95');\n    conf.negativeColor = pluck(chartAttr.negativecolor, 'FF0000');\n    conf.is3d = pluckNumber(chartAttr.use3dlighting, JSONData.is3d,\n      chartAttr.is3d) !== 0;\n    conf.usePattern && (conf.is3d = 0);\n    conf.bubbleScale = pluckNumber(chartAttr.bubblescale, 1);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.minBubbleRadius = pluckNumber(chartAttr.minbubbleradius);\n    conf.minRadiusForValue = pluckNumber(JSONData.minradiusforvalue, chartAttr.minradiusforvalue, DEFAULT_MIN_RADIUS_FOR_VALUE);\n    conf.clipBubbles = pluckNumber(chartAttr.clipbubbles, 1);\n    // conf.showRegressionLine = pluckNumber(JSONData.showregressionline, chartAttr.showregressionline, 0);\n    conf.enableAnimation = enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.transposeAnimation =\n      pluckNumber(chartAttr.transposeanimation, enableAnimation);\n    conf.transposeAnimDuration = pluckNumber(chartAttr.transposeanimduration, 0.2) * 1000;\n    conf.seriesNameInTooltip = pluckNumber(chartAttr.seriesnameintooltip, 1);\n    conf.rotateValues = pluckNumber(chartAttr.rotatevalues) ? 270 : 0;\n    conf.showHoverEffect = pluckNumber(chartAttr.plothovereffect, chartAttr.showhovereffect, UNDEF);\n    conf.usePattern && (conf.showHoverEffect = 0);\n    conf.showValues = conf.showvalues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 0);\n    dataStore = dataset.components.data = dataset.components.data || (dataset.components.data = []);\n    len = setDataArr.length;\n    conf.fillColor = conf.is3d ? toRaphaelColor(getPointColor(conf.anchorBgColor,\n      conf.plotFillAlpha))\n      : toRaphaelColor({\n        color: conf.anchorBgColor,\n        alpha: conf.plotFillAlpha\n      });\n    conf.strokeColor = toRaphaelColor({\n      color: conf.anchorBorderColor,\n      alpha: conf.plotFillAlpha\n    });\n    for (i = 0; i < len; i++) {\n      setData = setDataArr[i];\n      dataObj = dataStore[i] = dataStore[i] || (dataStore[i] = {});\n      !dataObj.graphics && (dataObj.graphics = {});\n      config = dataObj.config = {};\n      config.x = numberFormatter.getCleanValue(setData.x);\n      config.y = numberFormatter.getCleanValue(setData.y);\n      config.z = numberFormatter.getCleanValue(setData.z, true);\n      config.setValue = {\n        x: config.x,\n        y: config.y,\n        z: config.z\n      };\n\n      config.patternType = PATTERN_TYPES.includes(setData.patterntype)\n        ? setData.patterntype\n        : conf.patternType;\n      config.patternAngle = pluckNumber(setData.patternangle, JSONData.patternangle,\n        chartAttr.patternangle, config.patternType === PATTERN_TYPES[0] ? 40 : 0);\n      config.patternDensity = pluckNumber(setData.patterndensity, conf.patternDensity);\n      config.patternSize = pluckNumber(setData.patternsize, JSONData.patternsize,\n        config.patternType === PATTERN_TYPES[0] ? 2 : 4);\n      config.patternAlpha = pluckNumber(setData.patternalpha, conf.patternAlpha);\n      config.patternBgColor = pluck(setData.patternbgcolor, conf.patternBgColor);\n\n      config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n\n      config._x = config.x;\n      config._y = config.y;\n      config._z = config.z;\n      config.showValue = pluckNumber(setData.showvalue, conf.showValues, 0);\n      config.plotShowValue = pluckNumber(setData.showvalue);\n      config.plotMinRadiusForValue = pluckNumber(setData.minradiusforvalue, conf.minRadiusForValue);\n      config.anchorProps = {};\n      label = config.label = config.x;\n      config.setLink = getValidValue(setData.link);\n      conf.max = zMax = mathMax(zMax, config.z || 0);\n      conf.min = zMin = mathMin(zMin, config.z || 0);\n      config.is3d = pluckNumber(setData.is3d, conf.is3d) !== 0;\n      xMax = mathMax(xMax, config.x);\n      xMin = mathMin(xMin, config.x);\n      yMax = mathMax(yMax, config.y);\n      yMin = mathMin(yMin, config.y);\n      setColor = config.color = getFirstColor(pluck(setData.color,\n        (setData.z < 0 ? conf.negativeColor : conf.anchorBgColor)));\n      setAlpha = config.alpha = pluck(setData.alpha, conf.plotFillAlpha);\n      config.colorObj = colorObj = config.is3d ? getPointColor(setColor, setAlpha) : {\n        color: setColor,\n        alpha: setAlpha\n      };\n      config.setDisplayValue = setDisplayValue = parseUnsafeString(pluck(setData.displayvalue,\n        setData.name, setData.label));\n      formatedVal = config.formatedVal = config.y === null ? config.y\n        : numberFormatter.dataLabels(config.y);\n      config.displayValue = pluck(setDisplayValue, config.formatedVal);\n      config.setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext,\n        JSONData.plottooltext, chartAttr.plottooltext), false));\n      // Initial tooltext parsing\n      if (!conf.showTooltip) {\n        toolText = false;\n      } else {\n        if (formatedVal === null) {\n          toolText = false;\n        } else if (config.setTooltext !== UNDEF) {\n          macroIndices = [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 118];\n          parserConfig = {\n            yDataValue: formatedVal,\n            xDataValue: numberFormatter.xAxis(label),\n            yaxisName: parseUnsafeString(chartAttr.yaxisname),\n            xaxisName: parseUnsafeString(chartAttr.xaxisname),\n            zDataValue: numberFormatter.dataLabels(config.z)\n          };\n          toolText = parseTooltext(config.setTooltext, macroIndices,\n            parserConfig, setData, chartAttr, JSONData);\n        } else {\n          if (conf.seriesNameInTooltip) {\n            seriesname = getFirstValue(JSONData && JSONData.seriesname);\n          }\n          toolText = seriesname ? seriesname + tooltipSepChar : BLANKSTRING;\n          toolText += label ? numberFormatter.xAxis(label) + tooltipSepChar : BLANKSTRING;\n          toolText += formatedVal;\n          toolText += setData.z ? tooltipSepChar +\n            numberFormatter.formatValue(setData.z) : BLANKSTRING;\n        }\n      }\n      config.toolText = toolText;\n      // conf.showRegressionLine && pointValueWatcher(config.x, config.y, regressionObj);\n\n      hoverEffects = config.hoverEffects = {};\n      // Hover attributes parsing\n      if (conf.showHoverEffect !== 0) {\n        quickEnabled = hoverEffects.enabled = pluck(\n          setData.hoveralpha, JSONData.hoveralpha, chartAttr.bubblehoveralpha, setData.hovercolor,\n          JSONData.hovercolor, JSONData.bubblehovercolor, chartAttr.bubblehovercolor,\n          setData.borderhovercolor, JSONData.borderhovercolor, chartAttr.plotborderhovercolor,\n          setData.borderhoveralpha, JSONData.borderhoveralpha, chartAttr.plotborderhoveralpha,\n          setData.hoverscale, JSONData.bubblehoverscale, chartAttr.bubblehoverscale,\n          setData.borderhovercolor, JSONData.borderhovercolor, chartAttr.plotborderhovercolor,\n          setData.borderhoverthickness, JSONData.borderhoverthickness,\n          chartAttr.plotborderhoverthickness, setData.negativehovercolor, JSONData.negativeColor,\n          chartAttr.negativecolor, setData.is3donhover, chartAttr.plotfillhovercolor,\n          JSONData.is3donhover, chartAttr.is3donhover, UNDEF\n        ) !== UNDEF;\n\n        hoverEffects.negativeColor = pluck(setData.negativehovercolor,\n          JSONData.negativehovercolor, chartAttr.negativehovercolor, conf.negativeColor);\n\n        hoverEffects.is3d = pluckNumber(setData.is3donhover,\n          JSONData.is3donhover, chartAttr.is3donhover, config.is3d);\n        hoverEffects.color = pluck(setData.hovercolor, JSONData.hovercolor,\n          JSONData.bubblehovercolor, chartAttr.plotfillhovercolor,\n          chartAttr.bubblehovercolor, config.is3d\n            ? colorObj.FCcolor.color : setColor);\n        hoverEffects.color = hoverEffects.negativeColor && setData.z < 0\n          ? hoverEffects.negativeColor : hoverEffects.color;\n        hoverEffects.scale = pluck(setData.hoverscale, JSONData.hoverscale, JSONData.bubblehoverscale,\n          chartAttr.bubblehoverscale, 1);\n        hoverEffects.color = getFirstColor(hoverEffects.color);\n        config.hoverColor = hoverEffects.color;\n        hoverEffects.alpha = pluck(setData.hoveralpha, JSONData.hoveralpha,\n          chartAttr.plotfillhoveralpha, chartAttr.bubblehoveralpha, setAlpha);\n        hoverEffects.borderColor = pluck(setData.borderhovercolor, JSONData.borderhovercolor,\n          chartAttr.plotborderhovercolor, conf.anchorBorderColor);\n        hoverEffects.borderAlpha = pluck(setData.borderhoveralpha, JSONData.borderhoveralpha,\n          chartAttr.plotborderhoveralpha, hoverEffects.alpha, conf.plotBorderAlpha);\n\n        hoverEffects.borderThickness = pluckNumber(setData.borderhoverthickness,\n          JSONData.borderhoverthickness, chartAttr.plotborderhoverthickness,\n          conf.anchorBorderThickness);\n        hoverEffects.color = hoverEffects.is3d ? getPointColor(hoverEffects.color,\n          hoverEffects.alpha) : {\n          FCcolor: {\n            color: hoverEffects.color,\n            alpha: hoverEffects.alpha\n          }\n        };\n        if (quickEnabled && conf.showHoverEffect) {\n          highLight = 0;\n        } else {\n          highLight = conf.showHoverEffect;\n        }\n\n        if (highLight === 1) {\n          isHoverColorString = typeof hoverEffects.color === 'string';\n\n          highlightColors = isHoverColorString\n            ? hoverEffects.color.split(/\\s{0,},\\s{0,}/)\n            : hoverEffects.color.FCcolor.color.split(/\\s{0,},\\s{0,}/);\n\n          hColorsLen = highlightColors.length;\n          for (hColorsLoop = 0; hColorsLoop < hColorsLen; hColorsLoop++) {\n            highlightColors[hColorsLoop] = getLightColor(highlightColors[hColorsLoop], 70);\n          }\n\n          if (isHoverColorString) {\n            hoverEffects.color = highlightColors.join(',');\n          } else {\n            hoverEffects.color.FCcolor.color = highlightColors.join(',');\n          }\n        }\n\n        if (quickEnabled === false) {\n          hoverEffects.enabled = Boolean(conf.showHoverEffect);\n        }\n      } else {\n        hoverEffects.enabled = false;\n      }\n    }\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    conf.yMin = yMin;\n    conf.yMax = yMax;\n    // conf.regressionData = conf.showRegressionLine &&\n    // this.getRegressionLineSeries(regressionObj, conf.showYOnX, len);\n    dataset.setState('dirty', true);\n    dataset.setState('visible', pluckNumber(JSONData.visible,\n      !Number(JSONData.initiallyhidden), 1) === 1);\n    chart.config.showLegend && dataset._addLegend();\n    dataset.setState('dirty', true);\n  }\n  /*\n   * Using kdtree algo for searching\n  */\n  _getHoveredPlot (x, y) {\n    var res = this.config.dataTree.getNeighbour({\n      x: x,\n      y: y\n    }, true, 'circle');\n    // searching neighbour from Kdtree with basic search flag on\n    if (res) {\n      return {\n        pointIndex: res.index || res.i,\n        hovered: true,\n        pointObj: res.data\n      };\n    }\n  }\n  /**\n   * Function to set hover cosmetics when hovered over plot\n   * @param {Object} dataObj\n   * @param {string} state state of the plot\n   * @param {boolean} hoverEnabled\n   */\n  _hoverPlotAnchor (dataObj, state, hoverEnabled) {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      graphic = dataObj.graphics,\n      setElem = graphic.element,\n      hoverAttr = state === ROLLOUT ? setElem.data(SETROLLOUTATTR)\n        : setElem.data(SETROLLOVERATTR);\n\n    if (hoverEnabled && setElem) {\n      // TODO: remove the dirty check after animation manager is merged\n      animationManager.setAnimationState && animationManager.setAnimationState(state === ROLLOUT ? 'mouseOut' : 'mouseOver');\n      animationManager.setAnimation({\n        el: setElem,\n        attr: hoverAttr,\n        component: dataset\n      });\n    }\n  }\n\n  _addLegend () {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      conf = dataset.config,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      legend = chart.getChildren('legend')[0],\n      JSONData = dataset.config.JSONData || {},\n      legendItem,\n      config;\n    if (conf.includeinlegend) {\n      config = {\n        enabled: conf.includeInLegend,\n        anchorSide: 1,\n        type: dataset.type,\n        label: conf.seriesname,\n        usePattern: conf.usePattern,\n        legendIconAlpha: pluckNumber(JSONData.legendiconalpha),\n        patternAttr: {\n          patternType: conf.patternType,\n          patternAngle: conf.patternAngle,\n          patternDensity: conf.patternDensity,\n          patternSize: conf.patternSize,\n          color: conf.anchorBgColor,\n          patternAlpha: conf.patternAlpha,\n          patternBgColor: conf.patternBgColor,\n          alpha: conf.plotFillAlpha\n        }\n      };\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      } else {\n        legendItem.configure({\n          style: legend.config.itemStyle,\n          hiddenStyle: legend.config.itemHiddenStyle,\n          datasetVisible: legend.config.datasetVisible,\n          hoverStyle: legend.config.itemHoverStyle\n        });\n      }\n      legendItem.configure(config);\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: conf.fillColor,\n          bgAlpha: pluckNumber(JSONData.legendiconbgalpha, JSONData.legendiconalpha, chartAttr.legendiconbgalpha, chartAttr.legendiconalpha, conf.plotFillAlpha),\n          borderAlpha: pluckNumber(JSONData.legendiconborderalpha, JSONData.legendiconalpha, chartAttr.legendiconborderalpha, chartAttr.legendiconalpha, '100'),\n          rawFillColor: conf.anchorBgColor,\n          rawStrokeColor: conf.anchorBorderColor,\n          stroke: conf.strokeColor\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item is dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n\n  getBubbleRadius (zValue) {\n    var dataset = this,\n      mathSqrt = math.sqrt,\n      dsConfig = dataset.config,\n      bubbleScale = dsConfig.bubbleScale,\n      minBubbleRadius = dsConfig.minBubbleRadius,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      // chartConfig = chart.config,\n      // to have diameter of the largest bubble as 25% of the smaller of the two dimensions of\n      // canvas\n      radiusLimit = mathMin(chartConfig.canvasHeight, chartConfig.canvasWidth) / 8,\n      chartLimits = this.getLinkedParent().getDataLimitRange(),\n      zMax = chartLimits.zMax,\n      sqrtMaxZ = mathSqrt(zMax),\n      sqrtBubbleZ = mathSqrt(zValue),\n      bubbleRadius;\n\n    // calculating radius with scaling\n    bubbleRadius = (mathRound(sqrtBubbleZ * radiusLimit / sqrtMaxZ) * bubbleScale) || 0;\n    // In case minimum radius for bubble is defined we have to honor it\n    if (minBubbleRadius) {\n      bubbleRadius = mathMax(bubbleRadius, minBubbleRadius);\n    }\n\n    return bubbleRadius;\n  }\n\n  // Create pixel coordinates for the plots\n  createCoordinates () {\n    var dataset = this,\n      dsComponents = dataset.components,\n      dsData = dsComponents.data,\n      yAxis = dataset.getFromEnv('yAxis'),\n      yBase = yAxis.getAxisBase(),\n      yBasePos = yAxis.getPixel(yBase),\n      xAxis = dataset.getFromEnv('xAxis'),\n      isVertical = xAxis.config.isVertical,\n      dataObj,\n      config,\n      previousY,\n      i,\n      Px,\n      Py,\n      Pb,\n      len = dsData.length,\n      dataStore = dsComponents.data;\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (dataObj === UNDEF) {\n        continue;\n      }\n\n      previousY = config._b;\n      Px = xAxis.getPixel(config._x);\n      Py = yAxis.getPixel(config._y);\n\n      Pb = previousY ? yAxis.getPixel(previousY) : yBasePos;\n\n      if (dataset.getName() === 'bubble') {\n        config.r = dataset.getBubbleRadius(config._z);\n        config.showValue = config.plotShowValue !== UNDEF\n          ? +config.plotShowValue\n          : (config.r >= config.plotMinRadiusForValue\n            ? dataset.config.showValues\n            : false);\n      }\n\n      if (isVertical) {\n        config._Px = Py;\n        config._Py = Px;\n        config._Pby = Py;\n        config._Pbx = Pb;\n      } else {\n        config._Px = Px;\n        config._Py = Py;\n        config._Pby = Pb;\n        config._Pbx = Px;\n      }\n    }\n  }\n\n  /**\n   * Parses the bubble attributes and calculates position\n   *\n   * @param {any} set\n   * @param {any} index\n   * @memberof BubbleDataset\n   */\n  parsePlotAttributes (set, index) {\n    var dataset = this,\n      JSONData = dataset.config.JSONData,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = chart.config,\n      conf = dataset.config,\n      bubbleRadius,\n      yPos,\n      xPos,\n      i = index,\n      config,\n      visible = dataset.getState('visible'),\n      toolText,\n      x,\n      y,\n      z,\n      setLink,\n      displayValue,\n      hoverEffects = {},\n      setRolloutAttr,\n      eventArgs,\n      borderThickness = conf.anchorBorderThickness,\n      kdTreeArr = [];\n\n    config = set.config;\n    x = pluckNumber(config.x, i);\n    y = config.y;\n    z = config.z;\n    setLink = config.setLink;\n    displayValue = config.displayValue;\n    toolText = config.toolText;\n    config.finalTooltext = config.toolText;\n    hoverEffects = config.hoverEffects;\n    if (y !== null) {\n      eventArgs = config.eventArgs || (config.eventArgs = {});\n\n      eventArgs.index = i;\n      eventArgs.link = setLink;\n      eventArgs.value = y;\n      eventArgs.y = y;\n      eventArgs.x = x;\n      eventArgs.z = z;\n      eventArgs.displayValue = displayValue;\n      eventArgs.toolText = toolText;\n      eventArgs.id = dataset.userID;\n      eventArgs.datasetIndex = dataset.config.index;\n      eventArgs.datasetName = JSONData.seriesname;\n      eventArgs.visible = visible;\n      eventArgs.color = config.color;\n      eventArgs.alpha = config.alpha;\n      eventArgs.is3dOnHover = hoverEffects.is3d;\n      eventArgs.hoverScale = hoverEffects.scale;\n      eventArgs.use3dLighting = config.is3d;\n      eventArgs.hoverColor = config.hoverColor;\n      eventArgs.hoverAlpha = hoverEffects.alpha;\n\n      if (conf.usePattern) {\n        eventArgs.pattern = {\n          patternType: config.patternType,\n          patternColor: config.color,\n          patternBgColor: config.patternBgColor === TRACKER_FILL ? UNDEF : config.patternBgColor\n        };\n        delete eventArgs.color;\n      } else {\n        delete eventArgs.pattern;\n      }\n\n      yPos = config._Py;\n      xPos = config._Px;\n\n      bubbleRadius = config.r;\n\n      kdTreeArr.push({\n        x: xPos,\n        y: yPos,\n        r: bubbleRadius\n      });\n\n      setRolloutAttr = config.setRolloutAttr = {\n        fill: toRaphaelColor(config.colorObj),\n        'stroke-width': conf.anchorBorderThickness,\n        stroke: toRaphaelColor({\n          color: conf.anchorBorderColor,\n          alpha: conf.plotBorderAlpha\n        }),\n        r: bubbleRadius\n      };\n\n      if (hoverEffects.enabled !== false) {\n        config.setRolloverAttr = {\n          fill: toRaphaelColor(hoverEffects.color),\n          'stroke-width': hoverEffects.borderThickness,\n          stroke: toRaphaelColor({\n            color: hoverEffects.borderColor,\n            alpha: hoverEffects.borderAlpha\n          }),\n          r: bubbleRadius * hoverEffects.scale\n        };\n      }\n      config.props = {\n        element: {\n          attr: {\n            cx: xPos,\n            cy: visible ? yPos : (chartConfig.canvasBottom + bubbleRadius),\n            r: bubbleRadius || 0,\n            fill: toRaphaelColor(config.colorObj),\n            'stroke-width': conf.anchorBorderThickness,\n            'visibility': visible,\n            stroke: setRolloutAttr.stroke\n          }\n        }\n      };\n      config.props.element.patternAttr = {\n        patternType: config.patternType,\n        patternAngle: config.patternAngle,\n        patternDensity: config.patternDensity,\n        patternSize: config.patternSize,\n        color: config.props.element.attr.fill,\n        patternAlpha: config.patternAlpha,\n        patternBgColor: config.patternBgColor,\n        alpha: config.alpha,\n        x: config.props.element.attr.cx,\n        y: config.props.element.attr.cy\n      };\n\n      config.trackerConfig || (config.trackerConfig = {});\n\n      config.trackerConfig.trackerRadius = mathMax(bubbleRadius + (borderThickness || 0 / 2), HTP);\n\n      set._xPos = xPos;\n      set._yPos = yPos;\n    }\n  }\n\n  /**\n   * Parses plot and label attributes during post space management\n   *\n   * @memberof BubbleDataset\n   */\n  allocatePosition () {\n    var dataset = this,\n      set,\n      i,\n      ln,\n      xPos,\n      yPos,\n      plotConfig,\n      r,\n      setDataArr = dataset.components.data,\n      kdTreeArr = [];\n\n    dataset.createCoordinates();\n    for (i = 0, ln = setDataArr.length; i < ln; i += 1) {\n      set = setDataArr[i];\n      dataset.parsePlotAttributes(set, i);\n      dataset.parseLabelAttributes(set, i);\n      if (set) {\n        plotConfig = set.config;\n        xPos = plotConfig._Px;\n        yPos = plotConfig._Py;\n        r = plotConfig.r || 0;\n        // Pushing object to custom array that will be required for K-D Tree Search Algorithm\n        // (in integer format)\n        kdTreeArr.push({\n          x: xPos,\n          y: yPos,\n          index: i,\n          data: set,\n          r: r\n        });\n      }\n    }\n\n    // Building KdTree\n    this.config.dataTree = new KdTree().buildKdTree(kdTreeArr);\n  }\n  /**\n   * This functions calculate the space required for a dataset and return that to the chart\n   * @return {Object} dimention\n   */\n  getCanvasPadding () {\n    var dataset = this,\n      conf = dataset.config || (dataset.config = {}),\n      components = dataset.components || {},\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      rotateValues = chartConfig.rotatevalues,\n      xAxis = dataset.getFromEnv('xAxis'),\n      dataLabelStyle = dataset.getFromEnv('dataLabelStyle'),\n      data = components.data || [],\n      dataLen = data.length,\n      firstData = conf.leftMostData || data[0],\n      lastData = conf.rightMostData || data[data.length - 1],\n      radiusLimit = mathMin(chartConfig.canvasHeight, chartConfig.canvasWidth) / 8,\n      sqrtMaxZ,\n      firstDataChangeFlag = 1,\n      secondDataChangeFlag = 1,\n      radiusFactor,\n      configAttr,\n      configAttrFirst,\n      configAttrLast,\n      dataConf,\n      zMax = chartConfig.zMax,\n      sqrtBubbleZ,\n      minPoint,\n      bubbleScale = conf.bubbleScale,\n      i,\n      xReduced,\n      xReducedFirst,\n      xReducedLast,\n      label,\n      bubbleRadius,\n      bubbleRadiusVal,\n      axisRange = xAxis.config.axisRange,\n      xAxisMax = axisRange.max,\n      xAxisMin = axisRange.min,\n      endPixel = xAxis.getPixel(xAxisMax),\n      startPixel = xAxis.getPixel(xAxisMin),\n      labelDimEnd = {},\n      labelDimStart = {},\n      maxPoint,\n      SmartLabel = dataset.getFromEnv('smartLabel'),\n      returnDimension = {\n        paddingLeft: 0,\n        paddingRight: 0\n      },\n      labelWidth = 0;\n\n    sqrtMaxZ = Math.sqrt(zMax);\n    radiusFactor = radiusLimit / sqrtMaxZ;\n    for (i = 0; i < dataLen; i++) {\n      configAttr = data[i].config;\n      configAttrFirst = firstData.config;\n      configAttrLast = lastData.config;\n\n      // finding the radius of the current point\n      sqrtBubbleZ = Math.sqrt(configAttr.z);\n      bubbleRadius = (Math.round(sqrtBubbleZ * radiusFactor) * bubbleScale) || 0;\n      bubbleRadiusVal = xAxis.getValue(bubbleRadius) - xAxisMin;\n      xReduced = configAttr.x - (bubbleRadiusVal / 2);\n\n      // finding the radius of the firstData\n      if (firstDataChangeFlag === 1) {\n        sqrtBubbleZ = Math.sqrt(configAttrFirst.z);\n        bubbleRadius = (Math.round(sqrtBubbleZ * radiusFactor) * bubbleScale) || 0;\n        bubbleRadiusVal = xAxis.getValue(bubbleRadius) - xAxisMin;\n        xReducedFirst = configAttrFirst.x - (bubbleRadiusVal / 2);\n      }\n\n      // finding the radius of the lastData\n      if (secondDataChangeFlag === 1) {\n        sqrtBubbleZ = Math.sqrt(configAttrLast.z);\n        bubbleRadius = (Math.round(sqrtBubbleZ * radiusFactor) * bubbleScale) || 0;\n        bubbleRadiusVal = xAxis.getValue(bubbleRadius) - xAxisMin;\n        xReducedLast = configAttrLast.x - (bubbleRadiusVal / 2);\n      }\n\n      firstDataChangeFlag = 0;\n      secondDataChangeFlag = 0;\n\n      if (xReducedFirst > xReduced) {\n        firstData = data[i];\n        firstDataChangeFlag = 1;\n      }\n\n      if (xReducedLast < xReduced) {\n        lastData = data[i];\n        secondDataChangeFlag = 1;\n      }\n    }\n    SmartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    SmartLabel.setStyle(dataLabelStyle);\n\n    if (firstData && firstData.config.showValue) {\n      dataConf = firstData.config;\n      label = dataConf.displayValue;\n      labelDimStart = SmartLabel.getOriSize(label);\n      labelWidth = rotateValues ? labelDimStart.height : labelDimStart.width;\n\n      minPoint = xAxis.getPixel(dataConf.x) - (labelWidth * 0.5);\n      if (startPixel > minPoint) {\n        returnDimension.paddingLeft = startPixel - minPoint;\n      }\n    }\n\n    if (lastData && lastData.config.showValue) {\n      dataConf = lastData.config;\n      label = dataConf.displayValue;\n      labelDimEnd = SmartLabel.getOriSize(label);\n      labelWidth = rotateValues ? labelDimEnd.height : labelDimEnd.width;\n\n      maxPoint = xAxis.getPixel(dataConf.x) + (labelWidth * 0.5);\n      if (endPixel < maxPoint) {\n        returnDimension.paddingRight = maxPoint - endPixel;\n      }\n    }\n\n    return returnDimension;\n  }\n  drawPlots () {\n    var dataset = this,\n      setElem,\n      setElemCheck,\n      hotElem,\n      animationManager = dataset.getFromEnv('animationManager'),\n      set,\n      i,\n      ln,\n      config,\n      setDataArr = dataset.components.data,\n      containers = dataset.getContainer(),\n      visible = dataset.getState('visible'),\n      dataLabelContainer = dataset.getContainer('labelGroup'),\n      animCallBack = function () {\n        if (visible === false) {\n          containers.plotGroup.hide();\n          containers.commonElemsGroup.hide();\n          dataLabelContainer && dataLabelContainer.hide();\n          dataset._containerHidden = true;\n        }\n      },\n      y,\n      hoverEffects = {},\n      label;\n\n    for (i = 0, ln = setDataArr.length; i < ln; i += 1) {\n      set = setDataArr[i];\n      config = set.config;\n      y = config.y;\n      setElem = set.graphics.element;\n      hoverEffects = config.hoverEffects;\n      hotElem = set.graphics.hotElement;\n      label = set.graphics.label;\n\n      if (y !== null) {\n        setElemCheck = set.graphics.element;\n        // creation of the plots\n        setElem = animationManager.setAnimation({\n          el: setElemCheck || 'circle',\n          attr: config.props.element.attr,\n          label: 'circle',\n          callback: animCallBack,\n          component: dataset,\n          container: containers.plotGroup\n        });\n        setElem.addPattern(config.props.element.patternAttr, dataset.config.usePattern);\n        if (!setElemCheck) {\n          set.graphics.element = setElem;\n        }\n        setElem.show();\n\n        // Set the anchorRadius and anchorHoverRadius to bubble radius\n        setElem.data('hoverEnabled', hoverEffects.enabled)\n          .data(SETROLLOVERATTR, config.setRolloverAttr)\n          .data(SETROLLOUTATTR, config.setRolloutAttr)\n          .data('anchorRadius', config.r)\n          .data('anchorHoverRadius', config.r);\n\n        setElem && setElem.data(EVENTARGS, config && config.eventArgs);\n      } else {\n        setElem && setElem.hide();\n        hotElem && hotElem.hide();\n        label && label.hide();\n      }\n      setElem && (setElem.isDrawn = true);\n    }\n  }\n\n  getDataLimits () {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = chart.config,\n      conf = dataset.config,\n      maxValue = conf.yMax,\n      minValue = conf.yMin,\n      infMin = -Infinity,\n      infMax = +Infinity,\n      transposeAxis = chartConfig.transposeAxis,\n      xMin = conf.xMin,\n      xMax = conf.xMax,\n      zMax = conf.max,\n      zMin = conf.min,\n      regressionPoints = dataset.getRegressionPoints();\n\n    if (dataset.getState('visible') === false && transposeAxis) {\n      maxValue = infMin;\n      minValue = infMax;\n      xMin = infMax;\n      xMax = infMin;\n    }\n    if (regressionPoints) {\n      maxValue = Math.max(maxValue, regressionPoints.max);\n      minValue = Math.min(minValue, regressionPoints.min);\n      xMax = Math.max(xMax, regressionPoints.xMax);\n      xMin = Math.min(xMin, regressionPoints.xMin);\n    }\n    return {\n      max: maxValue,\n      min: minValue,\n      xMin: xMin,\n      xMax: xMax,\n      zMax: zMax,\n      zMin: zMin\n    };\n  }\n}\nexport default BubbleDataset;\n","export default {\n  'initial.dataset.bubble': function () {\n    return {\n      'circle.appearing': (inputJSON) => {\n        return [{\n          initialAttr: {\n            cx: inputJSON.attr.cx,\n            cy: inputJSON.attr.cy,\n            r: 0\n          },\n          slot: 'plot'\n        }];\n      },\n      'group.appearing': (inputJSON) => {\n        if (inputJSON.attr.name === 'label-group') {\n          return [{\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'final'\n          }];\n        }\n        return [{\n          initialAttr: {\n            opacity: 1\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","\nimport {ComponentInterface} from '@fusioncharts/core/src/component-interface';\nimport { pluck } from '@fusioncharts/core/src/lib';\n\nclass BubbleDatasetGroup extends ComponentInterface {\n  /**\n   * constructor function this class\n   */\n  constructor () {\n    super();\n    this.setState('visible', true);\n  }\n  /**\n   * Create child containers\n   */\n  createContainer () {\n    let manager = this,\n      key,\n      animationManager = manager.getFromEnv('animationManager'),\n      parent = manager.getLinkedParent(),\n      pContainer,\n      parentChildContainers = parent.getChildContainer();\n\n    for (key in parentChildContainers) {\n      pContainer = parentChildContainers[key];\n\n      !manager.getChildContainer(key) && manager.addChildContainer(key,\n        animationManager.setAnimation({\n          el: 'group',\n          attr: {name: 'manager-' + key},\n          component: manager,\n          container: pContainer\n        }));\n    }\n  }\n\n  /**\n   * function call sync draw of its children\n   */\n  draw () {\n    this.createContainer();\n  }\n\n  getDataLimitRange () {\n    var vcanvas = this,\n      children = vcanvas.getChildren(),\n      i,\n      key,\n      child,\n      len,\n      limits,\n      zMax = -Infinity,\n      zMin = +Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity;\n\n    for (key in children) {\n      if (children.hasOwnProperty(key)) {\n        child = children[key];\n        if (child instanceof Array) {\n          len = child.length;\n          for (i = 0; i < len; i++) {\n            if (child[i].getState('removed')) {\n              continue;\n            }\n            limits = child[i].getDataLimits();\n            xMax = Math.max(xMax, limits.xMax || -Infinity);\n            xMin = Math.min(xMin, limits.xMin || +Infinity);\n            zMax = Math.max(zMax, limits.zMax || -Infinity);\n            zMin = Math.min(zMin, limits.zMin || +Infinity);\n          }\n        }\n      }\n    }\n\n    zMax = zMax === -Infinity ? 0 : zMax;\n    zMin = zMin === +Infinity ? 0 : zMin;\n    return {\n      xMax: xMax,\n      xMin: xMin,\n      zMax: zMax,\n      zMin: zMin\n    };\n  }\n\n  /**\n   * function to accomodate the changes of its child and notify its parent for further action if its needed\n   * @param  {Object} updateInfo is an object with the informations about the changes in its child\n   */\n  childChanged (updateInfo = {}) {\n    let manager = this,\n      config = manager.config,\n      parent = manager.getLinkedParent(),\n      range,\n      padding,\n      changeInfo = {},\n      ifInformParent;\n\n    if (updateInfo.hide !== false || updateInfo.show !== false) {\n      manager._mapChildren((child) => {\n        child.setState('dirty', true);\n      });\n      ifInformParent = true;\n    }\n    if (updateInfo.dataLimitChanged !== false) {\n      range = manager.getDataLimits();\n      if (range.min !== config.range.min || range.max !== config.range.max) {\n        config.range.min = range.min;\n        config.range.max = range.max;\n        changeInfo.dataLimitChanged = true;\n        ifInformParent = true;\n      }\n    }\n    if (updateInfo.paddingChanged !== false) {\n      padding = manager.getAxisValuePadding();\n      if (padding.left !== config.padding.left || padding.right !== config.padding.right) {\n        config.padding.left = padding.left;\n        config.padding.right = padding.right;\n        changeInfo.paddingChanged = true;\n        ifInformParent = true;\n      }\n    }\n    if (ifInformParent) {\n      parent.childChanged && parent.childChanged(changeInfo);\n    } else {\n      manager.asyncDraw();\n    }\n  }\n  /**\n   * function to get value for axis padding from is children\n   * @return {Object} with left and right member\n   */\n  getAxisValuePadding () {\n    let paddingObj = {},\n      axisPaddingLeft = -Infinity,\n      axisPaddingRight = -Infinity;\n    this._mapChildren((child) => {\n      if (child.getState('removed') || child.getState('visible') === false) {\n        return;\n      }\n      paddingObj = (child.getAxisValuePadding && child.getAxisValuePadding()) || {};\n      axisPaddingLeft = Math.max(axisPaddingLeft, paddingObj.left || -Infinity);\n      axisPaddingRight = Math.max(axisPaddingRight, paddingObj.right || -Infinity);\n    });\n    if (axisPaddingLeft === -Infinity) {\n      axisPaddingLeft = 0;\n    }\n    if (axisPaddingRight === -Infinity) {\n      axisPaddingRight = 0;\n    }\n    if (!this.config.padding) {\n      this.config.padding = {};\n      this.config.padding.left = axisPaddingLeft;\n      this.config.padding.right = axisPaddingRight;\n    }\n    return {\n      left: axisPaddingLeft,\n      right: axisPaddingRight\n    };\n  }\n  /**\n   * function to calculate maximum canvas padding is required by the children of this manager\n   * @return {Object} contains dimension required\n   */\n  getCanvasPadding () {\n    var manager = this,\n      dim,\n      key,\n      returnDimension = {\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        paddingBottom: 0\n      };\n    manager._mapChildren((child) => {\n      if (child.getState('removed')) {\n        return;\n      }\n      dim = (child.getCanvasPadding && child.getCanvasPadding()) || {};\n      for (key in dim) {\n        if (dim.hasOwnProperty(key)) {\n          returnDimension[key] = Math.max(dim[key], returnDimension[key]);\n        }\n      }\n    });\n    return returnDimension;\n  }\n  /**\n   * function to get data limits from its child datasets\n   * return minimun and maximum value among the datasets limit\n   * @return {Object} [min, max]\n   */\n  getDataLimits () {\n    var manager = this,\n      chart = manager.getFromEnv('chart'),\n      infMin = -Infinity,\n      infMax = +Infinity,\n      max = infMin,\n      min = infMax,\n      xMin = infMax,\n      xMax = infMin,\n      maxminObj,\n      xMaxValue,\n      xMinValue,\n      getMaxMin = function (_maxminObj) {\n        xMaxValue = pluck(_maxminObj.xMax, infMin);\n        xMinValue = pluck(_maxminObj.xMin, infMax);\n        max = Math.max(max, _maxminObj.max);\n        min = Math.min(min, _maxminObj.min);\n        xMax = Math.max(xMax, xMaxValue);\n        xMin = Math.min(xMin, xMinValue);\n      };\n\n    manager._mapChildren((child) => {\n      if (!child.getDataLimits || child.getState('removed')) {\n        return;\n      }\n      maxminObj = child.getDataLimits();\n      getMaxMin(maxminObj);\n    });\n\n    (max === -Infinity) && (max = 0);\n    (min === +Infinity) && (min = 0);\n    if (!this.config.range) {\n      this.config.range = {};\n      this.config.range.min = min;\n      this.config.range.max = max;\n      this.config.range.xMin = xMin;\n      this.config.range.xMax = xMax;\n    }\n    chart.config.yMax = max;\n    chart.config.yMin = min;\n\n    return { min, max, xMin, xMax };\n  }\n  /**\n   * it return the status of dataset visiblity\n   * @return {boolean} returns the visiblity status of dataset\n   */\n  isVisible () {\n    return !this.isNotVisible;\n  }\n  getType () {\n    return 'manager';\n  }\n  getName () {\n    return 'BubbleGroupManager';\n  }\n  remove () {\n    let manager = this;\n    manager._mapChildren((child) => {\n      if (!child.getState('removed')) {\n        child.remove();\n      }\n    });\n    super.remove();\n  }\n}\nexport default BubbleDatasetGroup;\n","import Scatter from '@fusioncharts/charts/src/chart/scatter';\nexport default Scatter;\n","import Msstackedcolumn2d from '@fusioncharts/charts/src/chart/msstackedcolumn2d';\nexport default Msstackedcolumn2d;\n","import Stackedarea2d from '@fusioncharts/charts/src/chart/stackedarea2d';\nexport default Stackedarea2d;\n","\nimport MSArea from '../msarea';\nimport CartesianStackGroup from '../../dataset/groups/cartesian-stack';\nimport { HUNDREDSTRING, pluck, parseUnsafeString } from '@fusioncharts/core/src/lib';\nimport pluckNumber from '@fusioncharts/utils/src/pluck-number';\n\nconst CHART_STR = 'Stacked Area Chart';\nclass StackedArea2D extends MSArea {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'StackedArea2D';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'StackedArea2D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.plotfillalpha = HUNDREDSTRING;\n    config.showSum = 0;\n    config.isstacked = 1;\n    // for realtime stacked area and stacked area chart api the overlapping of sum labels\n    // has been fixed and this has been used to reduce the affected subset\n    this.addToEnv('useImprovedLabelPlacement', true);\n    // The border is a line\n    // Anchor must be at higher position than border\n    this.addToEnv('useLinePlotGroupForAnchorPlacement', true);\n  }\n\n  configureAttributes (rawAttr) {\n    super.configureAttributes(rawAttr);\n    let config = this.config,\n      chartAttrs = this.getFromEnv('chart-attrib');\n\n    config.showSum = pluckNumber(chartAttrs.showsum, config.showSum);\n\n    // if show sum is on then default value position will be below for better visual\n    if (config.showSum) {\n      config.valueposition = parseUnsafeString(pluck(chartAttrs.valueposition, 'below'));\n    }\n  }\n\n  /** This method return the dataset-group definations for this charts **/\n  getDSGroupdef () {\n    return CartesianStackGroup;\n  }\n}\nexport default StackedArea2D;\n","import Stackedbar3d from '@fusioncharts/charts/src/chart/stackedbar3d';\nexport default Stackedbar3d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSBar3D from '../msbar3d';\nimport StackGroup from '../../dataset/groups/cartesian-stack';\nimport Bar3DDataset from '../../dataset/bar3d';\n\nconst CHART_STR = '3D Stacked Bar Chart';\n/**\n * Creates class StackedBar3D\n */\nclass StackedBar3D extends MSBar3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'StackedBar3D';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'StackedBar3D';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.enablemousetracking = true;\n    config.maxbarheight = 50;\n    config.isstacked = true;\n    config.showSum = 0;\n  }\n\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object} Multiseries bar group definition\n   * @memberof StackedBar3D\n   */\n  getDSdef () {\n    return Bar3DDataset;\n  }\n\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object}       Multiseries column group definition\n   */\n  getDSGroupdef () {\n    return StackGroup;\n  }\n}\nexport default StackedBar3D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSBarCartesian3D from '../_internal/msbarcartesian3d';\nimport Bar3Dgroup from '../../dataset/groups/column-multiseries';\nimport Bar3DDataset from '../../dataset/bar3d';\nimport datasetFactory from '../../factories/multiseries3d-dataset';\n\nconst MS_BAR3D_CHART = 'Multi-series 3D Bar Chart',\n  BAR3D_STR = 'bar3d';\n/**\n * Creates class MSBar3D\n */\nclass MSBar3D extends MSBarCartesian3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSBar3D';\n  }\n  /**\n   * Constructor function for MSBar3D\n   */\n  constructor () {\n    super();\n    this.defaultSeriesType = BAR3D_STR;\n    // this.fireGroupEvent = true;\n    this.defaultPlotShadow = 1;\n    this.isBar = true;\n    this.defaultZeroPlaneHighlighted = false;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSBar3D';\n  }\n\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.friendlyName = MS_BAR3D_CHART;\n    config.hasLegend = true;\n    config.defaultDatasetType = BAR3D_STR;\n    config.showplotborder = 0;\n    config.enablemousetracking = true;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object}       Column dataset definition\n   */\n  getDSdef () {\n    return Bar3DDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object}       Multiseries column group definition\n   */\n  getDSGroupdef () {\n    return Bar3Dgroup;\n  }\n}\nexport default MSBar3D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSBarCartesian from './msbarcartesian';\nimport canvas3dFactory from '../../factories/canvas-3d-axis-ref-cartesian';\nimport datasetFactory from '../../factories/multiseries3d-dataset';\n\n/**\n * Creates class MSBarCartesian3D\n */\nclass MSBarCartesian3D extends MSBarCartesian {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.registerFactory('canvas', canvas3dFactory);\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSBarCartesian3D';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSBarCartesian3D';\n  }\n\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.drawTrendRegion = 0;\n  }\n\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.showplotborder = 0;\n    config.showzeroplaneontop = 0;\n  }\n}\nexport default MSBarCartesian3D;\n","import { componentFactory, datasetFactory } from '@fusioncharts/core/src/lib';\nimport Column3dGroup from '../dataset/groups/column3d';\n\n/**\n * Create dataset for 3d charts\n * @param {Object} chart Chart API\n */\nexport default function (chart) {\n  let jsonData = chart.getFromEnv('dataSource'),\n    datasetsJSON = jsonData.dataset,\n    children = chart.getChildren(),\n    canvas = children.canvas[0],\n    vCanvas,\n    datasetParent = vCanvas = canvas.getChildren('vCanvas')[0],\n    DsGroupClass,\n    DSClass,\n    dsType = chart.config.defaultDatasetType || '',\n    groupManager,\n    groupManager3d;\n\n  if (!datasetsJSON) {\n    chart.setChartMessage();\n  }\n\n  componentFactory(vCanvas, Column3dGroup, 'datasetGroup_' + dsType);\n  groupManager3d = vCanvas.getChildren('datasetGroup_' + dsType)[0];\n\n  DsGroupClass = chart.getDSGroupdef();\n  componentFactory(groupManager3d, DsGroupClass, 'datasetGroup_' + dsType, 1, [{}]);\n  groupManager = groupManager3d.getChildren('datasetGroup_' + dsType);\n  groupManager && (datasetParent = groupManager[0]);\n  DSClass = chart.getDSdef();\n\n  datasetFactory(datasetParent, DSClass, 'dataset', datasetsJSON.length, datasetsJSON);\n}\n","import Stackedbar2d from '@fusioncharts/charts/src/chart/stackedbar2d';\nexport default Stackedbar2d;\n","import MSBar2D from '../msbar2d/';\nimport CartesianStackGroup from '../../dataset/groups/cartesian-stack';\n\nconst CHART_STR = 'Stacked Bar Chart';\nclass StackedBar2D extends MSBar2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'StackedBar2D';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'StackedBar2D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.enablemousetracking = true;\n    config.maxbarheight = 50;\n    config.isstacked = true;\n    config.showSum = 0;\n  }\n  /** This method return the dataset-group definations for this charts **/\n  getDSGroupdef () {\n    return CartesianStackGroup;\n  }\n}\n\nexport default StackedBar2D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport MSBarCartesian from '../_internal/msbarcartesian';\nimport Bar2DDataset from '../../dataset/bar2d';\nimport ColumnMultiSeriesGroup from '../../dataset/groups/column-multiseries';\nimport datasetFactory from '../../factories/multiseries-dataset';\n\nconst MS_BAR_CHART = 'Multi-series Bar Chart',\n  BAR2D_STR = 'bar2d';\n/**\n * Class for MSBar2d chart\n * @class MSBar2D\n * @extends {MSBarCartesian}\n */\nclass MSBar2D extends MSBarCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSBar2D';\n  }\n  /**\n   * Creates an instance of MSBar2D.\n   * @memberof MSBar2D\n   */\n  constructor () {\n    super();\n    this.isBar = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSBar2D';\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object} dataset\n   */\n  getDSdef () {\n    return Bar2DDataset;\n  }\n  /** This method return the dataset-group definations for this charts\n    * @return {Object} dataset group **/\n  getDSGroupdef () {\n    return ColumnMultiSeriesGroup;\n  }\n  /**\n   * Function to create dataset of MSBar2D chart.\n   * @memberof MSBar2D\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = MS_BAR_CHART;\n    config.hasLegend = true;\n    config.defaultDatasetType = BAR2D_STR;\n  }\n}\nexport default MSBar2D;\n","import Stackedcolumn3d from '@fusioncharts/charts/src/chart/stackedcolumn3d';\nexport default Stackedcolumn3d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSColumn3D from '../mscolumn3d';\nimport Column3DDataset from '../../dataset/column3d';\nimport StackGroup from '../../dataset/groups/cartesian-stack';\n\nconst CHART_STR = '3D Stacked Column Chart';\n/**\n * Creates class for StackedColumn3D\n */\nclass StackedColumn3D extends MSColumn3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'StackedColumn3D';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'StackedColumn3D';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.showSum = 0;\n    //  config.showplotborder = 0;\n    config.maxbarheight = 50;\n    config.enablemousetracking = true;\n    config.isstacked = true;\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object} Column Dataset definition\n   */\n  getDSdef () {\n    return Column3DDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object}       Multiseries column group definition\n   */\n  getDSGroupdef () {\n    return StackGroup;\n  }\n}\nexport default StackedColumn3D;\n//  export { _mouseEvtHandler };\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSCartesian3D from '../_internal/mscartesian3d';\nimport Column3DDataset from '../../dataset/column3d';\nimport ColumnMultiSeriesgroup from '../../dataset/groups/column-multiseries';\n\nconst MS_COLUMN3D_CHART = 'Multi-series 3D Column Chart',\n  COLUMN3D_STR = 'column3d';\n/**\n * Creates class MSColumn3D\n */\nclass MSColumn3D extends MSCartesian3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSColumn3D';\n  }\n  /**\n   * Constructor function for class MSColumn3D\n   */\n  constructor () {\n    super();\n\n    // Default shadow is visible for 3D variant of MSColumn2D chart\n    this.defaultPlotShadow = 1;\n    //  this.fireGroupEvent = true;\n    this.defaultZeroPlaneHighlighted = false;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSColumn3D';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.friendlyName = MS_COLUMN3D_CHART;\n    config.defaultDatasetType = COLUMN3D_STR;\n    config.showplotborder = 0;\n    config.enablemousetracking = true;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object}       Column dataset definition\n   */\n  getDSdef () {\n    return Column3DDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object}       Multiseries column group definition\n   */\n  getDSGroupdef () {\n    return ColumnMultiSeriesgroup;\n  }\n}\n\nexport default MSColumn3D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSCartesian from './mscartesian';\nimport canvas3dFactory from '../../factories/canvas-3d-axis-ref-cartesian';\nimport datasetFactory from '../../factories/multiseries3d-dataset';\n/**\n * Creates class for MSCartesian3D\n */\nclass MSCartesian3D extends MSCartesian {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.registerFactory('canvas', canvas3dFactory);\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSCartesian3D';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSCartesian3D';\n  }\n\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.drawTrendRegion = 0;\n  }\n  /**\n   * Sets default configuration of chart elements\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.showplotborder = 0;\n    config.drawcrosslineontop = 0;\n    config.showzeroplaneontop = 0;\n  }\n}\n\nexport default MSCartesian3D;\n","import StackedColumn2d from '@fusioncharts/charts/src/chart/stackedcolumn2d';\nexport default StackedColumn2d;\n","\nimport MSColumn2D from '../mscolumn2d';\nimport ColumnDataset from '../../dataset/column';\nimport CartesianStackGroup from '../../dataset/groups/cartesian-stack';\n\nconst CHART_STR = 'Stacked Column Chart';\nclass StackedColumn2D extends MSColumn2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'StackedColumn2D';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'StackedColumn2D';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.isstacked = true;\n    config.showSum = 0;\n  }\n\n  /** This method return the dataset definations for this charts **/\n  getDSdef () {\n    return ColumnDataset;\n  }\n  /** This method return the dataset-group definations for this charts **/\n  getDSGroupdef () {\n    return CartesianStackGroup;\n  }\n}\nexport default StackedColumn2D;\n","import Msstackedcolumn2dlinedy from '@fusioncharts/charts/src/chart/msstackedcolumn2dlinedy';\nexport default Msstackedcolumn2dlinedy;\n","import Stackedcolumn3dlinedy from '@fusioncharts/charts/src/chart/stackedcolumn3dlinedy';\nexport default Stackedcolumn3dlinedy;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSColumn3DLineDy from '../mscolumn3dlinedy';\nimport Column3DGroup from '../../dataset/groups/cartesian-stack';\nvar UNDEF,\n  CHART_STR = 'Stacked 3D Column and Line Chart',\n  LINE_STR = 'line',\n  COLUMN3D_STR = 'column3d';\n/**\n * Creates class for StackedColumn3DLineDy\n */\nclass StackedColumn3DLineDy extends MSColumn3DLineDy {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'StackedColumn3DLineDy';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'StackedColumn3DLineDy';\n  }\n  /**\n   * Sets default configuration of chart elements\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.sDefaultDatasetType = LINE_STR;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = COLUMN3D_STR;\n    config.use3dlineshift = 1;\n    config.isdual = true;\n    config.isstacked = true;\n    config.showplotborder = 0;\n    config.enablemousetracking = true;\n    config.showSum = 0;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @param  {string} name is type of dataset group\n   * @return {Object} <dataset group class>     dataset group class\n   */\n  getDSGroupdef (name) {\n    return name === 'column3d' ? Column3DGroup : UNDEF;\n  }\n}\nexport default StackedColumn3DLineDy;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSDybaseCartesian3D from '../_internal/msdybasecartesian3d';\nimport Column3DDataset from '../../dataset/column3d';\nimport LineDataset from '../../dataset/line';\nimport Column3DGroup from '../../dataset/groups/column-multiseries';\nimport datasetFactory from '../../factories/combi-dual-y-3d-dataset';\n\nlet UNDEFINED,\n  HUNDREDSTRING = '100',\n  SEVENTYSTRING = '70',\n  MS_3D_COLUMN_LINE_CHART = 'Multi-series 3D Column and Line Chart',\n  LINE_STR = 'line',\n  COLUMN3D_STR = 'column3d';\n/**\n * Creates class for MSColumn3DLineDy\n */\nclass MSColumn3DLineDy extends MSDybaseCartesian3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSColumn3DLineDy';\n  }\n  /**\n   * Constructor function of MSColumn3DLineDy class\n   */\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n    this.isDual = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSColumn3DLineDy';\n  }\n  /**\n   * Sets default configuration of chart elements\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.sDefaultDatasetType = LINE_STR;\n    config.friendlyName = MS_3D_COLUMN_LINE_CHART;\n    config.defaultDatasetType = COLUMN3D_STR;\n    config.use3dlineshift = 1;\n    config.isdual = true;\n    config.showplotborder = 0;\n    config.enablemousetracking = true;\n\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEFINED;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEFINED;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEFINED;\n    config.anchorbordercolor = UNDEFINED;\n    config.anchorradius = 3;\n    config.showvalues = 1;\n    config.plotfillalpha = SEVENTYSTRING;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEFINED;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param  {string} name type of dataset class\n   * @return {Object}      dataset class\n   */\n  getDSdef (name) {\n    return name === 'line' ? LineDataset : Column3DDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @param  {string} name is type of dataset group\n   * @return {Object} <dataset group class>     dataset group class\n   */\n  getDSGroupdef (name) {\n    return name === 'column3d' ? Column3DGroup : UNDEFINED;\n  }\n\n  /**\n   * function to return dataset type applicable for this chart\n   * @param   {string}  name            dataset type\n   * @param   {boolean} secondaryAxis   dataset type for secondary axis\n   * @return  {string}                  dataset type applicable for this chart\n   */\n  getDSType (name, secondaryAxis) {\n    return ((name && name.toLowerCase() === 'line') || secondaryAxis) ? 'line' : 'column3d';\n  }\n}\nexport default MSColumn3DLineDy;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSDyBaseCartesian from './msdybasecartesian';\nimport canvas3dFactory from '../../factories/canvas-3d-axis-ref-cartesian';\n\n/**\n * Creates class for MSDybaseCartesian3D\n */\nclass MSDybaseCartesian3D extends MSDyBaseCartesian {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.registerFactory('canvas', canvas3dFactory);\n  }\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.drawTrendRegion = 0;\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSDybaseCartesian3D';\n  }\n  /**\n   * Sets default configuration\n   * @memberof MSDybaseCartesian3D\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.is3D = true;\n    /*\n      * This will change layer of zero plane\n      * from 3 to 1.\n    */\n    this.config.showzeroplaneontop = 0;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSDybaseCartesian3D';\n  }\n}\nexport default MSDybaseCartesian3D;\n","import Column3dGroup from '../dataset/groups/column3d';\nimport { pluck, componentFactory, datasetFactory } from '@fusioncharts/core/src/lib';\nimport { removeComponents } from './dataset.helper';\nlet MULTISERIESCOLUMNMANAGER = 'multiseriesColumnManager',\n  MULTISERIESCOLUMNMANAGER3D = 'multiseriesColumnManager3D';\n/**\n * function to  create dataset, groupmaneger.\n * assign dataset to group manager.\n * @param {Object} chart Chart API\n **/\nexport default function (chart) {\n  let jsonData = chart.getFromEnv('dataSource'),\n    datasetsJSON = jsonData.dataset,\n    children = chart.getChildren(),\n    canvas = children.canvas[0],\n    vCanvasArr = canvas.getChildren('vCanvas'),\n    vCanvas = vCanvasArr[0],\n    svCanvas = vCanvasArr[1],\n    datasetJSON,\n    isdual = chart.getFromEnv('chartConfig').isdual,\n    i,\n    canvasDatasetsDef = {\n      vCanvasDatasetsDef0: {},\n      vCanvasDatasetsDef1: {}\n    },\n    manager3D,\n    datasetsDef,\n    datasetDef,\n    DsGroupClass,\n    dsType,\n    parentyaxis,\n    relatedVCanvas,\n    relatedPrevDatasetMap,\n    prevDatasetMap = {\n      vCanvas0: {},\n      vCanvas1: {}\n    };\n\n  if (!datasetsJSON) {\n    chart.setChartMessage();\n  }\n\n  for (i = 0; i < datasetsJSON.length; i++) {\n    datasetJSON = datasetsJSON[i];\n    parentyaxis = datasetJSON.parentyaxis || '';\n    if (parentyaxis.toLowerCase() === 's' && isdual) {\n      dsType = pluck(datasetJSON.renderas, chart.config.sDefaultDatasetType);\n      relatedVCanvas = svCanvas;\n      relatedPrevDatasetMap = prevDatasetMap.vCanvas1;\n      datasetsDef = canvasDatasetsDef.vCanvasDatasetsDef1;\n    } else {\n      dsType = pluck(datasetJSON.renderas, chart.config.defaultDatasetType);\n      relatedVCanvas = vCanvas;\n      relatedPrevDatasetMap = prevDatasetMap.vCanvas0;\n      datasetsDef = canvasDatasetsDef.vCanvasDatasetsDef0;\n    }\n    dsType = chart.getDSType(dsType, (parentyaxis.toLowerCase() === 's'));\n    DsGroupClass = chart.getDSGroupdef(dsType, parentyaxis);\n    if (DsGroupClass) {\n      componentFactory(relatedVCanvas, Column3dGroup, MULTISERIESCOLUMNMANAGER3D);\n      manager3D = relatedVCanvas.getChildren(MULTISERIESCOLUMNMANAGER3D)[0];\n      relatedPrevDatasetMap[manager3D.getName()] = true;\n      componentFactory(manager3D, DsGroupClass, MULTISERIESCOLUMNMANAGER);\n      relatedPrevDatasetMap[DsGroupClass.getName().toLowerCase()] = true;\n    }\n    relatedPrevDatasetMap[dsType.toLowerCase()] = true;\n    if (datasetsDef[dsType]) {\n      datasetsDef[dsType].conf.push(datasetJSON);\n      datasetsDef[dsType].indices.push(i);\n    } else {\n      datasetsDef[dsType] = {};\n      datasetsDef[dsType].indices = [i];\n      datasetsDef[dsType].classDef = chart.getDSdef(dsType);\n      datasetsDef[dsType].conf = [datasetJSON];\n      datasetsDef[dsType].pYAxis = parentyaxis.toLowerCase();\n      datasetsDef[dsType].parent =\n        DsGroupClass ? manager3D.getChildren(MULTISERIESCOLUMNMANAGER)[0] : relatedVCanvas;\n    }\n  }\n  for (let key in canvasDatasetsDef) {\n    if (canvasDatasetsDef.hasOwnProperty(key)) {\n      datasetsDef = canvasDatasetsDef[key];\n      for (dsType in datasetsDef) {\n        if (datasetsDef.hasOwnProperty(dsType)) {\n          datasetDef = datasetsDef[dsType];\n          if (datasetDef.parent.getType() === 'group') {\n            datasetDef.parent.configure(datasetDef.conf);\n          }\n          datasetFactory(datasetDef.parent, datasetDef.classDef, 'dataset_' + dsType,\n            datasetDef.conf.length, datasetDef.conf, datasetDef.indices);\n        }\n      }\n    }\n  }\n\n  removeComponents(vCanvasArr[0], Object.keys(prevDatasetMap.vCanvas0));\n  removeComponents(vCanvasArr[1], Object.keys(prevDatasetMap.vCanvas1));\n}\n","import Mscolumn3dlinedy from '@fusioncharts/charts/src/chart/mscolumn3dlinedy';\nexport default Mscolumn3dlinedy;\n","import Mscombidy2d from '@fusioncharts/charts/src/chart/mscombidy2d';\nexport default Mscombidy2d;\n","import MSCombiDY3D from '@fusioncharts/charts/src/chart/mscombidy3d';\nexport default MSCombiDY3D;\n","// Parent class that imposes component flow\nimport MSDYBasecartesian3D from '../_internal/msdybasecartesian3d';\n// Dataset imports\nimport Column3DDataset from '../../dataset/column3d';\nimport AreaDataset from '../../dataset/area';\nimport LineDataset from '../../dataset/line';\nimport SplineAreaDataset from '../../dataset/mssplinearea';\nimport SplineLineDataset from '../../dataset/msspline';\nimport ColumnMultiSeriesGroup from '../../dataset/groups/column-multiseries';\n// utility imports\nimport { preDefStr } from '@fusioncharts/core/src/lib';\n\nimport datasetFactory from '../../factories/combi-dual-y-3d-dataset';\n\nlet UNDEF,\n  { HUNDREDSTRING, SEVENTYSTRING } = preDefStr,\n  LINE_STR = 'line',\n  COLUMN3D_STR = 'column3d';\n\nexport default class MSCombiDY3D extends MSDYBasecartesian3D {\n  constructor () {\n    super();\n    this.isDual = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSCombiDY3D';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSCombiDY3D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.sDefaultDatasetType = LINE_STR;\n    config.defaultDatasetType = COLUMN3D_STR;\n    config.showplotborder = 0;\n    config.isdual = 1;\n    config.enablemousetracking = true;\n\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEF;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEF;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEF;\n    config.anchorbordercolor = UNDEF;\n    config.anchorradius = 3;\n    config.showvalues = 1;\n    config.plotfillalpha = SEVENTYSTRING;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEF;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n  }\n  /**\n   * This method return the dataset group definations for this charts\n   * @param  {string} name type of dataset group class\n   * @return {class}      class of dataset group\n   */\n  getDSGroupdef (name) {\n    return name.toLowerCase() === 'column3d' ? ColumnMultiSeriesGroup : UNDEF;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param  {string} name type of dataset class\n   * @return {class}      class of dataset\n   */\n  getDSdef (name) {\n    if (name.toLowerCase() === 'splinearea') {\n      return SplineAreaDataset;\n    } else if (name.toLowerCase() === 'spline') {\n      return SplineLineDataset;\n    } else if (name.toLowerCase() === 'area') {\n      return AreaDataset;\n    } else if (name.toLowerCase() === 'line') {\n      return LineDataset;\n    }\n    return Column3DDataset;\n  }\n  /**\n   * function to return dataset type applicable for this chart\n   * @param   {string}  name  dataset type\n   * @return  {string}        dataset type applicable for this chart\n   */\n  getDSType (name) {\n    if (name.toLowerCase() === 'splinearea') {\n      return 'splinearea';\n    } else if (name.toLowerCase() === 'spline') {\n      return 'spline';\n    } else if (name.toLowerCase() === 'area') {\n      return 'area';\n    } else if (name.toLowerCase() === 'line') {\n      return 'line';\n    }\n    return 'column3d';\n  }\n}\n","import Stackedcolumn3dline from '@fusioncharts/charts/src/chart/stackedcolumn3dline';\nexport default Stackedcolumn3dline;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSCombi3D from '../mscombi3d';\nimport Column3DDataset from '../../dataset/column3d';\nimport LineDataset from '../../dataset/line';\nimport CartesianStackGroup from '../../dataset/groups/cartesian-stack';\nconst CHART_STR = 'Stacked 3D Column and Line Chart';\n/**\n * Creates class for StackedColumn3DLine\n */\nlet UNDEF;\nclass StackedColumn3DLine extends MSCombi3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'StackedColumn3DLine';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'StackedColumn3DLine';\n  }\n  /**\n   * Sets default configuration of chart elements\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.friendlyName = CHART_STR;\n    config.use3dlineshift = 1;\n    config.isstacked = true;\n    config.stack100percent = 0;\n    config.showplotborder = 0;\n    config.enablemousetracking = true;\n    config.showSum = 0;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param  {string} name type of dataset class\n   * @return {Object}      dataset class\n   */\n  getDSdef (name) {\n    return name === 'line' ? LineDataset : Column3DDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @param  {string} name is type of dataset group\n   * @return {Object} <dataset group class>     dataset group class\n   */\n  getDSGroupdef (name) {\n    return name === 'column' ? CartesianStackGroup : UNDEF;\n  }\n  /**\n   * function to return dataset type applicable for this chart\n   * @param   {string}  name  dataset type\n   * @return  {string}        dataset type applicable for this chart\n   */\n  getDSType (name) {\n    return name && name.toLowerCase() === 'line' ? 'line' : 'column';\n  }\n}\nexport default StackedColumn3DLine;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSCartesian3D from '../_internal/mscartesian3d';\nimport Column3DDataset from '../../dataset/column3d';\nimport SplineAreaDataset from '../../dataset/mssplinearea';\nimport SplineLineDataset from '../../dataset/msspline';\nimport AreaDataset from '../../dataset/area';\nimport LineDataset from '../../dataset/line';\nimport ColumnMultiSeriesGroup from '../../dataset/groups/column-multiseries';\nimport datasetFactory from '../../factories/combi-dual-y-3d-dataset';\n\nlet UNDEFINED,\n  HUNDREDSTRING = '100',\n  SEVENTYSTRING = '70',\n  MS_3D_COMBI_CHART = 'Multi-series 3D Combination Chart',\n  COLUMN3D_STR = 'column3d';\n/**\n * Class to render mscombi3d chart\n * @class MSCombi3D\n * @extends {MSCartesian3D}\n */\nclass MSCombi3D extends MSCartesian3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSCombi3D';\n  }\n\n  /**\n   * Creates an instance of MSCombi3D.\n   * @memberof MSCombi3D\n   */\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSCombi3D';\n  }\n\n  /**\n   * Sets default configuration of chart elements\n   * @memberof MSCombi3D\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.friendlyName = MS_3D_COMBI_CHART;\n    config.defaultDatasetType = COLUMN3D_STR;\n    config.showplotborder = 0;\n    config.enablemousetracking = true;\n\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEFINED;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEFINED;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEFINED;\n    config.anchorbordercolor = UNDEFINED;\n    config.anchorradius = 3;\n    config.showvalues = 1;\n    config.plotfillalpha = SEVENTYSTRING;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEFINED;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @param  {string} name type of dataset class\n   * @return {Object}      dataset class\n   */\n  getDSdef (name) {\n    if (name === 'splinearea') {\n      return SplineAreaDataset;\n    } else if (name === 'spline') {\n      return SplineLineDataset;\n    } else if (name === 'area') {\n      return AreaDataset;\n    } else if (name === 'line') {\n      return LineDataset;\n    }\n    return Column3DDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @param  {string} name is type of dataset group\n   * @return {Object} <dataset group class>     dataset group class\n   */\n  getDSGroupdef (name) {\n    return name === 'column3d' ? ColumnMultiSeriesGroup : UNDEFINED;\n  }\n  /**\n   * function to return dataset type applicable for this chart\n   * @param   {string}  name  dataset type\n   * @return  {string}        dataset type applicable for this chart\n   */\n  getDSType (name = '') {\n    if (name.toLowerCase() === 'area') {\n      return 'area';\n    } else if (name.toLowerCase() === 'line') {\n      return 'line';\n    } else if (name.toLowerCase() === 'spline') {\n      return 'spline';\n    } else if (name.toLowerCase() === 'splinearea') {\n      return 'splinearea';\n    }\n    return 'column3d';\n  }\n}\nexport default MSCombi3D;\n","import Stackedcolumn2dline from '@fusioncharts/charts/src/chart/stackedcolumn2dline';\nexport default Stackedcolumn2dline;\n","import MSCombi2D from '../mscombi2d';\nimport ColumnDataset from '../../dataset/column';\nimport LineDataset from '../../dataset/line';\nimport SplineLineDataset from '../../dataset/msspline';\nimport CartesianStackGroup from '../../dataset/groups/cartesian-stack';\nlet UNDEFINED,\n  CHART_STR = 'Stacked Column and Line Chart',\n  COLUMN_STR = 'column';\n\nclass StackedColumn2DLine extends MSCombi2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'StackedColumn2DLine';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'StackedColumn2DLine';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = COLUMN_STR;\n    config.isstacked = true;\n    config.stack100percent = 0;\n    config.enablemousetracking = true;\n    config.showSum = 0;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param  {string} name type of dataset class\n   * @return {Object}      dataset class\n   */\n  getDSdef (name) {\n    if (name === 'spline') {\n      return SplineLineDataset;\n    } else if (name === 'line') {\n      return LineDataset;\n    }\n    return ColumnDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @param  {string} name is type of dataset group\n   * @return {Object} <dataset group class>     dataset group class\n   */\n  getDSGroupdef (name) {\n    return name === 'column' ? CartesianStackGroup : UNDEFINED;\n  }\n  /**\n   * function to return dataset type applicable for this chart\n   * @param   {string}  name  dataset type\n   * @return  {string}        dataset type applicable for this chart\n   */\n  getDSType (name = '') {\n    if (name.toLowerCase() === 'line') {\n      return 'line';\n    }\n    return 'column';\n  }\n}\nexport default StackedColumn2DLine;\n","\nimport AreaBase from '../_internal/areabase';\nimport ColumnDataset from '../../dataset/column';\nimport AreaDataset from '../../dataset/area';\nimport LineDataset from '../../dataset/line';\nimport SplineAreaDataset from '../../dataset/mssplinearea';\nimport SplineLineDataset from '../../dataset/msspline';\nimport ColumnMultiSeriesGroup from '../../dataset/groups/column-multiseries';\nimport datasetFactory from '../../factories/combi-dual-y-dataset';\n\nvar UNDEFINED,\n  MS_COMBINATION_CHART = 'Multi-series Combination Chart',\n  COLUMN_STR = 'column';\n\nclass MSCombi2D extends AreaBase {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSCombi2D';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSCombi2D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = MS_COMBINATION_CHART;\n    config.defaultDatasetType = COLUMN_STR;\n    config.enablemousetracking = true;\n    config.showzeroplaneontop = 0;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param  {string} name type of dataset class\n   * @return {Object}      dataset class\n   */\n  getDSdef (name) {\n    if (name === 'splinearea') {\n      return SplineAreaDataset;\n    } else if (name === 'spline') {\n      return SplineLineDataset;\n    } else if (name === 'area') {\n      return AreaDataset;\n    } else if (name === 'line') {\n      return LineDataset;\n    }\n    return ColumnDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @param  {string} name is type of dataset group\n   * @return {Object} <dataset group class>     dataset group class\n   */\n  getDSGroupdef (name) {\n    return name === 'column' ? ColumnMultiSeriesGroup : UNDEFINED;\n  }\n  /**\n   * function to return dataset type applicable for this chart\n   * @param   {string}  name  dataset type\n   * @return  {string}        dataset type applicable for this chart\n   */\n  getDSType (name = '') {\n    if (name.toLowerCase() === 'splinearea') {\n      return 'splinearea';\n    } else if (name.toLowerCase() === 'spline') {\n      return 'spline';\n    } else if (name.toLowerCase() === 'area') {\n      return 'area';\n    } else if (name.toLowerCase() === 'line') {\n      return 'line';\n    }\n    return 'column';\n  }\n}\nexport default MSCombi2D;\n","import Mscolumnline3d from '@fusioncharts/charts/src/chart/mscolumnline3d';\nexport default Mscolumnline3d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSCombi3D from '../mscombi3d';\nimport Column3DDataset from '../../dataset/column3d';\nimport LineDataset from '../../dataset/line';\nimport Column3DGroup from '../../dataset/groups/column-multiseries';\n\nconst MS_COLUMN_LINE_CHART = 'Multi-series Column and Line Chart';\n/**\n * Creates class MSColumnLine3D\n */\nlet UNDEF;\nclass MSColumnLine3D extends MSCombi3D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSColumnLine3D';\n  }\n  /**\n   * Creates constructor function for MSColumnLine3D class\n   */\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSColumnLine3D';\n  }\n  /**\n   * Sets default configuration of chart elements\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = true;\n    config.friendlyName = MS_COLUMN_LINE_CHART;\n    config.use3dlineshift = 1;\n    config.showplotborder = 0;\n    config.enablemousetracking = true;\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param  {string} name type of dataset class\n   * @return {Object}      dataset class\n   */\n  getDSdef (name) {\n    return name === 'line' ? LineDataset : Column3DDataset;\n  }\n  /**\n   * This method return the dataset-group definations for this charts\n   * @param  {string} name is type of dataset group\n   * @return {Object} <dataset group class>     dataset group class\n   */\n  getDSGroupdef (name) {\n    return name === 'column3d' ? Column3DGroup : UNDEF;\n  }\n  /**\n   * function to return dataset type applicable for this chart\n   * @param   {string}  name  dataset type\n   * @return  {string}        dataset type applicable for this chart\n   */\n  getDSType (name) {\n    return name && name.toLowerCase() === 'line' ? 'line' : 'column3d';\n  }\n}\nexport default MSColumnLine3D;\n","import Mscombi3d from '@fusioncharts/charts/src/chart/mscombi3d';\nexport default Mscombi3d;\n","import Mscombi2d from '@fusioncharts/charts/src/chart/mscombi2d';\nexport default Mscombi2d;\n","import Marimekko from '@fusioncharts/charts/src/chart/marimekko';\nexport default Marimekko;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport MSCartesian from '../_internal/mscartesian';\nimport MarimekkoDataset from '../../dataset/marimekko';\nimport Marimekkogroup from '../../dataset/groups/marimekko-stack';\nimport msDatasetFactory from '../../factories/multiseries-dataset';\nimport { pluckNumber } from '@fusioncharts/core/src/lib';\n\nconst MARIMEKKO_CHART = 'Marimekko Chart',\n  MARIMEKKO_STR = 'marimekko';\n/**\n * class for Marimekko chartAPI\n */\nclass Marimekko extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Marimekko';\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let jsonData = this.getFromEnv('dataSource'),\n      datasetsJSON = jsonData.dataset,\n      categories = jsonData.categories;\n    if (!datasetsJSON || !categories || (categories.length === 0) ||\n      !categories[0].category || !(categories[0].category instanceof Array)) {\n      return true;\n    }\n  }\n\n  /**\n   * Constructor funtion for Marimekko chartAPI\n   */\n  constructor () {\n    super();\n    this.isValueAbs = true;\n    this.distributedColumns = true;\n    this.stack100percent = true;\n    this.isStacked = true;\n    this.registerFactory('dataset', function (chart) {\n      msDatasetFactory(chart);\n      let children = chart.getChildren(),\n        canvas = children.canvas[0],\n        vCanvas = canvas.getChildren('vCanvas')[0],\n        dsType = chart.config.defaultDatasetType || '',\n        manager = vCanvas.getChildren('datasetGroup_' + dsType)[0];\n\n      manager.addToEnv('categories', chart.getFromEnv('dataSource').categories);\n    }, ['vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Marimekko';\n  }\n\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.showXAxisPercentValues = pluckNumber(dataObj.chart && dataObj.chart.showxaxispercentvalues, 1);\n  }\n\n  /**\n   * Set default chart configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = MARIMEKKO_CHART;\n    config.defaultDatasetType = MARIMEKKO_STR;\n    config.isstacked = true;\n    config.showpercentvalues = 0;\n    config.usepercentdistribution = 1;\n    config.showSum = 1;\n    config.enablemousetracking = true;\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object} Column dataset definition\n   */\n  getDSdef () {\n    return MarimekkoDataset;\n  }\n\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object} Multiseries column group definition\n   */\n  getDSGroupdef () {\n    return Marimekkogroup;\n  }\n}\nexport default Marimekko;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ColumnDataset from '../column';\nimport { toRaphaelColor, getFirstValue, regex, HASHSTRING, fcEach, pluckNumber,\n  getLightColor } from '@fusioncharts/core/src/lib';\nimport marimekkoAnimation from './index.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nlet dropHash = regex.dropHypeash,\n  math = Math,\n  COLUMN_STR = 'column',\n  mathRound = math.round,\n  mathAbs = math.abs;\naddDep({\n  name: 'marimekkoAnimation',\n  type: 'animationRule',\n  extension: marimekkoAnimation\n});\n/**\n * class for Marimekko dataset\n */\nclass MarimekkoDataset extends ColumnDataset {\n  /**\n   * Constructor function of MarimekkoDataset\n   */\n  constructor () {\n    super();\n    this.config.groupName = COLUMN_STR;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'marimekko';\n  }\n  /**\n   * Function to configure the dataset\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  configure (datasetJSON) {\n    fcEach(datasetJSON.data, function (obj) {\n      if (obj) {\n        // RED-7982 fix for seperators in marimekko\n        obj.value = +obj.value ? mathAbs(obj.value) : (typeof obj.value === 'string' && obj.value.charAt(0) === '-' ? obj.value.substring(1) : obj.value);\n        // RED-7982 handle an empty string case\n        if (!obj.value || obj.value === '') {\n          obj.value = 0;\n        }\n      }\n    });\n\n    super.configure(datasetJSON);\n  }\n\n  /**\n   * Function to register datasets in the internal data store of legend class.\n   */\n  _addLegend () {\n    var dataset = this,\n      strokeColor,\n      fillColor,\n      config,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      legendItem,\n      conf = dataset.config,\n      legend = dataset.getFromEnv('legend'),\n      use3DLighting = pluckNumber(dataset.getFromEnv('chart-attrib').useplotgradientcolor, 1),\n      color = conf.legendSymbolColor,\n      JSONData = dataset.config.JSONData || {},\n      lightColor;\n    strokeColor = getLightColor(color, 60).replace(dropHash, HASHSTRING);\n    if (use3DLighting) {\n      lightColor = getLightColor(color, 40);\n      fillColor = {\n        FCcolor: {\n          color: color + ',' + color + ',' + lightColor + ',' + color + ',' + color,\n          ratio: '0,70,30',\n          angle: 270,\n          alpha: '100,100,100,100,100'\n        }\n      };\n    } else {\n      fillColor = {\n        FCcolor: {\n          color: color,\n          angle: 0,\n          ratio: '0',\n          alpha: '100'\n        }\n      };\n    }\n\n    config = {\n      enabled: conf.includeInLegend,\n      type: dataset.type,\n      label: getFirstValue(dataset.config.JSONData.seriesname),\n      usePattern: conf.usePattern,\n      legendIconAlpha: pluckNumber(JSONData.legendiconalpha),\n      patternAttr: {\n        patternType: conf.patternType,\n        patternAngle: conf.patternAngle,\n        patternDensity: conf.patternDensity,\n        patternSize: conf.patternSize,\n        color: conf.plotColor,\n        patternAlpha: conf.patternAlpha,\n        patternBgColor: conf.patternBgColor,\n        alpha: conf.plotfillalpha\n      }\n    };\n    if (conf.includeinlegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      }\n      legendItem.configure(config);\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor(fillColor),\n          bgAlpha: pluckNumber(JSONData.legendiconbgalpha, JSONData.legendiconalpha, chartAttr.legendiconbgalpha, chartAttr.legendiconalpha, conf.plotfillalpha),\n          borderAlpha: pluckNumber(JSONData.legendiconborderalpha, JSONData.legendiconalpha, chartAttr.legendiconbordergalpha, chartAttr.legendiconalpha, '100'),\n          rawFillColor: fillColor.FCcolor.color,\n          stroke: toRaphaelColor(strokeColor)\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item is dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n\n  /**\n   * Function returns the nearest dataset index\n   * @param {number} searchElementIndex The derived search index as per the mouse postion\n   * @param {Array} arr Has the information about each stack\n   * @return {number} The found dataset index\n   */\n  searchIndex (searchElementIndex, arr) {\n    var dataset = this,\n      // chart = dataset.chart,\n      xAxis = dataset.getFromEnv('xAxis'),\n      minIndex = 0,\n      len = arr.length - 1,\n      maxIndex = len,\n      currentIndex,\n      currentElementIndex;\n\n    while (minIndex <= maxIndex) {\n      currentIndex = Math.round((minIndex + maxIndex) / 2) || 0;\n      currentElementIndex = xAxis.getPixel(arr[currentIndex].x) +\n                 arr[currentIndex].columnWidth / 2;\n\n      if (currentElementIndex < searchElementIndex) {\n        minIndex = currentIndex + 1;\n      } else if (currentElementIndex > searchElementIndex) {\n        maxIndex = currentIndex - 1;\n      } else {\n        return currentIndex;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Allocates positions and parses attributes of plot during post spacemanagement\n   *\n   * @memberof MarimekkoDataset\n   */\n  allocatePosition () {\n    this.getLinkedParent()._setStackDimensions();\n    super.allocatePosition();\n  }\n  /**\n   * Function that return the nearest plot details\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY x-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest polt and whether it is hovered or not\n  */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      groupManager = dataset.getLinkedParent(),\n      stackConf = groupManager.getstackConf(),\n      // chart = dataset.chart,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      configManager = groupManager.config,\n      plotBorderThickness = chartConfig.plotborderthickness,\n      showPlotBorder = chartConfig.showplotborder,\n      len = (stackConf.length - 1),\n      halfPlotBorderThickness,\n      xPos,\n      returnValue,\n      datasetIndex;\n\n    plotBorderThickness = showPlotBorder ? plotBorderThickness : 0;\n    halfPlotBorderThickness = plotBorderThickness / 2;\n    halfPlotBorderThickness = halfPlotBorderThickness % 2 === 0\n      ? halfPlotBorderThickness + 1 : Math.round(halfPlotBorderThickness);\n    xPos = chartX + halfPlotBorderThickness;\n    datasetIndex = (returnValue && configManager.datasetIndex) || dataset.searchIndex(xPos, stackConf);\n    // save dataIndex to prevent unnecessary search\n    configManager.datasetIndex || (configManager.datasetIndex = datasetIndex);\n    // Checking for overlap between two cosecutive column plots along x-axis\n    returnValue = dataset._checkPointerOverColumn(datasetIndex, chartX, chartY);\n    // delete dataIndex\n    returnValue ? delete configManager.datasetIndex\n      : (dataset.index === len && (delete configManager.datasetIndex));\n\n    return returnValue;\n  }\n\n  /**\n   * Over-writting the function\n   * @return {Object} returning the this object to avoid lint error\n   */\n  setColumnPosition () {\n    return this;\n  }\n\n  /**\n   * Setting the width, xPos of the individual column data such that the corresponding stacks share a common boundary\n   * @param {number} xPosition The pre-calculated x position\n   * @param {number} yPosition The pre-calculated y position\n   * @param {number} ht The pre-calculated height position\n   * @param {number} wdth The pre-calculated width position\n   * @param {number} index The index of the data\n   * @return {Object} the calculated xPos, yPos, width and height\n   */\n  fineTunePlotDimension (xPosition, yPosition, ht, wdth, index) {\n    var dataSet = this,\n      height = ht,\n      width = wdth,\n      xPos = xPosition,\n      yPos = yPosition,\n      parent = dataSet.getLinkedParent(),\n      stackConf = parent.getstackConf(),\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      plotBorderThickness = chartConfig.plotborderthickness,\n      canvasConfig = chart.getChildren('canvas')[0].config,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      hasValidCanvasBorder = canvasBorderWidth > 0,\n      canvasRight = canvasConfig.canvasRight,\n      canvasTop = canvasConfig.canvasTop,\n      canvasLeft = canvasConfig.canvasLeft;\n\n    // if there is no stackConf then return the pre-calculated position\n    if (!stackConf.length) {\n      return {\n        xPos: xPos,\n        yPos: yPos,\n        width: width,\n        height: height\n      };\n    }\n    width = stackConf[index].columnWidth;\n    xPos -= width / 2;\n    if (parseInt(yPos, 10) <= canvasTop) {\n      height -= canvasTop - yPos -\n                    (+hasValidCanvasBorder);\n      yPos = canvasTop - (+hasValidCanvasBorder);\n    }\n\n    if (plotBorderThickness <= 1) {\n      // in case xPos is right of canvas-left position -\n      // normalize\n      if (mathRound(xPos) <= canvasLeft) {\n        width += xPos;\n        xPos = canvasLeft - (plotBorderThickness / 2) +\n                        (+!!plotBorderThickness) - (+hasValidCanvasBorder);\n        width -= xPos;\n      }\n      // in case plot exceeds canvas-right position -\n      // normalize width\n      if (mathRound(xPos + width) >= canvasRight) {\n        width = canvasRight - xPos + (plotBorderThickness / 2) -\n                        (+!!plotBorderThickness) + (+hasValidCanvasBorder);\n      }\n    }\n\n    return {\n      xPos: xPos,\n      yPos: yPos,\n      width: width,\n      height: height\n    };\n  }\n}\nexport default MarimekkoDataset;\n","import { animHelperFN } from '@fusioncharts/core/src/lib';\n\nexport default {\n  'initial.dataset.marimekko': function () {\n    var component = this,\n      chart = component.getFromEnv('chart'),\n      yDepth = chart.config.yDepth || 0,\n      yAttrKey = 'y', // eslint-disable-line good-practices/no-static-strings-in-scope\n      hAttrKey = 'height', // eslint-disable-line good-practices/no-static-strings-in-scope\n      yAxis = component.getFromEnv('yAxis');\n    return {\n      'rect.appearing': function (inputJSON) {\n        // appearing animation for the data plots.\n        var zeroPos = yAxis.getPixel(yAxis.getAxisBase()) + (chart.isBar ? -yDepth : yDepth),\n          actualFinalAttr = inputJSON.attr,\n          yAttrVal,\n          hAttrVal,\n          yBasePos,\n          endPosWRT0;\n\n        // Store final y and h for later use\n        yAttrVal = actualFinalAttr[yAttrKey];\n        hAttrVal = actualFinalAttr[hAttrKey];\n        endPosWRT0 = Math.sign(yAttrVal + (hAttrVal / 2) - zeroPos);\n        yBasePos = yAttrVal + hAttrVal;\n        return [{\n          initialAttr: function () {\n            var initialAttr = {};\n            // Replace the y and h with initial positions\n            initialAttr[yAttrKey] = yBasePos;\n            initialAttr[hAttrKey] = 0;\n            return initialAttr;\n          },\n          slot: 'plot',\n          startEnd: function () {\n            return animHelperFN.getTimeByValue({start: 0, end: 0.6},\n              {\n                startPx: zeroPos,\n                endPx: endPosWRT0 === 1 ? component.config.yAxisMaxPixel : component.config.yAxisMinPixel\n              }, {\n                startPx: yBasePos,\n                endPx: endPosWRT0 === 1 ? (actualFinalAttr[yAttrKey] +\n                      actualFinalAttr[hAttrKey]) : actualFinalAttr[yAttrKey]\n              });\n          },\n          effect: 'linear'\n        }];\n      },\n      'group.appearing': null,\n      'group.updating': null,\n      'plotLabel.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        slot: 'final'\n      }],\n      '*': null\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport CartesianStackgroup from '../cartesian-stack';\nimport {pluck, BLANKSTRING, visibleStr, parseTooltext} from '@fusioncharts/core/src/lib';\n\nvar createGroup = function (groupName, parentContainer, manager) {\n  var animationManager = manager.getFromEnv('animationManager');\n  return animationManager.setAnimation({\n    el: 'group',\n    attr: {name: groupName},\n    container: parentContainer,\n    component: manager,\n    label: 'group'\n  });\n};\n/**\n * class for marimekko group manager\n */\nclass MarimekkoStackgroup extends CartesianStackgroup {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'group';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'marimekkoStackgroup';\n  }\n\n  /**\n   * Function to return the stackConf of groupmanager\n   * @return {Object} configurations\n   */\n  getstackConf () {\n    return this.config.stackConf;\n  }\n  /**\n   * function to calculate plot position, max and min of manager in case a of stacked dataset\n   */\n  _setStackPosition () {\n    super._setStackPosition();\n    var manager = this,\n      config = manager.config,\n      stackPercentValues,\n      stackConf = config.stackConf || (config.stackConf = []),\n      stackSumValue = config.stackValues,\n      catObj,\n      categories = manager.getFromEnv('categories')[0].category,\n      numberFormatter = manager.getFromEnv('number-formatter'),\n      positionStackConfig,\n      sum = 0,\n      sumValue = 0,\n      sumPercent = 0,\n      k,\n      len,\n      x,\n      xAxis = manager.getFromEnv('xAxis'),\n      range = xAxis.getVisibleConfig(),\n      xMin = range.minValue,\n      xMax = range.maxValue,\n      diff = xMax - xMin,\n      tempX = xMin;\n    for (k = 0, len = stackSumValue.length; k < len; k++) {\n      sumValue += (stackSumValue[k] && stackSumValue[k].positive) || 0;\n    }\n    config.totalSumValue = sumValue;\n    for (k = 0; k < categories.length; k++) {\n      catObj = categories[k];\n      if (catObj.widthpercent) {\n        sum += numberFormatter.getCleanValue(catObj.widthpercent);\n      }\n    }\n    if (+sum.toFixed(8) === 100) {\n      sum = +sum.toFixed(8);\n      config.setUserWidth = 1;\n    }\n    stackPercentValues = manager.getStackSumPercent();\n    for (k = 0, len = stackSumValue.length; k < len; k++) {\n      if (!(positionStackConfig = stackConf[k])) {\n        positionStackConfig = stackConf[k] = {};\n      }\n      sumPercent = (sumPercent + stackPercentValues[k] / 100);\n      x = ((stackPercentValues[k] / 100) * diff) / 2 + tempX;\n      tempX = sumPercent * diff + xMin;\n      positionStackConfig.x = x;\n      xAxis.updateTicksValues(k, {x: x});\n    }\n  }\n  /**\n   * This function returns an array containing the percent values of individual stack\n   * @return {Array} conatains the total value of each stack in percentage\n   */\n  getStackSumPercent () {\n    var manager = this,\n      config = manager.config,\n      stackSumValue = config.stackValues,\n      totalSumValue = config.totalSumValue,\n      i,\n      numberFormatter = manager.getFromEnv('number-formatter'),\n      categories = manager.getFromEnv('categories')[0].category,\n      setUserWidth = config.setUserWidth,\n      arr = [];\n    for (i = 0; i < stackSumValue.length; i++) {\n      if (setUserWidth) {\n        arr[i] = numberFormatter.getCleanValue(categories[i].widthpercent);\n      } else {\n        arr[i] = ((stackSumValue[i] && stackSumValue[i].positive) || 0) / totalSumValue * 100;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Draw function of group manager\n   */\n  draw () {\n    super.draw();\n    this.drawLabel();\n  }\n\n  /**\n   * Function to create container for labels\n   */\n  createContainer () {\n    super.createContainer();\n    var manager = this,\n      parent = manager.getLinkedParent();\n\n    !manager.getContainer('commonLabelContainer') && manager.addContainer('commonLabelContainer',\n      createGroup('manager-commonLabelContainer', parent.getChildContainer('vcanvasLabelGroup'), manager));\n  }\n\n  /**\n   * This function draws the cumulative percentage labels appearing at bottom right of the stack\n   */\n  drawLabel () {\n    var manager = this,\n      config = manager.config,\n      smartLabel = manager.getFromEnv('smartLabel'),\n      animationManager = manager.getFromEnv('animationManager'),\n      stackPercentValues = manager.getStackSumPercent(),\n      chartAttr = manager.getFromEnv('chart-attrib'),\n      jsonData,\n      datasets = manager.getChildren('dataset'),\n      dataset,\n      data,\n      stackConf = config.stackConf,\n      xPos,\n      yPos,\n      index,\n      commonLabelContainer = manager.getContainer('commonLabelContainer'),\n      numberFormatter = manager.getFromEnv('number-formatter'),\n      percentValue = 0,\n      formatedPercentValue,\n      attr,\n      chartConfig = manager.getFromEnv('chartConfig'),\n      canvasBottom = chartConfig.canvasBottom,\n      xAxis = manager.getFromEnv('xAxis'),\n      inCanvasStyle = manager.getFromEnv('style'),\n      style = chartConfig.dataLabelStyle,\n      length = stackPercentValues.length,\n      bBoxObj,\n      labelEle,\n      labelEleCheck,\n      sumValues = config.stackValues,\n      borderColor,\n      bgColor,\n      borderThickness,\n      showXAxisPercentValues = chartConfig.showXAxisPercentValues,\n      labels = manager.getGraphicalElement('commonLabels') || [],\n      prevLabelLen = labels.length,\n      i,\n      j;\n\n    smartLabel.setStyle(style);\n    if (showXAxisPercentValues) {\n      bgColor = pluck(style.backgroundColor, '#ffffff');\n      borderColor = pluck(style.borderColor === BLANKSTRING ? '#' + inCanvasStyle.inCancolor\n        : style.borderColor, '#000000');\n      borderThickness = pluck(style.borderThickness, 1);\n      for (index = 0; index < length - 1; index++) {\n        if (!sumValues[index]) {\n          continue;\n        }\n        percentValue += stackPercentValues[index];\n        formatedPercentValue = numberFormatter.percentValue(percentValue);\n        xPos = xAxis.getPixel(stackConf[index].x) + stackConf[index].columnWidth / 2;\n        yPos = canvasBottom;\n        labelEleCheck = labels[index];\n        if (sumValues[index].positive === sumValues[index].negative) {\n          formatedPercentValue = BLANKSTRING;\n          if (labelEleCheck) {\n            labelEleCheck.hide();\n          }\n          continue;\n        }\n        attr = {\n          text: formatedPercentValue,\n          fill: style.color,\n          'text-bound': [bgColor, borderColor,\n            borderThickness, style.borderPadding,\n            style.borderRadius, style.borderDash\n          ],\n          'line-height': style.lineHeight,\n          visibility: visibleStr\n        };\n\n        bBoxObj = smartLabel.getOriSize(formatedPercentValue);\n\n        yPos = yPos - bBoxObj.height / 2 - (borderThickness);\n        attr.x = xPos;\n        attr.y = yPos;\n        labelEleCheck && labelEleCheck.show();\n        labelEle = animationManager.setAnimation({\n          el: labelEleCheck || 'text',\n          container: commonLabelContainer,\n          attr: attr,\n          label: 'text',\n          component: manager\n        });\n        if (!labelEleCheck) {\n          manager.addGraphicalElement('commonLabels', labelEle, true);\n        }\n      }\n\n      for (let count = index; count < prevLabelLen; count++) {\n        labels[count].hide();\n      }\n    }\n    for (i = 0; i < datasets.length; i++) {\n      dataset = datasets[i];\n      data = dataset.components.data;\n      jsonData = dataset.config.JSONData;\n      for (j = 0; j < data.length; j++) {\n        data[j].config.finalTooltext = parseTooltext(data[j].config.finalTooltext, [111],\n          {xAxisPercentValue: stackPercentValues[j] && (stackPercentValues[j].toPrecision(4) + '%')},\n          data, chartAttr, jsonData);\n      }\n    }\n  }\n\n  /**\n   * Helper function for determining the xPos of sumLabel\n   * @param {number} index The index of the sumLabel\n   * @return {number} x-position\n   */\n  _getXpos (index) {\n    var manager = this,\n      xAxis = manager.getFromEnv('xAxis');\n    return xAxis.getPixel(manager.config.stackConf[index].x);\n  }\n\n  /**\n   * Function to set column width and position of all the stacks\n   */\n  _setStackDimensions () {\n    var manager = this,\n      config = manager.config,\n      k,\n      stackSumValue = config.stackValues,\n      categories = manager.getFromEnv('categories')[0].category,\n      catObj,\n      setUserWidth,\n      len,\n      sum = 0,\n      positionStackConfig,\n      numberFormatter = manager.getFromEnv('number-formatter'),\n      percentValue,\n      stackPercentValues = manager.getStackSumPercent(),\n      canvasWidth = manager.getFromEnv('canvasConfig').canvasWidth,\n      stackConf = config.stackConf || (config.stackConf = []);\n    for (k = 0; k < categories.length; k++) {\n      catObj = categories[k];\n      if (catObj.widthpercent) {\n        sum += numberFormatter.getCleanValue(catObj.widthpercent);\n      }\n    }\n    if (+sum.toFixed(8) === 100) {\n      setUserWidth = config.setUserWidth = 1;\n      sum = +sum.toFixed(8);\n    }\n    for (k = 0, len = stackSumValue.length; k < len; k++) {\n      catObj = categories[k];\n      if (!(positionStackConfig = stackConf[k])) {\n        positionStackConfig = stackConf[k] = {};\n      }\n      if (setUserWidth) {\n        percentValue = numberFormatter.getCleanValue(catObj.widthpercent) / 100;\n      } else {\n        percentValue = stackPercentValues[k] / 100;\n      }\n      positionStackConfig.columnWidth = percentValue * canvasWidth;\n    }\n  }\n}\n\nexport default MarimekkoStackgroup;\n","import Msarea from '@fusioncharts/charts/src/chart/msarea';\nexport default Msarea;\n","import Msbar3d from '@fusioncharts/charts/src/chart/msbar3d';\nexport default Msbar3d;\n","import Msbar2d from '@fusioncharts/charts/src/chart/msbar2d';\nexport default Msbar2d;\n","import Msline from '@fusioncharts/charts/src/chart/msline';\nexport default Msline;\n","import Mscolumn3d from '@fusioncharts/charts/src/chart/mscolumn3d';\nexport default Mscolumn3d;\n","import Mscolumn2d from '@fusioncharts/charts/src/chart/mscolumn2d';\nexport default Mscolumn2d;\n","import Stackedcolumn2dlinedy from '@fusioncharts/charts/src/chart/stackedcolumn2dlinedy';\nexport default Stackedcolumn2dlinedy;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { HUNDREDSTRING, preDefStr, UNDEF } from '@fusioncharts/core/src/lib';\nimport CartesianStackgroup from '../../dataset/groups/cartesian-stack';\nimport LineDataset from '../../dataset/line';\nimport ColumnDataset from '../../dataset/column';\nimport MSDyBaseCartesian from '../_internal/msdybasecartesian';\nvar CHART_STR = 'Stacked 2D Column and Line Chart',\n  LINE_STR = 'line',\n  COLUMN_STR = 'column',\n  SEVENTYSTRING = preDefStr.SEVENTYSTRING;\n/**\n * Creates class for StackedColumn2DLineDy\n */\nclass StackedColumn2DLineDy extends MSDyBaseCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'StackedColumn2DLineDy';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'StackedColumn2DLineDy';\n  }\n  /**\n   * Sets default configuration of chart elements\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.sDefaultDatasetType = LINE_STR;\n    config.friendlyName = CHART_STR;\n    config.defaultDatasetType = COLUMN_STR;\n    config.isdual = true;\n    config.isstacked = true;\n    config.enablemousetracking = true;\n    config.stack100percent = 0;\n    config.showSum = 0;\n    // Anchor related attributes\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEF;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEF;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEF;\n    config.anchorbordercolor = UNDEF;\n    config.anchorradius = 3;\n    config.showvalues = 1;\n    config.plotfillalpha = SEVENTYSTRING;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEF;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n    config.showzeroplaneontop = 0;\n  }\n\n  getDSdef (name) {\n    return name === LINE_STR ? LineDataset : ColumnDataset;\n  }\n\n  getDSGroupdef (name) {\n    return name === COLUMN_STR ? CartesianStackgroup : UNDEF;\n  }\n\n  getDSType (name = '') {\n    if (name.toLowerCase() === LINE_STR) {\n      return LINE_STR;\n    }\n    return COLUMN_STR;\n  }\n}\nexport default StackedColumn2DLineDy;\n","import StackedArea2DLineDy from '@fusioncharts/charts/src/chart/stackedarea2dlinedy';\nexport default StackedArea2DLineDy;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport CartesianStackgroup from '../../dataset/groups/cartesian-stack';\nimport LineDataset from '../../dataset/line';\nimport AreaDataset from '../../dataset/area';\nimport StackedColumn2DLineDy from '../stackedcolumn2dlinedy';\nimport { HUNDREDSTRING } from '@fusioncharts/core/src/lib';\n\nlet UNDEF,\n  CHART_STR = 'Stacked 2D Area and Line Chart',\n  LINE_STR = 'line',\n  AREA_STR = 'area';\n/**\n * Creates class for StackedArea2DLineDy\n */\nclass StackedArea2DLineDy extends StackedColumn2DLineDy {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'StackedArea2DLineDy';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'StackedArea2DLineDy';\n  }\n  /**\n   * Sets default configuration of chart elements\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.friendlyName = CHART_STR;\n    config.plotfillalpha = HUNDREDSTRING;\n    config.isstacked = 1;\n    config.defaultDatasetType = AREA_STR;\n    config.stack100percent = 0;\n    config.defaultcrosslinethickness = 1;\n    // for realtime stacked area and stacked area chart api the overlapping of sum labels\n    // has been fixed and this has been used to reduce the affected subset\n    this.addToEnv('useImprovedLabelPlacement', true);\n    // The border is a line\n    // Anchor must be at higher position than border\n    this.addToEnv('useLinePlotGroupForAnchorPlacement', true);\n  }\n\n  getDSdef (name) {\n    return name === LINE_STR ? LineDataset : AreaDataset;\n  }\n\n  getDSGroupdef (name) {\n    return name === AREA_STR ? CartesianStackgroup : UNDEF;\n  }\n\n  getDSType (name = '') {\n    if (name.toLowerCase() === LINE_STR) {\n      return LINE_STR;\n    }\n    return AREA_STR;\n  }\n}\nexport default StackedArea2DLineDy;\n"],"sourceRoot":""}