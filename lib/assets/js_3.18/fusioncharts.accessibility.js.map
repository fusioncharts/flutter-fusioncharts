{"version":3,"sources":["webpack:///./packages/fusioncharts/accessibility/index.js","webpack:///./packages/fc-accessibility/src/accessibility.js","webpack:///./packages/fc-accessibility/src/configuration.js","webpack:///./packages/fc-accessibility/src/categories/singleSeries.js","webpack:///./packages/fc-accessibility/src/util.js","webpack:///./packages/fc-accessibility/src/categories/legendEnabled.js","webpack:///./packages/fc-accessibility/src/categories/exportEnabled.js","webpack:///./packages/fc-accessibility/src/categories/base.js","webpack:///./packages/fc-accessibility/src/supportedChartTypes.js","webpack:///./packages/fc-accessibility/src/categories/multiSeries.js","webpack:///./packages/fc-accessibility/src/categories/heatmapData.js"],"names":["AccessibilityExtension","window","CustomEvent","event","funcParams","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","prototype","Event","extension","FusionCharts","adjustZeroAnchor","chartInstance","chartType","getChartAttribute","setChartAttribute","accesibilityTexts","accessibilityConfig","AccessibilityConfig","addAccessibilitynonCartesian","svgRoot","altTexts","buildAriaTexts","id","nonCartesianAccessibility","FCAccessibilitySingleSeriesWithLegend","getConfig","makeChartAccessible","makeSingleSeriesWithLegendAccessible","addAccessibilitySingleSeries","singleSeriesAccessibility","FCAccessibilitySingleSeries","addAxisInformation","makeSingleSeriesAccessible","addEventListener","sender","getElementById","apiInstance","getFromEnv","canvas","accessibility","chart","multiSeriesAccessibility","FCAccessibilityMultiSeries","makeMultiSeriesAccessible","addAccessibilityMultiSeries","nestedDataAccessibility","FCAccessibilityHeatMap","makeNestedDataAccessible","addAccessibilityNestedData","name","type","requiresFusionCharts","this","config","base","readerPreferenceForEdge","disablePlotDetailsForIE","setConfig","chartId","value","mergeDeep","hasOwnProperty","alternateTexts","dataLength","plotData","self","_conf","chartData","dials","dial","length","pointers","pointer","data","makeExportAccessible","getDatasets","_components","components","plotSelectOnKeyPressSS","plotIndex","getAttribute","keyCaptured","elemVisible","loopCount","plotLength","keyCode","_firePlotEvent","graphics","pointersTpath","plotEventHandler","pointersPath","_graphics","trackerObj","plotGraphicClick","call","element","preventDefault","plotElem","getPlotElement","activeElement","node","crossBrowserFocus","plot","graphic","parent","children","firstElementIndex","getPlotStats","plotConfig","i","plotStat","label","categoryLabel","dataLabel","y","setValue","target","formatedVal","formatNumber","pValue","plotIterator","alternateTextsPlot","plotStats","setLink","link","dataLink","addTabIndexAndSetAria","chartPropertyMap","pIndex","removeEventListener","FCAccessibilityExportEnabled","makeLegendAccessible","FCAccessibilityLegendEnabled","sources","source","shift","isObject","key","Object","assign","str","mapObj","re","RegExp","keys","join","replace","matched","elemet","focus","navigator","userAgent","indexOf","test","item","Array","isArray","isAllLegendItemHidden","legend","legendItems","legendItem","_legendState","isLegendItemHidden","index","bLegend","bindLegend","UNDEF","legendTexts","querySelectorAll","legendSelectOnKeyPress","stopPropagation","legendIndex","legendLength","fireEvent","setTimeout","legendStat","innerHTML","makeGradientLegendAccessible","legendSliders","ariaLabelMethod","sliders","slideRangeOnKeyPress","newValue","dragAPI","extremes","gLegend","sGroup","displacement","currentPos","lowerSliderCurrentPos","upperSliderCurrentPos","sliderRange","Math","floor","bothSlidersOverlapped","maxDisplacement","rangeGroup","updateWhenInMove","currPos","lowerRange","upperRange","getDragAPI","dragStart","dragging","colorrange","startlabel","endlabel","exportenabled","exportSelectOnKeyPress","exportItemIndex","items","_env","hamburger","_componentStore","listContainer","elemStore","exportButton","querySelector","childNodes","exportMenu","style","outline","exportMenuItems","FCAccessibilityBase","getJSONData","isIE","_getFormattedChartName","caption","subcaption","chartTypes","displayName","xaxisname","yaxisname","elem","txtToReplace","propertyMap","tabin","role","customAttr","tabindex","tabIndexText","isEdge","setAttribute","replaceMultipleStrings","addAriaHiddenAndRole","hiddenFlag","backButton","setAriaHiddenForTooltip","tooltipElement","jsVars","overlayButton","click","bind","category","bEvent","dataSet","categoryLength","seriesLength","bindEvent","categories","dataset","plotSelectOnKeyPressMS","seriesIndex","limitExceeded","isStackedChart","filter","getComputedStyle","display","propertyFormatter","j","x","seriesname","z","sIndex","rows","columns","row","column","currentRow","currentColumn","rowId","rowid","columnId","columnid","tllabel","trlabel","bllabel","brlabel","find","toUpperCase","targetCell","newRow","currentRowIndex","findIndex"],"mappings":"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","file":"fusioncharts.accessibility.js","sourcesContent":["import AccessibilityExtension from '@fusioncharts/accessibility/src/accessibility';\n\nexport default AccessibilityExtension;\n","/* eslint-disable no-fallthrough */\n/* eslint-disable default-case */\nimport AccessibilityConfig from './configuration';\nimport { FCAccessibilitySingleSeries, FCAccessibilitySingleSeriesWithLegend } from './categories/singleSeries';\nimport FCAccessibilityMultiSeries from './categories/multiSeries';\nimport FCAccessibilityHeatMap from './categories/heatmapData';\n\n(function () {\n  if (typeof window.CustomEvent === 'function') return false;\n\n  function CustomEvent (event, funcParams) {\n    let params = funcParams;\n    params = params || { bubbles: false, cancelable: false, detail: null };\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  }\n\n  CustomEvent.prototype = window.Event.prototype;\n\n  window.CustomEvent = CustomEvent;\n})();\n\nfunction AccessibilityExtension (FusionCharts) {\n  /**\n         *\n         * @param {*} chartInstance\n         * @param {*} chartType\n         * If anchors are turned off for line, spline, radar etc then it's not possible to highlight plots\n         * As a fix to the problem, anchors are rendered with zero alpha\n         *\n         * Returns true if anchors are modified, otherwise return false\n         */\n\n  let adjustZeroAnchor = (chartInstance, chartType) => {\n      if (chartInstance.getChartAttribute('showanchors') === '0' || (chartType && (chartType === 'area2d' || chartType === 'msarea') && chartInstance.getChartAttribute('showanchors') !== '1')) {\n        chartInstance.setChartAttribute({\n          'showanchors': '1',\n          'anchorbgalpha': '0',\n          'anchoralpha': '0'\n        });\n        return true;\n      }\n      return false;\n    },\n\n    accesibilityTexts = FusionCharts.accesibilityTexts,\n    accessibilityConfig = new AccessibilityConfig();\n  function addAccessibilityMultiSeries (svgRoot, chartInstance, chartType) {\n    let altTexts = accesibilityTexts.buildAriaTexts(chartInstance.id, 'multiSeries', chartType),\n      multiSeriesAccessibility = new FCAccessibilityMultiSeries(svgRoot, chartInstance, altTexts, accessibilityConfig.getConfig());\n    multiSeriesAccessibility.makeChartAccessible(multiSeriesAccessibility.makeMultiSeriesAccessible);\n  }\n\n  function addAccessibilitynonCartesian (svgRoot, chartInstance, chartType) {\n    let altTexts = accesibilityTexts.buildAriaTexts(chartInstance.id, 'nonCartesian', chartType),\n      nonCartesianAccessibility = new FCAccessibilitySingleSeriesWithLegend(svgRoot, chartInstance, altTexts, accessibilityConfig.getConfig());\n    nonCartesianAccessibility.makeChartAccessible(nonCartesianAccessibility.makeSingleSeriesWithLegendAccessible);\n  }\n\n  function addAccessibilitySingleSeries (svgRoot, chartInstance, chartType) {\n    let altTexts = accesibilityTexts.buildAriaTexts(chartInstance.id, 'singleSeries', chartType),\n      singleSeriesAccessibility = new FCAccessibilitySingleSeries(svgRoot, chartInstance, altTexts, accessibilityConfig.getConfig());\n    singleSeriesAccessibility.addAxisInformation();\n    singleSeriesAccessibility.makeChartAccessible(singleSeriesAccessibility.makeSingleSeriesAccessible);\n  }\n\n  function addAccessibilityNestedData (svgRoot, chartInstance, chartType) {\n    let altTexts = accesibilityTexts.buildAriaTexts(chartInstance.id, 'heatmap', chartType),\n      nestedDataAccessibility = new FCAccessibilityHeatMap(svgRoot, chartInstance, altTexts, accessibilityConfig.getConfig());\n    nestedDataAccessibility.makeChartAccessible(nestedDataAccessibility.makeNestedDataAccessible);\n  }\n\n  // eslint-disable-next-line good-practices/no-anonymous-handler\n  FusionCharts.addEventListener('renderComplete', function (evt) {\n    let chartInstance = evt.sender,\n      // eslint-disable-next-line no-unused-vars\n      spanContainer = document.getElementById(evt.sender.id),\n      svgRoot = chartInstance.apiInstance.getFromEnv('paper').canvas,\n      chartType = chartInstance.chartType();\n\n    const accessibility = chartInstance.apiInstance.getFromEnv('dataSource').chart.accessibility;\n\n    if (svgRoot && (accessibility === '1' || accessibility === 1)) {\n      switch (chartType) {\n        case 'msline':\n        case 'msspline':\n        case 'stackedarea2d':\n        case 'msarea':\n        case 'radar':\n        case 'msstepline':\n        case 'logmsline':\n        case 'inversemsline':\n        case 'inversemsarea':\n        case 'sparkline':\n        case 'mscombi2d':\n        case 'mscombi3d':\n        case 'mscombidy2d':\n        case 'stackedcolumn2dline':\n        case 'stackedcolumn3dline':\n        case 'mscolumnline3d':\n        case 'mscolumn3dlinedy':\n        case 'stackedcolumn3dlinedy':\n          // Check for zero anchor and modify anchor if not shown\n          // If anchors are modified then break without adding acessibility\n          // as another render complete event will trigger\n          if (adjustZeroAnchor(chartInstance, chartType)) { break; }\n        case 'mscolumn2d':\n        case 'mscolumn3d':\n        case 'msbar2d':\n        case 'msbar3d':\n        case 'stackedcolumn2d':\n        case 'stackedcolumn3d':\n        case 'stackedbar2d':\n        case 'stackedbar3d':\n        case 'scatter':\n        case 'bubble':\n        case 'inversemscolumn2d':\n        case 'logmscolumn2d':\n        case 'logstackedcolumn2d':\n        case 'sparkcolumn':\n        case 'sparkwinloss':\n          addAccessibilityMultiSeries(svgRoot, chartInstance, chartType);\n          break;\n        case 'pie2d':\n        case 'pie3d':\n        case 'doughnut2d':\n        case 'doughnut3d':\n        case 'pyramid':\n        case 'angulargauge':\n        case 'hlineargauge':\n        case 'hled':\n        case 'vled':\n        case 'bulb':\n        case 'hbullet':\n        case 'vbullet':\n          addAccessibilitynonCartesian(svgRoot, chartInstance, chartType);\n          break;\n        case 'funnel':\n          addAccessibilitynonCartesian(svgRoot, chartInstance, 'funnel');\n          break;\n        case 'line':\n        case 'spline':\n        case 'kagi':\n        case 'area2d':\n          // Check for zero anchor and modify anchor if not shown\n          // If anchors are modified then break without adding acessibility\n          // as another render complete event will trigger\n          if (adjustZeroAnchor(chartInstance, chartType)) { break; }\n        case 'column2d':\n        case 'column3d':\n        case 'bar2d':\n        case 'bar3d':\n          addAccessibilitySingleSeries(svgRoot, chartInstance, chartType);\n          break;\n        case 'waterfall2d':\n          addAccessibilitySingleSeries(svgRoot, chartInstance, 'waterfall2d');\n          break;\n        case 'heatmap':\n          addAccessibilityNestedData(svgRoot, chartInstance, chartType);\n          break;\n      }\n    }\n  });\n}\n\nexport default {\n  extension: AccessibilityExtension,\n  name: 'AccessibilityExtension',\n  type: 'extension',\n  requiresFusionCharts: true\n};\n","import { mergeDeep } from 'util';\n\nclass AccessibilityConfig {\n  constructor () {\n    this.config = {\n      base: {\n        readerPreferenceForEdge: 'jaws',\n        disablePlotDetailsForIE: false\n      }\n    };\n  }\n\n  setConfig (config, chartId, value) {\n    if (config && value && typeof config === 'string') {\n      if (chartId) { this.config[chartId][config] = value; } else { this.config.base[config] = value; }\n    } else {\n      if (chartId) { this.config[chartId] = mergeDeep(this.config[chartId], config); } else { this.config.base = mergeDeep(this.config.base, config); }\n    }\n  }\n\n  getConfig (chartId) {\n    if (this.config.hasOwnProperty(chartId)) { return mergeDeep(this.config[chartId], this.config.base); }\n\n    return this.config.base;\n  }\n}\n\nexport default AccessibilityConfig;\n","/* eslint-disable good-practices/no-function-dependency */\n/* eslint-disable one-var */\n/* eslint-disable no-fallthrough */\n/* eslint-disable default-case */\nimport { mergeDeep, crossBrowserFocus } from '../util';\nimport { FCAccessibilityLegendEnabled } from './legendEnabled';\nimport FCAccessibilityExportEnabled from './exportEnabled';\n\nclass FCAccessibilitySingleSeries extends FCAccessibilityExportEnabled {\n  // eslint-disable-next-line no-useless-constructor\n  constructor (svgRoot, chartInstance, alternateTexts, config) {\n    super(svgRoot, chartInstance, alternateTexts, config);\n  }\n\n  /**\n   * Make single series chart accessible\n   */\n  makeSingleSeriesAccessible () {\n    var dataLength, self = this;\n    !self._conf && (self._conf = {});\n    if (this.chartType === 'angulargauge') {\n      dataLength = this.chartData.dials.dial.length;\n    } else if (this.chartType === 'hlineargauge') {\n      dataLength = this.chartData.pointers.pointer.length;\n    } else if (this.chartType === 'hled' || this.chartType === 'vled' || this.chartType === 'bulb' || this.chartType === 'hbullet' || this.chartType === 'vbullet') {\n      dataLength = 1;\n    } else {\n      dataLength = this.chartData.data.length;\n    }\n\n    // Make the Export accessible\n    self.makeExportAccessible();\n\n    let plotData;\n    switch (this.chartType) {\n      case 'pyramid':\n      case 'funnel':\n        plotData = this.chartInstance.apiInstance.getDatasets()[0]._components.data;\n        break;\n      default:\n        plotData = this.chartInstance.apiInstance.getDatasets()[0].components.data;\n        break;\n    }\n    self._conf.plotData = plotData;\n    self._conf.dataLength = dataLength;\n\n    self._conf.plotSelectOnKeyPressSS = function (event) {\n      let elem = this,\n        plotIndex = +elem.getAttribute('pIndex'),\n        keyCaptured = false, elemVisible = false,\n        loopCount = 0,\n        plotLength = self._conf.dataLength - 1;\n      if (self.chartType === 'waterfall2d') {\n        plotLength = self._conf.dataLength;\n      }\n      while (!elemVisible && loopCount < self._conf.dataLength) {\n        ++loopCount;\n        switch (event.keyCode) {\n          case 37:\n          case 38:\n            // left arrow and down arrow\n            --plotIndex;\n            if (plotIndex < 0) {\n              plotIndex = plotLength;\n            }\n            keyCaptured = true;\n            break;\n          case 39:\n          case 40:\n            // right arrow and up arrow\n            ++plotIndex;\n            if (plotIndex > plotLength) {\n              plotIndex = 0;\n            }\n            keyCaptured = true;\n            break;\n          case 13:\n          // Enter\n          case 32:\n            // spacebar\n            if (self.chartInstance.apiInstance.getDatasets()[0]._firePlotEvent) {\n              self.chartInstance.apiInstance.getDatasets()[0]._firePlotEvent('fc-click', plotIndex < 0 ? 0 : plotIndex, new CustomEvent('click'));\n            } else if (self.chartType === 'angulargauge') {\n              if (self.chartInstance.apiInstance.getDatasets()[0].components.data[plotIndex < 0 ? 0 : plotIndex].graphics.pointersTpath.data('eventArgs')) {\n                self.chartInstance.apiInstance.plotEventHandler(self.chartInstance.apiInstance.getDatasets()[0].components.data[plotIndex < 0 ? 0 : plotIndex].graphics.pointersTpath, new CustomEvent('click'));\n              } else {\n                self.chartInstance.apiInstance.plotEventHandler(self.chartInstance.apiInstance.getDatasets()[0].components.data[plotIndex < 0 ? 0 : plotIndex].graphics.pointersPath, new CustomEvent('click'));\n              }\n            } else if (self.chartType === 'funnel' || self.chartType === 'pyramid') {\n              self.chartInstance.apiInstance.plotEventHandler(self.chartInstance.apiInstance.getDatasets()[0]._components.data[plotIndex < 0 ? (self.chartType === 'funnel' ? 1 : 0) : plotIndex]._graphics.trackerObj, new CustomEvent('click'));\n            } else if (self.chartType === 'hlineargauge') {\n              self.chartInstance.apiInstance.plotEventHandler(self.chartInstance.apiInstance.getDatasets()[0].components.data[plotIndex < 0 ? 0 : plotIndex].graphics.pointer, new CustomEvent('click'));\n            }\n            if (self.chartType === 'pie2d' || self.chartType === 'pie3d' || self.chartType === 'doughnut2d' || self.chartType === 'doughnut3d') {\n              self.chartInstance.apiInstance.getDatasets()[0].plotGraphicClick.call(self.chartInstance.apiInstance.getDatasets()[0].components.data[plotIndex < 0 ? 0 : plotIndex].graphics.element);\n            }\n            // keyCaptured = true;\n            break;\n        }\n        if (keyCaptured) {\n          event.preventDefault();\n          if (self._conf.plotData[plotIndex]) {\n            let plotElem = getPlotElement(self._conf.plotData[plotIndex]);\n            if (plotElem) {\n              if (document.activeElement === plotElem.node) continue;\n\n              crossBrowserFocus(plotElem.node);\n              elemVisible = true;\n            }\n          }\n        } else { break; }\n      }\n    };\n\n    let getPlotElement = (plot) => {\n        switch (this.chartType) {\n          case 'pyramid':\n          case 'funnel':\n            return plot._graphics.graphic;\n          case 'angulargauge':\n            if (plot.graphics.pointersTpath.data('eventArgs')) {\n              return plot.graphics.pointersTpath;\n            }\n            return plot.graphics.pointersPath;\n          case 'hlineargauge':\n            return plot.graphics.pointer;\n          case 'hled':\n          case 'vled':\n            return plot.graphics.element.parent.parent.node.children[0];\n          case 'hbullet':\n          case 'vbullet':\n            return plot.graphics.element.parent.parent;\n          default:\n            return plot.graphics.element;\n        }\n      },\n\n      firstElementIndex = -1,\n\n      // eslint-disable-next-line no-unused-vars\n      addAria = (function () {\n        let getPlotStats = (plotConfig, i) => {\n            let plotStat = {};\n\n            // label\n            plotStat['{label}'] = plotConfig.label || plotConfig.categoryLabel || plotConfig.dataLabel || '';\n            // value\n            plotStat['{value}'] = plotConfig.y || plotConfig.setValue || 0;\n            plotStat['{target}'] = plotConfig.target || 0;\n            plotStat['{formattedValue}'] = plotConfig.formatedVal || this.chartInstance.formatNumber(plotStat['{value}']) || '';\n            plotStat['{plotIndex}'] = i + 1;\n            plotStat['{totalPlots}'] = plotData.length;\n            plotStat['{percentValue}'] = plotConfig.pValue;\n\n            return plotStat;\n          },\n\n          /**\n       * Add aria values to a plot with given index\n       *\n       * There may be cases where data is null in chart data, in such cases dom is not renereded\n       * i denotes the index of plot in chart data\n       *\n       * The correct dom index for next plot is returned from function, if the data is found to be invalid then current dom element is matched for next data\n       * @param {*} i\n       *\n       */\n          plotIterator = (i) => {\n            let alternateTextsPlot;\n            if (plotData[i]) {\n              let plotElem = getPlotElement(plotData[i]);\n              if (plotElem) {\n                if (firstElementIndex === -1) firstElementIndex = i;\n                let plotStats;\n                if (this.chartType === 'pyramid' || this.chartType === 'funnel') {\n                  plotStats = getPlotStats(plotData[i], i);\n                } else {\n                  plotStats = getPlotStats(plotData[i].config, i);\n                }\n                alternateTextsPlot = this.alternateTexts.plot;\n                if ((plotData[i].config.setLink && plotData[i].config.setLink !== '') || (plotData[i].config.link && plotData[i].config.link !== '') || (plotData[i].config.dataLink && plotData[i].config.dataLink !== '') || (plotData[i].link && plotData[i].link !== '')) {\n                  // eslint-disable-next-line good-practices/no-static-strings-in-scope\n                  alternateTextsPlot += ' This is a clickable plot';\n                }\n\n                this.addTabIndexAndSetAria(plotElem.node || plotElem, alternateTextsPlot, mergeDeep(this.chartPropertyMap, plotStats), firstElementIndex === i ? '2' : '-1', 'img', {\n                  pIndex: i\n                });\n                (plotElem.node || plotElem).removeEventListener('keydown', (plotElem.node || plotElem).plotSelectOnKeyPressSS, false);\n                (plotElem.node || plotElem).plotSelectOnKeyPressSS = self._conf.plotSelectOnKeyPressSS;\n                (plotElem.node || plotElem).addEventListener('keydown', (plotElem.node || plotElem).plotSelectOnKeyPressSS, false);\n              }\n            }\n          };\n\n        for (let i = 0; i < dataLength; i++) {\n          plotIterator(i);\n        }\n\n        if (this.chartType === 'waterfall2d') {\n          plotIterator(dataLength);\n        }\n      }.call(this));\n  }\n}\n\nclass FCAccessibilitySingleSeriesWithLegend extends FCAccessibilityLegendEnabled {\n  // eslint-disable-next-line no-useless-constructor\n  constructor (svgRoot, chartInstance, alternateTexts, config) {\n    super(svgRoot, chartInstance, alternateTexts, config);\n  }\n\n  /**\n   * Make single series chart with legend accessible\n   */\n  makeSingleSeriesWithLegendAccessible () {\n    this.makeLegendAccessible();\n\n    let accessibleSingleSeries = new FCAccessibilitySingleSeries(this.svgRoot, this.chartInstance, this.alternateTexts, this.config);\n    accessibleSingleSeries.makeSingleSeriesAccessible();\n  }\n}\n\nexport { FCAccessibilitySingleSeries, FCAccessibilitySingleSeriesWithLegend };\n","/**\n * Returns true if item is an object, otherwise false\n * @param {*} item\n */\nlet isObject = (item) => {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n};\n\n/**\n * Deep merge contents of multiple objects to return one single merged object\n * @param {*} target\n * @param {*} sources\n */\nexport function mergeDeep (target, ...sources) {\n  if (!sources.length) return target;\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n\n/**\n * Replace multiple sub strings of a string with another strin\n * The sub string and replaced string must be passed as key-value pair object format\n * @param {*} str\n * @param {*} mapObj\n */\nexport function replaceMultipleStrings (str, mapObj) {\n  let re = new RegExp(Object.keys(mapObj).join('|'), 'gi');\n\n  return str.replace(re, function (matched) {\n    return mapObj[matched];\n  });\n}\n\n/**\n * A cross browser focus function\n * @param {*} elemet\n */\nexport function crossBrowserFocus (elemet) {\n  if (elemet.focus) {\n    elemet.focus();\n  }\n  return elemet;\n}\n\n/**\n * Returns true if the browser is edge, false otherwise\n */\nexport function isEdge () {\n  return navigator.userAgent.indexOf('Edge') >= 0;\n}\n\n/**\n * Returns true if the browser is IE, false otherwise\n */\nexport function isIE () {\n  return /MSIE|Trident/.test(navigator.userAgent);\n}\n","/* eslint-disable no-empty-function */\n/* eslint-disable no-fallthrough */\n/* eslint-disable default-case */\n/* eslint-disable no-inner-declarations */\nimport { mergeDeep, crossBrowserFocus } from '../util';\nimport FCAccessibilityExportEnabled from './exportEnabled';\nimport FCAccessibilityBase from './base';\n\nlet UNDEF;\nclass FCAccessibilityLegendEnabled extends FCAccessibilityExportEnabled {\n  // eslint-disable-next-line no-useless-constructor\n  constructor (svgRoot, chartInstance, alternateTexts, config) {\n    super(svgRoot, chartInstance, alternateTexts, config);\n  }\n\n  /**\n     * True if all plots are hidden by legend interaction as a result legends are also in disabled state\n     * False otherwise\n     */\n  isAllLegendItemHidden () {\n    let legend = this.chartInstance.apiInstance._components.legend;\n    // Applies only for discrete legend\n    if (legend && legend.length !== 0) {\n      let legendItems = legend[0]._components.legendItem;\n      if (!legendItems) return false;\n      for (let i = 0; i < legendItems.length; i++) {\n        if (legendItems[i]._legendState.indexOf('hidden') === -1) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n     * Checks if all a specific legend items is diabled by legend interaction\n     * @param {number} index\n     */\n  isLegendItemHidden (index) {\n    let legendItems = this.chartInstance.apiInstance._components.legend && this.chartInstance.apiInstance._components.legend[0]._components.legendItem;\n    if (!legendItems) return false;\n    return legendItems[index]._legendState.indexOf('hidden') >= 0;\n  }\n\n  /**\n     * Make chart legend accessible\n     */\n  makeLegendAccessible (bLegend) {\n    let bindLegend = bLegend;\n    (bindLegend === UNDEF) && (bindLegend = true);\n    if (!bindLegend) {\n      return;\n    }\n    var self = this;\n    if (this.chartInstance.getChartAttribute('showlegend') !== '0') {\n      // let legendRegion = this.svgRoot.querySelectorAll(\"g[class^=raphael][class$=legendGroup] > [class$=item]\");\n      // if(legendRegion && legendRegion.length > 0) {\n      //     this.addTabIndexAndSetAria(legendRegion[0], null, null, \"-1\", \"region\");\n      // }\n      let legendTexts = this.svgRoot.querySelectorAll('g[class^=raphael][class$=legendGroup] > [class$=item] > text');\n      if (legendTexts && legendTexts.length > 0) {\n        let legendLength = legendTexts.length,\n          legendIndex = -1;\n        function legendSelectOnKeyPress (event) {\n          let elem = this,\n            keyCaptured = false;\n          event.stopPropagation();\n          switch (event.keyCode) {\n            case 37:\n              // left arrow\n            case 38:\n              // up arrow\n              if (legendIndex > 0) {\n                legendIndex = (+elem.getAttribute('pIndex')) - 1;\n              }\n              keyCaptured = true;\n              break;\n            case 39:\n              // right arrow\n            case 40:\n              // down arrow\n              if (legendIndex < legendLength - 1) {\n                // ++legendIndex;\n                legendIndex = (+elem.getAttribute('pIndex')) + 1;\n              }\n              keyCaptured = true;\n              break;\n            case 13:\n              // Enter\n            case 32:\n              // spacebar\n              legendIndex = +elem.getAttribute('pIndex');\n              self.chartInstance.apiInstance._components.legend[0]._components.legendItem[legendIndex].fireEvent('fc-click');\n              // @todo\n              setTimeout(() => {\n                self.makeMultiSeriesAccessible && self.makeMultiSeriesAccessible(false);\n              }, 100);\n              keyCaptured = true;\n              break;\n          }\n          if (keyCaptured) {\n            crossBrowserFocus(legendTexts[legendIndex]);\n            event.preventDefault();\n          }\n        }\n\n        for (let i = 0; i < legendTexts.length; i++) {\n          let legendStat = {};\n          legendStat['{legendText}'] = legendTexts[i].innerHTML;\n\n          this.addTabIndexAndSetAria(legendTexts[i], this.alternateTexts.legendItem, mergeDeep(this.chartPropertyMap, legendStat), i === 0 ? '3' : '-1', 'button', { pIndex: i });\n          legendTexts[i].removeEventListener('keydown', legendTexts[i].legendSelectOnKeyPress, false);\n          legendTexts[i].legendSelectOnKeyPress = legendSelectOnKeyPress;\n          legendTexts[i].addEventListener('keydown', legendTexts[i].legendSelectOnKeyPress, false);\n        }\n\n        /**\n         * Handler for updating legend index on focus\n         */\n        function legendIndexUpdate () {\n          legendIndex = 0;\n        }\n        // If first legend is focused by pressing tab then legendIndex will be zero\n        legendTexts[0].addEventListener('focus', legendIndexUpdate);\n      }\n    }\n  }\n\n  /**\n     * Function to make lower and upper sliders accessible for gradient legend\n     */\n  makeGradientLegendAccessible () {\n    let legendSliders = this.svgRoot.querySelectorAll('g[class^=raphael][class$=fc-gl-slider]'),\n      chartInstance = this.chartInstance,\n      ariaLabelMethod = this.addTabIndexAndSetAria,\n      alternateTexts = this.alternateTexts,\n      chartPropertyMap = this.chartPropertyMap;\n    if (legendSliders) {\n      let legendStat = {},\n        sliders,\n        lowerSliderCurrentPos = 0,\n        upperSliderCurrentPos = 0;\n      // Lable for sliders\n      legendStat['{lowerRangeLabel}'] = this.chartData.colorrange.startlabel;\n      legendStat['{upperRangeLabel}'] = this.chartData.colorrange.endlabel;\n      // Get the sliders element of Fusioncharts.\n      sliders = chartInstance.apiInstance._components.gLegend[0].sGroup.sliders;\n\n      legendStat['{rangeStart}'] = legendStat['{currentStartValue}'] = sliders['false'].rangeGroup.updateWhenInMove(sliders['false'], sliders['false'].currPos);\n      legendStat['{rangeEnd}'] = legendStat['{currentEndValue}'] = sliders['true'].rangeGroup.updateWhenInMove(sliders['true'], sliders['true'].currPos);\n\n      // Set aria-label for both the sliders\n      this.addTabIndexAndSetAria(legendSliders[0], this.alternateTexts.lowerRange, mergeDeep(this.chartPropertyMap, legendStat), '3');\n      this.addTabIndexAndSetAria(legendSliders[1], this.alternateTexts.upperRange, mergeDeep(this.chartPropertyMap, legendStat), '3');\n\n      /**\n             * Function to handle the movement of sliders on left/right arrow key press\n             * @param {Object} event - the event object associated\n             * @param {Number} index - index of the slider\n             */\n      function slideRangeOnKeyPress (event, index) {\n        event.stopPropagation();\n        let keyCode = event.keyCode,\n          extremes = chartInstance.apiInstance._components.gLegend[0].sGroup.extremes,\n          displacement = 0,\n          currentPos = (index === 0) ? lowerSliderCurrentPos : upperSliderCurrentPos,\n          keyCaptured = false,\n          sliderRange = Math.floor(extremes[1] - extremes[0]),\n          bothSlidersOverlapped = (sliderRange + upperSliderCurrentPos === lowerSliderCurrentPos),\n          maxDisplacement = (index === 0) ? sliderRange : -sliderRange,\n          self,\n          newValue;\n        if (index === 0) {\n          self = chartInstance.apiInstance._components.gLegend[0].sGroup.sliders['false'];\n        } else {\n          self = chartInstance.apiInstance._components.gLegend[0].sGroup.sliders['true'];\n        }\n        switch (keyCode) {\n          // Left arrow key\n          case 37:\n            if ((index === 0 && currentPos > 0) || (index === 1 && currentPos > maxDisplacement && !bothSlidersOverlapped)) {\n              displacement = currentPos - sliderRange / 10;\n              (index === 0) ? (lowerSliderCurrentPos = displacement) : (upperSliderCurrentPos = displacement);\n              keyCaptured = true;\n            }\n            break;\n\n            // Right arrow key\n          case 39:\n            if ((index === 0 && currentPos < maxDisplacement && !bothSlidersOverlapped) || (index === 1 && currentPos < 0)) {\n              displacement = currentPos + sliderRange / 10;\n              (index === 0) ? (lowerSliderCurrentPos = displacement) : (upperSliderCurrentPos = displacement);\n              keyCaptured = true;\n            }\n            break;\n        }\n\n        newValue = self.rangeGroup.updateWhenInMove(self, self.currPos + displacement);\n        // Update lower/upper range according to the sliders moved\n        if (index === 0) {\n          legendStat['{currentStartValue}'] = newValue;\n        } else {\n          legendStat['{currentEndValue}'] = newValue;\n        }\n        ariaLabelMethod(legendSliders[0], alternateTexts.lowerRange, mergeDeep(chartPropertyMap, legendStat), '3');\n        ariaLabelMethod(legendSliders[1], alternateTexts.upperRange, mergeDeep(chartPropertyMap, legendStat), '3');\n\n        if (keyCaptured) {\n          // Call the dragAPI of the library\n          let dragAPI;\n          if (index === 0) {\n            dragAPI = chartInstance.apiInstance._components.gLegend[0].sGroup.sliders['false'].getDragAPI();\n          } else {\n            dragAPI = chartInstance.apiInstance._components.gLegend[0].sGroup.sliders['true'].getDragAPI();\n          }\n          dragAPI.dragStart({ stopPropagation: function () {} });\n          dragAPI.dragging({ stopPropagation: function () {}, data: [displacement] });\n        }\n      }\n\n      // eslint-disable-next-line good-practices/no-anonymous-handler\n      legendSliders[0].addEventListener('keydown', function (event) {\n        slideRangeOnKeyPress(event, 0);\n      });\n      // eslint-disable-next-line good-practices/no-anonymous-handler\n      legendSliders[1].addEventListener('keydown', function (event) {\n        slideRangeOnKeyPress(event, 1);\n      });\n    }\n  }\n}\n\nexport { FCAccessibilityBase, FCAccessibilityLegendEnabled };\n","/* eslint-disable no-fallthrough */\n/* eslint-disable default-case */\nimport { crossBrowserFocus } from '../util';\nimport FCAccessibilityBase from './base';\n\nconst EMPTY = '';\n\n/**\n * This class adds export as a accessibility feature\n */\nclass FCAccessibilityExportEnabled extends FCAccessibilityBase {\n  // eslint-disable-next-line no-useless-constructor\n  constructor (svgRoot, chartInstance, alternateTexts, config) {\n    super(svgRoot, chartInstance, alternateTexts, config);\n  }\n\n  // Make chart export accessible\n  makeExportAccessible () {\n    if (this.chartData.chart.exportenabled) {\n      const exportButton = this.svgRoot.querySelector(\n          'g[class^=raphael][class$=toolbar] > [class$=button]'\n        ),\n        self = this,\n        itemContainer = this.chartInstance.apiInstance\n          .getFromEnv('chart-container')\n          .querySelector('[type=div]'),\n        items = itemContainer.childNodes;\n\n      let keyCaptured = false,\n        exportItemIndex = -1;\n      this.addTabIndexAndSetAria(\n        exportButton,\n        this.alternateTexts.exportMenu,\n        this.chartPropertyMap,\n        '4',\n        'button'\n      );\n\n      // eslint-disable-next-line no-inner-declarations\n      function exportSelectOnKeyPress (event) {\n        let elem = this;\n        event.stopPropagation();\n        switch (event.keyCode) {\n          case 37:\n            // left arrow\n          case 38:\n            // up arrow\n            if (keyCaptured) {\n              if (exportItemIndex > 0) {\n                exportItemIndex = +elem.getAttribute('pIndex') - 1;\n              } else if (exportItemIndex === -1) {\n                exportItemIndex = items.length - 1;\n              }\n            }\n            break;\n          case 39:\n            // right arrow\n          case 40:\n            // down arrow\n            if (keyCaptured) {\n              if (exportItemIndex > -1 && exportItemIndex < items.length - 1) {\n                exportItemIndex = +elem.getAttribute('pIndex') + 1;\n              } else if (exportItemIndex === -1) {\n                exportItemIndex = 0;\n              }\n            }\n            break;\n          case 13:\n            // Enter\n          case 32:\n            // spacebar\n            if (exportItemIndex === -1) {\n              if (keyCaptured) {\n                self.chartInstance.apiInstance._env.hamburger.fireEvent('fc-mouseout');\n              } else {\n                self.chartInstance.apiInstance._env.hamburger.fireEvent('fc-mouseover');\n              }\n              keyCaptured = !keyCaptured;\n            } else {\n              self.chartInstance.apiInstance.getFromEnv('hamburger')._componentStore.listContainer.elemStore[0]._componentStore.item.elemStore[exportItemIndex].fireEvent('fc-click');\n              exportItemIndex = -1;\n              keyCaptured = false;\n            }\n            break;\n          case 27:\n            // escape\n            crossBrowserFocus(exportButton);\n            self.chartInstance.apiInstance._env.hamburger.fireEvent('fc-mouseout');\n            keyCaptured = false;\n            exportItemIndex = -1;\n            break;\n        }\n        if (keyCaptured && exportItemIndex > -1) {\n          crossBrowserFocus(items[exportItemIndex]);\n          event.preventDefault();\n        }\n      }\n\n      // Make Export Items Accessible\n      for (let i = 0; i < items.length; i++) {\n        let item = items[i];\n        item.style.outline = EMPTY;\n        self.addTabIndexAndSetAria(\n          item,\n          Array.isArray(self.alternateTexts.exportMenuItems) ? self.alternateTexts.exportMenuItems[i] : null,\n          self.chartPropertyMap,\n          i === 0 ? '4' : '-1',\n          'button',\n          { pIndex: i }\n        );\n        items[i].removeEventListener(\n          'keydown',\n          items[i].exportSelectOnKeyPress,\n          false\n        );\n        items[i].exportSelectOnKeyPress = exportSelectOnKeyPress;\n        items[i].addEventListener(\n          'keydown',\n          items[i].exportSelectOnKeyPress,\n          false\n        );\n      }\n\n      exportButton.addEventListener('keydown', exportSelectOnKeyPress);\n    }\n  }\n}\n\nexport default FCAccessibilityExportEnabled;\n","/* eslint-disable no-fallthrough */\nimport chartTypes from '../supportedChartTypes';\nimport { mergeDeep, replaceMultipleStrings, isEdge, isIE } from '../util';\n\nconst TABIndex = 'tabindex',\n  TABIndexForEdge = 'tabIndex';\n\nclass FCAccessibilityBase {\n  constructor (svgRoot, chartInstance, alternateTexts, config) {\n    // Root SVG element\n    this.svgRoot = svgRoot;\n\n    // Instance of FusionCharts object\n    this.chartInstance = chartInstance;\n\n    // The alternate texts to be read out by screen reader\n    this.alternateTexts = alternateTexts;\n\n    // Additional configuration for accessibility\n    this.config = config;\n\n    // Chart JSON data\n    this.chartData = chartInstance.getJSONData();\n\n    // Type of the chart\n    this.chartType = this.chartInstance.chartType();\n\n    // If browser is IE\n    this.isIE = isIE();\n\n    // Key value pairs, the keys are the macros used in alternate texts and can be set by users, while the values are picked dynamically from the chart which will be replaced in place of the macros\n    this.chartPropertyMap = {\n      '{chartType}': (this.config && this.config.chartType) || this._getFormattedChartName(this.chartType),\n      '{caption}': this.chartData.chart.caption,\n      '{subcaption}': this.chartData.chart.subcaption\n    };\n  }\n\n  // Get display name from chart type\n  _getFormattedChartName () {\n    let chartType = this.chartType;\n    return chartTypes.hasOwnProperty(chartType) ? chartTypes[chartType].displayName : chartType;\n  }\n\n  /**\n     * Add axis related information in chart property map\n     */\n  addAxisInformation () {\n    this.chartPropertyMap = mergeDeep(this.chartPropertyMap, {\n      '{xAxisName}': this.chartData.chart.xaxisname || '',\n      '{yAxisName}': this.chartData.chart.yaxisname || ''\n    });\n  }\n\n  /**\n     * Add tab index and aria attribute to a SVG element\n     * @param {*} elem SVG element on which tabindex and aria attributes will be applied\n     * @param {*} txtToReplace Text to replace in string\n     * @param {*} propertyMap Key value pair which will be used to replace macros inside a text with chart specific values\n     * @param {*} tabindex Tabindex to set on the element - usually 0 or 1\n     * @param {*} role Aria role to add on the element\n     */\n  // eslint-disable-next-line class-methods-use-this\n  addTabIndexAndSetAria (elem, txtToReplace, propertyMap, tabin, role, customAttr) {\n    if (elem) {\n      let tabIndexText = TABIndex,\n        tabindex;\n      if (isEdge()) {\n        // Edge browser seems to have some problem if the attribute name is tabindes\n        // Edge works well with tabIndex but all other browser stops working with tabIndex\n        tabIndexText = TABIndexForEdge;\n      }\n      tabindex = tabin || '0';\n      elem.setAttribute(tabIndexText, tabindex || '0');\n\n      // if(tabindex == \"0\") {\n      //     elem.setAttribute('focusable', 'true');\n      // }\n\n      // For IE make all elements navigable by TAB key only, as keyboard navigation does not work for IE\n      // Although focusable attribute is applied to all elements but as of now only IE works on this attribute\n      // All other browser ignore the attribute as of now, hence a redundant check is ommitted to check the browser\n      // If browser behavior changes with the release of SVG2 or any browser changing their own behavior, we need to update this section\n\n      // Performing this test and enabling only for IE will make Edge browser work with Narrator flawlessly\n      // But not work with JAWS\n      // Hence a middle ground is followed - IE and Edge behavior is made similar by removing the check\n      // if(this.isIE) {\n      elem.setAttribute('focusable', 'true');\n      // }\n\n      // if(!(this.config.readerPreferenceForEdge == 'narrator' && !this.isIE)) {\n      //    elem.setAttribute('focusable', 'true');\n      // }\n\n      txtToReplace && propertyMap && elem.setAttribute('aria-label', replaceMultipleStrings(txtToReplace, propertyMap));\n      if (customAttr) {\n        // eslint-disable-next-line guard-for-in\n        for (let key in customAttr) {\n          elem.setAttribute(key, customAttr[key]);\n        }\n      }\n      role && elem.setAttribute('role', role);\n    }\n  }\n\n  /**\n     *\n     * @param {*} elem - Element on which the aria-hidden attribute will be applied\n     * @param {*} hiddenFlag - value to the aria-hidden attribute\n     * @param {*} role - Aria role to add on the element\n     */\n  // eslint-disable-next-line class-methods-use-this\n  addAriaHiddenAndRole (elem, hiddenFlag, role) {\n    if (elem) {\n      elem.setAttribute('aria-hidden', hiddenFlag);\n      // Set Aria-role if provided\n      if (role) {\n        elem.setAttribute('role', role);\n      }\n    }\n  }\n\n  /**\n     * Make a chart accessible\n     * @param {*} plotEventHandler The event handler which will add all the necessary aria of all elements\n     */\n  makeChartAccessible (plotEventHandler) {\n    let chartInstance = this.chartInstance,\n      addAriaHiddenAndRole = this.addAriaHiddenAndRole,\n      backButton;\n\n    // TO-DO : Evaluate if all plot information should be included in chart aria\n    // And generalize below section for all charts\n    if (this.chartType === 'funnel') {\n      let label, value;\n      for (let i = 0; i < this.chartData.data.length; i++) {\n        if (this.chartData.data[i].value) {\n          label = this.chartData.data[i].label;\n          value = this.chartInstance.formatNumber(this.chartData.data[i].value);\n          break;\n        }\n      }\n      this.chartPropertyMap = mergeDeep(this.chartPropertyMap, {\n        '{plot-0-label}': label || '',\n        '{plot-0-value}': value || ''\n      });\n    }\n\n    // Span container is marked as role=\"region\", as per WCAG 2.1 guidelines.\n    this.addTabIndexAndSetAria(this.chartInstance.apiInstance.getFromEnv('chart-container'), null, null, '-1', 'region');\n    this.addTabIndexAndSetAria(this.svgRoot, this.alternateTexts.chart, this.chartPropertyMap, '1');\n    backButton = this.chartInstance.jsVars.overlayButton;\n    /**\n     *\n     * @param {Object} event - Handler for back button press\n     */\n    function backButtonKeyPress (event) {\n      event.stopPropagation();\n      // eslint-disable-next-line default-case\n      switch (event.keyCode) {\n        case 13:\n          // Enter\n        case 32:\n          // spacebar\n          backButton.click();\n          break;\n      }\n    }\n    if (backButton) {\n      this.addTabIndexAndSetAria(backButton, 'Back Button. Click this button to go back to the previous chart.', this.chartPropertyMap, '5', 'button');\n      backButton.addEventListener('keydown', backButtonKeyPress.bind(this), false);\n    }\n\n    if (plotEventHandler) {\n      plotEventHandler.call(this);\n      // this.svgRoot.addEventListener('focus', plotEventHandler.bind(this), {once: true});\n    }\n\n    /**\n     *\n     * @param {Object} event - Handler to set \"aria-hidden\" property on tooltip\n     */\n    function setAriaHiddenForTooltip (value, role) {\n      let tooltipElement = chartInstance.apiInstance.getFromEnv('chart-container').querySelectorAll('.fc__tooltip')[0];\n      addAriaHiddenAndRole(tooltipElement, value, role);\n    }\n\n    // Adding accessibilty for tooltips when they are available\n    this.chartInstance.addEventListener('dataPlotRollOver', setAriaHiddenForTooltip.bind(null, false, 'tooltip'));\n\n    this.chartInstance.addEventListener('dataPlotRollOut', setAriaHiddenForTooltip.bind(null, true, 'tooltip'));\n  }\n}\n\nexport default FCAccessibilityBase;\n","// eslint-disable-next-line no-unused-vars\nlet chartTypes;\nexport default chartTypes = {\n  'msline':\n    { displayName: 'multi series line', category: 'multiseries' },\n  'msspline':\n    { displayName: 'multi series spline', category: 'multiseries' },\n  'stackedarea2d':\n    { displayName: 'stacked area', category: 'multiseries' },\n  'msarea':\n    { displayName: 'multi series area', category: 'multiseries' },\n  'msstepline':\n    { displayName: 'multi series step line', category: 'multiseries' },\n  'mscolumn2d':\n    { displayName: 'multi series column', category: 'multiseries' },\n  'mscolumn3d':\n    { displayName: 'multi series column 3D', category: 'multiseries' },\n  'msbar2d':\n    { displayName: 'multi series bar', category: 'multiseries' },\n  'msbar3d':\n    { displayName: 'multi series bar 3D', category: 'multiseries' },\n  'stackedcolumn2d':\n    { displayName: 'stacked column', category: 'multiseries' },\n  'stackedcolumn3d':\n    { displayName: 'stacked column 3D', category: 'multiseries' },\n  'stackedbar2d':\n    { displayName: 'stacked bar', category: 'multiseries' },\n  'stackedbar3d':\n    { displayName: 'stacked bar 3D', category: 'multiseries' },\n  'inversemscolumn2d':\n    { displayName: 'inverse axis multi series column', category: 'multiseries' },\n  'inversemsline':\n    { displayName: 'inverse axis multi series line', category: 'multiseries' },\n  'inversemsarea':\n    { displayName: 'inverse axis multi series area', category: 'multiseries' },\n  'logmscolumn2d':\n    { displayName: 'log axis multi series column', category: 'multiseries' },\n  'logmsline':\n    { displayName: 'log axis multi series line', category: 'multiseries' },\n  'logstackedcolumn2d':\n    { displayName: 'log axis stacked column', category: 'multiseries' },\n  'pie2d':\n    { displayName: 'pie', category: 'multiseries' },\n  'pie3d':\n    { displayName: 'pie 3D', category: 'multiseries' },\n  'doughnut2d':\n    { displayName: 'doughnut', category: 'multiseries' },\n  'doughnut3d':\n    { displayName: 'doughnut 3D', category: 'multiseries' },\n  'column2d':\n    { displayName: 'column', category: 'multiseries' },\n  'column3d':\n    { displayName: 'column 3D', category: 'multiseries' },\n  'bar2d':\n    { displayName: 'bar', category: 'multiseries' },\n  'bar3d':\n    { displayName: 'bar 3D', category: 'multiseries' },\n  'waterfall2d':\n    { displayName: 'waterfall', category: 'multiseries' },\n  'mscombi2d':\n    { displayName: 'Multi-series 2D Single Y Combination Chart', category: 'multiseries' },\n  'mscombidy2d':\n    { displayName: 'Multi-series 2D Dual Y Combination Chart', category: 'multiseries' },\n  'area2d':\n    { displayName: 'area', category: 'multiseries' },\n  'heatmap':\n    { displayName: 'heatmap', category: 'multiseries' }\n};\n","/* eslint-disable one-var */\n/* eslint-disable good-practices/no-single-usage-variable */\n/* eslint-disable no-fallthrough */\n/* eslint-disable default-case */\nimport { mergeDeep, crossBrowserFocus } from '../util';\nimport { FCAccessibilityLegendEnabled } from './legendEnabled';\n\nlet UNDEF;\nclass FCAccessibilityMultiSeries extends FCAccessibilityLegendEnabled {\n  constructor (svgRoot, chartInstance, alternateTexts, config) {\n    super(svgRoot, chartInstance, alternateTexts, config);\n\n    this.addAxisInformation();\n  }\n\n  /**\n     * Make multi series chart accessible\n     */\n  makeMultiSeriesAccessible (bEvent) {\n    let bindEvent = bEvent,\n      self = this,\n      dataSet,\n      categoryLength,\n      seriesLength,\n      dataLength;\n    (bindEvent === UNDEF) && (bindEvent = true);\n    !self._conf && (self._conf = {});\n    // Make the legend accessible\n    self.makeLegendAccessible(bindEvent);\n\n    // Make the Export accessible\n    self.makeExportAccessible();\n\n    // Get chart plot points\n    dataSet = self.chartInstance.apiInstance.getDatasets();\n    categoryLength = self.chartData.categories && self.chartData.categories[0].category.length;\n    seriesLength = self.chartData.dataset.length;\n    dataLength = self.chartData.dataset && self.chartData.dataset.length > 0 ? self.chartData.dataset[0].data.length : 0;\n\n    if (this.chartType === 'logmscolumn2d' || this.chartType === 'logmsline') {\n      dataLength = categoryLength;\n    }\n\n    self._conf.seriesLength = seriesLength;\n    self._conf.dataLength = dataLength;\n    self._conf.dataSet = dataSet;\n\n    self._conf.plotSelectOnKeyPressMS = function (event) {\n      var elem = this, plotIndex, seriesIndex;\n      plotIndex = +elem.getAttribute('pIndex');\n      seriesIndex = +elem.getAttribute('sIndex');\n\n      if (this.chartType === 'logmscolumn2d' || this.chartType === 'logmsline2d') {\n        dataLength = categoryLength;\n      }\n      self._conf.dataLength = self.chartData.dataset[seriesIndex].data.length;\n\n      if (!self.isAllLegendItemHidden()) {\n        let keyCaptured = false, elemVisible = false, limitExceeded = false,\n          stackedCharts = ['stackedcolumn2d', 'stackedcolumn3d'],\n          arrayFound = stackedCharts.filter(function (item) { return item === self.chartInstance.chartType(); }),\n          isStackedChart = arrayFound.length !== 0;\n        while (!elemVisible) {\n          switch (event.keyCode) {\n            case 37:\n              // left arrow\n              if (plotIndex > 0) { --plotIndex; } else { limitExceeded = true; }\n\n              keyCaptured = true;\n              break;\n            case 39:\n              if (plotIndex < self._conf.dataLength - 1) { ++plotIndex; } else { limitExceeded = true; }\n\n              keyCaptured = true;\n              break;\n            case 38:\n              // up arrow\n              // For stacked charts, up arrow will navigate to the next series\n              if (seriesIndex < self._conf.seriesLength - 1 && isStackedChart) { ++seriesIndex; } else if (seriesIndex > 0 && !isStackedChart) { --seriesIndex; } else { limitExceeded = true; }\n\n              keyCaptured = true;\n              break;\n            case 40:\n              // down arrow\n              // For stacked charts, down arrow will navigate to the previous series\n              if (seriesIndex > 0 && isStackedChart) { --seriesIndex; } else if (seriesIndex < self._conf.seriesLength - 1 && !isStackedChart) { ++seriesIndex; } else { limitExceeded = true; }\n\n              keyCaptured = true;\n              break;\n            case 13:\n              // Enter\n            case 32:\n              // spacebar\n              self.chartInstance.apiInstance.getDatasets()[seriesIndex]._firePlotEvent('fc-click', plotIndex < 0 ? 0 : plotIndex, new CustomEvent('click'));\n              // keyCaptured = true;\n              break;\n          }\n\n          if (keyCaptured) {\n            if (limitExceeded) { break; }\n\n            // if(plots[seriesIndex] && plots[seriesIndex].children && plots[seriesIndex].children.length > 0 && plots[seriesIndex].children[plotIndex] && getComputedStyle(plots[seriesIndex].children[plotIndex]).display != \"none\") {\n            //     elemVisible = true;\n            // } dataSet[i].components.data[j].graphics.element.node\n\n            if (self._conf.dataSet[seriesIndex].components.data[plotIndex].graphics.element && getComputedStyle(self._conf.dataSet[seriesIndex].components.data[plotIndex].graphics.element.node).display !== 'none') {\n              elemVisible = true;\n            }\n\n            if (!elemVisible && (event.keyCode === 37 || event.keyCode === 39) && self.isLegendItemHidden(seriesIndex)) {\n              ++seriesIndex;\n              plotIndex = -1;\n            }\n          } else { break; }\n        }\n\n        if (keyCaptured && elemVisible) {\n          crossBrowserFocus(self._conf.dataSet[seriesIndex].components.data[plotIndex].graphics.element.node);\n        }\n      }\n    };\n    // All multi series chart has series name\n\n    // Bubble chart has x,y,z value and also name of a bubble can be specified\n    let bubblePlotProperties = (i, j) => {\n        let plotStat = {};\n        // x value of bubble\n        plotStat['{xValue}'] = this.chartData.dataset[i].data[j].x || '';\n        // y value of bubble\n        plotStat['{yValue}'] = this.chartData.dataset[i].data[j].y || '';\n        // z value of bubble\n        plotStat['{zValue}'] = this.chartData.dataset[i].data[j].z || '';\n        // label of the bubble\n        plotStat['{bubbleName}'] = this.chartData.dataset[i].data[j].name || '';\n        // Series name\n        plotStat['{seriesName}'] = this.chartData.dataset[i].seriesname || '';\n\n        return plotStat;\n      },\n\n      // Scatter chart has x and y value\n      scatterPlotProperties = (i, j) => {\n        let plotStat = {};\n        // x value of bubble\n        plotStat['{xValue}'] = this.chartData.dataset[i].data[j].x || '';\n        // y value of bubble\n        plotStat['{yValue}'] = this.chartData.dataset[i].data[j].y || '';\n        // Series name\n        plotStat['{seriesName}'] = this.chartData.dataset[i].seriesname || '';\n\n        return plotStat;\n      },\n\n      // For all other supported multi series chart label and value is present\n      defaultMultiSeriesPlotPorperties = (i, j) => {\n        let plotStat = {};\n        // Label\n        plotStat['{label}'] = (this.chartData.categories && this.chartData.categories[0].category[j].label) || '';\n        // value\n        plotStat['{value}'] = this.chartData.dataset[i].data[j].value;\n        // Formatted value\n        plotStat['{formattedValue}'] = this.chartInstance.formatNumber(this.chartData.dataset[i].data[j].value);\n        // Series\n        plotStat['{seriesName}'] = this.chartData.dataset[i].seriesname || '';\n\n        return plotStat;\n      },\n\n      // Based on the chart type, property formatter is decided\n      propertyFormatter;\n    switch (this.chartType) {\n      case 'scatter':\n        propertyFormatter = scatterPlotProperties;\n        break;\n      case 'bubble':\n        propertyFormatter = bubblePlotProperties;\n        break;\n      default:\n        propertyFormatter = defaultMultiSeriesPlotPorperties;\n        break;\n    }\n\n    let alternateTextsPlot;\n\n    // Tab index and aria attribute is inserted for each plot point\n    for (let i = 0; i < seriesLength; i++) {\n      for (let j = 0; j < dataLength; j++) {\n        let plotStat = propertyFormatter.call(this, i, j);\n\n        if (this.chartType === 'scatter') {\n          dataLength = self.chartData.dataset[i].data.length;\n        }\n        plotStat['{plotIndex}'] = j + 1;\n        plotStat['{seriesIndex}'] = i + 1;\n        plotStat['{totalPlots}'] = dataLength;\n        plotStat['{totalSeries}'] = seriesLength;\n        alternateTextsPlot = this.alternateTexts.plot;\n        if ((dataSet[i].components.data[j].config.setLink && dataSet[i].components.data[j].config.setLink !== '') || (dataSet[i].components.data[j].config.link && dataSet[i].components.data[j].config.link !== '')) {\n          alternateTextsPlot += ' This is a clickable plot';\n        }\n\n        // this.addTabIndexAndSetAria(plots[i].children[j], this.alternateTexts.plot, extend(this.chartPropertyMap, plotStat), i==0 && j==0 ? \"0\" : \"-1\");\n        this.addTabIndexAndSetAria(dataSet[i].components.data[j].graphics.element && dataSet[i].components.data[j].graphics.element.node, alternateTextsPlot, mergeDeep(this.chartPropertyMap, plotStat), i === 0 && j === 0 ? '2' : '-1', 'img', {\n          sIndex: i,\n          pIndex: j\n        });\n        let element = dataSet[i].components.data[j].graphics.element;\n        element && element.node.removeEventListener('keydown', element.node.plotSelectOnKeyPressMS, false);\n        element && (element.node.plotSelectOnKeyPressMS = self._conf.plotSelectOnKeyPressMS);\n        element && element.node.addEventListener('keydown', element.node.plotSelectOnKeyPressMS, false);\n      }\n    }\n  }\n}\n\nexport default FCAccessibilityMultiSeries;\n","/* eslint-disable default-case */\nimport { mergeDeep, crossBrowserFocus } from '../util';\nimport { FCAccessibilityLegendEnabled } from './legendEnabled';\n\nclass FCAccessibilityHeatMap extends FCAccessibilityLegendEnabled {\n  constructor (svgRoot, chartInstance, alternateTexts, config) {\n    super(svgRoot, chartInstance, alternateTexts, config);\n\n    this.addAxisInformation();\n  }\n\n  /**\n     * Make multi series chart accessible\n     */\n  makeNestedDataAccessible () {\n    let gLegend = this.chartInstance.apiInstance._components.gLegend,\n      dataSet,\n      chartData,\n      seriesLength,\n      dataLength,\n      rows,\n      columns,\n      propertyFormatter,\n      plotIndex,\n      seriesIndex;\n    // Make the legend accessible\n    if (gLegend) {\n      this.makeGradientLegendAccessible();\n    } else {\n      this.makeLegendAccessible();\n    }\n\n    // Make the Export accessible\n    this.makeExportAccessible();\n\n    // Get chart plot points\n    dataSet = this.chartInstance.apiInstance.getDatasets();\n    chartData = this.chartData.dataset;\n    seriesLength = this.chartData.dataset.length;\n    dataLength = this.chartData.dataset && this.chartData.dataset.length > 0 ? this.chartData.dataset[0].data.length : 0;\n    rows = this.chartData.rows.row;\n    columns = this.chartData.columns.column;\n\n    // Add properties for heatmap plots\n    propertyFormatter = function (i, j) {\n      let plotStat = {},\n        currentRow,\n        currentColumn,\n        dataset = this.chartData.dataset,\n        rowId = dataset[i].data[j].rowid,\n        columnId = dataset[i].data[j].columnid;\n        // value\n      plotStat['{value}'] = dataset[i].data[j].value;\n      // Formatted value\n      plotStat['{formattedValue}'] = this.chartInstance.formatNumber(dataset[i].data[j].value);\n      // Labels for a plot\n      plotStat['{topLeftLabel}'] = dataset[i].data[j].tllabel;\n      plotStat['{topRightLabel}'] = dataset[i].data[j].trlabel;\n      plotStat['{bottomLeftLabel}'] = dataset[i].data[j].bllabel;\n      plotStat['{bottomRightLabel}'] = dataset[i].data[j].brlabel;\n\n      currentRow = rows.find(function (row) {\n        if (row.id.toUpperCase() === rowId.toUpperCase()) { return row; }\n        return false;\n      });\n\n      currentColumn = columns.find(function (column) {\n        if (column.id.toUpperCase() === columnId.toUpperCase()) { return column; }\n        return false;\n      });\n      // x-axis and y-axis lables for plots\n      plotStat['{yAxisLabel}'] = currentRow.label;\n      plotStat['{xAxisLabel}'] = currentColumn.label;\n\n      return plotStat;\n    };\n\n    // Tab index and aria attribute is inserted for each plot point\n    for (let i = 0; i < seriesLength; i++) {\n      for (let j = 0; j < dataLength; j++) {\n        let plotStat = propertyFormatter.call(this, i, j);\n\n        plotStat['{plotIndex}'] = j + 1;\n        plotStat['{totalPlots}'] = dataLength;\n\n        this.addTabIndexAndSetAria(dataSet[i].components.data[j].graphics.element && dataSet[i].components.data[j].graphics.element.node, this.alternateTexts.plot, mergeDeep(this.chartPropertyMap, plotStat), (i === 0 && j === 0) ? '2' : '-1');\n      }\n    }\n\n    plotIndex = -1;\n    seriesIndex = 0;\n    function plotSelectOnKeyPress (event) {\n      if (!this.isAllLegendItemHidden()) {\n        let keyCaptured = false, elemVisible = false, limitExceeded = false,\n          targetCell, newRow, currentRow, currentColumn, currentRowIndex;\n        if (plotIndex !== -1) {\n          // Get the current row and column id\n          currentRow = chartData[seriesIndex].data[plotIndex].rowid;\n          currentColumn = chartData[seriesIndex].data[plotIndex].columnid;\n          currentRowIndex = rows.findIndex(function (item) {\n            return (item.id === currentRow);\n          });\n          // currentColumnIndex = columns.findIndex(function (item) {\n          //   return (item.id === currentColumn);\n          // });\n        }\n\n        while (!elemVisible) {\n          switch (event.keyCode) {\n            case 38:\n              // Up arrow\n              if (currentRowIndex > 0) {\n                newRow = currentRowIndex - 1;\n                // eslint-disable-next-line no-loop-func\n                targetCell = chartData[seriesIndex].data.findIndex(function (item) {\n                  return (item.rowid === rows[newRow].id && item.columnid === currentColumn);\n                });\n                if (targetCell > -1) { plotIndex = targetCell; }\n              }\n              keyCaptured = true;\n              break;\n            case 40:\n              // Down arrow\n              if (currentRowIndex < rows.length - 1) {\n                newRow = currentRowIndex + 1;\n                // eslint-disable-next-line no-loop-func\n                targetCell = chartData[seriesIndex].data.findIndex(function (item) {\n                  return (item.rowid === rows[newRow].id && item.columnid === currentColumn);\n                });\n                if (targetCell > -1) { plotIndex = targetCell; }\n              }\n              keyCaptured = true;\n              break;\n            case 37:\n              // left arrow\n              if (plotIndex > 0) { --plotIndex; } else { limitExceeded = true; }\n\n              keyCaptured = true;\n              break;\n            case 39:\n              // right arrow\n              if (plotIndex < dataLength - 1) { ++plotIndex; } else { limitExceeded = true; }\n\n              keyCaptured = true;\n              break;\n          }\n\n          if (keyCaptured) {\n            if (limitExceeded) { break; }\n\n            if (dataSet[seriesIndex].components.data[plotIndex].graphics.element && getComputedStyle(dataSet[seriesIndex].components.data[plotIndex].graphics.element.node).display !== 'none') {\n              elemVisible = true;\n            }\n\n            if (!elemVisible && (event.keyCode === 37 || event.keyCode === 39) && this.isLegendItemHidden(seriesIndex)) {\n              ++seriesIndex;\n              plotIndex = -1;\n            }\n          } else { break; }\n        }\n\n        if (keyCaptured && elemVisible) {\n          crossBrowserFocus(dataSet[seriesIndex].components.data[plotIndex].graphics.element.node);\n        }\n      }\n    }\n\n    // If first value of first series is focus by pressing tab then plotIndex is not updated\n    // eslint-disable-next-line good-practices/no-anonymous-handler\n    dataSet[0].components.data[0].graphics.element && dataSet[0].components.data[0].graphics.element.node.addEventListener('focus', function () {\n      plotIndex = seriesIndex = 0;\n    });\n\n    this.svgRoot.addEventListener('keydown', plotSelectOnKeyPress.bind(this), false);\n  }\n}\n\nexport default FCAccessibilityHeatMap;\n"],"sourceRoot":""}