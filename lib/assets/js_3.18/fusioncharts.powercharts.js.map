{"version":3,"sources":["webpack:///./packages/fc-powercharts/src/dataset/msstepline/index.js","webpack:///./packages/fc-powercharts/src/dataset/msstepline/index.animation.js","webpack:///./packages/fusioncharts/viz/dragnode.js","webpack:///./packages/fc-powercharts/src/chart/dragnode/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/dragnode.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/dragnode-animation.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/dragablelabels.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/draggablelabel-animation.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/connector.js","webpack:///./packages/fc-powercharts/src/dataset/dragnode/connector-animation.js","webpack:///./packages/fc-powercharts/src/dataset/groups/dragnode/index.js","webpack:///./packages/fc-powercharts/src/factories/dragnode-dataset.js","webpack:///./packages/fusioncharts/viz/candlestick.js","webpack:///./packages/fc-powercharts/src/chart/candlestick/index.js","webpack:///./packages/fc-powercharts/src/factories/candlestick-dataset.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/index.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/candlestick.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/candlestick.animation.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/candlestickbar.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/candlestickbar.animation.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/candlestickline.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/volume.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/trendset.js","webpack:///./packages/fc-powercharts/src/dataset/candlestick/trendset.animation.js","webpack:///./packages/fc-powercharts/src/factories/candlestick-axis.js","webpack:///./packages/fusioncharts/viz/boxandwhisker2d.js","webpack:///./packages/fc-powercharts/src/chart/boxandwhisker2d/index.js","webpack:///./packages/fc-powercharts/src/dataset/boxandwhisker/index.js","webpack:///./packages/fc-powercharts/src/dataset/boxandwhisker/boxandwhiskerline.js","webpack:///./packages/fc-powercharts/src/dataset/boxandwhisker/boxandwhiskerline.animation.js","webpack:///./packages/fc-powercharts/src/dataset/boxandwhisker/index.animation.js","webpack:///./packages/fc-powercharts/src/factories/boxandwhisker-dataset.js","webpack:///./packages/fc-powercharts/src/dataset/boxandwhisker/box-and-whisker-statistical-calc.js","webpack:///./packages/fc-powercharts/src/dataset/groups/boxandwhisker-multiseries/index.js","webpack:///./packages/fusioncharts/viz/sankey.js","webpack:///./packages/fc-powercharts/src/chart/sankey/index.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/index.js","webpack:///./packages/fc-powercharts/src/factories/sankey-node-factory.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/sankey-node.js","webpack:///./packages/fc-powercharts/src/factories/sankey-link-factory.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/sankey-link.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/sankey-ribbon.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/sankeyhelper.js","webpack:///./packages/fc-powercharts/src/dataset/sankey/index.animation.js","webpack:///./packages/fc-powercharts/src/factories/sankey-dataset-factory.js","webpack:///./packages/fusioncharts/viz/heatmap.js","webpack:///./packages/fc-powercharts/src/chart/heatmap/index.js","webpack:///./packages/fc-powercharts/src/dataset/heatmap/index.js","webpack:///./packages/fc-powercharts/src/dataset/heatmap/index.animation.js","webpack:///./packages/fc-powercharts/src/dataset/groups/heatmap/index.js","webpack:///./packages/fc-powercharts/src/factories/category-axis.js","webpack:///./packages/fusioncharts/viz/radar.js","webpack:///./packages/fc-powercharts/src/chart/radar/index.js","webpack:///./packages/fc-powercharts/src/dataset/radar/index.js","webpack:///./packages/fc-powercharts/src/dataset/radar/index.animation.js","webpack:///./packages/fc-powercharts/src/factories/radar-axis.js","webpack:///./packages/fc-core/src/axis/polar.js","webpack:///./packages/fc-core/src/axis/polar.animation.js","webpack:///./packages/fc-powercharts/src/factories/polar-canvas.js","webpack:///./packages/fc-powercharts/src/_internal/components/canvases/polar-canvas.js","webpack:///./packages/fc-core/src/axis-ref-visuals/axis-ref-polar-component.js","webpack:///./packages/fc-core/src/axis-ref-visuals/axis-ref-polar.animation.js","webpack:///./packages/fusioncharts/viz/chord.js","webpack:///./packages/fc-powercharts/src/chart/chord/index.js","webpack:///./packages/fc-charts/src/factories/chord-legend.js","webpack:///./packages/fc-powercharts/src/factories/node-link-manager.js","webpack:///./packages/fc-powercharts/src/dataset/chord/node-link-manager.js","webpack:///./packages/fc-powercharts/src/factories/chord-node-factory.js","webpack:///./packages/fc-powercharts/src/dataset/chord/node.js","webpack:///./packages/fc-powercharts/src/chart/chord/utils/index.js","webpack:///./packages/fc-powercharts/src/factories/chord-link-factory.js","webpack:///./packages/fc-powercharts/src/dataset/chord/ribbon.js","webpack:///./packages/fusioncharts/viz/dragarea.js","webpack:///./packages/fusioncharts/features/multicanvas-crossline-manager.js","webpack:///./packages/fusioncharts/powercharts/index.js","webpack:///./packages/fusioncharts/viz/logmscolumn2d.js","webpack:///./packages/fc-powercharts/src/chart/logmscolumn2d/index.js","webpack:///./packages/fc-powercharts/src/chart/_internal/mslog.js","webpack:///./packages/fc-powercharts/src/factories/log-axis.js","webpack:///./packages/fc-core/src/axis/log.js","webpack:///./packages/fusioncharts/viz/logmsline.js","webpack:///./packages/fc-powercharts/src/chart/logmsline/index.js","webpack:///./packages/fusioncharts/viz/logstackedcolumn2d.js","webpack:///./packages/fc-powercharts/src/chart/logstackedcolumn2d/index.js","webpack:///./packages/fusioncharts/viz/errorbar2d.js","webpack:///./packages/fc-powercharts/src/chart/errorbar2d/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorbar2d/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorbar2d/index.animation.js","webpack:///./packages/fusioncharts/viz/errorline.js","webpack:///./packages/fc-powercharts/src/chart/errorline/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorline/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorline/error.animation.js","webpack:///./packages/fc-powercharts/src/dataset/errorline/line.animation.js","webpack:///./packages/fusioncharts/viz/errorscatter.js","webpack:///./packages/fc-powercharts/src/chart/errorscatter/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorscatter/index.js","webpack:///./packages/fc-powercharts/src/dataset/errorscatter/line.animation.js","webpack:///./packages/fc-powercharts/src/dataset/errorscatter/error.animation.js","webpack:///./packages/fusioncharts/viz/inversemsarea.js","webpack:///./packages/fc-powercharts/src/chart/inversemsarea/index.js","webpack:///./packages/fusioncharts/viz/inversemscolumn2d.js","webpack:///./packages/fc-powercharts/src/chart/inversemscolumn2d/index.js","webpack:///./packages/fusioncharts/viz/inversemsline.js","webpack:///./packages/fc-powercharts/src/chart/inversemsline/index.js","webpack:///./packages/fusioncharts/viz/dragcolumn2d.js","webpack:///./packages/fc-powercharts/src/chart/dragcolumn2d/index.js","webpack:///./packages/fc-powercharts/src/chart/_internal/dragbase.js","webpack:///./packages/fc-powercharts/src/chart/_internal/editable-charts.js","webpack:///./packages/fc-powercharts/src/dataset/dragcolumn/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragcolumn/index.animation.js","webpack:///./packages/fc-powercharts/src/dataset/groups/dragcolumn-multiseries/index.js","webpack:///./packages/fc-powercharts/src/factories/limit-updater.js","webpack:///./packages/fc-core/src/axis/limit-updater.js","webpack:///./packages/fc-powercharts/src/factories/drag-tracker.js","webpack:///./packages/fc-powercharts/src/chart/_internal/drag-tracker.js","webpack:///./packages/fusioncharts/viz/dragline.js","webpack:///./packages/fc-powercharts/src/chart/dragline/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragline/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragarea/index.js","webpack:///./packages/fc-powercharts/src/dataset/dragarea/index.animation.js","webpack:///./packages/fc-powercharts/src/dataset/dragline/index.animation.js","webpack:///./packages/fc-powercharts/src/chart/dragarea/index.js","webpack:///./packages/fusioncharts/viz/kagi.js","webpack:///./packages/fc-powercharts/src/chart/kagi/index.js","webpack:///./packages/fc-powercharts/src/chart/waterfall2d/index.js","webpack:///./packages/fc-powercharts/src/dataset/waterfall2d/index.js","webpack:///./packages/fc-powercharts/src/dataset/waterfall2d/index.animation.js","webpack:///./packages/fc-powercharts/src/dataset/kagi/index.js","webpack:///./packages/fc-powercharts/src/dataset/kagi/index.animation.js","webpack:///./packages/fusioncharts/viz/waterfall2d.js","webpack:///./packages/fusioncharts/viz/selectscatter.js","webpack:///./packages/fc-powercharts/src/chart/selectscatter/index.js","webpack:///./packages/fc-powercharts/src/dataset/selectscatter/index.js","webpack:///./packages/fc-powercharts/src/dataset/selectscatter/index.animation.js","webpack:///./packages/fusioncharts/viz/multilevelpie.js","webpack:///./packages/fc-powercharts/src/chart/multilevelpie/index.js","webpack:///./packages/fc-powercharts/src/factories/mlpie-dataset.js","webpack:///./packages/fc-powercharts/src/dataset/multilevelpie/index.js","webpack:///./packages/fc-powercharts/src/dataset/multilevelpie/index.animation.js","webpack:///./packages/fusioncharts/viz/sunburst.js","webpack:///./packages/fc-powercharts/src/chart/sunburst/index.js","webpack:///./packages/fc-powercharts/src/factories/sunburst-dataset.js","webpack:///./packages/fc-powercharts/src/dataset/sunburst/index.js","webpack:///./packages/fc-powercharts/src/dataset/sunburst/index.animation.js","webpack:///./packages/fusioncharts/viz/multiaxisline.js","webpack:///./packages/fc-powercharts/src/chart/multiaxisline/index.js","webpack:///./packages/fc-powercharts/src/factories/multiaxis-axis.js","webpack:///./packages/fc-powercharts/src/_internal/components/axis-selector-ui/index.js","webpack:///./packages/fc-powercharts/src/factories/multiaxis-vcanvas.js","webpack:///./packages/fc-powercharts/src/factories/multiaxis-dataset.js","webpack:///./packages/fc-powercharts/src/dataset/multiaxisline/index.js","webpack:///./packages/fc-powercharts/src/dataset/multiaxisline/index.animation.js","webpack:///./packages/fusioncharts/viz/msstepline.js","webpack:///./packages/fc-powercharts/src/chart/msstepline/index.js"],"names":["addDep","name","type","extension","msStepLineAnimation","getPathArr","pathArr","this","path2Arr","length","concat","getType","getName","__setDefaultConfig","config","drawverticaljoins","UNDEF","useforwardsteps","_addLegend","legendItem","conf","legend","getFromEnv","chartAttr","drawAnchors","pluckNumber","drawanchors","JSONData","enabled","includeinlegend","drawLine","pluck","anchorSide","anchorsides","label","getFirstValue","seriesname","legendIconAlpha","legendiconalpha","getItem","legendItemId","createItem","addExtEventListener","itemClickFn","configure","setStateCosmetics","symbol","fill","toRaphaelColor","color","anchorbgcolor","alpha","anchorbgalpha","bgAlpha","legendiconbgalpha","borderAlpha","legendiconborderalpha","rawFillColor","rawStrokeColor","anchorbordercolor","stroke","anchorborderthickness","getState","removeLegendState","setLegendState","disposeItem","getLinePath","data","positions","lastXPos","i","xPos","yPos","dataObj","setValue","chartConfig","connectNullData","connectnulldata","obj","drawVerticalJoins","halfStep","stepatmiddle","getPVR","lastValidValue","temp","temp2","pointsJoined","startPos","begin","endPos","end","step","viewPortConfig","dataWithRemovedPaths","isSkipped","_Px","_Py","isNull","push","LineDataset","lineAnimation","Dragnode","configurer","DragNode","chart","fireGroupEvent","usesXYinCategory","dontShowLegendByDefault","registerFactory","datasetFactory","axisFactory","_checkInvalidSpecificData","dataset","_mouseEvtHandler","e","parseChartAttr","transcoders","getDepsByType","call","formAction","getValidValue","formaction","showLegend","showlegend","submitdataasxml","ZEROSTRING","formdataformat","csv","format","formDataFormat","xml","formTarget","formtarget","formMethod","formmethod","submitFormAsAjax","submitformusingajax","viewMode","viewmode","drawTrendRegion","chartConf","hasLegend","defaultDatasetType","limitUpdaterEnabled","skipClipping","numVDivLines","numDivLines","setadaptivexmin","showLimits","showdivlinevalues","showzeroplane","showyaxisvalues","enablemousetracking","showzeroplaneontop","addConfigureOptions","restore","submit","toolbar","hamburgerMenu","getChild","getId","configureTools","handler","getChildren","showNodeAddUI","action","showConnectorAddUI","showLabelUpdateUI","showRestoreBtn","restoreBtnTitle","restoreData","showFormBtn","submitBtnTitle","submitData","appendInMenu","getDSdef","dsType","DragNodeConnector","DragNodeDataset","DragNodeLabels","getDSGroupdef","DragNodeGroup","_setCategories","catObj","xAxis","categories","category","catLen","catArr","x","setTickValues","getJSONData","jsonObj","groupManager","datasetsArr","extend2","connectors","labels","DragBase","prototype","Raphael","getDep","mathMax","Math","max","mathMin","min","CIRCLE","preDefStr","POLYGON","RECTANGLE","UNDERSCORE","GROUPID","EVENTARGS","OBJECTBOUNDINGBOX","DEFAULT_CURSOR","DEFAULT","COMMA","POSITION_TOP","isVML","hasSVG","hideFn","hide","defined","createGroup","groupName","animationManager","parentContainer","component","setAnimation","el","attr","container","getPointColor","colorVal","alphaVal","shapeType","colorObj","innerColor","outerColor","getFirstColor","getFirstAlpha","getLightColor","getDarkColor","FCcolor","gradientUnits","ratio","BGRATIOSTRING","angle","cx","cy","r","radialGradient","_configureTooltext","datasetConf","toolText","setTooltext","formatedVal","xValue","pointLabel","tooltipSepChar","parseTooltext","yaxisName","parseUnsafeString","yaxisname","xaxisName","xaxisname","yDataValue","xDataValue","seriesNameInToolTip","BLANK","dragNodeAnimation","parent","getLinkedParent","changeInfo","setState","childChanged","asyncDraw","show","_setDatasetIndex","chidrenArr","datasetIndex","indexOf","pointInShape","y","x2","y2","r2","width","height","canvasConfig","_xPos","_yPos","canvasLeft","canvasWidth","canvasTop","canvasHeight","_plotWidth","_plotHeight","Number","radius","_firePlotEvent","eventType","plotIndex","eventArgs","setLink","components","toolTipController","sharedAnchor","getGraphicalElement","setElement","graphics","element","toolTip","currentToolTip","ele","_decideTooltipType","_rolloverResponseSetter","node","style","cursor","POINTER","_rolloutResponseSetter","plotEventHandler","hideWaitElem","clearTimeout","_longpressactive","drawWaitingRing","clearLongPress","dragUp","event","_dragUp","dragMove","customData","dx","dy","px","py","_dragMove","dragStart","_dragStart","bBox","getBBox","cloneGraphic","cloneGraphicGroup","getContainer","cloneText","image","cloneImage","_","dirty","allowDrag","clone","appendChild","followers","origX","lastDx","origY","lastDy","fireChartInstanceEvent","dxVal","dyVal","transform","startX","endX","startY","endY","canvasRight","canvasBottom","draged","_transformObj","_getHoveredPlot","res","tree","getNeighbour","pointIndex","index","hovered","pointObj","unHoverAttr","Object","keys","path","polyPathToPath","shapeArg","sides","startAngle","rollOverProperties","hoverAttr","startConnectors","endConnectors","setObj","len","dataStore","yAxis","updateObj","getValue","update","id","updatePointConfig","parsePlotAttributes","_drawNode","drawNodeConnectors","getMouseCoordinate","sourceEvent","_setupKdTree","updateConf","numberFormatter","getCleanValue","_options","dataLabels","showTooltip","getNode","nodes","configureAttributes","datasetJSON","trimData","plotFillAlpha","showPlotBorder","plotBorderColor","plotBorderThickness","plotBorderAlpha","useRoundEdges","dIndex","dataLength","ZERO","colorM","HUNDRED","HUNDREDSTRING","context","showValues","showvalues","useroundedges","zIndex","showInLegend","showtooltip","seriesNameInTooltip","seriesnameintooltip","showTextOutline","textoutline","tooltipsepchar","plotfillalpha","showplotborder","plotbordercolor","plotborderthickness","plotborderalpha","use3DLighting","Boolean","use3dlighting","is3d","getPlotColor","nodeFillAlpha","datasetShowPlotBorder","datasetPlotBorderColor","nodebordercolor","datasetPlotBorderThickness","nodeborderthickness","datasetPlotBorderAlpha","nodeborderalpha","datasetAllowDrag","allowdrag","fillColor","convertColor","lineColor","lineWidth","visible","initiallyhidden","yMin","yMax","xMax","xMin","_refreshData","_setConfigure","shape","itemValueY","itemValueX","safeLabel","setData","datasetId","Infinity","datasetColor","datasetAlpha","value","tooltext","plottooltext","displayValue","link","toLowerCase","numSides","numsides","borderColor","bordercolor","imageURL","imageurl","imageNode","imagenode","imageWidth","imagewidth","imageHeight","imageheight","imageAlign","imagealign","labelAlign","labelalign","POSITION_MIDDLE","hovercolor","borderhoveralpha","borderhovercolor","borderhoverthickness","hoveralpha","hoverheight","hoverradius","hoverwidth","dataLabelStyle","_configureDataLabelStyle","mapSymbolName","cloneFillColor","colorArr","pointHoverOptions","use3D","borderThickness","add","removed","defaults","rawhoverBorderColor","hoverEffect","showhovereffect","plothovereffect","rolloverProperties","plotfillhovercolor","plotfillhoveralpha","plotborderhovercolor","plotborderhoveralpha","plotborderhoverthickness","plothoverheight","plothoverwidth","plothoverradius","rawhoverAlpha","rawhoverColor","rawhoverBorderAlpha","rollOverAttrs","includeInLegend","itemStyle","hiddenStyle","itemHiddenStyle","datasetVisible","hoverStyle","itemHoverStyle","anchorBorderThickness","createContainer","getChildContainer","addContainer","defaultVcanvasGroup","vcanvasLabelGroup","draw","ln","group","smartLabel","removeDataArr","removeDataArrLen","css","fontFamily","fontSize","lineHeight","fontWeight","fontStyle","_contextChanged","opacity","useEllipsesOnOverflow","useEllipsesWhenOverflow","drawn","_removeDataVisuals","shift","dataLen","searchDataArr","maxRadius","isNaN","props","shapeInfo","KdTree","buildKdTree","_setSearchLimit","drawLabel","labelAttrs","labelElement","plotLabelStyle","valueString","smartTextObj","labelDisplacement","set","yAdjustment","labelY","groupId","plotWidth","plotHeight","setGraphics","setStyle","getSmartText","POSITION_BOTTOM","_yAdjustment","BLANKSTRING","text","title","backgroundColor","borderPadding","borderRadius","borderDash","outlineText","addGraphicalElement","drag","datasetName","sourceType","hoverColor","hoverAlpha","borderHoverColor","borderHoverAlpha","borderHoverThickness","hoverHeight","hoverWidth","hoverRadius","confShapeArg","isRectangle","imageY","pointAttr","polypath","cloneImageAttr","imageElementAttr","datasetComponents","getPixel","split","elemType","SHAPE_RECT","imageX","src","imageElement","allocatePosition","manager","graphic","remove","animationDone","doNotRemove","callback","prevData","prevDataLength","currDataLength","dataDiff","removeData","indexVal","stretchVal","stretch","splice","_clearConnectors","graphicsObj","jsonData","Areadataset","initialAttr","finalAttr","slot","PX","TRACKER_FILL","isIE","draggablelabelAnimation","labelFontSize","setDataArr","inCanvasStyle","inCanFontSize","fontsize","labelColor","hashify","padding","labelCSS","labelBGColor","bgcolor","replace","dropHash","HASHSTRING","labelBDColor","borderthickness","dashLen","dashlen","dashGap","dashgap","dashed","bgColor","dim","lStyle","SmartLabel","align","POSITION_CENTER","getDashStyle","DASH_DEF","visibility","visibleStr","PXSTRING","setLineHeight","labelCSSApplied","getOriSize","elementCheck","dataLabelContainer","removeCSS","drawTracker","trackerElement","trackerElementCheck","trackerGroup","elemMouseDownFN","dataSet","labelObj","triggerLabelUI","elemMouseMoveFN","elemMouseUPFN","fireClick","elemHoverFN","elemOutFN","_labelDragMove","_labelDragStart","_labelDragUp","on","hover","ox","oy","positionData","configStr","_getlinePath","connector","pointConfig","fromPointObj","toPointObj","fromX","fromY","toX","toY","arrowAtStart","_drawArrow","arrowAtEnd","connectorAnimation","connectorsObj","connectorsArr","connectorsTooltext","connectortooltext","stdThickness","stdthickness","conColor","conAlpha","conDashGap","conDashLen","conDashed","arrowatstart","arrowatend","conStrength","strength","toolTipSepChar","connectorObj","labelTextObj","connectorStore","connObj","connectorLabel","setConAlpha","defToolTextMacro","setConColor","connectorToolText","boolCondition","toString","from","to","customToolText","dashStyle","labelWidth","widht","labelHeight","connectorGroup","fromId","toId","cleared","deleted","drawConnector","strokeWidth","fromConf","toConf","NumberFormatter","_labelX","_labelY","textBgColor","fromNodeId","toNodeId","fromXValue","fromYValue","fromXDataValue","fromYDataValue","fromLabel","toXValue","toYValue","toXDataValue","toYDataValue","toLabel","connectorsGroup","pool","mouseDown","mousemove","mouseup","hoverIn","hoverOut","enableToolTip","disableToolTip","labelStyle","labelElementCheck","labelX","drawIndividualLabel","labelConnector","direction","triggerConnectorUI","X1","Y1","X2","Y2","R","H","PY","RHlf","HHlf","tanganent","atan","arr","PI","cos","sin","abs","tan","manageShapeFields","showGivenColor","manageImageFields","shapesInfo","circle","rectangle","polygon","INPUT","BLANKSPACE","LABEL","DATASET","DATASETSTATE","removeElems","makeShapeSpecificModifications","_showNodeUpdateUI","key","ui","fields","shapeFields","test","RegExp","val","getValidColor","colorOut","background","parseColor","animate","dialogHeight","chartHeight","isChecked","imgKey","ok","cancel","removeItem","error","setAnimationState","dialog","state","top","edit","noUIfound","paper","inputStyle","border","textAlign","createHtmlDialog","stopPropagation","idFound","submitObj","uiFields","uiEdit","getLimit","tooltip","draggable","imgWidth","imgHeight","imgAlign","imgUrl","circPolyRadius","polySides","rectWidth","rectHeight","updateNode","addNode","focus","enableFields","deleteNode","html","disabled","removeAttribute","clearFields","fcEach","nodeUpdateUIDefinition","def","field","innerHTML","attrs","confObj","noInput","inputType","inputPaddingTop","inputWidth","handleKeyPress","connectorUpdateUIDefinition","labelUpdateUIDefinition","options","size","addLabel","datasets","labelSet","removeElements","datastore","j","restoreDatasets","k","dataSets","json","labelDS","componentFactory","datasetDropDownStr","COMMASTRING","showNodeUpdateUI","nodeStr","showConnectorUpdateUI","fromid","toid","renderer","uiName","url","arratstart","arratend","editConnector","addConnector","deleteConnector","checkDash","showHideFn","apply","arguments","dataIndex","prop","connectorLink","conLen","connectorSets","connConfig","connFound","dialogWidth","onsubmit","oncancel","onremove","cacheUI","uiok","uicancel","uiremove","dialogAttrs","okAttrs","cancelAttrs","removeAttrs","attrObj","chartWidth","buttonStyle","paddingTop","display","veil","boxShadow","filter","tabIndex","keyCode","nodeId","assign","parentChildContainers","forEach","addChildContainer","elem","graphicalMap","cacheUpdateUI","cacheLabelDeleteUI","cacheLabelUpdateUI","cacheConnectorUpdateUIedit","cacheConnectorUpdateUInew","isVisible","getDataLimits","isNotVisible","setTimeout","showLabelDeleteUI","deleteLabel","lastTappedLabelIndex","message","translate","waitElement","ringpath","seriesName","seriesId","connectorSet","fromObj","toObj","componentDispose","children","nodeSets","labelSets","ComponentInterface","vCanvas","datasetsJSON","connectorsJSON","canvas","datasetParent","setType","setChartMessage","childArr","removeSets","Candlestick","altHGridColorStr","altHGridAlphaStr","math","mathRound","round","divLineAlpha3DStr","defaultFontStr","divLineAlphaStr","altVGridColorStr","altVGridAlphaStr","COLOR_000000","colors","c000000","chartPaletteStr","chart2D","bgAngle","bgRatio","canvasBgColor","canvasBaseColor","divLineColor","legendBgColor","legendBorderColor","toolTipbgColor","toolTipBorderColor","baseFontColor","anchorBgColor","chart3D","divLineAlpha","isDual","paletteIndex","hasInteractiveLegend","numOfCanvas","virtualCanvasFactory","CandleStickBarDataset","CandleStickLineDataset","CandleStickDataset","iscandlestick","canvasborderthickness","volumeHeightPercent","chartAttrs","showVolumeChart","showvolumechart","Array","isArray","v","volume","isVolumeChartRequired","rollOverBandColor","rolloverbandcolor","getColor","rolloverbandalpha","crosslinecolor","drawcrosslineontop","crosslinealpha","drawcrossline","vplotbordercolor","vplotborderalpha","vplotborderthickness","showvplotborder","volumeheightpercent","canvasBorderWidth","_spaceManager","spaceForActionBar","actionBarSpace","availableWidth","availableHeight","xAxisDimensions","volumeCanvas","volumeCanvasConfig","volumeCanvasY","yAxisDim","vYAxisDim","allottedSpace","diff","currentCanvasHeight","currentCanvasWidth","heightAdjust","left","right","bottom","widthAdjust","sum","legendPosition","yAxis2","actualYDim","chartBorderWidth","minCanvasHeight","minCanvasWidth","canvasMarginLeft","canvasMarginRight","canvasMarginTop","canvasMarginBottom","origCanvasTopMargin","origCanvasBottomMargin","origCanvasLeftMargin","origCanvasRightMargin","_allocateSpace","_manageActionBarSpace","POSITION_LEFT","POSITION_RIGHT","_manageLegendPosition","placeAxis","_manageChartMenuBar","intermediarySpace","canvasY","setDimension","_postSpaceManagement","setAxisDimention","vyAxis","canvasArr","axisLeft","isOpposit","opposite","axisLength","setCanvas","_feedAxesRawData","xAxisConf","yAxisConf","vYAxisConf","yAxisConfigure","xAxisConfigure","is3D","palleteString","outCanfontSizeWithUnit","pluckFontSizeMaintainUnit","outcnvbasefontsize","basefontsize","isVertical","isReverse","xaxisposition","drawTrendLabels","outCanfontFamily","outcnvbasefont","basefont","outCanfontSize","computeFontSize","outCancolor","outcnvbasefontcolor","basefontcolor","axisNamePadding","xaxisnamepadding","axisValuePadding","labelpadding","axisNameFont","xaxisnamefont","axisNameFontSize","xaxisnamefontsize","axisNameFontSizeWithUnit","axisNameFontColor","xaxisnamefontcolor","axisNameFontBold","xaxisnamefontbold","axisNameFontItalic","xaxisnamefontitalic","axisNameBgColor","xaxisnamebgcolor","axisNameBorderColor","xaxisnamebordercolor","axisNameAlpha","xaxisnamealpha","axisNameFontAlpha","xaxisnamefontalpha","axisNameBgAlpha","xaxisnamebgalpha","axisNameBorderAlpha","xaxisnameborderalpha","axisNameBorderPadding","xaxisnameborderpadding","axisNameBorderRadius","xaxisnameborderradius","axisNameBorderThickness","xaxisnameborderthickness","axisNameBorderDashed","xaxisnameborderdashed","axisNameBorderDashLen","xaxisnameborderdashlen","axisNameBorderDashGap","xaxisnameborderdashgap","useellipseswhenoverflow","vdivlinecolor","divlinecolor","vdivlinealpha","divlinealpha","divLineThickness","vdivlinethickness","divlinethickness","divLineIsDashed","vdivlinedashed","vdivlineisdashed","divlinedashed","divlineisdashed","divLineDashLen","vdivlinedashlen","divlinedashlen","divLineDashGap","vdivlinedashgap","divlinedashgap","showAlternateGridColor","showalternatevgridcolor","alternateGridColor","alternatevgridcolor","alternateGridAlpha","alternatevgridalpha","numvdivlines","labelFont","labelfont","labelfontsize","labelFontSizeWithUnit","labelFontColor","labelfontcolor","labelAlpha","labelalpha","labelFontBold","labelfontbold","labelFontItalic","labelfontitalic","labelBdrColor","labelbordercolor","labelBdrAlpha","labelborderalpha","labelLink","labellink","labelBgAlpha","labelbgalpha","labelBgColor","labelbgcolor","labelBdrThickness","labelborderthickness","labelBdrPadding","labelborderpadding","labelBdrRadius","labelborderradius","labelBdrDashed","labelborderdashed","labelBdrDashLen","labelborderdashlen","labelBdrDashGap","labelborderdashgap","axisName","axisMinValue","xaxisminvalue","axisMaxValue","xaxismaxvalue","setAdaptiveMin","adjustDiv","adjustvdiv","labelDisplay","labeldisplay","showLabels","showlabels","rotateLabels","rotatelabels","slantLabel","slantlabels","slantlabel","labelStep","labelstep","xaxisvaluesstep","showAxisValues","showxaxisvalues","showxaxisvalue","showvlimits","showDivLineValues","showvdivlinevalues","showZeroPlane","showvzeroplane","zeroPlaneColor","vzeroplanecolor","zeroPlaneThickness","vzeroplanethickness","zeroPlaneAlpha","vzeroplanealpha","showZeroPlaneValue","showvzeroplanevalue","trendlineColor","trendlinecolor","trendlineToolText","trendlinetooltext","trendlineThickness","trendlinethickness","trendlineAlpha","trendlinealpha","showTrendlinesOnTop","showtrendlinesontop","showAxisLine","showxaxisline","showaxislines","drawAxisLines","axisLineThickness","xaxislinethickness","axislinethickness","axisLineAlpha","xaxislinealpha","axislinealpha","axisLineColor","xaxislinecolor","axislinecolor","freezeLimit","vtrendlines","yaxisposition","drawLabelsOpposit","axisNameAlignCanvas","yaxisnamepadding","yaxisvaluespadding","pyaxisnamefont","pyaxisnamefontsize","pyaxisnamefontcolor","pyaxisnamefontbold","pyaxisnamefontitalic","pyaxisnamebgcolor","pyaxisnamebordercolor","pyaxisnamealpha","pyaxisnamefontalpha","pyaxisnamebgalpha","pyaxisnameborderalpha","pyaxisnameborderpadding","pyaxisnameborderradius","pyaxisnameborderthickness","pyaxisnameborderdashed","pyaxisnameborderdashlen","pyaxisnameborderdashgap","axisNameWidth","yaxisnamewidth","rotateAxisName","rotateyaxisname","pyaxisname","showalternatehgridcolor","alternatehgridcolor","alternatehgridalpha","numpdivlines","pyaxisminvalue","pyaxismaxvalue","setadaptiveymin","adjustdiv","yaxisvaluesstep","showyaxisvalue","showyaxislimits","showlimits","showdivlinevalue","zeroplanecolor","zeroplanethickness","zeroplanealpha","showzeroplanevalue","showyaxisline","yaxislinethickness","yaxislinealpha","yaxislinecolor","yaxisvaluefont","yaxisvaluefontsize","yaxisvaluefontcolor","yaxisvaluealpha","yaxisvaluefontbold","yaxisvaluefontitalic","yaxisvaluebordercolor","yaxisvaluebgalpha","yaxisvalueborderalpha","yaxisvaluelink","yaxisvaluebgcolor","yaxisvalueborderthickness","yaxisvalueborderpadding","yaxisvalueborderradius","yaxisvalueborderdashed","yaxisvalueborderdashlen","yaxisvalueborderdashgap","trendlines","axisIndex","uniqueClassName","vyaxisnamefont","vyaxisnamefontsize","vyaxisnamefontcolor","vyaxisnamefontbold","vyaxisnamefontitalic","vyaxisnamebgcolor","vyaxisnamebordercolor","vyaxisnamealpha","vyaxisnamefontalpha","vyaxisnamebgalpha","vyaxisnameborderalpha","vyaxisnameborderpadding","vyaxisnameborderradius","vyaxisnameborderthickness","vyaxisnameborderdashed","vyaxisnameborderdashlen","vyaxisnameborderdashgap","vyaxisname","numdivlines","vyaxisminvalue","vyaxismaxvalue","showsecondarylimits","mouseoutHandler","_lastDatasetIndex","_lastPointIndex","datasetOrder","getDatasets","mouseTracker","hideAll","hoveredInfo","l","derivedEvensInfo","iapi","oriEvent","originalEvent","canvasLen","coordinate","chartX","chartY","pointFound","getMouseEvents","fireOut","events","mouseoutTimer","dimensions","canvasPaddingLeft","paddingLeft","canvasPaddingRight","paddingRight","canvasPaddingTop","canvasPaddingBottom","paddingBottom","MSCartesian","volumeDatasetParent","sortedDatasetsJSON","trendSet","trendset","plotpriceas","slice","sort","a","b","arraySpliceByValue","VolumeDataset","TrendSet","iterateComponents","child","removeComponents","array","colorStrings","COLOR_B90000","B90000","COLOR_FFFFFF","FFFFFF","getPlotIndices","minX","floor","maxX","ceil","returnIndices","sortedData","__parseToolText","isLine","plotType","getLabel","open","close","high","low","volumeToolText","volumetooltext","openValue","openDataValue","closeValue","closeDataValue","highValue","highDataValue","lowValue","lowDataValue","volumeValue","volumeDataValue","BOLDSTARTTAG","candlestickAnimation","comps","removePlots","_removePlots","__removeElem","setColor","setBorderColor","setAlpha","pointShadow","minValue","maxValue","closeVal","yVal","plotSpacePercent","userMaxColWidth","dataArr","bearBorderColor","bearbordercolor","bearFillColor","bearfillcolor","bullBorderColor","bullbordercolor","bullFillColor","bullfillcolor","plotLineThickness","linethickness","plotlinethickness","plotLineDashLen","plotlinedashlen","plotLineDashGap","plotlinedashgap","_conatinerHidden","minAbsNonZeroValue","minAbsNonZeroData","defaultPadding","parentYAxis","showShadow","showshadow","showErrorValue","errorBarWidthPercent","maxcolwidth","maxColWidth","plotspacepercent","groupPadding","valuePadding","valuepadding","vline","drawVolume","plotBorderDashStyle","anchorImageUrl","anchorimageurl","plotLineAlpha","showValue","hoverEffects","previousY","errorValueArr","errorValue","errorStartValue","errorBarColor","errorBarThickness","_x","_y","_b","shadow","_parseToolText","toolTipValue","displayvalue","valuetext","addDatasetSpecificEvtArgs","_dataObj","trackerConfig","calculateScrollRange","scrollMinVal","scrollMinValForLabel","scrollMaxVal","scrollMaxValForLabel","pXs","pX","_checkPointerOverPlot","ErrorBar2DDataset","inputJSON","ROUND","applyShadow","candlestickbarAnimation","rawDataObj","enableAnimation","animation","defaultanimation","duration","animationduration","plotLineDashed","drawPlots","previousYPos","setElem","highPos","lowPos","halfW","trackerTolerance","setColumnPosition","errorBar","_height","_width","_checkPointerOverColumn","_checkPointerOverErrorBar","Column","setAnchorAngle","anchorstartangle","setAnchorRadius","anchorradius","anchorRadius","setAnchorBorderColor","setAnchorBorderThickness","setAnchorBgColor","setAnchorAlpha","anchoralpha","setAnchorBgAlpha","lineAlpha","plotlinealpha","rawDataColor","anchorSides","anchorProps","anchorAlpha","imageUrl","imageScale","imagescale","imagePadding","anchorimagepadding","imageAlpha","anchorimagealpha","chartXVal","chartYVal","returnValue","getTranslation","isWithinShape","Line","numberFormatterAttrs","vPlotBorderThickness","_containerHidden","sforcedecimals","forcevdecimals","forcedecimals","sforceyaxisvaluedecimals","forcevyaxisvaluedecimals","forceyaxisvaluedecimals","syaxisvaluedecimals","vyaxisvaluedecimals","yaxisvaluedecimals","sformatnumber","vformatnumber","formatnumber","sformatnumberscale","vformatnumberscale","formatnumberscale","sdefaultnumberscale","vdefaultnumberscale","defaultnumberscale","snumberscaleunit","vnumberscaleunit","numberscaleunit","vnumberscalevalue","numberscalevalue","sscalerecursively","vscalerecursively","scalerecursively","smaxscalerecursion","vmaxscalerecursion","maxscalerecursion","sscaleseparator","vscaleseparator","scaleseparator","snumberprefix","vnumberprefix","numberprefix","snumbersuffix","vnumbersuffix","numbersuffix","sdecimals","vdecimals","decimals","borderWidth","trendsetAnimation","itemValue","dataStoreObj","trendSetColor","trendsetcolor","trendSetAlpha","trendsetalpha","trendSetThickness","thickness","trendsetthickness","trendSetDashed","trendsetdashed","trendSetDashLen","trendsetdashlen","trendSetDashGap","trendsetdashgap","lineDashStyle","_parseAnchorProperties","interactiveLegend","line","axisRefVisualCartesianVol","vYAxis","canvasVolume","zoomObj","zoomable","pannable","axisRefVisualCartesian","redraw","redrawVol","NumericAxis","setAxisConfig","relativeAxis","setLinkedItem","attachAxis","zoomX","zoomY","Boxandwhisker2d","setAttribDefs","whiskerslimitswidthratio","attrTypeNum","pAttr","outliersupperrangeratio","outlierslowerrangeratio","showalloutliers","showmean","showsd","showmd","showqd","showminvalues","showmaxvalues","showq1values","showq3values","showmedianvalues","useErrorAnimation","avoidCrispError","useplotgradientcolor","hasScroll","eiMethods","scrollTo","includeInputOptions","avgScrollPointWidth","plotborderdashlen","plotborderdashgap","rotatevalues","anchorimagescale","anchorshadow","linedashlen","linedashgap","linedashed","linealpha","drawfullareaborder","_setAxisScale","setAxisScale","_resetViewPortConfig","resetViewPortConfig","_getLineJSONdata","showMean","currDerivedDS","currDerivedDataVal","subDSLen","currSubDS","showSD","showQD","showMD","outliers","outliersArr","valueMin","valueMax","meanValue","sdValue","mdValue","qdValue","bwCalc","derivedDS","requiredSubDs","derivedDataValue","fn","values","showvalue","showoutliervalue","valueposition","outliervalueposition","outliericoncolor","outliericonbordercolor","outliericonradius","outliericonalpha","outliericonsides","dip","outliericonshape","meanvalueposition","showmeanvalues","meaniconcolor","meaniconbordercolor","meaniconradius","meaniconalpha","meaniconsides","showline","drawmeanconnector","meaniconshape","sdvalueposition","showsdvalues","sdiconcolor","sdiconbordercolor","sdiconradius","sdiconalpha","sdiconsides","drawsdconnector","sdiconshape","qdvalueposition","showqdvalues","qdiconcolor","qdiconbordercolor","qdiconradius","qdiconalpha","qdiconsides","drawqdconnector","qdiconshape","mdvalueposition","showmdvalues","mdiconcolor","mdiconbordercolor","mdiconradius","mdiconalpha","mdiconsides","drawmdconnector","mdiconshape","showoutliervalues","drawoutliersconnector","q1","q3","median","mean","sd","md","qd","setArray","getQuartiles","getMean","getSD","getQD","getMD","showmeanvalue","showsdvalue","showqdvalue","showmdvalue","BoxAndWhiskerDataset","BoxAndWhiskerMultiSeriesGroup","MSColumn2D","strokeColor","POSITION_START","showHoverEffectStr","POSITION_END","M","V","pStr","sStr","_hide","boxandwhisker2dAnimation","parentShadowContainer","dsGroup","parserConfig","macroIndices","tempPlotfillAngle","plotDashLen","plotDashGap","isRoundEdges","showHoverEffect","plotfillAngle","plotFillRatio","plotgradientcolor","initailPlotBorderDashStyle","upperBoxHoverColor","upperBoxHoverAlpha","upperBoxBorderHoverColor","upperBoxBorderHoverAlpha","upperBoxBorderHoverThickness","lowerBoxHoverColor","lowerBoxHoverAlpha","lowerBoxBorderHoverColor","lowerBoxBorderHoverAlpha","lowerBoxBorderHoverThickness","upperQuartileHoverColor","upperQuartileHoverAlpha","upperQuartileHoverThickness","lowerQuartileHoverColor","lowerQuartileHoverAlpha","lowerQuartileHoverThickness","medianHoverColor","medianHoverAlpha","medianHoverThickness","setDisplayValue","setDataDashed","setDataPlotDashLen","setDataPlotDashGap","quartile","limits","medianValue","upperBoxColor","upperBoxAlpha","lowerBoxColor","lowerBoxAlpha","isMeanValueEnabledInData","isSDValueEnabledInData","isMDValueEnabledInData","isQDValueEnabledInData","isOutliersValueEnabledInData","difference","lowerWhiskerAlpha","upperQuartileRawColor","upperQuartileAlpha","upperBoxBorderRawColor","upperBoxBorderAlpha","lowerBoxBorderRawColor","lowerBoxBorderAlpha","lowerQuartileRawColor","lowerQuartileAlpha","defaultValue","maxmin","setDataLen","getTicksLen","plotColor","plotBorderDash","plotborderdashed","parseConfiguration","legendSymbolColor","plotfillangle","plotRadius","getDefinedColor","UNDEFINED","parentyaxis","dataSeparator","textDirection","hasrtltext","showMeanLegend","showSDLegend","showMDLegend","showQDLegend","showOutliersLegend","upperboxcolor","upperboxalpha","lowerboxcolor","lowerboxalpha","explicitData","rawValue","getMinMax","getMedian","upperquartilecolor","upperquartilealpha","upperQuartile","rawColor","upperquartilethickness","lowerquartilecolor","lowerquartilealpha","lowerQuartile","lowerquartilethickness","upperboxbordercolor","upperboxborderalpha","upperBoxBorder","upperboxborderthickness","lowerboxbordercolor","lowerboxborderalpha","lowerBoxBorder","lowerboxborderthickness","mediancolor","medianalpha","medianthickness","upperColorArr","getColumnColor","lowerColorArr","showoutlier","showMinValues","showminvalue","showMaxValues","showmaxvalue","showMedianValues","showmedianvalue","showQ3Values","showq3value","showQ1Values","showq1value","upperWhiskerRawColor","upperwhiskercolor","upperWhiskerColor","upperWhiskerAlpha","upperWhiskerThickness","upperwhiskerthickness","upperWhiskerShadowOpacity","lowerwhiskeralpha","lowerWhiskerRawColor","lowerwhiskercolor","lowerWhiskerColor","lowerWhiskerThickness","lowerwhiskerthickness","lowerWhiskerShadowOpacity","upperboxhovercolor","upperboxhoveralpha","upperboxborderhovercolor","upperboxborderhoveralpha","upperboxborderhoverthickness","lowerboxhovercolor","lowerboxhoveralpha","lowerboxborderhovercolor","lowerboxborderhoveralpha","lowerboxborderhoverthickness","upperquartilehovercolor","upperquartilehoveralpha","upperquartilehoverthickness","lowerquartilehovercolor","lowerquartilehoveralpha","lowerquartilehoverthickness","medianhovercolor","medianhoveralpha","medianhoverthickness","upperBoxHoverColorArr","lowerBoxHoverColorArr","setUpperBoxRolloutAttr","setUpperBoxRolloverAttr","setLowerBoxRolloutAttr","setLowerBoxRolloverAttr","setUpperBoxBorderRolloverAttr","setUpperBoxBorderRolloutAttr","setLowerBoxBorderRolloverAttr","setLowerBoxBorderRolloutAttr","setUpperQuartileRolloverAttr","setUpperQuartileRolloutAttr","setLowerQuartileRolloverAttr","setLowerQuartileRolloutAttr","setMedianRolloverAttr","setMedianRolloutAttr","maxDataValue","minDataValue","Q1","unformattedQ1","Q3","unformattedQ3","unformattedMedian","SD","unformattedsd","QD","unformattedQD","MD","unformattedMD","unformattedMean","formattedValue","_getOutLiersLimit","_createSubDS","lineJSON","indices","unshift","createChildIndices","dataJSON","columnWidth","yTop","yTopPos","yBottom","yBottomPos","yMed","yMedPos","upperBoxH","lowerBoxH","crispX","crispX2","crispY","hoverOutEffects","errorStartPos","halfErrorBarW","errorValPos","crispyX","crispyY","errorPath","smartText","labelBottomY","labelTopY","plotDataLabelStyle","lowerBoxBorderEleAttr","lowerBoxElemAttr","lowerQuartileEleAttr","lowerWhiskerEleAttr","midLineElemAttr","upperBoxBorderEleAttr","upperBoxElemAttr","upperQuartileEleAttr","upperWhiskerEleAttr","upperQuartileMaxLabelAttr","upperQuartileMinLabelAttr","upperQuartileLabelAttr","lowerQuartileLabelAttr","medianLabelAttr","upperBoxStartPos","lowerBoxYPos","lowerBoxHeight","lowerBoxEndPos","rotateValues","lastDataSetHeight","maximum","minimum","maxDisplayValue","minDisplayValue","medianDisplayValue","q1DisplayValue","q3DisplayValue","categoryLabel","upperQuartileColor","upperQuartileThickness","lowerQuartileColor","lowerQuartileThickness","upperBoxBorderColor","upperBoxBorderThickness","lowerBoxBorderColor","lowerBoxBorderThickness","upperBox","lowerBox","dashstyle","dashSyle","originalText","getSuggestiveRotation","lowerBoxBorderEle","lowerBoxElem","lowerQuartileEle","lowerWhiskerEle","midLineElem","upperBoxElem","upperBoxBorderEle","upperQuartileEle","upperWhiskerEle","upperQuartileMaxLabel","upperQuartileMinLabel","medianLabel","upperQuartileLabel","lowerQuartileLabel","datasetLen","upperBoxElemCheck","upperBoxBorderEleCheck","upperQuartileEleCheck","lowerBoxElemCheck","lowerBoxBorderEleCheck","lowerQuartileEleCheck","midLineElemCheck","labelCheck","upperWhiskerEleCheck","lowerWhiskerEleCheck","newupperBoxElem","newlowerBoxElem","newupperBoxBorderEle","newlowerBoxBorderEle","newupperQuartileEle","newlowerQuartileEle","newmidLineElem","newupperWhiskerEle","newlowerWhiskerEle","hoverInAttr","hoverOutAttr","subarr","arrlen","upperBoxContainer","toBack","lowerBoxContainer","medianContainer","upperWhiskerContainer","lowerWhiskerContainer","shadowContainer","clickFunc","rolloverResponseSetter","rolloutResponseSetter","shadowProps","innerLen","endPosition","getJSONIndex","mainDS","legendBackgroundColor","_mapChildren","addToEnv","legendInteractivity","childDS","ColumnDataset","SPOKE","boxandwhiskerlineAnimation","createCoordinates","Px","Py","dsData","getAllPlots","allPlots","callFromParentDS","customLegendIcon","spoke","skipCommonElements","class","newDataset","newIndex","outlierIconShape","tempIndex","newDataSetLen","imageCount","_plotConfigure","finalTooltext","Linedataset","startEnd","start","BoxAndWhiskerStatisticalCalc","nf","getFrequencies","q1Pos","q1LowPos","q3Pos","q3LowPos","q1Val","q3Val","isOdd","quartiles","freqObj","freq","frequencies","freqLen","frequency","pow","sqrt","frequenciesArr","midVal","pContainer","ColumnMultiseriesGroup","Sankey","legendFactory","sankeyDatasetFactory","legendposition","orientation","skipCanvasDrawing","alignCaptionWithCanvas","SankeyDS","_checkInvalidData","dataSource","errorMessage","parsedNodes","parsedLinks","links","nodeIds","parsedData","source","target","createNodeLinks","traverseGraph","chartObj","_container","inputConfig","graph","includes","nodeWidth","nodewidth","createNodeValues","allotedSpace","legendSpace","marginLeft","marginTop","marginRight","marginBottom","legends","postSpaceManager","allocateDimensionOfChartMenuBar","CommonAPI","START","END","linkAnimation","sankeyNodeFactory","sankeyLinkFactory","nodeStyle","nodeConfig","dsConfig","legendItemMap","curLegendItems","Set","delete","normal","rawCosmetics","item","bounds","sankeyGraph","columnHeight","columns","nodeSpacing","nodeRelaxation","nodeLabelStyle","nodeLabelCosmetics","_accomodateBoundaryHLabels","createNodeDimensions","nodeGutter","depth","columnGap","_accomodateInternalHLabels","_accomodateBoundaryVLabels","_accomodateInternalVLabels","labelSl","valueSl","space","spaceFactor","divFactor","formattedValueSl","labelSepChar","sl","maxLeftSpaceReq","maxRightSpaceReq","showLabel","labelPosition","rotateLabel","labelPadding","sourceLinks","targetLinks","getSize","_lineHeight","formattedLabel","maxColumnWidth","nodeHeight","y1","y0","maxTopSpaceReq","maxBottomSpaceReq","x1","x0","attachListeners","onFocusCallback","interactionCallback","onFocusOutCallback","onClickCallback","dragStartCallback","dragCallback","dragMoveCallback","dragEndCallback","addEventListener","mode","componentId","isDragged","highlightEffect","focusNodes","has","linkComponent","linkProps","enableDrag","curPos","evt","linkCurPos","getClip","clipAr","isParent","SmartRenderer","labelCss","nodeCss","nodeFocusCss","nodeFocusOutCss","rawLabelCosmetics","labelBorderColor","nodeLabelAlpha","inheritFromPlot","inheritlabelcolorfromnode","nodecolor","nodealpha","focusAlpha","nodehoveralpha","focusOutAlpha","nodelabelalpha","nodelabelbgcolor","nodelabelbordercolor","labelFill","nodelabelfontcolor","labelposition","nodelabelposition","validPosition","attachChild","SankeyNode","nodelabelpadding","shownodes","showlabel","shownodelabels","shownodevalues","rotatelabel","rotatenodelabels","valuePosition","plotToolText","nodeValue","nodevalue","nodeDataValue","nodedatavalue","textOutline","map","focusOut","labelXPos","labelYPos","anchor","nodeCosmetics","labelCosmetics","nodeAttr","labelAttr","symbolBBox","legendItemSymbol","finalPath","uniChar","isIpad","newPathArr","pathStart","drawcustomlegendicon","isActive","graphicalElement","substring","plotFillColor","plotIdentifier","getAttribute","setToolText","setPlotTooltext","getTooltext","gradientAngle","linkColor","linkCss","linkFocusCss","linkFocusOutCss","sourceFill","targetFill","fromNode","toNode","fromValue","toValue","linkPadding","nodelinkpadding","linktooltext","linkcolor","linkalpha","linkhoveralpha","SankeyLink","linkValue","curvature","clampNumber","linkcurvature","linkType","linktype","linkToolText","drawCustomLegendIcon","fromLegendItem","fromgraphicalElement","toLegendItem","tographicalElement","linkDataValue","fromPlotIdentifier","toPlotIdentifier","flowDirection","setLinkTooltext","pathStr","sourceNodeLen","targetNodeLen","linkConfig","linkCosmetics","sourcePoint","linkWidth","sourceNodeLayer","layer","targetNodeLayer","targetPoint","sankeyRibbon","linkAttr","C","L","sy0","sy1","ty0","ty1","cx1","cy1","cx2","cy2","sourceWidth","targetWidth","horizontalRibbon","sx0","sx1","tx0","tx1","verticalRibbon","currentSet","nextSet","_node","graphs","_props","maxDepth","MAX","MIN","_columns","_maxDepth","maxNodeWidth","minNodesLength","nodeValueFactor","columngapFactor","VERTICAL","totalValue","setnodeXY","convergence","divergence","relaxSources","relaxTargets","sortLinks","createLinkDimensions","findNodeById","_nodes","find","d","_link","ascendingHeight","ascendingWidth","_links","totalSourceValue","totalTargetValue","beta","n","targetShiftFactor","column","w","valueFactor","targetTop","resolveCollisions","sourceShiftFactor","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","_i","shiftStart","clipCanvas","clipCanvasInit","nodeLabelFontBold","nodeLabelFontItalic","nodeLabelBorderThickness","nodeLabelBorderPadding","nodeLabelBorderRadius","nodeLabelBorderDash","showNodes","dsDef","nodelabelfontbold","nodelabelfontitalic","nodelabelborderthickness","nodelabelborderpadding","nodelabelborderradius","nodelabelborderdashed","nodelabelborderdashlen","nodelabelborderdashgap","noderelaxation","nodespacing","enabledrag","highlighteffect","nodelabelfont","nodelabelfontsize","Heatmap","checkValidId","hasGradientLegend","decideLegendCreation","createColorRangeManager","dataSetFactory","isSingleSeries","colorrange","gradient","rows","skipConfigureIteration","datasetArray","unifiedDataset","row","rowid","self","columnid","createComponent","axis","configureChildren","tooltipbgcolor","tooltipbgalpha","tooltipcolor","tooltipbordercolor","tooltipborderalpha","tooltipborderthickness","showtooltipshadow","tooltipborderradius","inCanfontFamily","tooltippadding","xDepth","shiftLabels","getEffectiveDimensions","canvasPadding","xAxisPosition","mapTickValuesById","placeAxisLabelsOnTop","labelxpadding","showxaxislabels","rotatexaxislabels","maxLabelHeight","maxlabelheight","labelypadding","yaxisnamefont","yaxisnamefontsize","yaxisnamefontcolor","yaxisnamefontbold","yaxisnamefontitalic","yaxisnamebgcolor","yaxisnamebordercolor","yaxisnamealpha","yaxisnamefontalpha","yaxisnamebgalpha","yaxisnameborderalpha","yaxisnameborderpadding","yaxisnameborderradius","yaxisnameborderthickness","yaxisnameborderdashed","yaxisnameborderdashlen","yaxisnameborderdashgap","yaxisminvalue","yaxismaxvalue","showyaxislabels","maxLabelWidthPercent","maxlabelwidthpercent","hdivlinecolor","hdivlinealpha","hdivlinethickness","hdivlinedashed","hdivlineisdashed","hdivlinedashlen","hdivlinedashgap","columnObj","rowObj","columnFlag","rowFlag","columnArr","rowArr","categoryNumDivLines","categoryDivLinesFromZero","HeatMapDataset","HeatMapGroup","miterStr","hiddenStr","HTP","hasTouch","TOUCH_THRESHOLD_PIXELS","CLICK_THRESHOLD_PIXELS","mathAbs","heatmapAnimation","dataSetArray","c","plotGrid","isBar","totalRows","totalColumns","showTextOutLine","positionIndex","plotfillratio","transposeAnimation","transposeanimation","transposeAnimDuration","transposeanimduration","definedGroupPadding","maxbarheight","plotPaddingPercent","plotpaddingpercent","placeValuesInside","placevaluesinside","hoverRatio","hoverAngle","hoverBorderColor","hoverBorderAlpha","hoverBorderThickness","hoverBorderDashed","hoverBorderDashGap","hoverBorderDashLen","hoverDashStyle","hoverColorArr","heatRange","tlLabel","trLabel","blLabel","brLabel","percentValue","toolTextValue","minMaxArray","minMaxArrayLen","font","fontColor","s","usePlotGradientColor","colorRange","mapByPercent","mapbypercent","mapByCategory","mapbycategory","useColorGradient","tlType","tltype","trType","trtype","blType","bltype","brType","brtype","tlTypeToolText","trTypeToolText","blTypeToolText","brTypeToolText","colorManager","inCanfontSize","parseInt","inCancolor","eventAttached","hasState","maxMinArray","updatePlot","colorMap","colorrangelabel","categoryid","colorRangeLabel","legendItemIndex","seriesIndex","code","outOfRange","oriAlpha","rawPlotColor","columnhovercolor","columnhoveralpha","hovergradientcolor","plothovergradientcolor","hoverratio","plothoverratio","hoverangle","plothoverangle","borderhoverdashed","plotborderhoverdashed","borderhoverdashgap","plotborderhoverdashgap","borderhoverdashlen","plotborderhoverdashlen","setRolloutAttr","setRolloverAttr","tllabel","ltlabel","trlabel","rtlabel","bllabel","lblabel","brlabel","rblabel","tlLabelStyle","tlLabelFont","tlfont","tlLabelFontSize","tlfontsize","tlLabelFontColor","tlfontcolor","trLabelStyle","trLabelFont","trfont","trLabelFontSize","trfontsize","trLabelFontColor","trfontcolor","brLabelStyle","brLabelFont","brfont","brLabelFontSize","brfontsize","brLabelFontColor","brfontcolor","blLabelStyle","blLabelFont","blfont","blLabelFontSize","blfontsize","blLabelFontColor","blfontcolor","getCategoryFromId","rowLabel","tickObj","columnLabel","percentDataValue","legendItemColor","colorCode","entityComponents","datasetObj","getColorObj","hotElement","valEle","_checkPointObj","pY","halfPlotBorderThickness","scaleX","_index","legendActive","yBasePos","getAxisBase","columnId","rowId","elemId","elemIdStore","elemCreated","crispBox","addJob","bind","priorityList","removeDataElems","textY","textX","tlStyle","trStyle","blStyle","brStyle","graphicEle","pointW","pointH","pointX","pointY","isTLLabel","isTRLabel","isBLLabel","isBRLabel","maxWidth","maxHeight","tlLabelCss","trLabelCss","blLabelCss","brLabelCss","tlLabelContainer","blLabelContainer","trLabelContainer","brLabelContainer","removeLabels","labelDrawn","getAxisValuePadding","startIndex","prevCatlen","currCatLen","catDiff","groupMaxWidth","hasAnchor","insertBefore","Pb","yDepth","stackConf","getstackConf","_Pby","_Pbx","getLineShift","_drawTooltip","onlyHoverEffect","dataGraphics","elData","getData","maxminFlag","isRealTime","removeDataLen","resetCatPos","configureDataLabelStyle","getLimits","allVisible","maxminObj","numOfColumns","getMaxMin","_maxminObj","range","dataMin","dataMax","paddingObj","axisPaddingLeft","axisPaddingRight","axisPaddingTop","axisPaddingBottom","CategoryAxis","Radar","canvasFactory","radarRadius","radarradius","alignLegendWithCanvas","axisType","gridLineWidth","showRadarBorder","radarBorderThickness","getSpecificxAxisConf","getSpecificyAxisConf","getBasexAxisConf","reverseXAxis","showradarborder","radarBorderColor","radarbordercolor","radarborderthickness","radarBorderAlpha","radarborderalpha","radarFillColor","radarfillcolor","radarFillAlpha","radarfillalpha","radarSpikeColor","radarspikecolor","radarSpikeThickness","radarspikethickness","radarSpikeAlpha","radarspikealpha","radarInLineAlpha","radarinlinealpha","isInverse","decreaseCanvasBy","remainingSpace","RadarDataset","Area","regex","radarAnimation","getCoordinates","theta","baseZero","axisRange","plotfillcolor","areabordercolor","plotborderColorObject","divAngle","getPlotFromPixel","status","newAxisCenterX","oldAxisCenterX","axisCenterX","axisDimention","centerX","getPlotInCategoryAt","plots","categoryAxis","isDatasetVisible","hoveredCategoryIndex","foundPlot","plot","idx","plotArr","plotCategoryIndex","nextPlotCategoryIndex","prevPlotCategoryIndex","halfCategoryDiff","nextPlot","prevPlot","hoveredPlotInfo","usePattern","patternAttr","patternType","patternAngle","patternDensity","patternSize","patternAlpha","patternBgColor","getOldPath","pathVal","lim","xLim","yLim","oldLim","prevLim","oldLimX","oldLimY","ii","getOldValX","minPixel","maxPixel","getOldValYBase","base","getOldValY","join","AreaDataset","initialPath","axisRefVisual","PolarAxis","pi","pi2","polarAnimation","Polar","scale","ScaleCategory","referenceInfo","drawPlotBands","forceZeroTick","rawAttr","axisConfig","axisAttr","FCChartObj","gridLineColor","rangeArr","getScale","totalAngle","endAngle","anglePerSlice","tickValues","tickValue","centerY","clockWise","setRange","_parseCategoryPlotLine","axisAttrObj","plotLineColor","plotLineWidth","lines","isDraw","categoryLength","singleCategory","smartLabelText","categoriesStyle","categoryStyle","smartLabelStyle","smartLabelStyleLineHeight","avalTop","avalBottom","avalRight","avalLeft","allCategories","drawNormalVal","drawLimitVal","firstCategory","fontcolor","fontbold","fontitalic","fontSizeWithUnit","oriLabel","_drawComponents","drawLabels","hasCategory","_drawCategory","_parseCategory","curCategory","labelLineHeight","addCategoryPadding","pos","curCategoryValue","posX","posY","radiusXY","catStyle","textId","axisPadding","axisScale","cat0","labelFontAlpha","parseFloat","getRangeValue","polarToCartesian","shiftX","shiftY","labelBox","borderalpha","borderpadding","borderradius","bgalpha","borderdashed","borderdashlen","borderdashgap","textElement","textElemCheck","removeElem","removeElementsArr","axisContainer","raiseEvent","counter","mapArr","labelMap","arrOfId","removeGraphicalElement","getReferenceInfo","setVisibleConfig","domain","setDomain","getDomain","visibleMin","visibleMax","clearReferenceInfo","_parseReferenceVisuals","fireEvent","drawPlotlines","_setAxisRange","divGap","ticks","_allTicks","tickInterval","Axis","_createContainer","setAxisPadding","fadeInAtAxis","pCanvas","polarCanvas","axisRefVisualPolar","drawCanvas","radarBorderContainer","radarBorder","radarBorderContainerDummy","canvasGroup","radarBorderAttrObj","radBorderDummy","pop","Canvas","axisRefPolarAnimation","createLine","lineInfo","createNormalLine","createRadialLine","containers","lineAttr","pathAr","lineEleId","handlers","point","getRadius","hasOwnProperty","axisRefConfig","createBand","AxisRefComponent","Chord","DEFAULT_PALETTE_COLOR","LABEL_POSITIONS","deregisterFactory","legendItemFactory","nodelinkManagerFactor","defaultPaletteOptions","paletteColors","friendlyName","isPost","minNodeSize","startingAngle","linksOrder","nodesOrder","clockwise","nodeLabelGap","nodeLabelPosition","nodeThickness","nodeLinkPadding","linkAlpha","linkBorderAlpha","linkBorderThickness","nodeHoverAlpha","linkHoverAlpha","nodeHoverColor","linkHoverColor","showNodeLabels","showNodeBorder","showLinkBorder","nodeBorderColor","nodeBorderThickness","nodeBorderDashed","nodeBorderDashedLen","nodeBorderDashedGap","nodeBorderAlpha","showLinkValueOnHover","nodeAlpha","nodeLabelFont","nodeLabelFontSize","NORMAL","enableToggle","chordradius","nodeLabelColor","unfocussedAlpha","deactiveNodeColor","sortOrder","linkColorByDominance","nodesArr","linksArr","minnodesize","startingangle","totalangle","nodethickness","linkborderalpha","linkborderthickness","showlinkvalueonhover","shownodeborder","showlinkborder","nodeborderdashed","nodeborderdashedlen","nodeborderdashedgap","pluckFontSize","BOLD","nodelabelcolor","enabletoggle","unfocussedalpha","deactivenodecolor","sortorder","linkcolorbydominance","useellipsesonoverflow","datalabelStyle","sanitisedValue","total","adjustedTotal","nodeCovered","linkedLinks","LinearScale","active","unfocussed","showToolTip","points","dominantNode","subservientNode","subservientFlowDataValue","dominantFlowDataValue","dominantNodeColor","subservientNodeColor","linkedNodes","focussedState","unfocussedState","normalState","showBorder","linkedLink","nodeMap","isValidNode","key1","key2","resolvedStrokeWidth","borderDashedLen","borderdashedlen","borderDashedGap","borderdashedgap","borderDashed","exportenabled","labelcolor","deactiveState","startsWithRegex","toolKey","NodeLinkManager","_manageLegendSpace","maxNodeDim","minRadius","maxSpace","nodesLinkManager","_manageSpace","nodeOuterRadius","nodeInnerRadius","ribbonRadius","setTranslation","chartInstance","__state","dataReady","jsVars","hasNativeMessage","drawCount","count","LegendClass","deleteFromEnv","matrix","comparator","nodeFactory","linkFactory","reduce","acc","interactivelegend","angleRatio","arcAngle","endingAngle","p3","p4","firstNode","secondNode","firstScale","secondScale","p1","p2","angles","linkArray","outerRadius","innerRadius","spaceArguments","widths","clickedNode","nodeClicked","nodeHoverIn","nodeHoverOut","clickedNodeLabel","isVisisble","toPrecision","linkHoverIn","linkKey","registerDraw","hoveredNodes","resetEffect","linkHoverOut","labelKey","hoveredNode","hoveredLinks","affectedNodes","Node","labelPathGenerator","_startAngle","_endAngle","arc","normaliseAngle","clickFn","setEventArgs","mouseOverFn","mouseOutFn","linkednodelabel","arrValues","currentnodelabel","currentnodevalue","linkednodevalue","styles","formattedNodeDataValue","slope","smartLabelOutput","labelCatersianPosition","labelOrientation","applicableRadius","inCanfontSizeWithUnit","labelAngleCenter","spaceRemaining","getQuadrant","deg2Rad","getCartesianDistance","getTextRotationByQuadrant","isAngleInLeftHemisphere","labelAngleCenterDeg","labelAngleCenterRad","labelAngleCenterCleanRad","getCleanAngle","labelAngleCenterCleanDeg","rad2Deg","isLabelCenterInTopHemisphere","isAngleInTopHemisphere","arcLength","getArcLength","textPathStartAngle","textPathEndAngle","isIE11","textpath","startOffset","TEXTANCHOR","MIDDLESTR","middleRadius","x3","y3","x4","y4","A","Z","nodeGenerator","SMALLSQUARE","MEDIUMSQUARE","oriSize","_radius","PI2","_angle","rotationAngle","SIN","COS","HALF_PI","_rotationAngle","Ribbon","normalizeAngles","radians","mouseClickFn","dominantFlowValue","subservientFlowValue","rgbaToHex","getUniqueNodes","nodeArr","getDominantFlowValue","_config","_nodeArr","resultValues","getPlotIdentifier","body","getLegendItems","dominantNodes","legendItems","corners","p","curveFactor","distance","nextPointDist","cpX","cpY","ribbonAttrs","ribbon","dominantLegendItem","subservientLegendItem","dominantPlotIdentifier","subservientPlotIdentifier","setLinkToolText","baseFontSize","hoveredAlpha","Dragarea","Multicanvascrosslinemanager","requiresFusionCharts","FusionCharts","CrossLine","MultiCanvasCrossLine","Spline","Logmscolumn2d","LogStackedColumn2d","Logmsline","Splinearea","MSSplineDy","Msspline","Mssplinearea","Errorbar2d","Errorline","Errorscatter","Inversemsarea","Inversemscolumn2d","Inversemsline","Dragcolumn2d","Dragline","Kagi","WaterFall2D","SelectScatter","MultilevelPie","Sunburst","MultiAxisLine","MSStepLine","CandleStick","BoxAndWhisker2D","HeatMap","DragArea","MultiSeriesManager","MSLog","logAxisFactory","logBase","minorDivlinecolor","minordivlinecolor","minorDivLineThickness","minordivlinethickness","minorDivLineAlpha","minordivlinealpha","invertYAxis","invertyaxis","logbase","showMinorDivLineValues","showminordivlinevalues","numMinorDivLines","numminordivlines","LogAxis","validate","param","queryOptions","wrtVisible","logTicksMerge","majorTickArr","minorTickArr","mergedArr","ScaleLog","minorTicks","setBase","band","generateTicks","generateMinorTicks","nice","setDataLimit","_max","_min","trendMin","trendMax","AxisMaxValue","AxisMinValue","getTrendLineLimits","_parseLabel","increment","labelRotation","allTicks","ticksLen","tickVal","tickInPx","prevPos","labelMaxProp","labelArr","checkForLimit","axisValueMaxH","labelMaxH","axisValueMaxW","labelMaxW","axisStartPosition","axisComp","getZoom","rotation","getVisibleConfig","labelIndexArr","numberFormatterFn","isPercent","_drawLabel","labelArrLen","ticksVal","_getVMaxLabelDimention","divArr","divArrLen","maxTextDim","dimention","curDiv","maxTextSize","_getHMaxLabelDimention","_num","num","CartesianAxis","defaultPlotShadow","defaultcrosslinethickness","_setDefaultConfig","Logstackedcolumn2d","isstacked","StackManager","LogMSColumn2d","isErrorChart","COLOR_AAAAAA","AAAAAA","PERCENTAGESTRING","errorBarHovered","errorbarAnimation","drawCallBackFn","ErrorValueConfigure","errorInPercent","errorBarAlpha","setErrorValue","setPositiveErrorValue","setNegativeErrorValue","errorBarShadow","maxErrorValue","minErrorValue","halfErrorBar","positiveErrorValue","negativeErrorValue","cumulativeValueOnErrorBar","positiveCumulativeErrorTooltext","negativeCumulativeErrorTooltext","positiveErrorToolText","negativeErrorToolText","errorDataValue","errorToolTipValue","errorPercentValue","errorPercentDataValue","positiveErrorDataValue","positiveErrorToolTipValue","negativeErrorDataValue","negativeErrorToolTipValue","errorinpercent","errorbarshadow","ignoreEmptyDatasets","ignoreemptydatasets","halferrorbar","notHalfErrorBar","errorbaralpha","errorbarwidthpercent","errorbarcolor","errorbarthickness","shadowOpacity","cumulativevalueonerrorbar","errorvalue","positiveerrorvalue","negativeerrorvalue","toFixed","positiveCumulativeErrorValue","negativeCumulativeErrorValue","negativeCumulativeErrorTooltipValue","positiveCumulativeErrorTooltipValue","hasErrorValue","errorplottooltext","errorEdgeBar","drawErrorValue","animState","errorValuePosFactor","errorValueObj","errorLen","errorLineElem","isNegative","barXpos","barYpos","barWidth","barHeight","errorTrackerConfig","errorTrackerArr","_toolText","_isRollover","_isRollout","errorBarArr","errorBarCompArr","errorBarCompLen","tooltipValueAtEnd","hoverInfo","columnAnimation","useErrorGroup","canvasPaddingModifiers","ErrorLineDataset","errorlineErrorAnimation","errorlineLineAnimation","drawCallbackFn","errorToolText","lineThickness","errorBarWidth","errorbarwidth","_show","errorGroupContainer","errorShadowContainer","_chartAnimation","lineGroup","anchorGroup","anchorShadowGroup","lineShadowGroup","_setAxisLimits","_drawDataset","plotXpos","plotYpos","errorTracker","getCanvasPadding","dataConf","dataAnchorConf","labelSpace","firstData","lastData","labelDim","retrunDimension","LINEDataset","isXY","defaultZeroPlaneHighlighted","initAnimation","ErrorScatterDataset","ScatterBase","errorscatterAnimation","errorscatterErrorAnimation","removeCallbackFn","halfHorizontalErrorBar","halfVerticalErrorBar","horizontalErrorBarAlpha","verticalErrorBarAlpha","horizontalErrorBarColor","verticalErrorBarColor","horizontalErrorBarThickness","verticalErrorBarThickness","hErrorValue","vErrorValue","hErrorToolTipValue","vErrorToolTipValue","horizontalErrorPercent","verticalErrorPercent","horizontal","vertical","vPositiveErrorValue","hNegativeErrorValue","hPositiveErrorValue","hPositiveSetTooltext","hPositiveErrorToolTipValue","hCPErrorToolText","hCPErrorToolTipValue","hNegativeErrorToolTipValue","hCNErrorToolTipValue","vPositiveErrorToolTipValue","hNegativeSetTooltext","vCPErrorToolTipValue","vNegativeErrorValue","vCNErrorToolText","vCNErrorToolTipValue","vPositiveSetTooltext","hCNErrorToolText","vCPErrorToolText","vNegativeSetTooltext","vNegativeErrorToolTipValue","yAxisName","xAxisName","infMin","infMax","horizontalErrorValue","horizontalErrorDataValue","verticalErrorValue","verticalErrorDataValue","horizontalErrorPercentValue","verticalErrorPercentValue","horizontalPositiveErrorValue","useHorizontalErrorBar","horizontalPositiveErrorDataValue","horizontalNegativeErrorValue","horizontalNegativeErrorDataValue","verticalPositiveErrorValue","useVerticalErrorBar","verticalPositiveErrorDataValue","verticalNegativeErrorValue","verticalNegativeErrorDataValue","halfhorizontalerrorbar","halfverticalerrorbar","horizontalerrorbaralpha","verticalerrorbaralpha","horizontalerrorbarcolor","verticalerrorbarcolor","horizontalerrorbarthickness","verticalerrorbarthickness","horizontalErrorBarWidth","horizontalerrorbarwidth","verticalErrorBarWidth","verticalerrorbarwidth","horizontalerrorvalue","verticalerrorvalue","horizontalpositiveerrorvalue","horizontalnegativeerrorvalue","verticalpositiveerrorvalue","verticalnegativeerrorvalue","usehorizontalerrorbar","useverticalerrorbar","errorValueConf","mandatory","marker","isHorizontal","limit","optional","errorGraphicsString","notRequiredHEB","notRequiredVEB","isHalfHorizontalErrorBar","isHalfVertictalErrorBar","subType","subErrorBar","segment","segmentType","errorBarSegmentLen","errorBarSegmentStartPos","errorBarType","dataSetLen","match","barType","dataTreeB","res1","errorBarToolText","dataTree","ScatterDataset","errorAnimation","LimitUpdaterFactory","dragtrackerFactory","DragColumnMultiseriesGroup","isDrag","DragColumnDataset","updateDataLimit","dataLimit","sender","apiInstance","iapiConf","endValue","startValue","getDataWithId","setArr","catName","DS","dsID","returnObj","vLinePassed","returnData","sanitisedFormat","fromJSON","_getData","setUpperLimit","output","changeUpperLimits","postRender","setLowerLimit","changeLowerLimits","getLowerLimit","getUpperLimit","MOUSEOUT","MOUSEMOVE","restoretext","restorebtntitle","submittext","formbtntitle","enablesubmit","showformbtn","enablerestore","showrestorebtn","formBtnTitle","formBtnStyle","restoreBtnWidth","restorebtnwidth","allowAxisChange","allowaxischange","toolbary","toolbarx","spaceHardCoded","_storeIntialLimit","axisInitialLimit","attachMenuButtons","resetStoredLimits","_manageInteractiveSpace","lowerLimit","limitchanged","showLowerLimit","upperLimit","showUpperLimit","rawObj","requestType","paramObj","tempSpan","formEle","ajaxObj","Ajax","JSON","stringify","getCollatedData","getCSVString","onError","response","wrapper","ajaxData","xhrObject","xmlhttp","statusText","httpStatus","onSuccess","toUpperCase","abort","post","window","document","createElement","xssEncode","removeChild","firstChild","parentNode","_getJSONData","_restore","SETROLLOVERATTR","setRolloverAttrStr","SETROLLOUTATTR","setRolloutAttrStr","DATAPLOTCLICK","dragMouseAttr","updateDataValue","mouseCoordinate","dragColumnAnimation","allowNegDrag","allownegativedrag","snapToDivOnly","snaptodivonly","snapToDiv","snaptodiv","doNotSnap","donotsnap","snapToDivRelaxation","snaptodivrelaxation","coordinateData","yActual","formattedVal","rolloverdata","lowerDragBoundary","rolloutedata","eventArgsArr","getTicks","tolerance","dragTolerance","chartContainer","snapPixel","_pointerDy","_dragStartY","_dragBuffer","dragged","_rollOverResponseSetterFire","parseLabelAttributes","originalPlotColor","gradientColor","setMaxMin","givenPlotShowValue","minplotheightforvalue","snapPoint","colTop","colBottom","updatedDataObj","rawDataset","ColumnMultiSeriesgroup","limitUpdaterArr","limitUpdater","numericAxis","LimitUpdater","linkedAxis","onMouseUp","justFocussed","select","doAxisUpdate","oldvalue","isMax","axisParent","onFocus","styleObj","axisLabel","dataValue","hasFocus","onBlur","newValue","oldValue","isMaxLabel","getElementsByTagName","onKeyUp","which","getCharCode","domEvtHandler","fire","defaultHandler","inputElement","defaultIEHandler","destroyHandler","defaultAction","unlisten","destroyIEHandler","getLinkedItem","inputElementName","styleKey","labelValue","closedDefaultHandler","inputLeft","closedDefaultIEHandler","extremeLabels","getAxisConfig","axisLimits","chartCanvasStyle","outline","position","lastLabel","firstLabel","listen","removingDraw","DragTracker","addEvents","dragmove","dragTracker","hoveredDS","dragend","eventList","eventCb","allCanvas","removeEvents","removeEventListener","_dispose","DragLineDataset","draglineAnimation","__firePlotEvent","updateImage","_updateImage","_drag","_configure","ROLLOUT","dragAreaAnimation","DragAreaDataset","imgRef","imgH","imgW","hoverScale","imageHoverScale","hotW","hotH","markerRadius","isAnchorRadius","rolloutClipRadius","rolloverClipRadius","imageRollOverPath","imageRolloutPath","plotItem","rolloutdata","endIndex","anchorElement","isHoverEnabled","anchorStartAngle","mainLineElement","lineElement","isDragLine","anchorBgAlpha","anchorBorderColor","anchorHoverColor","anchorColor","anchorHoverAlpha","anchorHoverSides","drawCommonElements","pathStartIndex","pathEndIndex","lastPath","hoverEnabled","changedTouch","dataSetConf","changedTouches","pageX","pageY","_hoverPlotAnchor","areaAnimationRules","DragColumn","singleseries","_getDataset","dataSetArr","xShiftLength","series","shiftCount","maxHShiftPercent","maxhshiftpercent","effectiveCanvasWidth","_setPosition","setCanvasPadding","yValue","isRally","lastHigh","lastLow","isRallyInitialised","lastPoint","plotX","isDefined","plotValue","plotY","graphY","isShift","objParams","isChanged","ty","KagiDataset","WaterFall2DDataset","SSCartesian","waterFall2DAnimation","catData","hoverGradientColor","showSum","dataLabel","issum","zLine","cumulative","sumObj","countPoint","reflowData","reflowDataObj","reflowChartObj","connectorthickness","seriesSum","lastComTotal","showsumatend","PATTERN_TYPES","patterntype","patterndensity","patternalpha","patternbgcolor","stack100Percent","stack100percent","showPercentValues","showpercentvalues","showPercentInToolTip","showpercentintooltip","connectordashed","connectordashlen","connectordashgap","useForwardSteps","connectorcolor","connectoralpha","_value","sumlabel","isCumulative","positivecolor","positivehovercolor","negativecolor","negativehovercolor","patternangle","patternsize","origToolText","cumulativeValue","cumulativeDataValue","unformattedSum","showConnectors","showconnectors","yBase","anim","lineContainer","groupNetHalfWidth","zLineConf","seriesLineWidth","zLineDummy","_graphics","lastYPos","linePath","lastMoveCommand","toFront","getCrispValue","kagiAnimation","manageSpace","stubFN","_parseShadowOptions","dataSetComponents","shiftCounter","reversalValue","reversalPercentage","rallyDashLen","rallyDashGap","declineDashLen","declineDashGap","lastPlotValue","setShowLabel","fcIndex","fcDataObj","lastShift","prevDataObj","nextDataValue","valueDifference","isMovingUp","checkValue","t","vAlign","reversalvalue","reversalpercentage","__nullCount","rallyColor","rallycolor","rallyAlpha","rallyalpha","declineColor","declinecolor","declineAlpha","declinealpha","canvaspadding","rallyThickness","rallythickness","rallydashlen","rallydashgap","declineThickness","declinethickness","declinedashlen","declinedashgap","lineDashed","rallydashed","declinedashed","rallyDashed","declineDashed","_isRally","dataXValue","data1Value","_appendCategory","tempData","lineposition","refIndex","catOnlyData","pointObjs","trackIndex","clipRect","pointData","userID","anchorImageLoaded","trackerRadius","anchorBorderAlpha","isAnchorHoverRadius","bBoxObj","textHeight","origTextHeight","yAdjust","decidingDimention","nextPoint","prevPoint","labelSkip","_state","_rotated","_valueBelowPoint","rallyPath","declinePath","nextPointIsRally","xAxisZeroPos","pointDistance","imagesLoaded","rallyElem","declineElem","datasetGraphics","rallyAttr","declineAttr","rallyElemDummy","declineElemDummy","commonElemGroup","plotGroup","shadowGroup","drawAnchorImage","Waterfall2d","Selectscatter","deg2rad","checkObjectLength","createSelectionBox","selectBoxG","selectionLeft","selectionTop","selectionWidth","selectionHeight","isSmall","selectEleObj","resizeEleRadius","selectEleArr","_selectEleArr","selectBoxTracker","rect","selectBorderColor","selectFillColor","_isTrackerElem","xChange","yChange","topTracker","TRACKER_WIDTH","rightTracker","bottomTracker","leftTracker","cornerInnerSymbol","cornerOuterSymbol","resizeTracker","closeButton","selectionCancelButtonBorderColor","selectionCancelButtonFillColor","_cursor","deleteSelection","bindDragEvent","selectEleItem","items","startXValue","startYValue","endXValue","endYValue","addSymbol","resizeIcon","xVal","rad","LINE_GAP","paths","closeIcon","icoX","icoY","r1","arcPath","rX","rY","isClockWise","isLargeArc","getArcPath","configureIcon","rVal","x5","y5","x6","y6","x7","y7","x8","y8","x9","y9","x10","y10","axisIcon","loggerIcon","enableSubmit","enableRestore","allowreversexaxis","tempObj","list","setLen","dsInd","global","core","transcodeData","incomingJSON","oriDataArr","selectionBoxObj","selectedArr","origChartData","origDataSets","lenDS","isSelected","selectedData","_deleteAllSelection","items1","move","up","topT","rightT","bottomT","leftT","resizeT","topTData","rightTData","bottomTData","leftTData","resizeTData","selectTData","ow","oh","ox2","oy2","selectT","attrib","SelectScatterDataset","selectScatterAnimation","selectbordercolor","selectborderalpha","selectfillcolor","selectfillalpha","selectioncancelbuttonbordercolor","selectioncancelbuttonborderalpha","selectioncancelbuttonfillcolor","selectioncancelbuttonfillalpha","connativeZoom","zoomType","bindSelectionEvent","selectionStart","selectionEnd","Multilevelpie","valuefontbold","catLength","MultiLevelPieDataset","INNERRADIUS","multilevelpieAnimation","fontBdrColor","mag","dataSetConfig","dataLabelOptions","piePlotOptions","centerAngle","centerangle","tranverseToRoot","dataInstance","evtType","hoverFillColor","traverseAllChildren","mouseEvtHandler","useHoverColor","selfRef","highlightParentPieSlices","highlightChildPieSlices","moveduration","usehovercolor","hoverfillcolor","hoverfillalpha","valuebordercolor","valueborderalpha","valuebgalpha","valuealpha","valuefont","valuefontsize","valuefontcolor","valuefontalpha","valuefontitalic","valuebgcolor","valueborderthickness","valueborderpadding","valueborderradius","valueborderdashed","valueborderdashlen","valueborderdashgap","allowPointSelect","pieborderalpha","piebordercolor","rawborderColor","pieborderthickness","highlightparentpieslices","highlightparentpienodes","highlightchildpieslices","highlightchildpienodes","showValuesInTooltip","showvaluesintooltip","showpercentagevalues","showPercentInTooltip","hovercapsepchar","COMMASPACE","labelsepchar","piefillalpha","endtAngle","initialAngle","originX","originx","originY","originy","mouseOver","mouseOut","plotBorderWidth","autoRotateLabels","autorotatelabels","skipOverlapLabels","skipoverlaplabels","maxLevel","addMSPieCat","pieRadius","pieradius","innerradius","placeLabelsInside","removalFn","removeGraphics","childData","removalStore","doHide","elemObj","level","parentObj","dataObjLen","catObjLen","sharePercent","catVal","fillalpha","valueStr","pValueStr","tempAngle","preDataOldEndAngle","cat","totAngle","cumilative","_userValue","hovertext","angleStrech","doNotSlice","borderwidth","isSingleTon","parentInstance","_textAttrs","centerDistance","setDataLabelStyle","angle1","angle2","setConfig","seriesDataLabelsStyle","pieSize","calculatedInnerRadius","innerRadiusLength","charAt","calculateInnerRadius","seriesHalfWidth","innerSize","labelText","pattern","patternColor","dataLabelsLayer","removeElement","addPattern","o","pValue","chartAPI","_drawn","labelSmartObj","angleStretch","tempLabel","tooltipOptions","isTooltip","Pie2DDataset","allowdrilltonode","parsedDS","parseAndSanitizeData","flatInput","tempMap","isRootNode","depthFirstVisit","sumOfVisit","givenValue","applicableValue","SunburstDataset","inputTree","sunburstAnimation","elementClickedFn","chartDrillDown","nodeParentId","childrenCount","drillDownToId","nodeColorMap","isDrilledDown","travserseAllElements","hoverFillAlpha","ds","dsArr","unFocussedAlpha","isSingleRootNode","totalValueParam","currentLevelValue","drillDownParent","parentId","stack","idToSearch","searchedItem","clickablePath","off","Multiaxisline","vCanvasFactory","axes","axisJson","leftAxes","rightAxes","axisHEXColor","tickWidth","jlen","axesConf","checkBoxChecked","axiscolor","tickwidth","axistickwidth","axisonleft","yaxisvaluestep","maxvalue","minvalue","showZeroPlaneOnTop","tickLength","tickColor","tickAlpha","drawAxisNameFromBottom","parseMLAxisConf","showaxis","drawAxisLineWRTCanvas","drawAxisLine","drawAxisName","drawTrendLines","drawTick","drawTickMinor","showAxis","legendPos","comp","yAxisSpaceUsed","axisSelectorUI","rightPadding","leftPadding","showborder","dimension","_getDSspace","actualCanvasMarginTop","actualCanvasMarginLeft","actualCanvasMarginRight","actualCanvasMarginBottom","axesPadding","allowAxisShift","allowaxisshift","allowSelection","allowselection","checkBoxColor","checkboxcolor","axisConfigured","AreaBase","AxisSelectorUI","resetAxisCount","setPrimaryAxis","factoryAxis","axisMapById","activeAxis","existingInfo","info","exsitingAxisMapById","existingAxes","firstAxis","Map","side","reverse","axisId","get","checkbox","besideCanvas","axisCount","_existingAxes","_axisMapById","_info","removeInfo","checkboxesConf","avlWidth","getAxesDetails","isRight","oppositePos","drawHotElements","axisHotElements","_resuffelAxis","drawCheckBoxes","currCheckBox","CheckBox","symbolStroke","symbolStrokeWidth","containerInfo","toggle","_dolegendInteraction","_createLayers","parentLayer","containerName","e1","e2","newMapArray","axesDetails","entries","checked","manipulateCheckBox","clickedDS","allDS","checkboxUncheck","uncheck","check","getAxes","vC","axisY","VirtualCanvas","yAxisSelectorUI","numLen","visibilityChangedHandler","addDatasetVisibilityChangedEventListener","MultiAxisDataset","multiaxisAnimation","parseAttributes","lineDashLen","lineDashGap","linecolor","Msstepline","MSStepLineDataset"],"mappings":"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","file":"fusioncharts.powercharts.js","sourcesContent":["import { pluckNumber, pluck, toRaphaelColor, getFirstValue } from '@fusioncharts/core/src/lib';\nimport LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport msStepLineAnimation from './index.animation';\nlet LINE = 'line',\n  H = 'H',\n  V = 'V',\n  M = 'M',\n  UNDEF;\naddDep({\n  name: 'stepLineAnimation',\n  type: 'animationRule',\n  extension: msStepLineAnimation\n});\nclass MSStepLineDataset extends LineDataset {\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.getPathArr = function () {\n      var pathObj = this,\n        pathArr = pathObj.pathArr,\n        path2Arr = pathObj.path2Arr;\n\n      if (pathArr.length || path2Arr.length) {\n        return pathArr.concat(path2Arr);\n      }\n      return [];\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'stepLine';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.drawverticaljoins = UNDEF;\n    config.useforwardsteps = UNDEF;\n  }\n  _addLegend () {\n    var dataset = this,\n      conf = dataset.config,\n      legend = dataset.getFromEnv('legend'),\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      drawAnchors = pluckNumber(conf.drawanchors, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      legendItem,\n      JSONData = dataset.config.JSONData || {},\n      config = { // eslint-disable-line good-practices/no-single-usage-variable\n        enabled: conf.includeinlegend,\n        type: LINE,\n        /* In case of scatter (a child chartAPI of line),\n        line is drawn in legend only when drawLine is set\n        to true. */\n        drawLine: pluck(conf.drawLine, true),\n        anchorSide: drawAnchors ? conf.anchorsides : 0,\n        label: getFirstValue(dataset.config.JSONData.seriesname),\n        legendIconAlpha: pluckNumber(JSONData.legendiconalpha)\n      };\n    if (conf.includeinlegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      }\n      legendItem.configure(config);\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor({\n            color: conf.anchorbgcolor,\n            alpha: conf.anchorbgalpha\n          }),\n          bgAlpha: pluckNumber(JSONData.legendiconbgalpha, JSONData.legendiconalpha, chartAttr.legendiconbgalpha, chartAttr.legendiconalpha, conf.anchorbgalpha),\n          borderAlpha: pluckNumber(JSONData.legendiconborderalpha, JSONData.legendiconalpha, chartAttr.legendiconborderalpha, chartAttr.legendiconalpha, '100'),\n          rawFillColor: conf.anchorbgcolor,\n          rawStrokeColor: conf.anchorbordercolor,\n          stroke: toRaphaelColor({\n            color: conf.anchorbordercolor,\n            alpha: '100'\n          }),\n          'stroke-width': conf.anchorborderthickness\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item is dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n\n  getLinePath (data, positions) {\n    var dataset = this,\n      conf = dataset.config,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      connectNullData = pluckNumber(chartConfig.connectnulldata), // eslint-disable-line good-practices/no-single-usage-variable\n      obj = {},\n      drawVerticalJoins = pluckNumber(conf.drawverticaljoins),\n      halfStep = pluckNumber(chartConfig.stepatmiddle) ? dataset.getFromEnv('xAxis').getPVR() * 0.5 : 0,\n      // Used for determining whether the last value was valid\n      // Initially it is false\n      lastValidValue = obj.lastValidValue || false,\n      temp = obj.temp || [],\n      temp2 = obj.temp2 || [], // eslint-disable-line good-practices/no-single-usage-variable\n      pathArr = obj.pathArr || [],\n      path2Arr = obj.path2Arr || [], // eslint-disable-line good-practices/no-single-usage-variable\n      lastXPos,\n      i,\n      config,\n      xPos,\n      yPos,\n      pointsJoined = obj.pointsJoined || 0,\n      dataObj,\n      setValue,\n      startPos = (positions && positions.begin) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      endPos = (positions && positions.end) || data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      step = chartConfig.viewPortConfig.step || 1, // eslint-disable-line good-practices/no-single-usage-variable\n      dataWithRemovedPaths = [];\n    // Added current dataStore to arr\n    dataWithRemovedPaths = dataWithRemovedPaths.concat(data);\n\n    for (i = startPos; i < endPos; i += step) {\n      dataObj = dataWithRemovedPaths[i];\n      if (!dataObj) {\n        continue;\n      }\n\n      config = dataObj.config;\n      setValue = config.setValue;\n\n      // skip the data plot if isSkipped flag is set to false\n      if (setValue === UNDEF || (config && config.isSkipped === true)) {\n        config && (delete config.isSkipped);\n        continue;\n      }\n      xPos = config._Px;\n      yPos = config._Py;\n\n      // create the path array\n      // If the last value is valid\n      if (setValue === null || setValue.isNull) {\n        // If null data points are also to be connected\n        if (!connectNullData) {\n          temp = [];\n          temp2 = [];\n          lastValidValue = false;\n        }\n      } else {\n        if (lastValidValue) {\n          if (temp.length) {\n            pathArr = pathArr.concat(temp);\n            temp = [];\n            pointsJoined++;\n          }\n          if (pluckNumber(conf.useforwardsteps)) {\n            pathArr.push([H, xPos - halfStep]);\n            if (drawVerticalJoins) {\n              pathArr.push([V, yPos]);\n            } else {\n              pathArr.push([M, xPos - halfStep, yPos]);\n            }\n            if (halfStep) {\n              pathArr.push([H, xPos]);\n            }\n          } else {\n            if (drawVerticalJoins) {\n              pathArr.push([V, yPos]);\n            } else {\n              pathArr.push([M, lastXPos, yPos]);\n            }\n            pathArr.push([H, xPos]);\n            lastXPos = xPos;\n          }\n          // Push the upper x and y position to pathArr\n          // pathArr.push([L, xPos, yPos]);\n        } else {\n          // Push the upper x and y positions of area plot to temp\n          temp.push([M, xPos, yPos]);\n          lastXPos = xPos;\n          // No points are joined when starting a new path\n          pointsJoined = 0;\n          lastValidValue = true;\n        }\n      }\n    }\n    return {\n      pathArr: pathArr,\n      path2Arr: path2Arr,\n      lastValidValue: lastValidValue,\n      pointsJoined: pointsJoined,\n      temp: temp,\n      temp2: temp2,\n      getPathArr: dataset.getPathArr\n    };\n  }\n}\nexport default MSStepLineDataset;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  '*.dataset.stepLine': lineAnimation['*.dataset.line']\n};\n","import Dragnode from '@fusioncharts/powercharts/src/chart/dragnode';\nexport default Dragnode;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport DragBase from '../_internal/dragbase';\nimport { DragNodeDataset, DragNodeConnector, DragNodeLabels, DragNodeGroup } from '../../dataset/dragnode';\nimport { getValidValue, pluck, pluckNumber, ZEROSTRING, extend2 } from '@fusioncharts/core/src/lib';\nimport { getDepsByType } from '@fusioncharts/core/src/dependency-manager';\nimport datasetFactory from '../../factories/dragnode-dataset';\nimport { submitData } from '../_internal/editable-charts';\nimport axisFactory from '@fusioncharts/charts/src/factories/xy-axis';\nimport { _mouseEvtHandler } from '@fusioncharts/core/src/base-chart';\n\nconst DRAGNODE = 'dragnode';\nlet configurer, UNDEF;\n/**\n * API class of dragcolumn inheriting from column class\n */\nclass DragNode extends DragBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'DragNode';\n  }\n\n  /**\n   * Constructor function of DragNode class\n   */\n  constructor () {\n    super();\n    var chart = this;\n    chart.fireGroupEvent = true;\n    chart.usesXYinCategory = true;\n    chart.dontShowLegendByDefault = true;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n    this.registerFactory('axis', axisFactory, ['canvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'DragNode';\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let datasetsJSON = this.getFromEnv('dataSource').dataset; // eslint-disable-line good-practices/no-single-usage-variable\n    if (!datasetsJSON) {\n      return true;\n    }\n  }\n\n  /**\n   * Decides event type and calls handler manager accordingly.\n   *\n   * @param {any} e e\n   * @param {any} data data\n   * @memberof DragNode\n   */\n  _mouseEvtHandler (e, data) {\n    _mouseEvtHandler(this, e, data);\n  }\n  /**\n   * Function to parse the common configurations at dataset level\n   * @param {Object} dataObj contains json data of the chart\n   */\n  parseChartAttr (dataObj) {\n    var iapi = this,\n      chartAttr = iapi.getFromEnv('dataSource').chart,\n      config,\n      transcoders = getDepsByType('transcoder');\n    super.parseChartAttr.call(this, dataObj);\n    config = iapi.config;\n    config.formAction = getValidValue(chartAttr.formaction);\n    config.showLegend = pluckNumber(chartAttr.showlegend, 0);\n\n    if (chartAttr.submitdataasxml === ZEROSTRING && !chartAttr.formdataformat) {\n      chartAttr.formdataformat = transcoders.csv().format;\n    }\n\n    config.formDataFormat = pluck(chartAttr.formdataformat,\n      transcoders.xml().format);\n    config.formTarget = pluck(chartAttr.formtarget, '_self');\n    config.formMethod = pluck(chartAttr.formmethod, 'POST');\n    config.submitFormAsAjax = pluckNumber(chartAttr.submitformusingajax, 1);\n    config.viewMode = pluckNumber(chartAttr.viewmode, 0);\n    config.drawTrendRegion = 0;\n  }\n\n  /**\n   * Parsing the default configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    var chartConf = this.config;\n    chartConf.hasLegend = true;\n    chartConf.defaultDatasetType = DRAGNODE;\n    chartConf.limitUpdaterEnabled = false;\n    chartConf.skipClipping = true;\n    chartConf.numVDivLines = 0;\n    chartConf.numDivLines = 0;\n    chartConf.setadaptivexmin = 1;\n    chartConf.showLimits = 0;\n    chartConf.showdivlinevalues = 0;\n    chartConf.showzeroplane = 0;\n    chartConf.showyaxisvalues = 0;\n    chartConf.enablemousetracking = true;\n    chartConf.showzeroplaneontop = 0;\n  }\n\n  /**\n   * Function to add the menu options for the menu list\n   */\n  addConfigureOptions () {\n    var chart = this,\n      chartConf = chart.config,\n      restore,\n      submit,\n      toolbar = chart.getFromEnv('toolbar'),\n      hamburgerMenu = toolbar.getChild(`hamburgerMenu-${toolbar.getId()}-${chart.getId()}-0`), // eslint-disable-line good-practices/no-single-usage-variable\n      configureTools = [\n        {\n          name: 'Add Node',\n          handler: function () {\n            let manager = chart.getChildren('canvas')[0].getChildren('vCanvas')[0] // eslint-disable-line good-practices/no-single-usage-variable\n              .getChildren('datasetGroup_dragNode')[0];\n            manager.showNodeAddUI();\n          },\n          action: 'click'\n        },\n        {\n          name: 'Add Connector',\n          handler: function () {\n            let manager = chart.getChildren('canvas')[0].getChildren('vCanvas')[0] // eslint-disable-line good-practices/no-single-usage-variable\n              .getChildren('datasetGroup_dragNode')[0];\n            manager.showConnectorAddUI();\n          },\n          action: 'click'\n        },\n        {\n          name: 'Add Label',\n          handler: function () {\n            let manager = chart.getChildren('canvas')[0].getChildren('vCanvas')[0] // eslint-disable-line good-practices/no-single-usage-variable\n              .getChildren('datasetGroup_dragNode')[0];\n            manager.showLabelUpdateUI();\n          },\n          action: 'click'\n        }\n      ];\n\n    if (chartConf.showRestoreBtn) {\n      restore = {\n        name: chartConf.restoreBtnTitle,\n        handler: function () {\n          let manager = chart.getChildren('canvas')[0].getChildren('vCanvas')[0] // eslint-disable-line good-practices/no-single-usage-variable\n            .getChildren('datasetGroup_dragNode')[0];\n          manager.restoreData();\n        },\n        action: 'click'\n      };\n      configureTools.push(restore);\n    }\n\n    if (chartConf.showFormBtn) {\n      submit = {\n        name: chartConf.submitBtnTitle,\n        handler: function () {\n          submitData.call(chart);\n        },\n        action: 'click'\n      };\n      configureTools.push(submit);\n    }\n\n    // setChartTools(configureTools);\n    if (!chart.config.viewMode) {\n      hamburgerMenu.appendInMenu(configureTools);\n    }\n  }\n\n  /**\n   * Function to map the dataset class to its type\n   * @param {string} dsType the type of the dataset.\n   * @return {Class} The corresponding dataset class.\n   */\n  getDSdef (dsType) {\n    switch (dsType) {\n      case 'connector' :\n        return DragNodeConnector;\n      case 'dragnode' :\n        return DragNodeDataset;\n      case 'dragableLabels' :\n        return DragNodeLabels;\n    }\n  }\n\n  /**\n   * Function to determine the group manager associated with the current chartAPI\n   * @return {Class} The group class\n   */\n  getDSGroupdef () {\n    return DragNodeGroup;\n  }\n\n  /**\n   * Fucntion to set the categories of X axes.\n   */\n  _setCategories () {\n    var iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      xAxis = iapi.getChildren('xAxis'),\n      categories = (dataObj.categories && dataObj.categories[0].category) || [],\n      catLen = categories.length, // eslint-disable-line good-practices/no-single-usage-variable\n      catArr = [],\n      i,\n      catObj;\n\n    for (i = 0; i < catLen; i++) {\n      catObj = categories[i] || {};\n      if (catObj.x !== UNDEF) {\n        catArr.push(catObj);\n      }\n    }\n\n    xAxis && xAxis[0].setTickValues(catArr);\n  }\n\n  /**\n   * Function to get the jsonData\n   * @return {Object} the jsonData\n   */\n  getJSONData () {\n    var chart = this,\n      canvas = chart.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      vCanvas = canvas.getChildren('vCanvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      groupManager = vCanvas.getChildren('datasetGroup_dragNode')[0],\n      datasetsArr = {},\n      jsonObj;\n\n    if (groupManager) {\n      datasetsArr = groupManager.getJSONData();\n    }\n\n    jsonObj = extend2({}, chart.getFromEnv('dataSource'));\n    jsonObj.dataset = datasetsArr.dataset;\n    jsonObj.connectors = datasetsArr.connectors;\n    jsonObj.labels = datasetsArr.labels;\n    return jsonObj;\n  }\n}\nconfigurer = DragNode.prototype.configure;\nexport default DragNode;\nexport { configurer };\n","import DragNodeDataset from './dragnode';\nimport DragNodeLabels from './dragablelabels';\nimport DragNodeConnector from './connector';\nimport DragNodeGroup from '../groups/dragnode';\n\nexport { DragNodeDataset, DragNodeLabels, DragNodeConnector, DragNodeGroup };\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Areadataset from '@fusioncharts/charts/src/dataset/area';\nimport { pluck, pluckNumber, getValidValue, parseUnsafeString, extend2, ZEROSTRING, getMouseCoordinate,\n  HUNDREDSTRING, preDefStr, BLANK, getFirstValue, POSITION_MIDDLE,\n  POSITION_BOTTOM, toRaphaelColor, POINTER, BLANKSTRING, SHAPE_RECT, parseTooltext,\n  BGRATIOSTRING, hasSVG, polyPathToPath,\n  convertColor, getDarkColor, getLightColor, mapSymbolName, getFirstColor, getFirstAlpha } from '@fusioncharts/core/src/lib';\nimport { addDep, getDep } from '@fusioncharts/core/src/dependency-manager';\nimport dragNodeAnimation from './dragnode-animation';\n// import { triggerEvent } from '../../../core/events/event-api';\n// import {_getJSONData, _restore} from './dragcolumn';\nimport raphaelShapesRingpath from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.ringpath';\nimport KdTree from '@fusioncharts/charts/src/dataset/_internal/kdtree';\n\nconst PADDING = 1;\n\nlet Raphael = getDep('redraphael', 'plugin'),\n  UNDEF,\n  mathMax = Math.max,\n  mathMin = Math.min,\n  CIRCLE = preDefStr.CIRCLE,\n  POLYGON = preDefStr.POLYGON,\n  RECTANGLE = preDefStr.RECTANGLE,\n  UNDERSCORE = preDefStr.UNDERSCORE,\n  GROUPID = preDefStr.GROUPID,\n  EVENTARGS = preDefStr.EVENTARGS,\n  OBJECTBOUNDINGBOX = preDefStr.OBJECTBOUNDINGBOX,\n  DATAPLOTCLICK = 'dataplotclick',\n  DATAPLOTDRAGSTART = 'dataplotdragstart',\n  DATAPLOTDRAGEND = 'dataplotdragend',\n  DEFAULT_CURSOR = preDefStr.DEFAULT,\n  COMMA = preDefStr.COMMA,\n  FIFTY_PERCENT = '50%',\n  PATH = 'path',\n  POLY_4 = 'poly_4',\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  isVML = !!hasSVG,\n  hideFn = function () {\n    this.hide();\n  },\n  // CLEAR_TIME_1000 = 1000,\n  // stubEvent = {\n  //   pageX: 0,\n  //   pageY: 0\n  // },\n  // animType = 'linear',\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  /**\n   * Helper function of createContainer\n   * @param {string} groupName The new group name\n   * @param {Object} animationManager The renderer\n   * @param {Object} parentContainer The container under which the new container has to be created\n   * @param {Object} component The component for which the group is being created\n   * @return {Object}  the newly created contaier\n   */\n  createGroup = (groupName, animationManager, parentContainer, component) => {\n    return animationManager.setAnimation({\n      el: 'group',\n      attr: {\n        name: groupName\n      },\n      container: parentContainer,\n      component: component\n    });\n  },\n  // Function that produce the point color\n  getPointColor = function (colorVal, alphaVal, shapeType) {\n    var color = colorVal,\n      alpha = alphaVal,\n      colorObj, innerColor, outerColor;\n    color = getFirstColor(color);\n    alpha = getFirstAlpha(alpha);\n    innerColor = getLightColor(color, 80);\n    outerColor = getDarkColor(color, 65);\n    colorObj = {\n      FCcolor: {\n        gradientUnits: OBJECTBOUNDINGBOX,\n        color: innerColor + COMMA + outerColor,\n        alpha: alpha + COMMA + alpha,\n        ratio: BGRATIOSTRING\n      }\n    };\n\n    if (shapeType) {\n      if (shapeType === 1) {\n        colorObj.FCcolor.angle = 0;\n      } else {\n        colorObj.FCcolor.angle = 180;\n      }\n    } else {\n      colorObj.FCcolor.cx = 0.4;\n      colorObj.FCcolor.cy = 0.4;\n      colorObj.FCcolor.r = FIFTY_PERCENT;\n      colorObj.FCcolor.radialGradient = true;\n    }\n\n    return colorObj;\n  },\n  _configureTooltext = function (config, datasetConf, chartAttr) {\n    var setTooltext = config.setTooltext,\n      formatedVal = config.formatedVal,\n      seriesname = datasetConf.seriesname,\n      label = config.label,\n      xValue = config.xValue,\n      pointLabel = config.pointLabel,\n      tooltipSepChar = datasetConf.tooltipSepChar,\n      toolText;\n    if (setTooltext !== UNDEF) {\n      toolText = parseTooltext(setTooltext, [3, 4, 5, 6, 8, 9, 10, 11], {\n        yaxisName: parseUnsafeString(chartAttr.yaxisname),\n        xaxisName: parseUnsafeString(chartAttr.xaxisname),\n        yDataValue: formatedVal,\n        xDataValue: xValue,\n        label: label\n      }, config, chartAttr, datasetConf);\n    } else if (pointLabel !== UNDEF) {\n      toolText = label;\n    } else { // determine the tooltext then\n      if (formatedVal === null) {\n        toolText = false;\n      } else {\n        if (datasetConf.seriesNameInToolTip) {\n          seriesname = getFirstValue(datasetConf.seriesname);\n        }\n        toolText = seriesname ? seriesname + tooltipSepChar : BLANK;\n        toolText += xValue ? xValue + tooltipSepChar : BLANK;\n        toolText += formatedVal;\n      }\n    }\n    return toolText;\n  };\naddDep({\n  name: 'dragNodeAnimation',\n  type: 'animationRule',\n  extension: dragNodeAnimation\n});\n\n// Adding required shapes for chart.\nraphaelShapesRingpath(Raphael);\n\n/**\n * dataset class of dragcolumn inheriting from column class\n */\nclass DragNodeDataset extends Areadataset {\n  /**\n   * Return the name of component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragNode';\n  }\n  /**\n   * Return the type of component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n\n  /**\n   * Function to hide the dataset on legend click\n   */\n  hide () {\n    var dataSet = this,\n      parent = dataSet.getLinkedParent(),\n      changeInfo = {};\n\n    changeInfo.hide = true;\n    dataSet.setState('dirty', true);\n    dataSet.setState('visible', false);\n    parent.childChanged(changeInfo);\n    dataSet.getFromEnv('chart').getChildren('legend')[0].getItem(dataSet.config.legendItemId).setLegendState('hidden');\n    dataSet.asyncDraw();\n  }\n\n  /**\n   * Function to show the dataset on legend click\n   */\n  show () {\n    var dataSet = this,\n      parent = dataSet.getLinkedParent(),\n      legendItem = dataSet.getFromEnv('legend').getItem(dataSet.config.legendItemId),\n      changeInfo = {};\n\n    changeInfo.show = true;\n    dataSet.setState('visible', true);\n    dataSet.setState('dirty', true);\n    parent.childChanged(changeInfo);\n    legendItem && legendItem.removeLegendState('hidden');\n    dataSet.asyncDraw();\n  }\n\n  /**\n   * Function to set the index of the dataset from amongst the other datasets\n   */\n  _setDatasetIndex () {\n    var dataset = this,\n      chidrenArr = dataset.getLinkedParent().getChildren('dataset');\n    dataset.config.datasetIndex = chidrenArr.indexOf(dataset);\n  }\n\n  // Checks if a point lies in a shape\n  pointInShape (x, y, config) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      canvas = chart.getChildren('canvas')[0],\n      canvasConfig = canvas.config,\n      symbol = config.symbol,\n      x2,\n      y2,\n      r2,\n      xPos = config._xPos,\n      yPos = config._yPos,\n      width,\n      height;\n\n    if (x < canvasConfig.canvasLeft || x > canvasConfig.canvasLeft + canvasConfig.canvasWidth ||\n      y < canvasConfig.canvasTop || y > canvasConfig.canvasTop + canvasConfig.canvasHeight) {\n      return false;\n    }\n    if (symbol === 'rectangle') {\n      width = config._plotWidth;\n      height = config._plotHeight;\n\n      xPos -= width / 2;\n      yPos -= height / 2;\n\n      if (x >= xPos && y >= yPos && x <= (xPos + width) && y <= (yPos + height)) {\n        return true;\n      } return false;\n    }\n    x2 = (x - xPos) * (x - xPos);\n    y2 = (y - yPos) * (y - yPos);\n    r2 = Number(config.radius);\n\n    r2 *= r2;\n\n    if (x2 + y2 <= r2) {\n      return true;\n    } return false;\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType name of the event\n   * @param {number} plotIndex index of the plot where this event has been occured\n   * @param {Event} e reference of the original mouse event\n   * @param {number} datasetIndex index of the dataSet on which the mouse is hovered\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      components = dataset.components,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      dataStore = components.data,\n      data = dataStore[plotIndex] || {},\n      sharedAnchor = dataset.getGraphicalElement('sharedAnchor'),\n      setElement = (data.graphics && data.graphics.element) ||\n        ((data.config && data.config.setValue) !== UNDEF && sharedAnchor),\n      toolTip = this.config.currentToolTip,\n      // originalEvent = e.originalEvent,\n      viewMode = dataset.config.viewMode,\n      groupManager = dataset.getLinkedParent(),\n      config,\n      ele = data.graphics.element,\n      eventArgs,\n      setLink;\n\n    if (setElement) {\n      config = data.config;\n      setLink = config.setLink;\n      eventArgs = config.eventArgs;\n      switch (eventType) {\n        case 'fc-mouseover' :\n          dataset._decideTooltipType(plotIndex, e);\n          dataset._rolloverResponseSetter(chart, data, e);\n          setLink && (setElement.node.style.cursor = POINTER);\n          break;\n        case 'fc-mouseout' :\n          toolTipController.hide(toolTip);\n          dataset._rolloutResponseSetter(chart, data, e);\n          setLink && (setElement.node.style.cursor = DEFAULT_CURSOR);\n          break;\n        case 'fc-click' :\n          ele.data('fire_click_event') && chart.plotEventHandler(setElement, e, DATAPLOTCLICK, eventArgs);\n          break;\n        case 'fc-mousemove' :\n          groupManager.hideWaitElem();\n          dataset._decideTooltipType(plotIndex, e);\n          break;\n        case 'fc-mousedown':\n          clearTimeout(ele._longpressactive);\n          ele.data('fire_click_event', 1);\n          if (!viewMode) {\n            groupManager.drawWaitingRing(data, dataset.config.datasetIndex);\n          }\n          break;\n        case 'fc-mouseup':\n          groupManager.hideWaitElem();\n          groupManager.clearLongPress();\n          break;\n      }\n    }\n  }\n  /**\n   * Callback function when dragging of the node is stopped\n   * @param {Object} event The actual event object\n   */\n  dragUp (event) {\n    var ele = this,\n      data = ele.data('drag-options'),\n      dataset = data.dataset;\n    dataset._dragUp.call(ele, event);\n  }\n\n  /**\n   * Callback function when a node is being dragged\n   * @param {Object} event The actual event object\n   * @param {Object} customData Object containing the details related to drag coordinates\n   */\n  dragMove (event, customData) { // eslint-disable-line no-unused-vars\n    var ele = this,\n      data = ele.data('drag-options'),\n      dataset = data.dataset,\n      dx = customData[0],\n      dy = customData[1],\n      px = customData[2],\n      py = customData[3];\n    dataset._dragMove.call(ele, dx, dy, px, py);\n  }\n\n  /**\n   * Callback function when dragging of a node is started\n   * @param {Object} event The actual event object\n   */\n  dragStart (event) {\n    var ele = this,\n      data = ele.data('drag-options'),\n      dataset = data.dataset;\n    dataset._dragStart.call(ele, event);\n  }\n\n  /**\n   * Helper function of dragStart()\n   * @param {Object} e The actual event object\n   */\n  _dragStart () {\n    var element = this,\n      data = element.data('drag-options'),\n      dataObj = data.dataObj,\n      dataGraphics = dataObj.graphics,\n      ele = dataGraphics.element,\n      bBox = ele.getBBox(),\n      config = dataObj.config,\n      dataset = data.dataset,\n      chart = dataset.getFromEnv('chart'),\n      sourceEvent = DATAPLOTDRAGSTART,\n      dragStart = config.dragStart || (config.dragStart = {}),\n      cloneGraphic = dataObj.graphics.cloneGraphic,\n      cloneGraphicGroup = dataset.getContainer('cloneGraphicGroup'),\n      cloneText = dataObj.graphics.cloneText,\n      image = dataObj.graphics.image,\n      cloneImage = dataObj.graphics.cloneImage,\n      label = dataObj.graphics.label,\n      eventArgs;\n\n    // Set dirty flag to 1 so that bbox is recalculated again\n    if (isVML) {\n      ele._.dirty = 1;\n    }\n\n    if (config.allowDrag) {\n      if (!cloneGraphic && dataObj.graphics.element) {\n        cloneGraphic = dataObj.graphics.cloneGraphic = dataObj.graphics.element.clone();\n        cloneGraphicGroup.appendChild(cloneGraphic);\n      }\n      if (label && !cloneText) {\n        cloneText = dataObj.graphics.cloneText = dataObj.graphics.label.clone();\n        if (cloneText.followers[0] && cloneText.followers[0].el) {\n          cloneGraphicGroup.appendChild(cloneText.followers[0].el);\n        }\n        cloneGraphicGroup.appendChild(cloneText);\n      }\n      if (image && !cloneImage) {\n        cloneImage = dataObj.graphics.cloneImage =\n            dataObj.graphics.image.clone();\n        cloneGraphicGroup.appendChild(cloneImage);\n      }\n      cloneText && cloneText.show();\n      cloneImage && cloneImage.show();\n      cloneGraphic && cloneGraphic.show();\n    }\n    dragStart.xPos = config._xPos;\n    dragStart.yPos = config._yPos;\n    dragStart.x = config.x;\n    dragStart.y = config.y;\n    dragStart.bBox = bBox;\n    // store original x, y positions\n    dragStart.origX = dragStart.lastDx || (dragStart.lastDx = 0);\n    dragStart.origY = dragStart.lastDy || (dragStart.lastDy = 0);\n    eventArgs = ele.data(EVENTARGS);\n    // Whether to fire the click event ot not\n    chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n    // DragNode mouse progress cursor added.\n    cloneGraphic && cloneGraphic.show();\n    cloneText && cloneText.show();\n    cloneImage && cloneImage.show();\n  }\n\n  /**\n   * Helper function of dragMove()\n   * @param {number} dxVal the drag coordinates\n   * @param {number} dyVal the drag coordinates\n   * @param {number} px the drag coordinates\n   * @param {number} py the drag coordinates\n   */\n  _dragMove (dxVal, dyVal) {\n    var element = this,\n      dx = dxVal,\n      dy = dyVal,\n      data = element.data('drag-options'),\n      dataObj = data.dataObj,\n      ele = dataObj.graphics.element,\n      cloneGraphic = dataObj.graphics.cloneGraphic,\n      cloneImage = dataObj.graphics.cloneImage,\n      cloneText = dataObj.graphics.cloneText,\n      config = dataObj.config,\n      dragStart = config.dragStart,\n      startX = dragStart.bBox.x + dx,\n      endX = dragStart.bBox.x2 + dx,\n      startY = dragStart.bBox.y + dy,\n      endY = dragStart.bBox.y2 + dy,\n      dataset = data.dataset,\n      animationManager = dataset.getFromEnv('animationManager'),\n      parent = dataset.getLinkedParent(),\n      // graphics = .getContainer('waitGroup'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      canvasLeft = chartConfig.canvasLeft,\n      canvasRight = chartConfig.canvasRight,\n      transform,\n      canvasTop = chartConfig.canvasTop,\n      canvasBottom = chartConfig.canvasBottom;\n\n    // Bound limits\n    if (startX < canvasLeft) {\n      dx += (canvasLeft - startX);\n    }\n    if (endX > canvasRight) {\n      dx -= (endX - canvasRight);\n    }\n    if (startY < canvasTop) {\n      dy += (canvasTop - startY);\n    }\n    if (endY > canvasBottom) {\n      dy -= (endY - canvasBottom);\n    }\n    if (dx || dy) {\n      // graphics.waitElement && graphics.waitElement.hide();\n      // Whether to fire the click event or not\n      ele.data('fire_click_event', 0);\n      parent.hideWaitElem();\n      parent.clearLongPress();\n    }\n    if (config.allowDrag) {\n      dragStart.draged = true;\n      dragStart.lastDx = dx;\n      dragStart.lastDy = dy;\n\n      transform = data._transformObj = {\n        transform: 't' + (dragStart.origX + dx) + COMMA +\n            (dragStart.origY + dy)\n      };\n      if (cloneGraphic) {\n        animationManager.setAnimation({\n          el: cloneGraphic,\n          attr: transform,\n          component: dataset\n        });\n      }\n      if (cloneImage) {\n        animationManager.setAnimation({\n          el: cloneImage,\n          attr: transform,\n          component: dataset\n        });\n      }\n      if (cloneText) {\n        animationManager.setAnimation({\n          el: cloneText,\n          attr: {\n            x: config._xPos + dx,\n            y: config._yPos + dy\n          },\n          component: dataset\n        });\n      }\n    }\n  }\n\n  /**\n   * Function that return the nearest plot details\n   * @param   {number} x x-axis position of the mouse cordinate\n   * @param   {number} y y-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest plot and whether it is\n   *                   hovered or not\n   */\n  _getHoveredPlot (x, y) {\n    var res = this.config.tree.getNeighbour({\n      x: x,\n      y: y\n    }, false);\n    // searching neighbour from Kdtree with basic search flag on\n    if (res) {\n      return {\n        pointIndex: res.index || res.i,\n        hovered: true,\n        pointObj: res.data\n      };\n    }\n  }\n  /**\n   * handler called on mouseout\n   *\n   * @param {any} chart chart\n   * @param {any} data dataObj on which event occured\n   * @param {any} e event\n   * @memberof DragNodeDataset\n   */\n  _rolloutResponseSetter (chart, data, e) {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      config = data.config,\n      element = data.graphics.element,\n      dragStart = config.dragStart,\n      unHoverAttr = element.data('unHoverAttr'),\n      keysNo = dragStart && Object.keys(dragStart).length;\n\n    if (!keysNo) {\n      if (config.shapeType === 'poly' || config.shapeType === CIRCLE) {\n        // For polygon and circle, convert path to polypath\n        unHoverAttr.path = polyPathToPath([config.shapeArg.sides, config._xPos, config._yPos, unHoverAttr.r, config.startAngle, 0]);\n      }\n      config.rollOverProperties.enabled && animationManager.setAnimation({\n        el: element,\n        attr: unHoverAttr,\n        component: dataset\n      });\n      chart && chart.plotEventHandler(element, e, ROLLOUT);\n    }\n  }\n\n  /**\n   * handler called on mouseover\n   *\n   * @param {any} chart chart\n   * @param {any} data dataObj on which event occured\n   * @param {any} e event\n   * @memberof DragNodeDataset\n   */\n  _rolloverResponseSetter (chart, data, e) {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      config = data.config,\n      element = data.graphics.element,\n      dragStart = config.dragStart,\n      hoverAttr = element.data('hoverAttr'),\n      keysNo = dragStart && Object.keys(dragStart).length;\n\n    if (!keysNo) {\n      if (config.shapeType === 'poly' || config.shapeType === CIRCLE) {\n        // For polygon and circle, convert path to polypath\n        hoverAttr.path = polyPathToPath([config.shapeArg.sides, config._xPos, config._yPos, hoverAttr.r, config.startAngle, 0]);\n      }\n      config.rollOverProperties.enabled && animationManager.setAnimation({\n        el: element,\n        attr: hoverAttr,\n        component: dataset\n      });\n      chart && chart.plotEventHandler(element, e, ROLLOVER);\n    }\n  }\n  /**\n   * Helper function of dragUp()\n   * @param {Object} event The actual event object\n   */\n  _dragUp (event) {\n    var element = this,\n      data = element.data('drag-options'),\n      dataset = data.dataset,\n      // chartConfig = dataset.getFromEnv('chartConfig'),\n      chart = dataset.getFromEnv('chart'),\n      dataStore = dataset.components.data,\n      dataObj = data.dataObj,\n      ele = dataObj.graphics.element,\n      groupManager = dataset.getLinkedParent(),\n      startConnectors,\n      endConnectors,\n      sourceEvent = DATAPLOTDRAGEND,\n      config = dataObj.config,\n      // canvasTop = chartConfig.canvasTop,\n      // canvasLeft = chartConfig.canvasLeft,\n      dragStart = dataObj.config.dragStart || {},\n      yAxis = dataset.getFromEnv('yAxis'),\n      i,\n      setObj,\n      len,\n      eventCord,\n      eventArgs,\n      cloneText = dataObj.graphics.cloneText,\n      // graphics = dataset.groupManager.graphics,\n      xAxis = dataset.getFromEnv('xAxis'),\n      updateObj = {},\n      datasetIndex = dataset.config.datasetIndex,\n      cloneGraphic = dataObj.graphics.cloneGraphic,\n      cloneImage = dataObj.graphics.cloneImage;\n\n    groupManager.hideWaitElem();\n    groupManager.clearLongPress();\n    if (dragStart.draged) {\n      dragStart.origX += dragStart.lastDx;\n      dragStart.origY += dragStart.lastDy;\n      dataObj.config._xPos = dragStart.xPos + dragStart.lastDx;\n      dataObj.config._yPos = dragStart.yPos + dragStart.lastDy;\n      updateObj.x = xAxis.getValue(dataObj.config._xPos);\n      updateObj.y = yAxis.getValue(dataObj.config._yPos);\n      updateObj.update = true;\n      for (i = 0, len = dataStore.length; i < len; i++) {\n        setObj = dataStore[i];\n        if (dataObj.config.id === setObj.config.id) {\n          break;\n        }\n      }\n\n      dataset.updatePointConfig(updateObj, i);\n      eventArgs = ele.data(EVENTARGS);\n      eventArgs.x = updateObj.x;\n      eventArgs.y = updateObj.y;\n      dataset.parsePlotAttributes(i);\n      dataset._drawNode(i);\n      // dataset.drawTracker(i, i + 1);\n      startConnectors = dataObj.config.startConnectors;\n      endConnectors = dataObj.config.endConnectors;\n      groupManager.drawNodeConnectors(startConnectors, datasetIndex);\n      groupManager.drawNodeConnectors(endConnectors, datasetIndex);\n      eventCord = getMouseCoordinate(chart.getFromEnv('chart-container'), event, chart);\n      eventCord.sourceEvent = sourceEvent;\n      // Fire the ChartUpdated event\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs), event);\n      chart.fireChartInstanceEvent(sourceEvent, eventArgs, event);\n      dragStart.draged = false;\n      dataset._setupKdTree();\n    }\n    cloneText && cloneText.hide();\n    cloneGraphic && cloneGraphic.hide();\n    cloneImage && cloneImage.hide();\n    delete config.dragStart;\n  }\n\n  /**\n   * Function to update a specific node at the end of dragging\n   * @param {Object} updateConf Having values regarding the new position of the node\n   * @param {number} index the index of the node that is to be updated\n   */\n  updatePointConfig (updateConf, index) {\n    var dataset = this,\n      // chart = dataset.chart,\n      dataStore = dataset.components.data,\n      conf = dataset.config,\n      dataObj = dataStore[index] || {},\n      config = dataObj.config,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      // yMin = conf.yMin || +Infinity,\n      // yMax = conf.yMax || -Infinity,\n      // xMax = conf.xMax || -Infinity,\n      // xMin = conf.xMin || +Infinity,\n      xValue;\n    if (config === UNDEF) {\n      return;\n    }\n    config.y = numberFormatter.getCleanValue(pluck(updateConf.y));\n    config.x = numberFormatter.getCleanValue(pluck(updateConf.x));\n    config._options.x = config.x;\n    config._options.y = config.y;\n    // yMax = mathMax(yMax, config.y);\n    // yMin = mathMin(yMin, config.y);\n    // xMax = mathMax(xMax, config.x);\n    // xMin = mathMin(xMin, config.x);\n    xValue = numberFormatter.xAxis(config.x);\n    // push the point object\n    config.formatedVal = (config.y === null\n      ? config.y : numberFormatter.dataLabels(config.y));\n    config.xValue = xValue;\n    if (!conf.showTooltip) {\n      config.toolText = false;\n    } else {\n      config.toolText = _configureTooltext(config, conf, chartAttr);\n    }\n    config.update = updateConf.update;\n  }\n\n  /**\n   * Returns a node corresponding to the given id\n   * @param {string} id The id of the enquired node\n   * @return {Object} The object conatining the info about the node\n   */\n  getNode (id) {\n    return id ? this.components.nodes[id] : this.components.nodes;\n  }\n\n  /**\n    * Function for parsing all the attributes and value given by the user at chart and dataset level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} if no datasetJSON is found\n    */\n  configureAttributes (datasetJSON) {\n    if (datasetJSON) {\n      this.trimData(datasetJSON);\n      this.config.JSONData = datasetJSON;\n    } else if (!datasetJSON && !this.config.JSONData) {\n      return false;\n    }\n\n    var dataset = this,\n      dIndex = dataset.config.datasetIndex,\n      JSONData = dataset.config.JSONData,\n      data = JSONData.data || [],\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      dataLength = data.length,\n      conf = dataset.config,\n      // showValues,\n      ZERO = ZEROSTRING,\n      colorM = dataset.getFromEnv('color-manager'),\n      index,\n      plotFillAlpha,\n      showPlotBorder,\n      plotBorderColor,\n      plotBorderThickness,\n      plotBorderAlpha,\n      // datasetId,\n      datasetPlotBorderThickness,\n      // dataStore,\n      // dataStoreLen,\n      useRoundEdges,\n      HUNDRED = HUNDREDSTRING;\n    conf.context = {};\n    dataset.components.nodes = {};\n    conf.showValues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 1);\n    useRoundEdges = conf.useRoundEdges = pluckNumber(chartAttr.useroundedges);\n    conf.zIndex = 1;\n    conf.name = getValidValue(JSONData.seriesname);\n    conf.viewMode = pluckNumber(chartAttr.viewmode, 0);\n    conf.id = pluck(JSONData.id, dataset.index);\n    if (pluckNumber(JSONData.includeinlegend) === 0 ||\n      conf.name === UNDEF) {\n      conf.showInLegend = false;\n    }\n    conf.seriesname = parseUnsafeString(JSONData.seriesname);\n    conf.includeinlegend = pluckNumber(JSONData.includeinlegend, (conf.seriesname ? 1 : 0));\n\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.seriesNameInTooltip = pluckNumber(chartAttr.seriesnameintooltip, 1);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.tooltipSepChar = pluck(chartAttr.tooltipsepchar, ' - ');\n    // Plot Properties\n    plotFillAlpha = conf.plotFillAlpha = pluck(chartAttr.plotfillalpha, HUNDRED);\n    showPlotBorder = conf.showPlotBorder = pluckNumber(chartAttr.showplotborder, 1);\n    plotBorderColor = conf.plotBorderColor = getFirstColor(pluck(chartAttr.plotbordercolor, '666666'));\n    plotBorderThickness = conf.plotBorderThickness = pluckNumber(chartAttr.plotborderthickness,\n      useRoundEdges ? 2 : 1);\n    plotBorderAlpha = conf.plotBorderAlpha = pluck(chartAttr.plotborderalpha, chartAttr.plotfillalpha,\n      useRoundEdges ? '35' : '95');\n\n    // Node Properties\n    conf.use3DLighting = Boolean(pluckNumber(chartAttr.use3dlighting,\n      chartAttr.is3d, useRoundEdges ? 1 : 0));\n    // Store attributeshc\n    conf.color = getFirstColor(pluck(JSONData.color, colorM.getPlotColor(dIndex)));\n    conf.alpha = pluck(JSONData.plotfillalpha, JSONData.nodeFillAlpha,\n      JSONData.alpha, plotFillAlpha);\n    // Data set plot properties\n    conf.datasetShowPlotBorder = Boolean(pluckNumber(JSONData.showplotborder, showPlotBorder));\n    conf.datasetPlotBorderColor = getFirstColor(pluck(JSONData.plotbordercolor, JSONData.nodebordercolor,\n      plotBorderColor));\n    conf.datasetPlotBorderThickness = pluckNumber(JSONData.plotborderthickness,\n      JSONData.nodeborderthickness, plotBorderThickness);\n    conf.datasetPlotBorderAlpha = (conf.datasetShowPlotBorder) ? pluck(JSONData.plotborderalpha,\n      JSONData.nodeborderalpha, JSONData.alpha, plotBorderAlpha) : ZERO;\n    // Drag Border properties\n    conf.datasetAllowDrag = Boolean(pluckNumber(JSONData.allowdrag, 1));\n\n    conf.colorObj = {\n      fillColor: convertColor(conf.color, conf.alpha),\n      lineColor: {\n        FCcolor: {\n          color: conf.datasetPlotBorderColor,\n          alpha: conf.datasetPlotBorderAlpha\n        }\n      }\n    };\n    conf.lineWidth = datasetPlotBorderThickness;\n    conf.symbol = POLY_4;\n    // dataStore = dataset.components.data =\n    dataset.components.data || (dataset.components.data = []);\n    // dataStoreLen = dataStore.length;\n    // if (dataStoreLen > dataLength) {\n    //   dataStore.splice(dataLength, dataStoreLen - dataLength);\n    // }\n\n    dataset.setState('visible', pluckNumber(JSONData.visible,\n      !Number(JSONData.initiallyhidden), 1) === 1);\n    conf.yMin = conf.yMax = conf.xMax = conf.xMin = 0;\n    // This flag is true when data update is fired\n    dataset._refreshData = true;\n    // Iterate through all level data\n    for (index = 0; index < dataLength; index += 1) {\n      this._setConfigure(index);\n    }\n    dataset._refreshData = false;\n    chartConfig.showLegend && dataset._addLegend();\n    dataset._setDatasetIndex();\n    dataset.setState('dirty', true);\n  }\n\n  /**\n   * Function for parsing all the attributes and value given by the user at set level.\n   * @param {number} index The data index for which the configuration is to be prsed.\n   * @param {Object} updateObj It has the information of the data given by the user\n   */\n  _setConfigure (index, updateObj) {\n    var dataset = this,\n      JSONData = dataset.config.JSONData,\n      data = JSONData.data,\n      setData = updateObj || data[index],\n      dataStore = dataset.components.data,\n      conf = dataset.config,\n      dataObj = dataStore[index] = dataStore[index] || (dataStore[index] = {}),\n      config = dataObj.config = dataObj.config || (dataObj.config = {}),\n      datasetId = conf.id,\n      shape,\n      yMin = conf.yMin || +Infinity,\n      yMax = conf.yMax || -Infinity,\n      xMax = conf.xMax || -Infinity,\n      xMin = conf.xMin || +Infinity,\n      itemValueY,\n      itemValueX,\n      label,\n      safeLabel,\n      shapeType,\n      use3DLighting = conf.use3DLighting,\n      datasetPlotBorderThickness = conf.datasetPlotBorderThickness,\n      datasetPlotBorderColor = conf.datasetPlotBorderColor,\n      datasetPlotBorderAlpha = conf.datasetPlotBorderAlpha,\n      // chart = dataset.chart,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      datasetColor = conf.color,\n      datasetAlpha = conf.alpha,\n      // fillColor,\n      datasetAllowDrag = conf.datasetAllowDrag,\n      numberFormatter = dataset.getFromEnv('number-formatter');\n\n    !dataObj.graphics && (dataObj.graphics = {});\n    config._options = extend2({}, setData);\n    if (setData || updateObj) {\n      itemValueY = config.y = numberFormatter.getCleanValue(pluck(setData.y));\n      itemValueX = config.x = numberFormatter.getCleanValue(pluck(setData.x));\n      config.index = index;\n      if (!config.dragStart) {\n        config.dragStart = {};\n      }\n      yMax = mathMax(yMax, config.y);\n      yMin = mathMin(yMin, config.y);\n      xMax = mathMax(xMax, config.x);\n      xMin = mathMin(xMin, config.x);\n      if (itemValueY === null) {\n        config.value = null;\n      } else {\n        label = numberFormatter.xAxis(itemValueX);\n        // push the point object\n        config.formatedVal = (itemValueY === null\n          ? itemValueY : numberFormatter.dataLabels(itemValueY));\n        config.setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext,\n          JSONData.plottooltext, chartAttr.plottooltext), false));\n        config.pointLabel = pluck(setData.label, setData.name);\n        safeLabel = parseUnsafeString(config.pointLabel);\n        config.label = safeLabel;\n        config.name = safeLabel;\n        config.displayValue = safeLabel;\n        config.xValue = label;\n        if (!updateObj) {\n          config.startConnectors = {};\n          config.endConnectors = {};\n        }\n        // create the tooltext\n        if (!conf.showTooltip) {\n          config.toolText = false;\n        } else {\n          config.toolText = _configureTooltext(config, conf, chartAttr);\n        }\n        config.link = setData.link;\n        // Shape and cosmetics related attributes\n        config.id = pluck(setData.id, (datasetId + preDefStr.UNDERSCORE + index));\n        config.allowDrag = Boolean(pluckNumber(setData.allowdrag, datasetAllowDrag));\n        shape = config.shape = getValidValue(pluck(setData.shape), preDefStr.RECTANGLE).toLowerCase();\n        config.height = getValidValue(pluck(setData.height), 10);\n        config.width = getValidValue(pluck(setData.width), 10);\n        config.radius = getValidValue(pluck(setData.radius), 10);\n        config.numSides = getValidValue(pluck(setData.numsides), 4);\n        config.color = getFirstColor(pluck(setData.color, datasetColor));\n        config.borderColor = getFirstColor(pluck(setData.bordercolor, datasetPlotBorderColor));\n        config.alpha = pluck(setData.alpha, datasetAlpha);\n        config.imageURL = getValidValue(setData.imageurl);\n        config.imageNode = Boolean(pluckNumber(setData.imagenode));\n        config.imageWidth = setData.imagewidth;\n        config.imageHeight = setData.imageheight;\n        config.imageAlign = getValidValue(setData.imagealign, BLANK).toLowerCase();\n        config.labelAlign = pluck(setData.labelalign, config.imageNode &&\n            defined(config.imageURL) ? POSITION_TOP : preDefStr.POSITION_MIDDLE);\n        config.hovercolor = pluck(setData.hovercolor, JSONData.hovercolor);\n        config.borderhoveralpha = pluck(setData.borderhoveralpha, JSONData.borderhoveralpha);\n        config.borderhovercolor = pluck(setData.borderhovercolor, JSONData.borderhovercolor);\n        config.borderhoverthickness = pluck(setData.borderhoverthickness, JSONData.borderhoverthickness);\n        config.hoveralpha = pluck(setData.hoveralpha, JSONData.hoveralpha);\n        config.hoverheight = pluck(setData.hoverheight, JSONData.hoverheight);\n        config.hoverradius = pluck(setData.hoverradius, JSONData.hoverradius);\n        config.hoverwidth = pluck(setData.hoverwidth, JSONData.hoverwidth);\n\n        config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n        // If not required shape then set it to rectangle\n        switch (config.shape) {\n          case CIRCLE:\n            shapeType = 0;\n            break;\n          case POLYGON:\n            shapeType = 2;\n            shape = mapSymbolName(config.numSides);\n            break;\n          default:\n            shapeType = 1;\n            break;\n        }\n        config.symbol = shape;\n        if (use3DLighting) {\n          config.fillColor = getPointColor(config.color,\n            config.alpha, shapeType);\n          config.cloneFillColor = getPointColor(config.color, 50, shapeType);\n        } else {\n          config.fillColor = {\n            color: config.color,\n            alpha: config.alpha\n          };\n          config.cloneFillColor = convertColor(config.color, 50);\n        }\n        config.colorArr = [\n          {\n            FCcolor: {\n              color: config.color,\n              alpha: config.alpha\n            }\n          },\n          {\n            FCcolor: {\n              color: config.borderColor,\n              alpha: datasetPlotBorderAlpha\n            }\n          }\n        ];\n        config.rollOverProperties = dataset.pointHoverOptions(dataObj, chartAttr, {\n          shapeType: shapeType,\n          use3D: use3DLighting,\n          height: config.height,\n          width: config.width,\n          radius: config.radius,\n          color: config.color,\n          alpha: config.alpha,\n          borderColor: config.borderColor,\n          borderAlpha: datasetPlotBorderAlpha,\n          borderThickness: datasetPlotBorderThickness\n        });\n      }\n      !config.update && updateObj && (config.update = updateObj.update);\n      !config.add && updateObj && (config.add = updateObj.add);\n      if (dataset._refreshData === true) {\n        delete dataObj.removed;\n      }\n    }\n    dataObj.dataset = dataset;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    conf.yMin = yMin;\n    conf.yMax = yMax;\n  }\n\n  /**\n   * Function for parsing the hover effects\n   * @param {Object} dataObj Containing the set level information used for creating the hover effect\n   * @param {Object} chartAttr Containing the chart level information used for creating the hover effect\n   * @param {Object} defaults Containing the default information used for creating the hover effect\n   * @return {Object} Containg the final parsed hover properties\n   */\n  pointHoverOptions (dataObj, chartAttr, defaults) {\n    var dataset = this,\n      hoverEffect = pluckNumber(dataObj.config.showhovereffect, dataset.config.showhovereffect,\n        chartAttr.plothovereffect, chartAttr.showhovereffect),\n      rolloverProperties = {},\n      hoverAttr = !!pluck(dataObj.config.hovercolor, dataset.config.hovercolor, chartAttr.plotfillhovercolor,\n        dataObj.config.hoveralpha, dataset.config.hoveralpha, chartAttr.plotfillhoveralpha,\n        dataObj.config.borderhovercolor, dataset.config.borderhovercolor, chartAttr.plotborderhovercolor,\n        dataObj.config.borderhoveralpha, dataset.config.borderhoveralpha, chartAttr.plotborderhoveralpha,\n        dataObj.config.borderhoverthickness, dataset.config.borderhoverthickness, chartAttr.plotborderhoverthickness,\n        dataObj.config.hoverheight, dataset.config.hoverheight, chartAttr.plothoverheight,\n        dataObj.config.hoverwidth, dataset.config.hoverwidth, chartAttr.plothoverwidth,\n        dataObj.config.hoverradius, dataset.config.hoverradius, chartAttr.plothoverradius, hoverEffect),\n      enabled = false,\n      color,\n      alpha,\n      rawhoverBorderColor,\n      rawhoverBorderAlpha,\n      fillColor;\n\n    if ((hoverEffect === UNDEF && hoverAttr) || hoverEffect) {\n      enabled = true;\n      color = pluck(dataObj.config.hovercolor, dataset.config.hovercolor,\n        chartAttr.plotfillhovercolor, getLightColor(defaults.color, 70));\n      alpha = pluck(dataObj.config.hoveralpha, dataset.config.hoveralpha,\n        chartAttr.plotfillhoveralpha, defaults.alpha);\n      rawhoverBorderColor = pluck(dataObj.config.borderhovercolor, dataset.config.borderhovercolor,\n        chartAttr.plotborderhovercolor, defaults.borderColor);\n      rawhoverBorderAlpha = pluckNumber(dataObj.config.borderhoveralpha, dataset.config.borderhoveralpha,\n        chartAttr.plotborderhoveralpha, alpha, defaults.borderAlpha);\n\n      rolloverProperties = {\n        rawhoverAlpha: alpha,\n        rawhoverColor: color,\n        rawhoverBorderColor,\n        rawhoverBorderAlpha,\n        stroke: convertColor(rawhoverBorderColor,\n          pluckNumber(dataObj.config.borderhoveralpha, dataset.config.borderhoveralpha,\n            chartAttr.plotborderhoveralpha, alpha, defaults.borderAlpha)),\n        'stroke-width': pluckNumber(dataObj.config.borderhoverthickness, dataset.config.borderhoverthickness,\n          chartAttr.plotborderhoverthickness, defaults.borderThickness),\n        height: pluckNumber(dataObj.config.hoverheight, dataset.config.hoverheight,\n          chartAttr.plothoverheight, defaults.height),\n        width: pluckNumber(dataObj.config.hoverwidth, dataset.config.hoverwidth,\n          chartAttr.plothoverwidth, defaults.width),\n        r: pluckNumber(dataObj.config.hoverradius, dataset.config.hoverradius,\n          chartAttr.plothoverradius, defaults.radius)\n      };\n\n      if (defaults.use3D) {\n        fillColor = getPointColor(getFirstColor(pluck(dataObj.config.hovercolor,\n          dataset.config.hovercolor, chartAttr.plotfillhovercolor,\n          getLightColor(defaults.color, 70))),\n        pluck(dataObj.config.hoveralpha, dataset.config.hoveralpha,\n          chartAttr.plotfillhoveralpha, defaults.alpha),\n        defaults.shapeType);\n      } else {\n        fillColor = convertColor(color, alpha);\n      }\n\n      rolloverProperties.fill = toRaphaelColor(fillColor);\n    }\n\n    return {\n      enabled: enabled,\n      rollOverAttrs: rolloverProperties\n    };\n  }\n\n  /**\n   * Function for attaching a legend with a dataset\n   */\n  _addLegend () {\n    var dataset = this,\n      // chart = dataset.chart,\n      conf = dataset.config,\n      legendItem,\n      legend = dataset.getFromEnv('legend'),\n      config = {\n        enabled: conf.includeInLegend,\n        type: dataset.type,\n        anchorSide: 4,\n        label: getFirstValue(dataset.config.JSONData.seriesname)\n      };\n    if (conf.includeinlegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      } else {\n        legendItem.configure({ style: legend.config.itemStyle,\n          hiddenStyle: legend.config.itemHiddenStyle,\n          datasetVisible: legend.config.datasetVisible,\n          hoverStyle: legend.config.itemHoverStyle });\n      }\n      legendItem.configure(config);\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor({\n            color: conf.color,\n            alpha: conf.alpha\n          }),\n          rawFillColor: conf.color,\n          stroke: toRaphaelColor({\n            color: conf.plotBorderColor,\n            alpha: HUNDREDSTRING\n          }),\n          'stroke-width': conf.anchorBorderThickness\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item is dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n\n  /**\n   * Function to create graphical container for the specific dataset\n   */\n  createContainer () {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      parentContainer = dataset.getLinkedParent().getChildContainer();\n\n    !dataset.getContainer('nodesGroup') && dataset.addContainer('nodesGroup',\n      createGroup('nodesGroup', animationManager, parentContainer.defaultVcanvasGroup, dataset));\n\n    !dataset.getContainer('dataLabelsGroup') && dataset.addContainer('dataLabelsGroup',\n      createGroup('dataLabelsGroup', animationManager, parentContainer.vcanvasLabelGroup, dataset));\n\n    !dataset.getContainer('cloneGraphicGroup') && dataset.addContainer('cloneGraphicGroup',\n      createGroup('cloneGraphicGroup', animationManager, parentContainer.defaultVcanvasGroup, dataset));\n  }\n\n  /**\n   * Draw function of DragNodeDataset\n   */\n  draw () {\n    var dataset = this,\n      components = dataset.components,\n      // parent = dataset.getLinkedParent(),\n      // datasetGraphics = parent.getChildContainer(),\n      // chart = dataset.chart,\n      // jobList = chart.getJobList(),\n      smartLabel = dataset.getFromEnv('smartLabel'),\n      data = components.data,\n      removeDataArr = dataset.components.removeDataArr || [],\n      removeDataArrLen = removeDataArr.length,\n      i,\n      // paper = dataset.getFromEnv('paper'),\n      ln,\n      group,\n      // config,\n      style = dataset.getFromEnv('dataLabelStyle'),\n      css = {\n        fontFamily: style.fontFamily,\n        fontSize: style.fontSize,\n        lineHeight: style.lineHeight,\n        fontWeight: style.fontWeight,\n        fontStyle: style.fontStyle\n      },\n      // dragLabelGroup,\n      removed;\n      // layers = chart.graphics, // requird for series\n      // gDataset = layers.datasetGroup;\n\n    if (!dataset.getState('dirty') && !dataset._contextChanged()) {\n      return;\n    }\n    dataset.createContainer();\n    group = dataset.getContainer('nodesGroup');\n    // dragLabelGroup = dataset.getContainer('dataLabelsGroup');\n    dataset.getFromEnv('animationManager').setAnimation({\n      el: dataset.getContainer('cloneGraphicGroup'),\n      attr: { opacity: 0.3 },\n      component: dataset\n    });\n\n    group.css(css);\n    smartLabel.useEllipsesOnOverflow(dataset.getFromEnv('chartConfig').useEllipsesWhenOverflow);\n    // smartLabel.setStyle(style);\n    // group.css(css);\n    // draw data\n    for (i = 0, ln = data.length; i < ln; i += 1) {\n      // config = data[i].config;\n      removed = data[i].removed;\n      !removed && this._drawNode(i);\n    }\n    dataset.config.drawn = true;\n\n    // if (dataset.visible) {\n    //   group.show();\n    //   // dragLabelGroup.show();\n    // }\n    // Remove the extra elements\n    for (i = 0; i < removeDataArrLen; i++) {\n      dataset._removeDataVisuals(removeDataArr.shift());\n    }\n    dataset._setupKdTree();\n  }\n\n  /**\n   * Sets up kdtree for finding out whether pointer is above any plot\n   *\n   * @memberof DragNodeDataset\n   */\n  _setupKdTree () {\n    var dataset = this,\n      conf = dataset.config,\n      data = dataset.components.data,\n      dataLen,\n      i,\n      config,\n      attr,\n      maxRadius = -Infinity,\n      searchDataArr;\n\n    searchDataArr = conf.searchDataArr = [];\n    dataLen = data.length;\n    for (i = 0; i < dataLen; i++) {\n      config = data[i].config;\n      if (!data[i].removed && config._yPos !== UNDEF && !isNaN(config._yPos)) {\n        attr = config.props.element.attr;\n        maxRadius = Math.max(maxRadius, pluckNumber(config.radius, 0));\n        searchDataArr.push({\n          x: pluckNumber(attr.x, config._xPos),\n          y: pluckNumber(attr.y, config._yPos),\n          index: i,\n          data: data[i],\n          shapeInfo: {\n            type: config.shape,\n            radius: pluck(config.radius, 0),\n            width: pluckNumber(config.width),\n            height: pluckNumber(config.height),\n            sides: pluckNumber(config.numSides)\n          }\n        });\n      }\n    }\n    conf.tree = new KdTree(true).buildKdTree(searchDataArr);\n    conf.tree._setSearchLimit(maxRadius, maxRadius);\n  }\n  /**\n   * Draw the individual data labels for the nodes\n   * @param {number} index The index of the datalabel that is to be drawn\n   */\n  drawLabel (index) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      conf = dataset.config,\n      datasetIndex = conf.datasetIndex,\n      animationManager = dataset.getFromEnv('animationManager'),\n      dataStore = dataset.components.data,\n      i,\n      len = dataStore.length,\n      labelAttrs,\n      labelElement,\n      plotLabelStyle,\n      group = dataset.getContainer('nodesGroup'),\n      // style = chart.config.dataLabelStyle,\n      // animationObj = chart.get('config', 'animationObj'),\n      // dummyAnimElem = animationObj.dummyObj,\n      // dummyAnimObj = animationObj.animObj,\n      config,\n      valueString,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      style = dataset.getFromEnv('dataLabelStyle'),\n      cursor,\n      smartTextObj,\n      labelDisplacement,\n      eventArgs,\n      set,\n      yAdjustment,\n      // animType = animationObj.animType,\n      xPos,\n      labelY,\n      groupId,\n      cloneText,\n      plotWidth,\n      plotHeight,\n      labelAlign,\n      setGraphics,\n      dragUp = dataset.dragUp,\n      dragMove = dataset.dragMove,\n      dragStart = dataset.dragStart,\n      rollOverProperties,\n      shapeType,\n      yPos,\n      smartLabel = dataset.getFromEnv('smartLabel'),\n      setElement,\n      visible = dataset.getState('visible');\n\n    smartLabel.setStyle(style);\n\n    if (index !== UNDEF) {\n      i = index;\n      len = i + 1;\n    } else {\n      i = 0;\n    }\n\n    for (; i < len; i++) {\n      set = dataStore[i];\n      config = set.config;\n      plotWidth = config._plotWidth;\n      plotHeight = config._plotHeight;\n      valueString = config.displayValue;\n      labelAlign = config.labelAlign;\n      setGraphics = set.graphics;\n      cloneText = setGraphics.cloneText;\n      rollOverProperties = set.config.rollOverProperties;\n      shapeType = config.shapeType;\n\n      if (visible && defined(valueString) && valueString !== BLANK) {\n        // Get the displayValue text according to the canvas width.\n        smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n        // padding for text from boundaries is taken care of\n        smartTextObj = smartLabel.getSmartText(valueString,\n          plotWidth - PADDING, plotHeight - PADDING);\n\n        // label displacement for top or bottom\n        labelDisplacement = plotHeight * 0.5 -\n            (smartTextObj.height * 0.5);\n        // label at TOP\n        switch (labelAlign) {\n          case POSITION_TOP:\n            labelDisplacement = -labelDisplacement;\n            break;\n          case POSITION_BOTTOM:\n            break;\n          default:\n            labelDisplacement = 0;\n            break;\n        }\n        xPos = config._xPos;\n        yPos = config._yPos;\n        set._yAdjustment = yAdjustment = labelDisplacement;\n        labelY = yPos + yAdjustment;\n        cursor = config.link ? POINTER : config.allowDrag ? 'move' : BLANKSTRING;\n\n        plotLabelStyle = config.dataLabelStyle;\n        labelAttrs = {\n          text: smartTextObj.text,\n          title: (smartTextObj.tooltext || BLANKSTRING),\n          fill: plotLabelStyle.color,\n          'text-bound': [plotLabelStyle.backgroundColor, plotLabelStyle.borderColor,\n            style.borderThickness, style.borderPadding,\n            style.borderRadius, style.borderDash\n          ],\n          x: xPos,\n          y: labelY,\n          cursor: cursor\n        };\n\n        labelElement = setGraphics.label;\n\n        labelElement = animationManager.setAnimation({\n          el: labelElement || 'text',\n          attr: labelAttrs,\n          container: group,\n          component: dataset\n        });\n        labelElement.outlineText(conf.showTextOutline, labelAttrs.fill);\n        if (!setGraphics.label) {\n          labelElement = dataset.addGraphicalElement('plotLabel', labelElement, true);\n          setGraphics.label = labelElement;\n\n          // If dragging is allowed for that node then only we bind drag functions to the labelElement\n          labelElement.drag(dragMove, dragStart, dragUp);\n        } else {\n          labelElement.show();\n        }\n\n        setElement = setGraphics && (setGraphics.image || setGraphics.element);\n\n        if (cloneText) {\n          animationManager.setAnimation({\n            el: cloneText,\n            attr: {\n              transform: BLANKSTRING,\n              x: xPos,\n              y: labelY,\n              text: smartTextObj.text,\n              title: (smartTextObj.tooltext || BLANKSTRING),\n              fill: style.color,\n              'text-bound': [style.backgroundColor, style.borderColor,\n                style.borderThickness, style.borderPadding,\n                style.borderRadius, style.borderDash\n              ]\n            },\n            component: dataset\n          });\n        }\n\n        labelElement.data('drag-options', {\n          dataObj: set,\n          dataset: dataset,\n          datasetIndex: datasetIndex,\n          pointIndex: set.config.index,\n          cursor: cursor,\n          chart: chart,\n          link: set.link\n        });\n        eventArgs = {\n          index: i,\n          link: config.link,\n          y: config.y,\n          x: config.x,\n          shape: pluck(shapeType, 'rect'),\n          width: config.width,\n          height: config.height,\n          radius: config.radius,\n          sides: config.numSides,\n          label: config.displayValue,\n          toolText: config.toolText,\n          id: config.id,\n          datasetIndex: datasetIndex,\n          datasetName: dataset.config.JSONData.seriesname,\n          sourceType: 'dataplot',\n          allowDrag: config.allowDrag,\n          numSides: config.numSides,\n          imageNode: config.imageNode,\n          imageAlign: config.imageAlign,\n          imageWidth: config.imageWidth,\n          imageHeight: config.imageHeight,\n          labelAlign: config.labelAlign,\n          color: config.color,\n          alpha: config.alpha,\n          hoverColor: config.rollOverProperties.rollOverAttrs.rawhoverColor,\n          hoverAlpha: config.rollOverProperties.rollOverAttrs.rawhoverAlpha,\n          borderHoverColor: config.rollOverProperties.rollOverAttrs.rawhoverBorderColor,\n          borderHoverAlpha: config.rollOverProperties.rollOverAttrs.rawhoverBorderAlpha,\n          borderHoverThickness: config.rollOverProperties.rollOverAttrs['stroke-width'],\n          hoverHeight: config.rollOverProperties.rollOverAttrs.height,\n          hoverWidth: config.rollOverProperties.rollOverAttrs.width,\n          hoverRadius: config.rollOverProperties.rollOverAttrs.r\n        };\n\n        groupId = datasetIndex + '_' + i;\n        labelElement.data(GROUPID, groupId);\n        labelElement.data(EVENTARGS, eventArgs);\n        labelElement.data('hoverAttr', rollOverProperties && rollOverProperties.rollOverAttrs);\n        labelElement.data('unHoverAttr', setElement.data('unHoverAttr'));\n      } else {\n        setGraphics.label && setGraphics.label.hide();\n      }\n    }\n  }\n\n  /**\n   * Parses plot cosmetics and calculates position\n   *\n   * @param {any} i index\n   * @memberof DragNodeDataset\n   */\n  parsePlotAttributes (i) {\n    var dataset = this,\n      datasetIndex = dataset.config.datasetIndex,\n      datasetComponents = dataset.components,\n      nodes = datasetComponents.nodes,\n      xAxis = dataset.getFromEnv('xAxis'),\n      yAxis = dataset.getFromEnv('yAxis'),\n      data = datasetComponents.data,\n      set = data[i],\n      config = set.config,\n      conf = dataset.config,\n      xPos,\n      yPos,\n      setGraphics = set.graphics || (set.graphics = {}),\n      symbol = config.symbol,\n      width,\n      height,\n      radius,\n      id,\n      imageNode,\n      confShapeArg,\n      imageURL,\n      imageAlign,\n      lineColor = conf.colorObj.lineColor,\n      lineWidth = conf.datasetPlotBorderThickness,\n      plotWidth,\n      plotHeight,\n      isRectangle,\n      rollOverProperties = set.config.rollOverProperties,\n      imageWidth,\n      imageHeight,\n      imageY,\n      pointAttr,\n      fill,\n      shapeType = config.shape,\n      cursor = config.link ? POINTER : config.allowDrag ? 'move' : BLANKSTRING,\n      rollOverAttrs,\n      polypath,\n      cloneImage = setGraphics.cloneImage,\n      attr,\n      cloneImageAttr,\n      imageElementAttr;\n\n    config._yPos = yPos = yAxis.getPixel(config.y);\n    config._xPos = xPos = xAxis.getPixel(config.x);\n    // only draw the point if y is defined\n    if (yPos !== UNDEF && !isNaN(yPos)) {\n      config.shapeArg = {};\n      confShapeArg = config.shapeArg;\n      height = pluckNumber(config.height);\n      width = pluckNumber(config.width);\n      radius = pluckNumber(config.radius);\n      isRectangle = symbol === RECTANGLE;\n      id = config.id;\n      imageNode = config.imageNode;\n      imageURL = config.imageURL;\n      imageAlign = config.imageAlign; // TOP, MIDDLE or BOTTOM\n      plotWidth = isRectangle ? width : radius * 1.4;\n      imageWidth = pluckNumber(config.imageWidth, plotWidth);\n      plotHeight = isRectangle ? height : radius * 1.4;\n      imageHeight = pluckNumber(config.imageHeight, plotHeight);\n      fill = toRaphaelColor(config.fillColor);\n      config._plotWidth = plotWidth;\n      config._plotHeight = plotHeight;\n      pointAttr = {\n        fill: fill,\n        'stroke-width': lineWidth,\n        stroke: toRaphaelColor(lineColor)\n      };\n      symbol = confShapeArg.symbol = pluck(config.symbol,\n        conf.symbol, BLANK);\n      symbol = symbol.split(UNDERSCORE);\n\n      polypath = [symbol[1], xPos, yPos, config.radius, config.startAngle, 0];\n\n      if (symbol[0] === 'poly' || symbol[0] === CIRCLE) {\n        config.shapeType = symbol[0];\n        config.elemType = PATH;\n        // convert polypath to path\n        attr = {\n          path: polyPathToPath(polypath)\n        };\n        confShapeArg.x = xPos;\n        confShapeArg.y = yPos;\n        confShapeArg.radius = config.radius;\n        confShapeArg.sides = symbol[1];\n        pointAttr.r = config.radius;\n        delete pointAttr.width;\n        delete pointAttr.x;\n        delete pointAttr.y;\n        delete pointAttr.height;\n        if (rollOverProperties && rollOverProperties.enabled) {\n          rollOverAttrs = rollOverProperties.rollOverAttrs;\n          delete rollOverAttrs.x;\n          delete rollOverAttrs.y;\n          delete rollOverAttrs.width;\n          delete rollOverAttrs.height;\n        }\n      } else {\n        config.shapeType = SHAPE_RECT;\n        config.elemType = SHAPE_RECT;\n        confShapeArg.x = xPos - (width / 2);\n        confShapeArg.y = yPos - (height / 2);\n        confShapeArg.r = 0;\n        confShapeArg.width = width;\n        confShapeArg.height = height;\n        attr = {\n          x: confShapeArg.x,\n          y: confShapeArg.y,\n          width: width,\n          height: height,\n          r: 0\n        };\n        pointAttr.width = width;\n        pointAttr.height = height;\n        pointAttr.x = xPos - (width / 2);\n        pointAttr.y = yPos - (height / 2);\n        // Readjust x and y of the rectangle if hover width or height is\n        // changed\n        if (rollOverProperties && rollOverProperties.enabled) {\n          rollOverAttrs = rollOverProperties.rollOverAttrs;\n          rollOverAttrs.x = xPos - (rollOverAttrs.width / 2);\n          rollOverAttrs.y = yPos - (rollOverAttrs.height / 2);\n          delete rollOverAttrs.r;\n        }\n      }\n\n      attr.fill = fill;\n      attr['stroke-width'] = lineWidth;\n      attr.stroke = toRaphaelColor(lineColor);\n\n      config.eventArgs = {\n        index: i,\n        link: config.link,\n        y: config.y,\n        x: config.x,\n        shape: pluck(shapeType, 'rect'),\n        width: width,\n        height: height,\n        radius: radius,\n        sides: config.numSides,\n        label: config.displayValue,\n        toolText: config.toolText,\n        id: config.id,\n        datasetIndex,\n        datasetName: dataset.config.JSONData.seriesname,\n        sourceType: 'dataplot',\n        allowDrag: config.allowDrag,\n        numSides: config.numSides,\n        imageNode: config.imageNode,\n        imageAlign: config.imageAlign,\n        imageWidth: config.imageWidth,\n        imageHeight: config.imageHeight,\n        labelAlign: config.labelAlign,\n        color: config.color,\n        alpha: config.alpha,\n        hoverColor: config.rollOverProperties.rollOverAttrs.rawhoverColor,\n        hoverAlpha: config.rollOverProperties.rollOverAttrs.rawhoverAlpha,\n        borderHoverColor: config.rollOverProperties.rollOverAttrs.rawhoverBorderColor,\n        borderHoverAlpha: config.rollOverProperties.rollOverAttrs.rawhoverBorderAlpha,\n        borderHoverThickness: config.rollOverProperties.rollOverAttrs['stroke-width'],\n        hoverHeight: config.rollOverProperties.rollOverAttrs.height,\n        hoverWidth: config.rollOverProperties.rollOverAttrs.width,\n        hoverRadius: config.rollOverProperties.rollOverAttrs.r\n      };\n\n      // Draw the imageNode if available\n      if (imageNode && imageURL) {\n        if (imageHeight > plotHeight) {\n          imageHeight = plotHeight;\n        }\n        if (imageWidth > plotWidth) {\n          imageWidth = plotWidth;\n        }\n        switch (imageAlign) {\n          case POSITION_MIDDLE:\n            imageY = yPos - (imageHeight / 2);\n            break;\n          case POSITION_BOTTOM:\n            imageY = plotHeight > imageHeight ? yPos +\n              (plotHeight / 2) - imageHeight\n              : yPos - imageHeight / 2;\n            break;\n          default:\n            imageY = plotHeight > imageHeight\n              ? yPos - (plotHeight * 0.5)\n              : yPos - imageHeight / 2;\n            break;\n        }\n        config.imageX = xPos - (imageWidth / 2);\n        config.imageY = imageY;\n        config.imageWidth = imageWidth;\n        config.imageHeight = imageHeight;\n\n        imageElementAttr = {\n          src: imageURL,\n          x: config.imageX,\n          y: imageY,\n          width: imageWidth,\n          height: imageHeight,\n          cursor: cursor\n        };\n        if (cloneImage) {\n          cloneImageAttr = {\n            transform: BLANKSTRING,\n            src: imageURL,\n            x: config.imageX,\n            y: imageY,\n            width: imageWidth,\n            height: imageHeight\n          };\n        }\n      }\n      config.pointAttr = pointAttr;\n      nodes[id] = set;\n      config.props = {\n        element: {\n          attr: attr\n        },\n        imageElement: {\n          attr: imageElementAttr\n        },\n        cloneImage: {\n          attr: cloneImageAttr\n        },\n        cloneGraphic: {\n          attr: attr\n        }\n      };\n    }\n  }\n  /**\n   * Allocates position and parses cosmetics during post space management\n   * @param  {Number} index Specific node whose node that is to be updated.\n   */\n  allocatePosition (index) {\n    var dataset = this,\n      data = dataset.components.data,\n      i,\n      len;\n\n    len = data.length;\n    if (index !== UNDEF) {\n      dataset.parsePlotAttributes(index);\n    } else {\n      for (i = 0; i < len; i++) {\n        dataset.parsePlotAttributes(i);\n      }\n    }\n  }\n  /**\n   * Draw the individual nodes of the dataset\n   * @param {number} i The index of the node that is to be drawn\n   */\n  _drawNode (i) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      datasetIndex = dataset.config.datasetIndex,\n      manager = dataset.getLinkedParent(),\n      datasetComponents = dataset.components,\n      animationManager = dataset.getFromEnv('animationManager'),\n      data = datasetComponents.data,\n      set = data[i],\n      config = set.config,\n      setGraphics = set.graphics || (set.graphics = {}),\n      groupId,\n      imageNode = config.imageNode,\n      imageURL = config.imageURL,\n      group = dataset.getContainer('nodesGroup'),\n      rollOverProperties = set.config.rollOverProperties,\n      dragUp = dataset.dragUp,\n      dragMove = dataset.dragMove,\n      dragStart = dataset.dragStart,\n      cursor = config.link ? POINTER : config.allowDrag ? 'move' : BLANKSTRING,\n      type,\n      setElement = setGraphics.graphic,\n      cloneText = setGraphics.cloneText,\n      cloneGraphic = setGraphics.cloneGraphic,\n      cloneImage = setGraphics.cloneImage,\n      imageElement = setGraphics.image,\n      labelElement = setGraphics.label,\n      visible = dataset.getState('visible');\n\n    // only draw the point if y is defined\n    if (config._yPos !== UNDEF && !isNaN(config._yPos)) {\n      setElement = setGraphics.element;\n      type = setElement && setElement.type;\n      if (config.elemType.indexOf(type) === -1 && setElement) {\n        setElement.remove();\n        setElement = setGraphics.element = null;\n        labelElement && labelElement.remove();\n        imageElement && imageElement.remove();\n        delete setGraphics.label;\n        delete setGraphics.image;\n        imageElement = null;\n        labelElement = null;\n      }\n      setElement = animationManager.setAnimation({\n        el: setElement || config.elemType,\n        label: 'node',\n        attr: config.props.element.attr,\n        container: group,\n        component: dataset\n      });\n      // Create a new element\n      if (!setGraphics.graphic) {\n        // If dragging is allowed for that node then only we bind drag functions to the setElement\n        setElement.drag(dragMove, dragStart, dragUp);\n      }\n      setGraphics.element = setElement;\n      setElement.show();\n      manager.animationDone = true;\n\n      groupId = datasetIndex + '_' + i;\n\n      if (cloneGraphic) {\n        if (cloneGraphic.type === setElement.type) {\n          animationManager.setAnimation({\n            el: cloneGraphic,\n            attr: config.props.element.attr,\n            component: dataset\n          }).transform(BLANKSTRING);\n        } else {\n          cloneGraphic.remove();\n          delete set.graphics.cloneGraphic;\n          if (cloneText) {\n            cloneText.remove();\n            delete set.graphics.cloneText;\n          }\n        }\n      }\n\n      // Draw the imageNode if available\n      if (imageNode && imageURL) {\n        imageElement = animationManager.setAnimation({\n          el: setGraphics.image || 'image',\n          attr: visible && config.props.imageElement.attr,\n          doNotRemove: true,\n          container: group,\n          component: dataset,\n          callback: !visible && hideFn\n        });\n        if (!setGraphics.image && imageElement) {\n          // If dragging is allowed for that node then only\n          // we bind drag functions to the imageElement\n          imageElement.drag(dragMove, dragStart, dragUp);\n        }\n        setGraphics.image = imageElement;\n        visible && imageElement.show();\n\n        imageElement.data('drag-options', {\n          dataObj: set,\n          dataset: dataset,\n          datasetIndex: dataset.index,\n          pointIndex: set.config.index,\n          cursor: cursor,\n          link: set.link\n        });\n\n        imageElement.data(GROUPID, groupId);\n        imageElement.data(EVENTARGS, config.eventArgs);\n        imageElement.data('hoverAttr', rollOverProperties && rollOverProperties.rollOverAttrs);\n        imageElement.data('unHoverAttr', config.pointAttr);\n\n        if (cloneImage) {\n          animationManager.setAnimation({\n            el: cloneImage,\n            attr: config.props.cloneImage.attr,\n            component: dataset\n          });\n        }\n      } else if (setGraphics.image) {\n        setGraphics.image = animationManager.setAnimation({\n          el: setGraphics.image,\n          component: dataset\n        });\n      }\n      dataset.drawLabel(i);\n      animationManager.setAnimation({\n        el: setElement,\n        attr: { cursor: cursor },\n        component: dataset\n      });\n\n      setElement.data('drag-options', {\n        dataObj: set,\n        dataset: dataset,\n        datasetIndex: dataset.index,\n        pointIndex: set.config.index,\n        cursor: cursor,\n        chart: chart,\n        link: set.link\n      });\n      setElement.data(GROUPID, groupId);\n      setElement.data(EVENTARGS, config.eventArgs);\n      setElement.data('hoverAttr', rollOverProperties && rollOverProperties.rollOverAttrs);\n      setElement.data('unHoverAttr', config.pointAttr);\n\n      visible ? setElement.show() : setElement.hide();\n    } else {\n      setGraphics.element && (setGraphics.element = animationManager.setAnimation({\n        el: setGraphics.element,\n        component: dataset\n      }));\n      setGraphics.image && (setGraphics.image = animationManager.setAnimation({\n        el: setGraphics.image,\n        component: dataset\n      }));\n      setGraphics.label && (setGraphics.label = animationManager.setAnimation({\n        el: setGraphics.label,\n        component: dataset\n      }));\n    }\n  }\n\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.config.JSONData) {\n      return;\n    }\n    let dataSet = this,\n      prevData = dataSet.components,\n      prevDataLength = prevData.data && prevData.data.length,\n      currDataLength = (datasetJSON.data && datasetJSON.data.length) || 0,\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots/categories\n    // is more than the existing ones.\n    if (dataDiff > 0) {\n      dataSet.removeData(currDataLength, dataDiff);\n    }\n  }\n\n  /**\n   * Function to remove data during update if number of data has reduced than the previous render\n   * @param {number} indexVal The data index from which data has to be removed.\n   * @param {number} stretchVal The index upto which data has to be removed\n   */\n  removeData (indexVal, stretchVal) {\n    var dataSet = this,\n      index = indexVal,\n      stretch = stretchVal,\n      components = dataSet.components,\n      manager = dataSet.getLinkedParent(),\n      dataStore = components.data,\n      removeDataArr = components.removeDataArr || (components.removeDataArr = []);\n\n    stretch = stretch || 1;\n    index = index || 0;\n\n    if (index < 0) {\n      index = 0;\n    }\n    components.removeDataArr = removeDataArr = removeDataArr.concat(dataStore.splice(index, stretch));\n    manager._clearConnectors();\n  }\n\n  /**\n   * Function to remove graphics during update if number of data has reduced than the previous render\n   * @param {Object} dataObj The object corresponding to the data whose graphics has to be removed\n   */\n  _removeDataVisuals (dataObj) {\n    var dataSet = this,\n      ele,\n      graphics,\n      graphicsObj;\n    if (!dataObj) {\n      return;\n    }\n    graphics = dataObj.graphics;\n    for (ele in graphics) {\n      graphicsObj = graphics[ele];\n\n      if (graphicsObj.hide && typeof graphicsObj.hide === 'function') {\n        dataSet.getFromEnv('animationManager').setAnimation({\n          el: graphicsObj,\n          attr: { 'text-bound': [] },\n          component: dataSet\n        });\n        graphicsObj.hide();\n        graphicsObj.transform && graphicsObj.transform(BLANKSTRING);\n      }\n    }\n  }\n\n  /**\n   * Get json data of dragnode dataset\n   * @return {Object} jsonData\n   */\n  getJSONData () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      len = dataStore.length,\n      jsonData = [],\n      dataObj,\n      i;\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (!dataObj.removed) {\n        if (dataObj.config._options) {\n          delete dataObj.config._options.update;\n          delete dataObj.config._options.add;\n          jsonData.push(dataObj.config._options);\n        }\n      }\n    }\n    return jsonData;\n  }\n}\nexport default DragNodeDataset;\n","export default {\n  'initial.dataset.dragNode': function () {\n    return {\n      'node.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'axis'\n        }];\n      }\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport DragNodeDataset from './dragnode';\nimport { pluck, pluckNumber, parseUnsafeString, getDashStyle, DASH_DEF,\n  preDefStr, BLANKSTRING, hashify, dropHash, HASHSTRING, extend2,\n  POSITION_CENTER, visibleStr, PXSTRING, setLineHeight, isIE\n} from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport draggablelabelAnimation from './draggablelabel-animation';\n\nlet PX = preDefStr.PX,\n  EVENTARGS = 'eventArgs',\n  LABELDRAGEND = 'labeldragend',\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')'; // invisible but clickable\n\n/**\n * Dataset class for draggable labels\n */\nclass DragNodeLabels extends DragNodeDataset {\n  /**\n   * Creates an instance of DragNodeLabels.\n   * @memberof DragNodeLabels\n   */\n  constructor () {\n    super();\n    addDep({\n      name: 'draggablelabelAnimation',\n      type: 'animationRule',\n      extension: draggablelabelAnimation\n    });\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragNodeLabels';\n  }\n\n  /**\n    * Function for parsing all the attributes and value given by the user at chart and dataset level.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} if no datasetJSON is found\n    */\n  configure (datasetJSON) {\n    if (datasetJSON) {\n      this.trimData(datasetJSON);\n      this.config.JSONData = datasetJSON.label;\n    } else if (!datasetJSON && !this.config.JSONData) {\n      return false;\n    }\n\n    var dataset = this,\n      // chart = dataset.chart,\n      // jsonData = chart.jsonData,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      conf = dataset.config,\n      setDataArr = dataset.config.JSONData || [],\n      len = setDataArr.length,\n      // dataStoreLen,\n      dataStore = dataset.components.data,\n      i;\n    conf.viewMode = pluckNumber(chartAttr.viewmode, 0);\n    if (!dataStore) {\n      dataStore = dataset.components.data = [];\n    }\n    // dataStoreLen = dataStore.length;\n\n    for (i = 0; i < len; i++) {\n      dataset._setConfigure(i);\n    }\n  }\n\n  /**\n   * Function for parsing all the attributes and value given by the user at set level.\n   * @param {number} index The data index for which the configuration is to be parsed.\n   * @param {Object} updateObj It has the information of the data given by the user at the set level\n   */\n  _setConfigure (index, updateObj) {\n    var dataset = this,\n      setDataArr = dataset.config.JSONData,\n      // chart = dataset.chart,\n      setData = updateObj || setDataArr[index],\n      dataStore = dataset.components.data,\n      dataObj,\n      text,\n      // style = chart.config.style,\n      inCanvasStyle = dataset.getFromEnv('style').inCanvasStyle,\n      inCanFontSize = inCanvasStyle.fontSize,\n      // labelColor,\n      // labelBGColor,\n      config,\n      // labelBDColor,\n      // alpha,\n      labelFontSize;\n    dataObj = dataStore[index];\n    !dataObj && (dataObj = dataStore[index] = {});\n    !dataObj.graphics && (dataObj.graphics = {});\n\n    config = dataObj.config = dataObj.config || (dataObj.config = {});\n    text = parseUnsafeString(pluck(setData.text, setData.label));\n    config._options = setData;\n    config.add = setData.add;\n    if (text) {\n      config.text = text;\n      config.x = setData.x || 0;\n      config.y = setData.y || 0;\n      config.labelFontSize = labelFontSize = pluckNumber(setData.fontsize, inCanFontSize);\n\n      config.labelColor = hashify(pluck(setData.color,\n        inCanvasStyle.color));\n      config.alpha = (pluckNumber(setData.alpha, 100)) / 100;\n      config.allowDrag = pluckNumber(setData.allowdrag, 1);\n      config.padding = pluckNumber(setData.padding, 5);\n\n      // config.labelColor = labelColor = convertColor(pluck(setData.color, inCanvasStyle.color),\n      //   pluckNumber(setData.alpha, 100));\n\n      if (setData.fontsize) {\n        config.labelCSS = {\n          fontSize: labelFontSize + PX\n        };\n      } else {\n        config.labelCSS = {};\n      }\n\n      config.labelBGColor = pluck(setData.bgcolor &&\n        setData.bgcolor.replace(dropHash, HASHSTRING));\n      config.labelBDColor = pluck(setData.bordercolor &&\n        setData.bordercolor.replace(dropHash, HASHSTRING));\n      config.link = setData.link;\n      config.borderThickness = setData.borderthickness;\n      config.dashLen = setData.dashlen;\n      config.dashGap = setData.dashgap;\n      config.dashed = setData.dashed;\n      config.radius = setData.radius;\n    }\n  }\n\n  /**\n   * Get jsondata of dragable label dataset\n   * @return {Object} The JSON data\n   */\n  getJSONData () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      len = dataStore.length,\n      jsonData = [],\n      dataObj,\n      i;\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (!dataObj.removed) {\n        if (dataObj.config._options) {\n          jsonData.push(dataObj.config._options);\n        }\n      }\n    }\n    return jsonData;\n  }\n\n  /**\n   * Function to create container at the dataset level\n   */\n  createContainer () {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      parentContainer = dataset.getLinkedParent().getChildContainer();\n\n    !dataset.getContainer('dragLabelGroup') && dataset.addContainer('dragLabelGroup',\n      animationManager.setAnimation({\n        el: 'group',\n        attr: {\n          name: 'dragLabelGroup'\n        },\n        label: 'group',\n        component: dataset,\n        container: parentContainer.defaultVcanvasGroup\n      }));\n  }\n\n  /**\n   * Parses and sets the attributes during post space management\n   *\n   * @memberof DragNodeLabels\n   */\n  allocatePosition () {\n    this.parsePlotAttributes();\n  }\n\n  /**\n   * Parsing of attributes\n   *\n   * @memberof DragNodeLabels\n   */\n  parsePlotAttributes () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      yAxis = dataset.getFromEnv('yAxis'),\n      xAxis = dataset.getFromEnv('xAxis'),\n      SmartLabel = dataset.getFromEnv('smartLabel'),\n      style = dataset.getFromEnv('dataLabelStyle'),\n      dashLen,\n      dashGap,\n      dashed,\n      x,\n      y,\n      color,\n      text,\n      bgColor,\n      borderColor,\n      padding,\n      config,\n      attr,\n      // alpha,\n      dataObj,\n      allowDrag,\n      fontSize,\n      radius,\n      dim,\n      borderThickness,\n      len = dataStore && dataStore.length,\n      lStyle,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      i,\n      labelCSS;\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (dataObj.removed) {\n        continue;\n      }\n      config = dataObj.config;\n      !dataObj.graphics && (dataObj.graphics = {});\n      config.index = i;\n      x = xAxis.getPixel(config.x);\n      y = yAxis.getPixel(config.y);\n      text = config.text;\n      bgColor = config.labelBGColor;\n      borderColor = config.labelBDColor;\n      padding = config.padding;\n      allowDrag = config.allowDrag;\n      fontSize = config.labelFontSize;\n      color = config.labelColor;\n      radius = config.radius;\n      dashed = config.dashed;\n      borderThickness = config.borderThickness;\n      dashLen = config.dashLen;\n      dashGap = config.dashGap;\n      borderThickness = config.borderThickness;\n      labelCSS = config.labelCSS;\n\n      attr = {\n        x: x,\n        y: y,\n        text: text,\n        align: POSITION_CENTER,\n        fill: color,\n        'text-bound': [(bgColor || BLANKSTRING), (borderColor || BLANKSTRING),\n          pluckNumber(borderThickness, 1),\n          padding,\n          pluckNumber(radius, 0),\n          pluckNumber(dashed, 0)\n            ? getDashStyle(pluckNumber(dashLen, 5),\n              pluckNumber(dashGap, 4))\n            : DASH_DEF\n        ],\n        visibility: visibleStr\n      };\n\n      lStyle = {\n        backgroundColor: bgColor,\n        borderColor: borderColor,\n        borderPadding: padding,\n        fontSize: fontSize + PXSTRING,\n        fontStyle: style.fontStyle,\n        fontWeight: style.fontWeight,\n        borderRadius: 0,\n        borderDash: DASH_DEF,\n        fontFamily: style.fontFamily\n      };\n      setLineHeight(lStyle);\n      SmartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n      SmartLabel.setStyle(lStyle);\n      // Explicitly added for IE8. If lineHeight is added for any text it gets updated to all the spans. So to avoid that line-height\n      // is applied.\n      labelCSS['line-height'] = lStyle.lineHeight;\n      config.eventArgs = {\n        link: config.link,\n        text: text,\n        x: x,\n        y: y,\n        allowdrag: allowDrag,\n        sourceType: 'labelnode'\n      };\n\n      config.props = {\n        element: {\n          attr: attr\n        }\n      };\n\n      config.labelCSSApplied = labelCSS;\n\n      dim = SmartLabel.getOriSize(text);\n      config.width = dim.width;\n      config.height = dim.height;\n      config.xPos = x;\n      config.yPos = y;\n    }\n  }\n  /**\n   * Function ot draw the entire dataset\n   */\n  draw () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      animationManager = dataset.getFromEnv('animationManager'),\n      style = dataset.getFromEnv('dataLabelStyle'),\n      config,\n      dataObj,\n      element,\n      elementCheck,\n      len = dataStore && dataStore.length,\n      removeDataArr = dataset.components.removeDataArr || [],\n      removeDataArrLen = removeDataArr.length,\n      i,\n      dataLabelContainer,\n      labelCSS;\n\n    dataset.createContainer();\n    dataLabelContainer = dataset.getContainer('dragLabelGroup');\n    dataLabelContainer.css({\n      'font-weight': style.fontWeight,\n      'font-style': style.fontStyle,\n      'font-size': style.fontSize,\n      'font-family': style.fontFamily\n    });\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (dataObj.removed) {\n        continue;\n      }\n      config = dataObj.config;\n      elementCheck = dataObj.graphics.element;\n\n      element = animationManager.setAnimation({\n        el: elementCheck || 'text',\n        container: dataLabelContainer,\n        css: config.labelCSS,\n        attr: config.props.element.attr,\n        component: dataset\n      });\n\n      if (!elementCheck) {\n        dataObj.graphics.element = element;\n      } else {\n        // If label css was applied on this element and now label css is not given then remove css\n        if (config.labelCSSApplied && !labelCSS) {\n          element.removeCSS();\n        }\n        element.show()\n          .css(config.labelCSS);\n      }\n\n      element.data('eventArgs', config.eventArgs);\n    }\n    dataset.drawTracker();\n    for (i = 0; i < removeDataArrLen; i++) {\n      dataset._removeDataVisuals(removeDataArr.shift());\n    }\n  }\n\n  /**\n   * Function ot draw the tracker over the lables for showing the tooltips and other mouse interactivity\n   */\n  drawTracker () {\n    var dataset = this,\n      dataStore = dataset.components.data,\n      animationManager = dataset.getFromEnv('animationManager'),\n      chart = dataset.getFromEnv('chart'),\n      manager = dataset.getLinkedParent(),\n      conf = dataset.config,\n      trackerGroup = dataset.getContainer('dragLabelGroup'),\n      len = dataStore && dataStore.length,\n      dataObj,\n      config,\n      padding,\n      elemMouseDownFN = function () { // Long press eve\n        var ele = this,\n          data = ele.data('drag-options'),\n          dataSet = data.dataset,\n          index = data.index,\n          labelObj = dataSet.components.data[index];\n        ele.data('fire_click_event', 1);\n        manager.clearLongPress();\n        manager.triggerLabelUI(ele, labelObj);\n      },\n      elemMouseMoveFN = function () {\n        // Whether to fire the click event ot not\n        var ele = this;\n        if (ele.data('fire_click_event')) {\n          ele.data('fire_click_event', 0);\n          manager.clearLongPress();\n        }\n      },\n      elemMouseUPFN = function (data) {\n        var ele = this,\n          fireClick = ele.data('fire_click_event');\n        manager.clearLongPress();\n        if (fireClick) {\n        /**\n           *\n           * > Applicable to `dragnode` chart only.\n           *\n           * @event FusionCharts#labelClick\n           * @group chart-powercharts:dragnode\n           *\n           * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n           * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n           * @param {number} pageX - x-coordinate of the pointer relative to the page.\n           * @param {number} pageY - y-coordinate of the pointer relative to the page.\n           *\n           * @param {number} x - The x-value of the label node scaled as per the axis of the chart.\n           * @param {number} y - The y-value of the label node scaled as per the axis of the chart.\n           *\n           * @param {string} text - The text value of the label.\n           */\n          chart.plotEventHandler(ele, data, 'LabelClick');\n        }\n      },\n      elemHoverFN = function (data) {\n        var ele = this;\n        /**\n         *\n         * > Applicable to `dragnode` chart only.\n         *\n         * @event FusionCharts#labelRollOver\n         * @group chart-powercharts:dragnode\n         *\n         * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n         * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n         * @param {number} pageX - x-coordinate of the pointer relative to the page.\n         * @param {number} pageY - y-coordinate of the pointer relative to the page.\n         *\n         * @param {number} x - The x-value of the label node scaled as per the axis of the chart.\n         * @param {number} y - The y-value of the label node scaled as per the axis of the chart.\n         *\n         * @param {string} text - The text value of the label.\n         */\n        chart.plotEventHandler(ele, data, 'LabelRollover');\n      },\n      elemOutFN = function (data) {\n        var ele = this;\n        /**\n         *\n         * > Applicable to `dragnode` chart only.\n         *\n         * @event FusionCharts#labelRollOut\n         * @group chart-powercharts:dragnode\n         *\n         * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n         * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n         * @param {number} pageX - x-coordinate of the pointer relative to the page.\n         * @param {number} pageY - y-coordinate of the pointer relative to the page.\n         *\n         * @param {number} x - The x-value of the label node scaled as per the axis of the chart.\n         * @param {number} y - The y-value of the label node scaled as per the axis of the chart.\n         *\n         * @param {string} text - The text value of the label.\n         */\n        chart.plotEventHandler(ele, data, 'LabelRollout');\n      },\n      eventArgs,\n      attr,\n      allowDrag,\n      text,\n      trackerElement,\n      trackerElementCheck,\n      x,\n      y,\n      width,\n      height,\n      dragMove = function (event, data) {\n        var ele = this;\n        dataset._labelDragMove.call(ele, event, data, chart);\n      },\n      dragStart = function (event) {\n        var ele = this;\n        dataset._labelDragStart.call(ele, event, chart);\n      },\n      dragUp = function (event) {\n        var ele = this;\n        dataset._labelDragUp.call(ele, event);\n      },\n      i;\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (dataObj.removed) {\n        continue;\n      }\n      config = dataObj.config;\n      padding = config.padding || 0;\n      width = config.width;\n      height = config.height;\n      x = config.xPos - width / 2;\n      y = config.yPos - height / 2;\n      allowDrag = config.allowDrag;\n      text = config.text;\n      trackerElementCheck = dataObj.graphics.trackerElement;\n      attr = {\n        x: x - padding,\n        y: y - padding,\n        width: width + padding * 2,\n        height: height + padding * 2,\n        cursor: config.allowDrag ? 'move' : BLANKSTRING,\n        fill: TRACKER_FILL,\n        stroke: TRACKER_FILL\n      };\n      eventArgs = {\n        link: config.link,\n        text: text,\n        x: x,\n        y: y,\n        allowdrag: allowDrag,\n        sourceType: 'labelnode'\n      };\n      trackerElement = animationManager.setAnimation({\n        el: trackerElementCheck || 'rect',\n        container: trackerGroup,\n        attr: attr,\n        component: dataset\n      });\n      if (!trackerElementCheck) {\n        dataObj.graphics.trackerElement = trackerElement;\n        trackerElement.on('fc-mousedown', elemMouseDownFN)\n          .on('fc-mousemove', elemMouseMoveFN)\n          .on('fc-mouseup', elemMouseUPFN)\n          .data('viewMode', conf.viewMode)\n          .data(preDefStr.EVENTARGS, eventArgs)\n          .hover(elemHoverFN, elemOutFN);\n        config.allowDrag && trackerElement.drag(dragMove, dragStart, dragUp);\n      }\n      trackerElement.data('drag-options', {\n        index: i,\n        dataset: dataset\n      });\n    }\n  }\n\n  /**\n   * Callback function when the dragging of the label starts\n   */\n  _labelDragStart () {\n    var ele = this,\n      bBox = ele.getBBox(),\n      data = ele.data('drag-options'),\n      dataset = data.dataset,\n      manager = dataset.getLinkedParent(),\n      index = data.index,\n      labelObj = dataset.components.data[index],\n      labelElement = labelObj.graphics.element,\n      dragStart = labelObj.dragStart = labelObj.dragStart || (labelObj.dragStart = {});\n    data.ox = labelElement.attr('x');\n    data.oy = labelElement.attr('y');\n    data.bBox = bBox;\n    dragStart.xPos = labelObj.config.xPos;\n    dragStart.yPos = labelObj.config.yPos;\n    dragStart.bBox = bBox;\n    ele.data('fire_click_event', 1);\n    ele.data('fire_dragend', 0);\n    manager.clearLongPress();\n    manager.triggerLabelUI(ele, labelObj);\n  }\n\n  /**\n   * Callback function when the labels are dragged around\n   * @param {Event} event The actual mouse event\n   * @param {Object} positionData Contains the coordinates of the label elements while they are dragged\n   */\n  _labelDragMove (event, positionData) { // eslint-disable-line no-unused-vars\n    var ele = this,\n      data = ele.data('drag-options'),\n      index = data.index,\n      dataset = data.dataset,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      canvasLeft = chartConfig.canvasLeft,\n      canvasRight = chartConfig.canvasRight,\n      canvasBottom = chartConfig.canvasBottom,\n      canvasTop = chartConfig.canvasTop,\n      manager = dataset.getLinkedParent(),\n      labelObj = dataset.components.data[index],\n      labelElement = labelObj.graphics.element,\n      dragStart = labelObj.dragStart,\n      bBox = dragStart.bBox,\n      dx = positionData[0],\n      dy = positionData[1],\n      startX = dragStart.bBox.x + dx,\n      endX = dragStart.bBox.x2 + dx,\n      startY = dragStart.bBox.y + dy,\n      endY = dragStart.bBox.y2 + dy,\n      yAxis = dataset.getFromEnv('yAxis'),\n      xAxis = dataset.getFromEnv('xAxis'),\n      xPos,\n      yPos;\n    // Bound limits\n    if (startX < canvasLeft) {\n      dx += (canvasLeft - startX);\n    }\n    if (endX > canvasRight) {\n      dx -= (endX - canvasRight);\n    }\n    if (startY < canvasTop) {\n      dy += (canvasTop - startY);\n    }\n    if (endY > canvasBottom) {\n      dy -= (endY - canvasBottom);\n    }\n    dragStart.draged = true;\n    ele.attr({\n      x: bBox.x + dx,\n      y: bBox.y + dy\n    });\n    xPos = data.ox + dx;\n    yPos = data.oy + dy;\n    labelElement.attr({\n      x: data.ox + dx,\n      y: data.oy + dy\n    });\n    labelObj.config.x = xAxis.getValue(xPos);\n    labelObj.config.y = yAxis.getValue(yPos);\n    if (!ele.data('fire_dragend')) {\n    /**\n       *\n       * > Applicable to `dragnode` chart only.\n       *\n       * @event FusionCharts#labelDragStart\n       * @group chart-powercharts:dragnode\n       *\n       * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n       * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n       * @param {number} pageX - x-coordinate of the pointer relative to the page.\n       * @param {number} pageY - y-coordinate of the pointer relative to the page.\n       *\n       * @param {number} x - The x-value of the label node scaled as per the axis of the chart.\n       * @param {number} y - The y-value of the label node scaled as per the axis of the chart.\n       *\n       * @param {string} text - The text value of the label.\n       */\n      chart.plotEventHandler(ele, event, 'LabelDragStart');\n      ele.data('fire_dragend', 1);\n    }\n    if (ele.data('fire_click_event')) {\n      ele.data('fire_click_event', 0);\n      manager.clearLongPress();\n    }\n  }\n\n  /**\n   * Callback function when dragging is stopped over a label\n   * @param {Event} event The actual event object\n   */\n  _labelDragUp (event) {\n    var ele = this,\n      data = ele.data('drag-options'),\n      index = data.index,\n      dataset = data.dataset,\n      chart = dataset.getFromEnv('chart'),\n      xAxis = chart.getChildren('xAxis')[0],\n      yAxis = chart.getChildren('yAxis')[0],\n      manager = dataset.getLinkedParent(),\n      sourceEvent = LABELDRAGEND,\n      labelObj = dataset.components.data[index],\n      dragStart = labelObj.dragStart,\n      eventArgs = ele.data(EVENTARGS);\n\n    eventArgs.x = xAxis.getValue(ele.attr('x'));\n    eventArgs.y = yAxis.getValue(ele.attr('y'));\n\n    dragStart.draged = false;\n    if (ele.data('fire_dragend')) {\n    // eventCord = getMouseCoordinate(chart.linkedItems.container, event);\n    // eventCord.sourceEvent = sourceEvent;\n\n      // Fire the ChartUpdated event\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs), event);\n      chart.fireChartInstanceEvent('chartupdated', eventArgs, event);\n      /**\n       *\n       * > Applicable to `dragnode` chart only.\n       *\n       * @event FusionCharts#labelDragEnd\n       * @group chart-powercharts:dragnode\n       *\n       * @param {number} chartX - x-coordinate of the pointer relative to the chart.\n       * @param {number} chartY - y-coordinate of the pointer relative to the chart.\n       * @param {number} pageX - x-coordinate of the pointer relative to the page.\n       * @param {number} pageY - y-coordinate of the pointer relative to the page.\n       *\n       * @param {number} x - The x-value of the label node scaled as per the axis of the chart.\n       * @param {number} y - The y-value of the label node scaled as per the axis of the chart.\n       *\n       * @param {string} text - The text value of the label.\n       */\n      chart.plotEventHandler(ele, event, sourceEvent);\n    }\n    manager.clearLongPress();\n  }\n\n  /**\n   * Function to remove data during update if number of data has reduced than the previous render\n   * @param {number} index The data index from which data has to be removed.\n   * @param {number} stretch The index upto which data has to be removed\n   */\n  removeData (index, stretch) {\n    var dataset = this,\n      components = dataset.components,\n      dataStore = components.data;\n    components.removeDataArr = dataStore.splice(index, stretch);\n  }\n\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.config.JSONData) {\n      return;\n    }\n    let dataSet = this,\n      prevData = dataSet.config.JSONData,\n      prevDataLength = prevData && prevData.length,\n      currDataLength = (datasetJSON.label && datasetJSON.label.length) || 0,\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots/categories\n    // is more than the existing ones.\n    if (dataDiff > 0) {\n      dataSet.removeData(currDataLength, dataDiff);\n    }\n  }\n}\nexport default DragNodeLabels;\n","export default {\n  'initial.dataset.dragNodeLabels': function () {\n    return {\n      'group.appearing': function () {\n        return [\n          {\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'plot'\n          }\n        ];\n      }\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport DragNodeDataset from './dragnode';\nimport { pluck, pluckNumber, getValidValue, parseUnsafeString, getDashStyle, HUNDREDSTRING, DASH_DEF,\n  preDefStr, BLANK, toRaphaelColor, POINTER, BLANKSTRING, SHAPE_RECT, parseTooltext, getFirstColor } from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport connectorAnimation from './connector-animation';\n\nlet\n  EVENTARGS = preDefStr.EVENTARGS,\n  L = 'L',\n  M = 'M',\n  configStr = preDefStr.configStr,\n  _getlinePath = function (connector) {\n    var config = connector.config,\n      fromPointObj = config.fromPointObj,\n      toPointObj = config.toPointObj,\n      fromX = config.fromX,\n      fromY = config.fromY,\n      toX = config.toX,\n      toY = config.toY,\n      path = [M, fromX, fromY],\n      pointConfig;\n\n    if (config.arrowAtStart) {\n      pointConfig = fromPointObj.config;\n      if (pointConfig.shapeType === SHAPE_RECT) {\n        path = path.concat(DragNodeConnector._drawArrow(fromX, fromY, toX, toY,\n          pointConfig.shapeArg.width, pointConfig.shapeArg.height));\n      } else {\n        path = path.concat(DragNodeConnector._drawArrow(fromX, fromY, toX, toY,\n          pointConfig.shapeArg.radius));\n      }\n    }\n\n    // Calculating path for connector Arrow\n    if (config.arrowAtEnd) {\n      pointConfig = toPointObj.config;\n      if (pointConfig.shapeType === SHAPE_RECT) {\n        path = path.concat(DragNodeConnector._drawArrow(toX, toY, fromX, fromY,\n          pointConfig.shapeArg.width, pointConfig.shapeArg.height));\n      } else {\n        path = path.concat(DragNodeConnector._drawArrow(toX, toY, fromX, fromY,\n          pointConfig.shapeArg.radius));\n      }\n    }\n    path.push(L, toX, toY);\n    return path;\n  },\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {string} groupName                Name of the group to be created.\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (groupName, parentContainer, dataset) {\n    var animationManager = dataset.getFromEnv('animationManager');\n    return animationManager.setAnimation({\n      el: 'group',\n      attr: { name: groupName },\n      container: parentContainer,\n      component: dataset,\n      label: 'group'\n    });\n  };\n\naddDep({\n  name: 'connectorAnimation',\n  type: 'animationRule',\n  extension: connectorAnimation\n});\n/**\n * dataset class of dragcolumn inheriting from column class\n */\nclass DragNodeConnector extends DragNodeDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragNodeConnector';\n  }\n\n  /**\n   * Function to set the index of the dataset from amongst the other datasets\n   */\n  _setDatasetIndex () {\n    var dataset = this,\n      chidrenArr = dataset.getLinkedParent().getChildren('connector');\n    dataset.config.datasetIndex = chidrenArr.indexOf(dataset);\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart and dataset level.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} if no datasetJSON is found\n    */\n  configureAttributes (datasetJSON) {\n    if (datasetJSON) {\n      this.trimData(datasetJSON);\n      this.config.JSONData = datasetJSON;\n    } else if (!datasetJSON && !this.config.JSONData) {\n      return false;\n    }\n\n    var connectors = this,\n      // chartObj = connectors.chart,\n      // rawData = connectors.jsonData,\n      chartAttr = connectors.getFromEnv('chart-attrib'),\n      conf = connectors.config,\n      // dataStore = connectors.components.data || (connectors.components.data = []),\n      // dataStoreLen,\n      connectorsObj = connectors.config.JSONData,\n      connectorsArr = connectorsObj.connector,\n      length = connectorsArr && connectorsArr.length,\n      index,\n      // seriesConnector,\n      HUNDRED = HUNDREDSTRING;\n\n    conf.connectorsTooltext = getValidValue(parseUnsafeString(pluck(\n      connectorsObj.connectortooltext, chartAttr.connectortooltext), false));\n\n    // Extract attributes of this node.\n    conf.stdThickness = pluckNumber(connectorsObj.stdthickness, 1);\n    conf.conColor = getFirstColor(pluck(connectorsObj.color, 'FF5904'));\n    conf.conAlpha = pluck(connectorsObj.alpha, HUNDRED);\n    conf.conDashGap = pluckNumber(connectorsObj.dashgap, 5);\n    conf.conDashLen = pluckNumber(connectorsObj.dashlen, 5);\n    conf.conDashed = Boolean(pluckNumber(connectorsObj.dashed, 0));\n    conf.arrowAtStart = Boolean(pluckNumber(connectorsObj.arrowatstart, 1));\n    conf.arrowAtEnd = Boolean(pluckNumber(connectorsObj.arrowatend, 1));\n    conf.conStrength = pluckNumber(connectorsObj.strength, 1);\n    conf.toolTipSepChar = pluck(chartAttr.tooltipsepchar, ' - ');\n    // seriesConnector = connectors.connector;\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.viewMode = pluckNumber(chartAttr.viewmode, 1);\n\n    // dataStoreLen = dataStore.length;\n\n    // if (dataStoreLen > length) {\n    //     dataStore.splice(length, dataStoreLen - length);\n    // }\n    conf._refreshData = true;\n    connectors._setDatasetIndex('connector'); // set the datasetIndex of the connectors\n    for (index = 0; index < length; index += 1) {\n      this._setConfigure(index, connectorsArr[index]);\n    }\n    conf._refreshData = true;\n  }\n\n  /**\n   * Function for parsing all the attributes and value given by the user at set level.\n   * @param {number} index The data index for which the configuration is to be parsed.\n   * @param {Object} connectorObj It has the information of the data given by the user at the set level\n   */\n  _setConfigure (index, connectorObj) {\n    // connector label.\n    var connector = this,\n      connectorStore = connector.components.data || (connector.components.data = []),\n      connObj = connectorStore[index] || (connectorStore[index] = connectorStore[index] = {}),\n      conf = connector.config,\n      // chartObj = connector.chart,\n      connectorLabel = parseUnsafeString(pluck(connectorObj.label, connectorObj.name)),\n      setConAlpha = pluck(connectorObj.alpha, conf.conAlpha),\n      smartLabel = connector.getFromEnv('smartLabel'),\n      tooltipSepChar = conf.toolTipSepChar,\n      defToolTextMacro = '$fromLabel' + tooltipSepChar + '$toLabel',\n      setConColor = {\n        FCcolor: {\n          color: getFirstColor(pluck(connectorObj.color, conf.conColor)),\n          alpha: setConAlpha\n        }\n      },\n      toolText,\n      config,\n      labelTextObj,\n      connectorsTooltext = conf.connectorsTooltext,\n      connectorToolText = getValidValue(parseUnsafeString(pluck(connectorObj.tooltext,\n        connectorsTooltext), false)),\n      boolCondition = Boolean(pluckNumber(connectorObj.dashed, conf.conDashed));\n\n    smartLabel.setStyle(connector.getFromEnv('dataLabelStyle'));\n    smartLabel.useEllipsesOnOverflow(connector.getFromEnv('chartConfig').useEllipsesWhenOverflow);\n    labelTextObj = smartLabel.getOriSize(connectorLabel);\n    config = connObj.config = connObj.config || (connObj.config = {});\n    !connObj.graphics && (connObj.graphics = {});\n    // create the tooltext\n    if (!conf.showTooltip) {\n      toolText = false;\n    } else { // determine the tooltext then\n      toolText = pluck(connectorToolText, connectorLabel\n        ? '$label' : defToolTextMacro);\n    }\n    config = connObj.config = {\n      _options: connectorObj,\n      id: pluck(connectorObj.id, index).toString(),\n      from: pluck(connectorObj.from, BLANK),\n      to: pluck(connectorObj.to, BLANK),\n      label: connectorLabel,\n      toolText: toolText,\n      customToolText: connectorToolText,\n      color: setConColor,\n      index: index,\n      dashStyle: boolCondition\n        ? getDashStyle(pluckNumber(connectorObj.dashlen, conf.conDashLen),\n          pluckNumber(connectorObj.dashgap, conf.conDashGap)) : DASH_DEF,\n      dashed: connectorObj.dashed,\n      dashlen: connectorObj.dashlen,\n      dashgap: connectorObj.dashgap,\n      arrowAtStart: Boolean(pluckNumber(connectorObj.arrowatstart, conf.arrowAtStart)),\n      arrowAtEnd: Boolean(pluckNumber(connectorObj.arrowatend, conf.arrowAtEnd)),\n      conStrength: pluckNumber(connectorObj.strength, conf.conStrength),\n      link: connectorObj.link,\n      stdThickness: conf.stdThickness,\n      labelWidth: labelTextObj.widht,\n      labelHeight: labelTextObj.height\n    };\n    config.datasetIndex = connector.config.datasetIndex;\n    config.add = connectorObj.add;\n    config.update = connectorObj.update;\n\n    config.dataLabelStyle = connector._configureDataLabelStyle(connectorObj);\n    if (conf._refreshData) {\n      delete connObj.removed;\n    }\n  }\n\n  /**\n   * Function to create container at the dataset level\n   */\n  createContainer () {\n    var dataset = this,\n      parentContainer = dataset.getLinkedParent().getChildContainer();\n\n    !dataset.getContainer('connectorGroup') && dataset.addContainer('connectorGroup',\n      createGroup('connectorGroup', parentContainer.connectorGroup, dataset));\n\n    !dataset.getContainer('connectorDataLabelGroup') && dataset.addContainer('connectorDataLabelGroup',\n      createGroup('connectorDataLabelGroup', parentContainer.connectorGroup, dataset));\n  }\n\n  /**\n   * Function ot draw the entire dataset\n   */\n  draw () {\n    var connectors = this,\n      // chart = connectors.chart,\n      manager = connectors.getLinkedParent(),\n      conf = connectors.config,\n      // chartObj = connectors.chart,\n      // chartComp = chartObj.components,\n      // chartGraphics = chart.graphics,\n      // nodes = manager.nodes,\n      connectorStore = connectors.components.data,\n      connector,\n      fromId,\n      toId,\n      // paper = connectors.getFromEnv('paper'),\n      // jobList = chart.getJobList(),\n      // datasetGroup = chartGraphics.datasetGroup,\n      fromPointObj,\n      toPointObj,\n      style = connectors.getFromEnv('dataLabelStyle'),\n      // graphics,\n      i,\n      length = connectorStore.length,\n      removeDataArr = connectors.components.removeDataArr || [],\n      removeDataArrLen = removeDataArr.length,\n      // connectorsGroup,\n      config;\n\n    // if (!connectorsGroup) {\n    //     connectorsGroup = connectors.graphics.connectorGroup =\n    //         connectors.graphics.connectorGroup || paper.group('connectorGroup').insertBefore(datasetGroup);\n    // }\n\n    connectors.createContainer();\n    // connectorsGroup = connectors.getContainer('connectorGroup');\n\n    conf.cleared = false;\n    connectors.getContainer('connectorDataLabelGroup').css(style);\n    for (i = 0; i < length; i++) {\n      connector = connectorStore[i];\n      config = connector.config;\n      // graphics = connector.graphics || (connector.graphics = {});\n      fromId = config.from;\n      toId = config.to;\n      fromPointObj = manager.getNode(fromId);\n      toPointObj = manager.getNode(toId);\n      if (fromPointObj && toPointObj && config.deleted !== true) {\n        connectors.drawConnector(connector, fromPointObj, toPointObj, i);\n      }\n    }\n    connectors.config.drawn = true;\n\n    for (i = 0; i < removeDataArrLen; i++) {\n      connectors._removeDataVisuals(removeDataArr.shift());\n    }\n  }\n\n  /**\n   * Parsing and calculation of attributes takes place\n   *\n   * @param {any} connector connector\n   * @param {any} fromPointObj from node\n   * @param {any} toPointObj to node\n   * @memberof DragNodeConnector\n   */\n  parsePlotAttributes (connector, fromPointObj, toPointObj) {\n    var dataset = this,\n      fromX,\n      toX,\n      fromY,\n      toY,\n      strokeWidth,\n      NumberFormatter = dataset.getFromEnv('number-formatter'),\n      pathArr,\n      startConnectors,\n      endConnectors,\n      config = connector.config,\n      fromConf,\n      toConf,\n      eventArgs = config.eventArgs || (config.eventArgs = {}),\n      color,\n      id;\n\n    config.fromPointObj = fromPointObj;\n    config.toPointObj = toPointObj;\n    fromConf = fromPointObj.config;\n    toConf = toPointObj.config;\n    config.fromX = fromX = fromConf._xPos;\n    config.fromY = fromY = fromConf._yPos;\n    config.toX = toX = toConf._xPos;\n    config.toY = toY = toConf._yPos;\n    config._labelX = (fromX + toX) / 2;\n    config._labelY = (fromY + toY) / 2;\n    config.strokeWidth = strokeWidth = (config.conStrength * config.stdThickness);\n    color = config.color;\n    config.textBgColor = color && color.FCcolor &&\n        color.FCcolor.color;\n    eventArgs.label = config.label;\n    eventArgs.arrowAtStart = config.arrowAtStart;\n    eventArgs.arrowAtEnd = config.arrowAtEnd;\n    eventArgs.link = config.link;\n    eventArgs.id = config.id;\n    eventArgs.fromNodeId = fromConf.id;\n    eventArgs.toNodeId = toConf.id;\n    config.toolText = parseTooltext(config.toolText, [3, 83,\n      84, 85, 86, 87, 88, 89, 90, 91, 92\n    ], {\n      label: config.label,\n      fromXValue: NumberFormatter.dataLabels(fromPointObj.config.x),\n      fromYValue: NumberFormatter.dataLabels(fromPointObj.config.y),\n      fromXDataValue: fromPointObj.config.x,\n      fromYDataValue: fromPointObj.config.y,\n      fromLabel: pluck(fromPointObj.config.displayValue, fromPointObj.config.id),\n      toXValue: NumberFormatter.dataLabels(toPointObj.config.x),\n      toYValue: NumberFormatter.dataLabels(toPointObj.config.y),\n      toXDataValue: toPointObj.config.x,\n      toYDataValue: toPointObj.config.y,\n      toLabel: pluck(toPointObj.config.displayValue, toPointObj.config.id)\n    });\n\n    fromConf = fromPointObj.config;\n    toConf = toPointObj.config;\n\n    startConnectors = fromConf.startConnectors || (fromConf.startConnectors = {});\n    endConnectors = toConf.endConnectors || (toConf.endConnectors = {});\n\n    id = connector.config.id + '-' + fromConf.id + '-' + toConf.id;\n\n    startConnectors[id] = connector;\n    endConnectors[id] = connector;\n\n    pathArr = _getlinePath(connector);\n    config.props = {\n      element: {\n        attr: {\n          path: pathArr,\n          'stroke-width': strokeWidth,\n          'stroke-dasharray': config.dashStyle,\n          cursor: config.link ? POINTER : BLANKSTRING,\n          stroke: toRaphaelColor(color)\n        }\n      }\n    };\n  }\n  /**\n   * Parse attributes and calculates position during post space management\n   *\n   * @memberof DragNodeConnector\n   */\n  allocatePosition () {\n    var connectors = this,\n      i,\n      connector,\n      config,\n      fromId,\n      toId,\n      fromPointObj,\n      toPointObj,\n      manager = connectors.getLinkedParent(),\n      connectorStore = connectors.components.data,\n      len = connectorStore.length;\n\n    for (i = 0; i < len; i++) {\n      connector = connectorStore[i];\n      config = connector.config;\n      // graphics = connector.graphics || (connector.graphics = {});\n      fromId = config.from;\n      toId = config.to;\n      fromPointObj = manager.getNode(fromId);\n      toPointObj = manager.getNode(toId);\n      if (fromPointObj && toPointObj && config.deleted !== true) {\n        connectors.parsePlotAttributes(connector, fromPointObj, toPointObj, i);\n      }\n    }\n  }\n  /**\n   * Function to draw individual connectors\n   * @param {Object} connector Object having information about the connector that is to be drawn\n   * @param {Object} fromPointObj Object having the information about the node from which the connector is to be drawn\n   * @param {Object} toPointObj Object having the information about the node to which the connector is to be drawn\n   */\n  drawConnector (connector) {\n    var dataset = this,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      animationManager = dataset.getFromEnv('animationManager'),\n      graphics = connector.graphics,\n      element,\n      elementCheck,\n      connectorsGroup = dataset.getContainer('connectorGroup'),\n      config = connector.config,\n      tooltext = config.toolText,\n      eventArgs = config.eventArgs || (config.eventArgs = {}),\n      conf = dataset.config,\n      pool = dataset.components.pool || {};\n\n    if (connector.removed) {\n      return;\n    }\n    element = elementCheck = graphics.graphic;\n    if (!graphics.graphic) {\n      if (pool.graphic && pool.graphic.path && pool.graphic.path.length) {\n        elementCheck = graphics.graphic = pool.graphic.path.shift();\n      }\n    }\n    // draw the line\n    element = animationManager.setAnimation({\n      el: elementCheck || 'path',\n      container: connectorsGroup,\n      attr: config.props.element.attr,\n      label: 'path',\n      component: dataset\n    });\n    if (!elementCheck) {\n      graphics.graphic = element;\n      element.on('fc-mousedown', dataset.mouseDown)\n        .on('fc-mousemove', dataset.mousemove)\n        .on('fc-mouseup', dataset.mouseup)\n        .hover(dataset.hoverIn, dataset.hoverOut);\n    }\n    element.show()\n      .data(EVENTARGS, eventArgs)\n      .data('viewMode', conf.viewMode)\n      .data(configStr, config)\n      .data('dataset', dataset);\n    conf.showTooltip\n      ? toolTipController.enableToolTip(element, tooltext) : toolTipController.disableToolTip(element);\n    // If this is not the first render then label is drawn instantly otherwise it is drawn in\n    // another thread for performance optimization\n    dataset.drawLabel(connector);\n  }\n\n  /**\n   * Function to draw individual labels of the connector\n   * @param {Object} connector Object having information about the connector whose label is to be drawn\n   */\n  drawLabel (connector) {\n    var dataset = this,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      // groupManager = dataset.groupManager,\n      // nodes = groupManager.nodes,\n      conf = dataset.config,\n      animationManager = dataset.getFromEnv('animationManager'),\n      // chart = dataset.chart,\n      // animationObj = chart.get('config', 'animationObj'),\n      connectorsGroup = dataset.getContainer('connectorDataLabelGroup'),\n      // dummyAnimObj = animationObj.animObj,\n      // dummyAnimElem = animationObj.dummyObj,\n      // animType = animationObj.animType,\n      // animationDuration = animationObj.duration,\n      config,\n      label,\n      tooltext,\n      labelAttrs,\n      style = dataset.getFromEnv('dataLabelStyle'),\n      labelStyle,\n      labelElement,\n      labelElementCheck,\n      graphics,\n      connectorObj,\n      i,\n      labelX,\n      labelY,\n      textBgColor,\n      dataStore = dataset.components.data,\n      pool = dataset.components.pool || {},\n      len = dataStore.length,\n      // fromPointObj,\n      // toPointObj,\n      // fromId,\n      // toId,\n      drawIndividualLabel = function (labelConnector) {\n        config = labelConnector.config;\n        tooltext = config.toolText;\n        graphics = labelConnector.graphics;\n        label = config.label;\n        labelX = config._labelX;\n        labelY = config._labelY;\n\n        labelStyle = config.dataLabelStyle || style;\n        // fromId = config.from;\n        // toId = config.to;\n        // fromPointObj = nodes[fromId];\n        // toPointObj = nodes[toId];\n        textBgColor = config.textBgColor;\n\n        if (label) {\n          labelElementCheck = graphics.text = graphics.text || (pool.element && pool.element.text &&\n              pool.element.text.shift());\n          labelAttrs = {\n            text: label,\n            fill: labelStyle.color,\n            direction: BLANKSTRING,\n            cursor: config.link ? POINTER : BLANKSTRING,\n            'text-bound': [pluck(labelStyle.backgroundColor, textBgColor),\n              pluck(labelStyle.borderColor, textBgColor), 1, '2'\n            ],\n            x: labelX,\n            y: labelY\n          };\n\n          // Drawing the connector Label\n          labelElement = animationManager.setAnimation({\n            el: labelElementCheck || 'text',\n            attr: labelAttrs,\n            container: connectorsGroup,\n            label: 'text',\n            component: dataset\n          });\n          labelElement.show();\n          labelElement.outlineText(conf.showTextOutline, labelAttrs.fill);\n          if (!labelElementCheck) {\n            graphics.text = labelElement;\n            labelElement.on('fc-mousedown', dataset.mouseDown)\n              .on('fc-mousemove', dataset.mousemove)\n              .on('fc-mouseup', dataset.mouseup)\n              .hover(dataset.hoverIn, dataset.hoverOut);\n          }\n          labelElement.data(EVENTARGS, config.eventArgs)\n            .data('viewMode', conf.viewMode)\n            .data(configStr, config)\n            .data('dataset', dataset);\n          conf.showTooltip\n            ? toolTipController.enableToolTip(labelElement, tooltext) : toolTipController.disableToolTip(labelElement);\n        } else {\n          graphics.text && graphics.text.hide();\n        }\n      };\n\n    if (connector) {\n      drawIndividualLabel(connector);\n    } else {\n      for (i = 0; i < len; i++) {\n        connectorObj = dataStore[i];\n        drawIndividualLabel(connectorObj);\n      }\n    }\n  }\n\n  /**\n   * Callback function when mouse is pressed down over the connector\n   */\n  mouseDown () {\n    var ele = this,\n      // config = ele.data(configStr),\n      dataset = ele.data('dataset'),\n      manager = dataset.getLinkedParent();\n      // chart = dataset.chart,\n      // conf = dataset.config,\n      // options = config || {};\n\n    manager.clearLongPress();\n\n    // Whether to fire the click event ot not\n    ele.data('fire_click_event', 1);\n    manager.triggerConnectorUI(ele);\n  }\n\n  /**\n   * Callback function when mouse is moved over a connector\n   */\n  mousemove () {\n    var ele = this,\n      dataset = ele.data('dataset'),\n      manager = dataset.getLinkedParent();\n    // Whether to fire the click event ot not\n    ele.data('fire_click_event', 0);\n    manager.clearLongPress();\n  }\n\n  /**\n   * Callback function mouse press is released from over a connector\n   */\n  mouseup () {\n    var ele = this,\n      dataset = ele.data('dataset'),\n      manager = dataset.getLinkedParent();\n\n    manager.clearLongPress();\n    // plotEventHandler.call(ele, chart, data, 'ConnectorClick');\n  }\n\n  hoverIn (e) {\n    var ele = this,\n      dataset = ele.data('dataset'),\n      chart = dataset.getFromEnv('chart');\n    chart.plotEventHandler(ele, e, 'ConnectorRollover');\n  }\n\n  hoverOut (e) {\n    var ele = this,\n      dataset = ele.data('dataset'),\n      chart = dataset.getFromEnv('chart');\n    chart.plotEventHandler(ele, e, 'ConnectorRollout');\n  }\n\n  /**\n   * Function to draw arrow heads for the connectors\n   * @param {number} X1 The required dimenions for drawing the arrow head\n   * @param {number} Y1 The required dimenions for drawing the arrow head\n   * @param {number} X2 The required dimenions for drawing the arrow head\n   * @param {number} Y2 The required dimenions for drawing the arrow head\n   * @param {number} R The required dimenions for drawing the arrow head\n   * @param {number} H The required dimenions for drawing the arrow head\n   * @return {Array} contains the path coordinates\n   */\n  static _drawArrow (X1, Y1, X2, Y2, R, H) {\n    var tanganent = (Y1 - Y2) / (X1 - X2),\n      angle = Math.atan(tanganent),\n      PX, PY, RHlf, HHlf,\n      arr = [];\n\n    // make all angle as positive\n    if (angle < 0) {\n      angle = (2 * Math.PI) + angle;\n    }\n    if (Y2 > Y1) { // PI >angle > 0\n      if ((X2 >= X1 && angle > Math.PI) || (X2 < X1 && angle > Math.PI)) {\n        angle = angle - Math.PI;\n      }\n    } else { /// PI <= angle < 360 || angle == 0\n      // angle may not be 360 in that case it will be 0 as atan work\n      if ((X2 >= X1 && angle < Math.PI && angle !== 0) || (X2 < X1 && angle < Math.PI)) {\n        angle = angle + Math.PI;\n      }\n    }\n\n    if (typeof H === 'undefined') {\n      // arrow start point\n      PX = X1 + (R * Math.cos(angle));\n      PY = Y1 + (R * Math.sin(angle));\n    } else { // rectangle\n      RHlf = Math.abs(R) / 2;\n      HHlf = Math.abs(H) / 2;\n\n      // asume it will intersect a vertical side\n      PX = X1 + (RHlf = X1 < X2 ? RHlf : -RHlf);\n      PY = Y1 + (RHlf * Math.tan(angle));\n      // validate PY\n      // if not validate then it will cross the horizontal axis\n      if (Math.abs(Y1 - PY) > Math.abs(HHlf)) {\n        PY = Y1 + (HHlf = Y1 < Y2 ? HHlf : -HHlf);\n        PX = X1 + (HHlf / Math.tan(angle));\n      }\n    }\n\n    arr.push(L, PX, PY,\n      // arrowone half\n      PX + (10 * Math.cos(angle + 0.79)),\n      PY + (10 * Math.sin(angle + 0.79)),\n      // arrowone half\n      M, PX + (10 * Math.cos(angle - 0.79)),\n      PY + (10 * Math.sin(angle - 0.79)),\n      // return to th eedege\n      L, PX, PY);\n\n    return arr;\n  }\n\n  /**\n   * Function to remove data during update if number of data has reduced than the previous render\n   * @param {number} indexVal The data index from which data has to be removed.\n   * @param {number} stretch The index upto which data has to be removed\n   */\n  removeData (indexVal, stretch) {\n    var dataset = this,\n      index = indexVal,\n      components = dataset.components,\n      dataStore = components.data;\n\n    if (index < 0) {\n      index = 0;\n    }\n    components.removeDataArr = dataStore.splice(index, stretch);\n  }\n\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.config.JSONData) {\n      return;\n    }\n    let dataSet = this,\n      prevData = dataSet.components,\n      prevDataLength = prevData.data && prevData.data.length,\n      currDataLength = (datasetJSON.connector && datasetJSON.connector.length) || 0,\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots/categories\n    // is more than the existing ones.\n    if (dataDiff > 0) {\n      dataSet.removeData(currDataLength, dataDiff);\n    }\n  }\n}\nexport default DragNodeConnector;\n","export default {\n  'initial.dataset.dragNodeConnector': function () {\n    return {\n      'path.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'plot'\n        }];\n      },\n      'text.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0,\n            'text-bound': 'none'\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\n\nimport DragNodeLabels from '../../dragnode/dragablelabels';\nimport { toRaphaelColor, preDefStr, COMMASTRING, getFirstValue, pluck, BLANKSTRING,\n  fcEach, hashify, HASHSTRING, pluckNumber, componentDispose, extend2, componentFactory, parseColor, getValidColor }\n  from '@fusioncharts/core/src/lib';\n\nlet CLEAR_TIME_1000 = 1000,\n  shapesInfo = {\n    circle: 'circ',\n    rectangle: 'rect',\n    polygon: 'poly'\n  },\n  UNDEF,\n  INPUT = preDefStr.INPUT,\n  BLANKSPACE = preDefStr.BLANKSPACE,\n  BLANK = preDefStr.BLANK,\n  COLOR_FFFFFF = 'ffffff',\n  PX = preDefStr.PX,\n  COLOR_000000 = '000000',\n  OPTIONSTR = '<option>',\n  OPTIONCLOSESTR = '</option>',\n  LABEL = preDefStr.LABEL,\n  DATASET = preDefStr.DATASET,\n  COMMA = preDefStr.COMMA,\n  DATASETSTATE = 'appearing',\n  ONE_PX_BORDER = '1px solid #cccccc',\n  DISABLED = 'disabled',\n  LABEL_ADDED = 'labeladded',\n  OPTION_VALUE = '<option value=\"',\n  CLOSE_TAG = '\">',\n  OPTION_STR = '</option>',\n  NODE_ADDED = 'nodeAdded',\n  NODE_UPDATED = 'nodeupdated',\n  NODE_DELETED = 'nodedeleted',\n  CONNECTOR_ADDED = 'connectoradded',\n  CONNECTOR_UPDATED = 'connectorupdated',\n  CONNECTOR_DELETED = 'connectordeleted',\n  TRANSPARENT = 'transparent',\n  DIV_STR = 'div',\n  COLOR_EFEFEF = 'efefef',\n  SUBMIT_STR = 'Submit',\n  DELETE_STR = 'Delete',\n  CANCEL_STR = 'Cancel',\n  UPDATE_STR = 'update',\n  APPEARING_STR = 'appearing',\n  LABEL_DELETED = 'labeldeleted',\n  removeElems = function (graphics) {\n    for (var i in graphics) {\n      graphics[i].remove();\n    }\n  },\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  // configures eventArgs with values of dataObj based on shapeType of node\n  makeShapeSpecificModifications = function (eventArgs, dataObj) {\n    switch (eventArgs.shape) {\n      case preDefStr.CIRCLE:\n        eventArgs.radius = dataObj.radius;\n        break;\n      case preDefStr.POLYGON:\n        eventArgs.radius = dataObj.radius;\n        eventArgs.sides = dataObj.numsides;\n        break;\n      default:\n        eventArgs.width = dataObj.width;\n        eventArgs.height = dataObj.height;\n        break;\n    }\n  },\n  _showNodeUpdateUI = (function () {\n    // eslint-disable-next-line good-practices/no-function-dependency\n    var manageShapeFields = function () {\n        var ui = this.getGraphicalElement('cacheUpdateUI'),\n          ele = ui.fields.shape, // eslint-disable-line good-practices/no-single-usage-variable\n          shapeFields = ['rectWidth', 'rectHeight', 'circPolyRadius', 'polySides'],\n          i = shapeFields.length,\n          key;\n\n        while (i--) {\n          key = shapeFields[i];\n          if (/rect|poly|circ/ig.test(key)) {\n            ui.labels[key].hide();\n            ui.fields[key].hide();\n          }\n          if (new RegExp(pluck(ele.val(), 'rect'), 'ig').test(key)) {\n            ui.labels[key].show();\n            ui.fields[key].show();\n          }\n        }\n      },\n      // eslint-disable-next-line good-practices/no-function-dependency\n      showGivenColor = function () {\n        var fields = this.getGraphicalElement('cacheUpdateUI').fields,\n          color = getValidColor(fields.color.val());\n\n        color && fields.colorOut.css({\n          background: parseColor(color)\n        });\n      },\n      // eslint-disable-next-line good-practices/no-function-dependency\n      manageImageFields = function (animate) {\n        var manager = this,\n          ui = manager.getGraphicalElement('cacheUpdateUI'),\n          animationManager = manager.getFromEnv('animationManager'),\n          chartHeight = manager.getFromEnv('chartConfig').height, // eslint-disable-line good-practices/no-single-usage-variable\n          padding = 5,\n          isChecked = ui.fields.image.val(),\n          imgKey = ['imgWidth', 'imgHeight', 'imgAlign', 'imgUrl'],\n          dialogHeight,\n          i,\n          key;\n\n        dialogHeight = isChecked ? 250 : 215;\n\n        if (animate) {\n          ui.ok.hide();\n          ui.cancel.hide();\n          ui.removeItem.hide();\n          ui.error.hide();\n        }\n        i = imgKey.length;\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (!isChecked && i--) {\n          key = imgKey[i];\n          ui.labels[key].hide();\n          ui.fields[key].hide();\n        }\n        animate && animationManager.setAnimationState('uichange');\n        animationManager.setAnimation({\n          el: ui.dialog,\n          state: 'updating',\n          attr: {\n            top: (chartHeight - dialogHeight) / 2,\n            height: dialogHeight\n          },\n          component: manager,\n          label: 'uidialog',\n          callback: function () {\n            i = imgKey.length;\n            // eslint-disable-next-line no-unmodified-loop-condition\n            while (i-- && isChecked) {\n              key = imgKey[i];\n              ui.labels[key].show();\n              ui.fields[key].show();\n            }\n            ui.ok.attr({\n              y: dialogHeight - 23 - padding\n            }).show();\n            ui.cancel.attr({\n              y: dialogHeight - 23 - padding\n            }).show();\n            ui.removeItem.attr({\n              y: dialogHeight - 23 - padding\n            });\n            ui.error.attr({\n              y: dialogHeight - 23 - padding + 4\n            }).show();\n            if (ui.edit) {\n              ui.removeItem.show();\n            } else {\n              ui.removeItem.hide();\n            }\n          }\n        });\n      };\n\n    return function (config, edit) {\n      var manager = this,\n        // graphics = manager.graphics,\n        ui = manager.getGraphicalElement('cacheUpdateUI'),\n        // nodes = manager.nodes,\n        // conf = chart.config,\n        paper = manager.getFromEnv('paper'),\n        borderStyle = ONE_PX_BORDER,\n        inputStyle = {\n          width: 80 + PX,\n          border: borderStyle,\n          fontSize: 10 + PX,\n          lineHeight: 15 + PX,\n          padding: 2 + PX,\n          fontFamily: (manager.getFromEnv('style').inCanvasStyle || {}).fontFamily\n        },\n        noUIfound,\n        labelStyle = { // eslint-disable-line good-practices/no-single-usage-variable\n          textAlign: 'right'\n        },\n        fields = ui && ui.fields,\n        labels = ui && ui.labels,\n        dialog,\n        // node,\n        // index,\n        onSubmit = function (event) {\n          event.stopPropagation();\n          var uiFields = ui && ui.fields, // eslint-disable-line good-practices/no-single-usage-variable\n            uiEdit = ui.edit,\n            idFound,\n            id,\n            submitObj;\n\n          if (fields) {\n            submitObj = {\n              x: getFirstValue(fields.x.val(), manager.getFromEnv('xAxis').getLimit().min),\n              y: getFirstValue(fields.y.val(), manager.getFromEnv('yAxis').getLimit().min),\n              id: id = fields.id.val(),\n              datasetId: fields.dataset.val(),\n              name: fields.label.val(),\n              tooltext: fields.tooltip.val(),\n              color: fields.color.val(),\n              alpha: fields.alpha.val(),\n              labelalign: fields.labelalign.val(),\n              allowdrag: fields.draggable.val(),\n              imagenode: fields.image.val(),\n              imagewidth: fields.imgWidth.val(),\n              imageheight: fields.imgHeight.val(),\n              imagealign: fields.imgAlign.val(),\n              imageurl: fields.imgUrl.val(),\n              link: fields.link.val()\n            };\n\n            // Shape specific configurations.\n            switch (uiFields.shape.val()) {\n              case 'circ':\n                submitObj.shape = preDefStr.CIRCLE;\n                submitObj.radius = fields.circPolyRadius.val();\n                break;\n              case 'poly':\n                submitObj.shape = preDefStr.POLYGON;\n                submitObj.radius = fields.circPolyRadius.val();\n                submitObj.numsides = fields.polySides.val();\n                break;\n              default:\n                submitObj.shape = preDefStr.RECTANGLE;\n                submitObj.width = fields.rectWidth.val();\n                submitObj.height = fields.rectHeight.val();\n                break;\n            }\n\n            // Check if node already exists\n            if (manager.getNode(submitObj.id)) {\n              idFound = true;\n            }\n\n            // If node already exists then we do not add a node and show an error\n            if (!idFound || uiEdit !== UNDEF) {\n              // node = nodes[submitObj.id] || {};\n              id = submitObj.datasetId;\n              // Dont add nodes when dataset id is not given\n              if (id !== BLANKSTRING || uiEdit) {\n                id = Number(id);\n                // index = node.config && node.config.index;\n                uiEdit ? manager.updateNode(submitObj) : manager.addNode(submitObj);\n                ui.hide();\n                ui.visible = false;\n              }\n              return;\n            }\n            ui.error.attr({\n              text: 'ID already exist.'\n            });\n            fields.label.focus();\n          }\n          // Remobe disabled from attr\n          ui.enableFields();\n        },\n        onCancel = function (event) {\n          event.stopPropagation();\n          // Hide the UI\n          ui.hide();\n          ui.visible = false;\n          // Remobe disabled from attr\n          ui.enableFields();\n          // Hide error msg\n          ui.error.attr({\n            text: BLANK\n          });\n          ui.visible = false;\n        },\n        onDelete = function (event) {\n          event.stopPropagation();\n          manager.deleteNode(ui.fields.id.val());\n          ui.hide();\n          ui.visible = false;\n        };\n\n      manager.getFromEnv('animationManager').setAnimationState('uichange');\n      if (!ui) {\n        noUIfound = true;\n      }\n      ui = manager.addGraphicalElement('cacheUpdateUI', manager.createHtmlDialog(\n        350, 215, onSubmit, onCancel, onDelete, ui));\n\n      if (noUIfound) {\n        // add fields.\n        dialog = ui.dialog;\n        labels = ui.labels = {};\n        fields = ui.fields = {};\n      }\n      ui.config = config;\n      ui.edit = edit;\n      if (!ui.error) {\n        ui.error = paper.html('span', {\n          color: 'ff0000',\n          x: 30,\n          y: 228\n        }, UNDEF, dialog);\n      }\n      if (!ui.enableFields) {\n        ui.enableFields = function () {\n          var key;\n          for (key in config) {\n            if (config[key] && config[key].disabled && fields[key]) {\n              fields[key].element.removeAttribute('disabled');\n            }\n          }\n        };\n      }\n      if (!ui.clearFields) {\n        ui.clearFields = function () {\n          var key;\n          for (key in ui.fields) {\n            if (!fields[key].element.disabled) {\n              fields[key].element.value = BLANKSTRING;\n            }\n          }\n        };\n      }\n\n      fcEach(this.nodeUpdateUIDefinition, function (def) {\n        var field,\n          key = def.key,\n          attrs = {},\n          confObj = config[key] || {},\n          innerHTML,\n          value;\n\n        !labels[key] && (labels[key] = paper.html(LABEL, {\n          x: def.x,\n          y: def.y,\n          width: def.labelWidth || 45,\n          text: def.text\n        }, labelStyle, dialog));\n\n        // No need to proceed of this label has no input box\n        // associated with itself.\n        if (def.noInput) {\n          return;\n        }\n\n        field = fields[key];\n\n        if (!field) {\n          inputStyle.border = def.type === 'checkbox' ? BLANK : borderStyle;\n          field = fields[key] =\n              paper.html(def.inputType || 'input', {\n                x: (def.labelWidth && (def.labelWidth + 5)) || 50,\n                y: -2 + (def.inputPaddingTop || 0),\n                width: def.inputWidth || 50,\n                name: key || BLANKSTRING\n              }, inputStyle);\n\n          if (def.inputType !== 'select') {\n            field.attr({\n              type: def.type || 'text'\n            }).on('keyup', ui.handleKeyPress);\n          }\n          field.add(labels[key]);\n        }\n\n        if (defined(innerHTML = getFirstValue(confObj.innerHTML, def.innerHTML))) { // eslint-disable-line good-practices/no-single-usage-variable\n          attrs.innerHTML = innerHTML;\n        }\n        if (confObj.disabled) {\n          attrs.disabled = DISABLED;\n        } else {\n          field.element && (field.element.disabled = false);\n        }\n        field.attr(attrs);\n        if (defined(value = getFirstValue(confObj.value, def.value))) { // eslint-disable-line good-practices/no-single-usage-variable\n          field.val(value);\n        }\n        // eslint-disable-next-line good-practices/no-function-dependency\n        key === 'shape' && field.on('change', function () {\n          manageShapeFields.call(manager);\n        });\n        // eslint-disable-next-line good-practices/no-function-dependency\n        key === 'image' && field.on('fc-click', function () {\n          manageImageFields.call(manager, true);\n        });\n        // eslint-disable-next-line good-practices/no-function-dependency\n        key === 'color' && field.on('keyup', function () {\n          showGivenColor.call(manager);\n        });\n      });\n\n      showGivenColor.call(this);\n      manageImageFields.call(this);\n      manageShapeFields.call(this);\n      ui.visible = true;\n      ui.fields[edit ? LABEL : 'id'].focus();\n    };\n  })();\n\n/**\n * Class for dragnodes's group\n */\nclass DragNodeGroup extends ComponentInterface {\n  /**\n   * constructor function this class\n   */\n  constructor () {\n    super();\n    var manager = this;\n    manager.setState('visible', true);\n    manager.connectorUpdateUIDefinition = [{\n      key: 'fromid',\n      text: 'Connect From',\n      inputType: 'select',\n      x: 10,\n      y: 15,\n      labelWidth: 80,\n      inputWidth: 100\n    }, {\n      key: 'toid',\n      text: 'Connect To',\n      inputType: 'select',\n      x: 10,\n      y: 40,\n      labelWidth: 80,\n      inputWidth: 100\n    }, {\n      key: 'arratstart',\n      text: 'Arrow At Start',\n      x: 200,\n      y: 15,\n      type: 'checkbox',\n      inputPaddingTop: 3,\n      labelWidth: 80,\n      inputWidth: 15\n    }, {\n      key: 'arratend',\n      text: 'Arrow At End',\n      x: 200,\n      y: 40,\n      type: 'checkbox',\n      inputPaddingTop: 3,\n      labelWidth: 80,\n      inputWidth: 15\n    }, {\n      key: LABEL,\n      text: 'Label',\n      x: 10,\n      y: 75,\n      labelWidth: 40,\n      inputWidth: 120\n    }, {\n      key: 'id',\n      text: 'Node ID',\n      x: 190,\n      y: 75,\n      inputWidth: 55\n    }, {\n      key: 'color',\n      text: 'Color',\n      x: 10,\n      y: 100,\n      labelWidth: 40,\n      inputWidth: 35\n    }, {\n      key: 'alpha',\n      text: 'Alpha',\n      x: 110,\n      y: 100,\n      inputWidth: 25,\n      labelWidth: 35\n    }, {\n      key: 'strength',\n      text: 'Strength',\n      x: 190,\n      y: 100,\n      inputWidth: 55,\n      val: '0.1'\n    }, {\n      key: 'url',\n      text: 'Link',\n      x: 10,\n      y: 125,\n      labelWidth: 40,\n      inputWidth: 120\n    }, {\n      key: 'tooltext',\n      text: 'Tooltip',\n      x: 190,\n      y: 125,\n      labelWidth: 40,\n      inputWidth: 60\n    }, {\n      key: 'dashed',\n      text: 'Dashed',\n      x: 10,\n      y: 150,\n      type: 'checkbox',\n      inputPaddingTop: 3,\n      inputWidth: 15,\n      labelWidth: 40\n    }, {\n      key: 'dashgap',\n      text: 'Dash Gap',\n      x: 85,\n      y: 150,\n      labelWidth: 60,\n      inputWidth: 25\n    }, {\n      key: 'dashlen',\n      text: 'Dash Length',\n      x: 190,\n      y: 150,\n      labelWidth: 70,\n      inputWidth: 30\n    }];\n    manager.nodeUpdateUIDefinition = [{\n      key: 'id',\n      text: 'Id',\n      inputWidth: 60,\n      x: 10,\n      y: 15\n    }, {\n      key: DATASET,\n      text: DATASET,\n      inputType: 'select',\n      inputWidth: 110,\n      innerHTML: UNDEF,\n      x: 170,\n      y: 15\n    }, {\n      key: 'x',\n      text: 'Value',\n      x: 10,\n      y: 40,\n      inputWidth: 21\n    }, {\n      key: 'y',\n      text: COMMA,\n      x: 88,\n      y: 40,\n      inputWidth: 21,\n      labelWidth: 5\n    }, {\n      text: '(x, y)',\n      x: 125,\n      y: 40,\n      labelWidth: 33,\n      noInput: true\n    }, {\n      key: 'tooltip',\n      text: 'Tooltip',\n      inputWidth: 105,\n      x: 170,\n      y: 40\n    }, {\n      key: LABEL,\n      text: 'Label',\n      inputWidth: 92,\n      x: 10,\n      y: 65\n    }, {\n      key: 'labelalign',\n      text: 'Align',\n      labelWidth: 70,\n      inputWidth: 110,\n      inputType: 'select',\n      innerHTML: '<option></option><option value=\"top\">Top</option><option value=\"middle\">Middle</option>' +\n          '<option value=\"bottom\">Bottom</option>',\n      x: 145,\n      y: 63\n    }, {\n      key: 'color',\n      text: 'Color',\n      x: 10,\n      y: 90,\n      inputWidth: 60\n    }, {\n      key: 'colorOut',\n      innerHTML: '&nbsp;',\n      x: 85,\n      y: 90,\n      inputWidth: 15,\n      inputType: 'span'\n    }, {\n      key: 'alpha',\n      text: 'Alpha',\n      x: 170,\n      y: 90,\n      inputWidth: 20\n    }, {\n      key: 'draggable',\n      text: 'Allow Drag',\n      value: true,\n      inputWidth: 20,\n      x: 250,\n      y: 90,\n      labelWidth: 58,\n      inputPaddingTop: 3,\n      type: 'checkbox'\n    }, {\n      key: 'shape',\n      text: 'Shape',\n      inputType: 'select',\n      inputWidth: 97,\n      innerHTML: '<option value=\"rect\">Rectangle</option><option value=\"circ\">Circle</option><option ' +\n          'value=\"poly\">Polygon</option>',\n      x: 10,\n      y: 115\n    }, {\n      key: 'rectHeight',\n      text: 'Height',\n      x: 170,\n      y: 115,\n      inputWidth: 20\n    }, {\n      key: 'rectWidth',\n      text: 'Width',\n      x: 255,\n      y: 115,\n      inputWidth: 20\n    }, {\n      key: 'circPolyRadius',\n      text: 'Radius',\n      x: 170,\n      y: 115,\n      inputWidth: 20\n    }, {\n      key: 'polySides',\n      text: 'Sides',\n      x: 255,\n      y: 115,\n      inputWidth: 20\n    }, {\n      key: 'link',\n      text: 'Link',\n      x: 10,\n      y: 140,\n      inputWidth: 92\n    }, {\n      key: 'image',\n      text: 'Image',\n      type: 'checkbox',\n      inputPaddingTop: 4,\n      inputWidth: 20,\n      x: 10,\n      y: 170\n    }, {\n      key: 'imgUrl',\n      text: 'URL',\n      inputWidth: 105,\n      x: 170,\n      y: 170\n    }, {\n      key: 'imgWidth',\n      text: 'Width',\n      inputWidth: 20,\n      x: 10,\n      y: 195\n    }, {\n      key: 'imgHeight',\n      text: 'Height',\n      inputWidth: 20,\n      x: 82,\n      y: 195\n    }, {\n      key: 'imgAlign',\n      text: 'Align',\n      inputType: 'select',\n      inputWidth: 75,\n      innerHTML: '<option value=\"top\">Top</option><option value=\"middle\">Middle</option><option ' +\n          'value=\"bottom\">Bottom</option>',\n      x: 170,\n      y: 195\n    }];\n    manager.labelUpdateUIDefinition = [{\n      key: LABEL,\n      text: 'Label*',\n      x: 10,\n      y: 15,\n      inputWidth: 235\n    }, {\n      key: 'size',\n      text: 'Size',\n      x: 10,\n      y: 40\n    }, {\n      key: 'padding',\n      text: 'Padding',\n      x: 10,\n      y: 65\n    }, {\n      key: 'x',\n      text: 'Position',\n      x: 120,\n      y: 65,\n      labelWidth: 70,\n      inputWidth: 25\n    }, {\n      key: 'y',\n      text: COMMA,\n      x: 225,\n      y: 65,\n      labelWidth: 10,\n      inputWidth: 25\n    }, {\n      key: 'xy',\n      text: '(x, y)',\n      x: 260,\n      y: 65,\n      noInput: true\n    }, {\n      key: 'allowdrag',\n      text: 'Allow Drag',\n      x: 120,\n      y: 40,\n      inputType: 'checkbox',\n      inputPaddingTop: 3,\n      inputWidth: 15,\n      labelWidth: 70,\n      val: 1\n    }, {\n      key: 'color',\n      text: 'Color',\n      x: 10,\n      y: 90\n    }, {\n      key: 'alpha',\n      text: 'Alpha',\n      x: 145,\n      y: 90,\n      inputWidth: 30,\n      val: preDefStr.HUNDREDSTRING\n    }, {\n      key: 'bordercolor',\n      text: 'Border Color',\n      x: 10,\n      y: 125,\n      labelWidth: 100\n    }, {\n      key: 'bgcolor',\n      text: 'Background Color',\n      x: 10,\n      y: 150,\n      labelWidth: 100\n    }];\n  }\n\n  /**\n   * Function used to differentiate between update and resize\n   */\n  configure () {\n    this.setState('configured', true);\n  }\n\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'group';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragNodeGroup';\n  }\n  /**\n   * Funtion to create the UI box for adding new labels\n   * @param {Object} options Any predefined options to be added to the UI box\n   */\n  showLabelUpdateUI (options = {}) {\n    var manager = this,\n      paper = manager.getFromEnv('paper'),\n      // conf = manager.getFromEnv('chartConfig'),\n      ui = manager.getGraphicalElement('cacheLabelUpdateUI'),\n      inputStyle = { // eslint-disable-line good-practices/no-single-usage-variable\n        border: '1px solid #cccccc',\n        fontSize: 10 + PX,\n        lineHeight: 15 + PX,\n        fontFamily: (manager.getFromEnv('style').inCanvasStyle || {}).fontFamily,\n        padding: 2 + PX\n      },\n      labelStyle = { // eslint-disable-line good-practices/no-single-usage-variable\n        textAlign: 'right'\n      },\n      noUIfound,\n      fields = ui && ui.fields,\n      labels = ui && ui.labels,\n      field,\n      value,\n      dialog;\n\n    manager.getFromEnv('animationManager').setAnimationState('uichange');\n    if (!ui) {\n      noUIfound = true;\n    }\n    ui = manager.addGraphicalElement('cacheLabelUpdateUI', manager.createHtmlDialog(315, 205,\n      function () {\n        var uiFields = ui && ui.fields,\n          submitObj;\n        if (uiFields) {\n          // Prepare obbject for submission.\n          submitObj = {\n            text: uiFields.label.val(),\n            x: uiFields.x.val(),\n            y: uiFields.y.val(),\n            color: uiFields.color.val(),\n            alpha: uiFields.alpha.val(),\n            bgcolor: uiFields.bgcolor.val(),\n            bordercolor: uiFields.bordercolor.val(),\n            fontsize: uiFields.size.val(),\n            allowdrag: uiFields.allowdrag.val(),\n            padding: uiFields.padding.val()\n          };\n\n          if (submitObj.text) {\n            manager.addLabel && manager.addLabel(submitObj);\n            ui.hide();\n          } else {\n            ui.error.attr({\n              text: 'Label cannot be blank.'\n            });\n            fields.label.focus();\n          }\n        }\n      },\n      function () {\n        ui.error.attr({\n          text: BLANKSTRING\n        });\n        ui.hide();\n      }, UNDEF, ui));\n\n    if (noUIfound) {\n      dialog = ui.dialog;\n      labels = ui.labels = {};\n      fields = ui.fields = {};\n    }\n\n    fcEach(manager.labelUpdateUIDefinition, function (def) {\n      var key = def.key;\n\n      if (!labels[key]) {\n        labels[key] = paper.html(LABEL, {\n          x: def.x,\n          y: def.y,\n          width: def.labelWidth || 45,\n          text: def.text\n        }, labelStyle, dialog);\n      }\n\n      // No need to proceed of this label has no input box\n      // associated with itself.\n      if (def.noInput) {\n        return;\n      }\n\n      if (!(field = fields[key])) { // eslint-disable-line good-practices/no-single-usage-variable\n        field = fields[key] = paper.html(INPUT, {\n          y: -2 + (def.inputPaddingTop || 0),\n          x: (def.labelWidth && (def.labelWidth + 5)) || 50,\n          width: def.inputWidth || 50,\n          type: def.inputType || 'text',\n          name: key || BLANKSTRING\n        }, inputStyle, labels[key]).on('keyup', ui.handleKeyPress);\n      }\n\n      if (defined(value = getFirstValue(options[key], def.val))) { // eslint-disable-line good-practices/no-single-usage-variable\n        field.val(value);\n      }\n    });\n\n    if (!ui.error) {\n      ui.error = paper.html('span', {\n        color: 'ff0000',\n        x: 10,\n        y: 180\n      }, UNDEF, dialog);\n    }\n\n    // Focus on label textbox\n    ui.fields.label.focus();\n  }\n\n  /**\n   * Function to restore all the data of dragnode to its initial visual\n   */\n  restoreData () {\n    var manager = this,\n      // manager = chart.components['datasetGroup_' + chart.defaultDatasetType],\n      datasets = manager.getChildren('dataset'),\n      chart = manager.getFromEnv('chart'),\n      showlegend = pluckNumber(chart.config.showlegend, 0), // eslint-disable-line good-practices/no-single-usage-variable\n      connectors = manager.getChildren('connector'),\n      jsonData = chart.getFromEnv('dataSource'),\n      i,\n      dataset,\n      dataStore,\n      dataObj,\n      graphics,\n      labelObj,\n      len,\n      labelSet = manager.getChildren('labels'),\n      removeElements = function (datastore) {\n        var j,\n          ele;\n        for (j = 0; j < (datastore && datastore.length); j++) {\n          dataObj = datastore[j];\n          delete dataObj.removed;\n          if (dataObj.config.add) {\n            graphics = datastore[j].graphics;\n            for (ele in graphics) {\n              graphics[ele].remove();\n            }\n            datastore.splice(j, 1);\n            j--;\n          }\n        }\n      },\n      restoreDatasets = function (k, dataSets, json) {\n        dataset = dataSets[k];\n        dataStore = dataset.components.data; // eslint-disable-line good-practices/no-single-usage-variable\n        removeElements(dataStore);\n        dataset.drawn = false;\n        dataset.configure(json[k]);\n      };\n    for (i = 0, len = datasets && datasets.length; i < len; i++) {\n      restoreDatasets(i, datasets, jsonData.dataset);\n    }\n    for (i = 0, len = connectors && connectors.length; i < len; i++) {\n      restoreDatasets(i, connectors, jsonData.connectors);\n    }\n    if (labelSet && labelSet.length) {\n      labelObj = labelSet[0];\n      dataStore = labelObj.components.data;\n      dataStore && removeElements(dataStore);\n      labelObj.configure(jsonData.labels);\n    }\n\n    chart.fireChartInstanceEvent('dataRestored');\n    manager.asyncDraw();\n    showlegend && manager.getFromEnv('legend').asyncDraw();\n  }\n\n  /**\n   * Function to add a draggable-label via UI\n   * @param {Object} labelObj Conatins the information about the label that is to be added\n   */\n  addLabel (labelObj) {\n    var manager = this,\n      labelDS = manager.getChildren('labels'),\n      sourceEvent = LABEL_ADDED,\n      dataStore,\n      eventArgs,\n      chart = manager.getFromEnv('chart'),\n      len;\n    labelObj.add = true;\n\n    // Creating an instance of the label class if not already present\n    if (labelDS && labelDS[0]) {\n      labelDS = labelDS[0];\n    } else {\n      componentFactory(manager, DragNodeLabels, 'labels', 1, [{}]);\n      labelDS = manager.getChildren('labels')[0];\n    }\n    dataStore = labelDS.components.data || (labelDS.components.data = []);\n    len = dataStore.length;\n    labelDS._setConfigure(len, labelObj);\n    // }\n\n    eventArgs = {\n      text: labelObj.text,\n      x: labelObj.x,\n      y: labelObj.y,\n      allowdrag: labelObj.allowdrag,\n      sourceType: 'labelnode',\n      link: labelObj.link\n    };\n    chart.fireChartInstanceEvent('chartupdated', extend2({\n      sourceEvent: sourceEvent\n    }, eventArgs));\n    chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n    labelDS.asyncDraw();\n  }\n\n  /**\n   * Funtion to create the options for the dialog box used for adding new nodes\n   */\n  showNodeAddUI () {\n    var manager = this,\n      // chart = manager.chart,\n      datasets = manager.getChildren('dataset'),\n      datasetDropDownStr = BLANKSTRING, // eslint-disable-line good-practices/no-single-usage-variable\n      conf,\n      dataset,\n      type,\n      i;\n    for (i = 0; i < datasets.length; i++) {\n      dataset = datasets[i] || {};\n      conf = dataset.config;\n      type = dataset.getName();\n      if (type === 'dragNode') {\n        datasetDropDownStr += OPTION_VALUE + dataset.config.datasetIndex + CLOSE_TAG + (((conf.name !== BLANK && conf.name !==\n          UNDEF) && conf.name + COMMASTRING + BLANKSPACE) || BLANK) + dataset.config.datasetIndex + OPTION_STR;\n      }\n    }\n    manager.showNodeUpdateUI({\n      dataset: {\n        innerHTML: datasetDropDownStr\n      }\n    });\n  }\n\n  /**\n   * Funtion to create the options for the dialog box used for adding new connectors\n   */\n  showConnectorAddUI () {\n    var manager = this,\n      // chart = manager.chart,\n      nodes = manager.getNode(),\n      nodeStr = BLANKSTRING,\n      id,\n      i,\n      config,\n      node;\n    for (i in nodes) {\n      node = nodes[i];\n      config = node.config;\n      id = config.id;\n      nodeStr += OPTION_VALUE + id + CLOSE_TAG + id + OPTION_STR;\n    }\n    manager.showConnectorUpdateUI({\n      fromid: {\n        innerHTML: nodeStr\n      },\n      toid: {\n        innerHTML: nodeStr\n      }\n    });\n  }\n\n  /**\n   * Function to create the UI box for adding/updating the connectors\n   * @param {Object} config Has the information about the concerned connector\n   * @param {boolean} edit Flag for determining if a new connector has to be added or existing connector has to be\n   * updated\n   */\n  showConnectorUpdateUI (config, edit) {\n    var manager = this,\n      renderer = manager.getFromEnv('paper'),\n      uiName = `cacheConnectorUpdateUI${edit ? 'edit' : 'new'}`,\n      ui = manager.getGraphicalElement(uiName),\n      inputStyle = { // eslint-disable-line good-practices/no-single-usage-variable\n        border: '1px solid #cccccc',\n        fontSize: 10 + PX,\n        lineHeight: 15 + PX,\n        fontFamily: (manager.getFromEnv('style').inCanvasStyle || {}).fontFamily,\n        padding: 2 + PX\n      },\n      noUIfound,\n      labelStyle = { // eslint-disable-line good-practices/no-single-usage-variable\n        textAlign: 'right'\n      },\n      fields = ui && ui.fields,\n      labels = ui && ui.labels,\n      innerHTML,\n      field,\n      value,\n      onDelete = function () {\n        var uiFields = ui && ui.fields;\n\n        manager.deleteConnector({\n          from: uiFields.fromid.val(),\n          to: uiFields.toid.val(),\n          id: uiFields.id.val()\n        });\n        ui.hide();\n      },\n      dialog;\n\n    manager.getFromEnv('animationManager').setAnimationState('uichange');\n    if (!ui) {\n      noUIfound = true;\n    }\n\n    ui = manager.addGraphicalElement(uiName, manager.createHtmlDialog(\n      315, 215,\n      function () {\n        var uiFields = ui && ui.fields,\n          submitObj;\n        if (uiFields) {\n          submitObj = {\n            from: uiFields.fromid.val(),\n            to: uiFields.toid.val(),\n            id: uiFields.id.val(),\n            label: uiFields.label.val(),\n            color: uiFields.color.val(),\n            alpha: uiFields.alpha.val(),\n            link: uiFields.url.val(),\n            tooltext: uiFields.tooltext.val(),\n            strength: uiFields.strength.val(),\n            arrowatstart: uiFields.arratstart.val(),\n            arrowatend: uiFields.arratend.val(),\n            dashed: uiFields.dashed.val(),\n            dashlen: uiFields.dashlen.val(),\n            dashgap: uiFields.dashgap.val()\n          };\n\n          // Validate\n          if (submitObj.from) {\n            if (submitObj.to) {\n              if (submitObj.from !== submitObj.to) {\n                edit ? manager.editConnector(submitObj)\n                  : manager.addConnector(submitObj);\n                ui.enableFields();\n                ui.hide();\n                ui.clearFields();\n              } else {\n                ui.error.attr({\n                  text: 'Connector cannot start and end at the same node!'\n                });\n                fields.fromid.focus();\n              }\n            } else {\n              ui.error.attr({\n                text: 'Please select a valid connector end.'\n              });\n              fields.toid.focus();\n            }\n          } else {\n            ui.error.attr({\n              text: 'Please select a valid connector start.'\n            });\n            fields.fromid.focus();\n          }\n        }\n      },\n      // Cancel function\n      function () {\n        ui.error.attr({\n          text: BLANKSTRING\n        });\n        ui.enableFields();\n        ui.hide();\n      },\n      // Delete function\n      onDelete, ui));\n\n    if (noUIfound) {\n      dialog = ui.dialog;\n      labels = ui.labels = {};\n      fields = ui.fields = {};\n    }\n\n    ui.config = config;\n    if (!ui.enableFields) {\n      ui.enableFields = function () {\n        var key;\n        for (key in config) {\n          if (config[key] && config[key].disabled && fields[key]) {\n            fields[key].element.removeAttribute('disabled');\n          }\n        }\n      };\n    }\n    if (!ui.clearFields) {\n      ui.clearFields = function () {\n        var key,\n          uiFields = ui.fields;\n        for (key in uiFields) {\n          if (!uiFields[key].element.disabled) {\n            uiFields[key].element.value = BLANKSTRING;\n          }\n        }\n      };\n    }\n\n    fcEach(manager.connectorUpdateUIDefinition, function (def) {\n      var key = def.key,\n        attr = config[key] || {};\n\n      if (!labels[key]) {\n        labels[key] = renderer.html(LABEL, {\n          x: def.x,\n          y: def.y,\n          width: def.labelWidth || 45,\n          text: def.text\n        }, labelStyle, dialog);\n      }\n\n      // No need to proceed of this label has no input box\n      // associated with itself.\n      if (def.noInput) {\n        return;\n      }\n\n      if (!(field = fields[key])) {\n        field = fields[key] = renderer.html(def.inputType || INPUT, {\n          y: -2 + (def.inputPaddingTop || 0),\n          x: (def.labelWidth && (def.labelWidth + 5)) || 50,\n          width: def.inputWidth || 50,\n          name: key || BLANKSTRING\n        }, inputStyle);\n\n        if (def.inputType !== 'select') {\n          field.attr({\n            type: def.type || 'text'\n          }).on('keyup', ui.handleKeyPress);\n        }\n        field.add(labels[key]);\n      }\n\n      if ((innerHTML = pluck(attr.innerHTML, def.innerHTML))) { // eslint-disable-line good-practices/no-single-usage-variable\n        field.attr({\n          innerHTML: innerHTML\n        });\n      }\n      if ((value = pluck(attr.val, def.val)) !== UNDEF) { // eslint-disable-line good-practices/no-single-usage-variable\n        field.val(value);\n      }\n      if (attr.disabled) {\n        field.attr({\n          disabled: 'disabled'\n        });\n      } else {\n        field.element && (field.element.disabled = false);\n      }\n    });\n\n    // dash checking and ui modification\n    // call to set default fro the first time\n    ui.checkDash = function () {\n      var showHideFn = (fields.dashed && fields.dashed.val()) ? 'show' : 'hide';\n      labels.dashgap && labels.dashgap[showHideFn]();\n      fields.dashgap && fields.dashgap[showHideFn]();\n      labels.dashlen && labels.dashlen[showHideFn]();\n      fields.dashlen && fields.dashlen[showHideFn]();\n    };\n    ui.checkDash();\n    fields.dashed.on('fc-click', ui.checkDash);\n\n    if (!ui.error) {\n      ui.error = renderer.html('span', {\n        color: 'ff0000',\n        x: 10,\n        y: 170\n      }, UNDEF, dialog);\n    }\n\n    ui.removeItem[edit ? 'show' : 'hide']();\n  }\n\n  /**\n   * Function to create the UI box for adding/updating the nodes\n   * @return {Function} The actual function for updating/adding the nodes\n   */\n  showNodeUpdateUI () {\n    return _showNodeUpdateUI.apply(this, arguments);\n  }\n\n  /**\n   * Function for adding new nodes\n   * @param {Object} dataObj Contains information about the node that is to be added\n   */\n  addNode (dataObj) {\n    var manager = this,\n      datasets = manager.getChildren('dataset'),\n      len = datasets.length, // eslint-disable-line good-practices/no-single-usage-variable\n      dataset,\n      index,\n      idFound,\n      id,\n      i,\n      eventArgs,\n      sourceEvent = NODE_ADDED,\n      chart = manager.getFromEnv('chart'),\n      dataStore;\n\n    for (i = 0; i < len; i++) {\n      dataset = datasets[i] || {};\n      id = dataset.config.datasetIndex;\n      if (id !== UNDEF) {\n        id = id.toString();\n      }\n      if (id === dataObj.datasetId) {\n        idFound = true;\n        break;\n      }\n    }\n    if (dataset && idFound) {\n      dataStore = dataset.components.data;\n      dataObj.add = true;\n      // This is the index of the new data\n      index = dataStore.length;\n      eventArgs = {\n        index: index, // to be deprecated\n        dataIndex: index,\n        link: dataObj.link,\n        y: dataObj.y,\n        x: dataObj.x,\n        shape: dataObj.shape,\n        label: dataObj.name,\n        toolText: dataObj.tooltext,\n        id: dataObj.id,\n        datasetIndex: dataset.config.datasetIndex,\n        datasetName: dataset.config.seriesname,\n        sourceType: 'dataplot'\n      };\n\n      // configure the eventArgs based on the type of shape\n      makeShapeSpecificModifications(eventArgs, dataObj);\n\n      dataset._setConfigure(index, dataObj);\n      dataset.parsePlotAttributes(index);\n      dataset._drawNode(index);\n      dataset.setState('dirty', true);\n      // manager._redrawDragNode(eventArgs, sourceEvent);\n      /**\n       * In `DragNode` charts, data points are represented as nodes whose\n       * properties like location(x,y), shape, dimensions and color can be added dynamically to\n       * the chart. Chart can contain any number of datasets and an index number is assigned to\n       * each dataset based upon order of dataset creation. This event is raised when a node is\n       * added by clicking on the menu button located at the left side bottom of the chart by\n       * default but can the menu button location can be changed.\n       *\n       * This event is only applicable to DragNode chart.\n       *\n       * @event FusionCharts#nodeAdded\n       * @group chart-powercharts:dragnode\n       *\n       * @param {number} datasetIndex - Index of the dataset to which the newly added\n       * node belongs to.\n       * @param {string} datasetName - Name of the dataset to which the node was added. Name of\n       * the dataset can be defined by the attribute `seriesName` for `dataset` tag in the chart\n       * data.\n       * @param {number} dataIndex - Index of the newly added node.\n       *\n       * @param {number} height - Height of the shape represented by the newly added node.\n       * @param {string} id - ID of the newly added node which can be set using `id` attribute\n       * for `set` tag.\n       *\n       * @param {string} label - Text displayed inside the shape of the newly added node.\n       * @param {string} link - URL associated with the newly added node.\n       * @param {number} radius - Radius of the circumcirle for the shape of the\n       * newly added node.\n       * @param {string} shape - Shape of the newly added node.\n       * @param {number} sides - Depending on the shape of the node it is the\n       * number of sides of the polygon. If it is a circle it will have 0 sides.\n       * @param {string} toolText - Text that is displayed over the shape of the\n       * newly added node.\n       * @param {number} width - Width of the shape of the newly added node.\n       * @param {number} x - X Co-ordinate of the newly added node in reference with\n       * the canvas / axis.\n       * @param {number} y - Y Co-ordinate of the newly added node in reference with\n       * the canvas / axis.\n       */\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs));\n      chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n      dataset._setupKdTree();\n    }\n  }\n\n  /**\n   * Function for updating existing nodes\n   * @param {Object} updateObj Contains information about the node that is to be updated\n   */\n  updateNode (updateObj) {\n    var groupManager = this,\n      datasets = groupManager.getChildren('dataset'),\n      len = datasets.length, // eslint-disable-line good-practices/no-single-usage-variable\n      dataLen,\n      idFound,\n      dataset,\n      dataObj,\n      i,\n      dataStore,\n      eventArgs,\n      sourceEvent = NODE_UPDATED,\n      chart = groupManager.getFromEnv('chart'),\n      j;\n    updateObj.update = true;\n    for (i = 0; i < len; i++) {\n      dataset = datasets[i];\n      dataStore = dataset.components.data || [];\n      dataLen = dataStore.length;\n      for (j = 0; j < dataLen; j++) {\n        dataObj = dataStore[j];\n        if (dataObj.config.id === updateObj.id) {\n          idFound = true;\n          break;\n        }\n      }\n    }\n\n    if (dataset && idFound) {\n      eventArgs = {\n        index: j, // to be deprecated\n        dataIndex: j,\n        link: updateObj.link,\n        y: updateObj.y,\n        x: updateObj.x,\n        shape: updateObj.shape,\n        label: updateObj.name,\n        toolText: updateObj.tooltext,\n        id: updateObj.id,\n        datasetIndex: dataset.config.datasetIndex,\n        datasetName: dataset.config.seriesname,\n        sourceType: 'dataplot'\n      };\n\n      // configure the eventArgs based on the type of shape\n      makeShapeSpecificModifications(eventArgs, updateObj);\n\n      dataset._setConfigure(j, updateObj);\n      dataset.parsePlotAttributes(j);\n      dataset._drawNode(j);\n      dataset.setState('dirty', true);\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs));\n      chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n      dataset._setupKdTree();\n    }\n  }\n\n  /**\n   * Function for deleting a node\n   * @param {Stirng} id The id of the node that is to be deleted\n   */\n  deleteNode (id) {\n    var manager = this,\n      node = manager.getNode(id),\n      // node = nodes[id],\n      dataset,\n      dataStore,\n      startConnectors,\n      endConnectors,\n      i,\n      graphics,\n      connector,\n      dataObj,\n      prop,\n      len,\n      eventArgs,\n      config,\n      idFound,\n      sourceEvent = NODE_DELETED,\n      chart = manager.getFromEnv('chart');\n    if (node) {\n      dataset = node.dataset;\n      dataStore = dataset.components.data;\n      startConnectors = node.config.startConnectors;\n      endConnectors = node.config.endConnectors;\n      len = dataStore.length;\n      for (i = 0; i < len; i++) {\n        dataObj = dataStore[i];\n        if (dataObj.config.id === id) {\n          idFound = true;\n          break;\n        }\n      }\n\n      if (idFound === true) {\n        graphics = dataObj.graphics;\n        removeElems(graphics);\n        for (prop in startConnectors) {\n          connector = startConnectors[prop] || {};\n          graphics = connector.graphics;\n          removeElems(graphics);\n          delete connector.graphics;\n          connector.removed = true;\n        }\n        for (prop in endConnectors) {\n          connector = endConnectors[prop] || {};\n          graphics = connector.graphics;\n          removeElems(graphics);\n          delete connector.graphics;\n          connector.removed = true;\n        }\n        // delete nodes[id];\n        dataObj.removed = true;\n        config = dataObj.config || {};\n        eventArgs = {\n          index: i,\n          dataIndex: i,\n          link: config.link,\n          y: config.y,\n          x: config.x,\n          shape: config.shape,\n          label: config.displayValue,\n          toolText: config.toolText,\n          id: config.id,\n          datasetIndex: dataset.config.datasetIndex,\n          datasetName: dataset.config.seriesname,\n          sourceType: 'dataplot'\n        };\n\n        // configure the eventArgs based on the type of shape\n        makeShapeSpecificModifications(eventArgs, {\n          width: config.width,\n          height: config.height,\n          radius: config.radius,\n          numsides: config.numSides\n        });\n\n        chart.fireChartInstanceEvent('chartupdated', extend2({\n          sourceEvent: sourceEvent\n        }, eventArgs));\n        chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n        dataset._setupKdTree();\n      }\n    }\n  }\n\n  /**\n   * Function for adding new connectors\n   * @param {Object} connectorObj Contains information about the connector that is to be added\n   */\n  addConnector (connectorObj) {\n    var manager = this,\n      // groupManager = chart.components['datasetGroup_' + chart.defaultDatasetType],\n      connectors = manager.getChildren('connector')[0],\n      // connectors = connectorSets[0].connectors,\n      sourceEvent = CONNECTOR_ADDED,\n      eventArgs,\n      chart = manager.getFromEnv('chart');\n    connectorObj.add = true;\n    connectors._setConfigure(connectors.components.data.length, connectorObj);\n    eventArgs = {\n      arrowAtEnd: Boolean(connectorObj.arrowatend),\n      arrowAtStart: Boolean(connectorObj.arrowatstart),\n      fromNodeId: connectorObj.from,\n      id: connectorObj.id,\n      label: connectorObj.label,\n      link: connectorObj.connectorLink,\n      sourceType: 'connector',\n      toNodeId: connectorObj.to\n    };\n    chart.fireChartInstanceEvent('chartupdated', extend2({\n      sourceEvent: sourceEvent\n    }, eventArgs));\n    chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n    connectors.asyncDraw();\n  }\n\n  /**\n   * Function for updating existing connectors\n   * @param {Object} connectorObj Contains information about the connector that is to be updated\n   */\n  editConnector (connectorObj) {\n    var manager = this,\n      connectorSets = manager.getChildren('connector'),\n      i,\n      conLen,\n      data,\n      dataObj,\n      fromId,\n      toId,\n      j,\n      idFound,\n      connectors,\n      config,\n      eventArgs,\n      chart = manager.getFromEnv('chart'),\n      sourceEvent = CONNECTOR_UPDATED,\n      len = connectorSets.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i++) {\n      connectors = connectorSets[i];\n      data = (connectors && connectors.components.data) || [];\n      conLen = data.length;\n      for (j = 0; j < conLen; j++) {\n        dataObj = data[j];\n        config = dataObj.config;\n        fromId = config.from;\n        toId = config.to;\n        if (fromId === connectorObj.from && toId === connectorObj.to) {\n          idFound = true;\n          break;\n        }\n      }\n    }\n    connectorObj.update = true;\n    if (idFound) {\n      connectors._setConfigure(j, connectorObj);\n      eventArgs = {\n        arrowAtEnd: Boolean(connectorObj.arrowatend),\n        arrowAtStart: Boolean(connectorObj.arrowatstart),\n        fromNodeId: connectorObj.from,\n        id: connectorObj.id,\n        label: connectorObj.label,\n        link: connectorObj.link,\n        sourceType: 'connector',\n        toNodeId: connectorObj.to\n      };\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs));\n      chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n      connectors.asyncDraw();\n    }\n  }\n\n  /**\n   * Function for deleting a connector\n   * @param {Object} config Contains information about the connector that is to be deleted\n   */\n  deleteConnector (config) {\n    var manager = this,\n      connectorSets = manager.getChildren('connector'),\n      i,\n      j,\n      dataObj,\n      dataStore,\n      dataLen,\n      connFound = false, // eslint-disable-line good-practices/no-single-usage-variable\n      connectors,\n      eventArgs,\n      connConfig,\n      len = connectorSets.length, // eslint-disable-line good-practices/no-single-usage-variable\n      sourceEvent = CONNECTOR_DELETED,\n      chart = manager.getFromEnv('chart');\n\n    for (i = 0; i < len; i++) {\n      connectors = connectorSets[i];\n      dataStore = connectors.components.data;\n      dataLen = dataStore.length;\n      for (j = 0; j < dataLen; j++) {\n        dataObj = dataStore[j];\n        if (dataObj.config.from === config.from && dataObj.config.to === config.to) {\n          connFound = true;\n          break;\n        }\n      }\n    }\n    if (connFound) {\n      connConfig = dataObj.config || {};\n      eventArgs = {\n        arrowAtEnd: connConfig.arrowAtEnd,\n        arrowAtStart: connConfig.arrowAtStart,\n        fromNodeId: connConfig.from,\n        id: connConfig.id,\n        label: connConfig.label,\n        link: connConfig.connectorLink,\n        sourceType: 'connector',\n        toNodeId: connConfig.to\n      };\n      removeElems(dataObj.graphics);\n      delete dataObj.graphics;\n      // Mark data object as removed\n      dataObj.removed = true;\n      chart.fireChartInstanceEvent('chartupdated', extend2({\n        sourceEvent: sourceEvent\n      }, eventArgs));\n      chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n    }\n  }\n\n  /**\n   * Generic function for creating a html UI box\n   * @param {number} dialogWidth The width of the dialog box\n   * @param {number} dialogHeight The height of the dialog box\n   * @param {Function} onsubmit Callback functions\n   * @param {Function} oncancel Callback functions\n   * @param {Function} onremove Callback functions\n   * @param {Object} cacheUI If the dialog box or its components are created then they are sent via this object so that\n   * they are not re-created.\n   * @return {HTMLElement} The final created html UI box\n   */\n  createHtmlDialog (dialogWidth, dialogHeight, onsubmit, oncancel, onremove, cacheUI) {\n    var manager = this,\n      // paper = manager.getFromEnv('paper'),\n      conf = manager.getFromEnv('chartConfig'),\n      inCanvasStyle = manager.getFromEnv('style').inCanvasStyle || {},\n      chartWidth = Number(conf.width),\n      chartHeight = Number(conf.height),\n      animationManager = manager.getFromEnv('animationManager'),\n      padding = 5,\n      uiok,\n      uicancel,\n      uiremove,\n      dialogAttrs,\n      okAttrs,\n      cancelAttrs,\n      removeAttrs,\n      buttonStyle = {\n        color: hashify(inCanvasStyle.color),\n        textAlign: 'center',\n        paddingTop: 1 + PX,\n        border: '1px solid #cccccc',\n        borderRadius: 4 + PX,\n        cursor: preDefStr.POINTER,\n        '_cursor': 'hand',\n        backgroundColor: HASHSTRING + COLOR_FFFFFF,\n        zIndex: 21,\n        '-webkit-border-radius': 4 + PX\n      },\n      ui = cacheUI,\n      attrObj;\n\n    attrObj = {\n      width: chartWidth,\n      height: chartHeight\n    };\n    if (!cacheUI) {\n      attrObj.fill = TRANSPARENT;\n      attrObj.type = DIV_STR;\n    }\n\n    ui = animationManager.setAnimation({\n      el: cacheUI || 'html',\n      attr: attrObj,\n      component: manager,\n      label: 'ui',\n      state: DATASETSTATE,\n      css: {\n        fontSize: 10 + PX,\n        lineHeight: 15 + PX,\n        fontFamily: inCanvasStyle.fontFamily,\n        display: 'block'\n      },\n      container: !cacheUI && manager.getFromEnv('chart-container')\n    });\n\n    attrObj = {\n      width: chartWidth,\n      height: chartHeight,\n      opacity: 0.3\n    };\n    if (!ui.veil) {\n      attrObj.fill = COLOR_000000;\n      attrObj.type = DIV_STR;\n    }\n\n    ui.veil = animationManager.setAnimation({\n      el: ui.veil || 'html',\n      attr: attrObj,\n      component: manager,\n      state: DATASETSTATE,\n      label: 'uiveil',\n      container: !ui.veil && ui\n    });\n\n    dialogAttrs = {\n      x: (chartWidth - dialogWidth) / 2,\n      y: (chartHeight - dialogHeight) / 2,\n      width: dialogWidth,\n      height: dialogHeight\n    };\n\n    if (!ui.dialog) {\n      dialogAttrs.fill = COLOR_EFEFEF;\n      dialogAttrs.strokeWidth = 1;\n      dialogAttrs.stroke = COLOR_000000;\n      dialogAttrs.type = DIV_STR;\n    }\n\n    ui.dialog = animationManager.setAnimation({\n      el: ui.dialog || 'html',\n      attr: dialogAttrs,\n      component: manager,\n      state: DATASETSTATE,\n      label: 'uidialog',\n      container: !ui.dialog && ui,\n      css: {\n        borderRadius: 5 + PX,\n        boxShadow: '1px 1px 3px #000000',\n        '-webkit-border-radius': 5 + PX,\n        '-webkit-box-shadow': '1px 1px 3px #000000',\n        filter: 'progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=\"#000000\")'\n      }\n    });\n\n    okAttrs = {\n      x: dialogWidth - 70 - padding,\n      y: dialogHeight - 23 - padding,\n      width: 65,\n      height: 17\n    };\n    if (!ui.ok) {\n      okAttrs.text = SUBMIT_STR;\n      okAttrs.tabIndex = 1;\n      okAttrs.type = DIV_STR;\n    }\n    uiok = animationManager.setAnimation({\n      el: ui.ok || 'html',\n      state: DATASETSTATE,\n      attr: okAttrs,\n      component: manager,\n      label: 'uiok',\n      css: buttonStyle,\n      container: !ui.ok && ui.dialog\n    });\n\n    !ui.ok && (ui.ok = uiok) && uiok.on('fc-mousedown', onsubmit);\n\n    cancelAttrs = {\n      x: dialogWidth - 140 - padding,\n      y: dialogHeight - 23 - padding,\n      width: 65,\n      height: 17\n    };\n\n    if (!ui.cancel) {\n      cancelAttrs.text = CANCEL_STR;\n      cancelAttrs.tabIndex = 2;\n      cancelAttrs.type = DIV_STR;\n    }\n\n    uicancel = animationManager.setAnimation({\n      el: ui.cancel || 'html',\n      state: DATASETSTATE,\n      attr: cancelAttrs,\n      component: manager,\n      label: 'uicancel',\n      css: buttonStyle,\n      container: !ui.cancel && ui.dialog\n    });\n\n    !ui.cancel && (ui.cancel = uicancel) && uicancel.on('fc-mousedown', oncancel);\n\n    removeAttrs = {\n      x: dialogWidth - 210 - padding,\n      y: dialogHeight - 23 - padding,\n      width: 65,\n      height: 17\n    };\n    if (!ui.removeItem) {\n      removeAttrs.text = DELETE_STR;\n      removeAttrs.tabIndex = 3;\n      removeAttrs.type = DIV_STR;\n    }\n\n    uiremove = animationManager.setAnimation({\n      el: ui.removeItem || 'html',\n      state: DATASETSTATE,\n      attr: removeAttrs,\n      component: manager,\n      label: 'uiremove',\n      css: buttonStyle,\n      container: !ui.removeItem && ui.dialog\n    });\n\n    !ui.removeItem && (ui.removeItem = uiremove) && uiremove.on('fc-mousedown', onremove);\n\n    if (!ui.handleKeyPress) {\n      // Add an event that would handle enter and esc on input\n      // elements\n      ui.handleKeyPress = function (e) {\n        if (e.keyCode === 13) {\n          // fire the mousedown handler when enter is pressed\n          ui.ok.element && onsubmit(e);\n        } else if (e.keyCode === 27) {\n          // fire the mousedown handler when escape is pressed\n          ui.cancel.element && oncancel(e);\n        }\n      };\n    }\n\n    // Keep initially hidden.\n    // ui.hide();\n    return ui;\n  }\n\n  /**\n   * Function to get a specific node after querying all the datasets\n   * @param {string} nodeId The node's id whose corresponding data object is required\n   * @return {Object} The specific node or all the nodes from all the datasets\n   */\n  getNode (nodeId) {\n    var node,\n      nodes = {},\n      datasets = this.getChildren('dataset');\n\n    for (let i = 0, len = datasets.length; i < len; i++) {\n      if (nodeId) {\n        if ((node = datasets[i].getNode(nodeId))) {\n          return node;\n        }\n      } else {\n        Object.assign(nodes, datasets[i].getNode());\n      }\n    }\n    return !nodeId && nodes;\n  }\n\n  /**\n   * Create child containers\n   */\n  createContainer () {\n    let manager = this,\n      animationManager = manager.getFromEnv('animationManager'),\n      keys = ['connectorGroup', 'defaultVcanvasGroup', 'vcanvasLabelGroup', 'cloneGroup'], // eslint-disable-line good-practices/no-single-usage-variable\n      parentChildContainers = manager.getLinkedParent().getChildContainer();\n\n    keys.forEach(function (key) {\n      !manager.getChildContainer(key) && manager.addChildContainer(key,\n        animationManager.setAnimation({\n          el: 'group',\n          attr: { name: 'manager-' + key },\n          component: manager,\n          container: parentChildContainers[key] || parentChildContainers.defaultVcanvasGroup\n        }));\n    });\n\n    !manager.getContainer('waitContainer') && manager.addContainer('waitContainer',\n      animationManager.setAnimation({\n        el: 'group',\n        attr: { name: 'manager-waitContainer' },\n        container: parentChildContainers.defaultVcanvasGroup,\n        component: manager\n      }));\n  }\n  /**\n   * Function to draw all the containers and repoition the html dialog box on chart-redraw\n   */\n  draw () {\n    var manager = this,\n      graphicalMap = {\n        cacheUpdateUI: [350, 215],\n        cacheLabelDeleteUI: [250, 100],\n        cacheLabelUpdateUI: [350, 205],\n        cacheConnectorUpdateUIedit: [315, 215],\n        cacheConnectorUpdateUInew: [315, 215]\n      },\n      graphics,\n      elem;\n    if (!manager.getState('configured')) {\n      DATASETSTATE = UPDATE_STR;\n      for (graphics in graphicalMap) {\n        if ((elem = manager.getGraphicalElement(graphics)) && elem.isVisible()) {\n          if (graphics === 'cacheUpdateUI') {\n            let fields = elem.fields,\n              ele = fields.image,\n              isChecked = ele.val();\n            graphicalMap[graphics][1] = isChecked ? 250 : 215;\n          }\n          manager.createHtmlDialog(graphicalMap[graphics][0], graphicalMap[graphics][1], UNDEF,\n            UNDEF, UNDEF, elem);\n        }\n      }\n      DATASETSTATE = APPEARING_STR;\n    }\n    manager.setState('configured', false);\n    manager.createContainer();\n  }\n\n  /**\n   * function to get data limits from its child datasets\n   * return minimun and maximum value among the datasets limit\n   * @return {Object} [min, max]\n   */\n  getDataLimits () {\n    var datasets = this.getChildren('dataset'),\n      i,\n      yMin = +Infinity,\n      yMax = -Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity,\n      conf;\n    for (i = 0; i < datasets.length; i++) {\n      conf = datasets[i].config;\n      yMax = Math.max(yMax, conf.yMax);\n      yMin = Math.min(yMin, conf.yMin);\n      xMax = Math.max(xMax, conf.xMax);\n      xMin = Math.min(xMin, conf.xMin);\n    }\n\n    return {\n      max: yMax,\n      min: yMin,\n      xMax: xMax,\n      xMin: xMin\n    };\n  }\n  /**\n   * it return the status of dataset visiblity\n   * @return {boolean} returns the visiblity status of dataset\n   */\n  isVisible () {\n    return !this.isNotVisible;\n  }\n\n  /**\n   * Over writing the childChanged function of the parent, basically a dummy function.\n   * @return {Object} instance of DragNodeGroup class\n   */\n  childChanged () {\n    return this;\n  }\n\n  /**\n   * Function to hide the circular ring element\n   */\n  hideWaitElem () {\n    this.getGraphicalElement('waitElement') && this.getGraphicalElement('waitElement').hide();\n  }\n\n  /**\n   * Function to clear the setTimeout of that is set when a long press is triggered on the nodes, connectors and labels\n   */\n  clearLongPress () {\n    var manager = this;\n    clearTimeout(manager.config._longpressactive);\n    delete manager.config._longpressactive;\n  }\n\n  /**\n   * Function to set the timer after which the UI for deleting labels will open\n   * @param {SVGElement} ele The element over which the click is done\n   * @param {Object} labelObj Conatins the information about the label that is clicked\n   */\n  triggerLabelUI (ele, labelObj) {\n    var manager = this;\n    manager.config._longpressactive = setTimeout(function () {\n      ele.data('fire_click_event', 0);\n      if (!ele.data('viewMode')) {\n        manager.showLabelDeleteUI(labelObj);\n      }\n    }, CLEAR_TIME_1000);\n  }\n\n  /**\n   * Function to manage the UI box for editing connectors\n   * @param {SVGElemet} ele The element on which the mousedown event is triggered\n   */\n  triggerConnectorUI (ele) {\n    var manager = this,\n      dataset = ele.data('dataset'),\n      config = ele.data(preDefStr.configStr),\n      options = config || {};\n    manager.config._longpressactive = setTimeout(function () {\n      // Whether to fire the click event ot not\n      ele.data('fire_click_event', 0);\n\n      if (!ele.data('viewMode')) {\n        // add a selection method for start and end\n        manager.showConnectorUpdateUI({\n          fromid: {\n            val: options.from,\n            innerHTML: OPTIONSTR + options.from + OPTIONCLOSESTR,\n            disabled: true\n          },\n          toid: {\n            val: options.to,\n            innerHTML: OPTIONSTR + options.to + OPTIONCLOSESTR,\n            disabled: true\n          },\n          datasetIndex: dataset.config.datasetIndex,\n          index: config.index,\n          arratstart: {\n            val: Boolean(pluckNumber(options.arrowatstart, 1))\n          },\n          arratend: {\n            val: Boolean(pluckNumber(options.arrowatend, 1))\n          },\n          dashed: {\n            val: pluckNumber(options.dashed)\n          },\n          dashgap: {\n            val: options.dashgap\n          },\n          dashlen: {\n            val: options.dashlen\n          },\n          label: {\n            val: options.label\n          },\n          tooltext: {\n            val: options.tooltext\n          },\n          id: {\n            val: dataset.config.id,\n            disabled: true\n          },\n          strength: {\n            val: options.conStrength\n          },\n          alpha: {\n            val: options.alpha\n          },\n          color: {\n            val: options.color.FCcolor.color\n          }\n        }, true);\n      }\n    }, CLEAR_TIME_1000);\n  }\n\n  /**\n   * Function to delete a label\n   * @param {number} i The index of the label that is to be deleted\n   */\n  deleteLabel (i) {\n    var manager = this,\n      labels = manager.getChildren('labels')[0],\n      index = pluckNumber(i, labels.config.lastTappedLabelIndex), // eslint-disable-line good-practices/no-single-usage-variable\n      labelObj = labels.components.data[index],\n      labelElement,\n      trackerElement,\n      chart = manager.getFromEnv('chart'),\n      sourceEvent = LABEL_DELETED,\n      eventArgs;\n\n    labelElement = labelObj.graphics.element;\n    trackerElement = labelObj.graphics.trackerElement;\n\n    if (labelElement) {\n      eventArgs = labelElement.data('eventArgs');\n      labelElement.remove();\n      trackerElement && trackerElement.remove();\n      delete labelObj.graphics;\n    }\n    chart.fireChartInstanceEvent('chartupdated', extend2({\n      sourceEvent: sourceEvent\n    }, eventArgs));\n    chart.fireChartInstanceEvent(sourceEvent, eventArgs);\n    labelObj.removed = true;\n  }\n\n  /**\n   * Function to show thw UI for deleting an existing label\n   * @param {Object} label Conatains information about the label that is to be deleted\n   */\n  showLabelDeleteUI (label) {\n    var manager = this,\n      ui = manager.getGraphicalElement('cacheLabelDeleteUI');\n\n    // Store the index of the last tapped label.\n    manager.getChildren('labels')[0].config.lastTappedLabelIndex = label.config.index;\n    if (!ui) {\n      ui = manager.addGraphicalElement('cacheLabelDeleteUI',\n        manager.createHtmlDialog(250, 100, UNDEF, function () {\n          ui.hide();\n        },\n        function () {\n          manager.deleteLabel();\n          ui.hide();\n        }));\n\n      // create a location where to show the text message\n      ui.message = manager.getFromEnv('paper').html('span', {\n        x: 10,\n        y: 10,\n        width: 230,\n        height: 80\n      }).add(ui.dialog);\n      // since submit button is not needed, hide it and move the\n      // delete button to its place.\n      ui.ok.hide();\n      ui.removeItem.translate(175).show();\n    } else {\n      ui.show();\n    }\n\n    // Update the message with proper text.\n    ui.message.attr({\n      text: 'Would you really like to delete the label: \\\"' +\n        label.config.text + '\\\"?'\n    });\n  }\n\n  /**\n   * Function to draw the circular ring and trigger the timer for opening the html box for editing the node\n   * @param {Object} dataObj Conatins information about the node that is clicked\n   * @param {number} datasetIndex The index of the dataset to which the node belongs\n   */\n  drawWaitingRing (dataObj, datasetIndex) {\n    var manager = this,\n      config = dataObj.config,\n      conf = manager.getChildren('dataset')[datasetIndex].config,\n      waitElement = manager.getGraphicalElement('waitElement');\n\n    manager.clearLongPress();\n    waitElement = manager.getFromEnv('animationManager').setAnimation({\n      el: waitElement || 'ringpath',\n      attr: {\n        ringpath: [config._xPos, config._yPos, 8, 11, 0, 0],\n        fill: toRaphaelColor({\n          alpha: '100,100',\n          angle: 120,\n          color: 'CCCCCC,FFFFFF',\n          ratio: '30,50'\n        }),\n        'stroke-width': 0\n      },\n      container: manager.getContainer('waitContainer'),\n      component: manager\n    });\n    if (!manager.getGraphicalElement('waitElement')) {\n      manager.addGraphicalElement('waitElement', waitElement);\n    }\n    // layerX += 11;\n    // layerY -= 21;\n    waitElement.show()\n      .animate({\n        ringpath: [config._xPos, config._yPos, 8, 11, 0, 6.28]\n      }, CLEAR_TIME_1000);\n\n    manager.config._longpressactive = setTimeout(function () {\n      var seriesName = (conf.name !== BLANK && conf.name !== UNDEF)\n          ? conf.name + preDefStr.BLANKSPACE : BLANK,\n        seriesId = conf.id !== UNDEF ? (seriesName ? COMMASTRING : seriesName) + conf.id : BLANK;\n      waitElement && waitElement.hide();\n      // Whether to fire the click event ot not\n      // ele.data('fire_click_event', 0);\n      manager.showNodeUpdateUI({\n        x: {\n          value: config.x\n        },\n        y: {\n          value: config.y\n        },\n        draggable: {\n          value: getFirstValue(config.allowdrag, 1)\n        },\n        color: {\n          value: config.color\n        },\n        alpha: {\n          value: config.alpha\n        },\n        label: {\n          value: getFirstValue(config.label,\n            config.name)\n        },\n        tooltip: {\n          value: config.toolText\n        },\n        shape: {\n          value: shapesInfo[config.shape]\n        },\n        rectWidth: {\n          value: config.width\n        },\n        rectHeight: {\n          value: config.height\n        },\n        circPolyRadius: {\n          value: config.radius\n        },\n        polySides: {\n          value: config.numsides\n        },\n        image: {\n          value: config.imageNode\n        },\n        imgWidth: {\n          value: config.imageWidth\n        },\n        imgHeight: {\n          value: config.imageHeight\n        },\n        imgAlign: {\n          value: config.imageAlign\n        },\n        imgUrl: {\n          value: config.imageURL\n        },\n        id: {\n          value: config.id,\n          disabled: true\n        },\n        link: {\n          value: config.link\n        },\n        dataset: {\n          innerHTML: '<option value=\"' +\n              seriesId + '\">' + seriesName +\n              seriesId + '</option>',\n          disabled: true\n        },\n        datasetIndex: datasetIndex\n      }, true);\n    }, CLEAR_TIME_1000);\n  }\n\n  /**\n   * Function to draw connectors during dragging of the nodes\n   * @param {Object} connectorsObj Contains information about connector object that is to be re-drawn\n   */\n  drawNodeConnectors (connectorsObj) {\n    var i,\n      datasetIndex,\n      connectorSet,\n      connector,\n      fromObj,\n      toObj;\n    if (!connectorsObj) {\n      return;\n    }\n    for (i in connectorsObj) {\n      connector = connectorsObj[i];\n      if (connector) {\n        datasetIndex = connector.config.datasetIndex;\n        fromObj = connector.config.fromPointObj;\n        toObj = connector.config.toPointObj;\n        connectorSet = this.getChildren('connector')[datasetIndex];\n\n        if (connectorSet) {\n          connectorSet && connectorSet.parsePlotAttributes(connector, fromObj, toObj);\n          connectorSet && connectorSet.drawConnector(connector, fromObj, toObj);\n        }\n      }\n    }\n  }\n\n  /**\n   * Function to clear all the connectors if chart is updated.\n   */\n  _clearConnectors () {\n    var nodes = this.getNode(),\n      id,\n      startConnectors,\n      endConnectors,\n      graphics,\n      j,\n      node;\n    // Deleting all connectors from nodes object\n    for (id in nodes) {\n      node = nodes[id];\n      if (node) {\n        startConnectors = node.config.startConnectors || {};\n        endConnectors = node.config.endConnectors || {};\n        for (j in startConnectors) {\n          graphics = {\n            graphics: startConnectors[j].graphics || {}\n          };\n          componentDispose.call(graphics);\n        }\n        for (j in endConnectors) {\n          graphics = {\n            graphics: endConnectors[j].graphics || {}\n          };\n          componentDispose.call(graphics);\n        }\n      }\n    }\n    // // Clearing nodes object\n    // manager.nodes = {};\n  }\n\n  /**\n   * Function to get the jsonData from the datasets\n   * @return {Object} data from the dataset\n   */\n  getJSONData () {\n    var children = this.getChildren(),\n      nodeSets = children.dataset,\n      connectorSets = children.connector,\n      labelSets = children.labels,\n      jsonData = {},\n      i,\n      len,\n      dataset;\n    jsonData.dataset = [];\n    jsonData.connectors = [];\n    jsonData.labels = [];\n\n    for (i = 0, len = nodeSets && nodeSets.length; i < len; i++) {\n      dataset = nodeSets[i];\n      if (!jsonData.dataset[i]) {\n        jsonData.dataset[i] = extend2({}, dataset.JSONData);\n      }\n      jsonData.dataset[i].data = dataset.getJSONData();\n    }\n    for (i = 0, len = connectorSets && connectorSets.length; i < len; i++) {\n      dataset = connectorSets[i];\n      if (!jsonData.connectors[i]) {\n        jsonData.connectors[i] = extend2({}, dataset.JSONData);\n      }\n      jsonData.connectors[i].connector = dataset.getJSONData();\n    }\n    for (i = 0, len = labelSets && labelSets.length; i < len; i++) {\n      dataset = labelSets[i];\n      if (!jsonData.labels[i]) {\n        jsonData.labels[i] = {\n          label: []\n        };\n      }\n      jsonData.labels[i].label = dataset.getJSONData();\n    }\n    return jsonData;\n  }\n}\nexport default DragNodeGroup;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nlet removeSets = function (parent, set) {\n  let children = parent.getChildren(), // eslint-disable-line good-practices/no-single-usage-variable\n    childArr,\n    j,\n    i;\n  if (set && set.length) {\n    for (i = set.length - 1; i > -1; i--) {\n      childArr = children[set[i]];\n      for (j = childArr && childArr.length - 1; j > -1; childArr[j].remove(), j--);\n    }\n  }\n};\n/**\n * function to  create dataset, groupmaneger.\n * assign dataset to group manager.\n **/\nexport default function (chart) {\n  let jsonData = chart.getFromEnv('dataSource'),\n    datasetsJSON = jsonData.dataset,\n    connectorsJSON = jsonData.connectors,\n    labels = jsonData.labels,\n    canvas = chart.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n    vCanvas,\n    datasetParent = vCanvas = canvas.getChildren('vCanvas')[0],\n    setType = [],\n    groupManager;\n  labels && (labels = [labels]);\n  if (!datasetsJSON && !connectorsJSON && !labels) {\n    chart.setChartMessage();\n    return;\n  }\n  componentFactory(vCanvas, chart.getDSGroupdef(), 'datasetGroup_dragNode');\n  groupManager = vCanvas.getChildren('datasetGroup_dragNode');\n  groupManager && (datasetParent = groupManager[0]);\n  if (datasetsJSON && datasetsJSON.length) {\n    componentFactory(datasetParent, chart.getDSdef('dragnode'), 'dataset', datasetsJSON.length, datasetsJSON);\n  } else {\n    setType.push('dataset');\n  }\n  if (connectorsJSON && connectorsJSON.length) {\n    componentFactory(datasetParent, chart.getDSdef('connector'), 'connector', connectorsJSON.length, connectorsJSON);\n  } else {\n    setType.push('connector');\n  }\n  if (labels && labels.length) {\n    componentFactory(datasetParent, chart.getDSdef('dragableLabels'), 'labels', labels.length, labels);\n  } else {\n    setType.push('labels');\n  }\n  setType.length && removeSets(datasetParent, setType);\n}\n","import Candlestick from '@fusioncharts/powercharts/src/chart/candlestick';\nexport default Candlestick;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { pluck, preDefStr, POSITION_RIGHT, convertColor,\n  pluckNumber, getFirstValue, getMouseCoordinate, BLANKSTRING, POSITION_LEFT, POSITION_TOP, pluckFontSizeMaintainUnit } from '@fusioncharts/core/src/lib';\nimport MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport virtualCanvasFactory from '@fusioncharts/charts/src/factories/vcanvas';\nimport datasetFactory from '../../factories/candlestick-dataset';\nimport axisFactory from '../../factories/candlestick-axis';\nimport { CandleStickDataset, CandleStickBarDataset, CandleStickLineDataset } from '../../dataset/candlestick';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\n\nconst MOUSEOUT = 'fc-mouseout',\n  CANDLESTICK = 'candlestick',\n  padding = 6;\nlet altHGridColorStr = preDefStr.altHGridColorStr,\n  altHGridAlphaStr = preDefStr.altHGridAlphaStr,\n  math = Math,\n  mathMax = math.max,\n  mathRound = math.round,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  divLineAlpha3DStr = preDefStr.divLineAlpha3DStr,\n  defaultFontStr = preDefStr.defaultFontStr,\n  divLineAlphaStr = preDefStr.divLineAlphaStr,\n  altVGridColorStr = preDefStr.altVGridColorStr,\n  altVGridAlphaStr = preDefStr.altVGridAlphaStr,\n  colorStrings = preDefStr.colors,\n  COLOR_000000 = colorStrings.c000000,\n  chartPaletteStr = {\n    chart2D: {\n      bgColor: 'bgColor',\n      bgAlpha: 'bgAlpha',\n      bgAngle: 'bgAngle',\n      bgRatio: 'bgRatio',\n      canvasBgColor: 'canvasBgColor',\n      canvasBaseColor: 'canvasBaseColor',\n      divLineColor: 'divLineColor',\n      legendBgColor: 'legendBgColor',\n      legendBorderColor: 'legendBorderColor',\n      toolTipbgColor: 'toolTipbgColor',\n      toolTipBorderColor: 'toolTipBorderColor',\n      baseFontColor: 'baseFontColor',\n      anchorBgColor: 'anchorBgColor'\n    },\n    chart3D: {\n      bgColor: 'bgColor3D',\n      bgAlpha: 'bgAlpha3D',\n      bgAngle: 'bgAngle3D',\n      bgRatio: 'bgRatio3D',\n      canvasBgColor: 'canvasBgColor3D',\n      canvasBaseColor: 'canvasBaseColor3D',\n      divLineColor: 'divLineColor3D',\n      divLineAlpha: divLineAlpha3DStr,\n      legendBgColor: 'legendBgColor3D',\n      legendBorderColor: 'legendBorderColor3D',\n      toolTipbgColor: 'toolTipbgColor3D',\n      toolTipBorderColor: 'toolTipBorderColor3D',\n      baseFontColor: 'baseFontColor3D',\n      anchorBgColor: 'anchorBgColor3D'\n    }\n  },\n  isVolumeChartRequired = function (dataObj) {\n    if (!(dataObj && dataObj.dataset)) {\n      return 0;\n    }\n    let data = dataObj.dataset[0].data;\n    // eslint-disable-next-line good-practices/no-function-dependency\n    return !!((Array.isArray(data) && data.filter(v => v.volume)) || []).length;\n  };\n/**\n * class definition for candlestick chart API\n */\nclass CandleStick extends MSCartesian {\n  /**\n   * constructor function of this class\n   */\n  constructor () {\n    super();\n    this.isDual = true;\n    this.paletteIndex = 3;\n    this.hasInteractiveLegend = false;\n    this.numOfCanvas = 2;\n    this.registerFactory('vCanvas', virtualCanvasFactory, ['axis']);\n    this.registerFactory('axis', axisFactory, ['canvas']);\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  getName () {\n    return 'candlestick';\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  static getName () {\n    return 'candlestick';\n  }\n  /**\n   * This method return the dataset definations for this charts\n   * @param {string} name   name of the dataset that is required\n   * @return {Object}       Required dataset class definition\n   */\n  getDSdef (name) {\n    return name === 'bar' ? CandleStickBarDataset : ((name === 'line') ? CandleStickLineDataset : CandleStickDataset);\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.hasLegend = true;\n    config.defaultDatasetType = CANDLESTICK;\n    config.drawanchors = 0;\n    config.enablemousetracking = true;\n    config.iscandlestick = true;\n    config.canvasborderthickness = 1;\n  }\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n  }\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    let iapi = this,\n      volumeHeightPercent,\n      config = iapi.config,\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      colorM = iapi.getFromEnv('color-manager');\n    config.showVolumeChart = pluckNumber(chartAttrs.showvolumechart, isVolumeChartRequired(dataObj), 1);\n    config.rollOverBandColor = convertColor(\n      pluck(chartAttrs.rolloverbandcolor, colorM.getColor(altHGridColorStr)),\n      pluck(chartAttrs.rolloverbandalpha, colorM.getColor(altHGridAlphaStr)));\n\n    config.crosslinecolor = pluck(chartAttrs.crosslinecolor,\n      chartAttrs.rolloverbandcolor, colorM.getColor(altHGridColorStr));\n    config.drawcrosslineontop = 0;\n    config.crosslinealpha = pluckNumber(chartAttrs.crosslinealpha,\n      chartAttrs.rolloverbandalpha, colorM.getColor(altHGridAlphaStr));\n    config.drawcrossline = 1;\n    config.skipClipping = true;\n    chartAttrs = iapi.getFromEnv('chart-attrib');\n    config.vplotbordercolor = getFirstValue(chartAttrs.vplotbordercolor, BLANKSTRING);\n    config.vplotborderalpha = getFirstValue(chartAttrs.vplotborderalpha, BLANKSTRING);\n    config.vplotborderthickness = pluckNumber(chartAttrs.vplotborderthickness, 1);\n    config.showplotborder = pluckNumber(chartAttrs.showvplotborder, 1);\n    volumeHeightPercent = pluckNumber(chartAttrs.volumeheightpercent, 40);\n    config.volumeHeightPercent = volumeHeightPercent < 20 ? 20 : (volumeHeightPercent > 80 ? 80\n      : volumeHeightPercent);\n    config.canvasBorderWidth = pluckNumber(chartAttrs.canvasborderthickness, 1);\n  }\n\n  /**\n   * calculate and allote space for various components\n   * every components are get notified with maximum space and then components return\n   * the available space.\n   */\n  _spaceManager () {\n    var spaceForActionBar,\n      actionBarSpace,\n      availableWidth,\n      availableHeight,\n      iapi = this,\n      config = iapi.config,\n      components = iapi.getChildren(),\n      legendPosition = config.legendPosition ? config.legendPosition.split('-') : [],\n      xAxis = components.xAxis && components.xAxis[0],\n      yAxis = components.yAxis && components.yAxis[0], // eslint-disable-line good-practices/no-single-usage-variable\n      yAxis2 = components.yAxis && components.yAxis[1], // eslint-disable-line good-practices/no-single-usage-variable\n      legend = iapi.getFromEnv('legend'), // eslint-disable-line good-practices/no-single-usage-variable\n      canvasHeight,\n      xAxisDimensions,\n      showVolumeChart = iapi.config.showVolumeChart,\n      volumeHeightPercent = showVolumeChart ? config.volumeHeightPercent : 0,\n      canvas = components.canvas[0],\n      canvasConfig = canvas.config,\n      volumeCanvas,\n      volumeCanvasConfig,\n      volumeCanvasY,\n      yAxisDim,\n      vYAxisDim,\n      width = config.width,\n      height = config.height,\n      actualYDim = {},\n      allottedSpace,\n      chartBorderWidth = config.chartBorderWidth,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      minCanvasHeight = config.minCanvasHeight,\n      minCanvasWidth = config.minCanvasWidth,\n      canvasMarginLeft = config.canvasMarginLeft,\n      canvasMarginRight = config.canvasMarginRight,\n      canvasMarginTop = config.canvasMarginTop,\n      canvasMarginBottom = config.canvasMarginBottom,\n      diff,\n      currentCanvasHeight,\n      currentCanvasWidth,\n      heightAdjust,\n      origCanvasTopMargin = config.origCanvasTopMargin,\n      origCanvasBottomMargin = config.origCanvasBottomMargin,\n      origCanvasLeftMargin = config.origCanvasLeftMargin,\n      origCanvasRightMargin = config.origCanvasRightMargin,\n      left,\n      right,\n      top,\n      bottom,\n      widthAdjust,\n      sum;\n      // Manage space\n\n    iapi._allocateSpace({\n      top: chartBorderWidth,\n      bottom: chartBorderWidth,\n      left: chartBorderWidth,\n      right: chartBorderWidth\n    });\n\n    // iapi._allocateSpace ( {\n    //     left : config.canvasMarginLeft,\n    //     right : config.canvasMarginRight\n    // });\n\n    spaceForActionBar = config.availableHeight * 0.225; // eslint-disable-line good-practices/no-single-usage-variable\n    actionBarSpace = (iapi._manageActionBarSpace && iapi._manageActionBarSpace(spaceForActionBar)) || {}; // eslint-disable-line good-practices/no-single-usage-variable\n    iapi._allocateSpace(actionBarSpace);\n\n    if (legendPosition[0] === POSITION_LEFT || legendPosition[0] === POSITION_RIGHT) {\n      allottedSpace = config.canvasWidth * 0.225;\n    } else {\n      allottedSpace = config.canvasHeight * 0.3;\n    }\n    ((config.hasLegend !== false) && xAxis) && config.showLegend &&\n              iapi._allocateSpace(legend._manageLegendPosition(allottedSpace));\n    availableWidth = config.canvasWidth * 0.7;\n    yAxisDim = yAxis.placeAxis(availableWidth);\n    vYAxisDim = showVolumeChart ? yAxis2.placeAxis(availableWidth) : {};\n    actualYDim.left = mathMax(yAxisDim.left, vYAxisDim.left || 0);\n    actualYDim.right = mathMax(yAxisDim.right, vYAxisDim.right || 0);\n    iapi._allocateSpace(actualYDim);\n\n    // Check for minimun canvas width for applying canvas left and right margin.\n    if (minCanvasWidth > width - canvasMarginLeft - canvasMarginRight) {\n      widthAdjust = true;\n      diff = config.canvasWidth - minCanvasWidth;\n      sum = canvasMarginLeft + canvasMarginRight;\n      canvasMarginLeft = config.canvasMarginLeft = diff * canvasMarginLeft / sum;\n      canvasMarginRight = config.canvasMarginRight = diff * canvasMarginRight / sum;\n    }\n\n    // Calculating the left and right canvas margin.\n    left = canvasMarginLeft > config.canvasLeft ? (canvasMarginLeft - config.canvasLeft) : 0;\n    right = canvasMarginRight > (width - config.canvasRight) ? (canvasMarginRight +\n              config.canvasRight - width) : 0;\n\n    iapi._allocateSpace({\n      left: left,\n      right: right\n    });\n\n    // Forcing canvas width to its minimum\n    if (widthAdjust) {\n      sum = origCanvasLeftMargin + origCanvasRightMargin;\n      currentCanvasWidth = config.canvasWidth;\n      if (currentCanvasWidth > minCanvasWidth) {\n        diff = currentCanvasWidth - minCanvasWidth;\n        left = diff * origCanvasLeftMargin / sum;\n        right = diff * origCanvasRightMargin / sum;\n      }\n      iapi._allocateSpace({\n        left: left,\n        right: right\n      });\n    }\n\n    availableHeight = config.canvasHeight * 0.225;\n\n    availableHeight = (legendPosition[0] === POSITION_TOP || legendPosition[0] === POSITION_BOTTOM) ? config.canvasHeight * 0.6\n      : config.canvasWidth * 0.6;\n    // a space manager that manages the space for the tools as well as the captions.\n    iapi._manageChartMenuBar(availableHeight);\n\n    iapi._allocateSpace({\n      top: config.canvasMarginTop,\n      bottom: config.canvasMarginBottom\n    });\n\n    availableHeight = config.canvasHeight * 0.3;\n    xAxisDimensions = xAxis.placeAxis(availableHeight);\n    xAxis && iapi._allocateSpace(xAxisDimensions);\n    xAxisDimensions.bottom += padding;\n    canvasConfig.intermediarySpace = xAxisDimensions.bottom;\n\n    // enforcing the 10 pixel deduction in canvas height to set a padding between canvas and legend\n    if (showVolumeChart) {\n      iapi._allocateSpace({ bottom: 10 });\n    }\n    iapi._allocateSpace({\n      top: canvasBorderWidth,\n      bottom: canvasBorderWidth * 2,\n      left: canvasBorderWidth,\n      right: canvasBorderWidth\n    });\n\n    // Check for minimum canvas height for applying top and bottom margin.\n    if (minCanvasHeight > height - canvasMarginTop - canvasMarginBottom) {\n      heightAdjust = true;\n      diff = config.canvasHeight - minCanvasHeight;\n      sum = canvasMarginTop + canvasMarginBottom;\n      canvasMarginTop = config.canvasMarginTop = diff * canvasMarginTop / sum;\n      canvasMarginBottom = config.canvasMarginBottom = diff * canvasMarginBottom / sum;\n    }\n\n    // Allocate space for canvas margin only if the margin is less than the margin entered by the user.\n    top = canvasMarginTop > config.canvasTop ? (canvasMarginTop - config.canvasTop) : 0;\n    bottom = canvasMarginBottom > (height - config.canvasBottom) ? (canvasMarginBottom +\n              config.canvasBottom - height) : 0;\n\n    iapi._allocateSpace({\n      top: top,\n      bottom: bottom\n    });\n\n    // Forcing canvas height to its minimum\n    if (heightAdjust) {\n      sum = origCanvasTopMargin + origCanvasBottomMargin;\n      currentCanvasHeight = config.canvasHeight;\n      if (currentCanvasHeight > minCanvasHeight) {\n        diff = currentCanvasHeight - minCanvasHeight;\n        top = diff * origCanvasTopMargin / sum;\n        bottom = diff * origCanvasBottomMargin / sum;\n      }\n      iapi._allocateSpace({\n        top: top,\n        bottom: bottom\n      });\n    }\n\n    canvasHeight = config.canvasHeight;\n    canvasConfig.canvasHeight = mathRound((100 - volumeHeightPercent) / 100 * canvasHeight);\n\n    canvasConfig.canvasTop = config.canvasTop;\n    canvasConfig.canvasLeft = config.canvasLeft;\n    canvasConfig.canvasBottom = canvasConfig.canvasTop + canvasConfig.canvasHeight;\n    canvasConfig.canvasWidth = config.canvasWidth;\n    canvasConfig.canvasRight = config.canvasRight;\n    canvasConfig.canvasY = config.canvasTop + canvasConfig.canvasHeight + canvasBorderWidth;\n    canvas.setDimension({\n      top: canvasConfig.canvasTop,\n      left: canvasConfig.canvasLeft,\n      width: canvasConfig.canvasWidth,\n      height: canvasConfig.canvasHeight\n    });\n    if (showVolumeChart) {\n      volumeCanvas = components.canvas[1];\n      volumeCanvasConfig = volumeCanvas.config;\n      volumeCanvasConfig.canvasHeight = ((volumeHeightPercent / 100) * canvasHeight);\n      volumeCanvasConfig.canvasTop = canvasConfig.canvasBottom + xAxisDimensions.bottom +\n                (canvasBorderWidth * 2);\n      volumeCanvasConfig.canvasLeft = config.canvasLeft;\n      volumeCanvasConfig.canvasBottom = volumeCanvasConfig.canvasTop + volumeCanvasConfig.canvasHeight +\n                (canvasBorderWidth * 2);\n      volumeCanvasConfig.canvasRight = config.canvasRight;\n      volumeCanvasConfig.canvasWidth = config.canvasWidth;\n      volumeCanvasY = config.canvasTop + canvasConfig.canvasHeight + xAxisDimensions.bottom +\n          (canvasBorderWidth * 2);\n      volumeCanvasConfig.canvasY = volumeCanvasY;\n      volumeCanvas.setDimension({\n        top: volumeCanvasConfig.canvasTop,\n        left: volumeCanvasConfig.canvasLeft,\n        width: volumeCanvasConfig.canvasWidth,\n        height: volumeCanvasConfig.canvasHeight\n      });\n    }\n  }\n  /**\n   * function to calculate post space management calculations\n   * calculations like axis dimenetion set, allocate space for xaxis labels,\n   * canvas padding etc.\n   */\n  _postSpaceManagement () {\n    super._postSpaceManagement();\n  }\n  /**\n    * Sets dimension of Axis components\n    */\n  setAxisDimention () {\n    let iapi = this,\n      components = iapi.getChildren(),\n      xAxis = components.xAxis && components.xAxis[0],\n      yAxis = components.yAxis && components.yAxis[0],\n      vyAxis = components.yAxis && components.yAxis[1],\n      canvasArr = components.canvas,\n      canvasConfig = canvasArr[0].config,\n      volumeCanvasConfig,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      axisLeft = canvasConfig.canvasLeft - canvasBorderWidth;\n    xAxis && xAxis.setAxisDimention({\n      x: canvasConfig.canvasLeft,\n      y: xAxis.config.isOpposit\n        ? canvasConfig.canvasTop - canvasBorderWidth\n        : canvasConfig.canvasY,\n      opposite: xAxis.config.isOpposit\n        ? canvasConfig.canvasY\n        : canvasConfig.canvasTop - canvasBorderWidth,\n      axisLength: canvasConfig.canvasWidth\n    });\n    yAxis && yAxis.setAxisDimention({\n      x: yAxis.config.isOpposit\n        ? canvasConfig.canvasRight + canvasBorderWidth : axisLeft,\n      y: canvasConfig.canvasTop,\n      opposite: yAxis.config.isOpposit\n        ? axisLeft : canvasConfig.canvasRight + canvasBorderWidth,\n      axisLength: canvasConfig.canvasHeight\n    });\n    xAxis.setCanvas(canvasConfig);\n    yAxis.setCanvas(canvasConfig);\n    if (iapi.config.showVolumeChart) {\n      volumeCanvasConfig = canvasArr[1].config;\n      vyAxis && vyAxis.setAxisDimention({\n        x: yAxis.config.isOpposit\n          ? volumeCanvasConfig.canvasRight + canvasBorderWidth : axisLeft,\n        y: volumeCanvasConfig.canvasTop,\n        opposite: yAxis.config.isOpposit\n          ? axisLeft : volumeCanvasConfig.canvasRight + canvasBorderWidth,\n        axisLength: volumeCanvasConfig.canvasHeight\n      });\n      vyAxis && vyAxis.setCanvas(volumeCanvasConfig);\n    }\n  }\n  /**\n   * function to parse JSON data for configurations of axis\n   * @return { Object } contains axis configuration\n   */\n  _feedAxesRawData () {\n    var iapi = this,\n      colorM = iapi.getFromEnv('color-manager'),\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      xAxisConf,\n      yAxisConf,\n      vYAxisConf,\n      yAxisConfigure = [],\n      xAxisConfigure = [],\n      is3D = iapi.config.is3D,\n      palleteString = is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    xAxisConf = {\n      isVertical: false,\n      isReverse: false,\n      isOpposit: isEqualString(chartAttrs.xaxisposition, 'top'),\n      drawTrendLabels: true,\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.xaxisnamepadding,\n      axisValuePadding: chartAttrs.labelpadding,\n      axisNameFont: chartAttrs.xaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.xaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.xaxisnamefontsize,\n      axisNameFontColor: chartAttrs.xaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.xaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.xaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.xaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.xaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.xaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.xaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.xaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.xaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.xaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.xaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.xaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.xaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.xaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.xaxisnameborderdashgap,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: pluck(chartAttrs.vdivlinecolor, chartAttrs.divlinecolor,\n        colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.vdivlinealpha, chartAttrs.divlinealpha,\n        is3D ? colorM.getColor(divLineAlpha3DStr) : colorM.getColor(divLineAlphaStr)),\n      divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed,\n        chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n      alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor(altVGridColorStr)),\n      alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor(altVGridAlphaStr)),\n      numDivLines: chartAttrs.numvdivlines,\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      labelBdrColor: chartAttrs.labelbordercolor,\n      labelBdrAlpha: chartAttrs.labelborderalpha,\n      labelLink: chartAttrs.labellink,\n      labelBgAlpha: chartAttrs.labelbgalpha,\n      labelBgColor: chartAttrs.labelbgcolor,\n      labelBdrThickness: chartAttrs.labelborderthickness,\n      labelBdrPadding: chartAttrs.labelborderpadding,\n      labelBdrRadius: chartAttrs.labelborderradius,\n      labelBdrDashed: chartAttrs.labelborderdashed,\n      labelBdrDashLen: chartAttrs.labelborderdashlen,\n      labelBdrDashGap: chartAttrs.labelborderdashgap,\n      axisName: chartAttrs.xaxisname,\n      axisMinValue: chartAttrs.xaxisminvalue,\n      axisMaxValue: chartAttrs.xaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptivexmin,\n      adjustDiv: chartAttrs.adjustvdiv,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: chartAttrs.showlabels,\n      rotateLabels: chartAttrs.rotatelabels,\n      slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      showLimits: chartAttrs.showvlimits,\n      showDivLineValues: pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues),\n      showZeroPlane: chartAttrs.showvzeroplane,\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      zeroPlaneThickness: chartAttrs.vzeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, COLOR_000000),\n      freezeLimit: true\n    };\n    xAxisConf.vtrendlines = dataObj.vtrendlines;\n    xAxisConfigure.push(xAxisConf);\n    yAxisConf = {\n      isVertical: true,\n      isReverse: true,\n      isOpposit: isEqualString(chartAttrs.yaxisposition, 'left'),\n      drawLabelsOpposit: 1,\n      axisNameAlignCanvas: 1,\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.yaxisnamepadding,\n      axisValuePadding: chartAttrs.yaxisvaluespadding,\n      axisNameFont: chartAttrs.pyaxisnamefont,\n      axisNameFontSize: chartAttrs.pyaxisnamefontsize,\n      axisNameFontSizeWithUnit: chartAttrs.pyaxisnamefontsize,\n      axisNameFontColor: chartAttrs.pyaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.pyaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.pyaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.pyaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.pyaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.pyaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.pyaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.pyaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.pyaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.pyaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.pyaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.pyaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.pyaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.pyaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.pyaxisnameborderdashgap,\n      axisNameWidth: chartAttrs.yaxisnamewidth,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n      axisName: chartAttrs.pyaxisname,\n      divLineColor: pluck(chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.divlinealpha, colorM.getColor(divLineAlphaStr)),\n      divLineThickness: pluckNumber(chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 1)),\n      divLineDashLen: pluckNumber(chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n      alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor(altHGridColorStr)),\n      alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor(altHGridAlphaStr)),\n      numDivLines: pluckNumber(chartAttrs.numpdivlines, 5),\n      axisMinValue: chartAttrs.pyaxisminvalue,\n      axisMaxValue: chartAttrs.pyaxismaxvalue,\n      setAdaptiveMin: pluckNumber(chartAttrs.setadaptiveymin, 1),\n      adjustDiv: chartAttrs.adjustdiv,\n      labelStep: chartAttrs.yaxisvaluesstep,\n      showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n      showLimits: pluckNumber(chartAttrs.showyaxislimits, chartAttrs.showlimits, iapi.showLimits),\n      showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n      showZeroPlane: chartAttrs.showzeroplane,\n      zeroPlaneColor: chartAttrs.zeroplanecolor,\n      zeroPlaneThickness: chartAttrs.zeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showyaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, COLOR_000000),\n      labelFont: chartAttrs.yaxisvaluefont,\n      labelFontSize: this.computeFontSize(chartAttrs.yaxisvaluefontsize),\n      labelFontSizeWithUnit: chartAttrs.yaxisvaluefontsize,\n      labelFontColor: chartAttrs.yaxisvaluefontcolor,\n      labelAlpha: chartAttrs.yaxisvaluealpha,\n      labelFontBold: chartAttrs.yaxisvaluefontbold,\n      labelFontItalic: chartAttrs.yaxisvaluefontitalic,\n      labelBdrColor: chartAttrs.yaxisvaluebordercolor,\n      labelBgAlpha: chartAttrs.yaxisvaluebgalpha,\n      labelBdrAlpha: chartAttrs.yaxisvalueborderalpha,\n      labelLink: chartAttrs.yaxisvaluelink,\n      labelBgColor: chartAttrs.yaxisvaluebgcolor,\n      labelBdrThickness: chartAttrs.yaxisvalueborderthickness,\n      labelBdrPadding: chartAttrs.yaxisvalueborderpadding,\n      labelBdrRadius: chartAttrs.yaxisvalueborderradius,\n      labelBdrDashed: chartAttrs.yaxisvalueborderdashed,\n      labelBdrDashLen: chartAttrs.yaxisvalueborderdashlen,\n      labelBdrDashGap: chartAttrs.yaxisvalueborderdashgap\n    };\n    yAxisConf.trendlines = dataObj.trendlines;\n    yAxisConfigure.push(yAxisConf);\n    if (iapi.config.showVolumeChart) {\n      vYAxisConf = {\n        isVertical: true,\n        isReverse: true,\n        isOpposit: isEqualString(chartAttrs.yaxisposition, 'left'),\n        axisIndex: 1,\n        drawLabelsOpposit: 1,\n        axisNameAlignCanvas: 1,\n        uniqueClassName: 1,\n        outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n        outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n        outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n        outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n          colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n        axisNamePadding: chartAttrs.yaxisnamepadding,\n        axisValuePadding: chartAttrs.yaxisvaluespadding,\n        axisNameFont: chartAttrs.vyaxisnamefont,\n        axisNameFontSize: chartAttrs.vyaxisnamefontsize,\n        axisNameFontSizeWithUnit: chartAttrs.vyaxisnamefontsize,\n        axisNameFontColor: chartAttrs.vyaxisnamefontcolor,\n        axisNameFontBold: chartAttrs.vyaxisnamefontbold,\n        axisNameFontItalic: chartAttrs.vyaxisnamefontitalic,\n        axisNameBgColor: chartAttrs.vyaxisnamebgcolor,\n        axisNameBorderColor: chartAttrs.vyaxisnamebordercolor,\n        axisNameAlpha: chartAttrs.vyaxisnamealpha,\n        axisNameFontAlpha: chartAttrs.vyaxisnamefontalpha,\n        axisNameBgAlpha: chartAttrs.vyaxisnamebgalpha,\n        axisNameBorderAlpha: chartAttrs.vyaxisnameborderalpha,\n        axisNameBorderPadding: chartAttrs.vyaxisnameborderpadding,\n        axisNameBorderRadius: chartAttrs.vyaxisnameborderradius,\n        axisNameBorderThickness: chartAttrs.vyaxisnameborderthickness,\n        axisNameBorderDashed: chartAttrs.vyaxisnameborderdashed,\n        axisNameBorderDashLen: chartAttrs.vyaxisnameborderdashlen,\n        axisNameBorderDashGap: chartAttrs.vyaxisnameborderdashgap,\n        axisNameWidth: chartAttrs.yaxisnamewidth,\n        useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n        rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n        axisName: chartAttrs.vyaxisname,\n        divLineColor: pluck(chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n        divLineAlpha: pluck(chartAttrs.divlinealpha, colorM.getColor(divLineAlphaStr)),\n        divLineThickness: pluckNumber(chartAttrs.divlinethickness, 1),\n        divLineIsDashed: Boolean(pluckNumber(chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 1)),\n        divLineDashLen: pluckNumber(chartAttrs.divlinedashlen, 4),\n        divLineDashGap: pluckNumber(chartAttrs.divlinedashgap, 2),\n        showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n        alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor(altHGridColorStr)),\n        alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor(altHGridAlphaStr)),\n        numDivLines: chartAttrs.numdivlines,\n        // @todo have to change the y axis max and min value afterwards when percentage axis is ready\n        axisMinValue: chartAttrs.vyaxisminvalue,\n        axisMaxValue: chartAttrs.vyaxismaxvalue,\n        setAdaptiveMin: chartAttrs.setadaptiveymin,\n        adjustDiv: chartAttrs.adjustdiv,\n        labelStep: chartAttrs.yaxisvaluesstep,\n        showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n        showLimits: pluckNumber(chartAttrs.showsecondarylimits, chartAttrs.showlimits),\n        showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n        showZeroPlane: chartAttrs.showzeroplane,\n        zeroPlaneColor: chartAttrs.zeroplanecolor,\n        zeroPlaneThickness: chartAttrs.zeroplanethickness,\n        zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n        showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n        trendlineColor: chartAttrs.trendlinecolor,\n        trendlineToolText: chartAttrs.trendlinetooltext,\n        trendlineThickness: chartAttrs.trendlinethickness,\n        trendlineAlpha: chartAttrs.trendlinealpha,\n        showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n        showAxisLine: pluckNumber(chartAttrs.showyaxisline, chartAttrs.showaxislines,\n          chartAttrs.drawAxisLines, 0),\n        axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n        axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n        axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, COLOR_000000),\n        labelFont: chartAttrs.yaxisvaluefont,\n        labelFontSize: this.computeFontSize(chartAttrs.yaxisvaluefontsize),\n        labelFontSizeWithUnit: chartAttrs.yaxisvaluefontsize,\n        labelFontColor: chartAttrs.yaxisvaluefontcolor,\n        labelAlpha: chartAttrs.yaxisvaluealpha,\n        labelFontBold: chartAttrs.yaxisvaluefontbold,\n        labelFontItalic: chartAttrs.yaxisvaluefontitalic,\n        labelBdrColor: chartAttrs.yaxisvaluebordercolor,\n        labelBgAlpha: chartAttrs.yaxisvaluebgalpha,\n        labelBdrAlpha: chartAttrs.yaxisvalueborderalpha,\n        labelLink: chartAttrs.yaxisvaluelink,\n        labelBgColor: chartAttrs.yaxisvaluebgcolor,\n        labelBdrThickness: chartAttrs.yaxisvalueborderthickness,\n        labelBdrPadding: chartAttrs.yaxisvalueborderpadding,\n        labelBdrRadius: chartAttrs.yaxisvalueborderradius,\n        labelBdrDashed: chartAttrs.yaxisvalueborderdashed,\n        labelBdrDashLen: chartAttrs.yaxisvalueborderdashlen,\n        labelBdrDashGap: chartAttrs.yaxisvalueborderdashgap\n      };\n      yAxisConfigure.push(vYAxisConf);\n    }\n    return { xAxisConfigure, yAxisConfigure };\n  }\n  mouseoutHandler (e, _lastDatasetIndex, _lastPointIndex) {\n    let chart = this,\n      datasets = chart.config.datasetOrder || chart.getDatasets(),\n      mouseTracker = chart.getChildren('mouseTracker')[0];\n    // check if the data plot exists. else hide all existing tooltips.\n    if (datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex].components.data[_lastPointIndex]) {\n      datasets[_lastDatasetIndex]._firePlotEvent(MOUSEOUT, _lastPointIndex, e);\n    } else {\n      chart.getFromEnv('toolTipController').hideAll();\n    }\n    // delete stored last ds details\n    delete mouseTracker._lastDatasetIndex;\n    delete mouseTracker._lastPointIndex;\n  }\n  /**\n   * This method delegates the handling of  mouse event to the chart's event handler\n   * @param  {Object} e The Event Object\n   * @param  {Object} data The Data Object\n   * @private\n   */\n  _mouseEvtHandler (e, data) {\n    var iapi = this,\n      mouseTracker = data.mouseTracker,\n      oriEvent = e.originalEvent,\n      canvasLen = iapi.getChildren('canvas').length, // eslint-disable-line good-practices/no-single-usage-variable\n      datasets,\n      coordinate = oriEvent && getMouseCoordinate(iapi.getFromEnv('chart-container'), oriEvent, iapi),\n      chartX = (coordinate && coordinate.chartX) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      chartY = (coordinate && coordinate.chartY) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      dataset,\n      hoveredInfo,\n      pointFound = false,\n      i,\n      j,\n      l,\n      derivedEvensInfo,\n      _lastDatasetIndex = mouseTracker._lastDatasetIndex,\n      _lastPointIndex = mouseTracker._lastPointIndex;\n    for (i = 0; i < canvasLen; i++) {\n      // todo make sure the datasets are as per their z-order\n      datasets = iapi.getDatasets();\n      j = datasets.length;\n      while (j-- && !pointFound) {\n        dataset = datasets[j];\n        if (dataset && dataset.getState('visible')) {\n          hoveredInfo = dataset._getHoveredPlot && dataset._getHoveredPlot(chartX, chartY);\n          if (hoveredInfo && hoveredInfo.hovered) {\n            pointFound = true;\n            hoveredInfo.datasetIndex = j;\n            derivedEvensInfo = mouseTracker.getMouseEvents(e, hoveredInfo.datasetIndex, hoveredInfo.pointIndex);\n          }\n        }\n      }\n    }\n\n    // todo instead of sending event names, create a event object of that type and send it\n\n    // fire out on last hovered plot\n    if ((!pointFound || (derivedEvensInfo && derivedEvensInfo.fireOut)) && typeof _lastDatasetIndex !== 'undefined') {\n      if (datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex]._firePlotEvent) {\n        // when mouseout is fired and there aren't any events that need to be fired over the current plot,\n        // call mouseouthamndler through settimeout.\n        if (derivedEvensInfo && !derivedEvensInfo.events.length) {\n          mouseTracker.mouseoutTimer = setTimeout(function () {\n            iapi.mouseoutHandler(e, _lastDatasetIndex, _lastPointIndex);\n          }, 20);\n        } else {\n          iapi.mouseoutHandler(e, _lastDatasetIndex, _lastPointIndex);\n          clearTimeout(mouseTracker.mouseoutTimer);\n        }\n      }\n\n      // todo scope to have sticky tracked tooltip\n    }\n    // fire remaining events\n    if (pointFound) {\n      l = derivedEvensInfo.events && derivedEvensInfo.events.length;\n      // Update only when events for current plot are present.\n      if (l) {\n      // store the index of the hovered DS and plot\n        mouseTracker._lastDatasetIndex = hoveredInfo.datasetIndex;\n        _lastPointIndex = mouseTracker._lastPointIndex = hoveredInfo.pointIndex;\n      }\n      for (j = 0; j < l; j += 1) {\n        dataset && dataset._firePlotEvent && dataset._firePlotEvent(derivedEvensInfo.events[j],\n          _lastPointIndex, e, hoveredInfo.datasetIndex);\n      }\n    }\n  }\n  /**\n   * allocate space for canvas\n   * @param  {Object} dimensions contains left, right, top, bottom co-ordinate (relative)\n   */\n  _allocateSpace (dimensions) {\n    var iapi = this,\n      canvas = iapi.getChildren('canvas'),\n      canvasConfig = canvas && canvas[0].config,\n      config = iapi.config,\n      canvasHeight = config.canvasHeight,\n      canvasWidth = config.canvasWidth,\n      canvasTop,\n      canvasLeft;\n\n    canvasLeft = config.canvasLeft += dimensions.left || 0; // eslint-disable-line good-practices/no-single-usage-variable\n    canvasTop = config.canvasTop += dimensions.top || 0; // eslint-disable-line good-practices/no-single-usage-variable\n    canvasWidth = config.canvasWidth =\n              mathMax(canvasWidth - ((dimensions.left || 0) + (dimensions.right || 0)), 0);\n    canvasHeight = config.canvasHeight =\n              mathMax(canvasHeight - ((dimensions.top || 0) + (dimensions.bottom || 0)), 0);\n\n    config.availableHeight = mathMax((config.availableHeight - ((dimensions.top || 0) + (dimensions.bottom || 0))),\n      0);\n    config.availableWidth = mathMax((config.availableWidth - ((dimensions.left || 0) + (dimensions.right || 0))), 0);\n    config.canvasRight = canvasLeft + canvasWidth;\n    config.canvasBottom = canvasTop + canvasHeight;\n\n    if (canvasConfig) {\n      canvasConfig.canvasPaddingLeft = mathMax(canvasConfig.canvasPaddingLeft, dimensions.paddingLeft || 0);\n      canvasConfig.canvasPaddingRight = mathMax(canvasConfig.canvasPaddingRight, dimensions.paddingRight || 0);\n      canvasConfig.canvasPaddingTop = mathMax(canvasConfig.canvasPaddingTop, dimensions.paddingTop || 0);\n      canvasConfig.canvasPaddingBottom = mathMax(canvasConfig.canvasPaddingBottom, dimensions.paddingBottom || 0);\n    }\n  }\n\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let datasetsJSON = this.getFromEnv('dataSource').dataset,\n      data = datasetsJSON && datasetsJSON[0] && datasetsJSON[0].data;\n    if (!datasetsJSON || !data || !Array.isArray(data)) {\n      return true;\n    }\n  }\n}\nexport default CandleStick;\n","import { pluck, parseUnsafeString, datasetFactory } from '@fusioncharts/core/src/lib';\nimport { TrendSet, VolumeDataset } from '../dataset/candlestick';\n/**\n * splice a given array with the given value\n * @param  {Array} array   on which splice opration will be executed\n * @param  {generic} value criteria to splice the array\n */\nlet arraySpliceByValue = (array, value) => {\n    let indexOf = array.indexOf(value);\n    if (indexOf !== -1) {\n      array.splice(indexOf, 1);\n    }\n  },\n  /**\n   * function to remove component if name is matched with value in set\n   * @param  {Object} component from where it would iterate\n   * @param  {Array} set        criteria; if matched then remove\n   */\n  removeComponents = (component, set) => {\n    let i;\n    component && component.iterateComponents((child) => {\n      for (i = 0; i < set.length; i++) {\n        if (child.getName() === set[i]) {\n          child.remove();\n        }\n      }\n    });\n  };\n/**\n * function to  create dataset\n * sort data wrt. x value\n * assign dataset to its parents\n **/\nexport default function (chart) {\n  let jsonData = chart.getFromEnv('dataSource'),\n    datasetsJSON = jsonData.dataset,\n    trendSet = jsonData.trendset,\n    showVolumeChart = chart.getFromEnv('chartConfig').showVolumeChart, // eslint-disable-line good-practices/no-single-usage-variable\n    dsType = pluck((parseUnsafeString(chart.getFromEnv('chart-attrib').plotpriceas)).toLowerCase(), 'candlestick'),\n    canvas = chart.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n    datasetParent = canvas.getChildren('vCanvas')[0],\n    volumeCanvas,\n    volumeDatasetParent,\n    sortedDatasetsJSON,\n    set = ['candlestick', 'candlestickbar', 'candlestickline', 'trendset'];\n\n  if (!datasetsJSON) {\n    chart.setChartMessage();\n    return;\n  }\n  sortedDatasetsJSON = datasetsJSON.slice(0);\n  sortedDatasetsJSON[0] && sortedDatasetsJSON[0].data &&\n    sortedDatasetsJSON[0].data.sort(function (a, b) { // eslint-disable-line good-practices/no-function-dependency\n      return a.x - b.x;\n    });\n  datasetFactory(datasetParent, chart.getDSdef(dsType), 'dataset_' + dsType, datasetsJSON.length, sortedDatasetsJSON);\n  if (dsType === 'bar') {\n    arraySpliceByValue(set, 'candlestickbar');\n  } else if (dsType === 'line') {\n    arraySpliceByValue(set, 'candlestickline');\n  } else {\n    arraySpliceByValue(set, 'candlestick');\n  }\n  if (showVolumeChart) {\n    volumeCanvas = chart.getChildren('canvas')[1];\n    volumeDatasetParent = volumeCanvas.getChildren('vCanvas')[0];\n    datasetFactory(volumeDatasetParent, VolumeDataset, 'dataset_volume', datasetsJSON.length, datasetsJSON);\n  }\n\n  if (trendSet) {\n    datasetFactory(datasetParent, TrendSet, 'dataset_trendset', trendSet.length, trendSet);\n    arraySpliceByValue(set, 'trendset');\n  }\n  removeComponents(datasetParent, set);\n}\n","import CandleStickDataset from './candlestick';\nimport CandleStickBarDataset from './candlestickbar';\nimport CandleStickLineDataset from './candlestickline';\nimport VolumeDataset from './volume';\nimport TrendSet from './trendset';\n\nexport { CandleStickDataset, CandleStickBarDataset,\n  CandleStickLineDataset, VolumeDataset, TrendSet };\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { pluck, pluckNumber, getValidValue, getDashStyle, getFirstColor,\n  parseUnsafeString, preDefStr, parseTooltext } from '@fusioncharts/core/src/lib';\n\nimport ErrorBar2DDataset from '../../dataset/errorbar2d';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport candlestickAnimation from './candlestick.animation';\nimport { _removePlots } from '@fusioncharts/charts/src/dataset/column';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_B90000 = colorStrings.B90000,\n  COLOR_FFFFFF = colorStrings.FFFFFF,\n  BLANKSTRING = '',\n  UNDEF,\n  DASH_DEF = 'none',\n  POINTER = 'pointer',\n  DEFAULT_CURSOR = 'default',\n  SHOWSHADOW = 'showShadow',\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  LINE = 'line',\n  BOLDSTARTTAG = '<b>',\n  BOLDENDTAG = '</b>',\n  BLANKSPACE = ' ',\n  BREAKSTRING = '<br />',\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType    name of the event\n   * @param {number} plotIndex    index of the plot where this event has been occured\n   * @param {Event}  e            reference of the original mouse event\n   */\n  _firePlotEvent = function (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      dataStore = dataset.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      data = dataStore[plotIndex],\n      toolText,\n      currentToolTip = dataset.config.currentToolTip,\n      setElement = data.graphics.element,\n      originalEvent = e.originalEvent,\n      style = chart.getFromEnv('paper').canvas.style,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      config,\n      setLink;\n    if (setElement) {\n      config = data.config;\n      toolText = config.toolText;\n      setLink = config.setLink;\n      switch (eventType) {\n        case 'fc-mouseover' :\n          if (toolText) {\n            if (currentToolTip) {\n              toolTipController.draw(originalEvent, toolText, currentToolTip);\n            } else {\n              currentToolTip = dataset.config.currentToolTip =\n                toolTipController.draw(originalEvent, toolText);\n            }\n          }\n          chart.plotEventHandler(setElement, e, ROLLOVER);\n          setLink && (style.cursor = POINTER);\n          break;\n        case 'fc-mouseout' :\n          toolTipController.hide(currentToolTip);\n          chart.plotEventHandler(setElement, e, ROLLOUT);\n          setLink && (style.cursor = DEFAULT_CURSOR);\n          break;\n        case 'fc-click' :\n          chart.plotEventHandler(setElement, e);\n          break;\n        case 'fc-mousemove' :\n          if (toolText) {\n            if (currentToolTip) {\n              toolTipController.draw(originalEvent, toolText, currentToolTip);\n            } else {\n              currentToolTip = dataset.config.currentToolTip = toolTipController.draw(originalEvent, toolText);\n            }\n          }\n      }\n    }\n  },\n  /**\n   * fetches data indices wrt. the x pos value\n   * @param {number} x  x pos value\n   * @return {Array}    contains indices\n   */\n  getPlotIndices = function (x) {\n    var dataset = this,\n      i,\n      minX = Math.floor(x), // eslint-disable-line good-practices/no-single-usage-variable\n      maxX = Math.ceil(x), // eslint-disable-line good-practices/no-single-usage-variable\n      data,\n      returnIndices = [],\n      sortedData = dataset.config.JSONData && dataset.config.JSONData.data;\n    for (i = sortedData.length; i--;) {\n      data = sortedData[i];\n      if (data.x >= minX && data.x <= maxX) {\n        returnIndices.push(i);\n      }\n    }\n    return returnIndices;\n  },\n  __parseToolText = function (i) {\n    var dataset = this,\n      conf = dataset.config,\n      data = dataset.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      isLine = conf.plotType === LINE ? 1 : 0,\n      toolText,\n      BLANK = BLANKSTRING,\n      setData = conf.JSONData.data[i],\n      config = data[i].config,\n      label = dataset.getFromEnv('xAxis').getLabel(config.x).label, // eslint-disable-line good-practices/no-single-usage-variable\n      open = config.open,\n      close = config.close,\n      yAxis = dataset.getFromEnv('yAxis'),\n      high = config.high,\n      low = config.low,\n      volume = config.volume,\n      volumeToolText = volume !== UNDEF ? setData.volumetooltext : UNDEF; // eslint-disable-line good-practices/no-single-usage-variable\n\n    // create the tooltext\n    if (!conf.showTooltip) {\n      toolText = BLANK;\n    } else {\n      toolText = getValidValue(parseUnsafeString(pluck(volumeToolText,\n        setData.tooltext, conf.volumeToolText, conf.toolText), false));\n\n      if (toolText !== UNDEF) {\n        toolText = parseTooltext(toolText, [3, 5, 6, 10, 54, 55, 56, 57, 58, 59, 60, 61, 81, 82], {\n          label: label,\n          yaxisName: parseUnsafeString(chartAttr.yaxisname),\n          xaxisName: parseUnsafeString(chartAttr.xaxisname),\n          openValue: setData.open,\n          openDataValue: yAxis.dataLabels(open),\n          closeValue: setData.close,\n          closeDataValue: yAxis.dataLabels(close),\n          highValue: setData.high,\n          highDataValue: yAxis.dataLabels(high),\n          lowValue: setData.low,\n          lowDataValue: yAxis.dataLabels(low),\n          volumeValue: setData.volume,\n          volumeDataValue: yAxis.dataLabels(volume)\n        }, setData, chartAttr);\n      } else {\n        toolText = (open !== null && !isLine) ? BOLDSTARTTAG + 'Open:' + BOLDENDTAG + BLANKSPACE +\n          yAxis.dataLabels(open) + BREAKSTRING : BLANK;\n        toolText += close !== null ? BOLDSTARTTAG + 'Close:' + BOLDENDTAG + BLANKSPACE +\n          yAxis.dataLabels(close) + BREAKSTRING : BLANK;\n        toolText += (high !== null && !isLine) ? BOLDSTARTTAG + 'High:' + BOLDENDTAG + BLANKSPACE +\n          yAxis.dataLabels(high) + BREAKSTRING : BLANK;\n        toolText += (low !== null && !isLine) ? BOLDSTARTTAG + 'Low:' + BOLDENDTAG + BLANKSPACE +\n          yAxis.dataLabels(low) + BREAKSTRING : BLANK;\n        toolText += volume !== null ? BOLDSTARTTAG + 'Volume:' + BOLDENDTAG + BLANKSPACE +\n          yAxis.dataLabels(volume) : BLANK;\n      }\n    }\n    return toolText;\n  };\n\naddDep({\n  name: 'candlestickAnimation',\n  type: 'animationRule',\n  extension: candlestickAnimation\n});\n/**\n* Class def for bull stick chart API\n* This dataset is reponsible for drawing stick depending on high and open value\n*/\nclass CandleStickDataset extends ErrorBar2DDataset {\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.components && this.components.data && this.components.data.length) {\n      return;\n    }\n    let comps = this.components,\n      prevData = comps && comps.data,\n      prevDataLength = prevData && prevData.length, // eslint-disable-line good-practices/no-single-usage-variable\n      data = datasetJSON.data,\n      currDataLength = (Array.isArray(data) && data.filter(v => (v.high || v.open || v.close || v.low)).length) || 0, // eslint-disable-line good-practices/no-function-dependency\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots\n    // is less than the existing ones.\n    if (dataDiff > 0) {\n      this.removeData(currDataLength, dataDiff, false);\n    }\n  }\n  /**\n   * This Api is used to remove all the data objects which are not required anymore.\n   * candleStick should use the removePlot of column dataset\n   * @memberof CandleStickDataset\n   */\n  removePlots () {\n    var dataset = this,\n      components = dataset.components,\n      removeDataArr = components && components.removeDataArr; // eslint-disable-line good-practices/no-single-usage-variable\n\n    _removePlots(removeDataArr, dataset.__removeElem);\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n\n    var dataset = this,\n      conf = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      JSONData = dataset.config.JSONData,\n      dataArr = JSONData.data || [],\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      dataLength = dataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      colorM = dataset.getFromEnv('color-manager'),\n      setColor,\n      setBorderColor,\n      setAlpha,\n      // Candle stick properties.\n      // Bear fill and border color - (Close lower than open)\n      bearBorderColor = conf.bearBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                  getFirstColor(pluck(chartAttr.bearbordercolor, COLOR_B90000)),\n      bearFillColor = conf.bearFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                  getFirstColor(pluck(chartAttr.bearfillcolor, COLOR_B90000)),\n      // Bull fill and border color - Close higher than open\n      bullBorderColor = conf.bullBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                  getFirstColor(pluck(chartAttr.bullbordercolor,\n                    colorM.getColor('canvasBorderColor'))),\n      bullFillColor = conf.bullFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n              getFirstColor(pluck(chartAttr.bullfillcolor,\n                COLOR_FFFFFF)),\n      // Line Properties - Serves as line for bar & line and border for candle stick\n      plotLineThickness = conf.linethickness = conf.plotBorderThickness =\n                  pluckNumber(chartAttr.plotlinethickness, 1),\n      plotLineDashLen = conf.plotLineDashLen = pluckNumber(chartAttr.plotlinedashlen, 5), // eslint-disable-line good-practices/no-single-usage-variable\n      plotLineDashGap = conf.plotLineDashGap = pluckNumber(chartAttr.plotlinedashgap, 4), // eslint-disable-line good-practices/no-single-usage-variable\n\n      pointShadow,\n      index,\n      dataObj,\n      open,\n      close,\n      high,\n      low,\n      volume,\n      minValue,\n      maxValue,\n      x,\n      closeVal,\n      borderColor,\n      yVal,\n      dataStore,\n      setData,\n      config,\n      isCandleStick = false, // eslint-disable-line good-practices/no-single-usage-variable\n      plotSpacePercent,\n      yMax = -Infinity,\n      yMin = +Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity,\n      userMaxColWidth;\n\n    dataset.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n\n    dataset._conatinerHidden = !!dataset.getState('visible');\n\n    conf.minAbsNonZeroValue = Infinity;\n    conf.minAbsNonZeroData = {};\n\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    conf.parentYAxis = 0;\n    conf.toolText = getValidValue(parseUnsafeString(pluck(JSONData.tooltext, chartAttr.plottooltext), false));\n    // Dataset seriesname\n    conf.name = getValidValue(JSONData.seriesname);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.showShadow = pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.showErrorValue = true;\n    conf.errorBarWidthPercent = 0;\n    isCandleStick = true; // eslint-disable-line good-practices/no-single-usage-variable\n    userMaxColWidth = pluck(chartAttr.maxcolwidth); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.maxColWidth = Math.abs(pluckNumber(\n      userMaxColWidth, 50)) || 1;\n    plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.plotSpacePercent = conf.groupPadding = plotSpacePercent / 200;\n    dataStore = dataset.components.data = dataset.components.data || (dataset.components.data = []);\n    conf.valuePadding = pluckNumber(JSONData.valuepadding, chartAttr.valuepadding, 2);\n    conf.plotBorderThickness = plotLineThickness;\n    // Iterate through all level data\n    for (index = 0; index < dataLength; index += 1) {\n      // Individual data obj\n      // for further manipulation\n      setData = dataArr[index];\n      dataObj = dataStore[index];\n      if (!dataObj) {\n        dataObj = dataStore[index] = {};\n      }\n      !dataObj.config && (dataObj.config = {});\n      !dataObj.graphics && (dataObj.graphics = {});\n      config = dataObj.config;\n      if (setData && !setData.vline) {\n        config.setLink = pluck(setData.link);\n        open = config.open = numberFormatter.getCleanValue(setData.open);\n        close = config.close = numberFormatter.getCleanValue(setData.close);\n        high = config.high = numberFormatter.getCleanValue(setData.high);\n        low = config.low = numberFormatter.getCleanValue(setData.low);\n        volume = config.volume = numberFormatter.getCleanValue(setData.volume, true);\n        if (volume !== null) {\n          chart.config.drawVolume = true;\n        }\n        x = config.x = numberFormatter.getCleanValue(setData.x);\n        // openVal = config.openVal = isCandleStick ? Math.abs(close - open) : open;\n        closeVal = config.closeVal = Math.min(open, close);\n        yVal = config.yVal = Math.max(open, close);\n        minValue = Math.min(open, close, high, low);\n        maxValue = Math.max(open, close, high, low);\n\n        config.valuePadding = pluckNumber(setData.valuepadding, conf.valuePadding);\n\n        // valueText = parseUnsafeString(getValidValue(setData.valuetext, BLANK));\n\n        setBorderColor = getFirstColor(pluck(setData.bordercolor, close < open ? bearBorderColor\n          : bullBorderColor));\n        setAlpha = pluckNumber(setData.alpha, 100);\n        setColor = getFirstColor(pluck(setData.color, close < open ? bearFillColor\n          : bullFillColor));\n        config.dashed = pluckNumber(setData.dashed, 0);\n        config.plotBorderDashStyle = pluckNumber(setData.dashed)\n          ? getDashStyle(plotLineDashLen, plotLineDashGap) : DASH_DEF;\n        // Set alpha of the shadow\n        pointShadow = {\n          opacity: conf.showShadow ? (setAlpha / 100) : 0\n        };\n        config.color = isCandleStick ? setColor : setBorderColor;\n        config.alpha = setAlpha;\n        /*\n       * Storing the set level color and set level alpha which is required in drawing of line\n       * In line we are checking setColor and setAlpha of current line segment is same as the previous\n       * line segment's setColor and setAlpha by accesing config.setColor and config.setAlpha\n       */\n        config.setColor = config.color;\n        config.setAlpha = config.alpha;\n        config.anchorImageUrl = pluck(setData.anchorimageurl, JSONData.anchorimageurl, chartAttr.anchorimageurl);\n        // Finally add the data\n        // we call getPointStub function that manage displayValue, toolText and link\n        borderColor = config.borderColor = setBorderColor;\n        config.borderAlpha = config.plotLineAlpha;\n        config.colorArr = [{\n          color: config.color,\n          alpha: config.alpha\n        },\n        {\n          color: config.borderColor,\n          alpha: config.borderAlpha\n        }];\n\n        config.showValue = 1;\n        config.hoverEffects = {};\n\n        config.y = Math.abs(close - open);\n        config.previousY = closeVal;\n        config.link = pluck(setData.link);\n        config.errorValueArr = [];\n        if (high - yVal > 0) {\n          config.errorValue = true;\n          config.errorValueArr.push({\n            errorValue: yVal - high,\n            errorStartValue: yVal,\n            errorBarColor: borderColor,\n            errorBarThickness: plotLineThickness,\n            opacity: 1\n          });\n        }\n        if (low - closeVal < 0) {\n          config.errorValue = true;\n          config.errorValueArr.push({\n            errorValue: closeVal - low,\n            errorStartValue: closeVal,\n            errorBarColor: borderColor,\n            errorBarThickness: plotLineThickness,\n            opacity: 1\n          });\n        }\n        config.setValue = yVal;\n\n        if (yVal !== 0 && conf.minAbsNonZeroValue > Math.abs(yVal)) {\n          conf.minAbsNonZeroValue = Math.abs(yVal);\n          conf.minAbsNonZeroData = config;\n        }\n\n        config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n\n        if (minValue !== null) {\n          yMax = Math.max(yMax, minValue);\n          yMin = Math.min(yMin, minValue);\n        }\n        if (maxValue !== null) {\n          yMax = Math.max(yMax, maxValue);\n          yMin = Math.min(yMin, maxValue);\n        }\n        if (x !== null) {\n          xMax = Math.max(xMax, x);\n          xMin = Math.min(xMin, x);\n        }\n\n        x = (x !== null) ? x : index + 1;\n        config._x = x;\n        config._y = yVal;\n        config._b = closeVal;\n        config.high = Math.max(open, close, high, low);\n        config.low = Math.min(open, close, high, low);\n        config.shadow = pointShadow;\n        config.toolText = dataset._parseToolText(index);\n        config.toolTipValue = BLANKSTRING;\n        config.displayValue = parseUnsafeString(pluck(setData.displayvalue,\n          setData.valuetext, BLANKSTRING));\n      }\n    }\n    conf.yMax = yMax;\n    conf.yMin = yMin;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    dataset.setState('dirty', true);\n  }\n  /**\n   * parse tooltext from the dataset json\n   * @param {number} i index of data\n   * @return {string} tooltext\n   */\n  _parseToolText (i) {\n    return __parseToolText.call(this, i);\n  }\n  /**\n   * Adds dataset Specific event Arguments\n   * @param {Object} _dataObj dataObject\n   */\n  // eslint-disable-next-line class-methods-use-this\n  addDatasetSpecificEvtArgs (_dataObj) {\n    let dataObj = _dataObj,\n      config = dataObj.config,\n      trackerConfig = dataObj.trackerConfig,\n      eventArgs = trackerConfig.eventArgs;\n    Object.assign(eventArgs, {\n      open: config.open,\n      close: config.close,\n      high: config.high,\n      low: config.low,\n      volume: config.volume,\n      alpha: config.alpha,\n      x: config.x,\n      displayValue: config.displayValue,\n      color: config.color,\n      borderColor: config.borderColor,\n      dashed: config.dashed\n    });\n  }\n  /**\n   * calculate min and max position to scroll\n   */\n  calculateScrollRange () {\n    let dataset = this,\n      conf = dataset.config,\n      dataLen = dataset.components.data && dataset.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    conf.scrollMinVal = conf.scrollMinValForLabel = 0;\n    conf.scrollMaxVal = conf.scrollMaxValForLabel = dataLen;\n  }\n  /**\n   * fetches data indices wrt. the x pos value\n   * @param {number} x  x pos value\n   * @return {Array}    contains indices\n   */\n  getPlotIndices (x) {\n    return getPlotIndices.call(this, x);\n  }\n  /**\n   * Function that retunr the nearest plot details\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY x-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest polt and whether it is hovered or not\n   */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      x,\n      i,\n      hoveredInfo,\n      pXs,\n      pX;\n\n    x = dataset.getFromEnv('xAxis').getValue(chartX);\n    pXs = dataset.getPlotIndices(x);\n\n    // Checking for overlap between two cosecutive column plots along x-axis\n    for (i = pXs.length - 1; i > -1; i--) {\n      pX = pXs[i];\n      hoveredInfo = (pX - x > 0 ? dataset._checkPointerOverPlot(pX, chartX, chartY) ||\n      dataset._checkPointerOverPlot(pX - 1, chartX, chartY)\n        : dataset._checkPointerOverPlot(pX + 1, chartX, chartY) ||\n            dataset._checkPointerOverPlot(pX, chartX, chartY));\n      if (hoveredInfo) {\n        break;\n      }\n    }\n    return hoveredInfo;\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType    name of the event\n   * @param {number} plotIndex    index of the plot where this event has been occured\n   * @param {Event}  e            reference of the original mouse event\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    _firePlotEvent.call(this, eventType, plotIndex, e);\n  }\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var conf = this.config;\n    return {\n      max: conf.yMax,\n      min: conf.yMin,\n      xMax: conf.xMax,\n      xMin: conf.xMin\n    };\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  getName () {\n    return 'candlestick';\n  }\n}\n\nexport default CandleStickDataset;\nexport { getPlotIndices, _firePlotEvent, __parseToolText as _parseToolText };\n","export default {\n  'initial.dataset.candlestick': function () {\n    return {\n      'rect.appearing': (inputJSON) => {\n        return [{\n          initialAttr: {\n            y: inputJSON.attr.y + inputJSON.attr.height,\n            height: 0\n          },\n          slot: 'plot'\n        }];\n      },\n      'group.appearing': (inputJSON) => {\n        if (inputJSON.attr.name === 'label-group') {\n          return [{\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'final'\n          }];\n        }\n        return [{\n          initialAttr: {\n            opacity: 1\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      '*': null\n    };\n  },\n  'initial.dataset.volume': function () {\n    return {\n      'rect.appearing': (inputJSON) => {\n        return [{\n          initialAttr: {\n            y: inputJSON.attr.y + inputJSON.attr.height,\n            height: 0\n          },\n          slot: 'plot'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { pluck, pluckNumber, getValidValue, getDashStyle, getFirstColor,\n  parseUnsafeString, preDefStr, toRaphaelColor } from '@fusioncharts/core/src/lib';\nimport Column from '@fusioncharts/charts/src/dataset/column';\nimport { _checkPointerOverPlot, _checkPointerOverErrorBar } from '../../dataset/errorbar2d';\nimport { getPlotIndices, _firePlotEvent, _parseToolText as __parseToolText } from './candlestick';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport candlestickbarAnimation from './candlestickbar.animation';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_B90000 = colorStrings.B90000,\n  COLOR_FFFFFF = colorStrings.FFFFFF,\n  SHOWSHADOW = 'showShadow',\n  ROUND = preDefStr.ROUND,\n  visibleStr = preDefStr.visibleStr,\n  DASH_DEF = 'none',\n  POINTER = 'pointer',\n  BLANKSTRING = '',\n  M = 'M',\n  L = 'L',\n  applyShadow = function (shadow) {\n    return function () {\n      this.shadow(shadow);\n    };\n  };\n\naddDep({\n  name: 'candlestickbarAnimation',\n  type: 'animationRule',\n  extension: candlestickbarAnimation\n});\n/**\n * Class def for bull stick chart API\n * This dataset is reponsible for drawing stick depending on high and open value\n */\nclass CandleStickBar extends Column {\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.components && this.components.data && this.components.data.length) {\n      return;\n    }\n    let comps = this.components,\n      prevData = comps && comps.data,\n      prevDataLength = prevData && prevData.length, // eslint-disable-line good-practices/no-single-usage-variable\n      data = datasetJSON.data,\n      currDataLength = (Array.isArray(data) && data.filter(v => (v.high || v.open || v.close || v.low)).length) || 0, // eslint-disable-line good-practices/no-function-dependency\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots\n    // is less than the existing ones.\n    if (dataDiff > 0) {\n      this.removeData(currDataLength, dataDiff, false);\n    }\n  }\n  /**\n   * Adds dataset Specific event Arguments\n   * @param {Object} _dataObj dataObject\n   */\n  // eslint-disable-next-line class-methods-use-this\n  addDatasetSpecificEvtArgs (_dataObj) {\n    let dataObj = _dataObj,\n      config = dataObj.config,\n      trackerConfig = dataObj.trackerConfig,\n      eventArgs = trackerConfig.eventArgs;\n    Object.assign(eventArgs, {\n      open: config.open,\n      close: config.close,\n      high: config.high,\n      low: config.low,\n      volume: config.volume,\n      alpha: config.alpha,\n      x: config.x,\n      displayValue: config.displayValue,\n      color: config.color,\n      borderColor: config.borderColor,\n      dashed: config.dashed\n    });\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n\n    var dataset = this,\n      conf = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      rawDataObj = chart.getFromEnv('dataSource'), // eslint-disable-line good-practices/no-single-usage-variable\n      JSONData = dataset.config.JSONData,\n      dataArr = JSONData.data || [],\n      chartAttr = rawDataObj.chart,\n      dataLength = dataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      colorM = dataset.getFromEnv('color-manager'),\n      setColor,\n      setBorderColor,\n      setAlpha,\n      // Candle stick properties.\n      // Bear fill and border color - (Close lower than open)\n      bearBorderColor = conf.bearBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearbordercolor, COLOR_B90000)),\n      bearFillColor = conf.bearFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearfillcolor, COLOR_B90000)),\n      // Bull fill and border color - Close higher than open\n      bullBorderColor = conf.bullBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bullbordercolor,\n                      colorM.getColor('canvasBorderColor'))),\n      bullFillColor = conf.bullFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                getFirstColor(pluck(chartAttr.bullfillcolor,\n                  COLOR_FFFFFF)),\n      index,\n      dataObj,\n      open,\n      close,\n      high,\n      low,\n      minValue,\n      maxValue,\n      x,\n      dataStore,\n      setData,\n      config,\n      isCandleStick = false, // eslint-disable-line good-practices/no-single-usage-variable\n      yMax = -Infinity,\n      yMin = +Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity,\n      userMaxColWidth;\n\n    dataset.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n\n    dataset._conatinerHidden = !!dataset.getState('visible');\n\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    conf.minAbsNonZeroValue = Infinity;\n    conf.minAbsNonZeroData = {};\n    conf.linethickness = pluckNumber(chartAttr.plotlinethickness, 2);\n    conf.toolText = getValidValue(parseUnsafeString(pluck(JSONData.tooltext, chartAttr.plottooltext), false));\n    // Dataset seriesname\n    conf.name = getValidValue(JSONData.seriesname);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n\n    conf.showErrorValue = true;\n    conf.errorBarWidthPercent = 0;\n    isCandleStick = true; // eslint-disable-line good-practices/no-single-usage-variable\n    userMaxColWidth = pluck(chartAttr.maxcolwidth); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.maxColWidth = Math.abs(pluckNumber(\n      userMaxColWidth, 50)) || 1;\n    // Animation related attributes configuration\n    conf.enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !conf.enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n\n    conf.plotLineDashLen = pluckNumber(chartAttr.plotlinedashlen, 5);\n    conf.plotLineDashGap = pluckNumber(chartAttr.plotlinedashgap, 4);\n    dataStore = dataset.components.data = dataset.components.data || (dataset.components.data = []);\n    conf.valuePadding = pluckNumber(JSONData.valuepadding, chartAttr.valuepadding, 2);\n    conf.showShadow = pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    // Iterate through all level data\n    for (index = 0; index < dataLength; index++) {\n      // Individual data obj\n      // for further manipulation\n      setData = dataArr[index];\n      dataObj = dataStore[index];\n      if (!dataObj) {\n        dataObj = dataStore[index] = {};\n      }\n      !dataObj.config && (dataObj.config = {});\n      !dataObj.graphics && (dataObj.graphics = {});\n      config = dataObj.config;\n      if (setData && !setData.vline) {\n        config.setLink = pluck(setData.link);\n        open = config.open = numberFormatter.getCleanValue(setData.open);\n        close = config.close = numberFormatter.getCleanValue(setData.close);\n        high = numberFormatter.getCleanValue(setData.high);\n        low = numberFormatter.getCleanValue(setData.low);\n        config.volume = numberFormatter.getCleanValue(setData.volume, true);\n        x = config.x = numberFormatter.getCleanValue(setData.x);\n        config.high = Math.max(open, close, high, low);\n        config.low = Math.min(open, close, high, low);\n        config.yVal = Math.max(open, close);\n        minValue = Math.min(open, close, high, low);\n        maxValue = Math.max(open, close, high, low);\n\n        config.valuePadding = pluckNumber(setData.valuepadding, conf.valuePadding);\n\n        // valueText = parseUnsafeString(getValidValue(setData.valuetext, BLANK));\n\n        setBorderColor = getFirstColor(pluck(setData.bordercolor, close < open ? bearBorderColor\n          : bullBorderColor));\n\n        setAlpha = pluckNumber(setData.alpha, 100);\n        setColor = getFirstColor(pluck(setData.color, close < open ? bearFillColor\n          : bullFillColor));\n\n        config.color = isCandleStick ? setColor : setBorderColor;\n        config.alpha = setAlpha;\n        /*\n         * Storing the set level color and set level alpha which is required in drawing of line\n         * In line we are checking setColor and setAlpha of current line segment is same as the previous\n         * line segment's setColor and setAlpha by accesing config.setColor and config.setAlpha\n         */\n        config.setColor = config.color;\n        config.setAlpha = config.alpha;\n        // Finally add the data\n        // we call getPointStub function that manage displayValue, toolText and link\n        config.borderColor = setBorderColor;\n        config.borderAlpha = config.plotLineAlpha;\n        config.colorArr = [{\n          color: config.color,\n          alpha: config.alpha\n        },\n        {\n          color: config.borderColor,\n          alpha: config.borderAlpha\n        }];\n        config.showValue = 1;\n        config.hoverEffects = {};\n        config.link = pluck(setData.link);\n        config.setValue = config.y;\n\n        if (config.setValue !== 0 && conf.minAbsNonZeroValue > Math.abs(config.setValue)) {\n          conf.minAbsNonZeroValue = Math.abs(config.setValue);\n          conf.minAbsNonZeroData = config;\n        }\n\n        config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n\n        if (minValue !== null) {\n          yMax = Math.max(yMax, minValue);\n          yMin = Math.min(yMin, minValue);\n        }\n        if (maxValue !== null) {\n          yMax = Math.max(yMax, maxValue);\n          yMin = Math.min(yMin, maxValue);\n        }\n        if (x !== null) {\n          xMax = Math.max(xMax, x);\n          xMin = Math.min(xMin, x);\n        }\n        config.dashStyle = pluckNumber(setData.dashed)\n          ? getDashStyle(conf.plotLineDashLen, conf.plotLineDashGap) : DASH_DEF;\n        config.shadow = {\n          opacity: conf.showShadow ? (setAlpha / 100) : 0\n        };\n        x = (x !== null) ? x : index + 1;\n        config.toolText = dataset._parseToolText(index);\n        config.toolTipValue = BLANKSTRING;\n        config._x = x;\n        config.y = open;\n        config.previousY = close;\n        config.dashed = pluckNumber(conf.plotLineDashed, setData.dashed, 0);\n      }\n    }\n    conf.yMax = yMax;\n    conf.yMin = yMin;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    dataset.setState('dirty', true);\n  }\n  /**\n   * functioto draw and update the graphics elements of plots\n   * @param {Object} anim    - object reference of animation manager argument\n   *                           consist of elements and their configuration\n   */\n  drawPlots () {\n    var dataset = this,\n      config,\n      animationManager = dataset.getFromEnv('animationManager'),\n      conf = dataset.config,\n      data = dataset.components.data,\n      length = data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      xAxis = dataset.getFromEnv('xAxis'), // eslint-disable-line good-practices/no-single-usage-variable\n      yAxis = dataset.getFromEnv('yAxis'),\n      // key,\n      i,\n      set,\n      setLink,\n      x,\n      y,\n      previousY,\n      xPos,\n      yPos,\n      previousYPos,\n      setElem,\n      bars,\n      trackerTolerance = conf.linethickness > 5 ? (conf.linethickness / 2) : 2.5,\n      container = dataset.getContainer('plotGroup'),\n      // hotElem,\n      // targetGroup,\n      highPos,\n      lowPos,\n      halfW,\n      path,\n      graphics;\n    animationManager.setAnimation({\n      el: container,\n      attr: {\n        opacity: dataset.getState('visible') ? 1 : 0\n      },\n      component: dataset\n    });\n\n    dataset.setColumnPosition();\n\n    // draw plots\n    for (i = 0; i < length; i += 1) {\n      set = data[i];\n      config = set.config;\n      graphics = set.graphics;\n      y = config.y;\n      setElem = null;\n\n      if (y === null) {\n        setElem = graphics.element;\n      } else {\n        // when valid value\n        x = config._x;\n        setLink = config.link;\n        config.setLink = config.link;\n        // fixedWidth = config._FCW * groupMaxWidth;\n\n        xPos = xAxis.getPixel(x);\n        previousY = config.previousY;\n        previousYPos = yAxis.getPixel(previousY);\n        yPos = yAxis.getPixel(y);\n        highPos = yAxis.getPixel(config.high);\n        lowPos = yAxis.getPixel(config.low);\n        halfW = dataset.getFromEnv('columnXShift');\n        set.errorBar = [];\n        bars = set.errorBar;\n        bars.push([{\n          _xPos: xPos - trackerTolerance,\n          _yPos: highPos,\n          _height: Math.abs(highPos - lowPos),\n          _width: 2 * trackerTolerance\n        },\n        {\n          _xPos: xPos + halfW,\n          _yPos: yPos,\n          _height: 2 * trackerTolerance,\n          _width: Math.abs(halfW)\n        },\n        {\n          _xPos: xPos,\n          _yPos: previousYPos,\n          _height: 2 * trackerTolerance,\n          _width: Math.abs(halfW)\n        }]);\n\n        path = [M, xPos, lowPos, L, xPos, highPos,\n          M, xPos, yPos, L, (xPos + halfW), yPos,\n          M, xPos, previousYPos, L, (xPos - halfW), previousYPos\n        ];\n        setElem = graphics.element;\n        setElem = animationManager.setAnimation({\n          el: setElem || 'path',\n          container: container,\n          attr: {\n            'path': path,\n            'cursor': setLink ? POINTER : BLANKSTRING,\n            fill: toRaphaelColor(config.color),\n            stroke: toRaphaelColor(config.borderColor),\n            'stroke-width': conf.linethickness,\n            'stroke-dasharray': config.dashStyle,\n            'stroke-linecap': ROUND,\n            'stroke-linejoin': ROUND,\n            'shape-rendering': 'crisp',\n            'visibility': visibleStr\n          },\n          label: 'path',\n          component: dataset,\n          callback: applyShadow.call(setElem, config.shadow)\n        });\n        setElem.data('eventArgs', set.trackerConfig.eventArgs);\n        graphics.element = setElem;\n      }\n    }\n  }\n  /**\n   * parse tooltext from the dataset json\n   * @param {number} i index of data\n   * @return {string} tooltext\n   */\n  _parseToolText (i) {\n    return __parseToolText.call(this, i);\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType    name of the event\n   * @param {number} plotIndex    index of the plot where this event has been occured\n   * @param {Event}  e            reference of the original mouse event\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    _firePlotEvent.call(this, eventType, plotIndex, e);\n  }\n  /**\n   * function to check if given x,y coordiante is over a column plot or not\n   */\n  // eslint-disable-next-line\n  _checkPointerOverColumn () {\n  }\n  /**\n   * Function that retunr the nearest plot details\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY y-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest polt and whether it is hovered or not\n   */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      x,\n      i,\n      hoveredInfo,\n      pXs,\n      pX;\n\n    x = dataset.getFromEnv('xAxis').getValue(chartX);\n    pXs = getPlotIndices.call(dataset, x);\n\n    // Checking for overlap between two cosecutive column plots along x-axis\n    for (i = pXs.length - 1; i > -1; i--) {\n      pX = pXs[i];\n      hoveredInfo = (pX - x > 0 ? dataset._checkPointerOverPlot(pX, chartX, chartY) ||\n      dataset._checkPointerOverPlot(pX - 1, chartX, chartY)\n        : dataset._checkPointerOverPlot(pX + 1, chartX, chartY) ||\n            dataset._checkPointerOverPlot(pX, chartX, chartY));\n      if (hoveredInfo) {\n        break;\n      }\n    }\n    return hoveredInfo;\n  }\n  /**\n   * Helper function of _getHoverPlot fn\n   * @param {number} pX     x index value\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY y-axis position of the mouse cordinate\n   * @return {Object}       return hover information\n   */\n  _checkPointerOverPlot (pX, chartX, chartY) {\n    return _checkPointerOverPlot.call(this, pX, chartX, chartY);\n  }\n  /**\n   * Helper function of _checkPointerOverPlot fn\n   * @param {number} pX     x index value\n   * @param {number} chartX x-axis position of the mouse cordinate\n   * @param {number} chartY y-axis position of the mouse cordinate\n   * @return {Object}       return hover information\n   */\n  _checkPointerOverErrorBar (pX, chartX, chartY) {\n    return _checkPointerOverErrorBar.call(this, pX, chartX, chartY);\n  }\n  /**\n    * This function overrides drawlabel method\n    * it prevents the label drawing\n    */\n  // eslint-disable-next-line\n  drawLabel () {\n  }\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var conf = this.config;\n    return {\n      max: conf.yMax,\n      min: conf.yMin,\n      xMax: conf.xMax,\n      xMin: conf.xMin\n    };\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  getName () {\n    return 'candlestickbar';\n  }\n}\n\nexport default CandleStickBar;\n","export default {\n  'initial.dataset.candlestickbar': function () {\n    return {\n      'path.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 1,\n            'stroke-width': 1\n          },\n          finalAttr: {\n            opacity: 1\n          }\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport { pluck, pluckNumber, getValidValue,\n  parseUnsafeString, preDefStr, getDashStyle, mapSymbolName, getFirstColor, BLANKSTRING } from '@fusioncharts/core/src/lib';\nimport Line from '@fusioncharts/charts/src/dataset/line';\nimport { _parseToolText as __parseToolText } from './candlestick';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_B90000 = colorStrings.B90000,\n  COLOR_FFFFFF = colorStrings.FFFFFF,\n  UNDERSCORE = '_',\n  BLANK = '',\n  SHOWSHADOW = 'showShadow',\n  LINE_STR = 'line',\n  ZEROSTRING = '0',\n  HUNDRED = '100';\n\n/**\n * Class def for bull stick chart API\n * This dataset is reponsible for drawing stick depending on high and open value\n */\nclass CandleStickline extends Line {\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n\n    var dataset = this,\n      conf = dataset.config,\n      JSONData = dataset.config.JSONData,\n      dataArr = JSONData.data || [],\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      dataLength = dataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      colorM = dataset.getFromEnv('color-manager'),\n      setColor,\n      setBorderColor,\n      setAlpha,\n      dashStyle,\n      // Candle stick properties.\n      // Bear fill and border color - (Close lower than open)\n      bearBorderColor = conf.bearBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearbordercolor, COLOR_B90000)),\n      bearFillColor = conf.bearFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearfillcolor, COLOR_B90000)),\n      // Bull fill and border color - Close higher than open\n      bullBorderColor = conf.bullBorderColor =\n                    getFirstColor(pluck(chartAttr.bullbordercolor,\n                      colorM.getColor('canvasBorderColor'))),\n      bullFillColor = conf.bullFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                getFirstColor(pluck(chartAttr.bullfillcolor,\n                  COLOR_FFFFFF)),\n      // Line Properties - Serves as line for bar & line and border for candle stick\n      plotLineThickness = conf.linethickness = conf.plotBorderThickness = // eslint-disable-line good-practices/no-single-usage-variable\n                    pluckNumber(chartAttr.plotlinethickness, 2),\n      // Anchor cosmetics in data points\n      // Getting anchor cosmetics for the data points or its default values\n      // The default value is different from flash in order to render a\n      // perfect circle when no anchorside is provided.\n      drawAnchors = !!pluckNumber(chartAttr.drawanchors, 0), // eslint-disable-line good-practices/no-single-usage-variable\n      setAnchorAngle = pluckNumber(chartAttr.anchorstartangle, 90), // eslint-disable-line good-practices/no-single-usage-variable\n      setAnchorRadius = pluckNumber(chartAttr.anchorradius, // eslint-disable-line good-practices/no-single-usage-variable\n        this.anchorRadius, 3),\n      setAnchorBorderColor = getFirstColor(pluck(chartAttr.anchorbordercolor, // eslint-disable-line good-practices/no-single-usage-variable\n        bullBorderColor)),\n      setAnchorBorderThickness = pluckNumber(chartAttr.anchorborderthickness, // eslint-disable-line good-practices/no-single-usage-variable\n        this.anchorBorderThickness, 1),\n      setAnchorBgColor = getFirstColor(pluck(chartAttr.anchorbgcolor, // eslint-disable-line good-practices/no-single-usage-variable\n        colorM.getColor('anchorBgColor'))),\n      setAnchorAlpha = pluck(chartAttr.anchoralpha, ZEROSTRING),\n      setAnchorBgAlpha = pluck(chartAttr.anchorbgalpha, setAnchorAlpha), // eslint-disable-line good-practices/no-single-usage-variable\n      pointShadow,\n      index,\n      dataObj,\n      open,\n      close,\n      high,\n      low,\n      minValue,\n      maxValue,\n      x,\n      dataStore,\n      setData,\n      config,\n      isCandleStick = false, // eslint-disable-line good-practices/no-single-usage-variable\n      plotSpacePercent,\n      yMax = -Infinity,\n      yMin = +Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity;\n    dataset.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n    conf.plotLineDashLen = pluckNumber(chartAttr.plotlinedashlen, 5);\n    conf.plotLineDashGap = pluckNumber(chartAttr.plotlinedashgap, 4);\n\n    dataset._conatinerHidden = !!dataset.getState('visible');\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    conf.plotType = LINE_STR;\n    conf.parentYAxis = 0;\n    conf.toolText = getValidValue(parseUnsafeString(pluck(JSONData.tooltext, chartAttr.plottooltext), false));\n    // Dataset seriesname\n    conf.name = getValidValue(JSONData.seriesname);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n\n    conf.maxColWidth = Math.abs(pluckNumber(\n      pluck(chartAttr.maxcolwidth), 50)) || 1;\n    // Animation related attributes configuration\n    conf.enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !conf.enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n    conf.lineAlpha = pluck(chartAttr.plotlinealpha, HUNDRED);\n    plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.plotSpacePercent = conf.groupPadding = plotSpacePercent / 200;\n    dataStore = dataset.components.data = dataset.components.data || (dataset.components.data = []);\n    conf.valuePadding = pluckNumber(JSONData.valuepadding, chartAttr.valuepadding, 2);\n    conf.plotBorderThickness = plotLineThickness;\n    conf.showvalues = 1;\n    conf.showShadow = pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    // Iterate through all level data\n    for (index = 0; index < dataLength; index += 1) {\n      // Individual data obj\n      // for further manipulation\n      setData = dataArr[index];\n      dataObj = dataStore[index];\n      if (!dataObj) {\n        dataObj = dataStore[index] = {};\n      }\n      !dataObj.config && (dataObj.config = {});\n      !dataObj.graphics && (dataObj.graphics = {});\n      config = dataObj.config;\n      if (setData && !setData.vline) {\n        config.setLink = pluck(setData.link);\n        open = config.open = numberFormatter.getCleanValue(setData.open);\n        close = config.close = numberFormatter.getCleanValue(setData.close);\n        high = config.high = numberFormatter.getCleanValue(setData.high);\n        low = config.low = numberFormatter.getCleanValue(setData.low);\n        config.volume = numberFormatter.getCleanValue(setData.volume, true);\n\n        x = config.x = numberFormatter.getCleanValue(setData.x);\n        // openVal = config.openVal = isCandleStick ? Math.abs(close - open) : open;\n        config.closeVal = Math.min(open, close);\n        config.yVal = Math.max(open, close);\n        minValue = Math.min(open, close, high, low);\n        maxValue = Math.max(open, close, high, low);\n\n        config.valuePadding = pluckNumber(setData.valuepadding, conf.valuePadding);\n\n        // valueText = parseUnsafeString(getValidValue(setData.valuetext, BLANK));\n        setBorderColor = getFirstColor(pluck(setData.bordercolor, close < open ? bearBorderColor\n          : bullBorderColor));\n        setAlpha = pluck(setData.alpha, conf.lineAlpha);\n        setColor = getFirstColor(pluck(setData.color, close < open ? bearFillColor\n          : bullFillColor));\n        dashStyle = pluckNumber(setData.dashed) ? getDashStyle(conf.plotLineDashLen,\n          conf.plotLineDashGap) : 'none';\n        config.dashStyle = dashStyle;\n        // Set alpha of the shadow\n        pointShadow = {\n          opacity: conf.showShadow ? (setAlpha / 100) : 0\n        };\n        config.rawDataColor = setColor;\n        config.color = isCandleStick ? setColor : setBorderColor;\n        config.alpha = setAlpha;\n        config.dashed = pluckNumber(conf.plotLineDashed, setData.dashed, 0);\n        /*\n         * Storing the set level color and set level alpha which is required in drawing of line\n         * In line we are checking setColor and setAlpha of current line segment is same as the previous\n         * line segment's setColor and setAlpha by accesing config.setColor and config.setAlpha\n         */\n        config.setColor = config.color;\n        config.setAlpha = config.alpha;\n        config.anchorImageUrl = pluck(setData.anchorimageurl, JSONData.anchorimageurl, chartAttr.anchorimageurl);\n        // Finally add the data\n        // we call getPointStub function that manage displayValue, toolText and link\n        config.borderColor = setBorderColor;\n        config.borderAlpha = config.plotLineAlpha;\n        config.colorArr = [{\n          color: config.color,\n          alpha: config.alpha\n        },\n        {\n          color: config.borderColor,\n          alpha: config.borderAlpha\n        }];\n\n        config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n\n        config.anchorSides = pluckNumber(setData.anchorsides, JSONData.anchorsides,\n          chartAttr.anchorsides);\n        config.symbol = mapSymbolName(config.anchorSides).split(UNDERSCORE);\n        config.anchorProps = {\n          enabled: drawAnchors,\n          bgColor: setAnchorBgColor,\n          symbol: config.symbol,\n          bgAlpha: ((setAnchorBgAlpha * setAnchorAlpha) / 100) + BLANK,\n          borderColor: setAnchorBorderColor,\n          borderAlpha: setAnchorAlpha,\n          anchorAlpha: setAnchorAlpha,\n          borderThickness: setAnchorBorderThickness,\n          imageUrl: config.anchorImageUrl,\n          radius: setAnchorRadius,\n          imageScale: pluckNumber(setData.imagescale, JSONData.imagescale, chartAttr.imagescale, 100),\n          imagePadding: pluckNumber(setData.anchorimagepadding, JSONData.anchorimagepadding,\n            chartAttr.anchorimagepadding, 1),\n          imageAlpha: pluckNumber(JSONData.anchorimagealpha, chartAttr.anchorimagealpha, 100),\n          startAngle: setAnchorAngle\n        };\n        config.showValue = setData.displayvalue ? 1 : 0;\n        config.hoverEffects = {};\n        config.anchorSides = pluckNumber(setData.anchorsides, JSONData.anchorsides,\n          chartAttr.anchorsides);\n        config.symbol = mapSymbolName(config.anchorSides).split(UNDERSCORE);\n\n        config.hoverEffects = {};\n        config.y = close;\n        config.link = pluck(setData.link);\n        config.toolText = dataset._parseToolText(index);\n        config.toolTipValue = BLANKSTRING;\n        config.setValue = config._y = config.y;\n        config.displayValue = parseUnsafeString(pluck(setData.displayvalue, setData.valuetext, BLANK));\n        if (minValue !== null) {\n          yMax = Math.max(yMax, minValue);\n          yMin = Math.min(yMin, minValue);\n        }\n        if (maxValue !== null) {\n          yMax = Math.max(yMax, maxValue);\n          yMin = Math.min(yMin, maxValue);\n        }\n        if (x !== null) {\n          xMax = Math.max(xMax, x);\n          xMin = Math.min(xMin, x);\n        }\n        x = x || index + 1;\n        config._x = config.x = x;\n\n        config.high = Math.max(open, close, high, low);\n        config.low = Math.min(open, close, high, low);\n        config.shadow = pointShadow;\n      }\n    }\n    conf.yMax = yMax;\n    conf.yMin = yMin;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    dataset.setState('dirty', true);\n  }\n  /**\n   * Sets the default value of attributes\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.drawLine = 1;\n  }\n  /**\n   * Adds dataset Specific event Arguments\n   * @param {Object} _dataObj dataObject\n   */\n  // eslint-disable-next-line class-methods-use-this\n  addDatasetSpecificEvtArgs (_dataObj) {\n    let dataObj = _dataObj,\n      config = dataObj.config,\n      eventArgs = dataObj.config.eventArgs;\n    Object.assign(eventArgs, {\n      open: config.open,\n      close: config.close,\n      high: config.high,\n      low: config.low,\n      volume: config.volume,\n      alpha: config.alpha,\n      x: config.x,\n      displayValue: config.displayValue,\n      color: config.rawDataColor,\n      borderColor: config.borderColor,\n      dashed: config.dashed\n    });\n  }\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.components && this.components.data && this.components.data.length) {\n      return;\n    }\n    let comps = this.components,\n      prevData = comps && comps.data,\n      prevDataLength = prevData && prevData.length, // eslint-disable-line good-practices/no-single-usage-variable\n      data = datasetJSON.data,\n      currDataLength = (Array.isArray(data) && data.filter(v => (v.high || v.open || v.close || v.low)).length) || 0, // eslint-disable-line good-practices/no-function-dependency\n      dataDiff = prevDataLength - currDataLength;\n\n    // Removing data plots if the number of current data plots\n    // is less than the existing ones.\n    if (dataDiff > 0) {\n      this.removeData(currDataLength, dataDiff, false);\n    }\n  }\n  /**\n   * calculate min and max position to scroll\n   */\n  calculateScrollRange () {\n    let dataset = this,\n      conf = dataset.config,\n      dataLen = dataset.components.data && dataset.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    conf.scrollMinVal = conf.scrollMinValForLabel = 0;\n    conf.scrollMaxVal = conf.scrollMaxValForLabel = dataLen;\n  }\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var conf = this.config;\n    return {\n      max: conf.yMax,\n      min: conf.yMin,\n      xMax: conf.xMax,\n      xMin: conf.xMin\n    };\n  }\n  /**\n   * fetches data indices wrt. the x pos value\n   * @param {number} x  x pos value\n   * @return {Array}    contains indices\n   */\n  getPlotIndices (x) {\n    var dataset = this,\n      i,\n      minX = Math.floor(x), // eslint-disable-line good-practices/no-single-usage-variable\n      maxX = Math.ceil(x), // eslint-disable-line good-practices/no-single-usage-variable\n      data,\n      returnIndices = [],\n      sortedData = dataset.config.JSONData && dataset.config.JSONData.data;\n\n    for (i = sortedData.length; i--;) {\n      data = sortedData[i];\n      if (data.x >= minX && data.x <= maxX) {\n        returnIndices.push(i);\n      }\n    }\n    return returnIndices;\n  }\n  /**\n   * parse tooltext from the dataset json\n   * @param {number} i index of data\n   * @return {string} tooltext\n   */\n  _parseToolText (i) {\n    return __parseToolText.call(this, i);\n  }\n  /**\n   * Function that return the nearest plot details\n   * @param   {number} chartXVal x-axis position of the mouse cordinate\n   * @param   {number} chartYVal y-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest plot and whether it is\n   *                   hovered or not\n   */\n  _getHoveredPlot (chartXVal, chartYVal) {\n    var dataset = this,\n      chartX = chartXVal,\n      chartY = chartYVal,\n      xAxis = dataset.getFromEnv('xAxis'),\n      dataStore = dataset.components.data,\n      pointObj,\n      pXs,\n      xMin,\n      xMax,\n      returnValue,\n      conf = dataset.config,\n      i,\n      maxRadius = (conf && conf.radius) || 0;\n\n    // getting new chart XY accordint to Translation of axis\n    chartX += xAxis.getTranslation();\n\n    pXs = dataset.getPlotIndices(Math.floor(Math.max(xAxis.getValue(chartX - maxRadius), 0)));\n    xMin = pXs[0];\n    pXs = dataset.getPlotIndices(Math.ceil(Math.min(xAxis.getValue(chartX + maxRadius), dataStore.length - 1)));\n    xMax = pXs[pXs.length - 1];\n\n    [xMin, xMax] = (xMin > xMax) ? [xMax, xMin] : [xMin, xMax];\n\n    for (i = xMax; i >= xMin; i--) {\n      pointObj = dataStore[i];\n      if (pointObj) {\n        returnValue = dataset.isWithinShape(pointObj, i, chartX, chartY);\n        if (returnValue) {\n          break;\n        }\n      }\n    }\n\n    return returnValue;\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  getName () {\n    return 'candlestickline';\n  }\n}\n\nexport default CandleStickline;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Column from '@fusioncharts/charts/src/dataset/column';\nimport { pluck, pluckNumber, getValidValue, extend2, getDashStyle,\n  parseUnsafeString, preDefStr, getFirstValue, getFirstColor, BLANKSTRING } from '@fusioncharts/core/src/lib';\nimport { _parseToolText as __parseToolText } from './candlestick';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_B90000 = colorStrings.B90000,\n  DASH_DEF = 'none',\n  SHOWSHADOW = 'showShadow',\n  COLOR_FFFFFF = colorStrings.FFFFFF;\n\n/**\n * Class def for bull candles chart API\n * This dataset is reponsible for drawing candle depending on open and close value\n */\nclass Volume extends Column {\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n\n    var dataset = this,\n      conf = dataset.config,\n      JSONData = dataset.config.JSONData,\n      dataArr = JSONData.data || [],\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      dataLength = dataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      colorM = dataset.getFromEnv('color-manager'),\n      setColor,\n      setAlpha,\n      pointShadow,\n      index,\n      dataObj,\n      open,\n      close,\n      volume,\n      x,\n      borderAlpha,\n      numberFormatterAttrs,\n      plotLineDashLen,\n      plotLineDashGap,\n      // Candle stick properties.\n      // Bear fill and border color - (Close lower than open)\n      bearBorderColor = conf.bearBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearbordercolor, chartConfig.vplotbordercolor, COLOR_B90000)),\n      bearFillColor = conf.bearFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bearfillcolor, COLOR_B90000)),\n      // Bull fill and border color - Close higher than open\n      bullBorderColor = conf.bullBorderColor = // eslint-disable-line good-practices/no-single-usage-variable\n                    getFirstColor(pluck(chartAttr.bullbordercolor, chartConfig.vplotbordercolor,\n                      colorM.getColor('canvasBorderColor'))),\n      bullFillColor = conf.bullFillColor = // eslint-disable-line good-practices/no-single-usage-variable\n                getFirstColor(pluck(chartAttr.bullfillcolor,\n                  COLOR_FFFFFF)),\n      showVPlotBorder = pluckNumber(chartConfig.showplotborder, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      // VPlotBorder is border properties for the volume chart.\n      vPlotBorderThickness = showVPlotBorder ? pluckNumber(chartAttr.vplotborderthickness, 1) : 0,\n      dataStore,\n      setData,\n      config,\n      plotSpacePercent,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      yMax = -Infinity,\n      yMin = +Infinity,\n      xMax = -Infinity,\n      xMin = +Infinity;\n    dataset.setState('visible', pluckNumber(JSONData.visible, 1) === 1);\n    if (dataset.getState('visible') === true) {\n      dataset._conatinerHidden = false;\n    } else {\n      dataset._containerHidden = true;\n    }\n\n    conf.minAbsNonZeroValue = Infinity;\n    conf.minAbsNonZeroData = {};\n\n    conf.parentYAxis = 1;\n    conf.volumeToolText = getValidValue(parseUnsafeString(pluck(JSONData.volumetooltext,\n      chartAttr.volumetooltext, chartAttr.plottooltext), false));\n    // Dataset seriesname\n    conf.name = getValidValue(JSONData.seriesname);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.showShadow = pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.maxColWidth = Math.abs(pluckNumber(\n      pluck(chartAttr.maxcolwidth), 50)) || 1;\n    plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.plotSpacePercent = conf.groupPadding = plotSpacePercent / 200;\n    conf.plotborderthickness = vPlotBorderThickness;\n    dataStore = dataset.components.data = dataset.components.data || (dataset.components.data = []);\n    numberFormatterAttrs = extend2(extend2({}, chartAttr), { // eslint-disable-line good-practices/no-single-usage-variable\n      sforcedecimals: getFirstValue(chartAttr.forcevdecimals,\n        chartAttr.forcedecimals),\n      sforceyaxisvaluedecimals: getFirstValue(\n        chartAttr.forcevyaxisvaluedecimals,\n        chartAttr.forceyaxisvaluedecimals),\n      syaxisvaluedecimals: getFirstValue(\n        chartAttr.vyaxisvaluedecimals,\n        chartAttr.yaxisvaluedecimals),\n      sformatnumber: getFirstValue(chartAttr.vformatnumber,\n        chartAttr.formatnumber),\n      sformatnumberscale: getFirstValue(\n        chartAttr.vformatnumberscale,\n        chartAttr.formatnumberscale, '1'),\n      sdefaultnumberscale: getFirstValue(\n        chartAttr.vdefaultnumberscale,\n        chartAttr.defaultnumberscale),\n      snumberscaleunit: getFirstValue(\n        chartAttr.vnumberscaleunit, chartAttr.numberscaleunit),\n      vnumberscalevalue: getFirstValue(\n        chartAttr.vnumberscalevalue,\n        chartAttr.numberscalevalue),\n      sscalerecursively: getFirstValue(\n        chartAttr.vscalerecursively,\n        chartAttr.scalerecursively),\n      smaxscalerecursion: getFirstValue(\n        chartAttr.vmaxscalerecursion,\n        chartAttr.maxscalerecursion),\n      sscaleseparator: getFirstValue(chartAttr.vscaleseparator,\n        chartAttr.scaleseparator),\n      snumberprefix: getFirstValue(chartAttr.vnumberprefix,\n        chartAttr.numberprefix),\n      snumbersuffix: getFirstValue(chartAttr.vnumbersuffix,\n        chartAttr.numbersuffix),\n      sdecimals: getFirstValue(chartAttr.vdecimals,\n        chartAttr.decimals)\n    });\n    plotLineDashLen = conf.plotLineDashLen = pluckNumber(chartAttr.plotlinedashlen, 5); // eslint-disable-line good-practices/no-single-usage-variable\n    plotLineDashGap = conf.plotLineDashGap = pluckNumber(chartAttr.plotlinedashgap, 4); // eslint-disable-line good-practices/no-single-usage-variable\n\n    dataset.getFromEnv('number-formatter').configure(numberFormatterAttrs);\n\n    // Iterate through all level data\n    for (index = 0; index < dataLength; index += 1) {\n      // Individual data obj\n      // for further manipulation\n      setData = dataArr[index];\n      dataObj = dataStore[index];\n      if (!dataObj) {\n        dataObj = dataStore[index] = {};\n      }\n      !dataObj.config && (dataObj.config = {});\n      !dataObj.graphics && (dataObj.graphics = {});\n      config = dataObj.config;\n      if (setData && !setData.vline) {\n        open = config.open = numberFormatter.getCleanValue(setData.open);\n        close = config.close = numberFormatter.getCleanValue(setData.close);\n        volume = config.volume = numberFormatter.getCleanValue(setData.volume, true);\n        config.high = numberFormatter.getCleanValue(setData.high);\n        config.low = numberFormatter.getCleanValue(setData.low);\n        x = config.x = numberFormatter.getCleanValue(setData.x);\n\n        yMax = Math.max(yMax, volume);\n        yMin = Math.min(yMin, volume);\n        xMax = Math.max(xMax, x);\n        xMin = Math.min(xMin, x);\n        // valueText = parseUnsafeString(getValidValue(setData.valuetext, BLANK));\n\n        config.borderColor = getFirstColor(pluck(setData.bordercolor, close < open ? bearBorderColor\n          : bullBorderColor));\n        setAlpha = pluckNumber(setData.alpha, 100);\n        borderAlpha = pluckNumber(chartConfig.vplotborderalpha, setData.alpha, 100);\n        setColor = getFirstColor(pluck(setData.color, close < open ? bearFillColor\n          : bullFillColor));\n        // Set alpha of the shadow\n        pointShadow = {\n          opacity: conf.showShadow ? (setAlpha / 100) : 0\n        };\n        config.color = setColor;\n        config.alpha = setAlpha;\n        config.setLink = setData.link;\n        config.borderWidth = vPlotBorderThickness;\n        config.borderAlpha = borderAlpha;\n        config.y = volume;\n        config.colorArr = [{\n          color: config.color,\n          alpha: config.alpha\n        },\n        {\n          color: config.borderColor,\n          alpha: config.borderAlpha\n        }];\n        config.toolText = dataset._parseToolText(index);\n        config.toolTipValue = BLANKSTRING;\n        config.setValue = config._y = config.y;\n        if (volume !== 0 && conf.minAbsNonZeroValue > Math.abs(volume)) {\n          conf.minAbsNonZeroValue = Math.abs(volume);\n          conf.minAbsNonZeroData = config;\n        }\n        config.dashed = pluckNumber(conf.plotLineDashed, setData.dashed, 0);\n        config.plotBorderDashStyle = pluckNumber(setData.dashed)\n          ? getDashStyle(plotLineDashLen, plotLineDashGap) : DASH_DEF;\n        x = (x !== null) ? x : index + 1;\n        config._x = x;\n        config.shadow = pointShadow;\n      }\n    }\n    conf.defaultPadding = {\n      left: 0,\n      right: 0\n    };\n    conf.yMax = yMax;\n    conf.yMin = yMin;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    dataset.setState('dirty', true);\n  }\n  /**\n   * parse tooltext from the dataset json\n   * @param {number} i index of data\n   * @return {string} tooltext\n   */\n  _parseToolText (i) {\n    return __parseToolText.call(this, i);\n  }\n  /**\n   * fetches data indices wrt. the x pos value\n   * @param {number} x  x pos value\n   * @return {Array}    contains indices\n   */\n  getPlotIndices (x) {\n    var dataset = this,\n      i,\n      minX = Math.floor(x), // eslint-disable-line good-practices/no-single-usage-variable\n      maxX = Math.ceil(x), // eslint-disable-line good-practices/no-single-usage-variable\n      data,\n      returnIndices = [],\n      sortedData = dataset.config.JSONData && dataset.config.JSONData.data;\n\n    for (i = sortedData.length; i--;) {\n      data = sortedData[i];\n      if (data.x >= minX && data.x <= maxX) {\n        returnIndices.push(i);\n      }\n    }\n    return returnIndices;\n  }\n  /**\n   * Function that retunr the nearest plot details\n   * @param {number} chartXVal x-axis position of the mouse cordinate\n   * @param {number} chartYVal x-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest polt and whether it is hovered or not\n   */\n  _getHoveredPlot (chartXVal, chartYVal) {\n    var dataset = this,\n      chartX = chartXVal,\n      chartY = chartYVal,\n      xAxis = dataset.getFromEnv('xAxis'),\n      x,\n      i,\n      hoveredInfo,\n      pXs,\n      pX;\n\n    chartX += xAxis.getTranslation();\n    x = xAxis.getValue(chartX);\n    pXs = dataset.getPlotIndices(x);\n    // Checking for overlap between two cosecutive column plots along x-axis\n    for (i = pXs.length - 1; i > -1; i--) {\n      pX = pXs[i];\n      hoveredInfo = (pX - x > 0 ? dataset._checkPointerOverColumn(pX, chartX, chartY) ||\n        dataset._checkPointerOverColumn(pX - 1, chartX, chartY)\n        : dataset._checkPointerOverColumn(pX + 1, chartX, chartY) ||\n              dataset._checkPointerOverColumn(pX, chartX, chartY));\n      if (hoveredInfo) {\n        break;\n      }\n    }\n    return hoveredInfo;\n  }\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var conf = this.config;\n    return {\n      max: conf.yMax,\n      min: conf.yMin,\n      xMax: conf.xMax,\n      xMin: conf.xMin\n    };\n  }\n  /**\n   * Adds dataset Specific event Arguments\n   * @param {Object} _dataObj dataObject\n   */\n  // eslint-disable-next-line class-methods-use-this\n  addDatasetSpecificEvtArgs (_dataObj) {\n    let dataObj = _dataObj,\n      config = dataObj.config,\n      trackerConfig = dataObj.trackerConfig,\n      eventArgs = trackerConfig.eventArgs;\n    Object.assign(eventArgs, {\n      open: config.open,\n      close: config.close,\n      high: config.high,\n      low: config.low,\n      volume: config.volume,\n      alpha: config.alpha,\n      x: config.x,\n      displayValue: config.displayValue,\n      color: config.color,\n      borderColor: config.borderColor,\n      dashed: config.dashed\n    });\n  }\n  /**\n   * calculate min and max position to scroll\n   */\n  calculateScrollRange () {\n    let dataset = this,\n      conf = dataset.config;\n    conf.scrollMinVal = 0;\n    conf.scrollMaxVal = dataset.components.data && dataset.components.data.length;\n\n    // Since panning and data skipping are not applicable for scatter and bubble charts, the labels'\n    // minimum and maximum index to be drawn is the same as the plots' minimum and maximum index.\n    conf.scrollMinValForLabel = conf.scrollMinVal;\n    conf.scrollMaxValForLabel = conf.scrollMaxVal;\n  }\n  /**\n    * This function overrides drawlabel method\n    * it prevents the label drawing\n    */\n  // eslint-disable-next-line\n  drawLabel () {\n  }\n  /**\n   * Returns the name of the component\n   *\n   * @return {string} The name of the component\n   */\n  getName () {\n    return 'volume';\n  }\n}\n\nexport default Volume;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Line from '@fusioncharts/charts/src/dataset/line';\nimport { pluck, pluckNumber, getValidValue,\n  getDashStyle, getFirstValue, toRaphaelColor, getFirstColor } from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport trendsetAnimation from './trendset.animation';\n\nlet HUNDRED = '100',\n  // The default value for stroke-dash attribute\n  DASH_DEF = 'none';\n\naddDep({\n  name: 'trendsetAnimation',\n  type: 'animationRule',\n  extension: trendsetAnimation\n});\n/**\n * Class def for bull candles chart API\n * This dataset is reponsible for drawing candle depending on open and close value\n */\nclass Trendset extends Line {\n  /**\n   * Sets the default value of drawLine to 1. This enables trendset component to draw the line.\n   *\n   * @memberof Trendset\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.drawLine = 1;\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    var dataset = this,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      trendset = dataset.config.JSONData,\n      index = dataset.index,\n      setDataArr = trendset.data || trendset.set || [],\n      conf = dataset.config,\n      dataObj,\n      itemValue,\n      dataStore = dataset.components.data,\n      dataStoreObj,\n      config,\n      maxValue = -Infinity,\n      minValue = +Infinity,\n      x,\n      length,\n      xMax = -Infinity,\n      xMin = +Infinity,\n      NumberFormatter = dataset.getFromEnv('number-formatter'),\n      // Trend-sets default properties\n      trendSetColor = getFirstColor(pluck(trendset.color, chartAttr.trendsetcolor, '666666')), // eslint-disable-line good-practices/no-single-usage-variable\n      trendSetAlpha = pluck(trendset.alpha, chartAttr.trendsetalpha, HUNDRED), // eslint-disable-line good-practices/no-single-usage-variable\n      trendSetThickness = pluckNumber(trendset.thickness, chartAttr.trendsetthickness, 2), // eslint-disable-line good-practices/no-single-usage-variable\n      trendSetDashed = Boolean(pluckNumber(trendset.dashed, chartAttr.trendsetdashed, 0)), // eslint-disable-line good-practices/no-single-usage-variable\n      trendSetDashLen = pluckNumber(trendset.dashlen, chartAttr.trendsetdashlen, 4), // eslint-disable-line good-practices/no-single-usage-variable\n      trendSetDashGap = pluckNumber(trendset.dashgap, chartAttr.trendsetdashgap, 4); // eslint-disable-line good-practices/no-single-usage-variable\n\n    conf.includeInLegend = pluckNumber(trendset.includeinlegend, 1);\n    conf.lineColor = trendSetColor;\n    conf.lineAlpha = trendSetAlpha;\n    conf.connectNullData = pluckNumber(chartAttr.connectnulldata, 0);\n    conf.linethickness = trendSetThickness;\n    conf.lineDashStyle = trendSetDashed ? getDashStyle(trendSetDashLen, trendSetDashGap) : DASH_DEF;\n    conf.name = getValidValue(trendset.name);\n    conf.includeInLegend = pluckNumber(trendset.includeinlegend, 1);\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    if (!dataStore) {\n      dataStore = dataset.components.data = [];\n    }\n    for (index = 0, length = setDataArr.length; index < length; index += 1) { // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj = setDataArr[index];\n      if (dataObj && !dataObj.vline) {\n        dataStoreObj = dataStore[index] = dataStore[index] || (dataStore[index] = {});\n        config = dataStoreObj.config = dataStoreObj.config || (dataStoreObj.config = {});\n        itemValue = config._y = config.setValue = NumberFormatter.getCleanValue(dataObj.value);\n        config.setColor = conf.lineColor;\n        config.setAlpha = conf.lineAlpha;\n        x = NumberFormatter.getCleanValue(dataObj.x);\n        x = config._x = config.x = x !== null ? x : index + 1;\n        maxValue = Math.max(maxValue, itemValue);\n        minValue = Math.min(minValue, itemValue);\n        xMin = Math.min(xMin, x);\n        xMax = Math.max(xMax, x);\n        // Parsing the anchor properties for set level\n        config.anchorProps = this._parseAnchorProperties(index);\n        config.hoverEffects = {};\n        if (!dataStoreObj.graphics) {\n          dataStoreObj.graphics = {};\n        }\n      }\n    }\n    conf.max = maxValue;\n    conf.min = minValue;\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    dataset.getFromEnv('chartConfig').showLegend && dataset._addLegend();\n    dataset.setState('visible', true);\n    dataset.setState('dirty', true);\n  }\n  /**\n   * Function to register datasets in the internal data store of legend class.\n   */\n  _addLegend () {\n    var dataset = this,\n      conf = dataset.config,\n      legendItem,\n      legend = dataset.getFromEnv('legend');\n    if (conf.includeinlegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n      } else {\n        legendItem.configure({ style: legend.config.itemStyle,\n          hiddenStyle: legend.config.itemHiddenStyle,\n          datasetVisible: legend.config.datasetVisible,\n          hoverStyle: legend.config.itemHoverStyle });\n      }\n      legendItem.configure({\n        enabled: conf.includeInLegend,\n        interactiveLegend: false,\n        type: dataset.type,\n        drawLine: true,\n        label: getFirstValue(dataset.config.JSONData.name)\n      });\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          stroke: toRaphaelColor({\n            color: conf.lineColor,\n            alpha: HUNDRED\n          }),\n          rawFillColor: conf.lineColor\n        }\n      });\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var conf = this.config;\n    return {\n      max: conf.max,\n      min: conf.min,\n      xMax: conf.xMax,\n      xMin: conf.xMin\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'trendset';\n  }\n  /**\n    * This function overrides drawlabel method\n    * it prevents the label drawing\n    */\n  // eslint-disable-next-line\n  drawLabel () {\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'trendset';\n  }\n}\n\nexport default Trendset;\n","import line from '@fusioncharts/charts/src/dataset/line/index.animation';\nexport default {\n  'initial.trendset.trendset': line['initial.dataset.line']\n};\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport NumericAxis from '@fusioncharts/core/src/axis/numeric';\n\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvasArr = chart.getChildren('canvas'),\n    canvas = canvasArr[0],\n    canvasVolume = canvasArr[1],\n    showVolumeChart = chart.config.showVolumeChart,\n    zoomObj = {\n      zoomable: true,\n      pannable: true\n    },\n    conf,\n    axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n    axisRefVisualCartesianVol,\n    vYAxis,\n    yAxis,\n    xAxis,\n    redraw = () => axisRefVisualCartesian.asyncDraw(),\n    redrawVol = () => axisRefVisualCartesianVol.asyncDraw();\n\n  conf = chart._feedAxesRawData();\n  componentFactory(chart, NumericAxis, 'yAxis', showVolumeChart ? 2 : 1, conf.yAxisConfigure);\n  componentFactory(chart, NumericAxis, 'xAxis', 1, conf.xAxisConfigure);\n\n  yAxis = chart.getChildren('yAxis')[0];\n  vYAxis = chart.getChildren('yAxis')[1];\n  yAxis.setAxisConfig({\n    relativeAxis: vYAxis\n  });\n  vYAxis && vYAxis.setAxisConfig({\n    relativeAxis: yAxis\n  });\n  xAxis = chart.getChildren('xAxis')[0];\n\n  yAxis.setLinkedItem('canvas', canvas);\n  xAxis.setLinkedItem('canvas', canvas);\n\n  axisRefVisualCartesian.setLinkedItem(yAxis.getId(), yAxis);\n  axisRefVisualCartesian.setLinkedItem(xAxis.getId(), xAxis);\n\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, yAxis);\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, xAxis);\n\n  canvas.attachAxis(xAxis, false, chart.zoomX ? zoomObj : {});\n  canvas.attachAxis(yAxis, true, chart.zoomY ? zoomObj : {});\n  if (showVolumeChart) {\n    axisRefVisualCartesianVol = canvasVolume.getChildren('axisRefVisualCartesian')[0];\n    canvasVolume.attachAxis(xAxis, false, chart.zoomX ? zoomObj : {});\n\n    vYAxis.setLinkedItem('canvas', canvasVolume);\n    axisRefVisualCartesianVol.setLinkedItem(vYAxis.getId(), vYAxis);\n    axisRefVisualCartesianVol.setLinkedItem(xAxis.getId(), xAxis);\n    axisRefVisualCartesianVol.addExtEventListener('visiblerangeset', redrawVol, vYAxis);\n    axisRefVisualCartesianVol.addExtEventListener('visiblerangeset', redrawVol, xAxis);\n    canvasVolume.attachAxis(vYAxis, true, chart.zoomY ? zoomObj : {});\n  }\n\n  chart._setCategories();\n}\n","import Boxandwhisker2d from '@fusioncharts/powercharts/src/chart/boxandwhisker2d';\nexport default Boxandwhisker2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  COMMA,\n  pluck,\n  preDefStr,\n  attrTypeNum,\n  pluckNumber,\n  HUNDREDSTRING,\n  setAttribDefs\n} from '@fusioncharts/core/src/lib';\nimport extent from '@fusioncharts/utils/src/array/extent';\nimport MSColumn2D from '@fusioncharts/charts/src/chart/mscolumn2d';\nimport { scrollTo, setAxisScale, resetViewPortConfig, configurer }\n  from '@fusioncharts/charts/src/chart/_internal/utils/scroll-apis';\nimport BoxAndWhiskerDataset from '../../dataset/boxandwhisker';\nimport datasetFactory from '../../factories/boxandwhisker-dataset';\nimport BoxAndWhiskerMultiSeriesGroup from '../../dataset/groups/boxandwhisker-multiseries';\n\nsetAttribDefs && setAttribDefs({\n  whiskerslimitswidthratio: {\n    type: attrTypeNum,\n    pAttr: 'whiskerslimitswidthratio'\n  },\n  outliersupperrangeratio: {\n    type: attrTypeNum,\n    pAttr: 'outliersupperrangeratio'\n  },\n  outlierslowerrangeratio: {\n    type: attrTypeNum,\n    pAttr: 'outlierslowerrangeratio'\n  },\n  showalloutliers: {\n    type: attrTypeNum,\n    pAttr: 'showalloutliers'\n  },\n  showmean: {\n    type: attrTypeNum,\n    pAttr: 'showmean'\n  },\n  showsd: {\n    type: attrTypeNum,\n    pAttr: 'showsd'\n  },\n  showmd: {\n    type: attrTypeNum,\n    pAttr: 'showmd'\n  },\n  showqd: {\n    type: attrTypeNum,\n    pAttr: 'showqd'\n  },\n  showminvalues: {\n    type: attrTypeNum,\n    pAttr: 'showminvalues'\n  },\n  showmaxvalues: {\n    type: attrTypeNum,\n    pAttr: 'showmaxvalues'\n  },\n  showq1values: {\n    type: attrTypeNum,\n    pAttr: 'showq1values'\n  },\n  showq3values: {\n    type: attrTypeNum,\n    pAttr: 'showq3values'\n  },\n  showmedianvalues: {\n    type: attrTypeNum,\n    pAttr: 'showmedianvalues'\n  }\n});\nlet UNDEF,\n  POLYGON = preDefStr.POLYGON,\n  COLOR_000000 = preDefStr.colors.c000000,\n  BOXANDWHISKER_2D = 'boxandwhisker2d',\n  ABOVE = 'above',\n  COLON_STR = ': ';\n/**\n * class for Marimekko chartAPI\n */\nclass BoxAndWhisker2D extends MSColumn2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'BoxAndWhisker2D';\n  }\n  /**\n   * Provides the name of the chart\n   * @return {string} The name of the chart extension\n   */\n  getName () {\n    return 'BoxAndWhisker2D';\n  }\n\n  /**\n   * Function to state if inputOptions are to be used for this charts\n   * @return {Array} value\n   */\n  static includeInputOptions () {\n    return ['SwipeGesture'];\n  }\n\n  /**\n   * Constructor funtion for Marimekko chartAPI\n   */\n  constructor () {\n    super();\n    let iapi = this;\n    iapi.maxColWidth = +Infinity;\n    iapi.useErrorAnimation = 1;\n    iapi.avoidCrispError = 0;\n    iapi.plotSpacePercent = 20;\n    iapi.useplotgradientcolor = 1;\n    iapi.fireGroupEvent = true;\n    iapi.hasScroll = true;\n    iapi.eiMethods.scrollTo = scrollTo;\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n\n  /**\n   * Set default chart configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.avgScrollPointWidth = 40;\n    config.decimals = 2;\n    config.defaultDatasetType = BOXANDWHISKER_2D;\n    config.showplotborder = 1;\n    config.plotborderdashlen = 5;\n    config.plotborderdashgap = 4;\n    config.plotfillalpha = HUNDREDSTRING;\n    config.useroundedges = 0;\n    config.plotborderthickness = 1;\n    config.showvalues = 1;\n    config.valuepadding = 2;\n    config.decimals = 2;\n    config.showtooltip = 1;\n    config.maxcolwidth = 50;\n    config.rotatevalues = 0;\n    config.use3dlighting = 1;\n    config.whiskerslimitswidthratio = 40;\n    config.outliersupperrangeratio = 0;\n    config.outlierslowerrangeratio = 0;\n    config.showalloutliers = 0;\n    config.showmean = 0;\n    config.showsd = 0;\n    config.showmd = 0;\n    config.showqd = 0;\n    config.showminvalues = 1;\n    config.showmaxvalues = 1;\n    config.showq1values = 0;\n    config.showq3values = 0;\n    config.showmedianvalues = 1;\n    config.tooltipsepchar = COLON_STR;\n\n    // default attributes of line\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEF;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEF;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEF;\n    config.anchorbordercolor = UNDEF;\n    config.anchorradius = 3;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEF;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n  }\n\n  /**\n   * function to create component and configure and also configure the chart\n   * It creates components which are depend on data and configure them and also configure chart\n   * It calls helper function namely, configure\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    configurer.call(this, dataObj);\n  }\n\n  /**\n   * Sets xAxis scale visible region\n   */\n  _setAxisScale () {\n    setAxisScale.call(this, BOXANDWHISKER_2D);\n  }\n\n  /**\n   * Reset view port\n   */\n  _resetViewPortConfig () {\n    resetViewPortConfig.call(this);\n  }\n\n  /**\n   * Function to return the custom json data for the mean, meadian, etc (line dataset) of boxAndWhisker\n   * @return {Object} The custom JSON Data\n   */\n  _getLineJSONdata () {\n    var iapi = this,\n      bwCalc = iapi.getChildren('BoxAndWhiskerStatisticalCalc')[0],\n      jsonData = iapi.getFromEnv('dataSource'),\n      chartAttrs = jsonData.chart,\n      datasets = jsonData.dataset,\n      len = datasets.length, // eslint-disable-line good-practices/no-single-usage-variable\n      showMean,\n      dataset,\n      data,\n      dataLen,\n      setData,\n      derivedDS = [],\n      currDerivedDS,\n      requiredSubDs = [],\n      derivedDataValue = [],\n      currDerivedDataVal,\n      subDSLen,\n      currSubDS,\n      showSD,\n      showQD,\n      showMD,\n      outliers,\n      outliersArr,\n      valueMin,\n      valueMax,\n      value,\n      meanValue,\n      sdValue,\n      mdValue,\n      qdValue,\n      fn = function (val) {\n        value = Number(val);\n\n        [valueMin, valueMax] = bwCalc.values ? extent(bwCalc.values) : [setData.min, setData.max];\n        (value < valueMin || value > valueMax) && outliersArr.push({\n          showvalue: setData.showoutliervalue,\n          valueposition: setData.outliervalueposition,\n          value: value,\n          index: j,\n          anchorbgcolor: setData.outliericoncolor,\n          anchorbordercolor: setData.outliericonbordercolor,\n          anchorradius: setData.outliericonradius,\n          anchoralpha: setData.outliericonalpha,\n          anchorbgalpha: setData.outliericonalpha,\n          anchorsides: setData.outliericonsides,\n          dip: setData.outliericonshape\n        });\n      },\n      j,\n      k,\n      i;\n\n    // Deciding for which which all datasets we need which all sub-datasets\n    for (i = 0; i < len; i++) {\n      dataset = datasets[i];\n      currSubDS = requiredSubDs[i] = {};\n      currDerivedDataVal = derivedDataValue[i] = {\n        showMean: {\n          seriesname: 'Mean',\n          valueposition: pluck(dataset.meanvalueposition, chartAttrs.meanvalueposition, ABOVE),\n          showvalues: pluckNumber(dataset.showmeanvalues, chartAttrs.showmeanvalues, 0),\n          anchorbgcolor: pluck(dataset.meaniconcolor, chartAttrs.meaniconcolor, COLOR_000000),\n          anchorbordercolor: pluck(dataset.meaniconbordercolor, chartAttrs.meaniconbordercolor, COLOR_000000),\n          anchorradius: pluckNumber(dataset.meaniconradius, chartAttrs.meaniconradius, 5),\n          anchoralpha: pluck(dataset.alpha, dataset.meaniconalpha, chartAttrs.meaniconalpha),\n          linethickness: pluck(dataset.linethickness, chartAttrs.linethickness, 1),\n          anchorsides: pluck(dataset.meaniconsides, chartAttrs.meaniconsides, 3),\n          showline: !pluckNumber(dataset.drawmeanconnector, chartAttrs.drawmeanconnector),\n          dip: pluck(dataset.meaniconshape, chartAttrs.meaniconshape, POLYGON),\n          color: pluck(dataset.meaniconcolor, chartAttrs.meaniconcolor, COLOR_000000),\n          data: []\n        },\n        showSD: {\n          seriesname: 'SD',\n          valueposition: pluck(dataset.sdvalueposition, chartAttrs.sdvalueposition, ABOVE),\n          showvalues: pluckNumber(dataset.showsdvalues, chartAttrs.showsdvalues, 0),\n          anchorbgcolor: pluck(dataset.sdiconcolor, chartAttrs.sdiconcolor, COLOR_000000),\n          anchorbordercolor: pluck(dataset.sdiconbordercolor, chartAttrs.sdiconbordercolor, COLOR_000000),\n          anchorradius: pluckNumber(dataset.sdiconradius, chartAttrs.sdiconradius, 5),\n          anchoralpha: pluck(dataset.alpha, dataset.sdiconalpha, chartAttrs.sdiconalpha),\n          anchorbgalpha: pluck(dataset.sdiconalpha, chartAttrs.sdiconalpha, 100),\n          linethickness: pluck(dataset.linethickness, chartAttrs.linethickness, 1),\n          anchorsides: pluck(dataset.sdiconsides, chartAttrs.sdiconsides, 3),\n          showline: !pluckNumber(dataset.drawsdconnector, chartAttrs.drawsdconnector),\n          dip: pluck(dataset.sdiconshape, chartAttrs.sdiconshape, POLYGON),\n          color: pluck(dataset.sdiconcolor, chartAttrs.sdiconcolor, COLOR_000000),\n          data: []\n        },\n        showQD: {\n          seriesname: 'QD',\n          valueposition: pluck(dataset.qdvalueposition, chartAttrs.qdvalueposition, ABOVE),\n          showvalues: pluckNumber(dataset.showqdvalues, chartAttrs.showqdvalues, 0),\n          anchorbgcolor: pluck(dataset.qdiconcolor, chartAttrs.qdiconcolor, COLOR_000000),\n          anchorbordercolor: pluck(dataset.qdiconbordercolor, chartAttrs.qdiconbordercolor, COLOR_000000),\n          anchorradius: pluckNumber(dataset.qdiconradius, chartAttrs.qdiconradius, 5),\n          anchoralpha: pluck(dataset.alpha, dataset.qdiconalpha, chartAttrs.qdiconalpha),\n          anchorbgalpha: pluck(dataset.qdiconalpha, chartAttrs.qdiconalpha, 100),\n          linethickness: pluck(dataset.linethickness, chartAttrs.linethickness, 1),\n          anchorsides: pluck(dataset.qdiconsides, chartAttrs.qdiconsides, 3),\n          showline: !pluckNumber(dataset.drawqdconnector, chartAttrs.drawqdconnector),\n          dip: pluck(dataset.qdiconshape, chartAttrs.qdiconshape, POLYGON),\n          color: pluck(dataset.qdiconcolor, chartAttrs.qdiconcolor, COLOR_000000),\n          data: []\n        },\n        showMD: {\n          seriesname: 'MD',\n          valueposition: pluck(dataset.mdvalueposition, chartAttrs.mdvalueposition, ABOVE),\n          showvalues: pluckNumber(dataset.showmdvalues, chartAttrs.showmdvalues, 0),\n          anchorbgcolor: pluck(dataset.mdiconcolor, chartAttrs.mdiconcolor, COLOR_000000),\n          anchorbordercolor: pluck(dataset.mdiconbordercolor, chartAttrs.mdiconbordercolor, COLOR_000000),\n          anchorradius: pluckNumber(dataset.mdiconradius, chartAttrs.mdiconradius, 5),\n          anchoralpha: pluck(dataset.alpha, dataset.mdiconalpha, chartAttrs.mdiconalpha),\n          anchorbgalpha: pluck(dataset.mdiconalpha, chartAttrs.mdiconalpha, 100),\n          linethickness: pluck(dataset.linethickness, chartAttrs.linethickness, 1),\n          anchorsides: pluck(dataset.mdiconsides, chartAttrs.mdiconsides, 3),\n          showline: !pluckNumber(dataset.drawmdconnector, chartAttrs.drawmdconnector),\n          dip: pluck(dataset.mdiconshape, chartAttrs.mdiconshape, POLYGON),\n          color: pluck(dataset.mdiconcolor, chartAttrs.mdiconcolor, COLOR_000000),\n          data: []\n        },\n        outliers: {\n          seriesname: 'Outliers',\n          valueposition: pluck(dataset.outliervalueposition, chartAttrs.outliervalueposition, ABOVE),\n          showvalues: pluckNumber(dataset.showoutliervalues, chartAttrs.showoutliervalues, 0),\n          anchorbgcolor: pluck(dataset.outliericoncolor, chartAttrs.outliericoncolor, COLOR_000000),\n          anchorbordercolor: pluck(dataset.outliericonbordercolor, chartAttrs.outliericonbordercolor, COLOR_000000),\n          anchorradius: pluckNumber(dataset.outliericonradius, chartAttrs.outliericonradius, 5),\n          anchoralpha: pluck(dataset.alpha, dataset.outliericonalpha, chartAttrs.outliericonalpha),\n          includeinlegend: dataset.seriesname ? 1 : 0,\n          anchorbgalpha: pluck(dataset.outliericonalpha, chartAttrs.outliericonalpha, 100),\n          linethickness: pluck(dataset.linethickness, chartAttrs.linethickness, 1),\n          anchorsides: pluck(dataset.outliericonsides, chartAttrs.outliericonsides, 3),\n          showline: !pluckNumber(dataset.drawoutliersconnector, chartAttrs.drawoutliersconnector),\n          color: pluck(dataset.outliericoncolor, chartAttrs.outliericoncolor, COLOR_000000),\n          dip: pluck(dataset.outliericonshape, chartAttrs.outliericonshape, POLYGON),\n          data: []\n        }\n      };\n      showMean = pluckNumber(dataset.showmean, chartAttrs.showmean, 0);\n      showSD = pluckNumber(dataset.showsd, chartAttrs.showsd, 0);\n      showQD = pluckNumber(dataset.showqd, chartAttrs.showqd, 0);\n      showMD = pluckNumber(dataset.showmd, chartAttrs.showmd, 0);\n\n      data = dataset.data;\n      dataLen = (data && data.length) || 0;\n      for (j = 0; j < dataLen; j++) {\n        setData = data[j];\n        if (setData.min && setData.max && setData.q1 && setData.q3 && setData.median) {\n          meanValue = setData.mean;\n          sdValue = setData.sd;\n          mdValue = setData.md;\n          qdValue = setData.qd;\n        } else {\n          bwCalc.setArray(setData.value);\n          bwCalc.getQuartiles();\n          meanValue = bwCalc.getMean();\n          sdValue = bwCalc.getSD();\n          qdValue = bwCalc.getQD();\n          mdValue = bwCalc.getMD();\n        }\n        outliers = setData.outliers;\n\n        // Checking if at all mean, sd, etc datasets are required\n        showMean = currSubDS.showMean = currSubDS.showMean || pluckNumber(setData.showmean, showMean);\n        showSD = currSubDS.showSD = currSubDS.showSD || pluckNumber(setData.showsd, showSD);\n        showQD = currSubDS.showQD = currSubDS.showQD || pluckNumber(setData.showqd, showQD);\n        showMD = currSubDS.showMD = currSubDS.showMD || pluckNumber(setData.showmd, showMD);\n\n        // Storing the value of mean, sd as the same key of the previous check for ease of use\n        currDerivedDataVal.showMean.data.push({\n          showvalue: setData.showmeanvalue,\n          valueposition: setData.meanvalueposition,\n          value: showMean && (meanValue || UNDEF),\n          anchorbgcolor: setData.meaniconcolor,\n          anchorbordercolor: setData.meaniconbordercolor,\n          anchorradius: setData.meaniconradius,\n          anchoralpha: setData.meaniconalpha,\n          anchorbgalpha: setData.meaniconalpha,\n          anchorsides: setData.meaniconsides,\n          dip: setData.meaniconshape\n        });\n        currDerivedDataVal.showSD.data.push({\n          showvalue: setData.showsdvalue,\n          valueposition: setData.sdvalueposition,\n          value: showSD && (sdValue || UNDEF),\n          anchorbgcolor: setData.sdiconcolor,\n          anchorbordercolor: setData.sdiconbordercolor,\n          anchorradius: setData.sdiconradius,\n          anchoralpha: setData.sdiconalpha,\n          anchorbgalpha: setData.sdiconalpha,\n          anchorsides: setData.sdiconsides,\n          dip: setData.sdiconshape\n        });\n        currDerivedDataVal.showQD.data.push({\n          showvalue: setData.showqdvalue,\n          valueposition: setData.qdvalueposition,\n          value: showQD && (qdValue || UNDEF),\n          anchorbgcolor: setData.qdiconcolor,\n          anchorbordercolor: setData.qdiconbordercolor,\n          anchorradius: setData.qdiconradius,\n          anchoralpha: setData.qdiconalpha,\n          anchorbgalpha: setData.qdiconalpha,\n          anchorsides: setData.qdiconsides,\n          dip: setData.qdiconshape\n        });\n        currDerivedDataVal.showMD.data.push({\n          showvalue: setData.showmdvalue,\n          valueposition: setData.mdvalueposition,\n          value: showMD && (mdValue || UNDEF),\n          anchorbgcolor: setData.mdiconcolor,\n          anchorbordercolor: setData.mdiconbordercolor,\n          anchorradius: setData.mdiconradius,\n          anchoralpha: setData.mdiconalpha,\n          anchorbgalpha: setData.mdiconalpha,\n          anchorsides: setData.mdiconsides,\n          dip: setData.mdiconshape\n        });\n\n        if (outliers) {\n          outliersArr = currDerivedDataVal.outliers.data;\n          outliers.split(COMMA).forEach(fn);\n          currSubDS.outliers = true;\n        }\n      }\n    }\n\n    // Creating the subDataset as per their requirements\n    subDSLen = requiredSubDs.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (k = 0; k < subDSLen; k++) {\n      currSubDS = requiredSubDs[k];\n      currDerivedDS = derivedDS[k] = [];\n      for (i in currSubDS) {\n        currSubDS[i] && currDerivedDS.push(derivedDataValue[k][i]);\n      }\n    }\n\n    return derivedDS;\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @return {Object} return column dataset\n   */\n  getDSdef () {\n    return BoxAndWhiskerDataset;\n  }\n\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object} Multiseries column group definition\n   */\n  getDSGroupdef () {\n    return BoxAndWhiskerMultiSeriesGroup;\n  }\n}\nexport default BoxAndWhisker2D;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport LineDataset from './boxandwhiskerline';\nimport { pluck, pluckNumber, toRaphaelColor, parseConfiguration, HUNDREDSTRING, parseUnsafeString,\n  parseTooltext, getDashStyle, getDefinedColor, BLANKSTRING, preDefStr, COMMASTRING, COMMA, getValidValue, POSITION_LEFT, POSITION_MIDDLE,\n  visibleStr, defined, getFirstValue, datasetFactory, getSuggestiveRotation,\n  convertColor, getLightColor, getColumnColor, getFirstAlpha, getFirstColor }\n  from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport boxandwhisker2dAnimation from './index.animation';\n\nlet PLOTBORDERCOLOR = 'plotBorderColor',\n  PLOTGRADIENTCOLOR = 'plotGradientColor',\n  SHOWSHADOW = 'showShadow',\n  SETROLLOVERATTR = 'setRolloverAttr',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  UNDEFINED,\n  colorStrings = preDefStr.colors,\n  COLOR_000000 = colorStrings.c000000,\n  strokeColor = COLOR_000000,\n  LABEL = preDefStr.LABEL,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  UNDERSCORE = preDefStr.UNDERSCORE,\n  POINTER = preDefStr.POINTER,\n  BLANK = preDefStr.BLANK,\n  ROUND = preDefStr.ROUND,\n  GROUPID = preDefStr.GROUPID,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  showHoverEffectStr = preDefStr.showHoverEffectStr,\n  EVENTARGS = preDefStr.EVENTARGS,\n  // dataLabelStr = preDefStr.dataLabelStr,\n  // shadowStr = preDefStr.shadowStr,\n  POSITION_END = preDefStr.POSITION_END,\n  M = 'M',\n  H = 'H',\n  V = 'V',\n  BOLDSTARTTAG = '<b>',\n  BOLDENDTAG = '</b>',\n  BREAKSTRING = '<br />',\n  MAXIMUM_STR = 'Maximum',\n  Q3_STR = 'Q3',\n  MEDIAN_STR = 'Median',\n  Q1_STR = 'Q1',\n  MINIMUM_STR = 'Minimum',\n  pStr = preDefStr.pStr,\n  sStr = preDefStr.sStr,\n  NONE = 'none',\n  createChildIndices = function (index, len) {\n    let indices = [],\n      length = len;\n    while (length) {\n      indices.unshift(index + Number('.' + length));\n      length--;\n    }\n    return indices;\n  },\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {Object} attr  Attributes applied to the created group.\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (attr, parentContainer, dataset) {\n    return dataset.getFromEnv('animationManager').setAnimation({\n      el: 'group',\n      attr: attr,\n      container: parentContainer,\n      component: dataset,\n      label: 'group'\n    });\n  },\n  _hide = function () {\n    // eslint-disable-next-line good-practices/no-function-dependency\n    return function () {\n      this.hide();\n    };\n  };\naddDep({\n  name: 'boxandwhisker2dAnimation',\n  type: 'animationRule',\n  extension: boxandwhisker2dAnimation\n});\n/**\n * Class for boxAndWhisker Dataset\n */\nclass BoxAndWhiskerDataset extends ColumnDataset {\n  /**\n   * function to create group for dataset\n   */\n  createContainer () {\n    var dataset = this,\n      parent = dataset.getLinkedParent(),\n      group = (dataset.groupName || dataset.dsGroup || dataset.type),\n      parentContainer,\n      parentShadowContainer;\n\n    !parent.getChildContainer(group + 'VcanvasGroup') && (group = 'default');\n    parentContainer = parent.getChildContainer(group + 'VcanvasGroup');\n    parentShadowContainer = parent.getChildContainer(group + 'ShadowVcanvasGroup'); // eslint-disable-line good-practices/no-single-usage-variable\n\n    !dataset.getContainer('shadowGroup') && dataset.addContainer('shadowGroup',\n      createGroup({ name: 'shadow-group' }, parentShadowContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('lowerBoxGroup',\n      createGroup({ name: 'lower-box-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('upperBoxGroup',\n      createGroup({ name: 'upper-box-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('upperWhiskerGroup',\n      createGroup({ name: 'upper-whisker-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('lowerWhiskerGroup',\n      createGroup({ name: 'lower-whisker-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('medianGroup',\n      createGroup({ name: 'median-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('labelGroup') && dataset.addContainer('labelGroup',\n      createGroup({ name: 'label-group',\n        'class': 'fusioncharts-datalabels' }, parent.getChildContainer('vcanvasLabelGroup'), dataset));\n  }\n\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    * @return {boolean} Indicates whether the configuration was successful or not\n    */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    var dataset = this,\n      // chart = dataset.chart,\n      conf = dataset.config,\n      JSONData = dataset.config.JSONData,\n      setDataArr = JSONData.data,\n      setDataLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      // categories = chart.config.categories,\n      // singleSeries = chart.config.singleseries,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      xAxis = dataset.getFromEnv('xAxis'),\n      catLen = xAxis.getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      len = Math.min(catLen, setDataLen), // eslint-disable-line good-practices/no-single-usage-variable\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      colorM = dataset.getFromEnv('color-manager'),\n      index = conf.index,\n      plotColor = conf.plotColor = colorM.getPlotColor(index),\n      plotBorderDash = pluckNumber(JSONData.dashed, chartAttr.plotborderdashed), // eslint-disable-line good-practices/no-single-usage-variable\n      tooltipSepChar = parseUnsafeString(pluck(chartAttr.tooltipsepchar, ': ')),\n      // parseTooltext = lib.parseTooltext,\n      formatedVal,\n      parserConfig,\n      setTooltext,\n      macroIndices,\n      tempPlotfillAngle,\n      toolText,\n      plotDashLen,\n      plotDashGap,\n      plotBorderThickness,\n      isRoundEdges,\n      showHoverEffect,\n      plotfillAngle,\n      plotFillAlpha,\n      // plotRadius,\n      plotFillRatio,\n      plotgradientcolor,\n      plotBorderAlpha,\n      plotBorderColor,\n      // plotBorderDashStyle,\n      initailPlotBorderDashStyle,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      label,\n      // colorArr,\n      upperBoxHoverColor,\n      upperBoxHoverAlpha,\n      upperBoxBorderHoverColor,\n      upperBoxBorderHoverAlpha,\n      upperBoxBorderHoverThickness,\n      lowerBoxHoverColor,\n      lowerBoxHoverAlpha,\n      lowerBoxBorderHoverColor,\n      lowerBoxBorderHoverAlpha,\n      lowerBoxBorderHoverThickness,\n      upperQuartileHoverColor,\n      upperQuartileHoverAlpha,\n      upperQuartileHoverThickness,\n      lowerQuartileHoverColor,\n      lowerQuartileHoverAlpha,\n      lowerQuartileHoverThickness,\n      medianHoverColor,\n      medianHoverAlpha,\n      medianHoverThickness,\n      // getDashStyle = lib.getDashStyle,\n      dataStore = dataset.components.data,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      toolTipValue,\n      setDisplayValue,\n      // definedGroupPadding,\n\n      // use3DLighting,\n      parentYAxis,\n      setDataDashed,\n      setDataPlotDashLen,\n      setDataPlotDashGap,\n      i,\n      maxValue = -Infinity,\n      minValue = +Infinity,\n      bwCalc = dataset.getFromEnv('BoxAndWhiskerStatisticalCalc'),\n      quartile,\n      q1,\n      q3,\n      limits,\n      min,\n      max,\n      medianValue,\n      mean,\n      md,\n      sd,\n      qd,\n      upperBoxColor,\n      upperBoxAlpha,\n      lowerBoxColor,\n      lowerBoxAlpha,\n      upperWhiskerAlpha,\n      isMeanValueEnabledInData,\n      isSDValueEnabledInData,\n      isMDValueEnabledInData,\n      isQDValueEnabledInData,\n      isOutliersValueEnabledInData,\n      difference,\n      lowerWhiskerAlpha,\n      upperQuartileRawColor,\n      upperQuartileAlpha,\n      upperBoxBorderRawColor,\n      upperBoxBorderAlpha,\n      lowerBoxBorderRawColor,\n      lowerBoxBorderAlpha,\n      lowerQuartileRawColor,\n      lowerQuartileAlpha,\n      isMDEnabled,\n      isSDEnabled,\n      isQDEnabled,\n      isOutliersEnabled,\n      isMeanEnabled,\n      defaultValue,\n      maxmin;\n\n    dataset.setState('visible', !!(pluckNumber(dataset.config.JSONData.visible,\n      !Number(dataset.config.JSONData.initiallyhidden), 1) === 1));\n\n    parseConfiguration(JSONData, conf, chartConfig, { data: true });\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n    conf.seriesname = parseUnsafeString(JSONData.seriesname);\n    conf.includeInLegend = pluckNumber(JSONData.includeinlegend, (conf.seriesname ? 1 : 0));\n    conf.legendSymbolColor = conf.plotColor;\n    plotDashLen = conf.plotborderdashlen;\n    plotDashGap = conf.plotborderdashgap;\n    plotFillAlpha = conf.plotfillalpha;\n    isRoundEdges = conf.useroundedges;\n    plotFillRatio = conf.ratio; // eslint-disable-line good-practices/no-single-usage-variable\n    plotBorderThickness = conf.plotborderthickness;\n\n    conf.rotatevalues && (conf.rotatevalues = 270);\n\n    conf.plotfillAngle = plotfillAngle = pluckNumber(360 - chartAttr.plotfillangle, 90);\n    conf.plotColor = plotColor = pluck(JSONData.color, plotColor);\n    conf.plotRadius = pluckNumber(chartAttr.useroundedges, isRoundEdges ? 1 : 0);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.plotgradientcolor = plotgradientcolor = getDefinedColor(chartAttr.plotgradientcolor, // eslint-disable-line good-practices/no-single-usage-variable\n      colorM.getColor(PLOTGRADIENTCOLOR));\n    !chartConfig.useplotgradientcolor && (plotgradientcolor = BLANKSTRING); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.plotBorderAlpha = plotBorderAlpha = conf.showplotborder ? pluck(chartAttr.plotborderalpha,\n      plotFillAlpha, HUNDREDSTRING) : 0;\n    conf.plotBorderColor = plotBorderColor = pluck(chartAttr.plotbordercolor,\n      colorM.getColor(PLOTBORDERCOLOR));\n    conf.plotBorderDashStyle = initailPlotBorderDashStyle = plotBorderDash // eslint-disable-line good-practices/no-single-usage-variable\n      ? getDashStyle(plotDashLen, plotDashGap, plotBorderThickness) : NONE;\n\n    conf.showShadow = isRoundEdges ? pluckNumber(chartAttr.showshadow, 1)\n      : pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.showHoverEffect = showHoverEffect = pluckNumber(chartAttr.plothovereffect,\n      chartAttr.showhovereffect, UNDEFINED);\n\n    // conf.definedGroupPadding = definedGroupPadding = Math.max(pluckNumber(chartAttr.plotspacepercent), 0);\n    // conf.plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0);\n\n    conf.parentYAxis = parentYAxis = pluck(JSONData.parentyaxis && JSONData.parentyaxis.toLowerCase(), // eslint-disable-line good-practices/no-single-usage-variable\n      pStr) === sStr ? 1 : 0;\n\n    conf.dataSeparator = COMMASTRING;\n\n    conf.textDirection = chartAttr.hasrtltext === '1' ? 'rtl' : BLANKSTRING;\n\n    conf.showMeanLegend = conf.showSDLegend = conf.showMDLegend = conf.showQDLegend =\n      conf.showOutliersLegend = 0;\n\n    !dataset.components.data && (dataset.components.data = []);\n    dataStore = dataset.components.data;\n\n    conf.upperBoxColor = upperBoxColor = pluck(JSONData.upperboxcolor,\n      chartAttr.upperboxcolor, colorM.getPlotColor(index * 2));\n\n    upperBoxAlpha = conf.upperBoxAlpha = pluck(JSONData.upperboxalpha,\n      chartAttr.upperboxalpha, plotFillAlpha, HUNDREDSTRING);\n\n    conf.lowerBoxColor = lowerBoxColor = pluck(JSONData.lowerboxcolor,\n      chartAttr.lowerboxcolor, colorM.getPlotColor((index * 2) + 1));\n\n    lowerBoxAlpha = conf.lowerBoxAlpha = pluck(JSONData.lowerboxalpha,\n      chartAttr.lowerboxalpha, plotFillAlpha, HUNDREDSTRING);\n\n    // Parsing the attributes and values at set level.\n    for (i = 0; i < len; i++) {\n      setData = setDataArr && setDataArr[i];\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n\n      if (setData.min && setData.max && setData.q1 && setData.q3 && setData.median) {\n        quartile = {\n          q1: setData.q1,\n          q3: setData.q3\n        };\n        q1 = quartile.q1;\n        q3 = quartile.q3;\n        limits = {\n          min: setData.min,\n          max: setData.max\n        };\n        config.min = min = limits.min;\n        config.max = max = limits.max;\n        medianValue = setData.median;\n        config.mean = mean = setData.mean;\n        config.md = md = setData.md;\n        config.sd = sd = setData.sd;\n        config.qd = qd = setData.qd;\n        config.outliers = setData.outliers;\n        config.explicitData = true;\n      } else if (setData.value) {\n        config.outliers = setData.outliers;\n        config.rawValue = setData.value;\n        bwCalc.setArray(setData.value);\n        quartile = bwCalc.getQuartiles();\n        q1 = quartile.q1;\n        q3 = quartile.q3;\n\n        limits = bwCalc.getMinMax();\n        config.min = min = limits.min;\n        config.max = max = limits.max;\n        medianValue = bwCalc.getMedian();\n        config.mean = mean = bwCalc.getMean();\n        config.md = md = bwCalc.getMD();\n        config.sd = sd = bwCalc.getSD();\n        config.qd = qd = bwCalc.getQD();\n        config.explicitData = false;\n        // get the valid value\n        // highValue = itemValue = max;\n      } else {\n        config.setValue = UNDEFINED;\n        config.explicitData = false;\n        continue;\n      }\n\n      // if (setData.outliers) {\n      //   config.outliers = setData.outliers.split(COMMA);\n      //   maxNumberOfOutliers = Math.max(maxNumberOfOutliers, config.outliers.length);\n      // }\n\n      // config.showMean = showMean = pluckNumber(setData.showmean, conf.showmean);\n      // config.showSD = showSD = pluckNumber(setData.showsd, conf.showsd);\n      // config.showMD = showMD = pluckNumber(setData.showmd, conf.showmd);\n      // config.showQD = showQD = pluckNumber(setData.showqd, conf.showqd);\n      // setData.outliers && (conf.showOutliersLegend = 1);\n\n      // showMean && (conf.showMeanLegend = 1);\n      // showSD && (conf.showSDLegend = 1);\n      // showMD && (conf.showMDLegend = 1);\n      // showQD && (conf.showQDLegend = 1);\n\n      upperQuartileRawColor = pluck(setData.upperquartilecolor, JSONData.upperquartilecolor,\n        chartAttr.upperquartilecolor, chartAttr.plotbordercolor, colorM.getColor(PLOTBORDERCOLOR));\n      upperQuartileAlpha = pluckNumber(setData.upperquartilealpha, JSONData.upperquartilealpha,\n        chartAttr.upperquartilealpha, chartAttr.plotborderalpha,\n        100);\n      config.upperQuartile = {\n        value: q3,\n        color: convertColor(upperQuartileRawColor, upperQuartileAlpha),\n        rawColor: upperQuartileRawColor,\n        alpha: upperQuartileAlpha,\n        borderWidth: pluckNumber(\n          setData.upperquartilethickness, JSONData.upperquartilethickness,\n          chartAttr.upperquartilethickness, chartAttr.plotborderthickness,\n          !isRoundEdges ? 1 : 0),\n\n        displayValue: numberFormatter.dataLabels(q3)\n      };\n\n      lowerQuartileRawColor = pluck(setData.lowerquartilecolor, JSONData.lowerquartilecolor,\n        chartAttr.lowerquartilecolor, chartAttr.plotbordercolor, colorM.getColor(PLOTBORDERCOLOR));\n      lowerQuartileAlpha = (setData.lowerquartilealpha, JSONData.lowerquartilealpha,\n      chartAttr.lowerquartilealpha, chartAttr.plotborderalpha,\n      100);\n      config.lowerQuartile = {\n        value: q1,\n        color: convertColor(lowerQuartileRawColor, lowerQuartileAlpha),\n        rawColor: lowerQuartileRawColor,\n        alpha: lowerQuartileAlpha,\n        borderWidth: pluckNumber(\n          setData.lowerquartilethickness, JSONData.lowerquartilethickness,\n          chartAttr.lowerquartilethickness, chartAttr.plotborderthickness,\n          !isRoundEdges ? 1 : 0),\n\n        displayValue: numberFormatter.dataLabels(q1)\n      };\n      config.valuePadding = pluckNumber(setData.valuepadding, conf.valuepadding);\n\n      upperBoxBorderRawColor = pluck(setData.upperboxbordercolor, JSONData.upperboxbordercolor,\n        chartAttr.upperboxbordercolor, chartAttr.plotbordercolor,\n        colorM.getColor(PLOTBORDERCOLOR));\n      upperBoxBorderAlpha = pluckNumber(setData.upperboxborderalpha, JSONData.upperboxborderalpha,\n        chartAttr.upperboxborderalpha, chartAttr.plotborderalpha, 100);\n      config.upperBoxBorder = {\n        color: convertColor(upperBoxBorderRawColor, upperBoxBorderAlpha),\n        rawColor: upperBoxBorderRawColor,\n        alpha: upperBoxBorderAlpha,\n        borderWidth: pluckNumber(\n          setData.upperboxborderthickness, JSONData.upperboxborderthickness,\n          chartAttr.upperboxborderthickness, !isRoundEdges && chartAttr.plotborderthickness,\n          !isRoundEdges ? 1 : 0)\n      };\n\n      lowerBoxBorderRawColor = pluck(setData.lowerboxbordercolor, JSONData.lowerboxbordercolor,\n        chartAttr.lowerboxbordercolor, chartAttr.plotbordercolor,\n        colorM.getColor(PLOTBORDERCOLOR));\n      lowerBoxBorderAlpha = pluckNumber(setData.lowerboxborderalpha, JSONData.lowerboxborderalpha,\n        chartAttr.lowerboxborderalpha, chartAttr.plotborderalpha, 100);\n      config.lowerBoxBorder = {\n        color: convertColor(lowerBoxBorderRawColor, lowerBoxBorderAlpha),\n        rawColor: lowerBoxBorderRawColor,\n        alpha: lowerBoxBorderAlpha,\n        borderWidth: pluckNumber(\n          setData.lowerboxborderthickness, JSONData.lowerboxborderthickness,\n          chartAttr.lowerboxborderthickness, !isRoundEdges && chartAttr.plotborderthickness,\n          !isRoundEdges ? 1 : 0)\n      };\n\n      config.median = {\n        value: medianValue,\n        color: convertColor(pluck(\n          setData.mediancolor, JSONData.mediancolor,\n          chartAttr.mediancolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR)),\n        pluckNumber(setData.medianalpha, JSONData.medianalpha,\n          chartAttr.medianalpha, chartAttr.plotborderalpha,\n          100)),\n        borderWidth: pluckNumber(\n          setData.medianthickness, JSONData.medianthickness,\n          chartAttr.medianthickness, chartAttr.plotborderthickness,\n          1),\n\n        displayValue: numberFormatter.dataLabels(medianValue)\n      };\n      conf.upperBoxColor = upperBoxColor = pluck(setData.upperboxcolor, JSONData.upperboxcolor,\n        chartAttr.upperboxcolor, colorM.getPlotColor(index * 2));\n\n      upperBoxAlpha = conf.upperBoxAlpha = pluck(setData.upperboxalpha, JSONData.upperboxalpha,\n        chartAttr.upperboxalpha, plotFillAlpha, HUNDREDSTRING);\n\n      conf.lowerBoxColor = lowerBoxColor = pluck(setData.lowerboxcolor, JSONData.lowerboxcolor,\n        chartAttr.lowerboxcolor, colorM.getPlotColor((index * 2) + 1));\n\n      lowerBoxAlpha = conf.lowerBoxAlpha = pluck(setData.lowerboxalpha, JSONData.lowerboxalpha,\n        chartAttr.lowerboxalpha, plotFillAlpha, HUNDREDSTRING);\n\n      config.upperBoxColor = upperBoxColor;\n      config.upperBoxAlpha = upperBoxAlpha;\n      config.upperColorArr = getColumnColor(\n        upperBoxColor,\n        upperBoxAlpha,\n        UNDEFINED,\n        UNDEFINED,\n        isRoundEdges,\n        plotBorderColor,\n        plotBorderAlpha.toString(),\n        0,\n        false\n      );\n\n      config.lowerBoxColor = lowerBoxColor;\n      config.lowerBoxAlpha = lowerBoxAlpha;\n      config.lowerColorArr = getColumnColor(\n        lowerBoxColor,\n        lowerBoxAlpha,\n        UNDEFINED,\n        UNDEFINED,\n        isRoundEdges,\n        plotBorderColor,\n        plotBorderAlpha.toString(),\n        0,\n        false\n      );\n\n      // Priority:\n      // showValue at data level > showvalues at dataset level > showvalues at chart level\n\n      isMeanEnabled = pluckNumber(setData.showmean, JSONData.showmean, chartAttr.showmean);\n      isMeanValueEnabledInData = isMeanEnabled && pluckNumber(setData.showmeanvalue, JSONData.showmeanvalues,\n        chartAttr.showmeanvalues);\n\n      isMDEnabled = pluckNumber(setData.showmd, JSONData.showmd, chartAttr.showmd);\n      isMDValueEnabledInData = isMDEnabled && pluckNumber(setData.showmdvalue, JSONData.showmdvalues,\n        chartAttr.showmdvalues);\n\n      isSDEnabled = pluckNumber(setData.showsd, JSONData.showsd, chartAttr.showsd);\n      isSDValueEnabledInData = isSDEnabled && pluckNumber(setData.showsdvalue, JSONData.showsdvalues,\n        chartAttr.showsdvalues);\n\n      isQDEnabled = pluckNumber(setData.showqd, JSONData.showqd, chartAttr.showqd);\n      isQDValueEnabledInData = isQDEnabled && pluckNumber(setData.showqdvalue, JSONData.showqdvalues,\n        chartAttr.showqdvalues);\n\n      isOutliersEnabled = pluckNumber(setData.showoutlier, JSONData.showoutlier, chartAttr.showoutlier);\n      isOutliersValueEnabledInData = isOutliersEnabled && pluckNumber(setData.showoutliervalue, JSONData.showoutliervalues,\n        chartAttr.showoutliervalues);\n\n      defaultValue = (isMeanValueEnabledInData || isMDValueEnabledInData ||\n        isSDValueEnabledInData || isQDValueEnabledInData || isOutliersValueEnabledInData) ? 0 : 1;\n\n      config.showMinValues = pluckNumber(setData.showminvalue, setData.showvalue, JSONData.showminvalues,\n        JSONData.showvalues, chartAttr.showminvalues, chartAttr.showvalues, defaultValue);\n\n      config.showMaxValues = pluckNumber(setData.showmaxvalue, setData.showvalue, JSONData.showmaxvalues,\n        JSONData.showvalues, chartAttr.showmaxvalues, chartAttr.showvalues, defaultValue);\n\n      config.showMedianValues = pluckNumber(setData.showmedianvalue, setData.showvalue, JSONData.showmedianvalues,\n        JSONData.showvalues, chartAttr.showmedianvalues, chartAttr.showvalues, defaultValue);\n\n      config.showQ3Values = pluckNumber(setData.showq3value, JSONData.showq3values, chartAttr.showq3values, 0);\n\n      config.showQ1Values = pluckNumber(setData.showq1value, JSONData.showq1values, chartAttr.showq1values, 0);\n\n      config.upperWhiskerRawColor = getFirstColor(pluck(setData.upperwhiskercolor,\n        JSONData.upperwhiskercolor, chartAttr.upperwhiskercolor,\n        chartAttr.plotbordercolor, colorM.getColor(PLOTBORDERCOLOR)));\n      config.upperWhiskerColor = convertColor(config.upperWhiskerRawColor, upperWhiskerAlpha);\n\n      config.upperWhiskerThickness = pluckNumber(setData.upperwhiskerthickness,\n        JSONData.upperwhiskerthickness, chartAttr.upperwhiskerthickness, chartAttr.plotborderthickness,\n        1);\n\n      config.upperWhiskerShadowOpacity = conf.showShadow ? (upperWhiskerAlpha / 100) : 0;\n\n      config.lowerWhiskerAlpha = lowerWhiskerAlpha = getFirstAlpha(pluck(setData.lowerwhiskeralpha,\n        JSONData.lowerwhiskeralpha, chartAttr.lowerwhiskeralpha, chartAttr.plotborderalpha, 100));\n\n      config.lowerWhiskerRawColor = getFirstColor(pluck(setData.lowerwhiskercolor,\n        JSONData.lowerwhiskercolor, chartAttr.lowerwhiskercolor, chartAttr.plotbordercolor,\n        colorM.getColor(PLOTBORDERCOLOR)));\n      config.lowerWhiskerColor = convertColor(config.lowerWhiskerRawColor, lowerWhiskerAlpha);\n\n      config.lowerWhiskerThickness = pluckNumber(setData.lowerwhiskerthickness,\n        JSONData.lowerwhiskerthickness, chartAttr.lowerwhiskerthickness, chartAttr.plotborderthickness,\n        1);\n\n      config.lowerWhiskerShadowOpacity = conf.showShadow ? (lowerWhiskerAlpha / 100) : 0;\n\n      config.setValue = setValue = numberFormatter.getCleanValue(setData.value);\n      config.setLink = pluck(setData.link);\n      config.toolTipValue = toolTipValue = numberFormatter.dataLabels(setValue, parentYAxis);\n      config.setDisplayValue = setDisplayValue = parseUnsafeString(setData.displayvalue);\n      config.displayValue = pluck(setDisplayValue, toolTipValue);\n      setDataDashed = pluckNumber(setData.dashed);\n      setDataPlotDashLen = pluckNumber(setData.dashlen, plotDashLen);\n      setDataPlotDashGap = plotDashGap = pluckNumber(setData.dashgap, plotDashGap);\n\n      maxValue = Math.max(maxValue, max);\n      minValue = Math.min(minValue, min);\n\n      config.dataLabelStyle = dataset._configureDataLabelStyle(setData);\n\n      // if (showAllOutliers && setData.outliers) {\n      //   for (j = 0; j < config.outliers.length; j++) {\n      //     maxValue = Math.max(maxValue, config.outliers[j]);\n      //     minValue = Math.min(minValue, config.outliers[j]);\n      //   }\n      // }\n\n      config.plotBorderDashStyle = setDataDashed === 1\n        ? getDashStyle(setDataPlotDashLen, setDataPlotDashGap, plotBorderThickness)\n        : (setDataDashed === 0 ? NONE : initailPlotBorderDashStyle);\n      // if (singleSeries) {\n      //   plotColor = colorM.getPlotColor(i);\n      //   plotColor = pluck(setData.color, plotColor);\n      //   plotFillRatio = pluck(setData.ratio, conf.ratio);\n      // }\n      // else {\n      plotColor = pluck(setData.color, conf.plotColor);\n      // }\n      plotFillAlpha = pluck(setData.alpha, conf.plotfillalpha);\n\n      // Setting the angle for plot fill for negative data\n      if (setValue < 0 && !isRoundEdges) {\n        tempPlotfillAngle = plotfillAngle;\n        plotfillAngle = 360 - plotfillAngle;\n      }\n\n      // Setting the color Array to be applied to the bar/column.\n      config.colorArr = getColumnColor(\n        plotColor + COMMA + plotgradientcolor,\n        plotFillAlpha,\n        plotFillRatio,\n        plotfillAngle,\n        isRoundEdges,\n        plotBorderColor,\n        plotBorderAlpha.toString(),\n        0,\n        false\n      );\n\n      config.label = label =\n        getValidValue(parseUnsafeString(xAxis.getLabel(pluckNumber(i)).label));\n\n      // Parsing the hover effects only if showhovereffect is not 0.\n      if (showHoverEffect !== 0) {\n        upperBoxHoverColor = pluck(setData.upperboxhovercolor, JSONData.upperboxhovercolor,\n          chartAttr.upperboxhovercolor, upperBoxColor);\n\n        upperBoxHoverAlpha = pluck(setData.upperboxhoveralpha, JSONData.upperboxhoveralpha,\n          chartAttr.upperboxhoveralpha, upperBoxAlpha);\n\n        upperBoxBorderHoverColor = pluck(setData.upperboxborderhovercolor,\n          JSONData.upperboxborderhovercolor,\n          chartAttr.upperboxborderhovercolor, setData.upperboxbordercolor,\n          JSONData.upperboxbordercolor,\n          chartAttr.upperboxbordercolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR));\n\n        upperBoxBorderHoverAlpha = pluck(setData.upperboxborderhoveralpha,\n          JSONData.upperboxborderhoveralpha,\n          chartAttr.upperboxborderhoveralpha, setData.upperboxborderalpha,\n          JSONData.upperboxborderalpha,\n          chartAttr.upperboxborderalpha, chartAttr.plotborderalpha,\n          100);\n\n        upperBoxBorderHoverThickness = !isRoundEdges ? pluck(setData.upperboxborderhoverthickness,\n          JSONData.upperboxborderhoverthickness,\n          chartAttr.upperboxborderhoverthickness, config.upperBoxBorder.borderWidth) : 0;\n\n        lowerBoxHoverColor = pluck(setData.lowerboxhovercolor, JSONData.lowerboxhovercolor,\n          chartAttr.lowerboxhovercolor, lowerBoxColor);\n\n        lowerBoxHoverAlpha = pluck(setData.lowerboxhoveralpha, JSONData.lowerboxhoveralpha,\n          chartAttr.lowerboxhoveralpha, lowerBoxAlpha);\n\n        lowerBoxBorderHoverColor = pluck(setData.lowerboxborderhovercolor,\n          JSONData.lowerboxborderhovercolor,\n          chartAttr.lowerboxborderhovercolor, setData.lowerboxbordercolor,\n          JSONData.lowerboxbordercolor,\n          chartAttr.lowerboxbordercolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR));\n\n        lowerBoxBorderHoverAlpha = pluck(setData.lowerboxborderhoveralpha,\n          JSONData.lowerboxborderhoveralpha,\n          chartAttr.lowerboxborderhoveralpha, setData.lowerboxborderalpha,\n          JSONData.lowerboxborderalpha,\n          chartAttr.lowerboxborderalpha, chartAttr.plotborderalpha,\n          100);\n\n        lowerBoxBorderHoverThickness = !isRoundEdges ? pluck(setData.lowerboxborderhoverthickness,\n          JSONData.lowerboxborderhoverthickness,\n          chartAttr.lowerboxborderhoverthickness, config.lowerBoxBorder.borderWidth) : 0;\n\n        upperQuartileHoverColor = pluck(setData.upperquartilehovercolor,\n          JSONData.upperquartilehovercolor,\n          chartAttr.upperquartilehovercolor, setData.upperquartilecolor,\n          JSONData.upperquartilecolor,\n          chartAttr.upperquartilecolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR));\n\n        upperQuartileHoverAlpha = pluck(setData.upperquartilehoveralpha,\n          JSONData.upperquartilehoveralpha,\n          chartAttr.upperquartilehoveralpha, setData.upperquartilealpha,\n          JSONData.upperquartilealpha,\n          chartAttr.upperquartilealpha, chartAttr.plotborderalpha,\n          100);\n\n        upperQuartileHoverThickness = pluck(setData.upperquartilehoverthickness,\n          JSONData.upperquartilehoverthickness,\n          chartAttr.upperquartilehoverthickness, config.upperQuartile.borderWidth);\n\n        lowerQuartileHoverColor = pluck(setData.lowerquartilehovercolor,\n          JSONData.lowerquartilehovercolor,\n          chartAttr.lowerquartilehovercolor, setData.lowerquartilecolor,\n          JSONData.lowerquartilecolor,\n          chartAttr.lowerquartilecolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR));\n\n        lowerQuartileHoverAlpha = pluck(setData.lowerquartilehoveralpha,\n          JSONData.lowerquartilehoveralpha,\n          chartAttr.lowerquartilehoveralpha, setData.lowerquartilealpha,\n          JSONData.lowerquartilealpha,\n          chartAttr.lowerquartilealpha, chartAttr.plotborderalpha,\n          100);\n\n        lowerQuartileHoverThickness = pluck(setData.lowerquartilehoverthickness,\n          JSONData.lowerquartilehoverthickness,\n          chartAttr.lowerquartilehoverthickness, config.lowerQuartile.borderWidth);\n\n        medianHoverColor = pluck(setData.medianhovercolor,\n          JSONData.medianhovercolor,\n          chartAttr.medianhovercolor, setData.mediancolor,\n          JSONData.mediancolor,\n          chartAttr.mediancolor, chartAttr.plotbordercolor,\n          colorM.getColor(PLOTBORDERCOLOR));\n\n        medianHoverAlpha = pluck(setData.medianhoveralpha,\n          JSONData.medianhoveralpha,\n          chartAttr.medianhoveralpha, setData.medianalpha,\n          JSONData.medianalpha,\n          chartAttr.medianalpha, chartAttr.plotborderalpha,\n          100);\n\n        medianHoverThickness = pluck(setData.medianhoverthickness,\n          JSONData.medianhoverthickness,\n          chartAttr.medianhoverthickness, config.median.borderWidth);\n\n        /* If no hover effects are explicitly defined and\n         * showHoverEffect is not 0 then hoverColor is set.\n         */\n        if (showHoverEffect === 1) {\n          upperBoxColor === upperBoxHoverColor &&\n            (upperBoxHoverColor = getLightColor(upperBoxHoverColor, 70));\n          lowerBoxColor === lowerBoxHoverColor &&\n            (lowerBoxHoverColor = getLightColor(lowerBoxHoverColor, 70));\n        }\n\n        config.upperBoxHoverColorArr = getColumnColor(\n          upperBoxHoverColor,\n          upperBoxHoverAlpha,\n          UNDEFINED,\n          UNDEFINED,\n          isRoundEdges,\n          plotBorderColor,\n          plotBorderAlpha.toString(),\n          0,\n          false\n        );\n\n        config.lowerBoxHoverColorArr = getColumnColor(\n          lowerBoxHoverColor,\n          lowerBoxHoverAlpha,\n          UNDEFINED,\n          UNDEFINED,\n          isRoundEdges,\n          plotBorderColor,\n          plotBorderAlpha.toString(),\n          0,\n          false\n        );\n\n        config.setUpperBoxRolloutAttr = {\n          fill: toRaphaelColor(config.upperColorArr[0])\n        };\n        config.setUpperBoxRolloverAttr = {\n          fill: toRaphaelColor(config.upperBoxHoverColorArr[0])\n        };\n\n        config.setLowerBoxRolloutAttr = {\n          fill: toRaphaelColor(config.lowerColorArr[0])\n        };\n        config.setLowerBoxRolloverAttr = {\n          fill: toRaphaelColor(config.lowerBoxHoverColorArr[0])\n        };\n\n        config.setUpperBoxBorderRolloverAttr = {\n          stroke: convertColor(upperBoxBorderHoverColor, upperBoxBorderHoverAlpha),\n          'stroke-width': upperBoxBorderHoverThickness\n        };\n        config.setUpperBoxBorderRolloutAttr = {\n          stroke: config.upperBoxBorder.color,\n          'stroke-width': config.upperBoxBorder.borderWidth\n        };\n\n        config.setLowerBoxBorderRolloverAttr = {\n          stroke: convertColor(lowerBoxBorderHoverColor, lowerBoxBorderHoverAlpha),\n          'stroke-width': lowerBoxBorderHoverThickness\n        };\n        config.setLowerBoxBorderRolloutAttr = {\n          stroke: config.lowerBoxBorder.color,\n          'stroke-width': config.lowerBoxBorder.borderWidth\n        };\n\n        config.setUpperQuartileRolloverAttr = {\n          stroke: convertColor(upperQuartileHoverColor, upperQuartileHoverAlpha),\n          'stroke-width': upperQuartileHoverThickness\n        };\n        config.setUpperQuartileRolloutAttr = {\n          stroke: config.upperQuartile.color,\n          'stroke-width': config.upperQuartile.borderWidth\n        };\n\n        config.setLowerQuartileRolloverAttr = {\n          stroke: convertColor(lowerQuartileHoverColor, lowerQuartileHoverAlpha),\n          'stroke-width': lowerQuartileHoverThickness\n        };\n        config.setLowerQuartileRolloutAttr = {\n          stroke: config.lowerQuartile.color,\n          'stroke-width': config.lowerQuartile.borderWidth\n        };\n\n        config.setMedianRolloverAttr = {\n          stroke: convertColor(medianHoverColor, medianHoverAlpha),\n          'stroke-width': medianHoverThickness\n        };\n        config.setMedianRolloutAttr = {\n          stroke: config.median.color,\n          'stroke-width': config.median.borderWidth\n        };\n      }\n\n      formatedVal = config.toolTipValue;\n\n      // Parsing tooltext against various configurations provided by the user.\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext,\n        JSONData.plottooltext, chartAttr.plottooltext), false));\n      if (!conf.showtooltip) {\n        toolText = false;\n      } else {\n        if (formatedVal === null) {\n          toolText = false;\n        } else if (setTooltext !== UNDEFINED) {\n          macroIndices = [1, 2, 3, 4, 5, 6, 62, 63, 64, 65,\n            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80\n          ];\n          parserConfig = {\n            maxValue: max,\n            maxDataValue: numberFormatter.dataLabels(max),\n            minValue: min,\n            minDataValue: numberFormatter.dataLabels(min),\n            Q1: numberFormatter.dataLabels(q1),\n            unformattedQ1: q1,\n            Q3: numberFormatter.dataLabels(q3),\n            unformattedQ3: q3,\n            median: numberFormatter.dataLabels(medianValue),\n            unformattedMedian: medianValue,\n\n            SD: numberFormatter.dataLabels(sd),\n            unformattedsd: sd,\n            QD: numberFormatter.dataLabels(qd),\n            unformattedQD: qd,\n            MD: numberFormatter.dataLabels(md),\n            unformattedMD: md,\n            mean: numberFormatter.dataLabels(mean),\n            unformattedMean: mean,\n            label: label,\n            yaxisName: chartConfig.yaxisname,\n            xaxisName: chartConfig.xaxisname,\n            formattedValue: formatedVal,\n            value: label\n          };\n          toolText = parseTooltext(setTooltext, macroIndices,\n            parserConfig, setData, chartAttr, JSONData);\n        } else {\n          toolText = BOLDSTARTTAG + MAXIMUM_STR + tooltipSepChar + BOLDENDTAG +\n            numberFormatter.dataLabels(max) + BREAKSTRING +\n            BOLDSTARTTAG + Q3_STR + tooltipSepChar + BOLDENDTAG +\n            numberFormatter.dataLabels(q3) + BREAKSTRING +\n            BOLDSTARTTAG + MEDIAN_STR + tooltipSepChar + BOLDENDTAG +\n            numberFormatter.dataLabels(medianValue) + BREAKSTRING +\n            BOLDSTARTTAG + Q1_STR + tooltipSepChar + BOLDENDTAG +\n            numberFormatter.dataLabels(q1) + BREAKSTRING +\n            BOLDSTARTTAG + MINIMUM_STR + tooltipSepChar + BOLDENDTAG +\n            numberFormatter.dataLabels(min);\n        }\n      }\n      config.toolText = toolText;\n      config.setTooltext = toolText;\n      tempPlotfillAngle && (plotfillAngle = tempPlotfillAngle);\n    }\n\n    // conf.maxNumberOfOutliers = maxNumberOfOutliers;\n\n    if (conf.showalloutliers) {\n      maxmin = dataset._getOutLiersLimit();\n      maxValue = Math.max(maxValue, maxmin.max);\n      minValue = Math.min(minValue, maxmin.min);\n    } else {\n      difference = maxValue - minValue;\n      maxValue += (conf.outliersupperrangeratio * difference);\n      minValue -= (conf.outlierslowerrangeratio * difference);\n    }\n\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n\n    dataset.setState('dirty', true);\n    dataset._createSubDS();\n    chartConfig.showLegend && dataset._addLegend();\n\n    // (chart.config.hasLegend !== false) && dataset._addLegend();\n\n    // dataset.subDS = 0;\n\n    // (dataset.components.mean = dataset._createSubDS(0, MEAN_STR));\n\n    // conf.showMeanLegend && (dataset._addLegendSubDS(dataset.components.mean));\n    // conf.showMeanLegend && (dataset.subDS += 1);\n\n    // (dataset.components.sd = dataset._createSubDS(1, SD_STR));\n    // conf.showSDLegend && (dataset._addLegendSubDS(dataset.components.sd));\n    // conf.showSDLegend && (dataset.subDS += 1);\n\n    // (dataset.components.md = dataset._createSubDS(2, MD_STR));\n    // conf.showMDLegend && (dataset._addLegendSubDS(dataset.components.md));\n    // conf.showMDLegend && (dataset.subDS += 1);\n\n    // (dataset.components.qd = dataset._createSubDS(3, QD_STR));\n    // conf.showQDLegend && (dataset._addLegendSubDS(dataset.components.qd));\n    // conf.showQDLegend && (dataset.subDS += 1);\n\n    // !dataset.components.outliers && (dataset.components.outliers = []);\n\n    // OutliersLength = dataset.config.maxNumberOfOutliers || dataset.components.outliers.length;\n\n    // for (i = 0; i < OutliersLength; i++) {\n    //   outlierDS = (dataset._createSubDS(4 + i, OUTLIERS_STR, i));\n    //   dataset.components.outliers[i] = outlierDS;\n    // }\n    // conf.showOutliersLegend && (dataset._addLegendOutliers(dataset.components.outliers));\n    // conf.showOutliersLegend && (dataset.subDS += 1);\n  }\n\n  /**\n   * Function to create the derived sub-dataset\n   */\n  _createSubDS () {\n    var dataset = this,\n      index = dataset.config.index,\n      lineJSON = dataset.getFromEnv('lineJSON')[index],\n      len = lineJSON.length;\n\n    datasetFactory(dataset, LineDataset, 'dataset', len, lineJSON, createChildIndices(index, len));\n    if (!len) {\n      dataset.iterateComponents((child) => {\n        if (child.getName() === 'line') {\n          child.remove();\n        }\n      });\n    }\n  }\n\n  /**\n   * Function to get the maximum and minimum of the outliers\n   * @return {Object} The max and min value of the outliers\n   */\n  _getOutLiersLimit () {\n    var dataset = this,\n      lineJSON = dataset.getFromEnv('lineJSON')[dataset.config.index],\n      len = lineJSON.length, // eslint-disable-line good-practices/no-single-usage-variable\n      dataJSON,\n      dataLen,\n      j,\n      data,\n      max = -Infinity,\n      min = +Infinity,\n      i;\n\n    for (i = 0; i < len; i++) {\n      dataJSON = lineJSON[i];\n      if (dataJSON.seriesname === 'Outliers') {\n        data = dataJSON.data;\n        dataLen = data.length;\n        for (j = 0; j < dataLen; j++) {\n          max = Math.max(data[j].value, max);\n          min = Math.min(data[j].value, min);\n        }\n        return {\n          max: max,\n          min: min\n        };\n      }\n    }\n    return {\n      max,\n      min\n    };\n  }\n\n  /**\n   * Parses plot attributes and position during post space management\n   *\n   * @param {any} dataObj dataObj\n   * @param {any} index index\n   * @memberof BoxAndWhiskerDataset\n   */\n  parsePlotAttributes (dataObj, index) {\n    var dataset = this,\n      conf = dataset.config,\n      i = index,\n      visible = dataset.getState('visible'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      xAxis = dataset.getFromEnv('xAxis'), // eslint-disable-line good-practices/no-single-usage-variable\n      yAxis = dataset.getFromEnv('yAxis'),\n      xPos,\n      columnWidth,\n      dataStore = dataset.components.data,\n      setLink,\n      setValue,\n      config,\n      upperQuartile,\n      yTop,\n      yTopPos,\n      lowerQuartile,\n      yBottom,\n      yBottomPos,\n      median,\n      yMed,\n      yMedPos,\n      upperBoxH,\n      lowerBoxH,\n      upperBoxBorder,\n      lowerBoxBorder,\n      crispX,\n      crispX2,\n      crispY,\n      style = chartConfig.dataLabelStyle,\n      hoverOutEffects,\n      rotateValues = conf.rotatevalues,\n      valuePadding,\n      numberFormatter = dataset.getFromEnv('number-formatter'),\n      textAlign = rotateValues ? POSITION_LEFT : POSITION_MIDDLE,\n      smartLabel = dataset.getFromEnv('smartLabel'),\n      errorStartPos,\n      errorBarWidth,\n      halfErrorBarW,\n      errorValPos,\n      crispyX,\n      crispyY,\n      errorPath,\n      smartText,\n      lineHeight,\n      labelBottomY,\n      labelTopY,\n      lastDataSetHeight = +Infinity,\n      plotDataLabelStyle,\n      lastDataSetYpos,\n      lowerBoxBorderEleAttr,\n      lowerBoxElemAttr,\n      lowerQuartileEleAttr,\n      lowerWhiskerEleAttr,\n      midLineElemAttr,\n      upperBoxBorderEleAttr,\n      upperBoxElemAttr,\n      upperQuartileEleAttr,\n      upperWhiskerEleAttr,\n      upperQuartileMaxLabelAttr,\n      upperQuartileMinLabelAttr,\n      upperQuartileLabelAttr,\n      lowerQuartileLabelAttr,\n      medianLabelAttr,\n      upperBoxStartPos,\n      lowerBoxYPos,\n      lowerBoxHeight,\n      lowerBoxEndPos;\n\n    columnWidth = dataset.getFromEnv('columnWidth');\n    config = dataObj && dataObj.config;\n    setValue = config && config.setValue;\n\n    // If plot value is found \"null\", continue the loop to next iteration.\n    if (!config.explicitData && (dataObj === UNDEFINED || setValue === UNDEFINED || setValue === null)) {\n      return;\n    }\n\n    // isPositive = setValue >= 0;\n\n    setLink = config.setLink;\n    // Creating the data structure if not present for storing the graphics elements.\n    if (!dataObj.graphics) {\n      dataStore[i].graphics = {};\n    }\n    if (!dataObj.graphics.label) {\n      dataStore[i].graphics.label = [];\n    }\n\n    // Getting the previous yposition of the plot and calculating the current yposition of the plot.\n    // previousYPos = yAxis.getPixel(previousY || yBase);\n    xPos = xAxis.getPixel(i) + dataset.getFromEnv('columnXShift');\n\n    upperQuartile = config.upperQuartile || {};\n    yTop = upperQuartile && upperQuartile.value;\n    yTopPos = (yTop || yTop === 0) && yAxis.getPixel(yTop);\n\n    lowerQuartile = config.lowerQuartile || {};\n    yBottom = lowerQuartile && lowerQuartile.value;\n    yBottomPos = (yBottom || yBottom === 0) && yAxis.getPixel(yBottom);\n\n    median = config.median;\n    yMed = median && median.value; // || yBottom;\n    yMedPos = (yMed || yMed === 0) && yAxis.getPixel(yMed);\n\n    upperBoxH = yMedPos - yTopPos;\n    lowerBoxH = yBottomPos - yMedPos;\n\n    upperBoxBorder = config.upperBoxBorder || {};\n    lowerBoxBorder = config.lowerBoxBorder || {};\n\n    valuePadding = config.valuePadding;\n\n    config.eventArgs = {\n      index: i,\n      link: setLink,\n      maximum: config.max,\n      minimum: config.min,\n      median: yMed,\n      q3: upperQuartile.value,\n      q1: lowerQuartile.value,\n      maxDisplayValue: config.showMaxValues ? numberFormatter.dataLabels(config.max) : BLANKSTRING,\n      minDisplayValue: config.showMinValues ? numberFormatter.dataLabels(config.min) : BLANKSTRING,\n      medianDisplayValue: config.showMedianValues ? numberFormatter.dataLabels(yMed) : BLANKSTRING,\n      q1DisplayValue: config.showQ1Values ? numberFormatter.dataLabels(lowerQuartile.value)\n        : BLANKSTRING,\n      q3DisplayValue: config.showQ3Values ? numberFormatter.dataLabels(upperQuartile.value)\n        : BLANKSTRING,\n      categoryLabel: config.label,\n      toolText: config.toolText,\n      datasetIndex: conf.index,\n      datasetName: dataset.config.JSONData.seriesname,\n      visible: visible,\n      value: config.rawValue,\n      showValue: config.showValue,\n      upperBoxColor: config.upperBoxColor,\n      upperBoxAlpha: config.upperBoxAlpha,\n      lowerBoxColor: config.lowerBoxColor,\n      lowerBoxAlpha: config.lowerBoxAlpha,\n      upperQuartileColor: upperQuartile.rawColor,\n      upperQuartileThickness: upperQuartile.borderWidth,\n      upperQuartileAlpha: upperQuartile.alpha,\n      lowerQuartileColor: lowerQuartile.rawColor,\n      lowerQuartileThickness: lowerQuartile.borderWidth,\n      lowerQuartileAlpha: lowerQuartile.alpha,\n      upperBoxBorderColor: upperBoxBorder.rawColor,\n      upperBoxBorderThickness: upperBoxBorder.borderWidth,\n      upperBoxBorderAlpha: upperBoxBorder.alpha,\n      lowerBoxBorderColor: lowerBoxBorder.rawColor,\n      lowerBoxBorderThickness: lowerBoxBorder.borderWidth,\n      lowerBoxBorderAlpha: lowerBoxBorder.alpha,\n      upperWhiskerColor: config.upperWhiskerRawColor,\n      upperWhiskerThickness: config.upperWhiskerThickness,\n      lowerWhiskerThickness: config.lowerWhiskerThickness,\n      lowerWhiskerColor: config.lowerWhiskerRawColor,\n      upperWhiskerAlpha: config.upperWhiskerAlpha,\n      lowerWhiskerAlpha: config.lowerWhiskerAlpha,\n      outliers: config.outliers\n    };\n\n    // upperBox\n    crispX = Math.round(xPos) + upperBoxBorder.borderWidth % 2 *\n      0.5;\n    crispX2 = Math.round(xPos + columnWidth) +\n      upperBoxBorder.borderWidth % 2 * 0.5;\n    crispY = Math.round(yTopPos) + upperQuartile.borderWidth %\n      2 * 0.5;\n    columnWidth = crispX2 - crispX;\n\n    hoverOutEffects = {\n      upperBox: {\n        fill: toRaphaelColor(config.upperColorArr[0]), // upperQuartile.color\n        'stroke-width': 0,\n        'stroke-dasharray': NONE,\n        cursor: setLink ? POINTER : BLANKSTRING,\n        visibility: visible\n      },\n      lowerBox: {\n        fill: toRaphaelColor(config.lowerColorArr[0]),\n        'stroke-width': 0,\n        'stroke-dasharray': NONE,\n        cursor: setLink ? POINTER : BLANK,\n        visibility: visible\n      },\n      upperBoxBorder: {\n        stroke: upperBoxBorder.color,\n        'stroke-width': upperBoxBorder.borderWidth,\n        'stroke-linecap': ROUND,\n        dashstyle: upperBoxBorder.dashStyle,\n        visibility: visible\n      },\n      lowerBoxBorder: {\n        stroke: lowerBoxBorder.color,\n        'stroke-width': lowerBoxBorder.borderWidth,\n        dashstyle: lowerBoxBorder.dashStyle,\n        'stroke-linecap': ROUND,\n        visibility: visible\n      },\n      upperQuartile: {\n        stroke: toRaphaelColor(upperQuartile.color),\n        'stroke-width': upperQuartile.borderWidth,\n        'stroke-dasharray': upperQuartile.dashSyle,\n        'stroke-linecap': ROUND,\n        cursor: setLink ? POINTER : BLANK,\n        visibility: visible\n      },\n      lowerQuartile: {\n        stroke: toRaphaelColor(lowerQuartile.color),\n        'stroke-width': lowerQuartile.borderWidth,\n        'stroke-dasharray': lowerQuartile.dashSyle,\n        cursor: setLink ? POINTER : BLANKSTRING,\n        'stroke-linecap': ROUND,\n        visibility: visible\n      },\n      median: {\n        stroke: toRaphaelColor(median.color),\n        'stroke-width': median.borderWidth,\n        'stroke-dasharray': median.dashSyle,\n        cursor: setLink ? POINTER : BLANKSTRING,\n        'stroke-linecap': ROUND,\n        visibility: visible\n      }\n    };\n\n    upperBoxStartPos = lastDataSetYpos || crispY;\n\n    // draw upperbox element\n    upperBoxElemAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      x: crispX,\n      y: lastDataSetYpos || crispY,\n      width: Math.max(columnWidth, 0),\n      height: Math.max(Math.min(lastDataSetHeight, upperBoxH), 0),\n      r: 0\n    }, hoverOutEffects.upperBox);\n\n    // upperBoxBorder element\n    upperBoxBorderEleAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      path: [M, crispX, lastDataSetYpos || crispY, V, lastDataSetYpos || crispY + upperBoxH,\n        M, crispX2, lastDataSetYpos || crispY, V, lastDataSetYpos || crispY + upperBoxH]\n    }, hoverOutEffects.upperBoxBorder);\n\n    // upperQuartileBorder element\n    upperQuartileEleAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      path: [M, crispX, (lastDataSetYpos || crispY), H, (crispX + columnWidth)]\n    }, hoverOutEffects.upperQuartile);\n\n    errorStartPos = crispY;\n    errorBarWidth = columnWidth * (conf.whiskerslimitswidthratio / 100);\n    halfErrorBarW = errorBarWidth / 2;\n\n    // Vertical Error drawing\n    errorValPos = yAxis.getPixel(config.max);\n    crispyY = errorValPos;\n    crispyX = crispX;\n\n    crispyY = Math.round(errorValPos) +\n      (config.upperWhiskerThickness % 2 / 2);\n    crispX = Math.round(crispX + (columnWidth / 2)) +\n      (config.upperWhiskerThickness % 2 / 2);\n\n    errorPath = [\n      M, crispX, lastDataSetYpos || errorStartPos,\n      V, Math.min(lastDataSetYpos || crispyY, upperBoxStartPos),\n      M, crispX - halfErrorBarW, Math.min(lastDataSetYpos || crispyY, upperBoxStartPos),\n      H, (crispX + halfErrorBarW)\n    ];\n\n    upperWhiskerEleAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      path: errorPath,\n      'stroke-width': config.upperWhiskerThickness,\n      'cursor': setLink ? POINTER : BLANKSTRING,\n      'stroke-linecap': ROUND,\n      stroke: config.upperWhiskerColor,\n      visibility: visible\n    };\n\n    plotDataLabelStyle = config.dataLabelStyle;\n    smartLabel.useEllipsesOnOverflow(dataset.getFromEnv('chartConfig').useEllipsesWhenOverflow);\n    smartLabel.setStyle(style);\n    smartText = smartLabel.getOriSize(numberFormatter.dataLabels(config.max));\n    lineHeight = (rotateValues ? smartText.width\n      : smartText.height);\n    labelTopY = errorValPos - config.upperWhiskerThickness *\n      0.5 - valuePadding - lineHeight * (rotateValues ? 0.5 : 1);\n\n    if ((labelTopY - (rotateValues ? (lineHeight / 2) : 0)) < chartConfig.canvasTop) {\n      labelTopY = chartConfig.canvasTop + (rotateValues ? (lineHeight / 2) : 0);\n    }\n\n    upperQuartileMaxLabelAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      text: numberFormatter.dataLabels(config.max),\n      x: crispyX + columnWidth / 2,\n      title: (upperQuartile.originalText || BLANKSTRING),\n      y: lastDataSetYpos || labelTopY,\n      'text-anchor': rotateValues ? POSITION_MIDDLE : textAlign,\n      'vertical-align': rotateValues ? POSITION_MIDDLE : POSITION_TOP,\n      'visibility': visibleStr,\n      direction: conf.textDirection,\n      fill: plotDataLabelStyle.color,\n      transform: getSuggestiveRotation(rotateValues, crispyX + columnWidth / 2, labelTopY),\n      'text-bound': [plotDataLabelStyle.backgroundColor, plotDataLabelStyle.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash\n      ]\n    };\n\n    crispX = Math.round(xPos) + lowerBoxBorder.borderWidth % 2 *\n      0.5;\n    crispX2 = Math.round(xPos + columnWidth) +\n      lowerBoxBorder.borderWidth % 2 * 0.5;\n    crispY = Math.round(yMedPos + lowerBoxH) +\n      lowerQuartile.borderWidth % 2 * 0.5;\n\n    lowerBoxYPos = lastDataSetYpos || yMedPos;\n    lowerBoxHeight = Math.max(Math.min(lastDataSetHeight, (crispY - yMedPos)), 0);\n\n    lowerBoxEndPos = (lowerBoxYPos + lowerBoxHeight);\n\n    // draw lower element\n    lowerBoxElemAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      x: crispX,\n      y: lowerBoxYPos,\n      width: Math.max(columnWidth, 0),\n      height: lowerBoxHeight,\n      r: 0\n    }, hoverOutEffects.lowerBox);\n\n    // lowerBoxBorder element\n    lowerBoxBorderEleAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      path: [M, crispX, lastDataSetYpos || yMedPos, V, lastDataSetYpos || yMedPos +\n        lowerBoxH, M, crispX2, lastDataSetYpos || yMedPos, V,\n      lastDataSetYpos || yMedPos + lowerBoxH]\n    }, hoverOutEffects.lowerBoxBorder);\n\n    // lowerQuartileBorder element\n    crispY = Math.round(yMedPos + lowerBoxH) +\n      lowerQuartile.borderWidth % 2 * 0.5;\n\n    lowerQuartileEleAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      path: [M, crispX, lastDataSetYpos || crispY, H, (crispX + columnWidth)]\n    }, hoverOutEffects.lowerQuartile);\n\n    errorStartPos = crispY;\n    errorBarWidth = columnWidth * (conf.whiskerslimitswidthratio / 100);\n    halfErrorBarW = errorBarWidth / 2;\n\n    // Vertical Error drawing\n    errorValPos = yAxis.getPixel(config.min);\n    crispyY = errorValPos;\n    crispyX = crispX;\n\n    crispyY = Math.round(errorValPos) +\n      (config.lowerWhiskerThickness % 2 / 2);\n    crispyX = Math.round(crispyX + (columnWidth / 2)) +\n      (config.lowerWhiskerThickness % 2 / 2);\n\n    errorPath = [\n      M, crispyX, lastDataSetYpos || errorStartPos,\n      V, Math.max(lastDataSetYpos || crispyY, lowerBoxEndPos),\n      M, crispyX - halfErrorBarW, Math.max(lastDataSetYpos || crispyY, lowerBoxEndPos),\n      H, (crispyX + halfErrorBarW)\n    ];\n\n    smartLabel.setStyle(style);\n    smartText = smartLabel.getOriSize(numberFormatter.dataLabels(config.min));\n    lineHeight = (rotateValues ? smartText.width\n      : smartText.height);\n\n    labelBottomY = errorValPos + (config.lowerWhiskerThickness * 0.5) + valuePadding;\n\n    if ((labelBottomY + lineHeight) > chartConfig.canvasBottom) {\n      labelBottomY = chartConfig.canvasBottom - lineHeight;\n    }\n\n    upperQuartileMinLabelAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      text: numberFormatter.dataLabels(config.min),\n      x: crispyX,\n      title: (upperQuartile.originalText || BLANKSTRING),\n      y: lastDataSetYpos || labelBottomY,\n      'text-anchor': rotateValues ? POSITION_END : textAlign,\n      'vertical-align': rotateValues ? POSITION_MIDDLE : POSITION_TOP,\n      'visibility': visibleStr,\n      direction: conf.textDirection,\n      fill: plotDataLabelStyle.color,\n      transform: getSuggestiveRotation(rotateValues, crispyX, labelBottomY),\n      'text-bound': [plotDataLabelStyle.backgroundColor, plotDataLabelStyle.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash\n      ]\n    };\n\n    lowerWhiskerEleAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      path: errorPath,\n      'stroke-width': config.lowerWhiskerThickness,\n      'cursor': setLink ? POINTER : BLANKSTRING,\n      'stroke-linecap': ROUND,\n      stroke: config.lowerWhiskerColor,\n      visibility: visible\n    };\n\n    // medianBorder\n    crispY = Math.round(yMedPos) + median.borderWidth % 2 * 0.5;\n\n    midLineElemAttr = Object.assign({ // eslint-disable-line good-practices/no-single-usage-variable\n      path: [M, crispX, lastDataSetYpos || crispY, H, (crispX + columnWidth)]\n    }, hoverOutEffects.median);\n\n    textAlign = rotateValues ? POSITION_LEFT\n      : POSITION_MIDDLE;\n\n    upperQuartileLabelAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      text: upperQuartile.displayValue,\n      x: xPos + (columnWidth / 2),\n      title: (upperQuartile.originalText || BLANKSTRING),\n      y: yTopPos - valuePadding,\n      'text-anchor': rotateValues ? POSITION_START : textAlign,\n      'vertical-align': rotateValues ? POSITION_MIDDLE : POSITION_BOTTOM,\n      'visibility': visibleStr,\n      direction: conf.textDirection,\n      fill: plotDataLabelStyle.color,\n      transform: getSuggestiveRotation(rotateValues, xPos + (columnWidth / 2),\n        yTopPos - valuePadding),\n      'text-bound': [plotDataLabelStyle.backgroundColor, plotDataLabelStyle.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash\n      ]\n    };\n\n    medianLabelAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      text: median.displayValue,\n      x: crispX + columnWidth / 2,\n      y: yMedPos - valuePadding,\n      title: (median.originalText || BLANKSTRING),\n      'text-anchor': rotateValues ? POSITION_START : textAlign,\n      'vertical-align': rotateValues ? POSITION_MIDDLE : POSITION_BOTTOM,\n      'visibility': visibleStr,\n      direction: conf.textDirection,\n      fill: plotDataLabelStyle.color,\n      transform: getSuggestiveRotation(rotateValues, crispX + columnWidth / 2,\n        yMedPos - valuePadding),\n      'text-bound': [plotDataLabelStyle.backgroundColor, plotDataLabelStyle.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash\n      ]\n    };\n\n    lowerQuartileLabelAttr = { // eslint-disable-line good-practices/no-single-usage-variable\n      text: lowerQuartile.displayValue,\n      x: xPos + columnWidth / 2,\n      y: yBottomPos + valuePadding,\n      title: (lowerQuartile.originalText || BLANKSTRING),\n      'text-anchor': rotateValues ? POSITION_START : textAlign,\n      'vertical-align': rotateValues ? POSITION_MIDDLE : POSITION_TOP,\n      'visibility': visibleStr,\n      direction: conf.textDirection,\n      fill: plotDataLabelStyle.color,\n      transform: getSuggestiveRotation(rotateValues, xPos + columnWidth / 2,\n        yBottomPos + valuePadding),\n      'text-bound': [plotDataLabelStyle.backgroundColor, plotDataLabelStyle.borderColor,\n        style.borderThickness, style.borderPadding,\n        style.borderRadius, style.borderDash\n      ]\n    };\n\n    config.props = {\n      lowerBoxBorderEle: {\n        attr: lowerBoxBorderEleAttr\n      },\n      lowerBoxElem: {\n        attr: lowerBoxElemAttr\n      },\n      lowerQuartileEle: {\n        attr: lowerQuartileEleAttr\n      },\n      lowerWhiskerEle: {\n        attr: lowerWhiskerEleAttr\n      },\n      midLineElem: {\n        attr: midLineElemAttr\n      },\n      upperBoxElem: {\n        attr: upperBoxElemAttr\n      },\n      upperBoxBorderEle: {\n        attr: upperBoxBorderEleAttr\n      },\n      upperQuartileEle: {\n        attr: upperQuartileEleAttr\n      },\n      upperWhiskerEle: {\n        attr: upperWhiskerEleAttr\n      },\n      upperQuartileMaxLabel: {\n        attr: upperQuartileMaxLabelAttr\n      },\n      upperQuartileMinLabel: {\n        attr: upperQuartileMinLabelAttr\n      },\n      medianLabel: {\n        attr: medianLabelAttr\n      },\n      upperQuartileLabel: {\n        attr: upperQuartileLabelAttr\n      },\n      lowerQuartileLabel: {\n        attr: lowerQuartileLabelAttr\n      }\n    };\n  }\n  /**\n   * Parses attributes and allocates position during\n   * post space management\n   *\n   * @memberof BoxAndWhiskerDataset\n   */\n  allocatePosition () {\n    var dataset = this,\n      setDataArr = dataset.config.JSONData.data,\n      datasetLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      catLen = dataset.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      dataStore = dataset.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      i,\n      len;\n\n    len = Math.min(catLen, datasetLen); // eslint-disable-line good-practices/no-single-usage-variable\n\n    dataset.setColumnPosition();\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      dataset.parsePlotAttributes(dataObj, i);\n    }\n  }\n  /**\n   * functioto draw and update the graphics elements of plots\n   */\n  drawPlots () {\n    var dataset = this,\n      conf = dataset.config,\n      setDataArr = dataset.config.JSONData.data,\n      datasetLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      len,\n      i,\n      chart = dataset.getFromEnv('chart'),\n      catLen = dataset.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      toolText,\n      dataStore = dataset.components.data,\n      dataObj,\n      setValue,\n      config,\n      showShadow = conf.showShadow,\n      upperBoxContainer = dataset.getContainer('upperBoxGroup').toBack(),\n      lowerBoxContainer = dataset.getContainer('lowerBoxGroup'),\n      medianContainer = dataset.getContainer('medianGroup'),\n      upperWhiskerContainer = dataset.getContainer('upperWhiskerGroup'),\n      lowerWhiskerContainer = dataset.getContainer('lowerWhiskerGroup'),\n      dataLabelContainer = dataset.getContainer('labelGroup'),\n      shadowContainer = dataset.getContainer('shadowGroup'),\n      upperQuartile,\n      applyShadow,\n      lowerQuartile,\n      median,\n      upperBoxElem,\n      upperBoxElemCheck,\n      upperBoxBorderEle,\n      upperBoxBorderEleCheck,\n      upperQuartileEle,\n      upperQuartileEleCheck,\n      lowerBoxElem,\n      lowerBoxElemCheck,\n      lowerBoxBorderEle,\n      lowerBoxBorderEleCheck,\n      lowerQuartileEle,\n      lowerQuartileEleCheck,\n      midLineElem,\n      midLineElemCheck,\n      label,\n      labelCheck,\n      graphic,\n      groupId,\n      upperWhiskerEle,\n      upperWhiskerEleCheck,\n      lowerWhiskerEle,\n      lowerWhiskerEleCheck,\n      ele,\n      graphics,\n      removeDataArr = dataset.components.removeDataArr || [], // eslint-disable-line good-practices/no-single-usage-variable\n      removeDataArrLen = removeDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      newupperBoxElem,\n      newlowerBoxElem,\n      newupperBoxBorderEle,\n      newlowerBoxBorderEle,\n      newupperQuartileEle,\n      newlowerQuartileEle,\n      newmidLineElem,\n      newupperWhiskerEle,\n      newlowerWhiskerEle,\n      hoverInAttr,\n      hoverOutAttr,\n      showHoverEffect = conf.showHoverEffect,\n      k,\n      subarr,\n      arrlen,\n      animationManager = dataset.getFromEnv('animationManager'),\n      // Fired when clicked over the hot elements.\n      clickFunc = function (ele) { // eslint-disable-line\n        return function (e) {\n          chart.plotEventHandler(ele, e);\n        };\n      },\n\n      // Fired on mouse-in over the hot elements.\n      rolloverResponseSetter = function (obj, ele) { // eslint-disable-line\n        return function (data) {\n          var elem;\n          if (ele.data(showHoverEffectStr) !== 0) {\n            for (elem in obj) {\n              if (elem !== LABEL) {\n                animationManager.setAnimation({\n                  el: obj[elem],\n                  doNotRemove: true,\n                  attr: ele.data(SETROLLOVERATTR)[elem],\n                  component: dataset\n                });\n                chart.plotEventHandler(ele, data, ROLLOVER);\n              }\n            }\n          }\n        };\n      },\n\n      // Fired on mouse-out over the hot elements.\n      rolloutResponseSetter = function (obj, ele) { // eslint-disable-line\n        return function (data) {\n          var elem;\n\n          if (ele.data(showHoverEffectStr) !== 0) {\n            for (elem in obj) {\n              if (elem !== LABEL) {\n                animationManager.setAnimation({\n                  el: obj[elem],\n                  doNotRemove: true,\n                  attr: ele.data(SETROLLOUTATTR)[elem],\n                  component: dataset\n                });\n                chart.plotEventHandler(ele, data, ROLLOUT);\n              }\n            }\n          }\n        };\n      },\n      animCallBack = function () {\n        if (dataset.getState('visible') === false && (dataset._conatinerHidden === false ||\n            dataset._conatinerHidden === UNDEFINED)) {\n          upperBoxContainer.hide();\n          lowerBoxContainer.hide();\n          upperWhiskerContainer.hide();\n          lowerWhiskerContainer.hide();\n          medianContainer.hide();\n          shadowContainer.hide();\n          dataLabelContainer && dataLabelContainer.hide();\n          dataset._conatinerHidden = true;\n        }\n      };\n\n    // eslint-disable-next-line good-practices/no-function-dependency\n    applyShadow = function (shadowProps) {\n      return function () {\n        this.show();\n        this.shadow(shadowProps);\n      };\n    };\n\n    dataset.setColumnPosition();\n    if (!dataset.getState('visible')) {\n      dataLabelContainer.hide();\n      upperWhiskerContainer.hide();\n      upperBoxContainer.hide();\n      lowerWhiskerContainer.hide();\n      lowerBoxContainer.hide();\n      medianContainer.hide();\n      shadowContainer.hide();\n    } else {\n      // Showing the groups when visible set to true\n      upperBoxContainer.show();\n      lowerBoxContainer.show();\n      upperWhiskerContainer.show();\n      lowerWhiskerContainer.show();\n      medianContainer.show();\n      shadowContainer.show();\n      dataLabelContainer.show();\n      dataset._conatinerHidden = false;\n    }\n\n    len = Math.min(catLen, datasetLen); // eslint-disable-line good-practices/no-single-usage-variable\n\n    // Create plot elements.\n    for (i = 0; i < len; i++) {\n      // setData = setDataArr && setDataArr[i];\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n      setValue = config && config.setValue;\n\n      newupperBoxElem = false;\n      newlowerBoxElem = false;\n      newupperBoxBorderEle = false;\n      newlowerBoxBorderEle = false;\n      newupperQuartileEle = false;\n      newlowerQuartileEle = false;\n      newmidLineElem = false;\n      newupperWhiskerEle = false;\n      newlowerWhiskerEle = false;\n\n      // If plot value is found \"null\", continue the loop to next iteration.\n      if (!config.explicitData &&\n        (dataObj === UNDEFINED || setValue === UNDEFINED || setValue === null)) {\n        graphics = dataObj.graphics;\n        for (ele in graphics) {\n          if (graphics[ele] instanceof Array) {\n            subarr = graphics[ele];\n            for (k = 0, arrlen = subarr.length; k < arrlen; k++) {\n              subarr[k] && subarr[k].hide();\n            }\n          } else {\n            graphics[ele].hide();\n          }\n        }\n        continue;\n      }\n\n      graphic = dataObj.graphics;\n\n      // Creating the data structure if not present for storing the graphics elements.\n      if (!dataObj.graphics) {\n        dataStore[i].graphics = {};\n      }\n      if (!graphic.label) {\n        dataStore[i].graphics.label = [];\n      }\n\n      upperQuartile = config.upperQuartile || {};\n      lowerQuartile = config.lowerQuartile || {};\n\n      median = config.median;\n      toolText = config.toolText;\n      groupId = conf.index + UNDERSCORE + i;\n\n      upperBoxElemCheck = dataObj.graphics.upperBoxElem;\n      upperBoxElem = animationManager.setAnimation({\n        el: upperBoxElemCheck || 'rect',\n        attr: config.props.upperBoxElem.attr,\n        label: 'upperBox',\n        container: upperBoxContainer,\n        component: dataset\n      });\n      if (!upperBoxElemCheck) {\n        dataObj.graphics.upperBoxElem = upperBoxElem;\n        newupperBoxElem = true;\n      }\n\n      upperBoxElem.shadow({ opacity: showShadow ? conf.upperBoxAlpha / 100 : 0 }, shadowContainer);\n\n      upperBoxBorderEleCheck = dataObj.graphics.upperBoxBorderEle;\n      upperBoxBorderEle = animationManager.setAnimation({\n        el: upperBoxBorderEleCheck || 'path',\n        attr: config.props.upperBoxBorderEle.attr,\n        container: upperBoxContainer,\n        label: 'path',\n        component: dataset\n      });\n      if (!upperBoxBorderEleCheck) {\n        dataObj.graphics.upperBoxBorderEle = upperBoxBorderEle;\n        newupperBoxBorderEle = true;\n      }\n\n      upperQuartileEleCheck = dataObj.graphics.upperQuartileEle;\n      upperQuartileEle = animationManager.setAnimation({\n        el: upperQuartileEleCheck || 'path',\n        attr: config.props.upperQuartileEle.attr,\n        label: 'path',\n        container: upperBoxContainer,\n        component: dataset\n      });\n      if (!upperQuartileEleCheck) {\n        dataObj.graphics.upperQuartileEle = upperQuartileEle;\n        newupperQuartileEle = true;\n      }\n\n      upperWhiskerEleCheck = dataObj.graphics.upperWhiskerEle;\n\n      upperWhiskerEle = animationManager.setAnimation({\n        el: upperWhiskerEleCheck || 'path',\n        attr: config.props.upperWhiskerEle.attr,\n        label: 'path',\n        container: upperWhiskerContainer,\n        component: dataset\n      });\n      applyShadow({ opacity: config.upperWhiskerShadowOpacity }, shadowContainer);\n      if (!upperWhiskerEleCheck) {\n        dataObj.graphics.upperWhiskerEle = upperWhiskerEle;\n        newupperWhiskerEle = true;\n      }\n\n      dataset.getFromEnv('smartLabel').useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n      if (config.showMaxValues) {\n        labelCheck = graphic.label[3];\n        labelCheck && labelCheck.show();\n        label = animationManager.setAnimation({\n          el: labelCheck || 'text',\n          attr: config.props.upperQuartileMaxLabel.attr,\n          component: dataset,\n          label: 'text',\n          container: dataLabelContainer\n        });\n        if (!labelCheck) {\n          graphic.label[3] = label;\n        }\n        graphic.label[3]\n          .data(GROUPID, groupId);\n      } else {\n        graphic.label[3] && animationManager.setAnimation({\n          el: graphic.label[3],\n          component: dataset,\n          attr: { 'text-bound': [] },\n          callback: _hide.call(graphic.label[3])\n        });\n      }\n\n      lowerBoxElemCheck = dataObj.graphics.lowerBoxElem;\n      lowerBoxElem = animationManager.setAnimation({\n        el: lowerBoxElemCheck || 'rect',\n        attr: config.props.lowerBoxElem.attr,\n        label: 'lowerBox',\n        container: lowerBoxContainer,\n        component: dataset\n      });\n      if (!lowerBoxElemCheck) {\n        dataObj.graphics.lowerBoxElem = lowerBoxElem;\n        newlowerBoxElem = true;\n      }\n\n      lowerBoxElem.shadow({ opacity: showShadow ? conf.lowerBoxAlpha / 100 : 0 }, shadowContainer);\n\n      lowerBoxBorderEleCheck = dataObj.graphics.lowerBoxBorderEle;\n      lowerBoxBorderEle = animationManager.setAnimation({\n        el: lowerBoxBorderEleCheck || 'path',\n        attr: config.props.lowerBoxBorderEle.attr,\n        component: dataset,\n        label: 'path',\n        container: lowerBoxContainer\n      });\n      if (!lowerBoxBorderEleCheck) {\n        dataObj.graphics.lowerBoxBorderEle = lowerBoxBorderEle;\n        newlowerBoxBorderEle = true;\n      }\n\n      lowerQuartileEleCheck = dataObj.graphics.lowerQuartileEle;\n      lowerQuartileEle = animationManager.setAnimation({\n        el: lowerQuartileEleCheck || 'path',\n        attr: config.props.lowerQuartileEle.attr,\n        component: dataset,\n        label: 'path',\n        container: lowerBoxContainer\n      });\n      if (!lowerQuartileEleCheck) {\n        dataObj.graphics.lowerQuartileEle = lowerQuartileEle;\n        newlowerQuartileEle = true;\n      }\n\n      lowerWhiskerEle = dataObj.graphics.lowerWhiskerEle;\n\n      if (config.showMinValues) {\n        labelCheck = graphic.label[4];\n        labelCheck && labelCheck.show();\n        label = animationManager.setAnimation({\n          el: labelCheck || 'text',\n          attr: config.props.upperQuartileMinLabel.attr,\n          label: 'text',\n          container: dataLabelContainer,\n          component: dataset\n        });\n        if (!labelCheck) {\n          graphic.label[4] = label;\n        }\n\n        graphic.label[4]\n          .data(GROUPID, groupId);\n      } else {\n        graphic.label[4] && animationManager.setAnimation({\n          el: graphic.label[4],\n          component: dataset,\n          attr: { 'text-bound': [] },\n          callback: _hide.call(graphic.label[4])\n        });\n      }\n\n      lowerWhiskerEleCheck = dataObj.graphics.lowerWhiskerEle;\n      lowerWhiskerEle = animationManager.setAnimation({\n        el: lowerWhiskerEleCheck || 'path',\n        attr: config.props.lowerWhiskerEle.attr,\n        label: 'path',\n        container: lowerWhiskerContainer,\n        component: dataset\n      });\n      applyShadow({ opacity: config.lowerWhiskerShadowOpacity }, shadowContainer);\n      if (!lowerWhiskerEleCheck) {\n        dataObj.graphics.lowerWhiskerEle = lowerWhiskerEle;\n        newlowerWhiskerEle = true;\n      }\n\n      midLineElemCheck = dataObj.graphics.midLineElem;\n      midLineElem = animationManager.setAnimation({\n        el: midLineElemCheck || 'path',\n        component: dataset,\n        label: 'midline',\n        container: medianContainer,\n        attr: config.props.midLineElem.attr\n      });\n      if (!midLineElemCheck) {\n        dataObj.graphics.midLineElem = midLineElem;\n        newmidLineElem = true;\n      }\n\n      hoverInAttr = {\n        upperBoxElem: config.setUpperBoxRolloverAttr,\n        lowerBoxElem: config.setLowerBoxRolloverAttr,\n        upperBoxBorderEle: config.setUpperBoxBorderRolloverAttr,\n        lowerBoxBorderEle: config.setLowerBoxBorderRolloverAttr,\n        upperQuartileEle: config.setUpperQuartileRolloverAttr,\n        lowerQuartileEle: config.setLowerQuartileRolloverAttr,\n        midLineElem: config.setMedianRolloverAttr\n\n      };\n\n      hoverOutAttr = {\n        upperBoxElem: config.setUpperBoxRolloutAttr,\n        lowerBoxElem: config.setLowerBoxRolloutAttr,\n        upperBoxBorderEle: config.setUpperBoxBorderRolloutAttr,\n        lowerBoxBorderEle: config.setLowerBoxBorderRolloutAttr,\n        upperQuartileEle: config.setUpperQuartileRolloutAttr,\n        lowerQuartileEle: config.setLowerQuartileRolloutAttr,\n        midLineElem: config.setMedianRolloutAttr\n      };\n\n      upperBoxElem.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newupperBoxElem) {\n        upperBoxElem.on('fc-click', clickFunc(upperBoxElem));\n        upperBoxElem.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, upperBoxElem));\n        upperBoxElem.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, upperBoxElem));\n      }\n\n      lowerBoxElem.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newlowerBoxElem) {\n        lowerBoxElem.on('fc-click', clickFunc(lowerBoxElem));\n        lowerBoxElem.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, lowerBoxElem));\n        lowerBoxElem.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, lowerBoxElem));\n      }\n\n      upperBoxBorderEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newupperBoxBorderEle) {\n        upperBoxBorderEle.on('fc-click', clickFunc(upperBoxBorderEle));\n        upperBoxBorderEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, upperBoxBorderEle));\n        upperBoxBorderEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, upperBoxBorderEle));\n      }\n\n      lowerBoxBorderEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newlowerBoxBorderEle) {\n        lowerBoxBorderEle.on('fc-click', clickFunc(lowerBoxBorderEle));\n        lowerBoxBorderEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, lowerBoxBorderEle));\n        lowerBoxBorderEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, lowerBoxBorderEle));\n      }\n\n      upperQuartileEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newupperQuartileEle) {\n        upperQuartileEle.on('fc-click', clickFunc(upperQuartileEle));\n        upperQuartileEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, upperQuartileEle));\n        upperQuartileEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, upperQuartileEle));\n      }\n\n      lowerQuartileEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newlowerQuartileEle) {\n        lowerQuartileEle.on('fc-click', clickFunc(lowerQuartileEle));\n        lowerQuartileEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, lowerQuartileEle));\n        lowerQuartileEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, lowerQuartileEle));\n      }\n\n      midLineElem.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newmidLineElem) {\n        midLineElem.on('fc-click', clickFunc(midLineElem));\n        midLineElem.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, midLineElem));\n        midLineElem.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, midLineElem));\n      }\n\n      upperWhiskerEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newupperWhiskerEle) {\n        upperWhiskerEle.on('fc-click', clickFunc(upperWhiskerEle));\n        upperWhiskerEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, upperWhiskerEle));\n        upperWhiskerEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, upperWhiskerEle));\n      }\n\n      lowerWhiskerEle.data(GROUPID, groupId)\n        .data(EVENTARGS, config.eventArgs)\n        .data(showHoverEffectStr, showHoverEffect)\n        .data(SETROLLOVERATTR, hoverInAttr)\n        .data(SETROLLOUTATTR, hoverOutAttr);\n\n      if (newlowerWhiskerEle) {\n        lowerWhiskerEle.on('fc-click', clickFunc(lowerWhiskerEle));\n        lowerWhiskerEle.on('fc-mouseover', rolloverResponseSetter(dataObj.graphics, lowerWhiskerEle));\n        lowerWhiskerEle.on('fc-mouseout', rolloutResponseSetter(dataObj.graphics, lowerWhiskerEle));\n      }\n\n      if (defined(upperQuartile.displayValue) &&\n        upperQuartile.displayValue !== BLANK && config.showQ3Values) {\n        labelCheck = graphic.label[0];\n        labelCheck && labelCheck.show();\n        label = animationManager.setAnimation({\n          el: labelCheck || 'text',\n          attr: config.props.upperQuartileLabel.attr,\n          component: dataset,\n          label: 'text',\n          container: dataLabelContainer\n        });\n        if (!labelCheck) {\n          graphic.label[0] = label;\n        }\n        graphic.label[0]\n          .data(GROUPID, groupId);\n      } else {\n        graphic.label[0] && animationManager.setAnimation({\n          el: graphic.label[0],\n          component: dataset,\n          attr: { 'text-bound': [] },\n          callback: _hide.call(graphic.label[0])\n        });\n      }\n\n      if (defined(median.displayValue) && median.displayValue !== BLANK && config.showMedianValues) {\n        labelCheck = graphic.label[1];\n        labelCheck && labelCheck.show();\n        label = animationManager.setAnimation({\n          el: labelCheck || 'text',\n          attr: config.props.medianLabel.attr,\n          component: dataset,\n          label: 'text',\n          container: dataLabelContainer\n        });\n        label.outlineText(conf.showTextOutline, config.props.medianLabel.attr.fill);\n        if (!labelCheck) {\n          graphic.label[1] = label;\n        }\n        graphic.label[1]\n          .data(GROUPID, groupId);\n      } else {\n        graphic.label[1] && animationManager.setAnimation({\n          el: graphic.label[1],\n          component: dataset,\n          attr: { 'text-bound': [] },\n          callback: _hide.call(graphic.label[1])\n        });\n      }\n\n      if (defined(lowerQuartile.displayValue) &&\n        lowerQuartile.displayValue !== BLANK && config.showQ1Values) {\n        labelCheck = graphic.label[2];\n        label = animationManager.setAnimation({\n          el: labelCheck || 'text',\n          component: dataset,\n          attr: config.props.lowerQuartileLabel.attr,\n          container: dataLabelContainer\n        });\n        if (!labelCheck) {\n          graphic.label[2] = label;\n          label.show();\n        }\n        graphic.label[2]\n          .data(GROUPID, groupId);\n      } else {\n        graphic.label[2] && animationManager.setAnimation({\n          el: graphic.label[2],\n          component: dataset,\n          attr: { 'text-bound': [] },\n          callback: _hide.call(graphic.label[2])\n        });\n      }\n\n      if (conf.showtooltip) {\n        toolTipController.enableToolTip(upperBoxElem, toolText);\n        toolTipController.enableToolTip(lowerBoxElem, toolText);\n        toolTipController.enableToolTip(upperBoxBorderEle, toolText);\n        toolTipController.enableToolTip(lowerBoxBorderEle, toolText);\n        toolTipController.enableToolTip(upperQuartileEle, toolText);\n        toolTipController.enableToolTip(lowerQuartileEle, toolText);\n        toolTipController.enableToolTip(midLineElem, toolText);\n        toolTipController.enableToolTip(upperWhiskerEle, toolText);\n        toolTipController.enableToolTip(lowerWhiskerEle, toolText);\n      } else {\n        toolTipController.enableToolTip(upperBoxElem, false);\n        toolTipController.enableToolTip(lowerBoxElem, false);\n        toolTipController.enableToolTip(upperBoxBorderEle, false);\n        toolTipController.enableToolTip(lowerBoxBorderEle, false);\n        toolTipController.enableToolTip(upperQuartileEle, false);\n        toolTipController.enableToolTip(lowerQuartileEle, false);\n        toolTipController.enableToolTip(midLineElem, false);\n        toolTipController.enableToolTip(upperWhiskerEle, false);\n        toolTipController.enableToolTip(lowerWhiskerEle, false);\n      }\n    }\n\n    // There has to be a provision such that the callback is called after the end of the slot animation\n    animCallBack();\n    removeDataArrLen && dataset.removePlots();\n  }\n  /**\n   * Function to remove a data from a dataset\n   */\n  removePlots () {\n    var dataSet = this,\n      removeDataArr = dataSet.components.removeDataArr,\n      animationManager = dataSet.getFromEnv('animationManager'), // eslint-disable-line good-practices/no-single-usage-variable\n      len = removeDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removeData,\n      ele,\n      graphics,\n      i,\n      innerLen,\n      j;\n\n    for (i = 0; i < len; i++) {\n      removeData = removeDataArr[0];\n      removeDataArr.splice(0, 1);\n      // In case of non existing data plot continue;\n      if (!removeData || !removeData.graphics) {\n        continue;\n      }\n\n      graphics = removeData.graphics;\n      for (ele in graphics) {\n        if (ele !== LABEL) {\n          graphics[ele].shadow({ opacity: 0 });\n          graphics[ele].hide();\n        } else {\n          innerLen = graphics[ele].length;\n          for (j = 0; j < innerLen; j++) {\n            if (graphics[ele][j]) {\n              graphics[ele][j].shadow({ opacity: 0 });\n              animationManager.setAnimation({\n                el: graphics[ele][j],\n                component: dataSet,\n                attr: { 'text-bound': [] },\n                callback: _hide.call(graphics[ele][j])\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Function to remove a data with a given index.\n   * @param {number}  indexVal     from which index data would be removed\n   * @param {number}  stretchVal   delete count\n   * @param {boolean} draw      whether draw or not\n   */\n  removeData (indexVal, stretchVal, draw) {\n    var dataSet = this,\n      index = indexVal,\n      stretch = stretchVal,\n      components = dataSet.components,\n      dataStore = components.data,\n      removeDataArr = components.removeDataArr || (components.removeDataArr = []); // eslint-disable-line good-practices/no-single-usage-variable\n\n    stretch = stretch || 1;\n    index = index || 0;\n\n    // Storing the direction of input data for the type of animation to be done during remove.\n    if ((index + stretch) === dataStore.length) {\n      dataSet.endPosition = true;\n    } else if (index === 0 || index === UNDEFINED) {\n      dataSet.endPosition = false;\n    }\n\n    components.removeDataArr = removeDataArr = removeDataArr.concat(dataStore.splice(index, stretch)); // eslint-disable-line good-practices/no-single-usage-variable\n\n    draw && dataSet.asyncDraw();\n  }\n  /**\n   * parse defualt configuration of the dataset\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.showplotborder = UNDEFINED;\n    config.plotborderdashlen = UNDEFINED;\n    config.plotborderdashgap = UNDEFINED;\n    config.plotfillalpha = UNDEFINED;\n    config.useroundedges = UNDEFINED;\n    config.ratio = UNDEFINED;\n    config.plotborderthickness = UNDEFINED;\n    config.showvalues = UNDEFINED;\n    config.valuepadding = UNDEFINED;\n    config.showtooltip = UNDEFINED;\n    config.maxcolwidth = UNDEFINED;\n    config.rotatevalues = UNDEFINED;\n    config.use3dlighting = UNDEFINED;\n    config.whiskerslimitswidthratio = UNDEFINED;\n    config.outliersupperrangeratio = UNDEFINED;\n    config.outlierslowerrangeratio = UNDEFINED;\n    config.showalloutliers = UNDEFINED;\n    config.showmean = UNDEFINED;\n    config.showsd = UNDEFINED;\n    config.showmd = UNDEFINED;\n    config.showqd = UNDEFINED;\n    config.showminvalues = UNDEFINED;\n    config.showmaxvalues = UNDEFINED;\n    config.showq1values = UNDEFINED;\n    config.showq3values = UNDEFINED;\n    config.showmedianvalues = UNDEFINED;\n  }\n\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var dataset = this,\n      conf = dataset.config,\n      removed = dataset.getState('removed');\n    return {\n      max: removed ? -Infinity : conf.maxValue,\n      min: removed ? +Infinity : conf.minValue\n    };\n  }\n\n  /**\n   * Function to register datasets in the internal data store of legend class.\n   */\n  _addLegend () {\n    var dataset = this,\n      // chart = dataset.chart,\n      fillColor,\n      config,\n      conf = dataset.config,\n      legendItem,\n      legend = dataset.getFromEnv('legend'),\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      JSONData = conf.JSONData || {},\n      upperBoxColor = conf.upperBoxColor,\n      lowerBoxColor = conf.lowerBoxColor; // eslint-disable-line good-practices/no-single-usage-variable\n\n    fillColor = { // eslint-disable-line good-practices/no-single-usage-variable\n      FCcolor: {\n        color: upperBoxColor + COMMA + lowerBoxColor,\n        angle: 90,\n        ratio: '50, 0',\n        alpha: '100, 100'\n      }\n    };\n\n    config = { // eslint-disable-line good-practices/no-single-usage-variable\n      label: getFirstValue(dataset.config.JSONData.seriesname),\n      index: dataset.getJSONIndex(),\n      mainDS: true\n    };\n    if (conf.includeInLegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      }\n      legendItem.configure(config);\n\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor(fillColor),\n          bgAlpha: pluckNumber(JSONData.legendiconbgalpha, JSONData.legendiconalpha, chartAttr.legendiconbgalpha, chartAttr.legendiconalpha, conf.plotfillalpha),\n          borderAlpha: pluckNumber(JSONData.legendiconborderalpha, JSONData.legendiconalpha, chartAttr.legendiconborderalpha, chartAttr.legendiconalpha, conf.plotfillalpha),\n          rawFillColor: conf.upperBoxColor,\n          stroke: toRaphaelColor(strokeColor)\n        },\n        background: {\n          legendBackgroundColor: toRaphaelColor(upperBoxColor),\n          alpha: 20\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item if dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n    dataset._mapChildren((child) => {\n      if (!child.getState('removed')) {\n        child.addToEnv('legendBackgroundColor', upperBoxColor);\n        child && child._addLegend(true);\n      }\n    });\n  }\n\n  /**\n   * Fuction to be fired on legend click\n   * @param  {Object} legendItem which legend is clicked\n   */\n  legendInteractivity () {\n    var dataset = this,\n      childDS = dataset.getChildren('dataset'),\n      state,\n      i;\n    state = dataset.getState('visible') ? 'hide' : 'show';\n\n    for (i = 0; i < (childDS && childDS.length); i++) {\n      childDS[i][state]();\n    }\n    dataset[state]();\n  }\n\n  /**\n   * Over-writting drawLabel of column chart\n   * @return {Object} the dataset object\n   */\n  drawLabel () {\n    return this;\n  }\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'boxandwhisker2D';\n  }\n\n  /**\n   * Over-writting childChanged of column chart\n   * @return {Object} the dataset object\n   */\n  childChanged () {\n    return this;\n  }\n\n  /**\n   * Function to show the dataset and raise an event\n   */\n  show () {\n    super.show();\n  }\n\n  /**\n   * Function to hide the dataset and raise an event\n   */\n  hide () {\n    super.hide();\n  }\n}\n\nexport default BoxAndWhiskerDataset;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Linedataset from '@fusioncharts/charts/src/dataset/line';\nimport { pluckNumber, pluck, getFirstValue, toRaphaelColor, preDefStr }\n  from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport boxandwhiskerlineAnimation from './boxandwhiskerline.animation';\nlet UNDEF,\n  POLYGON = preDefStr.POLYGON,\n  SPOKE = preDefStr.SPOKE,\n  BOLDSTARTTAG = '<b>',\n  BOLDENDTAG = '</b>',\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {Object} attrs  List of attributes that are applied to the created group.\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (attrs, parentContainer, dataset) {\n    return dataset.getFromEnv('animationManager').setAnimation({\n      el: 'group',\n      attr: attrs,\n      container: parentContainer,\n      component: dataset,\n      label: 'group'\n    });\n  };\naddDep({\n  name: 'boxandwhiskerlineAnimation',\n  type: 'animationRule',\n  extension: boxandwhiskerlineAnimation\n});\n/**\n * Class for boxAndWhiskerLine dataset\n */\nclass BoxAndWhiskerLinedataset extends Linedataset {\n  /**\n   * Gets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'boxandwhiskerline';\n  }\n  /**\n   * Create pixel coordinates for the plots\n   */\n  createCoordinates () {\n    var dataset = this,\n      dsData = dataset.components.data,\n      // chart = dataset.getFromEnv('chart'),\n      // isBar = chart.isBar,\n      yAxis = dataset.getFromEnv('yAxis'), // eslint-disable-line good-practices/no-single-usage-variable\n      xAxis = dataset.getFromEnv('xAxis'), // eslint-disable-line good-practices/no-single-usage-variable\n      // yBase = yAxis.getAxisBase(),\n      // yBasePos = yAxis.getPixel(yBase),\n      dataObj,\n      config,\n      // previousY,\n      i,\n      Px,\n      Py,\n      len = dsData.length; // eslint-disable-line good-practices/no-single-usage-variable\n\n    // !isBar && (xDepth = -xDepth);\n    // isBar && (yDepth = -yDepth);\n\n    for (i = 0; i < len; i++) {\n      dataObj = dsData[i];\n      config = dataObj && dataObj.config;\n\n      if (dataObj === UNDEF) {\n        continue;\n      }\n      // previousY = config._b;\n      Px = xAxis.getPixel(config._x);\n      Py = yAxis.getPixel(config._y);\n      // Pb = (previousY ? yAxis.getPixel(previousY) : yBasePos) + yDepth;\n\n      config._Px = Px + dataset.getFromEnv('columnXShift') + dataset.getFromEnv('columnWidth') / 2;\n      config._Py = Py;\n      // config._Pby = Pb;\n      // config._Pbx = Px;\n    }\n  }\n  /**\n  * Returns all plots between the provided category indices\n  * @param {Number} min Min category index\n  * @param {Number} max Max category index\n  * @return {Array} Plots between those indices\n  */\n  getAllPlots (min, max) {\n    let data = this.components.data,\n      allPlots = [],\n      i,\n      len;\n    for (i = 0, len = data.length; i < len; i++) { // eslint-disable-line good-practices/no-single-usage-variable\n      if (data[i].config._x >= min || data[i].config._x <= max) {\n        allPlots.push(data[i]);\n      }\n    }\n    return allPlots;\n  }\n\n  /**\n   * calculate min and max position to scroll\n   */\n  calculateScrollRange () {\n    let dataSet = this,\n      conf = dataSet.config,\n      data = dataSet.components.data; // eslint-disable-line good-practices/no-single-usage-variable\n    conf.scrollMinVal = 0;\n    conf.scrollMaxVal = data.length;\n\n    // Since panning and data skipping are not applicable for scatter and bubble charts, the labels'\n    // minimum and maximum index to be drawn is the same as the plots' minimum and maximum index.\n    conf.scrollMinValForLabel = conf.scrollMinVal;\n    conf.scrollMaxValForLabel = conf.scrollMaxVal;\n  }\n  /**\n   * Function that return the nearest plot details\n   * @param   {number} chartXVal x-axis position of the mouse cordinate\n   * @param   {number} chartYVal y-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest plot and whether it is\n   *                   hovered or not\n   */\n  _getHoveredPlot (chartXVal, chartYVal) {\n    var dataset = this,\n      chartX = chartXVal,\n      chartY = chartYVal,\n      xAxis = dataset.getFromEnv('xAxis'),\n      dataStore = dataset.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      pointObj,\n      xMin,\n      xMax,\n      len = dataStore.length, // eslint-disable-line good-practices/no-single-usage-variable\n      returnValue,\n      conf = dataset.config,\n      j,\n      maxRadius = (conf && conf.radius) || 0,\n      allPlots;\n\n    // getting new chart XY accordint to Translation of axis\n    chartX += xAxis.getTranslation();\n\n    xMin = Math.floor(Math.max(xAxis.getValue(chartX - maxRadius), 0)); // eslint-disable-line good-practices/no-single-usage-variable\n\n    xMax = Math.ceil(Math.min(xAxis.getValue(chartX + maxRadius), len - 1)); // eslint-disable-line good-practices/no-single-usage-variable\n    allPlots = dataset.getAllPlots(xMin, xMax);\n    for (j = allPlots.length; j >= 0; j--) {\n      pointObj = allPlots[j];\n      if (pointObj) {\n        returnValue = dataset.isWithinShape(pointObj, j, chartX, chartY);\n        if (returnValue) {\n          break;\n        }\n      }\n    }\n\n    return returnValue;\n  }\n  /**\n   * Function to add legend for LineDs only when the function is called from its parent ds\n   * @param {boolean} callFromParentDS if call is from parent ds\n   */\n  _addLegend (callFromParentDS) {\n    if (!callFromParentDS) {\n      return;\n    }\n    var dataset = this,\n      conf = dataset.config,\n      legend = dataset.getFromEnv('chart').getChildren('legend')[0],\n      legendItem,\n      drawAnchors = pluckNumber(conf.drawanchors, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      config;\n    if (conf.includeinlegend) {\n      config = {\n        anchorSide: drawAnchors ? conf.anchorsides : 0,\n        label: getFirstValue(conf.JSONData.seriesname),\n        customLegendIcon: false,\n        spoke: (conf.dip === 'spoke') ? 1 : 0,\n        drawLine: !conf.showline,\n        index: dataset.getJSONIndex()\n      };\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      }\n      legendItem.configure(config);\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor({\n            color: conf.anchorbgcolor,\n            alpha: conf.anchorbgalpha\n          }),\n          rawFillColor: conf.anchorbgcolor,\n          stroke: toRaphaelColor({\n            color: conf.anchorbordercolor,\n            alpha: '100'\n          })\n        },\n        background: {\n          legendBackgroundColor: toRaphaelColor(dataset.getFromEnv('legendBackgroundColor')),\n          alpha: 20\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item is dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    */\n  configureAttributes (datasetJSON) {\n    super.configureAttributes(datasetJSON);\n    var dataset = this,\n      JSONData = dataset.config.JSONData,\n      conf = dataset.config;\n    dataset.setState('visible', dataset.getLinkedParent().getState('visible'));\n    // chartAttr = dataset.getFromEnv('chart-attrib');\n\n    conf.skipCommonElements = JSONData.showline;\n    conf.dip = JSONData.dip;\n  }\n\n  /**\n   * function to create group for dataset\n   */\n  createContainer () {\n    var dataset = this,\n      parent = dataset.getLinkedParent().getLinkedParent(),\n      group = (dataset.groupName || dataset.dsGroup || dataset.getType()),\n      parentContainer,\n      parentShadowContainer;\n\n    !parent.getChildContainer(group + 'VcanvasGroup') && (group = 'default');\n    parentContainer = parent.getChildContainer('manager-defaultVcanvasGroup-lines');\n    parentShadowContainer = parent.getChildContainer(group + 'ShadowVcanvasGroup'); // eslint-disable-line good-practices/no-single-usage-variable\n\n    !dataset.getContainer('shadowGroup') && dataset.addContainer('shadowGroup',\n      createGroup({ name: 'shadow-group' }, parentShadowContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('commonElemsGroup',\n      createGroup({ name: 'common-elems-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('plotGroup') && dataset.addContainer('plotGroup',\n      createGroup({ name: 'common-elems-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('labelGroup') && dataset.addContainer('labelGroup',\n      createGroup({ name: 'label-group',\n        class: 'fusioncharts-datalabels',\n        opacity: 1 }, parent.getChildContainer('vcanvasLabelGroup'), dataset));\n  }\n\n  /**\n   * Configure data level\n   * @param {Object} newDataset new dataset added\n   * @param {Object} newIndex new added dataset index\n   */\n  _setConfigure (newDataset, newIndex) {\n    var dataSet = this,\n      conf = dataSet.config,\n      chartConfig = dataSet.getFromEnv('chartConfig'), // eslint-disable-line good-practices/no-single-usage-variable\n      JSONData = dataSet.config.JSONData,\n      setDataArr = newDataset || JSONData.data || [],\n      setData,\n      dataObj,\n      catLen = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      newDataSetLen = newDataset && newDataset.data.length,\n      len = (JSONData.seriesname === 'Outliers' ? setDataArr.length\n        : (newDataSetLen || Math.min(catLen, setDataArr.length))),\n      dataStore,\n      i,\n      plotIndex,\n      config,\n      outlierIconShape,\n      tempIndex;\n\n    conf.imageCount = 0;\n    dataStore = dataSet.components.data;\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n    conf.maxRadius = -Infinity;\n\n    for (i = 0; i < len; i++) {\n      if (newDataset) {\n        setData = (newDataset && newDataset.data[i]) || {};\n\n        if (newIndex !== UNDEF) {\n          tempIndex = newIndex + i;\n          dataObj = dataStore[tempIndex];\n        } else {\n          tempIndex = dataStore.length - len + i;\n          dataObj = dataStore[tempIndex];\n        }\n        plotIndex = tempIndex;\n      } else {\n        dataObj = dataStore[i];\n        setData = (setDataArr && setDataArr[i]) || {};\n        plotIndex = i;\n      }\n\n      if (!dataObj) {\n        dataObj = dataStore[plotIndex] = {};\n      }\n\n      if (!dataObj.config) {\n        dataObj.config = {};\n      }\n\n      if (!dataObj.graphics) {\n        dataObj.graphics = {};\n      }\n\n      dataSet._plotConfigure(plotIndex, setData, newDataSetLen);\n      tempIndex && tempIndex++;\n\n      config = dataObj && dataObj.config;\n      outlierIconShape = pluck(setData.dip, JSONData.dip);\n      config.dip = (outlierIconShape === POLYGON) ? 0 : (outlierIconShape === SPOKE) ? 1 : 0;\n      config.toolText = config.finalTooltext = BOLDSTARTTAG + JSONData.seriesname + chartConfig.tooltipsepchar + BOLDENDTAG + config.displayValue;\n    }\n  }\n}\n\nexport default BoxAndWhiskerLinedataset;\n","export default {\n  'initial.dataset.boxandwhiskerline': function () {\n    return {\n      'line.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        finalAttr: {\n          opacity: 1\n        },\n        slot: 'plot',\n        startEnd: {\n          start: 0.5,\n          end: 1\n        }\n      }],\n      'anchor.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        finalAttr: {\n          opacity: 1\n        },\n        slot: 'plot',\n        startEnd: {\n          start: 0.5,\n          end: 1\n        }\n      }]\n    };\n  }\n};\n","export default {\n  'initial.dataset.boxandwhisker2D': function () {\n    return {\n      'upperBox.appearing': (inputJSON) => {\n        return [{\n          initialAttr: {\n            x: inputJSON.attr.x,\n            y: inputJSON.attr.y + inputJSON.attr.height,\n            height: 0,\n            width: inputJSON.attr.width\n          },\n          slot: 'plot',\n          startEnd: {\n            start: 0,\n            end: 0.5\n          }\n        }];\n      },\n      'lowerBox.appearing': (inputJSON) => {\n        return [{\n          initialAttr: {\n            x: inputJSON.attr.x,\n            y: inputJSON.attr.y,\n            height: 0,\n            width: inputJSON.attr.width\n          },\n          slot: 'plot',\n          startEnd: {\n            start: 0,\n            end: 0.5\n          }\n        }];\n      },\n      'path.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        finalAttr: {\n          opacity: 1\n        },\n        slot: 'plot',\n        startEnd: {\n          start: 0.5,\n          end: 1\n        }\n      }],\n      'midline.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        finalAttr: {\n          opacity: 1\n        },\n        slot: 'plot',\n        startEnd: {\n          start: 0,\n          end: 0.2\n        }\n      }],\n      'group.appearing': (inputJSON) => {\n        if (inputJSON.attr.name === 'label-group') {\n          return [{\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'final'\n          }];\n        }\n        return [{\n          initialAttr: {\n            opacity: 1\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","import { datasetFactory, componentFactory } from '@fusioncharts/core/src/lib';\nimport BoxAndWhiskerStatisticalCalc from '../dataset/boxandwhisker/box-and-whisker-statistical-calc';\n/**\n * function to  create dataset\n * sort data wrt. x value\n * assign dataset to its parents\n **/\nexport default function (chart) {\n  let datasetsJSON = chart.getFromEnv('dataSource').dataset,\n    canvas = chart.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n    vCanvas,\n    datasetParent = vCanvas = canvas.getChildren('vCanvas')[0],\n    dsType = chart.config.defaultDatasetType || '',\n    groupManager;\n\n  if (!datasetsJSON) {\n    chart.setChartMessage();\n  }\n\n  componentFactory(vCanvas, chart.getDSGroupdef(), 'datasetGroup_' + dsType);\n  groupManager = vCanvas.getChildren('datasetGroup_' + dsType);\n  groupManager && (datasetParent = groupManager[0]);\n\n  componentFactory(chart, BoxAndWhiskerStatisticalCalc, 'BoxAndWhiskerStatisticalCalc');\n  vCanvas.getChildren('datasetGroup_' + dsType)[0].addToEnv('BoxAndWhiskerStatisticalCalc',\n    chart.getChildren('BoxAndWhiskerStatisticalCalc')[0]);\n\n  // Adding the JSON data of line dataset to the parent of boxandwhisker ds\n  datasetParent.addToEnv('lineJSON', chart._getLineJSONdata());\n  datasetFactory(datasetParent, chart.getDSdef(), 'dataset', datasetsJSON.length, datasetsJSON);\n}\n","import { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { BLANKSTRING, BLANK, defined, COMMASTRING } from '@fusioncharts/core/src/lib';\n/**\n * class to make the mathematical calculations for boxAndWhisker\n */\nclass BoxAndWhiskerStatisticalCalc extends ComponentInterface {\n  /**\n   * Function to set the data for the bw calculator\n   * @param {string} val The comma separated string value\n   */\n  setArray (val) {\n    var nf = this.getFromEnv('number-formatter'), // eslint-disable-line good-practices/no-single-usage-variable\n      sum = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      len,\n      value = val,\n      dataArr;\n    !value && (value = BLANK);\n    // First we make an arry form the comma-separated value.\n    // and then we sort and store the data array in dataArr\n    //  for further calculation.\n    dataArr = value.replace(/\\s/g, BLANK).split(COMMASTRING);\n    // Parse the values using NumberFormatter getCleanValue\n    len = this.dataLength = dataArr && dataArr.length;\n\n    while (len--) {\n      sum += dataArr[len] = nf.getCleanValue(dataArr[len]);\n    }\n\n    // Now sort the data in ascending order\n    // eslint-disable-next-line good-practices/no-function-dependency\n    dataArr && dataArr.sort(function (a, b) {\n      return a - b;\n    });\n\n    this.values = dataArr;\n    // Calculate and store the Mean\n    this.mean = sum / this.dataLength;\n    this.getFrequencies();\n  }\n\n  /**\n   * Function to get the values of quartiles\n   * @return {Object} The value of 1st and 3rd quartile\n   */\n  getQuartiles () {\n    var values = this.values,\n      len = this.dataLength,\n      isOdd = len % 2,\n      q1Pos,\n      q1LowPos,\n      q3Pos,\n      q3LowPos,\n      q1Val,\n      q3Val,\n      method = BLANKSTRING; // eslint-disable-line good-practices/no-single-usage-variable\n\n    switch (method) {\n      case 'tukey':\n        if (isOdd) {\n          // Q1 = n + 3 / 4 And Q3 = 3N + 1 / 4\n          q1Pos = (len + 3) / 4;\n          q3Pos = ((len * 3) + 1) / 4;\n        } else {\n          // Q1 = n + 2 / 4 And Q3 = 3N + 2 / 4\n          q1Pos = (len + 2) / 4;\n          q3Pos = ((len * 3) + 2) / 4;\n        }\n        break;\n      case 'mooremccabe':\n        if (isOdd) {\n          // Q1 = n + 1 / 4 And Q3 = 3N + 3 / 4\n          q1Pos = (len + 1) / 4;\n          q3Pos = q1Pos * 3;\n        } else {\n          // Q1 = n + 2 / 4 And Q3 = 3N + 2 / 4\n          q1Pos = (len + 2) / 4;\n          q3Pos = ((len * 3) + 2) / 4;\n        }\n        break;\n      case 'freundperles':\n        // Q1 = n + 3 / 4 And Q3 = 3N + 1 / 4\n        q1Pos = (len + 3) / 4;\n        q3Pos = ((len * 3) + 1) / 4;\n        break;\n      case 'mendenhallsincich':\n        // Q1 = [n + 1 / 4] And [Q3 = 3N + 3 / 4]\n        q1Pos = Math.round((len + 1) / 4);\n        q3Pos = Math.round(q1Pos * 3);\n        break;\n      default:\n        // Q1 = n + 1 / 4 And Q3 = 3N + 3 / 4\n        q1Pos = (len + 1) / 4;\n        q3Pos = q1Pos * 3;\n        break;\n    }\n\n    q1Pos -= 1;\n    q3Pos -= 1;\n    q1LowPos = Math.floor(q1Pos);\n    q3LowPos = Math.floor(q3Pos);\n\n    q1Val = q1Pos - q1LowPos ? values[q1LowPos] + // eslint-disable-line good-practices/no-single-usage-variable\n              ((values[Math.ceil(q1Pos)] - values[q1LowPos]) *\n              (q1Pos - q1LowPos)) : values[q1Pos];\n    q3Val = q3Pos - q3LowPos ? values[q3LowPos] + // eslint-disable-line good-practices/no-single-usage-variable\n              ((values[Math.ceil(q3Pos)] - values[q3LowPos]) *\n              (q3Pos - q3LowPos)) : values[q3Pos];\n\n    this.quartiles = {\n      q1: q1Val,\n      q3: q3Val\n    };\n    return this.quartiles;\n  }\n\n  /**\n   * Return min and max values from the data array.\n   * @return {Object} Contains the minimum and maximum of the entered data\n   */\n  getMinMax () {\n    var values = this.values;\n    return {\n      min: values[0],\n      max: values[this.dataLength - 1]\n    };\n  }\n\n  /**\n   * calculate and returns the mean value\n   * @return {number} mean value\n   */\n  getMean () {\n    return this.mean;\n  }\n\n  /**\n   * calculate the MeanDeviation\n   * @return {number} meanDevaition\n   */\n  getMD () {\n    var mean = this.mean, // eslint-disable-line good-practices/no-single-usage-variable\n      freq = this.frequencies,\n      freqLen = freq.length,\n      freqObj,\n      sum = 0; // eslint-disable-line good-practices/no-single-usage-variable\n\n    while (freqLen--) {\n      freqObj = freq[freqLen];\n      sum += freqObj.frequency * Math.abs(freqObj.value - mean);\n    }\n    return sum / this.dataLength;\n  }\n\n  /**\n   * calculate the standard deviation\n   * @return {number} standard deviation\n   */\n  getSD () {\n    var mean = this.mean, // eslint-disable-line good-practices/no-single-usage-variable\n      values = this.values, // eslint-disable-line good-practices/no-single-usage-variable\n      i = this.dataLength,\n      len = i, // eslint-disable-line good-practices/no-single-usage-variable\n      sum = 0; // eslint-disable-line good-practices/no-single-usage-variable\n\n    while (i--) {\n      sum += Math.pow(values[i] - mean, 2);\n    }\n\n    return Math.sqrt(sum / (len - 1));\n  }\n\n  /**\n   * calculate the quartile deviation\n   * @return {number} quartile deviation\n   */\n  getQD () {\n    return (this.quartiles.q3 - this.quartiles.q1) * 0.5;\n  }\n\n  /**\n   * calculate the frequencies and sum of the values\n   */\n  getFrequencies () {\n    var frequenciesArr = [],\n      len = this.dataLength, // eslint-disable-line good-practices/no-single-usage-variable\n      values = this.values, // eslint-disable-line good-practices/no-single-usage-variable\n      sum = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      value,\n      freqObj,\n      index;\n\n    for (index = 0; index < len; index += 1) {\n      sum += value = values[index];\n      if (defined(frequenciesArr[index])) {\n        frequenciesArr[index].frequency += 1;\n      } else {\n        freqObj = {};\n        freqObj.value = value;\n        freqObj.frequency = 1;\n        frequenciesArr[index] = freqObj;\n      }\n    }\n    this.sum = sum;\n    this.frequencies = frequenciesArr;\n  }\n\n  /**\n   * Function to get the median value\n   * @return {number} median\n   */\n  getMedian () {\n    var len = this.dataLength,\n      midVal = len * 0.5,\n      values = this.values;\n\n    return len % 2 === 0 ? (values[midVal] + values[midVal - 1]) / 2\n      : values[Math.floor(midVal)];\n  }\n}\nexport default BoxAndWhiskerStatisticalCalc;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ColumnMultiseriesGroup from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\n\nlet key = 'manager-defaultVcanvasGroup-lines',\n  vcanvasGroup = 'defaultVcanvasGroup';\n/**\n * class for marimekko group manager\n */\nclass BoxAndWhiskerMultiSeriesGroup extends ColumnMultiseriesGroup {\n  /**\n  * Create child containers\n  */\n  createContainer () {\n    super.createContainer();\n    let manager = this,\n      pContainer = manager.getLinkedParent().getChildContainer(vcanvasGroup); // eslint-disable-line good-practices/no-single-usage-variable\n\n    !manager.getChildContainer(key) && manager.addChildContainer(key,\n      // create group\n      manager.getFromEnv('animationManager').setAnimation({\n        el: 'group',\n        component: manager,\n        attr: { name: key },\n        container: pContainer\n      }));\n  }\n}\n\nexport default BoxAndWhiskerMultiSeriesGroup;\n","import Sankey from '@fusioncharts/powercharts/src/chart/sankey';\nexport default Sankey;\n","import CommonAPI from '@fusioncharts/charts/src/chart/_internal/commonchartapi';\nimport SankeyDS from '../../dataset/sankey';\nimport sankeyDatasetFactory from '../../factories/sankey-dataset-factory';\nimport isArray from '@fusioncharts/utils/src/type/is-array';\nimport { preDefStr, pluck, parseUnsafeString, POSITION_LEFT, POSITION_RIGHT, POSITION_TOP } from '@fusioncharts/core/src/lib';\nimport legendFactory from '@fusioncharts/charts/src/factories/legend';\nimport { traverseGraph, createNodeLinks, createNodeValues } from '../../dataset/sankey/sankeyhelper';\n\nconst DEFAULT_NODE_WIDTH = 20,\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  RIGHT = 'right',\n  INVALIDGRAPH = 'Self loops and circular links are not supported.',\n  prepareData = (dataSource) => {\n    let parsedNodes = [],\n      parsedLinks = [],\n      nodes = dataSource.nodes || [],\n      links = dataSource.links || [],\n      nodeId,\n      nodeIds = {};\n\n    nodes.forEach(node => {\n      nodeId = pluck(node.id, node.label);\n      if (!nodeId) return;\n\n      nodeIds[nodeId.toString()] = node;\n    });\n\n    Object.keys(nodeIds).forEach((id, index) => {\n      parsedNodes.push(Object.assign({}, nodeIds[id], { props: {} }));\n      parsedNodes[index].id = parseUnsafeString((parsedNodes[index].id || parsedNodes[index].label).toString());\n      parsedNodes[index].label = parseUnsafeString((parsedNodes[index].label || parsedNodes[index].id).toString());\n    });\n\n    links.forEach(link => {\n      if (!nodeIds[link.from] || !nodeIds[link.to]) return;\n\n      parsedLinks.push(Object.assign({}, link, {\n        props: {\n          source: parseUnsafeString(link.from),\n          target: parseUnsafeString(link.to)\n        },\n        value: pluck(link.value, '0')\n      }));\n    });\n\n    return {\n      nodes: parsedNodes,\n      links: parsedLinks\n    };\n  };\nclass Sankey extends CommonAPI {\n  constructor () {\n    super();\n\n    this.registerFactory('legend', legendFactory);\n    this.registerFactory('dataset', sankeyDatasetFactory, ['legend']);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let chartConfig = this.config;\n\n    this.legendposition = RIGHT;\n    chartConfig.legendPosition = preDefStr.POSITION_BOTTOM;\n    chartConfig.orientation = HORIZONTAL;\n    chartConfig.skipCanvasDrawing = true;\n    chartConfig.alignCaptionWithCanvas = false;\n    chartConfig.basefontsize = 11;\n  }\n\n  static getName () {\n    return 'sankey';\n  }\n  getName () {\n    return 'sankey';\n  }\n\n  getDSdef () {\n    return SankeyDS;\n  }\n\n  _checkInvalidData () {\n    let dataSource = this.getFromEnv('dataSource');\n\n    if (!isArray(dataSource.nodes) || !dataSource.nodes.length) {\n      delete this.config.errorMessage;\n      return true;\n    }\n    return false;\n  }\n\n  // eslint-disable-next-line\n  _checkInvalidSpecificData () {\n    let chart = this,\n      parsedData = prepareData(chart.getFromEnv('dataSource'));\n\n    createNodeLinks(parsedData);\n    if (!traverseGraph(parsedData)) {\n      chart.config.errorMessage = INVALIDGRAPH;\n      return true;\n    }\n\n    delete chart.config.errorMessage;\n    chart.addToEnv('sankey-graph', parsedData);\n    return false;\n  }\n\n  setChartMessage (message, chartObj, _container) {\n    let { errorMessage } = this.config;\n\n    super.setChartMessage(message || errorMessage, chartObj, _container);\n  }\n\n  configureAttributes (inputConfig = {}) {\n    super.configureAttributes(inputConfig);\n\n    let chart = this,\n      chartConfig = chart.config,\n      chartAttr = inputConfig.chart || {},\n      numberFormatter = chart.getFromEnv('number-formatter'),\n      graph = chart.getFromEnv('sankey-graph'),\n      { nodes, links } = graph;\n\n    if (typeof chartAttr.orientation !== 'undefined') {\n      chartConfig.orientation = chartAttr.orientation.toString().toLowerCase();\n      chartConfig.orientation = chartConfig.orientation === VERTICAL ? VERTICAL : HORIZONTAL;\n    } else {\n      chartConfig.orientation = HORIZONTAL;\n    }\n\n    if (typeof chartAttr.legendposition !== 'undefined') {\n      chartConfig.legendPosition = (['top-left', 'top', 'top-right', 'right-top', 'right', 'right-bottom', 'bottom-right', 'bottom', 'bottom-left', 'left-bottom', 'left', 'left-top'].includes(chartAttr.legendposition.toString().toLowerCase()) ? chartAttr.legendposition.toString().toLowerCase() : preDefStr.POSITION_BOTTOM);\n    } else {\n      chartConfig.legendPosition = RIGHT;\n    }\n    chartConfig.legendposition = chartConfig.legendPosition;\n    chart.addToEnv('orientation', chartConfig.orientation);\n\n    chartConfig.nodeWidth = Math.max(0, numberFormatter.getCleanValue(pluck(chartAttr.nodewidth, DEFAULT_NODE_WIDTH)));\n    nodes.forEach(node => {\n      node.nodeWidth = chartConfig.nodeWidth;\n    });\n    links.forEach(link => {\n      link.value = Math.max(0, numberFormatter.getCleanValue(pluck(link.value, 0)));\n    });\n\n    createNodeValues(graph);\n  }\n\n  _spaceManager () {\n    let chart = this,\n      chartConfig = chart.config,\n      {\n        legendPosition,\n        showLegend,\n        marginLeft,\n        marginTop,\n        marginRight,\n        marginBottom\n      } = chartConfig,\n      width = +chart.getFromEnv('chartWidth'),\n      height = +chart.getFromEnv('chartHeight'),\n      legend,\n      allotedSpace,\n      actionBarSpace,\n      legendSpace;\n\n    width -= (marginLeft + marginRight);\n    height -= (marginTop + marginBottom);\n\n    actionBarSpace = chart._manageActionBarSpace(0.225 * height);\n    chart._allocateSpace(actionBarSpace);\n\n    if (showLegend) {\n      legendPosition = legendPosition || [];\n      if (legendPosition.split('-')[0] === POSITION_TOP || legendPosition.split('-')[0] === preDefStr.POSITION_BOTTOM) {\n        allotedSpace = height * 0.3;\n      } else {\n        allotedSpace = width * 0.3;\n        if (legendPosition.split('-')[0] === POSITION_LEFT) {\n          chart._allocateSpace({\n            left: 11\n          });\n        } else if (legendPosition.split('-')[0] === POSITION_RIGHT) {\n          chart._allocateSpace({\n            right: 11\n          });\n        }\n      }\n\n      legend = chart.getChildren('legend')[0];\n      legendSpace = legend._manageLegendPosition(allotedSpace);\n      chart._allocateSpace(legendSpace);\n    }\n\n    chart._manageChartMenuBar(0.6 * chartConfig.availableHeight);\n  }\n\n  _postSpaceManagement () {\n    let chart = this,\n      {\n        showLegend\n      } = chart.config,\n      legends = chart.getChildren('legend');\n\n    if (legends.length && showLegend) {\n      legends.forEach(legend => legend.postSpaceManager());\n    }\n    chart.allocateDimensionOfChartMenuBar();\n  }\n}\n\nexport default Sankey;\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport sankeyNodeFactory from '../../factories/sankey-node-factory';\nimport sankeyLinkFactory from '../../factories/sankey-link-factory';\nimport { createNodeDimensions } from './sankeyhelper';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport linkAnimation from './index.animation';\n\nlet GUTTER5 = 5,\n  START = 'start',\n  INSIDE = 'inside',\n  END = 'end',\n  BLANK = '',\n  HORIZONTAL = 'horizontal',\n  NODEROLLOVER = 'dataPlotRollOver',\n  NODEROLLOUT = 'dataPlotRollOut',\n  NODECLICK = 'dataPlotClick',\n  LINKROLLOVER = 'linkRollOver',\n  LINKROLLOUT = 'linkRollOut',\n  LINKCLICK = 'linkClick';\n\naddDep({\n  name: 'sankeyLinkAnimation',\n  type: 'animationRule',\n  extension: linkAnimation\n});\nclass Sankey extends SmartRenderer {\n  constructor () {\n    super();\n\n    this.registerFactory('node', sankeyNodeFactory);\n    this.registerFactory('link', sankeyLinkFactory, ['node']);\n  }\n  static getName () {\n    return 'sankey';\n  }\n\n  getName () {\n    return 'sankey';\n  }\n\n  getType () {\n    return 'dataset';\n  }\n\n  configureAttributes (inputConfig = {}) {\n    Object.assign(this.config, inputConfig);\n  }\n\n  _addLegend () {\n    let dataset = this,\n      dsConfig = dataset.config,\n      nodes = dataset.getChildren('nodes'),\n      legend = dataset.getFromEnv('legend'),\n      nodeStyle,\n      nodeConfig,\n      legendItem,\n      legendItemId,\n      legendItemMap = dsConfig.legendItemMap = dsConfig.legendItemMap || {},\n      curLegendItems = new Set();\n\n    Object.keys(legendItemMap).forEach(key => curLegendItems.add(legendItemMap[key]));\n    nodes.forEach(node => {\n      legendItemId = legendItemMap[node.getId()];\n      legendItem = legend.getItem(legendItemId);\n      if (!legendItem) {\n        legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(legendItemId);\n        legendItemMap[node.getId()] = legendItemId;\n      } else {\n        // eslint-disable-next-line\n        curLegendItems.delete(legendItemId);\n      }\n\n      legendItem.configure({\n        enabled: true,\n        label: node.config.label\n      });\n\n      node.setData({\n        legendItemId\n      });\n\n      nodeConfig = node.config;\n      nodeStyle = nodeConfig.style;\n\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: nodeStyle.node.normal.fill,\n          rawFillColor: nodeConfig.rawCosmetics.fill,\n          stroke: nodeStyle.node.normal.stroke,\n          cursor: 'default'\n        },\n        text: {\n          cursor: 'default'\n        }\n      });\n    });\n\n    curLegendItems.forEach(item => {\n      legend.disposeItem(item);\n    });\n  }\n\n  allocatePosition () {\n    let dataset = this,\n      bounds,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      sankeyGraph = dataset.getFromEnv('sankey-graph'),\n      orientation = dataset.getFromEnv('orientation'),\n      {\n        canvasLeft,\n        canvasTop,\n        canvasHeight,\n        canvasWidth\n      } = chartConfig,\n      columnWidth = 0,\n      columnHeight = 0,\n      columns = 0,\n      { nodeWidth, nodeSpacing, nodeRelaxation, style } = dataset.config,\n      nodeLabelStyle = style.node.label;\n\n    bounds = {\n      left: canvasLeft,\n      top: canvasTop,\n      right: canvasLeft + canvasWidth,\n      bottom: canvasTop + canvasHeight\n    };\n\n    dataset.config.nodeLabelCosmetics = {\n      'font-size': this.computeFontSize(nodeLabelStyle.fontSize),\n      'font-family': nodeLabelStyle.fontFamily,\n      'font-weight': nodeLabelStyle.fontWeight,\n      'font-style': nodeLabelStyle.fontStyle\n    };\n\n    if (orientation === HORIZONTAL) {\n      dataset._accomodateBoundaryHLabels(bounds);\n\n      createNodeDimensions(sankeyGraph, {\n        width: [bounds.left, bounds.right],\n        height: [bounds.top, bounds.bottom],\n        nodeGutter: nodeSpacing,\n        orientation,\n        nodeRelaxation\n      });\n\n      sankeyGraph.nodes.forEach(node => {\n        columns = Math.max(columns, node.props.depth);\n      });\n\n      columnWidth = dataset.config.columnGap = Math.max((bounds.right - bounds.left - nodeWidth * columns) / Math.max(columns, 1), 0);\n      dataset._accomodateInternalHLabels(columnWidth);\n    } else {\n      dataset._accomodateBoundaryVLabels(bounds);\n\n      createNodeDimensions(sankeyGraph, {\n        width: [bounds.left, bounds.right],\n        height: [bounds.top, bounds.bottom],\n        nodeGutter: nodeSpacing,\n        orientation,\n        nodeRelaxation\n      });\n\n      sankeyGraph.nodes.forEach(node => {\n        columns = Math.max(columns, node.props.depth);\n      });\n\n      columnHeight = dataset.config.columnGap = Math.max((bounds.bottom - bounds.top - nodeWidth * columns) / Math.max(columns, 1), 0);\n      dataset._accomodateInternalVLabels(columnHeight, bounds.bottom - bounds.top);\n    }\n  }\n\n  _accomodateBoundaryHLabels (bounds) {\n    let dataset = this,\n      dsConfig = dataset.config,\n      { labelSepChar } = dsConfig,\n      nodes = dataset.getChildren('nodes'),\n      sl = dataset.getFromEnv('smartLabel'),\n      canvasWidth = bounds.right - bounds.left,\n      labelSl,\n      valueSl,\n      space,\n      spaceFactor,\n      availableWidth,\n      divFactor,\n      formattedValueSl,\n      maxLeftSpaceReq = 0,\n      maxRightSpaceReq = 0;\n\n    nodes.forEach(node => {\n      const { showValue, showLabel, label, props, labelPosition, value, rotateLabel, labelPadding } = node.config,\n        { sourceLinks, targetLinks } = props;\n\n      sl.setStyle(dataset.config.nodeLabelCosmetics);\n      valueSl = sl.getSize(showValue ? value : BLANK);\n      formattedValueSl = sl.getSize(showValue ? labelSepChar + ' ' + value : BLANK);\n      availableWidth = Math.max(0, canvasWidth - formattedValueSl.width);\n\n      if (sourceLinks.length && !targetLinks.length) {\n        if (labelPosition === END) return;\n\n        spaceFactor = labelPosition === START ? 0.1 : 0.2;\n        divFactor = spaceFactor * 10;\n        labelSl = sl.getSmartText(showLabel ? label : BLANK, spaceFactor * availableWidth, sl._lineHeight);\n\n        if (rotateLabel) {\n          space = labelPosition === INSIDE ? 0 : Math.max(labelSl.height / divFactor, valueSl.height / divFactor);\n          maxLeftSpaceReq = Math.max(\n            maxLeftSpaceReq,\n            space + ((space && labelPosition === START) ? labelPadding : 0)\n          );\n        } else {\n          space = (labelSl.width + (labelSl.width ? formattedValueSl.width : valueSl.width)) / divFactor;\n          maxLeftSpaceReq = Math.max(\n            maxLeftSpaceReq,\n            space + ((space && labelPosition === START) ? labelPadding : 0)\n          );\n        }\n        node.setData({ formattedLabel: labelSl });\n      } else if (!sourceLinks.length && targetLinks.length) {\n        if (labelPosition === START) return;\n\n        spaceFactor = labelPosition === END ? 0.1 : 0.2;\n        divFactor = spaceFactor * 10;\n        labelSl = sl.getSmartText(showLabel ? label : BLANK, spaceFactor * availableWidth, sl._lineHeight);\n\n        if (rotateLabel) {\n          space = labelPosition === INSIDE ? 0 : Math.max(labelSl.height / divFactor, valueSl.height / divFactor);\n          maxRightSpaceReq = Math.max(\n            maxRightSpaceReq,\n            space + ((space && labelPosition === END) ? labelPadding : 0)\n          );\n        } else {\n          space = (labelSl.width + (labelSl.width ? formattedValueSl.width : valueSl.width)) / divFactor;\n          maxRightSpaceReq = Math.max(\n            maxRightSpaceReq,\n            space + ((space && labelPosition === END) ? labelPadding : 0)\n          );\n        }\n        node.setData({ formattedLabel: labelSl });\n      }\n    });\n\n    bounds.left += maxLeftSpaceReq + (maxLeftSpaceReq ? GUTTER5 : 0);\n    bounds.right -= (maxRightSpaceReq + (maxRightSpaceReq ? GUTTER5 : 0));\n\n    return bounds;\n  }\n\n  _accomodateInternalHLabels (maxColumnWidth) {\n    let dataset = this,\n      nodes = dataset.getChildren('nodes'),\n      sl = dataset.getFromEnv('smartLabel'),\n      availableWidth,\n      { labelSepChar } = dataset.config,\n      formattedValueSl,\n      labelSl;\n\n    nodes.forEach(node => {\n      let { showValue, showLabel, label, value, props, rotateLabel, labelPosition, labelPadding } = node.config,\n        { sourceLinks, targetLinks } = props,\n        nodeHeight = Math.max(0, props.y1 - props.y0);\n\n      label = showLabel ? label : BLANK;\n      value = showValue ? value : BLANK;\n      sl.setStyle(dataset.config.nodeLabelCosmetics);\n      formattedValueSl = sl.getSize(showValue ? labelSepChar + ' ' + value : BLANK);\n      availableWidth = Math.max(0, maxColumnWidth * 0.75 - labelPadding - formattedValueSl.width);\n\n      if (rotateLabel) {\n        labelSl = sl.getSmartText(label, nodeHeight - formattedValueSl.width, sl._lineHeight);\n        node.setData({ formattedLabel: labelSl });\n        return;\n      }\n\n      if (\n        (sourceLinks.length && !targetLinks.length && labelPosition === END) ||\n        (!sourceLinks.length && targetLinks.length && labelPosition === START) ||\n        (sourceLinks.length && targetLinks.length) ||\n        (!sourceLinks.length && !targetLinks.length)\n      ) {\n        labelSl = sl.getSmartText(label, availableWidth, sl._lineHeight);\n        node.setData({ formattedLabel: labelSl });\n      }\n    });\n  }\n\n  _accomodateBoundaryVLabels (bounds) {\n    let dataset = this,\n      nodes = dataset.getChildren('nodes'),\n      sl = dataset.getFromEnv('smartLabel'),\n      labelSepChar = dataset.config.labelSepChar,\n      canvasHeight = bounds.bottom - bounds.top,\n      valueSl,\n      labelSl,\n      spaceFactor,\n      space,\n      availableHeight,\n      divFactor,\n      formattedValueSl,\n      maxTopSpaceReq = 0,\n      maxBottomSpaceReq = 0;\n\n    nodes.forEach(node => {\n      let { props, labelPosition, rotateLabel, showValue, showLabel, value, label, labelPadding } = node.config,\n        { sourceLinks, targetLinks } = props;\n\n      value = showValue ? value : BLANK;\n      label = showLabel ? label : BLANK;\n\n      sl.setStyle(dataset.config.nodeLabelCosmetics);\n      valueSl = sl.getSize(value);\n      formattedValueSl = sl.getSize(showValue ? labelSepChar + ' ' + value : BLANK);\n      availableHeight = Math.max(0, canvasHeight - formattedValueSl.width);\n\n      if (sourceLinks.length && !targetLinks.length) {\n        if (labelPosition === END) return;\n\n        spaceFactor = labelPosition === START ? 0.1 : 0.2;\n        divFactor = spaceFactor * 10;\n        labelSl = sl.getSmartText(label, spaceFactor * availableHeight, sl._lineHeight);\n\n        if (rotateLabel) {\n          space = (labelSl.width + (labelSl.width ? formattedValueSl.width : valueSl.width)) / divFactor;\n          maxTopSpaceReq = Math.max(\n            maxTopSpaceReq,\n            space + ((space && labelPosition === START) ? labelPadding : 0)\n          );\n        } else {\n          space = labelPosition === INSIDE ? 0 : Math.max(labelSl.height / divFactor, valueSl.height / divFactor);\n          maxTopSpaceReq = Math.max(\n            maxTopSpaceReq,\n            space + ((space && labelPosition === START) ? labelPadding : 0)\n          );\n        }\n        node.setData({ formattedLabel: labelSl });\n      } else if (!sourceLinks.length && targetLinks.length) {\n        if (labelPosition === START) return;\n\n        spaceFactor = labelPosition === END ? 0.1 : 0.2;\n        divFactor = spaceFactor * 10;\n        labelSl = sl.getSmartText(label, spaceFactor * availableHeight, sl._lineHeight);\n\n        if (rotateLabel) {\n          space = (labelSl.width + (labelSl.width ? formattedValueSl.width : valueSl.width)) / divFactor;\n          maxBottomSpaceReq = Math.max(\n            maxBottomSpaceReq,\n            space + ((space && labelPosition === END) ? labelPadding : 0)\n          );\n        } else {\n          space = labelPosition === INSIDE ? 0 : Math.max(labelSl.height / divFactor, valueSl.height / divFactor);\n          maxBottomSpaceReq = Math.max(\n            maxBottomSpaceReq,\n            space + ((space && labelPosition === END) ? labelPadding : 0)\n          );\n        }\n        node.setData({ formattedLabel: labelSl });\n      }\n    });\n\n    bounds.top += maxTopSpaceReq + (maxTopSpaceReq ? GUTTER5 : 0);\n    bounds.bottom -= (maxBottomSpaceReq + (maxBottomSpaceReq ? GUTTER5 : 0));\n\n    return bounds;\n  }\n\n  _accomodateInternalVLabels (maxColumnWidth) {\n    let dataset = this,\n      nodes = dataset.getChildren('nodes'),\n      sl = dataset.getFromEnv('smartLabel'),\n      labelSepChar = dataset.config.labelSepChar,\n      availableHeight,\n      labelSl,\n      nodeWidth,\n      formattedValueSl;\n\n    nodes.forEach(node => {\n      let { showValue, props, label, value, showLabel, rotateLabel, labelPosition, labelPadding } = node.config,\n        { sourceLinks, targetLinks } = props;\n\n      sl.setStyle(dataset.config.nodeLabelCosmetics);\n      label = showLabel ? label : BLANK;\n      value = showValue ? value : BLANK;\n      formattedValueSl = sl.getSize(showValue ? labelSepChar + ' ' + value : BLANK);\n      availableHeight = Math.max(0, maxColumnWidth * 0.75 - labelPadding - formattedValueSl.width);\n\n      nodeWidth = props.x1 - props.x0;\n      if (!rotateLabel) {\n        labelSl = sl.getSmartText(label, nodeWidth - formattedValueSl.width, sl._lineHeight);\n        node.setData({ formattedLabel: labelSl });\n        return;\n      }\n\n      if (\n        (sourceLinks.length && !targetLinks.length && labelPosition === END) ||\n        (!sourceLinks.length && targetLinks.length && labelPosition === START) ||\n        (sourceLinks.length && targetLinks.length) ||\n        (!sourceLinks.length && !targetLinks.length)\n      ) {\n        labelSl = sl.getSmartText(label, availableHeight, sl._lineHeight);\n        node.setData({ formattedLabel: labelSl });\n      }\n    });\n  }\n\n  attachListeners () {\n    let dataset = this,\n      nodes = dataset.getChildren('nodes'),\n      links = dataset.getChildren('links');\n\n    nodes.forEach(node => {\n      node.onFocusCallback = node.onFocusCallback || dataset.interactionCallback(node, 'focus');\n      node.onFocusOutCallback = node.onFocusOutCallback || dataset.interactionCallback(node, 'normal');\n      node.onClickCallback = node.onClickCallback || dataset.interactionCallback(node, 'click');\n      node.dragStartCallback = node.dragStartCallback || dataset.dragCallback(node, 'start');\n      node.dragMoveCallback = node.dragMoveCallback || dataset.dragCallback(node, 'move');\n      node.dragEndCallback = node.dragEndCallback || dataset.dragCallback(node, 'end');\n\n      node.addEventListener('fc-mouseover', node.onFocusCallback);\n      node.addEventListener('fc-mouseout', node.onFocusOutCallback);\n      node.addEventListener('fc-click', node.onClickCallback);\n\n      node.addEventListener('fc-dragstart', node.dragStartCallback);\n      node.addEventListener('fc-dragmove', node.dragMoveCallback);\n      node.addEventListener('fc-dragend', node.dragEndCallback);\n    });\n\n    links && links.forEach(link => {\n      link.onFocusCallback = link.onFocusCallback || dataset.interactionCallback(link, 'focus');\n      link.onFocusOutCallback = link.onFocusOutCallback || dataset.interactionCallback(link, 'normal');\n      link.onClickCallback = link.onClickCallback || dataset.interactionCallback(link, 'click');\n\n      link.addEventListener('fc-mouseover', link.onFocusCallback);\n      link.addEventListener('fc-mouseout', link.onFocusOutCallback);\n      link.addEventListener('fc-click', link.onClickCallback);\n    });\n  }\n\n  interactionCallback (component, mode) {\n    let dataset = this,\n      dsConfig = dataset.config,\n      chart = dataset.getLinkedParent(),\n      type = component.getType();\n    if (type === 'node') {\n      return function () {\n        let nodes = dataset.getChildren('nodes'),\n          links = dataset.getChildren('links') || [],\n          eventArgs = Object.assign({}, component.config.eventArgs),\n          componentId = component.getId();\n\n        if (component.config.isDragged) return;\n\n        if (mode === 'click') {\n          chart.fireChartInstanceEvent(NODECLICK, eventArgs);\n        } else if (mode === 'normal') {\n          chart.fireChartInstanceEvent(NODEROLLOUT, eventArgs);\n\n          if (!dsConfig.highlightEffect) return;\n\n          nodes.forEach(node => node.setData({ mode: 'normal' }));\n          links.forEach(link => link.setData({ mode: 'normal' }));\n        } else {\n          let focusNodes = new Set(),\n            { sourceLinks, targetLinks } = component.config.props;\n\n          chart.fireChartInstanceEvent(NODEROLLOVER, eventArgs);\n\n          if (!dsConfig.highlightEffect) return;\n\n          focusNodes.add(componentId);\n          sourceLinks.forEach(link => {\n            focusNodes.add(link.to);\n          });\n          targetLinks.forEach(link => {\n            focusNodes.add(link.from);\n          });\n\n          nodes.forEach(node => {\n            if (focusNodes.has(node.getId())) {\n              node.setData({\n                mode: 'focus'\n              });\n            } else {\n              node.setData({\n                mode: 'focusOut'\n              });\n            }\n          });\n\n          links.forEach(link => {\n            let { source, target } = link.config.props;\n            if (componentId === source.id || componentId === target.id) {\n              link.setData({\n                mode: 'focus'\n              });\n            } else {\n              link.setData({\n                mode: 'focusOut'\n              });\n            }\n          });\n        }\n      };\n    }\n    return function () {\n      let nodes = dataset.getChildren('nodes'),\n        links = dataset.getChildren('links') || [],\n        eventArgs = Object.assign({}, component.config.eventArgs);\n\n      if (component.config.isDragged) return;\n\n      if (mode === 'click') {\n        chart.fireChartInstanceEvent(LINKCLICK, eventArgs);\n      } else if (mode === 'normal') {\n        chart.fireChartInstanceEvent(LINKROLLOUT, eventArgs);\n\n        if (!dsConfig.highlightEffect) return;\n\n        nodes.forEach(node => node.setData({ mode: 'normal' }));\n        links.forEach(link => link.setData({ mode: 'normal' }));\n      } else {\n        let focusNodes = new Set(),\n          { source, target } = component.config.props;\n\n        chart.fireChartInstanceEvent(LINKROLLOVER, eventArgs);\n\n        if (!dsConfig.highlightEffect) return;\n\n        focusNodes.add(source.id);\n        focusNodes.add(target.id);\n        nodes.forEach(node => {\n          if (focusNodes.has(node.getId())) {\n            node.setData({\n              mode: 'focus'\n            });\n          } else {\n            node.setData({\n              mode: 'focusOut'\n            });\n          }\n        });\n\n        links.forEach(link => link.setData({ mode: 'focusOut' }));\n        component.setData({\n          mode: 'focus'\n        });\n      }\n    };\n  }\n\n  dragCallback (component, mode) {\n    let dataset = this,\n      dsConfig = dataset.config;\n\n    if (mode === 'start') {\n      return function () {\n        let { props } = component.config,\n          linkComponent,\n          linkProps;\n\n        if (!dsConfig.enableDrag) return;\n\n        component.onFocusOutCallback();\n        component.setData({\n          isDragged: true,\n          curPos: {\n            x0: props.x0,\n            x1: props.x1,\n            y0: props.y0,\n            y1: props.y1\n          }\n        });\n\n        props.sourceLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n          linkProps = linkComponent.config.props;\n\n          linkComponent.setData({\n            isDragged: true,\n            curPos: {\n              x0: linkProps.x0,\n              x1: linkProps.x1,\n              y0: linkProps.y0,\n              y1: linkProps.y1\n            }\n          });\n        });\n        props.targetLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n          linkProps = linkComponent.config.props;\n\n          linkComponent.setData({\n            isDragged: true,\n            curPos: {\n              x0: linkProps.x0,\n              x1: linkProps.x1,\n              y0: linkProps.y0,\n              y1: linkProps.y1\n            }\n          });\n        });\n      };\n    } else if (mode === 'end') {\n      return function () {\n        let { props } = component.config,\n          linkComponent;\n\n        if (!dsConfig.enableDrag) return;\n\n        component.setData({\n          isDragged: false\n        });\n\n        props.sourceLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n          linkComponent.setData({\n            isDragged: false\n          });\n        });\n        props.targetLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n          linkComponent.setData({\n            isDragged: false\n          });\n        });\n      };\n    }\n    return function (evt) {\n      let data = evt.originalEvent.data,\n        dx = data[0],\n        dy = data[1],\n        linkComponent,\n        linkProps,\n        linkCurPos,\n        orientation = dataset.getFromEnv('orientation'),\n        { canvasLeft, canvasRight, canvasTop, canvasBottom } = dataset.getFromEnv('chartConfig'),\n        { curPos, props } = component.config;\n\n      if (!dsConfig.enableDrag) return;\n\n      if (orientation === HORIZONTAL) {\n        if (curPos.y0 + dy < canvasTop || curPos.y1 + dy > canvasBottom) return;\n\n        props.y0 = curPos.y0 + dy;\n        props.y1 = curPos.y1 + dy;\n\n        props.sourceLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n\n          linkProps = linkComponent.config.props;\n          linkCurPos = linkComponent.config.curPos;\n\n          linkProps.y0 = linkCurPos.y0 + dy;\n          linkComponent.setData({});\n        });\n        props.targetLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n\n          linkProps = linkComponent.config.props;\n          linkCurPos = linkComponent.config.curPos;\n\n          linkProps.y1 = linkCurPos.y1 + dy;\n          linkComponent.setData({});\n        });\n      } else {\n        if (curPos.x0 + dx < canvasLeft || curPos.x1 + dx > canvasRight) return;\n\n        props.x0 = curPos.x0 + dx;\n        props.x1 = curPos.x1 + dx;\n\n        props.sourceLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n\n          linkProps = linkComponent.config.props;\n          linkCurPos = linkComponent.config.curPos;\n\n          linkProps.x0 = linkCurPos.x0 + dx;\n          linkComponent.setData({});\n        });\n        props.targetLinks.forEach(link => {\n          linkComponent = dataset.getChild(link.props.index, 'links');\n\n          linkProps = linkComponent.config.props;\n          linkCurPos = linkComponent.config.curPos;\n\n          linkProps.x1 = linkCurPos.x1 + dx;\n          linkComponent.setData({});\n        });\n      }\n      component.setData({});\n    };\n  }\n\n  getClip (mode) {\n    let dataset = this,\n      orientation = dataset.getFromEnv('orientation'),\n      clipAr = [],\n      { canvasTop, canvasLeft, canvasWidth, canvasHeight } = dataset.getFromEnv('chartConfig');\n\n    if (orientation === HORIZONTAL) {\n      clipAr.push(canvasLeft);\n      clipAr.push(canvasTop);\n      if (mode === 'init') {\n        clipAr.push(0);\n      } else {\n        clipAr.push(canvasWidth);\n      }\n      clipAr.push(canvasHeight);\n    } else {\n      clipAr.push(canvasLeft);\n      clipAr.push(canvasTop);\n      clipAr.push(canvasWidth);\n      if (mode === 'init') {\n        clipAr.push(0);\n      } else {\n        clipAr.push(canvasHeight);\n      }\n    }\n\n    return clipAr;\n  }\n\n  draw () {\n    let dataset = this;\n\n    dataset.addGraphicalElement({\n      el: 'group',\n      attr: {\n        name: 'sankey-link-group',\n        'clip-rect': dataset.getClip('canvas')\n      },\n      id: 'sankey-link-group',\n      component: dataset,\n      container: {\n        id: 'plotGroup',\n        isParent: true\n      },\n      label: 'linkGroup'\n    });\n\n    dataset.addGraphicalElement({\n      el: 'group',\n      attr: {\n        name: 'sankey-node-group'\n      },\n      id: 'sankey-node-group',\n      component: dataset,\n      container: {\n        id: 'plotGroup',\n        isParent: true\n      },\n      label: 'nodeGroup'\n    });\n\n    dataset.addGraphicalElement({\n      el: 'group',\n      attr: {\n        name: 'sankey-node-label-group',\n        ...dataset.config.nodeLabelCosmetics\n      },\n      id: 'sankey-node-label-group',\n      component: dataset,\n      container: {\n        id: 'datalabelsGroup',\n        isParent: true\n      },\n      label: 'nodeLabelGroup'\n    });\n  }\n}\n\nexport default Sankey;\n","import { parseUnsafeString, getValidValue, pluck, pluckNumber, preDefStr, convertColor, BLANK } from '@fusioncharts/core/src/lib';\nimport SankeyNode from '../dataset/sankey/sankey-node';\n\nconst NONE = 'none',\n  validPosition = ['start', 'inside', 'end'];\n\nexport default function (dataset) {\n  let dsConfig = dataset.config,\n    {\n      nodes,\n      enableDrag,\n      style\n    } = dsConfig,\n    nodeComponent,\n    labelCss,\n    nodeCss,\n    nodeFocusCss,\n    nodeFocusOutCss,\n    rawCosmetics,\n    rawLabelCosmetics,\n    labelBgColor,\n    labelBorderColor,\n    labelPosition,\n    cursor,\n    chartAttr = dataset.getFromEnv('dataSource').chart,\n    nodeLabelStyle = style.node.label,\n    nodeLabelAlpha,\n    inheritFromPlot = pluckNumber(chartAttr.inheritlabelcolorfromnode, 1),\n    colorM = dataset.getFromEnv('color-manager'),\n    numberFormatter = dataset.getFromEnv('number-formatter'),\n    {\n      dataLabelStyle,\n      showLegend\n    } = dataset.getFromEnv('chartConfig'),\n    id;\n\n  nodes.forEach((node, index) => {\n    id = pluck(node.id, node.label);\n\n    rawCosmetics = {\n      fill: pluck(node.color, chartAttr.nodecolor, colorM.getPlotColor(index)),\n      alpha: pluckNumber(node.alpha, chartAttr.nodealpha, 100),\n      focusAlpha: pluckNumber(node.hoveralpha, chartAttr.nodehoveralpha, 100),\n      focusOutAlpha: 40,\n      stroke: NONE\n    };\n\n    nodeLabelAlpha = pluck(node.labelalpha, chartAttr.nodelabelalpha, chartAttr.labelalpha, inheritFromPlot ? rawCosmetics.alpha : 100);\n\n    labelBgColor = pluck(node.labelbgcolor, chartAttr.nodelabelbgcolor, chartAttr.labelbgcolor);\n    labelBgColor = labelBgColor\n      ? convertColor(labelBgColor, nodeLabelAlpha)\n      : BLANK;\n\n    labelBorderColor = pluck(node.labelbordercolor, chartAttr.nodelabelbordercolor, chartAttr.labelbordercolor);\n    labelBorderColor = labelBorderColor\n      ? convertColor(labelBorderColor, nodeLabelAlpha)\n      : BLANK;\n\n    rawLabelCosmetics = Object.assign({}, dataLabelStyle, {\n      labelFill: pluck(node.labelfontcolor, chartAttr.nodelabelfontcolor, chartAttr.labelfontcolor, chartAttr.basefontcolor, inheritFromPlot ? rawCosmetics.fill : '#5f5f5f'),\n      labelAlpha: nodeLabelAlpha,\n      focusAlpha: rawCosmetics.focusAlpha,\n      focusOutAlpha: rawCosmetics.focusOutAlpha,\n      border: labelBgColor ? nodeLabelStyle.borderThickness + 'px solid' : BLANK,\n      borderColor: labelBorderColor,\n      backgroundColor: labelBgColor\n    });\n\n    cursor = enableDrag ? 'move' : 'default';\n\n    labelCss = {\n      cursor,\n      'text-bound': [\n        labelBgColor, labelBorderColor,\n        nodeLabelStyle.borderThickness, nodeLabelStyle.borderPadding,\n        nodeLabelStyle.borderRadius, nodeLabelStyle.borderDash\n      ],\n      fill: convertColor(rawLabelCosmetics.labelFill, rawLabelCosmetics.labelAlpha)\n    };\n    labelPosition = pluck(node.labelposition, chartAttr.nodelabelposition, preDefStr.POSITION_END).toLowerCase();\n    if (validPosition.indexOf(labelPosition) < 0) {\n      labelPosition = preDefStr.POSITION_END;\n    }\n\n    nodeCss = {\n      fill: convertColor(rawCosmetics.fill, rawCosmetics.alpha),\n      cursor,\n      stroke: rawCosmetics.stroke\n    };\n\n    nodeFocusCss = {\n      fill: convertColor(rawCosmetics.fill, rawCosmetics.focusAlpha)\n    };\n\n    nodeFocusOutCss = {\n      fill: convertColor(rawCosmetics.fill, rawCosmetics.focusOutAlpha)\n    };\n\n    nodeComponent = dataset.attachChild(SankeyNode, 'nodes', id);\n    nodeComponent.setData({\n      id,\n      index,\n      mode: 'normal',\n      label: pluck(node.label, node.id),\n      value: numberFormatter.dataLabels(node.props.value),\n      labelPadding: numberFormatter.getCleanValue(pluck(node.labelpadding, chartAttr.nodelabelpadding, 5)),\n      visible: pluckNumber(node.visible, chartAttr.shownodes, 1),\n      showLabel: pluckNumber(node.showlabel, chartAttr.shownodelabels, 1),\n      showValue: pluckNumber(node.showvalue, chartAttr.shownodevalues, 0),\n      rotateLabel: pluckNumber(node.rotatelabel, chartAttr.rotatenodelabels, 0),\n      labelPosition,\n      valuePosition: pluck(node.labelposition, chartAttr.nodelabelposition, preDefStr.POSITION_MIDDLE),\n      plotToolText: getValidValue(parseUnsafeString(pluck(node.tooltext,\n        chartAttr.plottooltext))),\n      toolText: getValidValue(parseUnsafeString(pluck(node.tooltext,\n        node.tooltext))),\n      nodeValue: pluckNumber(node.nodevalue, chartAttr.nodevalue, 0),\n      nodeDataValue: numberFormatter.dataLabels(node.nodedatavalue),\n      // linkPadding: pluckNumber(node.linkpadding, chartAttr.nodelinkpadding, 0),\n      textOutline: pluckNumber(node.textoutline, chartAttr.textoutline, 0),\n      rawCosmetics,\n      rawLabelCosmetics,\n      props: node.props,\n      eventArgs: {\n        color: rawCosmetics.fill,\n        alpha: rawCosmetics.alpha,\n        labelFill: rawLabelCosmetics.labelFill,\n        labelAlpha: rawLabelCosmetics.labelAlpha,\n        value: node.props.value,\n        label: node.label,\n        sourceLinks: node.props.sourceLinks.map(link => link.to),\n        targetLinks: node.props.targetLinks.map(link => link.from)\n      },\n      style: {\n        node: {\n          normal: nodeCss,\n          focus: nodeFocusCss,\n          focusOut: nodeFocusOutCss\n        },\n        label: {\n          normal: labelCss,\n          focus: Object.assign({}, labelCss, {\n            fill: convertColor(rawLabelCosmetics.labelFill, rawLabelCosmetics.focusAlpha)\n          }),\n          focusOut: Object.assign({}, labelCss, {\n            fill: convertColor(rawLabelCosmetics.labelFill, rawLabelCosmetics.focusOutAlpha)\n          })\n        }\n        // value: {\n        //   normal: valueCss,\n        //   focus: valueCss,\n        //   focusOut: Object.assign({}, valueCss, {\n        //     fill: convertColor(rawLabelCosmetics.valueFill, rawLabelCosmetics.focusOutAlpha)\n        //   })\n        // }\n      }\n    });\n  });\n\n  showLegend && dataset._addLegend();\n};\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport { parseColor, getSuggestiveRotation, isIpad, parseTooltext, BLANKSTRING } from '@fusioncharts/core/src/lib';\n\nconst START = 'start',\n  END = 'end',\n  INSIDE = 'inside',\n  MIDDLE = 'middle',\n  defaultTransform = 't0,0',\n  // CENTER = 'center',\n  SMALLSQUARE = '&#9632;',\n  MEDIUMSQUARE = '&#x25FC;',\n  getTooltext = (config, node, chartConfig) => {\n    let uniChar = isIpad ? SMALLSQUARE : MEDIUMSQUARE,\n      macroIndices = [3, 133, 134, 143, 144, 145],\n      manager = node.getLinkedParent(),\n      legend = node.getFromEnv('legend'),\n      pathArr,\n      drawCustomLegendIcon = chartConfig && chartConfig.drawcustomlegendicon,\n      newPathArr = [],\n      i,\n      j,\n      symbolBBox,\n      plotToolText,\n      legendItemSymbol,\n      pathStart = [],\n      finalPath,\n      legendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? legend.getItem(manager.config.legendItemMap[node.config.label]) : null,\n      graphicalElement = legendItem && legendItem.getGraphicalElement(),\n      parserConfig,\n      toolText;\n    finalPath = BLANKSTRING;\n    if (legendItem) {\n      legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol;\n      pathArr = legendItemSymbol && legendItemSymbol.attrs.path.split(/(?=[LMCA])/);\n      symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox();\n      if (pathArr && pathArr.length) {\n        for (i = 0; i < pathArr.length; i++) {\n          pathStart.push(pathArr[i][0]);\n          pathArr[i] = pathArr[i].substring(1, pathArr[i].length);\n          if (i === (pathArr.length - 1)) {\n            pathArr[i] = pathArr[i].substring(0, pathArr[i].length - 1);\n          }\n          newPathArr[i] = pathArr[i].split(',');\n        }\n      }\n      if (newPathArr && newPathArr.length) {\n        for (i = 0; i < newPathArr.length; i++) {\n          if (newPathArr[i].length) {\n            for (j = 0; j < newPathArr[i].length; j++) {\n              newPathArr[i][j] = Number(newPathArr[i][j]);\n              if (pathStart[i] !== 'A') {\n                if (j === 0) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 1) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              } else if (pathStart[i] === 'A') {\n                if (j === 5) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 6) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              }\n            }\n          }\n          finalPath += pathStart[i] + newPathArr[i].toString();\n        }\n      }\n      finalPath = finalPath + 'Z';\n    }\n\n    parserConfig = {\n      label: config.label,\n      value: config.value,\n      nodeValue: config.props.value,\n      nodeDataValue: config.value,\n      plotFillColor: config.rawCosmetics && ('#' + config.rawCosmetics.fill),\n      plotFillAlpha: config.rawCosmetics && config.rawCosmetics.alpha,\n      plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n      stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n      stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n    </svg>` : `<span style='color: ${parseColor(config.rawCosmetics.fill)};'>${uniChar}&nbsp;</span>`\n    };\n\n    toolText = parseTooltext(config.toolText, macroIndices,\n      parserConfig, { value: config.value,\n        nodeValue: config.props.value,\n        nodeDataValue: config.value,\n        plotFillColor: config.rawCosmetics && ('#' + config.rawCosmetics.fill),\n        plotFillAlpha: config.rawCosmetics && config.rawCosmetics.alpha,\n        plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n        stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n        stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n      </svg>` : `<span style='color: ${parseColor(config.rawCosmetics.fill)};'>${uniChar}&nbsp;</span>` });\n\n    plotToolText = parseTooltext(config.plotToolText,\n      macroIndices,\n      parserConfig, { value: config.value,\n        nodeValue: config.props.value,\n        nodeDataValue: config.value,\n        plotFillColor: config.rawCosmetics && ('#' + config.rawCosmetics.fill),\n        plotFillAlpha: config.rawCosmetics && config.rawCosmetics.alpha,\n        plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n        stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n        stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n      </svg>` : `<span style='color: ${parseColor(config.rawCosmetics.fill)};'>${uniChar}&nbsp;</span>` });\n\n    config.setToolText = toolText;\n    config.setPlotTooltext = config.setToolText ? config.setToolText : plotToolText;\n    if (!config.plotToolText) {\n      return (\n        `<div style='padding: 2px; vertical-align: middle;'>\n          <span style='color: ${parseColor(config.rawCosmetics.fill)};'>${uniChar}&nbsp;</span>${config.label}\n          &nbsp;\n          &nbsp;\n          ${config.value}\n        </div>`\n      );\n    }\n\n    return (\n      `<div style='padding: 2px; vertical-align: middle;'>\n        <span style='color: ${parseColor(config.rawCosmetics.fill)};'>${uniChar}&nbsp;</span>\n        ${config.setPlotTooltext}\n      </div>`\n    );\n  },\n  // GUTTER5 = 5,\n  BLANK = '',\n  SPACE = ' ';\nclass SankeyNode extends SmartRenderer {\n  getType () {\n    return 'node';\n  }\n\n  getName () {\n    return 'sankey-node';\n  }\n\n  configureAttributes (inputConfig = {}) {\n    let nodeConfig = this.config;\n\n    Object.assign(nodeConfig, inputConfig);\n  }\n\n  allocatePosition () {\n    let node = this,\n      { props, style, mode, labelPosition, showLabel,\n        formattedLabel, showValue, value, rotateLabel, labelPadding } = node.config,\n      nodeCosmetics = style.node[mode],\n      labelCosmetics = style.label[mode],\n      orientation = node.getFromEnv('orientation'),\n      sl = node.getFromEnv('smartLabel'),\n      labelXPos,\n      labelYPos,\n      anchor,\n      labelSepChar = node.getLinkedParent().config.labelSepChar,\n      text = formattedLabel.text + (showValue ? labelSepChar + SPACE + value : BLANK);\n\n    if (!showLabel || !formattedLabel.text) {\n      text = showValue ? value : BLANK;\n      sl.setStyle(style.label.normal);\n      formattedLabel = sl.getSmartText(text);\n    }\n    node.config.nodeAttr = {\n      x: props.x0,\n      y: props.y0,\n      width: Math.max(0, props.x1 - props.x0),\n      height: Math.max(0, props.y1 - props.y0),\n      ...nodeCosmetics\n    };\n\n    if (orientation === 'horizontal') {\n      if (!rotateLabel) {\n        if (labelPosition === START) {\n          labelXPos = props.x0 - labelPadding;\n          anchor = END;\n        } else if (labelPosition === INSIDE) {\n          labelXPos = Math.abs(props.x0 + props.x1) / 2;\n          anchor = MIDDLE;\n        } else {\n          labelXPos = props.x1 + labelPadding;\n          anchor = START;\n        }\n        labelYPos = Math.abs(props.y1 + props.y0) / 2;\n\n        node.config.labelAttr = {\n          x: labelXPos,\n          y: labelYPos,\n          text: text,\n          transform: defaultTransform,\n          'text-anchor': anchor,\n          ...labelCosmetics\n        };\n      } else {\n        if (labelPosition === START) {\n          labelXPos = props.x0 - labelPadding - formattedLabel.height / 2;\n        } else if (labelPosition === INSIDE) {\n          labelXPos = Math.abs(props.x0 + props.x1) / 2;\n        } else {\n          labelXPos = props.x1 + labelPadding + formattedLabel.height / 2;\n        }\n        labelYPos = Math.abs(props.y1 + props.y0) / 2;\n\n        node.config.labelAttr = {\n          x: labelXPos,\n          y: labelYPos,\n          text: text,\n          'text-anchor': MIDDLE,\n          transform: getSuggestiveRotation(-90, labelXPos, labelYPos),\n          ...labelCosmetics\n        };\n      }\n    } else {\n      if (!rotateLabel) {\n        if (labelPosition === START) {\n          labelYPos = props.y0 - labelPadding - formattedLabel.height / 2;\n        } else if (labelPosition === INSIDE) {\n          labelYPos = Math.abs(props.y0 + props.y1) / 2;\n        } else {\n          labelYPos = props.y1 + labelPadding + formattedLabel.height / 2;\n        }\n        anchor = MIDDLE;\n        labelXPos = (props.x0 + props.x1) / 2;\n\n        node.config.labelAttr = {\n          x: labelXPos,\n          y: labelYPos,\n          text: text,\n          transform: defaultTransform,\n          'text-anchor': anchor,\n          ...labelCosmetics\n        };\n      } else {\n        if (labelPosition === START) {\n          labelYPos = props.y0 - labelPadding;\n          anchor = START;\n        } else if (labelPosition === INSIDE) {\n          labelYPos = Math.abs(props.y0 + props.y1) / 2;\n          anchor = MIDDLE;\n        } else {\n          labelYPos = props.y1 + labelPadding;\n          anchor = END;\n        }\n        labelXPos = Math.abs(props.x1 + props.x0) / 2;\n\n        node.config.labelAttr = {\n          x: labelXPos,\n          y: labelYPos,\n          text: text,\n          'text-anchor': anchor,\n          transform: getSuggestiveRotation(-90, labelXPos, labelYPos),\n          ...labelCosmetics\n        };\n      }\n    }\n  }\n\n  draw () {\n    let node = this,\n      chartConfig = node.getFromEnv('chartConfig'),\n      { id, labelAttr, nodeAttr, textOutline } = node.config,\n      tooltext = getTooltext(node.config, node, chartConfig);\n\n    node.addGraphicalElement({\n      el: 'rect',\n      attr: nodeAttr,\n      container: {\n        id: 'sankey-node-group',\n        label: 'nodeGroup',\n        isParent: true\n      },\n      tooltext,\n      component: node,\n      id: id,\n      label: 'node-rect'\n    });\n\n    labelAttr.text && node.addGraphicalElement({\n      el: 'text',\n      attr: labelAttr,\n      container: {\n        id: 'sankey-node-label-group',\n        label: 'nodeLabelGroup',\n        isParent: true\n      },\n      tooltext,\n      component: node,\n      id,\n      css: {},\n      outlineText: textOutline,\n      label: 'node-label'\n    });\n  }\n}\n\nexport default SankeyNode;\n","import { pluck, pluckNumber, toRaphaelColor, BLANK, clampNumber, parseUnsafeString, UNDEF } from '@fusioncharts/core/src/lib';\nimport SankeyLink from '../dataset/sankey/sankey-link';\n\nconst SOURCE = 'source',\n  TARGET = 'target',\n  BLEND = 'blend',\n  BUTT = 'butt',\n  HORIZONTAL = 'horizontal';\n\nexport default function (dataset) {\n  let dsConfig = dataset.config,\n    {\n      links\n    } = dsConfig,\n    orientation = dataset.getFromEnv('orientation'),\n    numberFormatter = dataset.getFromEnv('number-formatter'),\n    linkComponent,\n    gradientAngle,\n    chartAttr = dataset.getFromEnv('dataSource').chart,\n    linkPadding = pluckNumber(chartAttr.nodelinkpadding, 0),\n    linkColor,\n    linkCss,\n    linkFocusCss,\n    linkFocusOutCss,\n    rawCosmetics,\n    sourceFill,\n    targetFill,\n    fromNode,\n    toNode,\n    from,\n    fromValue,\n    toValue,\n    to,\n    toolText,\n    id;\n\n  links.forEach(link => {\n    link.props.index += BLANK;\n    id = link.props.index;\n\n    from = parseUnsafeString(pluck(link.from));\n    to = parseUnsafeString(pluck(link.to));\n\n    fromNode = dataset.getChild(from, 'nodes');\n    toNode = dataset.getChild(to, 'nodes');\n    toolText = parseUnsafeString(pluck(link.tooltext, chartAttr.linktooltext, UNDEF));\n    fromValue = fromNode.config.value;\n    toValue = toNode.config.value;\n    linkColor = pluck(link.color, chartAttr.linkcolor, SOURCE);\n\n    sourceFill = fromNode.config.rawCosmetics.fill;\n    targetFill = toNode.config.rawCosmetics.fill;\n    // eslint-disable-next-line\n    switch (linkColor.toLowerCase()) {\n      case SOURCE:\n        linkColor = sourceFill; break;\n      case TARGET:\n        linkColor = targetFill; break;\n      case BLEND:\n        linkColor = sourceFill + ',' + targetFill;\n        break;\n    }\n\n    rawCosmetics = {\n      fill: linkColor,\n      alpha: pluckNumber(link.alpha, chartAttr.linkalpha, 20),\n      focusAlpha: pluckNumber(link.hoveralpha, chartAttr.linkhoveralpha, 75),\n      focusOutAlpha: 10\n    };\n    gradientAngle = orientation === HORIZONTAL ? 0 : 90;\n    linkCss = {\n      stroke: toRaphaelColor({\n        color: rawCosmetics.fill,\n        alpha: rawCosmetics.alpha,\n        angle: gradientAngle\n      }),\n      'stroke-linecap': BUTT,\n      fill: 'none'\n    };\n\n    linkFocusCss = ({}, linkCss, {\n      stroke: toRaphaelColor({\n        color: rawCosmetics.fill,\n        alpha: rawCosmetics.focusAlpha,\n        angle: gradientAngle\n      })\n    });\n\n    linkFocusOutCss = ({}, linkCss, {\n      stroke: toRaphaelColor({\n        color: rawCosmetics.fill,\n        alpha: rawCosmetics.focusOutAlpha,\n        angle: gradientAngle\n      })\n    });\n\n    linkComponent = dataset.attachChild(SankeyLink, 'links', id);\n    linkComponent.setData({\n      from,\n      to,\n      mode: 'normal',\n      linkValue: pluckNumber(link.value),\n      value: numberFormatter.dataLabels(pluckNumber(link.value)),\n      fromValue,\n      toValue,\n      toolText,\n      color: rawCosmetics.linkColor,\n      alpha: rawCosmetics.alpha,\n      curvature: clampNumber(pluckNumber(link.curvature, chartAttr.linkcurvature, 0.5), 0, 1),\n      linkType: pluck(link.type, chartAttr.linktype),\n      linkPadding,\n      sourceFill,\n      targetFill,\n      props: link.props,\n      rawCosmetics,\n      eventArgs: {\n        color: rawCosmetics.fill,\n        alpha: rawCosmetics.alpha,\n        value: link.value,\n        from: link.props.source.label,\n        to: link.props.target.label\n      },\n      style: {\n        link: {\n          normal: linkCss,\n          focus: linkFocusCss,\n          focusOut: linkFocusOutCss\n        }\n      }\n    });\n  });\n\n  dataset.attachListeners();\n};\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport { sankeyRibbon } from './sankey-ribbon';\nimport { parseColor, isIpad, parseTooltext } from '@fusioncharts/core/src/lib';\n\nconst CUSTOM = 'custom',\n  UNIFORM = 'uniform',\n  BLANKSTRING = '',\n  SMALLSQUARE = '&#9632;',\n  MEDIUMSQUARE = '&#x25FC;',\n  getTooltext = (config, link, chartConfig) => {\n    let uniChar = isIpad ? SMALLSQUARE : MEDIUMSQUARE,\n      macroIndices = [148, 149, 142, 150, 151, 152, 153],\n      manager = link.getLinkedParent(),\n      legend = link.getFromEnv('legend'),\n      pathArr,\n      drawCustomLegendIcon = chartConfig && chartConfig.drawcustomlegendicon,\n      newPathArr = [],\n      i,\n      j,\n      symbolBBox,\n      legendItemSymbol,\n      pathStart = [],\n      finalPath,\n      fromLegendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? legend.getItem(manager.config.legendItemMap[link.config.from]) : null,\n      fromgraphicalElement = fromLegendItem && fromLegendItem.getGraphicalElement(),\n      toLegendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? legend.getItem(manager.config.legendItemMap[link.config.to]) : null,\n      tographicalElement = toLegendItem && toLegendItem.getGraphicalElement(),\n      parserConfig,\n      linkToolText;\n    finalPath = BLANKSTRING;\n    if (fromLegendItem) {\n      if (fromgraphicalElement) {\n        legendItemSymbol = fromgraphicalElement && fromgraphicalElement.legendItemSymbol;\n        pathArr = legendItemSymbol && legendItemSymbol.attrs.path.split(/(?=[LMCA])/);\n        symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox();\n        if (pathArr && pathArr.length) {\n          for (i = 0; i < pathArr.length; i++) {\n            pathStart.push(pathArr[i][0]);\n            pathArr[i] = pathArr[i].substring(1, pathArr[i].length);\n            if (i === (pathArr.length - 1)) {\n              pathArr[i] = pathArr[i].substring(0, pathArr[i].length - 1);\n            }\n            newPathArr[i] = pathArr[i].split(',');\n          }\n        }\n        if (newPathArr && newPathArr.length) {\n          for (i = 0; i < newPathArr.length; i++) {\n            if (newPathArr[i].length) {\n              for (j = 0; j < newPathArr[i].length; j++) {\n                newPathArr[i][j] = Number(newPathArr[i][j]);\n                if (pathStart[i] !== 'A') {\n                  if (j === 0) {\n                    newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                  } else if (j === 1) {\n                    newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                  }\n                } else if (pathStart[i] === 'A') {\n                  if (j === 5) {\n                    newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                  } else if (j === 6) {\n                    newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                  }\n                }\n              }\n            }\n            finalPath += pathStart[i] + newPathArr[i].toString();\n          }\n        }\n        finalPath = finalPath + 'Z';\n      }\n    }\n    parserConfig = {\n      linkDataValue: config.value,\n      fromPlotIdentifier: fromLegendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= ${finalPath} fill = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n      stroke-opacity = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n      stroke-width = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${fromgraphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n    </svg>` : `<span style='color: ${parseColor(config.sourceFill)};'>${uniChar}&nbsp;</span>`,\n      toPlotIdentifier: toLegendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow= 'visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= ${finalPath} fill = ${tographicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${tographicalElement.legendItemSymbol.node.getAttribute('stroke')}\n      stroke-opacity = ${tographicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${tographicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n      stroke-width = ${tographicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${tographicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n    </svg>` : `<span style='color: ${parseColor(config.targetFill)};'>${uniChar}&nbsp;</span>`,\n      flowDirection: `&rarr;`\n    };\n    linkToolText = parseTooltext(config.toolText, macroIndices,\n      config, parserConfig);\n    config.setLinkTooltext = linkToolText;\n    if (!config.toolText) {\n      return (\n        `<div style='padding: 2px; vertical-align: middle;'>\n        <span style='color: ${parseColor(config.sourceFill)};'>${uniChar}&nbsp;</span>${config.props.source.label}\n        &rarr;\n        <span style='color: ${parseColor(config.targetFill)}'>${uniChar}&nbsp;</span>${config.props.target.label}\n        &nbsp;\n        ${config.value}\n      </div>`\n      );\n    }\n    return (\n      `<div style='padding: 2px; vertical-align: middle;'>\n        ${config.setLinkTooltext}\n      </div>`\n    );\n  };\nclass SankeyLink extends SmartRenderer {\n  getType () {\n    return 'link';\n  }\n\n  getName () {\n    return 'sankey-link';\n  }\n\n  configureAttributes (inputConfig = {}) {\n    Object.assign(this.config, inputConfig);\n  }\n\n  allocatePosition () {\n    let link = this,\n      linkConfig = link.config,\n      { mode, style, props, linkPadding, linkType, curvature } = linkConfig,\n      { orientation } = link.getFromEnv('chartConfig'),\n      linkCosmetics = style.link[mode],\n      pathStr,\n      sourcePoint = {\n        x: props.x0,\n        y: props.y0,\n        width: props.linkWidth\n      },\n      { source, target } = props,\n      sourceNodeLayer = source.props.layer,\n      targetNodeLayer = target.props.layer,\n      sourceNodeLen,\n      targetNodeLen,\n      targetPoint = {\n        x: props.x1,\n        y: props.y1,\n        width: props.linkWidth\n      },\n      { columnGap } = link.getLinkedParent().config;\n\n    sourceNodeLen = Math.max(orientation === 'vertical' ? source.props.x1 - source.props.x0 : source.props.y1 - source.props.y0, 0);\n    targetNodeLen = Math.max(orientation === 'vertical' ? source.props.x1 - source.props.x0 : source.props.y1 - source.props.y0, 0);\n\n    if (linkType !== CUSTOM && linkType !== UNIFORM) {\n      if (\n        (props.linkWidth > (columnGap * Math.abs(targetNodeLayer - sourceNodeLayer) / 3)) ||\n        (sourcePoint.width > 0.7 * sourceNodeLen) ||\n        (targetPoint.width > 0.7 * targetNodeLen)\n      ) {\n        linkType = CUSTOM;\n      } else {\n        linkType = UNIFORM;\n      }\n    }\n    pathStr = sankeyRibbon(sourcePoint, targetPoint, {\n      orientation,\n      padding: linkPadding,\n      curvature,\n      linkType\n    });\n\n    linkConfig.linkAttr = {\n      path: pathStr,\n      'stroke-width': linkType === UNIFORM ? props.linkWidth : 'none',\n      ...linkCosmetics\n    };\n\n    if (linkType === CUSTOM) {\n      linkConfig.linkAttr.fill = linkConfig.linkAttr.stroke;\n      linkConfig.linkAttr.stroke = 'none';\n    }\n  }\n\n  draw () {\n    let link = this,\n      linkConfig = link.config,\n      chartConfig = link.getFromEnv('chartConfig'),\n      { id, linkAttr } = linkConfig;\n\n    link.addGraphicalElement({\n      el: 'path',\n      attr: linkAttr,\n      container: {\n        id: 'sankey-link-group',\n        label: 'linkGroup',\n        isParent: true\n      },\n      tooltext: getTooltext(link.config, link, chartConfig),\n      component: link,\n      id: id,\n      label: 'sankey-link'\n    });\n  }\n}\n\nexport default SankeyLink;\n","const M = 'M',\n  C = 'C',\n  L = 'L',\n  DEFAULT_CURVATURE = 0.5,\n  STATIC_LENGTH = 10,\n  HORIZONTAL = 'horizontal',\n  UNIFORM = 'uniform',\n  horizontalRibbon = (source, target, curvature = DEFAULT_CURVATURE, type = UNIFORM) => {\n    let x0, y0,\n      x1, y1,\n      sourceWidth = source.width,\n      targetWidth = target.width,\n      linePath,\n      sy0, sy1,\n      ty0, ty1,\n      cx1, cy1,\n      cx2, cy2;\n\n    if (Math.abs(source.y - target.y) < 0.0001) {\n      target.y += 0.0001;\n    }\n\n    x0 = source.x + STATIC_LENGTH;\n    y0 = source.y;\n    sy0 = y0 - sourceWidth / 2;\n    sy1 = y0 + sourceWidth / 2;\n\n    x1 = target.x - STATIC_LENGTH;\n    y1 = target.y;\n    ty0 = y1 - targetWidth / 2;\n    ty1 = y1 + targetWidth / 2;\n\n    if (x1 <= x0 || type !== UNIFORM) {\n      x0 -= STATIC_LENGTH;\n      x1 += STATIC_LENGTH;\n    }\n\n    cx1 = curvature * Math.abs(x1 - x0) + x0;\n    cy1 = y0;\n\n    cx2 = (1 - curvature) * Math.abs(x1 - x0) + x0;\n    cy2 = y1;\n\n    if (type === UNIFORM) {\n      linePath = M + source.x + ',' + y0 + ' ' +\n        L + x0 + ',' + y0 + ' ' +\n        C + cx1 + ',' + cy1 + ' ' +\n        cx2 + ',' + cy2 + ' ' +\n        x1 + ',' + y1 + ' ' +\n        L + target.x + ',' + y1;\n    } else {\n      linePath = M + x0 + ',' + sy0 + ' ' +\n        L + x0 + ',' + sy0 + ' ' +\n        C + cx1 + ',' + sy0 + ' ' +\n        cx2 + ',' + ty0 + ' ' +\n        x1 + ',' + ty0 + ' ' +\n        L + x1 + ',' + ty1 + ' ' +\n        C + cx2 + ',' + ty1 + ' ' +\n        cx1 + ',' + sy1 + ' ' +\n        x0 + ',' + sy1 + ' ' +\n        L + x0 + ',' + sy0;\n    }\n\n    return linePath;\n  },\n  verticalRibbon = (source, target, curvature = DEFAULT_CURVATURE, type = UNIFORM) => {\n    let x0, y0,\n      x1, y1,\n      linePath,\n      sourceWidth = source.width,\n      targetWidth = target.width,\n      sx0, sx1,\n      tx0, tx1,\n      cx1, cy1,\n      cx2, cy2;\n\n    if (Math.abs(source.x - target.x) < 0.0001) {\n      target.x += 0.0001;\n    }\n\n    x0 = source.x;\n    sx0 = x0 - sourceWidth / 2;\n    sx1 = x0 + sourceWidth / 2;\n    y0 = source.y + STATIC_LENGTH;\n\n    x1 = target.x;\n    tx0 = x1 - targetWidth / 2;\n    tx1 = x1 + targetWidth / 2;\n    y1 = target.y - STATIC_LENGTH;\n\n    if (y1 <= y0 || type !== UNIFORM) {\n      y0 -= STATIC_LENGTH;\n      y1 += STATIC_LENGTH;\n    }\n\n    cx1 = x0;\n    cy1 = curvature * Math.abs(y1 - y0) + y0;\n\n    cx2 = x1;\n    cy2 = (1 - curvature) * Math.abs(y1 - y0) + y0;\n\n    if (type === UNIFORM) {\n      linePath = M + x0 + ',' + source.y + ' ' +\n        L + x0 + ',' + y0 + ' ' +\n        C + cx1 + ',' + cy1 + ' ' +\n        cx2 + ',' + cy2 + ' ' +\n        x1 + ',' + y1 + ' ' +\n        L + x1 + ',' + target.y;\n    } else {\n      linePath = M + sx0 + ',' + y0 + ' ' +\n        L + sx0 + ',' + y0 + ' ' +\n        C + sx0 + ',' + cy1 + ' ' +\n        tx0 + ',' + cy2 + ' ' +\n        tx0 + ',' + y1 + ' ' +\n        L + tx1 + ',' + y1 + ' ' +\n        C + tx1 + ',' + cy2 + ' ' +\n        sx1 + ',' + cy1 + ' ' +\n        sx1 + ',' + y0 + ' ' +\n        L + sx0 + ',' + y0;\n    }\n\n    return linePath;\n  },\n  sankeyRibbon = (source, target, config) => {\n    let {\n      curvature,\n      orientation,\n      padding,\n      linkType\n    } = config;\n\n    orientation = orientation || HORIZONTAL;\n\n    if (orientation === HORIZONTAL) {\n      source.x = Math.floor(source.x + padding);\n      target.x = Math.ceil(target.x - padding);\n      return horizontalRibbon(source, target, curvature, linkType);\n    }\n    source.y = Math.floor(source.y + padding);\n    target.y = Math.ceil(target.y - padding);\n    return verticalRibbon(source, target, curvature, linkType);\n  };\n\nexport {\n  sankeyRibbon\n};\n","let MAX = Math.max,\n  MIN = Math.min,\n  VERYSMALLNUMBER = 1e-6,\n  VERTICAL = 'vertical';\n\nfunction findNodeById (_nodes, _node) { // Need to change this function to take in actual id\n  let nodes = _nodes,\n    node = _node;\n  return nodes.find(function (d) {\n    return d.id === node || d.label === node;\n  });\n}\nfunction createNodeLinks ({ nodes, links }) { // Creating the Source - Target links of each node\n  nodes.forEach(_node => {\n    let node = _node;\n    node.props.sourceLinks = []; // create empty arrays of source and target links\n    node.props.targetLinks = [];\n  });\n\n  /** Populate the source and target Links array of each node */\n  links.forEach((_link, index) => {\n    let link = _link,\n      { source, target } = link.props;\n    if (typeof source !== 'object') source = link.props.source = findNodeById(nodes, source); // find the source node\n    if (typeof target !== 'object') target = link.props.target = findNodeById(nodes, target); // find the target node\n    source.props.sourceLinks.push(link);\n    target.props.targetLinks.push(link);\n\n    link.props.index = index;\n  });\n}\nfunction ascendingHeight (a, b) {\n  return a.props.target.props.y0 - b.props.target.props.y0;\n}\nfunction ascendingWidth (a, b) {\n  return a.props.target.props.x0 - b.props.target.props.x0;\n}\nfunction sortLinks (_links, orientation) {\n  let links = _links;\n  if (orientation === VERTICAL) {\n    links.sort(ascendingWidth);\n  } else {\n    links.sort(ascendingHeight);\n  }\n  return links;\n}\nfunction createLinkDimensions ({ nodes }, props) {\n  let orientation = props && props.orientation;\n  for (const node of nodes) {\n    if (orientation === VERTICAL) {\n      let x0 = node.props.x0,\n        x1 = x0,\n        sortedSourceLinks = sortLinks(node.props.sourceLinks, orientation);\n      for (const link of sortedSourceLinks) {\n        link.props.x0 = x0 + link.props.linkWidth / 2;\n        link.props.y0 = link.props.source.props.y1;\n        x0 += link.props.linkWidth;\n      }\n      for (const link of node.props.targetLinks) {\n        link.props.x1 = x1 + link.props.linkWidth / 2;\n        link.props.y1 = link.props.target.props.y0;\n        x1 += link.props.linkWidth;\n      }\n    } else {\n      let y0 = node.props.y0,\n        y1 = y0,\n        sortedSourceLinks = sortLinks(node.props.sourceLinks);\n      for (const link of sortedSourceLinks) {\n        link.props.y0 = y0 + link.props.linkWidth / 2;\n        link.props.x0 = link.props.source.props.x1;\n        y0 += link.props.linkWidth;\n      }\n      for (const link of node.props.targetLinks) {\n        link.props.y1 = y1 + link.props.linkWidth / 2;\n        link.props.x1 = link.props.target.props.x0;\n        y1 += link.props.linkWidth;\n      }\n    }\n  }\n}\nfunction createNodeValues ({ nodes }) {\n  nodes && nodes.forEach((_node) => {\n    let totalSourceValue = 0,\n      totalTargetValue = 0,\n      node = _node;\n    for (const { value } of node.props.sourceLinks) {\n      totalSourceValue += Number(value);\n    }\n    for (const { value } of node.props.targetLinks) {\n      totalTargetValue += Number(value);\n    }\n    node.props.value = MAX(totalSourceValue, totalTargetValue); // Assign value to each node based on the maximun of source and target Link values\n  });\n}\n\nfunction createGraph (graph) {\n  createNodeLinks(graph);\n  createNodeValues(graph);\n  return graph;\n}\n\nfunction traverseGraph ({ nodes }) {\n  let currentSet = new Set(nodes), // Create initial set of unique nodes\n    nextSet = new Set(), // Creates empty set of next nodes\n    depth = 0;\n    /* Traverse the graph using BFS and calculate the depth of each node */\n  while (currentSet.size) {\n    // eslint-disable-next-line no-loop-func\n    currentSet.forEach((_node) => {\n      let node = _node;\n      node.props.depth = depth;\n      for (const link of node.props.sourceLinks) {\n        nextSet.add(link.props.target);\n      }\n    });\n    if (++depth > nodes.length) {\n      return false;\n    };\n    currentSet = nextSet;\n    nextSet = new Set();\n  }\n\n  return true;\n}\nfunction createNodeDimensions (graphs, _props) {\n  let props = _props,\n    iterations = 6,\n    { nodes } = graphs,\n    maxDepth = MAX.apply(null, nodes.map((node) => { return node.props.depth; })) + 1; // Find maximum depth of the graph\n  const columns = new Array(maxDepth);\n  for (const node of nodes) {\n    const layer = MAX(0, MIN(maxDepth - 1, node.props.depth));\n    node.props.layer = layer;\n    if (columns[layer]) columns[layer].push(node);\n    else columns[layer] = [node];\n  }\n  setnodeXY(columns, maxDepth, props);\n  if (props.nodeRelaxation) {\n    for (let i = 0; i < iterations; ++i) { // number of iterations = 6\n      const convergence = Math.pow(0.99, i),\n        divergence = Math.max(1 - convergence, (i + 1) / 6); // Convergence and divergence factors are calculated based on the difference of iterative values from 1\n      relaxSources(columns, convergence, divergence, props);\n      relaxTargets(columns, convergence, divergence, props);\n    }\n  }\n  createLinkDimensions(graphs, props);\n}\nfunction setnodeXY (_columns, _maxDepth, _props) {\n  let columns = _columns,\n    props = _props,\n    maxDepth = _maxDepth,\n    maxNodeWidth,\n    minNodesLength,\n    nodeGutter,\n    nodeValueFactor,\n    columngapFactor,\n    orientation = props.orientation;\n  maxNodeWidth = MAX.apply(null, columns[maxDepth - 1].map((node) => { return node.nodeWidth; }));\n  columngapFactor = (orientation === VERTICAL) ? (props.height[1] - props.height[0] - maxNodeWidth) / (maxDepth - 1) : (props.width[1] - props.width[0] - maxNodeWidth) / (maxDepth - 1);\n\n  nodeGutter = props.nodeGutter;\n  minNodesLength = MAX.apply(null, columns.map((nodes) => {\n    return nodes.length;\n  }));\n  if (orientation === VERTICAL) {\n    if (((minNodesLength - 1) * nodeGutter) >= (props.width[1] - props.width[0]) || ((minNodesLength - 1) * nodeGutter) < 0) nodeGutter = props.nodeGutter = 10;\n  } else {\n    if (((minNodesLength - 1) * nodeGutter) >= (props.height[1] - props.height[0]) || ((minNodesLength - 1) * nodeGutter) < 0) nodeGutter = props.nodeGutter = 10;\n  }\n  nodeValueFactor = MIN.apply(null, columns.map((nodes) => {\n    let totalValue = 0;\n    for (const node of nodes) {\n      totalValue += node.props.value;\n    }\n    return ((orientation === VERTICAL) ? ((props.width[1] - props.width[0] - ((nodes.length - 1) * nodeGutter)) / totalValue) : ((props.height[1] - props.height[0] - ((nodes.length - 1) * nodeGutter)) / totalValue));\n  }));\n  if (!columngapFactor || columngapFactor === Infinity || columngapFactor === -Infinity) columngapFactor = 0;\n  if (!nodeValueFactor || nodeValueFactor === Infinity || nodeValueFactor === -Infinity) nodeValueFactor = 0;\n  for (const nodes of columns) {\n    if (orientation === VERTICAL) {\n      let startX = props.width[0];\n      for (const node of nodes) {\n        for (const link of node.props.sourceLinks) { // Calculate the width of links of each sourcenode\n          link.props.linkWidth = link.value * nodeValueFactor;\n        }\n        node.props.y0 = props.height[0] + (node.props.layer * columngapFactor);\n        node.props.y1 = node.props.y0 + node.nodeWidth;\n        node.props.x0 = startX;\n        node.props.x1 = node.props.x0 + (nodeValueFactor * node.props.value);\n        startX = node.props.x1 + nodeGutter;\n      }\n    } else {\n      let startY = props.height[0];\n      for (const node of nodes) {\n        for (const link of node.props.sourceLinks) { // Calculate the width of links of each sourcenode\n          link.props.linkWidth = link.value * nodeValueFactor;\n        }\n        node.props.x0 = props.width[0] + (node.props.layer * columngapFactor);\n        node.props.x1 = node.props.x0 + node.nodeWidth;\n        node.props.y0 = startY;\n        node.props.y1 = node.props.y0 + (nodeValueFactor * node.props.value);\n        startY = node.props.y1 + nodeGutter;\n      }\n    }\n  }\n}\n// Reposition each node based on its incoming (target) links.\nfunction relaxTargets (columns, alpha, beta, props) {\n  let orientation = props && props.orientation;\n  for (let i = 1, n = columns.length; i < n; ++i) {\n    let targetShiftFactor;\n    const column = columns[i];\n    for (const target of column) {\n      let y = 0,\n        w = 0;\n      for (const link of target.props.targetLinks) {\n        let valueFactor = link.value * (target.props.layer - link.props.source.props.layer);\n        y += targetTop(link.props.source, target, props) * valueFactor;\n        w += valueFactor;\n      }\n      if (!(w > 0)) continue;\n      if (orientation === VERTICAL) {\n        targetShiftFactor = (y / w - target.props.x0) * alpha;\n        target.props.x0 += targetShiftFactor;\n        target.props.x1 += targetShiftFactor;\n      } else {\n        targetShiftFactor = (y / w - target.props.y0) * alpha;\n        target.props.y0 += targetShiftFactor;\n        target.props.y1 += targetShiftFactor;\n      }\n    }\n    resolveCollisions(column, beta, props);\n  }\n}\n\n// Reposition each node based on its outgoing (source) links.\nfunction relaxSources (columns, alpha, beta, props) {\n  let orientation = props && props.orientation;\n  for (let n = columns.length, i = n - 2; i >= 0; --i) {\n    let sourceShiftFactor;\n    const column = columns[i];\n    for (const source of column) {\n      let y = 0,\n        w = 0;\n      for (const link of source.props.sourceLinks) {\n        const { target } = link.props;\n        let valueFactor = link.value * (target.props.layer - source.props.layer);\n        y += sourceTop(source, target, props) * valueFactor;\n        w += valueFactor;\n      }\n      if (!(w > 0)) continue;\n      if (orientation === VERTICAL) {\n        sourceShiftFactor = (y / w - source.props.x0) * alpha;\n        source.props.x0 += sourceShiftFactor;\n        source.props.x1 += sourceShiftFactor;\n      } else {\n        sourceShiftFactor = (y / w - source.props.y0) * alpha;\n        source.props.y0 += sourceShiftFactor;\n        source.props.y1 += sourceShiftFactor;\n      }\n    }\n    resolveCollisions(column, beta, props);\n  }\n}\n\nfunction resolveCollisions (nodes, beta, props) {\n  const i = nodes.length >> 1,\n    subject = nodes[i];\n  let orientation = props && props.orientation;\n  if (orientation === VERTICAL) {\n    resolveCollisionsBottomToTop(nodes, subject.props.x0 - props.nodeGutter, i - 1, beta, props);\n    resolveCollisionsTopToBottom(nodes, subject.props.x1 + props.nodeGutter, i + 1, beta, props);\n    resolveCollisionsBottomToTop(nodes, props.width[1], nodes.length - 1, beta, props);\n    resolveCollisionsTopToBottom(nodes, props.width[0], 0, beta, props);\n  } else {\n    resolveCollisionsBottomToTop(nodes, subject.props.y0 - props.nodeGutter, i - 1, beta, props);\n    resolveCollisionsTopToBottom(nodes, subject.props.y1 + props.nodeGutter, i + 1, beta, props);\n    resolveCollisionsBottomToTop(nodes, props.height[1], nodes.length - 1, beta, props);\n    resolveCollisionsTopToBottom(nodes, props.height[0], 0, beta, props);\n  }\n}\n\n// Push any overlapping nodes down.\nfunction resolveCollisionsTopToBottom (nodes, _y, _i, beta, props) {\n  let i = _i,\n    y = _y,\n    orientation = props && props.orientation;\n  for (; i < nodes.length; ++i) {\n    const node = nodes[i],\n      dy = (y - (orientation === VERTICAL ? node.props.x0 : node.props.y0)) * beta;\n    if (orientation === VERTICAL) {\n      if (dy > VERYSMALLNUMBER) {\n        node.props.x0 += dy;\n        node.props.x1 += dy;\n      }\n      y = node.props.x1 + props.nodeGutter;\n    } else {\n      if (dy > VERYSMALLNUMBER) {\n        node.props.y0 += dy;\n        node.props.y1 += dy;\n      }\n      y = node.props.y1 + props.nodeGutter;\n    }\n  }\n}\n\n// Push any overlapping nodes up.\nfunction resolveCollisionsBottomToTop (nodes, _y, _i, beta, props) {\n  let i = _i,\n    y = _y,\n    orientation = props && props.orientation;\n  for (; i >= 0; --i) {\n    const node = nodes[i],\n      dy = ((orientation === VERTICAL ? node.props.x1 : node.props.y1) - y) * beta;\n    if (orientation === VERTICAL) {\n      if (dy > VERYSMALLNUMBER) {\n        node.props.x0 -= dy;\n        node.props.x1 -= dy;\n      }\n      y = node.props.x0 - props.nodeGutter;\n    } else {\n      if (dy > VERYSMALLNUMBER) {\n        node.props.y0 -= dy;\n        node.props.y1 -= dy;\n      }\n      y = node.props.y0 - props.nodeGutter;\n    }\n  }\n}\n\n// Returns the target.y0 that would produce an ideal link from source to target.\nfunction targetTop (source, target, props) {\n  let orientation = props && props.orientation,\n    shiftStart = (orientation === VERTICAL ? source.props.x0 : source.props.y0) - (source.props.sourceLinks.length - 1) * props.nodeGutter / 2;\n  for (const link of source.props.sourceLinks) {\n    let node = link.props.target,\n      linkWidth = link.props.linkWidth;\n    if (node === target) break;\n    shiftStart += linkWidth + props.nodeGutter;\n  }\n  for (const link of target.props.targetLinks) {\n    let node = link.props.source,\n      linkWidth = link.props.linkWidth;\n    if (node === source) break;\n    shiftStart -= linkWidth;\n  }\n  return shiftStart;\n}\n\n// Returns the source.y0 that would produce an ideal link from source to target.\nfunction sourceTop (source, target, props) {\n  let orientation = props && props.orientation,\n    shiftStart = (orientation === VERTICAL ? target.props.x0 : target.props.y0) - (target.props.targetLinks.length - 1) * props.nodeGutter / 2;\n  for (const link of target.props.targetLinks) {\n    let node = link.props.source,\n      linkWidth = link.props.linkWidth;\n    if (node === source) break;\n    shiftStart += linkWidth + props.nodeGutter;\n  }\n  for (const link of source.props.sourceLinks) {\n    let node = link.props.target,\n      linkWidth = link.props.linkWidth;\n    if (node === target) break;\n    shiftStart -= linkWidth;\n  }\n  return shiftStart;\n}\n\nexport {\n  createGraph,\n  createNodeLinks,\n  createNodeValues,\n  traverseGraph,\n  createNodeDimensions\n};\n","export default {\n  '*.dataset.sankey': function () {\n    let dataset = this,\n      clipCanvas = dataset.getClip('canvas'),\n      clipCanvasInit = dataset.getClip('init');\n\n    return {\n      'linkGroup.appearing': () => {\n        return [{\n          initialAttr: {\n            'clip-rect': clipCanvasInit\n          },\n          finalAttr: {\n            'clip-rect': clipCanvas\n          },\n          slot: 'plot'\n        }];\n      },\n      'nodeGroup.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'axis'\n        }];\n      },\n      'nodeLabelGroup.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      }\n    };\n  }\n};\n","import { componentFactory, pluckNumber, pluck, getDashStyle, DASH_DEF, PXSTRING, parseUnsafeString } from '@fusioncharts/core/src/lib';\n\nconst BOLD = 'bold',\n  NORMAL = 'normal',\n  ITALIC = 'italic';\n\nexport default function (chart) {\n  let dsDef = chart.getDSdef(),\n    chartAttr = chart.getFromEnv('dataSource').chart || {},\n    ds,\n    nodeLabelFontBold,\n    nodeLabelFontItalic,\n    nodeLabelBorderThickness,\n    nodeLabelBorderPadding,\n    nodeLabelBorderRadius,\n    nodeLabelBorderDash,\n    showNodes,\n    { dataLabelStyle } = chart.config,\n    {\n      nodes,\n      links\n    } = chart.getFromEnv('sankey-graph');\n\n  nodeLabelFontBold = pluckNumber(chartAttr.nodelabelfontbold, chartAttr.labelfontbold, 0) ? BOLD : NORMAL;\n  nodeLabelFontItalic = pluckNumber(chartAttr.nodelabelfontitalic, chartAttr.labelfontitalic, 0) ? ITALIC : NORMAL;\n  nodeLabelBorderThickness = pluckNumber(chartAttr.nodelabelborderthickness, chartAttr.labelborderthickness, 1);\n  nodeLabelBorderPadding = pluckNumber(chartAttr.nodelabelborderpadding, chartAttr.labelborderpadding, 2);\n  nodeLabelBorderRadius = pluckNumber(chartAttr.nodelabelborderradius, chartAttr.labelborderradius, 0);\n  nodeLabelBorderDash = pluckNumber(chartAttr.nodelabelborderdashed, chartAttr.labelborderdashed, 0)\n    ? getDashStyle(pluckNumber(chartAttr.nodelabelborderdashlen, chartAttr.labelborderdashlen, 4), pluckNumber(chartAttr.nodelabelborderdashgap, chartAttr.labelborderdashgap, 2))\n    : DASH_DEF;\n\n  showNodes = pluckNumber(chartAttr.shownodes, 1);\n  componentFactory(chart, dsDef, 'dataset', 1);\n  ds = chart.getDatasets()[0];\n  ds.configure({\n    showNodes,\n    nodeWidth: chart.config.nodeWidth,\n    nodeRelaxation: pluckNumber(chartAttr.noderelaxation, 1),\n    nodeSpacing: pluckNumber(chartAttr.nodespacing, 10),\n    labelSepChar: parseUnsafeString(pluck(chartAttr.labelSepChar, ',')),\n    enableDrag: pluckNumber(chartAttr.enabledrag, true),\n    highlightEffect: pluckNumber(chartAttr.highlighteffect, true),\n    style: {\n      node: {\n        label: {\n          fontFamily: pluck(chartAttr.nodelabelfont, chartAttr.labelfont, dataLabelStyle.fontFamily),\n          fontSize: pluck(chartAttr.nodelabelfontsize, chartAttr.labelfontsize, chartAttr.basefontsize, (11 + PXSTRING)),\n          fontWeight: nodeLabelFontBold,\n          fontStyle: nodeLabelFontItalic,\n          borderThickness: nodeLabelBorderThickness,\n          borderPadding: nodeLabelBorderPadding,\n          borderRadius: nodeLabelBorderRadius,\n          borderDash: nodeLabelBorderDash\n        }\n      },\n      link: {}\n    },\n    nodes,\n    links\n  });\n};\n","import Heatmap from '@fusioncharts/powercharts/src/chart/heatmap';\nexport default Heatmap;\n","\nimport MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport HeatMapDataset from '../../dataset/heatmap';\nimport HeatMapGroup from '../../dataset/groups/heatmap';\nimport axisFactory from '../../factories/category-axis';\nimport dataSetFactory from '@fusioncharts/charts/src/factories/multiseries-dataset';\nimport createColorRangeManager from '@fusioncharts/charts/src/factories/colorrange';\nimport decideLegendCreation from '@fusioncharts/charts/src/factories/legendmanager';\nimport {\n  chartPaletteStr,\n  convertColor,\n  hasSVG,\n  pluck,\n  preDefStr,\n  pluckNumber,\n  parseUnsafeString,\n  getFirstValue,\n  pluckFontSizeMaintainUnit\n} from '@fusioncharts/core/src/lib';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\n\nlet defaultFontStr = preDefStr.defaultFontStr,\n  divLineAlpha3DStr = preDefStr.divLineAlpha3DStr,\n  divLineAlphaStr = preDefStr.divLineAlphaStr,\n  altVGridColorStr = preDefStr.altVGridColorStr,\n  altVGridAlphaStr = preDefStr.altVGridAlphaStr,\n  altHGridColorStr = preDefStr.altHGridColorStr,\n  altHGridAlphaStr = preDefStr.altHGridAlphaStr,\n  colorStrings = preDefStr.colors,\n  COLOR_000000 = colorStrings.c000000,\n  EQUAL_STR = ' = ',\n  HEATMAP = 'heatmap',\n  UNDEF,\n  checkValidId = item => (item.id !== UNDEF);\n\nclass HeatMap extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'HeatMap';\n  }\n\n  constructor () {\n    super();\n\n    this.tooltipsepchar = EQUAL_STR;\n    this.hasGradientLegend = true;\n\n    this.registerFactory('axis', axisFactory, ['canvas']);\n    // decide and create legend after creating canvas\n    this.registerFactory('legend', decideLegendCreation, ['canvas']);\n\n    // create color manager after creating legend-decider\n    this.registerFactory('colormanager-decider', createColorRangeManager, ['legend']);\n\n    // create dataset after creating colormanager-decider and vCanvas\n    this.registerFactory('dataset', dataSetFactory, ['colormanager-decider', 'vCanvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'HeatMap';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.isSingleSeries = true;\n    config.hasLegend = true;\n    config.defaultDatasetType = HEATMAP;\n    config.enablemousetracking = true;\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let jsonData = this.getFromEnv('dataSource'),\n      dataset = jsonData.dataset,\n      data,\n      colorrange = jsonData.colorrange;\n    if (dataset) {\n      for (let i = 0; i < dataset.length; i++) {\n        if (dataset[i].data) {\n          data = dataset[i].data;\n          break;\n        }\n      }\n    }\n    if (!dataset || !data || data.length === 0 ||\n       !colorrange || (!colorrange.color && !Number(colorrange.gradient))) {\n      return true;\n    }\n  }\n\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.drawTrendRegion = 0;\n  }\n  configureAttributes (dataObj) {\n    var iapi = this,\n      chartConfig = iapi.config,\n      dataSource = iapi.getFromEnv('dataSource'),\n      skipConfigureIteration = iapi.config.skipConfigureIteration = {}, // eslint-disable-line good-practices/no-single-usage-variable\n      rows,\n      columns,\n      datasetArray = dataObj.dataset,\n      unifiedDataset = [];\n    rows = dataSource.rows && dataSource.rows.row.filter(checkValidId);\n    columns = dataSource.columns && dataSource.columns.column.filter(checkValidId);\n    if (!rows || !columns) {\n      // create unified dataset\n      for (let i = 0; i < datasetArray.length; i++) {\n        for (let j = 0; j < datasetArray[i].data.length; j++) {\n          unifiedDataset.push(datasetArray[i].data[j]);\n        }\n      }\n      if (!rows) {\n        // get unique rows by rowid property\n        rows = unifiedDataset.map(item => getFirstValue(item.rowid)).filter(\n          (value, index, self) => self.indexOf(value) === index);\n      }\n      if (!columns) {\n        // get unique columns by columnid property\n        columns = unifiedDataset.map(item => getFirstValue(item.columnid)).filter(\n          (value, index, self) => self.indexOf(value) === index);\n      }\n    }\n    iapi.parseChartAttr(dataObj);\n\n    iapi.addToEnv('chartColorRange', dataObj.colorrange || {});\n\n    iapi.createComponent(dataObj);\n\n    iapi._feedAxesRawData();\n    skipConfigureIteration.axis = true;\n    iapi.addToEnv('totalRows', rows.length);\n    iapi.addToEnv('totalColumns', columns.length);\n\n    iapi.configureChildren();\n    // after configure chart calls its async draw\n    iapi.asyncDraw();\n    iapi.getFromEnv('toolTipController').setStyle({\n      'backgroundColor': hasSVG ? convertColor((chartConfig.tooltipbgcolor || 'FFF'), (chartConfig.tooltipbgalpha || 100))\n        : (chartConfig.tooltipbgcolor || 'FFF').replace(/\\s+/g, '').replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      'color': (chartConfig.tooltipcolor || chartConfig.basefontcolor || '545454').replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      'borderColor': hasSVG ? convertColor((chartConfig.tooltipbordercolor || '666'), (chartConfig.tooltipborderalpha || 100))\n        : (chartConfig.tooltipbordercolor || '666').replace(/\\s+/g, '').replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      'borderWidth': pluckNumber(chartConfig.tooltipborderthickness, 1) + 'px',\n      'showToolTipShadow': pluckNumber(chartConfig.showtooltipshadow || 0),\n      'borderRadius': pluckNumber(chartConfig.tooltipborderradius, 0) + 'px',\n      'fontSize': pluckNumber(chartConfig.basefontsize, 10) + 'px',\n      'fontFamily': chartConfig.basefont || this.getFromEnv('style').inCanfontFamily,\n      'padding': pluckNumber(chartConfig.tooltippadding || 3) + 'px'\n    });\n  }\n  _postSpaceManagement () {\n    var iapi = this,\n      xAxis = iapi.getChildren('xAxis')[0],\n      legend = iapi.getFromEnv('legend'),\n      xDepth = iapi.config.xDepth; // eslint-disable-line good-practices/no-single-usage-variable\n    iapi.setAxisDimention();\n    xAxis && xAxis.shiftLabels(-xDepth, 0);\n    legend && legend.postSpaceManager();\n\n    iapi.allocateDimensionOfChartMenuBar();\n  }\n\n  /**\n   * Sets dimension of Axis components\n   */\n  setAxisDimention () {\n    let iapi = this,\n      xAxis = iapi.getChildren('xAxis') && iapi.getChildren('xAxis')[0],\n      yAxis = iapi.getChildren('yAxis') && iapi.getChildren('yAxis')[0],\n      chartConfig = iapi.getFromEnv('chartConfig'),\n      canvas = iapi.getChildren('canvas')[0],\n      canvasConfig = canvas.config,\n      {\n        left,\n        top,\n        width,\n        height,\n        paddingLeft,\n        paddingRight\n      } = canvas.getEffectiveDimensions(),\n      canvasBorderWidth = canvasConfig && canvasConfig.canvasBorderWidth,\n      canvasPadding = canvasConfig && canvasConfig.canvasPadding;\n    xAxis && xAxis.setAxisConfig({\n      'canvasPaddingLeft': Math.max(paddingLeft, canvasPadding),\n      'canvasPaddingRight': Math.max(paddingRight, canvasPadding)\n    });\n    xAxis && xAxis.setAxisDimention({\n      x: left,\n      y: xAxis.config.isOpposit ? (top + (chartConfig.shift || 0) - canvasBorderWidth)\n        : (top + height + (chartConfig.shift || 0) + canvasBorderWidth),\n      opposite: xAxis.config.isOpposit ? top + height + canvasBorderWidth\n        : top - canvasBorderWidth,\n      axisLength: width\n    });\n    yAxis && yAxis.setAxisDimention({\n      x: yAxis.config.isOpposit\n        ? left + width + canvasBorderWidth : left - canvasBorderWidth,\n      y: top,\n      opposite: yAxis.config.isOpposit\n        ? left - canvasBorderWidth : left + width + canvasBorderWidth,\n      axisLength: height\n    });\n  }\n  _feedAxesRawData () {\n    var iapi = this,\n      colorM = iapi.getFromEnv('color-manager'),\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = dataObj.chart,\n      xAxisConf,\n      yAxisConf,\n      is3D = iapi.config.is3D,\n      palleteString = is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      xAxisPosition = parseUnsafeString(chartAttrs.xaxisposition).toLowerCase(),\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    xAxisConf = {\n      mapTickValuesById: true,\n      isVertical: false,\n      isReverse: false,\n      isOpposit: pluckNumber(xAxisPosition === 'top' ? true : UNDEF,\n        xAxisPosition === 'bottom' ? false : UNDEF, !!iapi.config.placeAxisLabelsOnTop),\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.xaxisnamepadding,\n      axisValuePadding: pluckNumber(chartAttrs.labelxpadding, chartAttrs.labelpadding, 4),\n      axisNameFont: chartAttrs.xaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.xaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.xaxisnamefontsize,\n      axisNameFontColor: chartAttrs.xaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.xaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.xaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.xaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.xaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.xaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.xaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.xaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.xaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.xaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.xaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.xaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.xaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.xaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.xaxisnameborderdashgap,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: pluck(chartAttrs.vdivlinecolor, chartAttrs.divlinecolor,\n        colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.vdivlinealpha, chartAttrs.divlinealpha,\n        is3D ? colorM.getColor(divLineAlpha3DStr) : colorM.getColor(divLineAlphaStr)),\n      divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed,\n        chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n      alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor(altVGridColorStr)),\n      alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor(altVGridAlphaStr)),\n      numDivLines: chartAttrs.numvdivlines,\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      labelBdrColor: chartAttrs.labelbordercolor,\n      labelBdrAlpha: chartAttrs.labelborderalpha,\n      labelLink: chartAttrs.labellink,\n      labelBgColor: chartAttrs.labelbgcolor,\n      labelBgAlpha: chartAttrs.labelbgalpha,\n      labelBdrThickness: chartAttrs.labelborderthickness,\n      labelBdrPadding: chartAttrs.labelborderpadding,\n      labelBdrRadius: chartAttrs.labelborderradius,\n      labelBdrDashed: chartAttrs.labelborderdashed,\n      labelBdrDashLen: chartAttrs.labelborderdashlen,\n      labelBdrDashGap: chartAttrs.labelborderdashgap,\n      axisName: chartAttrs.xaxisname,\n      axisMinValue: chartAttrs.xaxisminvalue,\n      axisMaxValue: chartAttrs.xaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptivexmin,\n      adjustDiv: chartAttrs.adjustvdiv,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: pluckNumber(chartAttrs.showxaxislabels, chartAttrs.showlabels),\n      rotateLabels: chartAttrs.rotatexaxislabels,\n      slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      maxLabelHeight: chartAttrs.maxlabelheight,\n      showZeroPlane: chartAttrs.showvzeroplane,\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      zeroPlaneThickness: chartAttrs.vzeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, COLOR_000000)\n    };\n    yAxisConf = {\n      mapTickValuesById: true,\n      isVertical: true,\n      isReverse: false,\n      isOpposit: isEqualString(chartAttrs.yaxisposition, 'right'),\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#?([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.yaxisnamepadding,\n      axisValuePadding: pluckNumber(chartAttrs.labelypadding, chartAttrs.yaxisvaluespadding, 4),\n      axisNameFont: chartAttrs.yaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.yaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.yaxisnamefontsize,\n      axisNameFontColor: chartAttrs.yaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.yaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.yaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.yaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.yaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.yaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.yaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.yaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.yaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.yaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.yaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.yaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.yaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.yaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.yaxisnameborderdashgap,\n      axisNameWidth: chartAttrs.yaxisnamewidth,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n      axisName: chartAttrs.yaxisname,\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n      alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor(altHGridColorStr)),\n      alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor(altHGridAlphaStr)),\n      numDivLines: chartAttrs.numdivlines,\n      axisMinValue: chartAttrs.yaxisminvalue,\n      axisMaxValue: chartAttrs.yaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptiveymin,\n      adjustDiv: chartAttrs.adjustdiv,\n      labelStep: chartAttrs.yaxisvaluesstep,\n      showLabels: pluckNumber(chartAttrs.showyaxislabels, chartAttrs.showlabels),\n      maxLabelWidthPercent: chartAttrs.maxlabelwidthpercent,\n      showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n      divLineColor: pluck(chartAttrs.hdivlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.hdivlinealpha, colorM.getColor(divLineAlphaStr)),\n      divLineThickness: pluckNumber(chartAttrs.hdivlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.hdivlinedashed, chartAttrs.hdivlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.hdivlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.hdivlinedashgap, 2),\n      // showLimits: chartAttrs.showlimits,\n      // showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n      showZeroPlane: chartAttrs.showzeroplane,\n      zeroPlaneColor: chartAttrs.zeroplanecolor,\n      zeroPlaneThickness: chartAttrs.zeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showyaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, COLOR_000000),\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      labelBdrColor: chartAttrs.labelbordercolor,\n      labelBdrAlpha: chartAttrs.labelborderalpha,\n      labelLink: chartAttrs.labellink,\n      labelBgColor: chartAttrs.labelbgcolor,\n      labelBgAlpha: chartAttrs.labelbgalpha,\n      labelBdrThickness: chartAttrs.labelborderthickness,\n      labelBdrPadding: chartAttrs.labelborderpadding,\n      labelBdrRadius: chartAttrs.labelborderradius,\n      labelBdrDashed: chartAttrs.labelborderdashed,\n      labelBdrDashLen: chartAttrs.labelborderdashlen,\n      labelBdrDashGap: chartAttrs.labelborderdashgap\n    };\n    xAxisConf.vtrendlines = dataObj.vtrendlines;\n    yAxisConf.trendlines = dataObj.trendlines;\n    return {\n      yAxisConf: [yAxisConf],\n      xAxisConf: [xAxisConf]\n    };\n  }\n\n  _setCategories () {\n    var iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      xAxis = iapi.getChildren('xAxis'),\n      yAxis = iapi.getChildren('yAxis'),\n      len,\n      i,\n      k,\n      columnObj,\n      rowObj,\n      columns,\n      rows,\n      columnid,\n      rowid,\n      columnArr = [],\n      rowArr = [],\n      columnFlag,\n      rowFlag,\n      j;\n\n    if (!dataObj.columns || !dataObj.rows) {\n      dataObj.columns = {};\n      dataObj.columns.column = columns = [];\n\n      dataObj.rows = {};\n      dataObj.rows.row = rows = [];\n\n      for (k = 0; k < (dataObj.dataset && dataObj.dataset.length); k++) {\n        len = dataObj.dataset && dataObj.dataset[k].data && dataObj.dataset[k].data.length;\n        for (i = 0; i < len; i++) {\n          columnid = getFirstValue(dataObj.dataset[k].data[i].columnid);\n          rowid = getFirstValue(dataObj.dataset[k].data[i].rowid);\n          columnFlag = true;\n          rowFlag = true;\n\n          for (j = 0; j < columns.length; j++) {\n            if (columnid === columns[j].id) {\n              columnFlag = false;\n            }\n          }\n          if (columnFlag) {\n            columnObj = {\n              id: columnid,\n              label: columnid\n            };\n            dataObj.columns.column.push(columnObj);\n          }\n\n          for (j = 0; j < rows.length; j++) {\n            if (rowid === rows[j].id) {\n              rowFlag = false;\n            }\n          }\n          if (rowFlag) {\n            rowObj = {\n              id: rowid,\n              label: rowid\n            };\n            dataObj.rows.row.push(rowObj);\n          }\n        }\n      }\n    }\n\n    columns = dataObj.columns.column;\n    rows = dataObj.rows.row;\n\n    for (i = 0; i < (columns && columns.length); i++) {\n      columns[i].label = pluck(columns[i].label, columns[i].name, columns[i].id);\n      columnArr.push(columns[i]);\n    }\n    dataObj.columns.column = columnArr;\n\n    for (i = 0; i < (rows && rows.length); i++) {\n      rows[i].label = pluck(rows[i].label, rows[i].name, rows[i].id);\n      rowArr.push(rows[i]);\n    }\n    dataObj.rows.row = rowArr;\n\n    // dataObj.columns && xAxis[0].setAxisPadding(0.5, 0.5);\n    dataObj.columns && xAxis[0].setTickValues(dataObj.columns.column);\n\n    // dataObj.columns && yAxis[0].setAxisPadding(0.5, 0.5);\n    dataObj.rows && yAxis[0].setTickValues(dataObj.rows.row);\n\n    xAxis[0].setAxisConfig({\n      categoryNumDivLines: iapi.getFromEnv('totalColumns') - 1,\n      categoryDivLinesFromZero: 0,\n      showAlternateGridColor: 0\n    });\n\n    yAxis[0].setAxisConfig({\n      categoryNumDivLines: iapi.getFromEnv('totalRows') - 1,\n      categoryDivLinesFromZero: 0,\n      showAlternateGridColor: 0\n    });\n  }\n  getDSdef () {\n    return HeatMapDataset;\n  }\n\n  getDSGroupdef () {\n    return HeatMapGroup;\n  }\n}\nexport default HeatMap;\n","import { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport {\n  pluckNumber,\n  pluck,\n  parseUnsafeString,\n  parseTooltext,\n  getValidValue,\n  getDashStyle,\n  getDefinedColor,\n  BLANK,\n  BLANKSTRING,\n  setLineHeight,\n  preDefStr,\n  toRaphaelColor,\n  isIE,\n  hasTouch,\n  getFirstValue,\n  TOUCH_THRESHOLD_PIXELS,\n  CLICK_THRESHOLD_PIXELS,\n  convertColor, getLightColor, getColumnColor, configureDataLabelStyle\n} from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport heatmapAnimation from './index.animation';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\n\nlet HUNDREDSTRING = '100',\n  PLOTGRADIENTCOLOR = 'plotGradientColor',\n  PLOTBORDERCOLOR = 'plotBorderColor',\n  COLOR_FFFFFF = 'FFFFFF',\n  SHOWSHADOW = 'showShadow',\n  UNDEF,\n  MOUSEOVER = 'mouseOver',\n  MOUSEOUT = 'mouseOut',\n  NORMAL = 'normal',\n  PXSTRING = 'px',\n  pStr = preDefStr.pStr,\n  sStr = preDefStr.sStr,\n  COMMA = ',',\n  BOLDSTARTTAG = '<b>',\n  BOLDENDTAG = '</b>',\n  BREAKSTRING = '<br />',\n  visibleStr = 'visible',\n  miterStr = preDefStr.miterStr,\n  hiddenStr = preDefStr.hiddenStr,\n  showHoverEffectStr = preDefStr.showHoverEffectStr,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_END = preDefStr.POSITION_END,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  SETROLLOVERATTR = 'setRolloverAttr',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  EVENTARGS = 'eventArgs',\n  POINTER = 'pointer',\n  tlLabelStr = 'tlLabel',\n  blLabelStr = 'blLabel',\n  trLabelStr = 'trLabel',\n  brLabelStr = 'brLabel',\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  DEFAULT_CURSOR = preDefStr.DEFAULT,\n  MAX_PERCENT_SPACE = 0.9,\n  POINT_FIVE = 0.5,\n  GUTTER_4 = 4,\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  /**\n   * Helper function to create a RedRaphael group.\n   * @param  {Object} attr  Attributes to be applied to the group\n   * @param  {Element} parentContainer         The parent container in which the group will be appended.\n   * @param {Object} dataset The concerned dataset\n   * @return {Element}                         The group that was created.\n   */\n  createGroup = function (attr, parentContainer, dataset) {\n    return dataset.getFromEnv('animationManager').setAnimation({\n      el: 'group',\n      attr: attr,\n      container: parentContainer,\n      component: dataset,\n      label: 'group'\n    });\n  },\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')', // invisible but clickable\n  HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS\n    : CLICK_THRESHOLD_PIXELS,\n  pInt = function (s, mag) {\n    return parseInt(s, mag || 10);\n  },\n  NONE = 'none',\n  _rolloverResponseSetter = function (chart, data, event, onlyHoverEffect, dataset) {\n    var dataGraphics = data.graphics,\n      animationManager = chart.getFromEnv('animationManager'),\n      elem = dataGraphics && dataGraphics.element,\n      elData = elem && elem.getData();\n    // Check whether the plot is in dragged state or not if\n    // drag then dont fire rolloverevent\n    if (elData.draged !== true) {\n      animationManager.setAnimationState(MOUSEOVER);\n      elem && elData.showHoverEffect !== 0 && animationManager.setAnimation({\n        el: elem,\n        attr: elem.getData().setRolloverAttr,\n        component: dataset\n      });\n      !onlyHoverEffect && elem && chart.plotEventHandler(elem, event, ROLLOVER);\n    }\n  },\n  _rolloutResponseSetter = function (chart, data, event, onlyHoverEffect, dataset) {\n    var dataGraphics = data.graphics,\n      animationManager = chart.getFromEnv('animationManager'),\n      elem = dataGraphics && dataGraphics.element,\n      elData = elem && elem.getData();\n    // Check whether the plot is in draggedstate or not if drag then dont fire rolloutevent\n    if (elData.draged !== true) {\n      animationManager.setAnimationState(MOUSEOUT);\n      elem && elData.showHoverEffect !== 0 && animationManager.setAnimation({\n        el: elem,\n        attr: elem.getData().setRolloutAttr,\n        component: dataset\n      });\n      !onlyHoverEffect && elem && chart.plotEventHandler(elem, event, ROLLOUT);\n    }\n  },\n  mathMax = Math.max,\n  mathMin = Math.min,\n  mathAbs = Math.abs;\naddDep({\n  name: 'heatmapAnimation',\n  type: 'animationRule',\n  extension: heatmapAnimation\n});\nclass HeatMapDataset extends ComponentInterface {\n  constructor () {\n    super();\n\n    this.components = {};\n    this.graphics = {};\n    this.dataSetArray = [];\n    // this.getDataLimits = null;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'heatMap';\n  }\n  /**\n   * Configures the cosmetic of dataset\n   * Creates the empty plotGrid array\n   * Calculates the dataset min and max value\n   * @param {Object} datasetJSON data array containing data information\n   */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      JSONData = conf.JSONData,\n      setDataArr = JSONData.data,\n      len = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      colorM = dataSet.getFromEnv('color-manager'),\n      plotBorderDash = pluckNumber(JSONData.dashed, chartAttr.plotborderdashed), // eslint-disable-line good-practices/no-single-usage-variable\n      setData,\n      setValue,\n      dataObj,\n      config,\n      dataStore = dataSet.components.data,\n      plotGrid = dataSet.components.plotGrid = [],\n      isBar = chart.isBar,\n      is3D = chart.config.is3D,\n      enableAnimation,\n      i,\n      r,\n      c,\n      maxValue = -Infinity,\n      minValue = +Infinity,\n      totalRows = dataSet.getFromEnv('totalRows'), // eslint-disable-line good-practices/no-single-usage-variable\n      totalColumns = dataSet.getFromEnv('totalColumns'); // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (r = 0; r < totalRows; r++) {\n      plotGrid.push([]);\n      for (c = 0; c < totalColumns; c++) {\n        plotGrid[r].push([]);\n      }\n    }\n    dataSet.setState('visible',\n      pluckNumber(dataSet.getState('visible'), dataSet.config.JSONData.visible,\n        !Number(dataSet.config.JSONData.initiallyhidden), 1) === 1);\n    conf.showplotborder = pluckNumber(chartAttr.showplotborder, is3D ? 0 : 1);\n    conf.plotDashLen = pluckNumber(chartAttr.plotborderdashlen, 5);\n    conf.plotDashGap = pluckNumber(chartAttr.plotborderdashgap, 4);\n    conf.showTextOutLine = pluckNumber(chartAttr.textoutline, 0);\n    conf.plotfillAngle = pluckNumber(360 - chartAttr.plotfillangle, (isBar ? 180 : 90));\n    conf.plotFillAlpha = pluck(JSONData.alpha, chartAttr.plotfillalpha, HUNDREDSTRING);\n    conf.plotColor = pluck(JSONData.color, colorM.getPlotColor(dataSet.index || dataSet.positionIndex));\n    conf.isRoundEdges = pluckNumber(chartAttr.useroundedges, 0);\n    conf.plotRadius = pluckNumber(chartAttr.useRoundEdges, conf.isRoundEdges ? 1 : 0);\n    conf.plotFillRatio = pluck(JSONData.ratio, chartAttr.plotfillratio);\n    conf.plotgradientcolor = getDefinedColor(chartAttr.plotgradientcolor,\n      colorM.getColor(PLOTGRADIENTCOLOR));\n    // !usePlotGradientColor && (plotgradientcolor = BLANKSTRING);\n    conf.plotBorderAlpha = conf.showplotborder ? pluck(chartAttr.plotborderalpha,\n      conf.plotFillAlpha, HUNDREDSTRING) : 0;\n    conf.plotBorderColor = pluck(chartAttr.plotbordercolor,\n      is3D ? COLOR_FFFFFF : colorM.getColor(PLOTBORDERCOLOR));\n    conf.plotBorderThickness = pluckNumber(chartAttr.plotborderthickness, 1);\n    conf.plotBorderDashStyle = plotBorderDash\n      ? getDashStyle(conf.plotDashLen, conf.plotDashGap) : NONE;\n    conf.showValues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 1);\n    conf.valuePadding = pluckNumber(chartAttr.valuepadding, 2);\n    conf.enableAnimation = enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n    conf.transposeAnimation =\n                pluckNumber(chartAttr.transposeanimation, enableAnimation);\n    conf.transposeAnimDuration = pluckNumber(chartAttr.transposeanimduration, 0.2) * 1000;\n\n    conf.showShadow = (conf.isRoundEdges || is3D) ? pluckNumber(chartAttr.showshadow, 1)\n      : pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.showHoverEffect = pluckNumber(chartAttr.plothovereffect,\n      chartAttr.showhovereffect, UNDEF);\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.definedGroupPadding = Math.max(pluckNumber(chartAttr.plotspacepercent), 0);\n    conf.plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0);\n    conf.maxColWidth = pluckNumber(isBar ? chartAttr.maxbarheight : chartAttr.maxcolwidth, 50);\n    conf.plotPaddingPercent = pluckNumber(chartAttr.plotpaddingpercent);\n    conf.rotateValues = pluckNumber(chartAttr.rotatevalues) ? 270 : 0;\n    conf.placeValuesInside = pluckNumber(chartAttr.placevaluesinside, 0);\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5,\n      top: 0.5,\n      bottom: 0.5\n    };\n\n    conf.use3DLighting = pluckNumber(chartAttr.use3dlighting, 1);\n    conf.parentYAxis = pluck(JSONData.parentyaxis && JSONData.parentyaxis.toLowerCase(),\n      pStr) === sStr ? 1 : 0;\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n\n    // Parsing the attributes and values at set level.\n    for (i = 0; i < len; i++) {\n      setData = setDataArr && setDataArr[i];\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n\n      config.setValue = setValue = dataSet.getFromEnv('number-formatter').getCleanValue(setData.value);\n      maxValue = Math.max(maxValue, setValue);\n      minValue = Math.min(minValue, setValue);\n    }\n\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n\n    dataSet._setConfigure();\n    dataSet.setState('dirty', true);\n  }\n  /**\n   * Attaches legendUpdate event listener to dataset which decides whether to\n   * show/hide particular data in dataset.\n   * Sets the color configuration for each data objects present in dataset.\n   */\n  _setConfigure () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      JSONData = dataSet.config.JSONData,\n      setDataArr = JSONData.data,\n      len = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      chartConfig = dataSet.getFromEnv('chartConfig'),\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      showplotborder = conf.showplotborder,\n      plotColor = conf.plotColor = dataSet.getFromEnv('color-manager').getPlotColor(dataSet.index || dataSet.positionIndex),\n      showTooltip = pluckNumber(chartAttr.showtooltip, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      tooltipSepChar = parseUnsafeString(pluck(chartAttr.tooltipsepchar, ': ')),\n      usePlotGradientColor = pluckNumber(chartAttr.useplotgradientcolor, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      formatedVal,\n      parserConfig,\n      setTooltext,\n      macroIndices,\n      toolText = BLANKSTRING,\n      plotDashLen = conf.plotDashLen,\n      plotDashGap = conf.plotDashGap,\n      plotBorderThickness = conf.plotBorderThickness,\n      isRoundEdges = conf.isRoundEdges,\n      showHoverEffect = conf.showHoverEffect,\n      plotfillAngle = conf.plotfillAngle,\n      plotFillAlpha = conf.plotFillAlpha,\n      plotFillRatio = conf.plotFillRatio,\n      plotBorderAlpha = conf.plotBorderAlpha,\n      plotBorderColor = conf.plotBorderColor,\n      plotBorderDashStyle,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      colorRange = dataSet.getFromEnv('chartColorRange'),\n      column,\n      row,\n      rowid,\n      columnid,\n      mapByPercent = conf.mapByPercent = pluckNumber(colorRange.mapbypercent, 0),\n      mapByCategory = conf.mapByCategory =\n                    pluckNumber(chartAttr.mapbycategory, 0),\n      useColorGradient = colorRange && pluckNumber(colorRange.gradient), // eslint-disable-line good-practices/no-single-usage-variable\n      hoverColor,\n      hoverAlpha,\n      hoverGradientColor,\n      hoverRatio,\n      hoverAngle,\n      hoverBorderColor,\n      hoverBorderAlpha,\n      hoverBorderThickness,\n      hoverBorderDashed,\n      hoverBorderDashGap,\n      hoverBorderDashLen,\n      hoverDashStyle,\n      hoverColorArr,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      setDisplayValue,\n      isBar = chart.isBar,\n      is3D = chart.config.is3D,\n      parentYAxis = conf.parentYAxis,\n      i,\n      maxValue = conf.maxValue, // eslint-disable-line good-practices/no-single-usage-variable\n      minValue = conf.minValue,\n      heatRange,\n      colorObj,\n      tlType = getValidValue(chartAttr.tltype, BLANK),\n      trType = getValidValue(chartAttr.trtype, BLANK),\n      blType = getValidValue(chartAttr.bltype, BLANK),\n      brType = getValidValue(chartAttr.brtype, BLANK),\n      tlLabel,\n      trLabel,\n      blLabel,\n      brLabel,\n      tlTypeToolText = BLANK, // eslint-disable-line good-practices/no-single-usage-variable\n      trTypeToolText = BLANK, // eslint-disable-line good-practices/no-single-usage-variable\n      blTypeToolText = BLANK, // eslint-disable-line good-practices/no-single-usage-variable\n      brTypeToolText = BLANK, // eslint-disable-line good-practices/no-single-usage-variable\n      percentValue,\n      toolTextValue,\n      value,\n      minMaxArray,\n      minMaxArrayLen,\n      toolTipValue,\n      setDataDashed,\n      setDataPlotDashLen,\n      setDataPlotDashGap,\n      colorManager = chart.getFromEnv('colorManager'),\n      font,\n      fontColor,\n      fontSize,\n      fontWeight,\n      fontStyle;\n\n    font = chartConfig.style.inCanfontFamily;\n    fontSize = pInt(chartConfig.style.inCanfontSize, 10);\n    fontColor = chartConfig.style.inCancolor;\n    fontWeight = NORMAL;\n    fontStyle = NORMAL;\n\n    heatRange = maxValue - minValue; // eslint-disable-line good-practices/no-single-usage-variable\n    if (!conf.eventAttached) {\n      // listen to event fired by legends and decide what to do\n      dataSet.addExtEventListener('legendUpdate', function (e, d) {\n        if (d.component === 'legend') {\n          if (d.legendItem.hasState('hidden')) {\n            dataSet.show(d.legendItem, e);\n          } else {\n            dataSet.hide(d.legendItem, e);\n          }\n        } else {\n          minMaxArray = d.maxMinArray;\n          minMaxArrayLen = minMaxArray.length;\n          for (i = 0; i < minMaxArrayLen; i++) {\n            dataSet.updatePlot(minMaxArray[i].min, minMaxArray[i].max);\n          }\n        }\n      }, colorManager);\n      conf.eventAttached = true;\n    }\n\n    if (!useColorGradient || mapByCategory) {\n      conf.colorMap = [];\n      if (colorRange.color) {\n        for (i = 0; i < colorRange.color.length; i++) {\n          conf.colorMap[i] = {\n            config: colorRange.color[i],\n            dataSet: dataSet\n          };\n          conf.colorMap[i].config.visible = true;\n        }\n      }\n    }\n\n    for (i = 0; i < len; i++) {\n      setData = setDataArr && setDataArr[i];\n      dataObj = dataSet.components.data[i];\n      config = dataObj && dataObj.config;\n      setValue = config.setValue;\n      config.showValue = pluckNumber(setData.showvalue, conf.showValues);\n      config.setLink = pluck(setData.link);\n      config.toolTipValue = toolTipValue = numberFormatter.dataLabels(setValue, parentYAxis);\n      config.setDisplayValue = setDisplayValue = parseUnsafeString(setData.displayvalue);\n      config.displayValue = pluck(setDisplayValue, toolTipValue);\n      setDataDashed = pluckNumber(setData.dashed);\n      setDataPlotDashLen = pluckNumber(setData.dashlen, plotDashLen);\n      setDataPlotDashGap = plotDashGap = pluckNumber(setData.dashgap, plotDashGap);\n      config.plotBorderDashStyle = setDataDashed === 1\n        ? getDashStyle(setDataPlotDashLen, setDataPlotDashGap)\n        : (setDataDashed === 0 ? NONE : conf.plotBorderDashStyle);\n      /* @TODO-\n      * Heatmap percentage calculation is done for each dataset individually and shown for ease.\n      * But ideally percentage calculation must be done considering all the datasets.\n      * A heatmap group manager should query each dataset for their local min and max values and\n      * calculate overall range. Then, the group must inform all the dataset the range and the dataset must\n      * calculate the percentage values for each data and then draw itself.\n      */\n      if (mapByPercent) {\n        config.percentValue = percentValue = setData.value && (Math.round((setData.value -\n                                                minValue) / heatRange * 10000) / 100);\n      } else {\n        config.percentValue = UNDEF;\n      }\n\n      config.dataLabelStyle = dataSet._configureDataLabelStyle(setData);\n\n      config.value = value = (mapByCategory /* || !useColorGradient */)\n        ? (setData.colorrangelabel || setData.categoryid) : mapByPercent ? percentValue : config.setValue;\n      colorObj = colorManager.getColor(value);\n      config.colorRangeLabel = setData.colorrangelabel || colorObj.label;\n      dataObj.legendItemIndex = colorObj.seriesIndex;\n      config.legendItemId = colorObj.legendItemId;\n      colorObj && !colorObj.code && (colorObj.code = 'ffffff');\n      colorObj && colorObj.outOfRange && (colorObj.code = 'ffffff');\n\n      // alpha at data label > alpha at color object > plotfillalpha\n      config.plotFillAlpha = plotFillAlpha = pluckNumber(setData.alpha, colorObj && colorObj.oriAlpha, conf.plotFillAlpha);\n      plotColor = pluck(setData.color, (colorObj && colorObj.code));\n      if (setValue < 0 && !isRoundEdges) {\n        plotfillAngle = isBar ? 180 - plotfillAngle : 360 - plotfillAngle;\n      }\n      config.colorArr = getColumnColor(\n        plotColor + COMMA + conf.plotgradientcolor,\n        plotFillAlpha.toString(),\n        plotFillRatio,\n        plotfillAngle,\n        isRoundEdges,\n        plotBorderColor,\n        plotBorderAlpha.toString(),\n        (isBar ? 1 : 0),\n        (!!is3D)\n      );\n\n      config.visible = true;\n\n      config.color = convertColor(plotColor, config.plotFillAlpha);\n      config.rawPlotColor = plotColor;\n\n      // Parsing the hover effects only if showhovereffect is not 0.\n      if (showHoverEffect !== 0) {\n        hoverColor = pluck(setData.hovercolor, JSONData.hovercolor, chartAttr.plotfillhovercolor,\n          chartAttr.columnhovercolor, plotColor);\n        hoverAlpha = pluck(setData.hoveralpha, JSONData.hoveralpha,\n          chartAttr.plotfillhoveralpha, chartAttr.columnhoveralpha, '25');\n        hoverGradientColor = pluck(setData.hovergradientcolor,\n          JSONData.hovergradientcolor, chartAttr.plothovergradientcolor, !usePlotGradientColor && BLANKSTRING);\n        !hoverGradientColor && (hoverGradientColor = BLANKSTRING);\n        hoverRatio = pluck(setData.hoverratio,\n          JSONData.hoverratio, chartAttr.plothoverratio, plotFillRatio);\n        hoverAngle = pluckNumber(360 - setData.hoverangle,\n          360 - JSONData.hoverangle, 360 - chartAttr.plothoverangle, plotfillAngle);\n        hoverBorderColor = pluck(setData.borderhovercolor,\n          JSONData.borderhovercolor, chartAttr.plotborderhovercolor, plotBorderColor);\n        hoverBorderAlpha = pluck(setData.borderhoveralpha,\n          JSONData.borderhoveralpha, chartAttr.plotborderhoveralpha, plotBorderAlpha, plotFillAlpha);\n        hoverBorderThickness = pluckNumber(setData.borderhoverthickness,\n          JSONData.borderhoverthickness, chartAttr.plotborderhoverthickness, plotBorderThickness);\n        hoverBorderDashed = pluckNumber(setData.borderhoverdashed,\n          JSONData.borderhoverdashed, chartAttr.plotborderhoverdashed);\n        hoverBorderDashGap = pluckNumber(setData.borderhoverdashgap,\n          JSONData.borderhoverdashgap, chartAttr.plotborderhoverdashgap, plotDashLen);\n        hoverBorderDashLen = pluckNumber(setData.borderhoverdashlen,\n          JSONData.borderhoverdashlen, chartAttr.plotborderhoverdashlen, plotDashGap);\n        hoverDashStyle = hoverBorderDashed\n          ? getDashStyle(hoverBorderDashLen, hoverBorderDashGap)\n          : conf.plotBorderDashStyle;\n\n        /* If no hover effects are explicitly defined and\n                     * showHoverEffect is not 0 then hoverColor is set.\n                     */\n        if (showHoverEffect === 1 && hoverColor === plotColor) {\n          hoverColor = getLightColor(hoverColor, 70);\n        }\n\n        // setting the hover color array which is always applied except when showHoverEffect is not 0.\n        hoverColorArr = getColumnColor(\n          hoverColor,\n          hoverAlpha,\n          hoverRatio,\n          hoverAngle,\n          isRoundEdges,\n          hoverBorderColor,\n          hoverBorderAlpha.toString(),\n          (isBar ? 1 : 0),\n          (!!is3D)\n        );\n\n        config.setRolloutAttr = {\n          fill: toRaphaelColor(config.color),\n          stroke: (showplotborder && toRaphaelColor(config.colorArr[1])) || TRACKER_FILL,\n          'stroke-width': plotBorderThickness,\n          'stroke-dasharray': plotBorderDashStyle || []\n        };\n        config.setRolloverAttr = {\n          fill: toRaphaelColor(hoverColorArr[0]),\n          stroke: (showplotborder && toRaphaelColor(hoverColorArr[1])) || TRACKER_FILL,\n          'stroke-width': hoverBorderThickness,\n          'stroke-dasharray': hoverDashStyle\n        };\n      }\n\n      mapByPercent && (percentValue = numberFormatter.percentValue(percentValue));\n\n      config.setValue = setValue = numberFormatter.getCleanValue(setData.value);\n      config.toolTipValue = numberFormatter.dataLabels(setValue, parentYAxis);\n      formatedVal = config.toolTipValue;\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext,\n        JSONData.plottooltext, chartAttr.plottooltext), false));\n\n      config.tlLabel = tlLabel = parseUnsafeString(pluck(setData.tllabel, setData.ltlabel));\n      config.trLabel = trLabel = parseUnsafeString(pluck(setData.trlabel, setData.rtlabel));\n      config.blLabel = blLabel = parseUnsafeString(pluck(setData.bllabel, setData.lblabel));\n      config.brLabel = brLabel = parseUnsafeString(pluck(setData.brlabel, setData.rblabel));\n\n      config.tlLabelStyle = {\n        fontFamily: pluck(colorObj.tlLabelFont, chartAttr.tlfont, font),\n        fontSize: pluckNumber(colorObj.tlLabelFontSize, chartAttr.tlfontsize, fontSize) + PXSTRING,\n        color: convertColor(pluck(colorObj.tlLabelFontColor, chartAttr.tlfontcolor, fontColor), 100),\n        fontWeight: fontWeight,\n        fontStyle: fontStyle\n      };\n      setLineHeight(config.tlLabelStyle);\n      config.trLabelStyle = {\n        fontFamily: pluck(colorObj.trLabelFont, chartAttr.trfont, font),\n        fontSize: pluckNumber(colorObj.trLabelFontSize, chartAttr.trfontsize, fontSize) + PXSTRING,\n        color: convertColor(pluck(colorObj.trLabelFontColor, chartAttr.trfontcolor, fontColor), 100),\n        fontWeight: fontWeight,\n        fontStyle: fontStyle\n      };\n\n      config.brLabelStyle = {\n        fontFamily: pluck(colorObj.brLabelFont, chartAttr.brfont, font),\n        fontSize: pluckNumber(colorObj.brLabelFontSize, chartAttr.brfontsize, fontSize) + PXSTRING,\n        color: convertColor(pluck(colorObj.brLabelFontColor, chartAttr.brfontcolor, fontColor), 100),\n        fontWeight: fontWeight,\n        fontStyle: fontStyle\n      };\n\n      config.blLabelStyle = {\n        fontFamily: pluck(colorObj.blLabelFont, chartAttr.blfont, font),\n        fontSize: pluckNumber(colorObj.blLabelFontSize, chartAttr.blfontsize, fontSize) + PXSTRING,\n        color: convertColor(pluck(colorObj.blLabelFontColor, chartAttr.blfontcolor, fontColor), 100),\n        fontWeight: fontWeight,\n        fontStyle: fontStyle\n      };\n\n      setDisplayValue = getValidValue(parseUnsafeString(\n        setData.displayvalue));\n      toolTextValue = mapByCategory\n        ? setDisplayValue : pluck(setData.displayvalue, formatedVal);\n\n      config.displayValue = pluck(setDisplayValue, percentValue, config.toolTipValue);\n\n      if (tlType !== BLANK) {\n        tlTypeToolText = BOLDSTARTTAG + tlType + tooltipSepChar + BOLDENDTAG;\n      }\n      if (trType !== BLANK) {\n        trTypeToolText = BOLDSTARTTAG + trType + tooltipSepChar + BOLDENDTAG;\n      }\n      if (blType !== BLANK) {\n        blTypeToolText = BOLDSTARTTAG + blType + tooltipSepChar + BOLDENDTAG;\n      }\n      if (brType !== BLANK) {\n        brTypeToolText = BOLDSTARTTAG + brType + tooltipSepChar + BOLDENDTAG;\n      }\n      columnid = getFirstValue(setDataArr[i].columnid);\n      rowid = getFirstValue(setDataArr[i].rowid);\n      column = dataSet.getFromEnv('xAxis').getCategoryFromId(columnid.toLowerCase());\n      row = dataSet.getFromEnv('yAxis').getCategoryFromId(rowid.toLowerCase());\n\n      // create the tooltext\n      if (showTooltip) {\n        if (formatedVal === null) {\n          toolText = false;\n        } else if (setTooltext !== UNDEF) {\n          macroIndices = [1, 2, 5, 6, 7, 14, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116,\n            117];\n          parserConfig = {\n            formattedValue: formatedVal,\n            value: setData.value,\n            yaxisName: parseUnsafeString(chartAttr.yaxisname),\n            xaxisName: parseUnsafeString(chartAttr.xaxisname),\n            displayValue: setDisplayValue,\n            percentValue: mapByPercent ? percentValue : BLANK,\n            tlLabel: tlLabel,\n            trLabel: trLabel,\n            blLabel: blLabel,\n            brLabel: brLabel,\n            rowLabel: row.tickObj && row.tickObj.label,\n            columnLabel: column.tickObj && column.tickObj.label,\n            percentDataValue: mapByPercent ? percentValue : BLANK,\n            trtype: trType,\n            tltype: tlType,\n            brType: brType,\n            blType: blType,\n            colorRangeLabel: config.colorRangeLabel\n          };\n          toolText = parseTooltext(setTooltext, macroIndices,\n            parserConfig, setData, chartAttr, parserConfig);\n        } else {\n          toolText = ((mapByPercent ? BOLDSTARTTAG + 'Value' + tooltipSepChar + BOLDENDTAG +\n                            formatedVal +\n                            BREAKSTRING + BOLDSTARTTAG + 'Percentage' + tooltipSepChar + BOLDENDTAG +\n                            percentValue\n            : toolTextValue) +\n                        // Now we add special labels in toolTip\n                        (tlLabel !== BLANK ? BREAKSTRING +\n                            (tlTypeToolText + tlLabel) : BLANK) + (trLabel !== BLANK ? BREAKSTRING +\n                            trTypeToolText + trLabel : BLANK) + (blLabel !== BLANK ? BREAKSTRING +\n                            blTypeToolText + blLabel : BLANK) + (brLabel !== BLANK ? BREAKSTRING +\n                            brTypeToolText + brLabel : BLANK));\n        }\n      }\n      config.toolText = toolText;\n      config.setTooltext = toolText;\n    }\n  }\n  /**\n   * Hides the data objects according to the legend item\n   * @param {Object} item - legend item\n   */\n  hide (item) {\n    var dataset = this,\n      entityComponents = dataset.components.data,\n      colorRange = dataset.getFromEnv('chart').getChildren('colorRange')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      len,\n      config,\n      legendItemColor,\n      colorCode;\n\n    legendItemColor = item.config.datasetObj.code; // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (i = 0, len = entityComponents.length; i < len; i++) { // eslint-disable-line good-practices/no-single-usage-variable\n      if (!Object.keys(entityComponents[i]).length) {\n        continue;\n      }\n      colorCode = colorRange.getColorObj(entityComponents[i].config.value).code;\n      config = entityComponents[i].config;\n\n      if (legendItemColor === colorCode) {\n        entityComponents[i].graphics.element && dataset.getFromEnv('animationManager').setAnimation({\n          el: entityComponents[i].graphics.element,\n          attr: {\n            'fill-opacity': 0,\n            'stroke-width': 0\n          },\n          component: dataset\n        });\n\n        // animFlagHide = false;\n\n        entityComponents[i].graphics.hotElement && entityComponents[i].graphics.hotElement.hide();\n        config.visible = false;\n        entityComponents[i].visible = false;\n      }\n    }\n    item.setLegendState('hidden');\n  }\n  /**\n   * Shows the data objects according to the legend item\n   * @param {Object} item - legend item\n   */\n  show (item) {\n    var dataset = this,\n      entityComponents = dataset.components.data,\n      animationManager = dataset.getFromEnv('animationManager'),\n      config,\n      plotFillAlpha,\n      colorObj,\n      colorRange = dataset.getFromEnv('chart').getChildren('colorRange')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      len,\n      legendItemColor,\n      colorCode;\n\n    legendItemColor = item.config.datasetObj.code; // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (i = 0, len = entityComponents.length; i < len; i++) { // eslint-disable-line good-practices/no-single-usage-variable\n      if (!Object.keys(entityComponents[i]).length) {\n        continue;\n      }\n      config = entityComponents[i].config;\n      plotFillAlpha = config.plotFillAlpha / 100;\n      colorObj = colorRange.getColorObj(entityComponents[i].config.value);\n      //  do not set color for out of range values\n      colorCode = !colorObj.outOfRange && colorObj.code;\n\n      if (legendItemColor === colorCode) {\n        entityComponents[i].graphics.element && animationManager.setAnimation({\n          el: entityComponents[i].graphics.element,\n          attr: {\n            'visibility': visibleStr\n          },\n          component: dataset\n        });\n        entityComponents[i].graphics.element && animationManager.setAnimation({\n          el: entityComponents[i].graphics.element,\n          component: dataset,\n          attr: {\n            'fill-opacity': plotFillAlpha,\n            'stroke-width': dataset.config.plotBorderThickness\n          }\n        });\n\n        // animFlagShow = false;\n\n        entityComponents[i].graphics.hotElement &&\n                        entityComponents[i].graphics.hotElement.show();\n        entityComponents[i].graphics.valEle && entityComponents[i].graphics.valEle.show();\n\n        entityComponents[i].graphics.tlLabel && entityComponents[i].graphics.tlLabel.show();\n        entityComponents[i].graphics.trLabel && entityComponents[i].graphics.trLabel.show();\n        entityComponents[i].graphics.blLabel && entityComponents[i].graphics.blLabel.show();\n        entityComponents[i].graphics.brLabel && entityComponents[i].graphics.brLabel.show();\n        config.visible = true;\n        entityComponents[i].visible = true;\n      }\n    }\n    item && item.removeLegendState('hidden');\n  }\n  /**\n   * updates the plot range when gradient legend is moved\n   */\n  updatePlot (minValue, maxValue) {\n    var dataset = this,\n      animationManager = dataset.getFromEnv('animationManager'),\n      config,\n      plotFillAlpha,\n      entityComponents = dataset.components.data,\n      i,\n      len,\n      value;\n\n    for (i = 0, len = entityComponents.length; i < len; i++) { // eslint-disable-line good-practices/no-single-usage-variable\n      if (!Object.keys(entityComponents[i]).length) {\n        continue;\n      }\n      config = entityComponents[i].config;\n      plotFillAlpha = config.plotFillAlpha / 100;\n\n      value = entityComponents[i].config.value;\n\n      if (value < minValue || value > maxValue) {\n        if (config.visible) {\n          entityComponents[i].graphics.element && animationManager.setAnimation({\n            el: entityComponents[i].graphics.element,\n            attr: {\n              'fill-opacity': 0,\n              'stroke-width': 0\n            },\n            component: dataset\n          });\n          entityComponents[i].graphics.hotElement && entityComponents[i].graphics.hotElement.hide();\n          config.visible = false;\n          entityComponents[i].visible = false;\n        }\n      } else {\n        if (!config.visible) {\n          // entityComponents[i].graphics.element && animationManager.registerAnimation([{\n          //   animType: animType,\n          //   data: [{\n          //     el: entityComponents[i].graphics.element,\n          //     attrs: {\n          //       'fill-opacity': plotFillAlpha,\n          //       'stroke-width': conf.plotBorderThickness\n          //     }\n          //   }]\n          // }], 'plot');\n          entityComponents[i].graphics.element && animationManager.setAnimation({\n            el: entityComponents[i].graphics.element,\n            attr: {\n              'fill-opacity': plotFillAlpha,\n              'stroke-width': dataset.config.plotBorderThickness\n            },\n            callback: function () {\n              this.show();\n            },\n            component: dataset\n          });\n\n          entityComponents[i].graphics.hotElement &&\n                            entityComponents[i].graphics.hotElement.show();\n          entityComponents[i].graphics.valEle && entityComponents[i].graphics.valEle.show();\n\n          entityComponents[i].graphics.tlLabel && entityComponents[i].graphics.tlLabel.show();\n          entityComponents[i].graphics.trLabel && entityComponents[i].graphics.trLabel.show();\n          entityComponents[i].graphics.blLabel && entityComponents[i].graphics.blLabel.show();\n          entityComponents[i].graphics.brLabel && entityComponents[i].graphics.brLabel.show();\n          config.visible = true;\n          entityComponents[i].visible = true;\n        }\n      }\n    }\n  }\n\n  _checkPointObj (pX, pY, chartX, chartY) {\n    var dataset = this,\n      plotGrid = dataset.components.plotGrid,\n      pointObj,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      viewPortConfig = chartConfig.viewPortConfig,\n      plotBorderThickness = chartConfig.plotborderthickness,\n      halfPlotBorderThickness,\n      dx,\n      dy,\n      hovered;\n\n    pointObj = plotGrid[pY] && plotGrid[pY][pX];\n    plotBorderThickness = chartConfig.showplotborder ? plotBorderThickness : 0;\n    halfPlotBorderThickness = plotBorderThickness / 2;\n\n    halfPlotBorderThickness = halfPlotBorderThickness % 2 === 0 ? halfPlotBorderThickness + 1\n      : Math.round(halfPlotBorderThickness);\n\n    if (pointObj && pointObj.config && pointObj.config.visible) {\n      dx = chartX - (pointObj._xPos - viewPortConfig.x * viewPortConfig.scaleX) + halfPlotBorderThickness;\n      dy = chartY - pointObj._yPos + halfPlotBorderThickness;\n\n      hovered = dx >= 0 && dx <= pointObj._width + plotBorderThickness && dy >= 0 &&\n                    dy <= pointObj._height + plotBorderThickness;\n\n      if (hovered) {\n        return {\n          pointIndex: pointObj._index,\n          hovered: hovered,\n          pointObj: pointObj\n        };\n      }\n    }\n  }\n  /**\n   *  function to return the hovered data object\n   */\n  _getHoveredPlot (chartXVal, chartYVal) {\n    var dataset = this,\n      chartX = chartXVal,\n      chartY = chartYVal,\n      xAxis = dataset.getFromEnv('xAxis'),\n      yAxis = dataset.getFromEnv('yAxis'),\n      height = dataset.getFromEnv('chartConfig').canvasHeight / dataset.getFromEnv('totalRows'), // eslint-disable-line good-practices/no-single-usage-variable\n      x,\n      y,\n      pX,\n      pY;\n    chartX += xAxis.getTranslation();\n    chartY += yAxis.getTranslation();\n    y = yAxis.getValue(chartY + height / 2);\n    pY = Math.floor(y);\n\n    x = xAxis.getValue(chartX);\n    pX = Math.round(x);\n\n    if (pX - x > 0) {\n      return (y - pY > 0.5) ? (dataset._checkPointObj(pX, pY, chartX, chartY) ||\n                 dataset._checkPointObj(pX - 1, pY, chartX, chartY))\n        : (dataset._checkPointObj(pX, pY - 1, chartX, chartY) ||\n                    dataset._checkPointObj(pX, pY, chartX, chartY));\n    }\n    return (y - pY > 0.5) ? (dataset._checkPointObj(pX + 1, pY, chartX, chartY) ||\n                    dataset._checkPointObj(pX, pY, chartX, chartY))\n      : (dataset._checkPointObj(pX, pY - 1, chartX, chartY) ||\n                    dataset._checkPointObj(pX + 1, pY, chartX, chartY) ||\n                    dataset._checkPointObj(pX, pY, chartX, chartY));\n  }\n\n  /**\n   * Parses the plot attributes\n   *\n   * @param {any} dataObj\n   * @param {any} index\n   * @returns {any}\n   * @memberof HeatMapDataset\n   */\n  parsePlotAttributes (dataObj, index) {\n    var dataSet = this,\n      conf = dataSet.config,\n      setDataArr = dataSet.config.JSONData.data,\n      attr,\n      i = index,\n      chart = dataSet.getFromEnv('chart'),\n      xAxis = dataSet.getFromEnv('xAxis'),\n      yAxis = dataSet.getFromEnv('yAxis'),\n      xPos,\n      yPos,\n      chartConfig = dataSet.getFromEnv('chartConfig'),\n      columnWidth,\n      height,\n      toolText,\n      setLink,\n      setValue,\n      config,\n      plotBorderThickness = conf.plotBorderThickness,\n      plotRadius = conf.plotRadius,\n      colorArr,\n      plotBorderDashStyle,\n      legendActive = chart.getFromEnv('legend') && chart.getFromEnv('legend').config.isActive,\n      plotGrid = dataSet.components.plotGrid, // eslint-disable-line good-practices/no-single-usage-variable\n      width,\n      column,\n      row,\n      columnid,\n      rowid,\n      trackerConfig;\n\n    yAxis.yBasePos = yAxis.getPixel(yAxis.getAxisBase());\n    if (!dataObj || !Object.keys(dataObj).length) {\n      return;\n    }\n    width = chartConfig.canvasWidth / dataSet.getFromEnv('totalColumns');\n    height = chartConfig.canvasHeight / dataSet.getFromEnv('totalRows');\n\n    trackerConfig = dataObj.trackerConfig = {};\n    config = dataObj && dataObj.config;\n    setValue = config.setValue;\n    columnid = getFirstValue(setDataArr[i].columnid);\n    rowid = getFirstValue(setDataArr[i].rowid);\n    column = xAxis.getCategoryFromId(columnid.toLowerCase());\n    row = yAxis.getCategoryFromId(rowid.toLowerCase());\n    if ((column.index !== 0 && !column.index) || (row.index !== 0 && !row.index)) {\n      return;\n    }\n    if (!conf.mapByCategory && setValue === null) {\n      return;\n    }\n\n    setLink = config.setLink;\n    colorArr = config.colorArr;\n\n    // Creating the data structure if not present for storing the graphics elements.\n    if (!dataObj.graphics) {\n      dataSet.components.data[i].graphics = {};\n    }\n\n    xPos = xAxis.getPixel(column.index) - width / 2;\n\n    yPos = yAxis.getPixel(row.index) - height / 2;\n\n    columnWidth = width;\n\n    // Setting the final tooltext.\n    toolText = config.toolText;\n\n    // Setting the event arguments.\n    trackerConfig.eventArgs = {\n      index: i,\n      link: setLink,\n      value: config.percentValue || setValue,\n      displayValue: config.displayValue,\n      columnId: column.tickObj.id,\n      rowId: row.tickObj.id,\n      tlLabel: config.tlLabel,\n      trLabel: config.trLabel,\n      blLabel: config.blLabel,\n      brLabel: config.brLabel,\n      colorRangeLabel: config.colorRangeLabel,\n      color: config.rawPlotColor,\n      alpha: config.plotFillAlpha,\n      showValue: config.showValue,\n      // categoryLabel: categories[i].label,\n      toolText: !toolText ? '' : toolText,\n      id: BLANKSTRING,\n      datasetIndex: legendActive ? dataObj.datasetIndex : UNDEF,\n      datasetName: legendActive ? dataObj.datasetName : UNDEF,\n      visible: dataSet.getState('visible')\n    };\n\n    // Setting the attributes for plot drawing.\n    attr = {\n      x: xPos,\n      y: yPos,\n      width: columnWidth,\n      height: height || 1,\n      r: plotRadius,\n      fill: config.color,\n      stroke: toRaphaelColor(colorArr[1]),\n      'stroke-width': plotBorderThickness,\n      'stroke-dasharray': plotBorderDashStyle,\n      'fill-opacity': config.plotFillAlpha / 100,\n      'stroke-linejoin': miterStr,\n      'visibility': config.visible ? visibleStr : hiddenStr,\n      cursor: setLink ? POINTER : BLANKSTRING\n    };\n\n    // todo- remove _ to make it public\n    dataObj._xPos = xPos;\n    dataObj._yPos = yPos;\n    dataObj._height = height;\n    dataObj._width = columnWidth;\n    dataObj._index = i;\n    plotGrid[row.index][column.index] = dataObj;\n    /*\n    * If the data plots are not present then they are created, else only attributes are set for the\n    * existing plots.\n    */\n    if (!dataObj.graphics.element) {\n      attr['fill-opacity'] = config.plotFillAlpha / 100;\n      attr['stroke-width'] = plotBorderThickness;\n    } else {\n      attr = {\n        x: xPos,\n        y: yPos,\n        width: columnWidth,\n        height: height || 1\n      };\n      attr.fill = config.color;\n      attr.stroke = toRaphaelColor(colorArr[1]);\n      attr['fill-opacity'] = config.visible ? config.plotFillAlpha / 100 : 0;\n      attr['stroke-width'] = config.visible ? plotBorderThickness : 0;\n      attr['stroke-dasharray'] = plotBorderDashStyle;\n      attr['stroke-linejoin'] = miterStr;\n      attr.visibility = config.visible ? visibleStr : hiddenStr;\n      attr.cursor = setLink ? POINTER : BLANKSTRING;\n    }\n\n    if (setLink || chartConfig.showtooltip) {\n      // Fix for touch devices.\n      if (height < HTP) {\n        yPos -= (HTP - height) / 2;\n        height = HTP;\n      }\n\n      // Setting attributes for the tooltip.\n      trackerConfig.attr = {\n        x: xPos,\n        y: yPos,\n        width: columnWidth,\n        height: height,\n        r: plotRadius,\n        cursor: setLink ? POINTER : BLANKSTRING,\n        stroke: TRACKER_FILL,\n        'stroke-width': plotBorderThickness,\n        fill: TRACKER_FILL,\n        'visibility': config.visible ? visibleStr : hiddenStr\n      };\n    }\n\n    config.props = {\n      element: {\n        attr: attr\n      }\n    };\n  }\n\n  /**\n   * Parses and allocate plot cosmetics and position\n   *\n   * @memberof HeatMapDataset\n   */\n  allocatePosition () {\n    var dataSet = this,\n      setDataArr = dataSet.config.JSONData.data,\n      len,\n      i,\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj;\n\n    len = setDataArr && setDataArr.length; // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      dataSet.parsePlotAttributes(dataObj, i);\n      // dataSet.parseLabelAttributes(dataObj, i);\n    }\n  }\n  /**\n   * draws the plot according to the configuration\n   */\n  drawPlots () {\n    var dataSet = this,\n      conf = dataSet.config,\n      setDataArr = dataSet.config.JSONData.data,\n      len,\n      i,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      crispBox,\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      setElement,\n      setValue,\n      config,\n      state,\n      column,\n      row,\n      columnid,\n      rowid,\n      elemIdStore = [], // eslint-disable-line good-practices/no-single-usage-variable\n      elemId,\n      removeDataArrLen = (dataSet.components.removeDataArr || []).length, // eslint-disable-line good-practices/no-single-usage-variable\n      trackerConfig;\n\n    len = setDataArr && setDataArr.length; // eslint-disable-line good-practices/no-single-usage-variable\n\n    // Create plot elements.\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      trackerConfig = dataObj.trackerConfig;\n      config = dataObj && dataObj.config;\n      if (!dataObj.graphics) {\n        continue;\n      }\n      state = !dataObj.graphics.element ? 'appearing' : dataSet.getState('visible') ? 'updating' : 'hiding';\n      setValue = config.setValue;\n      columnid = getFirstValue(setDataArr[i].columnid);\n      rowid = getFirstValue(setDataArr[i].rowid);\n      column = dataSet.getFromEnv('xAxis').getCategoryFromId(columnid.toLowerCase());\n      row = dataSet.getFromEnv('yAxis').getCategoryFromId(rowid.toLowerCase());\n      if ((column.index !== 0 && !column.index) || (row.index !== 0 && !row.index)) {\n        dataObj.graphics.element = dataObj.graphics.element && animationManager.setAnimation({\n          el: dataObj.graphics.element,\n          component: dataSet\n        });\n        continue;\n      }\n\n      if ((!column.tickObj || !row.tickObj || (config.value === BLANKSTRING)) && dataObj.graphics) {\n        dataObj.graphics.element = dataObj.graphics.element && animationManager.setAnimation({\n          el: dataObj.graphics.element,\n          component: dataSet\n        });\n      }\n\n      if (!conf.mapByCategory && setValue === null && dataObj.graphics) {\n        dataObj.graphics.element && dataObj.graphics.element.hide();\n        dataObj.graphics.hotElement && dataObj.graphics.hotElement.hide();\n        continue;\n      }\n\n      elemId = column.index.toString() + row.index.toString();\n\n      elemIdStore.push(elemId);\n\n      /*\n      * If the data plots are not present then they are created, else only attributes are set for the\n      * existing plots.\n      */\n      if (!dataObj.graphics.element) {\n        setElement = dataObj.graphics.element = animationManager.setAnimation({\n          el: 'rect',\n          component: dataSet,\n          attr: config.props.element.attr,\n          label: 'rect',\n          container: dataSet.getContainer('plotGroup')\n        });\n\n        config.elemCreated = true;\n      } else {\n        setElement = dataObj.graphics.element;\n        config.elemCreated = false;\n\n        animationManager.setAnimation({\n          el: setElement,\n          state: state,\n          attr: config.props.element.attr,\n          component: dataSet\n        });\n      }\n\n      // The shadow element is set for the dataplots.\n      setElement\n        .shadow({ opacity: conf.showShadow }, dataSet.getContainer('shadowGroup'))\n        .data('BBox', crispBox);\n\n      dataSet.getFromEnv('chartConfig').enablemousetracking && setElement\n        .data(EVENTARGS, trackerConfig.eventArgs)\n        .data(showHoverEffectStr, conf.showHoverEffect)\n        .data(SETROLLOVERATTR, config.setRolloverAttr || {})\n        .data(SETROLLOUTATTR, config.setRolloutAttr || {});\n    }\n\n    dataSet.drawn ? dataSet.drawLabel() : (dataSet.addJob('labelJob', dataSet.drawLabel.bind(dataSet),\n      priorityList.label));\n    dataSet.drawn = true;\n\n    removeDataArrLen && dataSet.removeDataElems();\n  }\n  /**\n   * Draws the data labels if any\n   */\n  drawLabel () {\n    var dataSet = this,\n      chartConf = dataSet.getFromEnv('chartConfig'),\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      style = chartConf.dataLabelStyle,\n      conf = dataSet.config,\n      len = (dataSet.config.JSONData.data || []).length, // eslint-disable-line good-practices/no-single-usage-variable\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      i,\n      displayValue,\n      graphic,\n      textY,\n      textX,\n      yPos,\n      xPos,\n      attr,\n      dataLabelContainer = dataSet.getContainer('labelGroup'),\n\n      tlLabelContainer = dataSet.graphics.tlLabelContainer,\n      blLabelContainer = dataSet.graphics.blLabelContainer,\n      trLabelContainer = dataSet.graphics.trLabelContainer,\n      brLabelContainer = dataSet.graphics.brLabelContainer,\n      plotLabelStyle,\n      tlStyle,\n      trStyle,\n      blStyle,\n      brStyle,\n      graphicEle,\n      pointW,\n      pointH,\n      pointX,\n      pointY,\n      smartTextObj,\n      tlLabel,\n      trLabel,\n      blLabel,\n      brLabel,\n      isTLLabel,\n      isTRLabel,\n      isBLLabel,\n      isBRLabel,\n      maxWidth,\n      maxHeight,\n      config,\n      setValue,\n      tlLabelCss,\n      trLabelCss,\n      blLabelCss,\n      brLabelCss;\n\n    animationManager.setAnimation({\n      el: dataLabelContainer,\n      attr: {\n        opacity: 1\n      },\n      component: dataSet,\n      label: 'text'\n    });\n\n    if (!tlLabelContainer) {\n      tlLabelContainer = dataSet.graphics.tlLabelContainer =\n                    createGroup({ name: tlLabelStr }, dataLabelContainer, dataSet);\n    }\n\n    if (!blLabelContainer) {\n      blLabelContainer = dataSet.graphics.blLabelContainer =\n                    createGroup({ name: blLabelStr }, dataLabelContainer, dataSet);\n    }\n\n    if (!trLabelContainer) {\n      trLabelContainer = dataSet.graphics.trLabelContainer =\n                    createGroup({ name: trLabelStr }, dataLabelContainer, dataSet);\n    }\n\n    if (!brLabelContainer) {\n      brLabelContainer = dataSet.graphics.brLabelContainer =\n                    createGroup({ name: brLabelStr }, dataLabelContainer, dataSet);\n    }\n\n    smartLabel.useEllipsesOnOverflow(chartConf.useEllipsesWhenOverflow);\n    smartLabel.setStyle(style);\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      // Condition arises when user has removed data in real time update\n      if (dataObj === UNDEF) {\n        continue;\n      }\n      graphic = dataObj.graphics;\n      // Condition arises when feedData enters less number of data in a dataset compared to the other.\n      if (!graphic) {\n        continue;\n      }\n\n      config = dataObj && dataObj.config;\n      setValue = config.setValue;\n\n      if (!conf.mapByCategory && setValue === null) {\n        dataSet.removeLabels(dataObj);\n        continue;\n      }\n\n      displayValue = config.displayValue;\n\n      graphicEle = dataObj.graphics.element;\n\n      pointW = dataObj._width;\n      pointH = dataObj._height;\n      pointX = dataObj._xPos;\n      pointY = dataObj._yPos;\n\n      // Setting style for smartLabel\n      smartLabel.setStyle(style);\n      // Get the displayValue text from smartlabel\n      smartTextObj = smartLabel.getSmartText(displayValue,\n        pointW, pointH, false);\n      displayValue = smartTextObj.text;\n\n      plotLabelStyle = config.dataLabelStyle;\n\n      // Drawing of displayValue\n      if (defined(displayValue) && displayValue !== BLANK && config.showValue) {\n        textY = pointY + (pointH * 0.5);\n        textX = pointX + (pointW * 0.5);\n\n        attr = {\n          text: displayValue,\n          title: (smartTextObj.tooltext || BLANKSTRING),\n          visibility: config.visible ? visibleStr : hiddenStr,\n          fill: plotLabelStyle.color,\n          direction: config.textDirection,\n          x: textX,\n          y: textY,\n          cursor: config.setLink ? POINTER : BLANKSTRING,\n          'text-bound': [plotLabelStyle.backgroundColor, plotLabelStyle.borderColor,\n            style.borderThickness, style.borderPadding,\n            style.borderRadius, style.borderDash\n          ]\n        };\n\n        if (graphicEle) {\n          dataObj.graphics.valEle = animationManager.setAnimation({\n            el: dataObj.graphics.valEle || 'text',\n            container: dataLabelContainer,\n            component: dataSet,\n            label: 'text',\n            attr: attr\n          });\n          dataObj.graphics.valEle.outlineText(conf.showTextOutLine, attr.fill);\n        } else {\n          if (dataObj.graphics.valEle) {\n            dataObj.graphics.valEle = animationManager.setAnimation({\n              el: dataObj.graphics.valEle,\n              component: dataSet\n            });\n          }\n        }\n\n        tlLabel = config.tlLabel;\n        trLabel = config.trLabel;\n        blLabel = config.blLabel;\n        brLabel = config.brLabel;\n\n        tlStyle = config.tlLabelStyle;\n        trStyle = config.trLabelStyle;\n        blStyle = config.blLabelStyle;\n        brStyle = config.brLabelStyle;\n\n        isTLLabel = (defined(tlLabel) &&\n                        tlLabel !== BLANK);\n        isTRLabel = (defined(trLabel) &&\n                        trLabel !== BLANK);\n        isBLLabel = (defined(blLabel) &&\n                        blLabel !== BLANK);\n        isBRLabel = (defined(brLabel) &&\n                        brLabel !== BLANK);\n\n        maxWidth = pointW * (isTLLabel && isTRLabel\n          ? POINT_FIVE : MAX_PERCENT_SPACE);\n        maxHeight = (pointH - ((smartTextObj && smartTextObj.height) || 0)) * 0.5;\n        // For top labels\n        yPos = pointY + GUTTER_4;\n\n        if (isTLLabel) {\n          // Setting style for smartLabel\n          smartLabel.setStyle(tlStyle);\n          smartTextObj = smartLabel.getSmartText(tlLabel,\n            maxWidth, maxHeight, false);\n          displayValue = smartTextObj.text;\n          // Get the x and y position of the dataValue\n          xPos = pointX;\n          attr = {\n            text: displayValue,\n            title: (smartTextObj.tooltext || BLANKSTRING),\n            visibility: config.visible ? visibleStr : hiddenStr,\n            fill: tlStyle.color,\n            'font-family': tlStyle.fontFamily,\n            'font-weight': tlStyle.fontWeight,\n            'line-height': tlStyle.lineHeight,\n            'font-size': tlStyle.fontSize,\n            'text-anchor': POSITION_START,\n            'vertical-align': POSITION_TOP,\n            direction: config.textDirection,\n            x: xPos + GUTTER_4,\n            y: yPos,\n            'text-bound': [tlStyle.backgroundColor, tlStyle.borderColor,\n              tlStyle.borderThickness, tlStyle.borderPadding,\n              tlStyle.borderRadius, tlStyle.borderDash]\n          };\n          tlLabelCss = Object.assign(attr, tlStyle);\n          dataObj.graphics.tlLabel = animationManager.setAnimation({\n            el: dataObj.graphics.tlLabel || 'text',\n            component: dataSet,\n            attr: tlLabelCss,\n            container: tlLabelContainer\n          });\n          dataObj.graphics.tlLabel.outlineText(conf.showTextOutLine, tlLabelCss.fill);\n        } else {\n          if (dataObj.graphics.tlLabel) {\n            dataObj.graphics.tlLabel = animationManager.setAnimation({\n              el: dataObj.graphics.tlLabel,\n              component: dataSet\n            });\n          }\n        }\n\n        if (isTRLabel) {\n          // Setting style for smartRabel\n          smartLabel.setStyle(trStyle);\n          smartTextObj = smartLabel.getSmartText(trLabel,\n            maxWidth, maxHeight, false);\n          displayValue = smartTextObj.text;\n          // Get the x and y position of the dataValue\n          xPos = pointX + pointW;\n          attr = {\n            text: displayValue,\n            title: (smartTextObj.tooltext || BLANKSTRING),\n            visibility: config.visible ? visibleStr : hiddenStr,\n            fill: trStyle.color,\n            'font-family': trStyle.fontFamily,\n            'font-weight': trStyle.fontWeight,\n            'line-height': trStyle.lineHeight,\n            'font-size': trStyle.fontSize,\n            'text-anchor': POSITION_END,\n            'vertical-align': POSITION_TOP,\n            direction: config.textDirection,\n            x: xPos - GUTTER_4,\n            y: yPos,\n            'text-bound': [trStyle.backgroundColor, trStyle.borderColor,\n              trStyle.borderThickness, trStyle.borderPadding,\n              trStyle.borderRadius, trStyle.borderDash]\n          };\n          trLabelCss = Object.assign(attr, trStyle);\n          dataObj.graphics.trLabel = animationManager.setAnimation({\n            el: dataObj.graphics.trLabel || 'text',\n            attr: trLabelCss,\n            container: trLabelContainer,\n            component: dataSet\n          });\n          dataObj.graphics.trLabel.outlineText(conf.showTextOutLine, trLabelCss.fill);\n        } else {\n          if (dataObj.graphics.trLabel) {\n            dataObj.graphics.trLabel = animationManager.setAnimation({\n              el: dataObj.graphics.trLabel,\n              component: dataSet\n            });\n          }\n        }\n\n        // For top labels\n        yPos = (pointY + pointH) - GUTTER_4;\n\n        if (isBLLabel) {\n          // Setting style for smartLabel\n          smartLabel.setStyle(blStyle);\n          smartTextObj = smartLabel.getSmartText(blLabel,\n            maxWidth, maxHeight, false);\n          displayValue = smartTextObj.text;\n          // Get the x and y position of the dataValue\n          xPos = pointX;\n          attr = {\n            text: displayValue,\n            title: (smartTextObj.tooltext || BLANKSTRING),\n            visibility: config.visible ? visibleStr : hiddenStr,\n            fill: blStyle.color,\n            'font-family': blStyle.fontFamily,\n            'font-weight': blStyle.fontWeight,\n            'line-height': blStyle.lineHeight,\n            'font-size': blStyle.fontSize,\n            'text-anchor': POSITION_START,\n            'vertical-align': POSITION_BOTTOM,\n            direction: config.textDirection,\n            x: xPos + GUTTER_4,\n            y: yPos,\n            'text-bound': [blStyle.backgroundColor, blStyle.borderColor,\n              blStyle.borderThickness, blStyle.borderPadding,\n              blStyle.borderRadius, blStyle.borderDash]\n          };\n          blLabelCss = Object.assign(attr, blStyle);\n          dataObj.graphics.blLabel = animationManager.setAnimation({\n            el: dataObj.graphics.blLabel || 'text',\n            component: dataSet,\n            container: blLabelContainer,\n            attr: blLabelCss\n          });\n          dataObj.graphics.blLabel.outlineText(conf.showTextOutLine, blLabelCss.fill);\n        } else {\n          if (dataObj.graphics.blLabel) {\n            dataObj.graphics.blLabel = animationManager.setAnimation({\n              el: dataObj.graphics.blLabel,\n              component: dataSet\n            });\n          }\n        }\n\n        if (isBRLabel) {\n          // Setting style for smartRabel\n          smartLabel.setStyle(blStyle);\n          smartTextObj = smartLabel.getSmartText(brLabel,\n            maxWidth, maxHeight, false);\n          displayValue = smartTextObj.text;\n          // Get the x and y position of the dataValue\n          xPos = pointX + pointW - GUTTER_4;\n          attr = {\n            text: displayValue,\n            title: (smartTextObj.tooltext || BLANKSTRING),\n            visibility: config.visible ? visibleStr : hiddenStr,\n            fill: brStyle.color,\n            'font-family': brStyle.fontFamily,\n            'font-weight': brStyle.fontWeight,\n            'line-height': brStyle.lineHeight,\n            'font-size': brStyle.fontSize,\n            'text-anchor': POSITION_END,\n            'vertical-align': POSITION_BOTTOM,\n            direction: config.textDirection,\n            x: xPos,\n            y: yPos,\n            'text-bound': [brStyle.backgroundColor, brStyle.borderColor,\n              brStyle.borderThickness, brStyle.borderPadding,\n              brStyle.borderRadius, brStyle.borderDash]\n          };\n          brLabelCss = Object.assign(attr, brStyle);\n          dataObj.graphics.brLabel = animationManager.setAnimation({\n            el: dataObj.graphics.brLabel || 'text',\n            attr: brLabelCss,\n            container: brLabelContainer,\n            component: dataSet\n          });\n          dataObj.graphics.brLabel.outlineText(conf.showTextOutLine, brLabelCss.fill);\n        } else {\n          if (dataObj.graphics.brLabel) {\n            dataObj.graphics.brLabel = animationManager.setAnimation({\n              el: dataObj.graphics.brLabel,\n              component: dataSet\n            });\n          }\n        }\n      } else {\n        dataSet.removeLabels(dataObj);\n      }\n    }\n\n    dataSet.labelDrawn = true;\n  }\n\n  removeLabels (dataObj) {\n    let dataSet = this,\n      animationManager = dataSet.getFromEnv('animationManager');\n\n    if (dataObj.graphics.valEle) {\n      dataObj.graphics.valEle = animationManager.setAnimation({\n        el: dataObj.graphics.valEle,\n        component: dataSet\n      });\n    }\n\n    if (dataObj.graphics.tlLabel) {\n      dataObj.graphics.tlLabel = animationManager.setAnimation({\n        el: dataObj.graphics.tlLabel,\n        component: dataSet\n      });\n    }\n\n    if (dataObj.graphics.trLabel) {\n      dataObj.graphics.trLabel = animationManager.setAnimation({\n        el: dataObj.graphics.trLabel,\n        component: dataSet\n      });\n    }\n\n    if (dataObj.graphics.blLabel) {\n      dataObj.graphics.blLabel = animationManager.setAnimation({\n        el: dataObj.graphics.blLabel,\n        component: dataSet\n      });\n    }\n\n    if (dataObj.graphics.brLabel) {\n      dataObj.graphics.brLabel = animationManager.setAnimation({\n        el: dataObj.graphics.brLabel,\n        component: dataSet\n      });\n    }\n  }\n  /**\n   * Function to remove data elements\n   */\n  removeDataElems () {\n    var dataSet = this,\n      components = dataSet.components,\n      removeDataArr = components.removeDataArr,\n      pool = components.pool || (components.pool = {\n        element: [],\n        hotElement: [],\n        label: []\n      }),\n      len = removeDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removeData,\n      ele,\n      graphics,\n      i;\n\n    for (i = 0; i < len; i++) {\n      removeData = removeDataArr[0];\n      removeDataArr.splice(0, 1);\n      // In case of non existing data plot continue;\n      if (!removeData || !removeData.graphics) {\n        continue;\n      }\n\n      graphics = removeData.graphics;\n      for (ele in graphics) {\n        // Stopping any previous animation.\n        if (graphics[ele]) {\n          graphics[ele] = dataSet.getFromEnv('animationManager').setAnimation({\n            el: graphics[ele],\n            component: dataSet\n          });\n        }\n      }\n\n      // Storing the graphic elements for reuse.\n      removeData.graphics.element && (pool.element = pool.element.concat(removeData.graphics.element));\n      removeData.graphics.hotElement && (pool.hotElement = pool.hotElement.concat(removeData.graphics\n        .hotElement));\n      removeData.graphics.label && (pool.label = pool.label.concat(removeData.graphics.label));\n    }\n    components.pool = pool;\n  }\n  /**\n   * @returns {number} axis value padding\n   */\n  getAxisValuePadding () {\n    return this.config.defaultPadding;\n  }\n\n  /**\n   * Function to get the maximum and minimum from dataset\n   * @return {Object}     contains max, min value\n   */\n  getDataLimits () {\n    var dataSet = this,\n      dataStore = dataSet.components.data,\n      conf = dataSet.config,\n      i,\n      config,\n      len = dataStore.length, // eslint-disable-line good-practices/no-single-usage-variable\n      setValue,\n      maxValue = -Infinity,\n      minValue = +Infinity;\n\n    for (i = 0; i < len; i++) {\n      if (!dataStore[i] || !Object.keys(dataStore[i]).length) {\n        continue;\n      }\n      config = dataStore[i].config;\n      setValue = config.setValue;\n      if (setValue !== UNDEF && setValue !== null) {\n        maxValue = mathMax(maxValue, setValue);\n        minValue = mathMin(minValue, setValue);\n      }\n    }\n\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n    return {\n      max: conf.maxValue,\n      min: conf.minValue\n    };\n  }\n  /**\n   * function to Remove data plots if the number of current data plots/categories\n   * is more than the existing ones.\n   * @param  {Object} datasetJSON JSON for dataset configurations\n   */\n  trimData (datasetJSON) {\n    if (!this.config.JSONData) {\n      return;\n    }\n    let dataSet = this,\n      config = dataSet.config,\n      context = config && config.context,\n      prevCatlen = context && context.prevCatlen, // eslint-disable-line good-practices/no-single-usage-variable\n      currCatLen = dataSet.getFromEnv('xAxis').getTicksLen(),\n      catDiff = prevCatlen - currCatLen,\n      prevData = config.JSONData,\n      prevDataLength = prevData.data && prevData.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      currDataLength = (datasetJSON.data && datasetJSON.data.length) || 0,\n      dataDiff = prevDataLength - currDataLength,\n      diff,\n      startIndex;\n\n    if (catDiff > dataDiff) {\n      diff = catDiff;\n      startIndex = currCatLen;\n    } else {\n      diff = dataDiff;\n      startIndex = currDataLength;\n    }\n\n    // Removing data plots if the number of current data plots/categories\n    // is more than the existing ones.\n    if (diff > 0) {\n      this.removeData(startIndex, diff, false);\n    }\n  }\n  /**\n   * Function for drawing 2D columns.\n   * This function is called every time for each dataset when they are initially drawn or shown/hidden from\n   * the drawGraph() function.\n   */\n  draw () {\n    var dataSet = this,\n      xAxis = dataSet.getFromEnv('xAxis'),\n      groupMaxWidth = dataSet.getFromEnv('groupMaxWidth');\n\n    if (!groupMaxWidth) {\n      groupMaxWidth = mathAbs(xAxis.getPixel(1) - xAxis.getPixel(0));\n      dataSet.addToEnv('groupMaxWidth', groupMaxWidth);\n    }\n\n    !dataSet.config.drawn && dataSet.createContainer();\n\n    if (!xAxis.getState('scrolling')) {\n      dataSet.createCoordinates();\n    }\n\n    // Draw all the graphic elements\n    dataSet.drawPlots();\n    // dataSet.updatePlot(conf.minValue, conf.maxValue);\n  }\n  createContainer () {\n    var dataset = this,\n      parent = dataset.getLinkedParent(),\n      group = (dataset.groupName || dataset.dsGroup || dataset.getType()),\n      parentContainer,\n      parentShadowContainer;\n\n    !parent.getChildContainer(group + 'VcanvasGroup') && (group = 'default');\n    parentContainer = parent.getChildContainer(group + 'VcanvasGroup');\n    parentShadowContainer = parent.getChildContainer(group + 'ShadowVcanvasGroup');\n\n    !dataset.getContainer('shadowGroup') && dataset.addContainer('shadowGroup',\n      createGroup({ name: 'shadow-group' }, parentShadowContainer, dataset));\n\n    !dataset.getContainer('errorShadowGroup') && dataset.addContainer('errorShadowGroup',\n      createGroup({ name: 'error-shadow-group' }, parentShadowContainer, dataset));\n\n    !dataset.getContainer('commonElemsGroup') && dataset.addContainer('commonElemsGroup',\n      createGroup({ name: 'common-elems-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('plotGroup') && dataset.addContainer('plotGroup',\n      createGroup({ name: 'plot-group' }, parentContainer, dataset));\n\n    !dataset.getContainer('errorPlotGroup') && dataset.addContainer('errorPlotGroup',\n      createGroup({ name: 'error-plot-group' }, parentContainer, dataset));\n    (dataset.getFromEnv('chart').hasAnchor) && dataset.getContainer('errorPlotGroup').insertBefore(dataset.getContainer('plotGroup'));\n    !dataset.getContainer('labelGroup') && dataset.addContainer('labelGroup',\n      createGroup({\n        name: 'label-group',\n        'class': 'fusioncharts-datalabels'\n      }, parent.getChildContainer('vcanvasLabelGroup'), dataset));\n  }\n  /**\n   * Create pixel coordinates for the plots\n   */\n  createCoordinates () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      isBar = chart.isBar,\n      yAxis = dataSet.getFromEnv('yAxis'),\n      xAxis = dataSet.getFromEnv('xAxis'),\n      yBasePos = yAxis.getPixel(yAxis.getAxisBase()), // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      config,\n      previousY,\n      i,\n      Px,\n      Py,\n      Pb,\n      xDepth = chart.config.xDepth || 0,\n      yDepth = chart.config.yDepth || 0,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      groupManager = dataSet.getLinkedParent(),\n      stackConf = groupManager.getstackConf && groupManager.getstackConf(),\n      dataStore = dataSet.components.data; // eslint-disable-line good-practices/no-single-usage-variable\n\n    !isBar && (xDepth = -xDepth);\n    isBar && (yDepth = -yDepth);\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (dataObj === UNDEF) {\n        continue;\n      }\n      previousY = config._b;\n      Px = xAxis.getPixel((stackConf && stackConf[i].x) || config._x) + xDepth;\n      Py = yAxis.getPixel(config._y) + yDepth;\n      Pb = (previousY ? yAxis.getPixel(previousY) : yBasePos) + yDepth;\n\n      if (xAxis.config.isVertical) {\n        config._Px = Py;\n        config._Py = Px;\n        config._Pby = Px;\n        config._Pbx = Pb;\n      } else {\n        config._Px = Px;\n        config._Py = Py;\n        config._Pby = Pb;\n        config._Pbx = Px;\n      }\n      if (dataSet.getLineShift) {\n        config._Py += dataSet.getLineShift('y');\n      }\n    }\n  }\n  /**\n   * Helper function of _firePlotEvent which decides single/consolidated tooltip\n   * @param {number} plotIndex      plot index\n   * @param {Object} e              reference of the original mouse event\n   * @param {Object} datasets            column datasets\n   */\n  _decideTooltipType (plotIndex, e) {\n    var dataset = this,\n      drawTrendRegion = dataset.getFromEnv('chartConfig').drawTrendRegion,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      data = dataset.components.data[plotIndex],\n      toolText = data && (data.config.finalTooltext || data.config.toolText),\n      element = data && (data.graphics.element || dataset.graphics.sharedAnchor.element), // eslint-disable-line good-practices/no-single-usage-variable\n      currentToolTip = dataset.config.currentToolTip,\n      originalEvent = e.originalEvent;\n\n    if (drawTrendRegion && element) {\n      dataset.config.currentToolTip =\n      dataset.getLinkedParent()._drawTooltip(plotIndex, dataset.config.index, originalEvent, currentToolTip);\n    } else if (toolText && !drawTrendRegion) {\n      if (currentToolTip) {\n        toolTipController.draw(originalEvent, toolText, currentToolTip);\n      } else {\n        currentToolTip = dataset.config.currentToolTip =\n          toolTipController.draw(originalEvent, toolText);\n      }\n    }\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType    name of the event\n   * @param {number} plotIndex    index of the plot where this event has been occured\n   * @param {Event}  e            reference of the original mouse event\n   * @param {Event}  datasets     column dataset\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      data = dataset.components.data[plotIndex],\n      setElement = data.graphics.element,\n      labelElement = data.graphics.label,\n      // originalEvent = e.originalEvent,\n      config,\n      setLink;\n\n    if (setElement) {\n      config = data.config;\n      setLink = config.setLink;\n      switch (eventType) {\n        case 'fc-mouseover' :\n          dataset._decideTooltipType(plotIndex, e);\n          _rolloverResponseSetter(chart, data, e, UNDEF, dataset);\n          if (setLink) {\n            setElement.css({ 'cursor': POINTER });\n            // labelElement is undefined in dataset graphics so checking for labelElement added\n            labelElement && (labelElement.css({ 'cursor': POINTER }));\n          }\n          break;\n        case 'fc-mouseout' :\n          dataset.getFromEnv('toolTipController').hide(dataset.config.currentToolTip);\n          _rolloutResponseSetter(chart, data, e, UNDEF, dataset);\n          if (setLink) {\n            setElement.css({ 'cursor': DEFAULT_CURSOR });\n            // labelElement is undefined in dataset graphics so checking for labelElement added\n            labelElement && (labelElement.css({ 'cursor': DEFAULT_CURSOR }));\n          }\n          break;\n        case 'fc-click' :\n          chart.plotEventHandler(setElement, e);\n          break;\n        case 'fc-mousemove' :\n          dataset._decideTooltipType(plotIndex, e);\n      }\n    }\n  }\n  /**\n   * Function to remove a data with a given index.\n   * @param {number}  indexVal     from which index data would be removed\n   * @param {number}  stretchVal   delete count\n   * @param {boolean} draw      whether draw or not\n   */\n  removeData (indexVal, stretchVal, draw) {\n    var dataSet = this,\n      index = indexVal,\n      stretch = stretchVal,\n      components = dataSet.components,\n      dataStore = components.data,\n      removeDataArr = components.removeDataArr || (components.removeDataArr = []),\n      conf = dataSet.config,\n      i,\n      config,\n      len,\n      maxminFlag = dataSet.maxminFlag;\n\n    stretch === UNDEF && (stretch = 1);\n    index = index || 0;\n\n    // Storing the direction of input data for the type of animation to be done during remove.\n    if ((index + stretch) === dataStore.length || !dataSet.getFromEnv('chart').isRealTime) {\n      dataSet.endPosition = true;\n    } else if (index === 0 || index === UNDEF) {\n      dataSet.endPosition = false;\n    }\n    components.removeDataArr = removeDataArr = removeDataArr.concat(dataStore.splice(index, stretch));\n    len = removeDataArr.length;\n\n    for (i = len - 1; i >= 0; i--) {\n      if (!removeDataArr[i]) {\n        removeDataArr.splice(i, 1);\n        continue;\n      }\n      config = removeDataArr[i].config;\n      if (config.setValue === conf.maxValue || config.setValue === conf.minValue) {\n        maxminFlag = dataSet.maxminFlag = true;\n      }\n      // Update the x position for this removed elements outside of the canvas\n      config._x -= stretch;\n      if (maxminFlag) {\n        break;\n      }\n    }\n    dataSet.removeDataLen = len;\n    dataSet.resetCatPos && dataSet.resetCatPos();\n    maxminFlag && dataSet.getDataLimits && dataSet.getDataLimits();\n    draw && dataSet.asyncDraw();\n  }\n}\n\nHeatMapDataset.prototype._configureDataLabelStyle = configureDataLabelStyle;\n\nexport default HeatMapDataset;\n","export default {\n  'initial.dataset.heatMap': function () {\n    return {\n      'rect.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'plot'\n        }];\n      },\n      'text.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","\nimport { ComponentInterface } from '@fusioncharts/core/src/component-interface';\n\nclass HeatMapGroup extends ComponentInterface {\n  /**\n   * constructor function this class\n   */\n  constructor () {\n    super();\n    this.setState('visible', true);\n    this.getDataLimits = null;\n  }\n\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'group';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'heatMapGroup';\n  }\n\n  /**\n   * Create child containers\n   */\n  createContainer () {\n    let manager = this,\n      key,\n      parent = manager.getLinkedParent(),\n      animationManager = manager.getFromEnv('animationManager'),\n      pContainer,\n      parentChildContainers = parent.getChildContainer();\n\n    for (key in parentChildContainers) {\n      pContainer = parentChildContainers[key];\n\n      !manager.getChildContainer(key) && manager.addChildContainer(key,\n        animationManager.setAnimation({\n          el: 'group',\n          attr: { name: 'manager-' + key },\n          container: pContainer,\n          component: manager,\n          label: 'group'\n        }));\n    }\n  }\n\n  getLimits (allVisible) {\n    let manager = this,\n      min = +Infinity,\n      max = -Infinity,\n      maxminObj,\n      numOfColumns = 0,\n      getMaxMin = function (_maxminObj) {\n        max = Math.max(max, _maxminObj.max);\n        min = Math.min(min, _maxminObj.min);\n      };\n\n    manager._mapChildren((child) => {\n      if (child.getState('removed') || (child.getState('visible') === false)) {\n        if (allVisible) {\n          maxminObj = child.getDataLimits(allVisible);\n          getMaxMin(maxminObj);\n        }\n        return;\n      }\n      numOfColumns++;\n      maxminObj = child.getDataLimits(allVisible);\n      getMaxMin(maxminObj);\n    });\n    if (!numOfColumns) {\n      manager.setState('visible', false);\n    } else {\n      manager.setState('visible', true);\n    }\n    if (!this.config.range) {\n      this.config.range = {};\n      this.config.range.min = this.config.dataMin;\n      this.config.range.max = this.config.dataMax;\n    }\n    return { max, min };\n  }\n  /**\n   * function call sync draw of its children\n   */\n  draw () {\n    var manager = this,\n      range = manager.getLimits(true);\n    manager.addToEnv('datasetMinValue', range.min);\n    manager.addToEnv('datasetMaxValue', range.max);\n    this.createContainer();\n  }\n\n  getAxisValuePadding () {\n    let paddingObj = {},\n      axisPaddingLeft = -Infinity,\n      axisPaddingRight = -Infinity,\n      axisPaddingTop = -Infinity,\n      axisPaddingBottom = -Infinity;\n    this._mapChildren((child) => {\n      if (child.getState('removed')) {\n        return;\n      }\n      paddingObj = (child.getAxisValuePadding && child.getAxisValuePadding()) || {};\n      axisPaddingLeft = Math.max(axisPaddingLeft, paddingObj.left || -Infinity);\n      axisPaddingRight = Math.max(axisPaddingRight, paddingObj.right || -Infinity);\n      axisPaddingTop = Math.max(axisPaddingTop, paddingObj.top || -Infinity);\n      axisPaddingBottom = Math.max(axisPaddingBottom, paddingObj.bottom || -Infinity);\n    });\n    if (axisPaddingLeft === -Infinity) {\n      axisPaddingLeft = 0;\n    }\n    if (axisPaddingRight === -Infinity) {\n      axisPaddingRight = 0;\n    }\n    if (axisPaddingTop === -Infinity) {\n      axisPaddingTop = 0;\n    }\n    if (axisPaddingBottom === -Infinity) {\n      axisPaddingBottom = 0;\n    }\n    if (!this.config.padding) {\n      this.config.padding = {};\n      this.config.padding.left = axisPaddingLeft;\n      this.config.padding.right = axisPaddingRight;\n      this.config.padding.top = axisPaddingTop;\n      this.config.padding.bottom = axisPaddingBottom;\n    }\n    return {\n      left: axisPaddingLeft,\n      right: axisPaddingRight,\n      top: axisPaddingTop,\n      bottom: axisPaddingBottom\n    };\n  }\n}\nexport default HeatMapGroup;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport CategoryAxis from '@fusioncharts/core/src/axis/category';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n    zoomObj = {\n      zoomable: true,\n      pannable: true\n    },\n    config = chart._feedAxesRawData(),\n    yAxis,\n    xAxis,\n    redraw = () => axisRefVisualCartesian.asyncDraw();\n\n  componentFactory(chart, CategoryAxis, 'yAxis', 1, config.yAxisConf);\n  componentFactory(chart, CategoryAxis, 'xAxis', 1, config.xAxisConf);\n\n  yAxis = chart.getChildren('yAxis')[0];\n  xAxis = chart.getChildren('xAxis')[0];\n  yAxis.setLinkedItem('canvas', canvas);\n  xAxis.setLinkedItem('canvas', canvas);\n  axisRefVisualCartesian.setLinkedItem(yAxis.getId(), yAxis);\n  axisRefVisualCartesian.setLinkedItem(xAxis.getId(), xAxis);\n\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, xAxis);\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, yAxis);\n\n  canvas.attachAxis(xAxis, false, chart.zoomX ? zoomObj : {});\n  canvas.attachAxis(yAxis, true, chart.zoomY ? zoomObj : {});\n\n  chart._setCategories();\n}\n","import Radar from '@fusioncharts/powercharts/src/chart/radar';\nexport default Radar;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Area from '@fusioncharts/charts/src/chart/msarea';\nimport RadarDataset from '../../dataset/radar';\nimport axisFactory from '../../factories/radar-axis';\nimport canvasFactory from '../../factories/polar-canvas';\nimport { pluckNumber, pluck, chartPaletteStr, preDefStr, UNDEF, POSITION_TOP, pluckFontSizeMaintainUnit } from '@fusioncharts/core/src/lib';\n\nconst POLAR = 'polar';\n/**\n * Creates radar class\n * @class\n */\nclass Radar extends Area {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.registerFactory('canvas', canvasFactory);\n    this.registerFactory('axis', axisFactory, ['canvas']);\n  }\n  configureAttributes (obj) {\n    // overriding the user given drawfullareaborder value since\n    // it is not valid for radar\n    this.config.drawfullareaborder = 1;\n    this.config.radarRadius = pluckNumber(obj.chart.radarradius);\n\n    super.configureAttributes(obj);\n    this.config.alignLegendWithCanvas = 0;\n    // as  no canvas is there as per behaviour of Radar chart\n  }\n  /**\n   * Sets the default configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.axisType = POLAR;\n    config.axisValuePadding = 10;\n    config.gridLineWidth = 1;\n    config.showRadarBorder = 1;\n    config.showvalues = 0;\n    config.radarBorderThickness = 2;\n    config.skipCanvasDrawing = true;\n    config.useplotgradientcolor = 0;\n    config.plotfillalpha = 50;\n  }\n  /**\n   * Sets dimension of Axis components\n   */\n  setAxisDimention () {\n    this.getChildren('yAxis');\n  }\n  /**\n   * function to parse JSON data for configurations of axis\n   * @return {Object} configurations of axes\n   */\n  _feedAxesRawData () {\n    var iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      xAxisConf,\n      yAxisConf;\n\n    xAxisConf = iapi.getSpecificxAxisConf();\n    yAxisConf = iapi.getSpecificyAxisConf();\n\n    xAxisConf.vtrendlines = dataObj.vtrendlines;\n    yAxisConf.trendlines = dataObj.trendlines;\n    return {\n      xAxisConf: [xAxisConf],\n      yAxisConf: [yAxisConf]\n    };\n  }\n\n  /**\n   * Returns x-axis configuration for chart.\n   * @return {Object} configurations of x-axis.\n   */\n  getSpecificxAxisConf () {\n    var iapi = this,\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      xAxisConf = this.getBasexAxisConf();\n\n    xAxisConf.isReverse = iapi.config.reverseXAxis;\n    xAxisConf.axisLineColor = pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, '#000000');\n    xAxisConf.showAlternateGridColor = pluckNumber(chartAttrs.showalternatevgridcolor, 1);\n    xAxisConf.numDivLines = chartAttrs.numvdivlines;\n    xAxisConf.axisName = chartAttrs.xaxisname;\n    xAxisConf.setAdaptiveMin = chartAttrs.setadaptivexmin;\n    xAxisConf.showLimits = chartAttrs.showvlimits;\n    xAxisConf.showDivLineValues = pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues);\n    xAxisConf.zeroPlaneThickness = chartAttrs.vzeroplanethickness;\n    xAxisConf.zeroPlaneAlpha = chartAttrs.vzeroplanealpha;\n    xAxisConf.showZeroPlaneValue = chartAttrs.showvzeroplanevalue;\n    xAxisConf.showAxisLine = pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines, chartAttrs.drawAxisLines, 0);\n    xAxisConf.showRadarBorder = chartAttrs.showradarborder;\n    xAxisConf.radarBorderColor = chartAttrs.radarbordercolor;\n    xAxisConf.radarBorderThickness = chartAttrs.radarborderthickness;\n    xAxisConf.radarBorderAlpha = chartAttrs.radarborderalpha;\n    xAxisConf.radarFillColor = chartAttrs.radarfillcolor;\n    xAxisConf.radarFillAlpha = chartAttrs.radarfillalpha;\n    xAxisConf.radarSpikeColor = chartAttrs.radarspikecolor;\n    xAxisConf.radarSpikeThickness = chartAttrs.radarspikethickness;\n    xAxisConf.radarSpikeAlpha = chartAttrs.radarspikealpha;\n    xAxisConf.radarInLineAlpha = chartAttrs.radarinlinealpha;\n    xAxisConf.showTooltip = pluckNumber(chartAttrs.showtooltip, 1);\n\n    return xAxisConf;\n  }\n\n  /**\n   * Returns y-axis configuration for chart.\n   * @return {Object} configurations of y-axis.\n   */\n  getSpecificyAxisConf () {\n    var iapi = this,\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      chartConfig = iapi.config,\n      palleteString = chartConfig.is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      colorM = iapi.getFromEnv('color-manager'),\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    return {\n      isVertical: true,\n      isReverse: !chartConfig.isInverse,\n      isOpposit: false,\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, 'Verdana,sans'),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.yaxisnamepadding,\n      axisValuePadding: chartAttrs.yaxisvaluespadding,\n      axisNameFont: chartAttrs.yaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.yaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.yaxisnamefontsize,\n      axisNameFontColor: chartAttrs.yaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.yaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.yaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.yaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.yaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.yaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.yaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.yaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.yaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.yaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.yaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.yaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.yaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.yaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.yaxisnameborderdashgap,\n      axisNameWidth: chartAttrs.yaxisnamewidth,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n      divLineColor: pluck(chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.divlinealpha, colorM.getColor('divLineAlpha')),\n      divLineThickness: pluckNumber(chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n      alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor('altHGridColor')),\n      alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor('altHGridAlpha')),\n      numDivLines: chartAttrs.numdivlines,\n      axisMinValue: chartAttrs.yaxisminvalue,\n      axisMaxValue: chartAttrs.yaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptiveymin,\n      adjustDiv: chartAttrs.adjustvdiv,\n      labelStep: chartAttrs.yaxisvaluesstep,\n      showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n      showLimits: pluckNumber(chartAttrs.showyaxislimits, chartAttrs.showlimits, iapi.showLimits),\n      showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n      // showZeroPlane: chartAttrs.showzeroplane,\n      zeroPlaneColor: chartAttrs.zeroplanecolor,\n      zeroPlaneThickness: pluckNumber(chartAttrs.zeroplanethickness, chartAttrs.divlinethickness, 2),\n      zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, '#000000'),\n      showTooltip: pluckNumber(chartAttrs.showtooltip, 1)\n    };\n  }\n\n  /**\n   * space manager for radar\n   */\n  _spaceManager () {\n    // todo marge _allocateSpace and _spacemanager\n    var spaceForActionBar,\n      actionBarSpace,\n      availableWidth,\n      availableHeight,\n      iapi = this,\n      config = iapi.config,\n      chartAttr = iapi.getFromEnv('chart-attrib'),\n      // components = iapi.components,\n      radarBorderThickness = config.radarBorderThickness,\n      legendPosition = config.legendPosition ? config.legendposition.split('-') : [],\n      xAxis = iapi.getChildren('xAxis') && iapi.getChildren('xAxis')[0],\n      yAxisArr = (iapi.getChildren('yAxis') && iapi.getChildren('yAxis')) || [], // eslint-disable-line good-practices/no-single-usage-variable\n      yAxis = yAxisArr[0],\n      legend = iapi.getChildren('legend') && iapi.getChildren('legend')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      allottedSpace,\n      decreaseCanvasBy,\n      POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n      math = Math,\n      mathMin = math.min,\n      mathMax = math.max,\n      mathAbs = math.abs,\n      remainingSpace,\n      radarRadius;\n\n    config.radarRadius = pluckNumber(chartAttr.radarradius);\n    // If Radar radius is user defined\n    if (config.radarRadius !== UNDEF) {\n      config.radarRadius = config.radarRadius > mathMin(config.canvasHeight, config.canvasWidth) / 2 ? mathMin(config.canvasHeight, config.canvasWidth) / 2 : config.radarRadius;\n      config.availableHeight = availableHeight = config.canvasHeight - (config.radarRadius * 2);\n      config.availableWidth = availableWidth = config.canvasWidth - (config.radarRadius * 2);\n    } else { // Calculate the Radar radius\n      config.availableHeight = availableHeight = config.canvasHeight * 0.7;\n      config.availableWidth = availableWidth = config.canvasWidth * 0.7;\n    }\n\n    // Place legend\n    allottedSpace = (legendPosition[0] === POSITION_TOP || legendPosition[0] === POSITION_BOTTOM ? availableHeight : availableWidth) * 0.3;\n    allottedSpace = (legendPosition[0] === POSITION_TOP || legendPosition[0] === POSITION_BOTTOM ? availableHeight : availableWidth);\n    // No space is allocated for legend drawing in single series charts\n    if (((config.hasLegend !== false) && xAxis) && config.showLegend) {\n      remainingSpace = legend._manageLegendPosition(allottedSpace);\n      remainingSpace.bottom = mathMin(mathMax(remainingSpace.bottom, 0), allottedSpace);\n      remainingSpace.right = mathMin(mathMax(remainingSpace.right, 0), allottedSpace);\n      remainingSpace.top = mathMin(mathMax(remainingSpace.top, 0), allottedSpace);\n      remainingSpace.left = mathMin(mathMax(remainingSpace.left, 0), allottedSpace);\n      iapi._allocateSpace(remainingSpace);\n    }\n\n    if (xAxis) {\n      remainingSpace = xAxis.placeAxis(config.availableWidth, config.availableHeight);\n      iapi._allocateSpace(remainingSpace);\n    }\n\n    if (yAxis) {\n      remainingSpace = yAxis.placeAxis(config.canvasWidth);\n    }\n\n    // A space manager that manages the space for the tools as well as the captions.\n    remainingSpace = iapi._manageChartMenuBar(config.availableHeight);\n\n    spaceForActionBar = config.availableHeight * 0.225; // eslint-disable-line good-practices/no-single-usage-variable\n    actionBarSpace = iapi._manageActionBarSpace && (iapi._manageActionBarSpace(spaceForActionBar) || {}); // eslint-disable-line good-practices/no-single-usage-variable\n    iapi._allocateSpace(actionBarSpace);\n\n    // For rader make the canvas square with the minimum of width and height\n    radarRadius = config.radarRadius > 0 ? config.radarRadius * 2 : mathMin(config.canvasHeight, config.canvasWidth);\n\n    if (config.canvasHeight > radarRadius) {\n      decreaseCanvasBy = mathAbs((config.canvasHeight - radarRadius) / 2);\n      iapi._allocateSpace({\n        top: decreaseCanvasBy,\n        bottom: decreaseCanvasBy\n      });\n    }\n    if (config.canvasWidth > radarRadius) {\n      decreaseCanvasBy = mathAbs((config.canvasWidth - radarRadius) / 2);\n      iapi._allocateSpace({\n        left: decreaseCanvasBy,\n        right: decreaseCanvasBy\n      });\n    }\n    radarRadius = radarRadius / 2;\n\n    yAxis.setAxisDimention({\n      x: config.canvasLeft + config.canvasWidth / 2,\n      y: config.canvasTop + config.canvasHeight / 2 - (radarRadius - radarBorderThickness / 2),\n      axisLength: radarRadius - (radarBorderThickness / 2)\n    });\n\n    xAxis.setAxisConfig({\n      radius: radarRadius - (radarBorderThickness / 2)\n    });\n\n    xAxis.setAxisDimention({\n      x: config.canvasLeft + config.canvasWidth / 2,\n      y: config.canvasTop + config.canvasHeight / 2\n    });\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  static getName () {\n    return 'Radar';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Radar';\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @return {string} dataset defination\n   */\n  getDSdef () {\n    return RadarDataset;\n  }\n}\nexport default Radar;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport AreaDataset from '@fusioncharts/charts/src/dataset/area';\nimport radarAnimation from './index.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport { getCoordinates, getPlotFromPixel } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport { BLANKSTRING, pluck, toRaphaelColor, getFirstValue, regex,\n  getLightColor, HASHSTRING, extend2, pluckNumber } from '@fusioncharts/core/src/lib';\n\nvar COMMASTRING = ',',\n  UNDEF,\n  M = 'M',\n  L = 'L',\n  Z = 'Z',\n  dropHash = regex.dropHash;\naddDep({\n  name: 'radarAnimation',\n  type: 'animationRule',\n  extension: radarAnimation\n});\n/**\n * Creates the Radar Dataset\n * @class\n */\nclass RadarDataset extends AreaDataset {\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.getPathArr = function () {\n      var pathObj = this,\n        pathArr = pathObj.pathArr,\n        path2Arr = pathObj.path2Arr;\n\n      if (pathArr.length || path2Arr.length) {\n        return pathArr.concat(path2Arr);\n      }\n      return [];\n    };\n  }\n  /**\n   * return name\n   * @return {string} - component name\n   */\n  getName () {\n    return 'radar';\n  }\n  /**\n   * Create pixel coordinates for the plots\n   */\n  createCoordinates () {\n    var dataSet = this,\n      chartConfig = dataSet.getFromEnv('chartConfig'),\n      dataObj,\n      config,\n      previousY,\n      i,\n      Px,\n      Py,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      xPos,\n      yPos,\n      setValue;\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n      setValue = config.setValue;\n\n      if (dataObj === UNDEF) {\n        continue;\n      }\n\n      yPos = dataSet.getFromEnv('yAxis').getPixel(setValue + (previousY || 0));\n      xPos = getCoordinates({\n        radius: (chartConfig.canvasTop + chartConfig.canvasHeight / 2) - yPos,\n        theta: i\n      }, dataSet.getFromEnv('xAxis'));\n      // xPos = xAxis.getPixel(i, (chartConfig.canvasTop + chartConfig.canvasHeight / 2) - yPos);\n      Py = xPos.y;\n      Px = xPos.x;\n\n      config._Px = Px;\n      config._Py = Py;\n      config._Pbx = Px;\n      config._Pby = Py;\n    }\n  }\n  /**\n   * Gets the path for the line plot.\n   * @param {Object} data data object\n   * @param {Object} positions position object\n   * @param {boolean} type represents whether it is of type 'base'\n   * @return {Object} path details\n   */\n  getLinePath (data, positions, type) {\n    var dataset = this,\n      chartConfig = dataset.getFromEnv('chartConfig'), // eslint-disable-line good-practices/no-single-usage-variable\n      obj = {},\n      // Used for determining whether the last value was valid\n      // Initially it is false\n      lastValidValue = obj.lastValidValue || false,\n      temp = obj.temp || [],\n      temp2 = obj.temp2 || [], // eslint-disable-line good-practices/no-single-usage-variable\n      pathArr = obj.pathArr || [],\n      i,\n      config,\n      xPos,\n      yPos,\n      pointsJoined = obj.pointsJoined || 0,\n      dataObj,\n      setValue,\n      startPos = (positions && positions.begin) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      endPos = (positions && positions.end) || data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      step = chartConfig.viewPortConfig.step || 1, // eslint-disable-line good-practices/no-single-usage-variable\n      yAxis = dataset.getFromEnv('yAxis'),\n      xAxis = dataset.getFromEnv('xAxis'),\n      baseZero = yAxis.getPixel(0), // eslint-disable-line good-practices/no-single-usage-variable\n      removeDataLen = dataset.removeDataLen || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      dataWithRemovedPaths = [];\n    // Added current dataStore to arr\n    dataWithRemovedPaths = dataWithRemovedPaths.concat(data);\n\n    for (i = startPos; i < endPos + removeDataLen; i += step) {\n      dataObj = dataWithRemovedPaths[i];\n      if (!dataObj) {\n        continue;\n      }\n\n      config = dataObj.config;\n      setValue = config.setValue;\n      if (setValue === null || (config && config.isSkipped === true)) {\n        // xPos = xAxis.getPixel(xAxis.getLimit().min).x;\n        xPos = getCoordinates({\n          theta: xAxis.getLimit().min\n        }, xAxis).x;\n        yPos = yAxis.getPixel(yAxis.config.axisRange.min);\n      } else {\n        xPos = config._Px;\n        yPos = config._Py;\n      }\n\n      // take base or zero y value for animation\n      if (type === 'zero') {\n        yPos = baseZero;\n      } else if (type === 'base') {\n        yPos = config._Pby;\n      }\n      if (lastValidValue) {\n        if (temp.length) {\n          pathArr = pathArr.concat(temp);\n          temp = [];\n          pointsJoined++;\n        }\n        // Push the upper x and y position to pathArr\n        pathArr.push([L, xPos, yPos]);\n      } else {\n        // Push the upper x and y positions of area plot to temp\n        temp.push([M, xPos, yPos]);\n        // No points are joined when starting a new path\n        pointsJoined = 0;\n        lastValidValue = true;\n      }\n    }\n    // If path is not closed and any points are joined then close the path\n    if (pathArr[pathArr.length - 1] !== Z && pointsJoined > 0) {\n      pathArr.push(Z);\n    }\n    return {\n      pathArr: pathArr,\n      path2Arr: [],\n      lastValidValue: lastValidValue,\n      pointsJoined: pointsJoined,\n      temp: temp,\n      temp2: temp2,\n      getPathArr: dataset.getPathArr\n    };\n  }\n  /**\n   * Parses all the attributes for dataset level and set level\n   * Called from init function of area class and line class\n   * Both line and area attributes configuration is done here\n   * @param {Object} datasetJSON the data provided by user\n   * @return {boolean} false if datasetJSON is undefined\n   */\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.JSONData = datasetJSON;\n    var dataset = this,\n      conf = dataset.config,\n      chart = dataset.getFromEnv('chart'), // eslint-disable-line good-practices/no-single-usage-variable\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      JSONData = dataset.JSONData,\n      plotColor = dataset.getFromEnv('color-manager').getPlotColor(dataset.index);\n    super.configureAttributes(datasetJSON);\n    conf.defaultPadding = {\n      left: 0,\n      right: 0\n    };\n    conf.plotfillcolor = pluck(JSONData.color,\n      chartAttr.plotfillcolor, plotColor);\n    conf.plotbordercolor = pluck(JSONData.plotbordercolor, chartAttr.plotbordercolor,\n      chartAttr.areabordercolor, plotColor).split(COMMASTRING)[0];\n\n    conf.plotborderColorObject = {\n      color: conf.plotbordercolor,\n      alpha: conf.plotborderalpha,\n      angle: conf.plotfillangle\n    };\n    conf.fillColor = {\n      color: conf.plotfillcolor + (conf.plotgradientcolor\n        ? COMMASTRING + conf.plotgradientcolor : BLANKSTRING),\n      alpha: conf.plotfillalpha,\n      angle: conf.plotfillangle\n    };\n    conf.legendSymbolColor = conf.plotfillcolor;\n  }\n  /**\n   * Function that return the nearest plot details\n   * @param   {number} chartX x-axis position of the mouse cordinate\n   * @param   {number} chartY y-axis position of the mouse cordinate\n   * @return {Object} return an object with details of nearest plot and whether it is\n   *                   hovered or not\n   */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      xAxis = dataset.getFromEnv('xAxis'),\n      dataStore = dataset.components.data,\n      pointObj,\n      xMin,\n      xMax,\n      len = dataStore.length,\n      returnValue,\n      conf = dataset.config,\n      divAngle = 360 / len,\n      i;\n\n    xMin = Math.floor(Math.max(getPlotFromPixel({ // eslint-disable-line good-practices/no-single-usage-variable\n      x: chartX - conf.maxRadius,\n      y: chartY\n    }, xAxis) / divAngle - 1, 0));\n\n    xMax = Math.floor(Math.max(getPlotFromPixel({ // eslint-disable-line good-practices/no-single-usage-variable\n      x: chartX + conf.maxRadius,\n      y: chartY\n    }, xAxis) / divAngle, len - 1));\n\n    for (i = xMax; i >= xMin; i--) {\n      pointObj = dataStore[i];\n      if (pointObj) {\n        returnValue = dataset.isWithinShape(pointObj, i, chartX, chartY);\n        if (returnValue) {\n          break;\n        }\n      }\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * function to check if the context of dataset is chanegd or not\n   * if changed then it will return staus true. It is for further infomormation to redraw a dataset\n   *\n   * @returns {boolean} status of context change\n   * @memberof RadarDataset\n   */\n  _contextChanged () {\n    if (!this.config.context) {\n      this.config.context = {};\n    }\n    var dataset = this,\n      status,\n      context = dataset.config.context,\n      oldAxisCenterX = context.axisCenterX, // eslint-disable-line good-practices/no-single-usage-variable\n      newAxisCenterX;\n\n    // Find new center of polar category axis.\n    newAxisCenterX = dataset.getFromEnv('xAxis').config.axisDimention.centerX;\n    // If new center of polar category axis is different from old center, redraw is needed.\n    status = !(newAxisCenterX === oldAxisCenterX); // eslint-disable-line good-practices/no-single-usage-variable\n    context.axisCenterX = newAxisCenterX;\n\n    return status || super._contextChanged();\n  }\n  /**\n   * Returns the details of the plot in the category band that the givennt x and y co-ordinates\n   * are in.\n   *\n   * @param {number} [chartX=0] x-axis position of the mouse cordinate\n   * @param {number} [chartY=0] y-axis position of the mouse cordinate\n   *\n   * @return {Object} Return an object with details of nearest plot in the category band.\n   */\n  getPlotInCategoryAt (chartX, chartY) {\n    let plots = this.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      categoryAxis = this.getFromEnv('xAxis'),\n      isDatasetVisible = this.getState('visible'),\n      hoveredCategoryIndex = Math.round(getPlotFromPixel({\n        x: chartX,\n        y: chartY\n      }, categoryAxis)),\n      foundPlot = plots.find((plot, idx, plotArr) => {\n        let plotCategoryIndex,\n          nextPlotCategoryIndex,\n          prevPlotCategoryIndex,\n          halfCategoryDiff,\n          nextPlot,\n          prevPlot;\n\n        if (idx === 0) {\n          nextPlot = plotArr[idx + 1];\n          // For the first plot, the previous plot will be the last plot in the array of plots\n          prevPlot = plotArr[plotArr.length - 1];\n        } else if (idx === plotArr.length - 1) {\n          // For the last plot, the next plot will be the first plot in the array of plots\n          nextPlot = plotArr[0];\n          prevPlot = plotArr[plotArr.length - 2];\n        } else {\n          // For any other plot just select the plot immediately before and after the current plot\n          nextPlot = plotArr[idx + 1];\n          prevPlot = plotArr[idx - 1];\n        }\n        // plotCategoryIndex = categoryAxis.getAngle(plot.config._Px, plot.config._Py);\n        plotCategoryIndex = getPlotFromPixel({ // eslint-disable-line good-practices/no-single-usage-variable\n          x: plot.config._Px,\n          y: plot.config._Py\n        }, categoryAxis);\n\n        // For the last plot, the category band will end at 360 degrees\n        nextPlotCategoryIndex = idx === plotArr.length - 1\n          ? 360\n          // categoryAxis.getAngle(nextPlot.config._Px, nextPlot.config._Py);\n          : getPlotFromPixel({\n            x: nextPlot.config._Px,\n            y: nextPlot.config._Py\n          }, categoryAxis);\n        // prevPlotCategoryIndex = categoryAxis.getAngle(prevPlot.config._Px, prevPlot.config._Py);\n        prevPlotCategoryIndex = getPlotFromPixel({ // eslint-disable-line good-practices/no-single-usage-variable\n          x: prevPlot.config._Px,\n          y: prevPlot.config._Py\n        }, categoryAxis);\n        // The angle at which the category ends and the next category starts\n        halfCategoryDiff = (nextPlotCategoryIndex - plotCategoryIndex) / 2;\n\n        if (hoveredCategoryIndex <= 0 + halfCategoryDiff) {\n          // If the mouse is over an angle less than where the first category ends\n          return (hoveredCategoryIndex >= 0 && hoveredCategoryIndex <= 0 + halfCategoryDiff);\n        } else if (hoveredCategoryIndex > 360 - halfCategoryDiff) {\n          // If the mouse is over an angle greater than where the last category band ends\n          return hoveredCategoryIndex >= 360 - halfCategoryDiff && hoveredCategoryIndex <= 360;\n        }\n        return (\n          hoveredCategoryIndex >= prevPlotCategoryIndex + halfCategoryDiff &&\n            hoveredCategoryIndex <= nextPlotCategoryIndex - halfCategoryDiff\n        );\n      }),\n      hoveredPlotInfo = this._getHoveredPlot(chartX, chartY);\n\n    if (isDatasetVisible && hoveredPlotInfo) {\n      // If dataset is visible and the mouse is exactly over a plot\n      return hoveredPlotInfo;\n    } else if (isDatasetVisible && foundPlot) {\n      // If dataset is visible and the mouse is over a category band\n      return {\n        pointIndex: foundPlot._index,\n        hovered: false,\n        pointObj: foundPlot\n      };\n    }\n    // If dataset is not visible and no relevant plot was found\n    return false;\n  }\n\n  /**\n   * Function to register datasets in the internal data store of legend class.\n   */\n  _addLegend () {\n    var dataset = this,\n      strokeColor,\n      fillColor,\n      conf = dataset.config,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      legendItem,\n      legend = dataset.getFromEnv('legend'),\n      color = conf.legendSymbolColor,\n      lightColor,\n      use3DLighting = pluckNumber(chartAttr.use3dlighting, chartAttr.useplotgradientcolor, 1); // eslint-disable-line good-practices/no-single-usage-variable\n    strokeColor = getLightColor(color, 60).replace(dropHash, HASHSTRING); // eslint-disable-line good-practices/no-single-usage-variable\n    if (use3DLighting) {\n      lightColor = getLightColor(color, 40);\n      fillColor = {\n        FCcolor: {\n          color: color + ',' + color + ',' + lightColor + ',' + color + ',' + color,\n          ratio: '0,70,30',\n          angle: 270,\n          alpha: '100,100,100,100,100'\n        }\n      };\n    } else {\n      fillColor = {\n        FCcolor: {\n          color: color,\n          angle: 0,\n          ratio: '0',\n          alpha: '100'\n        }\n      };\n    }\n    if (conf.includeinlegend) {\n      legendItem = legend.getItem(dataset.config.legendItemId);\n      if (!legendItem) {\n        dataset.config.legendItemId = legend.createItem(dataset);\n        legendItem = legend.getItem(dataset.config.legendItemId);\n        dataset.addExtEventListener('fc-click', function () {\n          legendItem.itemClickFn();\n        }, legendItem);\n      }\n      legendItem.configure({\n        enabled: conf.includeInLegend,\n        type: dataset.type,\n        label: getFirstValue(dataset.JSONData.seriesname),\n        legendIconAlpha: pluckNumber(dataset.JSONData.legendiconalpha),\n        usePattern: conf.usePattern,\n        patternAttr: {\n          patternType: conf.patternType,\n          patternAngle: conf.patternAngle,\n          patternDensity: conf.patternDensity,\n          patternSize: conf.patternSize,\n          color: conf.plotColor,\n          patternAlpha: conf.patternAlpha,\n          patternBgColor: conf.patternBgColor,\n          alpha: conf.plotfillalpha\n        }\n      });\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          fill: toRaphaelColor(fillColor),\n          bgAlpha: pluckNumber(dataset.JSONData.legendiconbgalpha, dataset.JSONData.legendiconalpha, chartAttr.legendiconbgalpha, chartAttr.legendiconalpha, conf.plotfillalpha),\n          borderAlpha: pluckNumber(dataset.JSONData.legendiconborderalpha, dataset.JSONData.legendiconalpha, chartAttr.legendiconborderalpha, chartAttr.legendiconalpha, '100'),\n          rawFillColor: color,\n          stroke: toRaphaelColor(strokeColor)\n        }\n      });\n      // check if dataset is initiallyhidden\n      if (!dataset.getState('visible')) {\n        legendItem.setLegendState('hidden');\n      } else { // remove hidden state of legend item is dataset is not hidden\n        legendItem.removeLegendState('hidden');\n      }\n    } else if (dataset.config.legendItemId) {\n      legend.disposeItem(dataset.config.legendItemId);\n    }\n  }\n  /**\n   * Calculate current pos w.r.t prev for an array\n   * @param   {Object}  pathVal   current path\n   * @param   {Object}  lim    x,y axis limits\n   * @return {Array}          Old path\n   */\n  getOldPath (pathVal, lim) {\n    var dataSet = this,\n      path = pathVal,\n      xLim = lim.x,\n      yLim = lim.y,\n      oldLim = dataSet.config && dataSet.config.prevLim,\n      oldLimX = oldLim.x,\n      oldLimY = oldLim.y,\n      i = 0,\n      ii = path.pathArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      item,\n      getOldValX = function (value) {\n        // getting ratio by pixels\n        let val = value;\n        val = (val - oldLimX.minPixel.x) / (oldLimX.maxPixel.x - oldLimX.minPixel.x);\n        // ratio to value\n        val = val * (oldLimX.max - oldLimX.min) + oldLimX.min;\n        // value in old ratio\n        val = (val - xLim.min) / (xLim.max - xLim.min);\n        // return position in previous\n        return val * ((xLim.maxPixel.x - xLim.minPixel.x)) + xLim.minPixel.x + 1;\n      },\n      getOldValY = function (value) {\n        let val = value;\n        if ((val < oldLimY.base && val > yLim.base) ||\n                        (val > oldLimY.base && val < yLim.base)) {\n          val = yLim.base;\n        }\n        return val - 1;\n      },\n      getOldValYBase = function (val) {\n        if (val === oldLimY.base) {\n          return yLim.base;\n        }\n        return getOldValY(val);\n      };\n    if (oldLimY.min === yLim.min && oldLimX.min === xLim.min &&\n                oldLimY.max === yLim.max && oldLimX.max === xLim.max) {\n      return path;\n    }\n    path = extend2({}, path);\n    if (!oldLim) {\n      return [];\n    }\n    // generating new copy of array\n    path.pathArr = path.pathArr.slice(0);\n    path.path2Arr = path.path2Arr.slice(0);\n    for (i = ii; i--;) {\n      item = path.pathArr[i].slice(0);\n      // check if array\n      if (!item[1] || !item.join) {\n        continue;\n      }\n      item[1] = getOldValX(item[1]);\n      item[2] = getOldValYBase(item[2]);\n      path.pathArr[i] = item;\n    }\n    for (i = path.path2Arr.length; i--;) {\n      item = path.path2Arr[i].slice(0);\n      // check if array\n      if (!item[1] || !item.join) {\n        continue;\n      }\n      item[1] = getOldValX(item[1]);\n      item[2] = getOldValYBase(item[2]);\n      path.path2Arr[i] = item;\n    }\n    return path;\n  }\n  /**\n   * Configure data level\n   */\n  _setConfigure () {\n    var dataSet = this,\n      conf = dataSet.config,\n      setDataArr = dataSet.config.JSONData.data || [],\n      setData,\n      dataObj,\n      len = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      dataStore,\n      i;\n\n    conf.imageCount = 0;\n    dataStore = dataSet.components.data;\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n    conf.maxRadius = -Infinity;\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      setData = (setDataArr && setDataArr[i]) || {};\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {};\n      }\n\n      if (!dataObj.config) {\n        dataStore[i].config = {};\n      }\n\n      if (!dataObj.graphics) {\n        dataObj.graphics = {};\n      }\n      dataSet._plotConfigure(i, setData);\n    }\n  }\n}\nexport default RadarDataset;\n","import { getCoordinates } from '@fusioncharts/utils/src/scale-utils/polar-util';\n\nexport default {\n  'initial.dataset.radar': function () {\n    return {\n      'anchor.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          startEnd: {\n            start: 0.5,\n            end: 1\n          },\n          slot: 'plot'\n        }];\n      },\n      'anchor.updating': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }];\n      },\n      'anchor.disappearing': () => {\n        return [{\n          finalAttr: {\n            opacity: 0,\n            'fill-opacity': 0,\n            'stroke-opacity': 0\n          },\n          slot: 'final'\n        }];\n      },\n      'line.appearing': (inputJSON) => {\n        let dataset = inputJSON.component,\n          xAxis = dataset.getFromEnv('xAxis'),\n          yAxis = dataset.getFromEnv('yAxis'),\n          catLen = xAxis.getTicksLen(),\n          chartConfig = dataset.getFromEnv('chartConfig'),\n          finalAttr = inputJSON.attr,\n          value = (chartConfig.canvasTop + chartConfig.canvasHeight / 2),\n          initialPath = [],\n          i;\n        for (i = 0; i < catLen; i++) {\n          initialPath.push(i ? 'L' : 'M');\n          initialPath.push(getCoordinates({\n            radius: value,\n            theta: 0\n          }, xAxis).x);\n          initialPath.push(yAxis.getPixel(0));\n        }\n        initialPath.push('Z');\n        return [{\n          initialAttr: {\n            opacity: 0,\n            path: initialPath\n          },\n          finalAttr: {\n            opacity: 1,\n            path: finalAttr.path\n          },\n          startEnd: {\n            start: 0,\n            end: 0.5\n          },\n          slot: 'middle'\n        }];\n      },\n      'label.appearing': [{\n        initialAttr: {\n          opacity: 0\n        },\n        finalAttr: {\n          opacity: 1\n        },\n        slot: 'final'\n      }],\n      '*': null\n    };\n  }\n};\n","import NumericAxis from '@fusioncharts/core/src/axis/numeric';\nimport PolarAxis from '@fusioncharts/core/src/axis/polar';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    config = chart._feedAxesRawData(),\n    axisRefVisual = canvas.getChildren('axisRefVisualPolar')[0],\n    yAxis,\n    xAxis,\n    redraw = () => axisRefVisual.asyncDraw();\n  componentFactory(chart, NumericAxis, 'yAxis', 1, config.yAxisConf);\n  componentFactory(chart, PolarAxis, 'xAxis', 1, config.xAxisConf);\n\n  yAxis = chart.getChildren('yAxis')[0];\n  xAxis = chart.getChildren('xAxis')[0];\n\n  yAxis.setLinkedItem('canvas', canvas);\n  axisRefVisual.setLinkedItem(yAxis.getId(), yAxis);\n  axisRefVisual.setLinkedItem(xAxis.getId(), xAxis);\n\n  axisRefVisual.addExtEventListener('visiblerangeset', redraw, xAxis);\n  axisRefVisual.addExtEventListener('visiblerangeset', redraw, yAxis);\n\n  canvas.attachAxis(xAxis, false, {});\n  canvas.attachAxis(yAxis, true, {});\n\n  chart._setCategories();\n}\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Axis from './axis';\nimport { BLANKSTRING, pluckNumber, setLineHeight, getDashStyle, convertColor,\n  pluck, preDefStr, PXSTRING } from '../lib';\nimport { polarToCartesian } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport diff from '@fusioncharts/utils/src/scale-utils/array/diff';\nimport range from '@fusioncharts/utils/src/scale-utils/array/range';\nimport polarAnimation from './polar.animation';\nimport { addDep } from '../dependency-manager';\nimport ScaleCategory from '@fusioncharts/utils/src/scales/category';\nimport { setTickValues, shiftLabels,\n  _createContainer, setAxisPadding, getPixel, getLabel } from './common-api';\n\nvar UNDEF,\n  DASH_DEF = 'none',\n  // PXSTRING = 'px',\n  POINTER = 'pointer',\n  NORMALSTRING = 'normal',\n  EVENTARGS = 'eventArgs',\n  POSITION_MIDDLE = preDefStr.POSITION_MIDDLE,\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  POSITION_END = preDefStr.POSITION_END,\n  // M = 'M',\n  math = Math,\n  mathMin = math.min,\n  pi = math.PI,\n  pi2 = 2 * pi;\n  // pInt = function (s, mag) {\n  //   return parseInt(s, mag || 10);\n  // },\n  // labelFontBdrColor,\n\naddDep({\n  name: 'polarAnimation',\n  type: 'animationRule',\n  extension: polarAnimation\n});\n\n/**\n * Creates the Polar axis class\n * @class\n */\nclass Polar extends Axis {\n  /**\n   * adding animation rules\n   */\n  constructor () {\n    super();\n    this.config.scale = new ScaleCategory();\n    this.config.referenceInfo = [];\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'polarCategory';\n  }\n\n  /**\n   * Sets default config\n   *\n   * @memberof Polar\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.drawPlotBands = false;\n    this.config.forceZeroTick = false;\n  }\n\n  /**\n   * Prepare the axis attributes for use by the chart drawing. It applies default values to the\n   * options that are undefined.\n   * @param  {Object}  rawAttr The raw attributes to be set\n   */\n  configureAttributes (rawAttr) {\n    let axis = this,\n      axisConfig = axis.config,\n      axisAttr = rawAttr,\n      chart = axis.getFromEnv('chart'),\n      jsonData = chart.getFromEnv('dataSource'),\n      FCChartObj = jsonData.chart,\n      colorM = axis.getFromEnv('color-manager');\n    super.configureAttributes(rawAttr);\n    axisConfig.gridLineColor = convertColor(pluck(axisAttr.radarSpikeColor,\n      colorM.getColor('divLineColor')),\n    pluckNumber(axisAttr.radarSpikeAlpha, axisAttr.radarInLineAlpha,\n      colorM.getColor('divLineAlpha')));\n    axisConfig.radarSpikeThickness = pluckNumber(FCChartObj.radarspikethickness, 1);\n    // labelFontBdrColor = labelFontBdrColor ? convertColor(\n    //   labelFontBdrColor, pluckNumber(FCChartObj.labelborderalpha,\n    //     FCChartObj.labelalpha, 100)) : BLANKSTRING;\n    // axisConfig.labels.style = {\n    //   fontFamily: pluck(axisAttr.labelFont, axisAttr.outCanfontFamily),\n    //   fontSize: pluckNumber(axisAttr.labelFontSize, pInt(axisAttr.outCanfontSize)) + PXSTRING,\n    //   fontWeight: pluckNumber(axisAttr.labelFontBold) ? 'bold' :\n    //     NORMALSTRING,\n    //   fontStyle: pluckNumber(axisAttr.labelFontItalic) ? 'italic' :\n    //     NORMALSTRING,\n    //   color: convertColor(pluck(axisAttr.labelFontColor, axisAttr.outCancolor),\n    //     pluckNumber(axisAttr.labelFontAlpha, 100)),\n    //   labelLink: FCChartObj.labellink,\n    //   border: labelFontBdrColor || FCChartObj.labelbgcolor ?\n    //     (pluckNumber(FCChartObj.labelborderthickness, 1) + 'px solid') : '',\n    //   borderColor: labelFontBdrColor,\n    //   borderThickness: pluckNumber(FCChartObj.labelborderthickness, 1),\n    //   borderPadding: pluckNumber(FCChartObj.labelborderpadding, 2),\n    //   borderRadius: pluckNumber(FCChartObj.labelborderradius, 0),\n    //   backgroundColor: FCChartObj.labelbgcolor ?\n    //     convertColor(FCChartObj.labelbgcolor,\n    //       pluckNumber(FCChartObj.labelbgalpha, FCChartObj.labelalpha,\n    //         100)) : BLANKSTRING,\n    //   borderDash: pluckNumber(FCChartObj.labelborderdashed, 0) ?\n    //     getDashStyle(pluckNumber(FCChartObj.labelborderdashlen, 4),\n    //       pluckNumber(FCChartObj.labelborderdashgap, 2)) : DASH_DEF\n    // };\n    // axisConfig.categoryNumDivLines = pluckNumber(axisConfig.numDivLines, 0);\n  }\n\n  /**\n   * Function set the starting point for drawing the axis and the axis drawing width/height\n   * @param {Object} data Contains the x, y, length and whether the axis is drawn on the opposite side\n   */\n  setAxisDimention (data) {\n    let axis = this,\n      scale = axis.getScale(),\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      startAngle = axisConfig.startAngle || -pi / 2,\n      totalAngle = axisConfig.totalAngle || -pi2,\n      endAngle = startAngle + totalAngle,\n      rangeArr,\n      category = axisConfig.tickValues.tickValue || [],\n      anglePerSlice = totalAngle / (category.length || 1),\n      axisDimention = axisConfig.axisDimention || (axisConfig.axisDimention = {});\n\n    axisDimention.opposite = pluckNumber(data.opposite, axisDimention.opposite);\n    axisDimention.centerX = pluckNumber(data.x, axisDimention.x, chartConfig.canvasLeft);\n    axisDimention.centerY = pluckNumber(data.y, axisDimention.y, chartConfig.canvasTop);\n    axisDimention.axisLength = pi2;\n\n    endAngle -= anglePerSlice;\n    rangeArr = axisConfig.clockWise ? [endAngle, startAngle] : [startAngle, endAngle];\n    scale.setRange(rangeArr);\n  }\n  /**\n   * Parse category line attributes\n   *\n   * @memberof Polar\n   */\n  _parseCategoryPlotLine () {\n    var axis = this,\n      axisConfig = axis.config,\n      tickValue = axisConfig.tickValues.tickValue,\n      plotLineColor = axisConfig.gridLineColor,\n      plotLineWidth = axisConfig.radarSpikeThickness,\n      axisAttrObj,\n      referenceInfo = axisConfig.referenceInfo,\n      i,\n      value;\n\n    axisAttrObj = {\n      stroke: plotLineColor,\n      'stroke-width': plotLineWidth\n      // 'stroke-dasharray': plotLineDashStyle\n    };\n    // checking for pure tickValue axis exclude bubble scatter\n    if (tickValue[0] && (tickValue[0].x !== UNDEF || tickValue[0].y !== UNDEF)) {\n      return;\n    }\n    // checking if lines are to be drawn user can decide\n    if (axisConfig.lines.isDraw && axisConfig.numDivLines) {\n      for (i = 0; i < tickValue.length; ++i) {\n        value = i;\n\n        referenceInfo.push({\n          from: value,\n          type: 'line',\n          layer: 1,\n          attr: axisAttrObj\n        });\n      }\n    }\n  }\n  /**\n   * Function called by the chart when there is requirement to calculate or recalculate the space\n   * management this function must be called every time when chart dimension is changed\n   * @param {number} width The maximum width that is available for space management\n   * @param {number} height The maximum height that is available for space management\n   * @return {Object} Left and right defining how much space is used in left and right\n   */\n  placeAxis (width, height) {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      smartLabel = chart.getFromEnv('smartLabel'),\n      labelStyle = axisConfig.labels.style,\n      categories = chart.getFromEnv('dataSource').categories,\n      axisValuePadding = axisConfig.labelPadding = pluckNumber(axisConfig.rawAttr.axisValuePadding, 10),\n      useEllipsesWhenOverflow = axisConfig.useEllipsesWhenOverflow,\n      top = 0,\n      left = 0,\n      right = 0,\n      bottom = 0,\n      avalTop = height / 2,\n      avalBottom = height / 2,\n      avalRight = width / 2,\n      avalLeft = width / 2,\n      i,\n      // text,\n      // allCategories = axisConfig.categories && axisConfig.categories.category,\n      allCategories = axisConfig.tickValues && axisConfig.tickValues.tickValue,\n      categoryLength,\n      singleCategory,\n      smartLabelText,\n      categoriesStyle,\n      categoryStyle,\n      smartLabelStyle,\n      smartLabelStyleLineHeight,\n      lineHeight;\n    // TODO : so space management for category\n\n    axisConfig.labels.isDraw = 1;\n    axisConfig.labels.drawNormalVal = 1;\n    axisConfig.labels.drawLimitVal = 1;\n\n    if (!axis.components) {\n      axis.components = {};\n    }\n    axis.components.labels = [];\n    // The style for the catergories\n    if (axisConfig.showLabels) {\n      if (categories) {\n        let firstCategory = categories[0];\n        categoriesStyle = {\n          fontFamily: firstCategory.font,\n          fontSize: firstCategory.fontsize,\n          color: firstCategory.fontcolor\n        };\n      }\n      for (i = 0, categoryLength = allCategories.length; i < categoryLength; i++) {\n        singleCategory = allCategories[i];\n        // Style for the individuel category\n        categoryStyle = {\n          fontFamily: singleCategory.font,\n          fontSize: singleCategory.fontsize,\n          fontWeight: singleCategory.fontbold ? 'bold' : NORMALSTRING,\n          fontStyle: singleCategory.fontitalic ? 'italic' : NORMALSTRING\n        };\n        // the final style for smart label of that individual category label\n        smartLabelStyle = {\n          fontFamily: pluck(categoryStyle.fontFamily, categoriesStyle.fontFamily,\n            labelStyle.fontFamily),\n          fontSize: pluck(categoryStyle.fontSize, categoriesStyle.fontSize,\n            this.computeFontSize(labelStyle.fontSizeWithUnit) + PXSTRING),\n          fontWeight: pluck(categoryStyle.fontWeight, labelStyle.fontWeight),\n          fontStyle: pluck(categoryStyle.fontStyle, labelStyle.fontStyle)\n        };\n\n        smartLabelStyleLineHeight = setLineHeight(smartLabelStyle);\n        lineHeight = smartLabelStyleLineHeight.replace(/px/ig, '');\n        smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n        smartLabel.setStyle(smartLabelStyle);\n\n        // Make a copy of actual category label\n        singleCategory.oriLabel === UNDEF && (singleCategory.oriLabel = singleCategory.label);\n        if (i === 0) {\n          smartLabelText = smartLabel.getSmartText(singleCategory.oriLabel, width,\n            mathMin(lineHeight, avalTop), useEllipsesWhenOverflow);\n\n          singleCategory.label = smartLabelText.text;\n          singleCategory.tooltext = smartLabelText.tooltext;\n\n          smartLabelText.width += smartLabelText.width ? axisValuePadding : 0;\n          smartLabelText.height += smartLabelText.height ? axisValuePadding : 0;\n\n          if (smartLabelText.height > top) {\n            top = smartLabelText.height;\n            bottom = top;\n          }\n        } else if (i === categoryLength / 2) {\n          smartLabelText = smartLabel.getSmartText(singleCategory.oriLabel, width,\n            mathMin(lineHeight, avalBottom), useEllipsesWhenOverflow);\n\n          singleCategory.label = smartLabelText.text;\n          singleCategory.tooltext = smartLabelText.tooltext;\n\n          smartLabelText.width += smartLabelText.width ? axisValuePadding : 0;\n          smartLabelText.height += smartLabelText.height ? axisValuePadding : 0;\n\n          if (smartLabelText.height > bottom) {\n            bottom = smartLabelText.height;\n          }\n        } else if (i < categoryLength / 2) {\n          smartLabelText = smartLabel.getSmartText(singleCategory.oriLabel, avalLeft,\n            smartLabelStyleLineHeight, useEllipsesWhenOverflow);\n\n          singleCategory.label = smartLabelText.text;\n          singleCategory.tooltext = smartLabelText.tooltext;\n\n          smartLabelText.width += smartLabelText.width ? axisValuePadding : 0;\n          smartLabelText.height += smartLabelText.height ? axisValuePadding : 0;\n\n          if (smartLabelText.width > left) {\n            left = smartLabelText.width;\n          }\n        } else {\n          smartLabelText = smartLabel.getSmartText(singleCategory.oriLabel, avalRight,\n            smartLabelStyleLineHeight, useEllipsesWhenOverflow);\n\n          singleCategory.label = smartLabelText.text;\n          singleCategory.tooltext = smartLabelText.tooltext;\n\n          smartLabelText.width += smartLabelText.width ? axisValuePadding : 0;\n          smartLabelText.height += smartLabelText.height ? axisValuePadding : 0;\n\n          if (smartLabelText.width > right) {\n            right = smartLabelText.width;\n          }\n        }\n\n        // Store width and height of labels\n        axis.components.labels.push({\n          config: {\n            width: smartLabelText.width,\n            height: smartLabelText.height,\n            props: {\n              label: {\n                attr: {}\n              }\n            }\n          }\n        });\n      }\n    } else {\n      for (i = 0, categoryLength = allCategories.length; i < categoryLength; i++) {\n        axis.components.labels.push({\n          config: {\n            width: 0,\n            height: 0,\n            props: {\n              label: {\n                attr: {}\n              }\n            }\n          }\n        });\n      }\n    }\n    return {\n      top: top,\n      left: left,\n      right: right,\n      bottom: bottom\n    };\n  }\n  /**\n   * Calculates the parameters necessary to draw the components of the chart.\n   * In addition, it also calculates and draws the axis labels and ticks\n   */\n  _drawComponents () {\n    var axis = this,\n      axisConfig = axis.config;\n    axisConfig.drawLabels && axisConfig.hasCategory && axis._drawCategory();\n  }\n\n  /**\n   * Parses axis cosmetics and positions during post space management\n   *\n   * @memberof Polar\n   */\n  allocatePosition () {\n    var axis = this,\n      axisConfig = axis.config;\n\n    axisConfig.drawLabels && axisConfig.hasCategory && axis._parseCategory();\n  }\n  /**\n   * Parses the position and parsing of categories during post space management\n   *\n   * @memberof Polar\n   */\n  _parseCategory () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      isOpposit = axisConfig.isOpposit,\n      labels = axisConfig.labels,\n      style = labels.style,\n      categoryLabel = axis.config.categoryLabel || (axis.config.categoryLabel = {}),\n      categories = chart.getFromEnv('dataSource').categories,\n      category = axisConfig.tickValues.tickValue,\n      axisPadding = axisConfig.labelPadding,\n      categoriesStyle = {},\n      categoryStyle = {},\n      centerX = axisConfig.axisDimention.centerX,\n      centerY = axisConfig.axisDimention.centerY,\n      i,\n      max,\n      min,\n      curCategory,\n      text,\n      labelRotation,\n      labelLineHeight,\n      addCategoryPadding,\n      css,\n      axisAttrObj,\n      fontColor,\n      pos,\n      curCategoryValue,\n      posX,\n      posY,\n      radius,\n      radiusXY,\n      theta,\n      axisScale = axis.getScale(),\n      catStyle,\n      id,\n      textId;\n\n    radius = pluckNumber(axisConfig.radius, 0);\n    min = 0;\n    max = category ? category.length - 1 : 0;\n\n    // checking if labels are to be drawn user can decide or can be decided by axis placeAxis function\n    if (axisConfig.labels.isDraw) {\n      if (categories) {\n        let cat0 = categories[0];\n        categoriesStyle.fontFamily = cat0.font;\n        categoriesStyle.fontSize = cat0.fontsize;\n        categoriesStyle.color = cat0.fontcolor;\n      }\n\n      // recalculating font size in case of chart resize\n      style.fontSize = this.computeFontSize(style.fontSizeWithUnit);\n\n      // main loop where the drawing starts\n      for (i = min; i <= max; i++) {\n        curCategory = category[i];\n        // TODO : need to\n        curCategoryValue = pluckNumber(curCategory.x, curCategory.y, i);\n        // if values are not limit value and label drawing is off other\n        // than limit increment it and continue\n        if (!axisConfig.labels.drawNormalVal && !(axisConfig.labels.drawLimitVal && (i === min ||\n                            curCategoryValue === max))) {\n          continue;\n        }\n        if (!axisConfig.labels.drawNormalVal && !(curCategoryValue === min ||\n                            curCategoryValue === max)) {\n          continue;\n        }\n        // if value are limit value but limit value are not mean to be drawn\n        if (!axisConfig.labels.drawLimitVal && (curCategoryValue === min || curCategoryValue === max)) {\n          continue;\n        }\n        categoryStyle = {\n          fontFamily: pluck(curCategory.font, curCategory.labelfont),\n          fontSize: pluck(curCategory.fontsize, curCategory.labelfontsize),\n          fontWeight: pluckNumber(curCategory.fontbold, curCategory.labelfontbold, 0)\n            ? 'bold' : UNDEF,\n          fontStyle: pluckNumber(curCategory.fontitalic, curCategory.labelfontitalic, 0)\n            ? 'italic' : UNDEF\n        };\n\n        fontColor = convertColor(pluck(curCategory.fontcolor, curCategory.labelfontcolor,\n          categoriesStyle.color, style.color), pluckNumber(curCategory.labelalpha,\n          axisConfig.rawAttr.labelFontAlpha, 100));\n        css = {\n          fontFamily: pluck(categoryStyle.fontFamily, categoriesStyle.fontFamily, style.fontFamily),\n          fontSize: pluck(categoryStyle.fontSize, categoriesStyle.fontSize, style.fontSize),\n          fontWeight: pluck(categoryStyle.fontWeight, style.fontWeight),\n          fontStyle: pluck(categoryStyle.fontStyle, style.fontStyle)\n        };\n\n        css.lineHeight = setLineHeight(css);\n\n        if (css.lineHeight) {\n          labelLineHeight = css.lineHeight;\n          if (labelLineHeight.indexOf('px') !== -1) {\n            labelLineHeight = labelLineHeight.replace(/px/i, '');\n            labelLineHeight = parseFloat(labelLineHeight);\n          }\n        }\n\n        // make the attribute ready to use\n        // y-axis\n        theta = axisScale.getRangeValue(curCategoryValue);\n        pos = polarToCartesian(radius + axisPadding, theta);\n        pos.x += centerX;\n        pos.y += centerY;\n        posX = pos.x;\n        posY = pos.y;\n\n        text = curCategory.label || '';\n        if (pluckNumber(curCategory.showlabel, 1) === 0 || axisConfig.showLabels === 0) {\n          text = '';\n        }\n        addCategoryPadding = curCategory.labelPadding || 0;\n        axisAttrObj = {\n          fill: fontColor,\n          'line-height': labelLineHeight,\n          'font-size': style.fontSize,\n          'text': text,\n          cursor: curCategory.link ? POINTER : 'default',\n          'x': posX,\n          'y': posY\n        };\n        if (addCategoryPadding) {\n          axisAttrObj.y += addCategoryPadding;\n        }\n        if (labelRotation) {\n          axisAttrObj['text-anchor'] = isOpposit ? POSITION_START : POSITION_END;\n          axisAttrObj['vertical-align'] = POSITION_MIDDLE;\n        } else {\n          axisAttrObj['vertical-align'] = isOpposit ? POSITION_BOTTOM : POSITION_TOP;\n        }\n\n        if (i === 0) {\n          axisAttrObj['text-anchor'] = POSITION_MIDDLE;\n          axisAttrObj['vertical-align'] = POSITION_BOTTOM;\n        } else if (i === (max + 1) / 2) {\n          axisAttrObj['text-anchor'] = POSITION_MIDDLE;\n          axisAttrObj['vertical-align'] = POSITION_TOP;\n        } else if (i < (max + 1) / 2) {\n          axisAttrObj['text-anchor'] = POSITION_END;\n          axisAttrObj['vertical-align'] = POSITION_MIDDLE;\n        } else {\n          axisAttrObj['text-anchor'] = POSITION_START;\n          axisAttrObj['vertical-align'] = POSITION_MIDDLE;\n        }\n\n        theta = axisScale.getRangeValue(curCategoryValue);\n        radiusXY = polarToCartesian(radius, theta);\n        radiusXY.x += centerX;\n        radiusXY.y += centerY;\n        // If labels shift is applicable (Specially for 3D) then apply the changes\n        if (labels.shiftX) {\n          axisAttrObj.x += labels.shiftX;\n        }\n        if (labels.shiftY) {\n          axisAttrObj.y += labels.shiftY;\n        }\n\n        // CategoryLabel is not present, create it.\n        categoryLabel = axisConfig.categoryLabel = categoryLabel || {};\n        // Create/reuse category label\n        textId = 'Label' + (id || i);\n\n        categoryLabel[textId] = categoryLabel[textId] || {};\n        categoryLabel[textId].config = categoryLabel[textId].config || {};\n\n        categoryLabel[textId].config.labelBox = catStyle = {\n          label: text,\n          lineHeight: css.lineHeight,\n          border: pluckNumber(curCategory.borderthickness, curCategory.labelborderthickness)\n            ? (pluckNumber(curCategory.borderthickness, curCategory.labelborderthickness, 1) +\n                                'px solid') : '',\n          borderColor: curCategory.bordercolor || curCategory.labelbordercolor\n            ? convertColor(curCategory.bordercolor || curCategory.labelbordercolor,\n              pluckNumber(curCategory.borderalpha, curCategory.labelborderalpha, curCategory.alpha,\n                curCategory.labelalpha, 100)) : BLANKSTRING,\n          borderThickness: pluckNumber(curCategory.borderthickness, curCategory.labelborderthickness),\n          borderPadding: pluckNumber(curCategory.borderpadding, curCategory.labelborderpadding),\n          borderRadius: pluckNumber(curCategory.borderradius, curCategory.labelborderradius),\n          backgroundColor: curCategory.bgcolor || curCategory.labelbgcolor\n            ? convertColor(curCategory.bgcolor || curCategory.labelbgcolor,\n              pluckNumber(curCategory.bgalpha, curCategory.labelbgalpha,\n                curCategory.alpha, curCategory.labelalpha, 100))\n            : BLANKSTRING,\n          borderDash: pluckNumber(curCategory.borderdashed, curCategory.labelborderdashed, 0)\n            ? getDashStyle(pluckNumber(curCategory.borderdashlen, curCategory.labelborderdashlen, 4),\n              pluckNumber(curCategory.borderdashgap, curCategory.labelborderdashgap, 2))\n            : pluckNumber(curCategory.borderdashed, curCategory.labelborderdashed) ===\n                                0 ? DASH_DEF : style.borderDash\n        };\n        // Set the categorylabel text-bound cosmetics\n        categoryLabel[textId].config.labelBox['text-bound'] = !text\n          ? []\n          : [pluck(catStyle.backgroundColor, style.backgroundColor),\n            pluck(catStyle.borderColor, style.borderColor),\n            pluck(catStyle.borderThickness, style.borderThickness),\n            pluck(catStyle.borderPadding, style.borderPadding),\n            pluck(catStyle.borderRadius, style.borderRadius),\n            pluck(catStyle.borderDash, style.borderDash)];\n\n        axisAttrObj['text-bound'] = categoryLabel[textId].config.labelBox['text-bound'];\n\n        axis.components.labels[i].config.props.label.css = css;\n        axis.components.labels[i].config.props.label.attr = Object.assign(\n          axis.components.labels[i].config.props.label.attr,\n          axisAttrObj\n        );\n      }\n    }\n  }\n  /**\n   * Draws the category labels of the axis\n   */\n  _drawCategory () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      animationManager = chart.getFromEnv('animationManager'),\n      labels = axisConfig.labels,\n      style = labels.style,\n      axisContainer = axisConfig.axisContainer,\n      category = axisConfig.tickValues.tickValue,\n      raiseEvent = function (event) {\n        return function (data) {\n          var ele = this;\n          chart.plotEventHandler(ele, data, event);\n        };\n      },\n      toolTipController = axis.getFromEnv('toolTipController'),\n      counter = 0,\n      i,\n      max,\n      min,\n      curCategory,\n      textElement,\n      textElemCheck,\n      css,\n      axisAttrObj,\n      curCategoryValue,\n      removeElem,\n      id,\n      textId,\n      mapArr = [],\n      removeElementsArr,\n      /**\n       * Removes element which are required anymore.\n       * @param {any} arrOfId array\n       */\n      removeElements = arrOfId => {\n        for (i = 0; i < arrOfId.length; ++i) {\n          removeElem = axis.getGraphicalElement(arrOfId[i]);\n          removeElem && axis.removeGraphicalElement(removeElem);\n        }\n      };\n\n    min = 0;\n    max = category ? category.length - 1 : 0;\n\n    // checking if labels are to be drawn user can decide or can be decided by axis placeAxis function\n    if (axisConfig.labels.isDraw) {\n      // main loop where the drawing starts\n      for (i = min, counter = 0; i <= max; i++) {\n        curCategory = category[i];\n        // TODO : need to\n        curCategoryValue = pluckNumber(curCategory.x, curCategory.y, i);\n        // if values are not limit value and label drawing is off other\n        // than limit increment it and continue\n        if (!axisConfig.labels.drawNormalVal && !(axisConfig.labels.drawLimitVal && (i === min ||\n                            curCategoryValue === max))) {\n          continue;\n        }\n        if (!axisConfig.labels.drawNormalVal && !(curCategoryValue === min ||\n                            curCategoryValue === max)) {\n          continue;\n        }\n        // if value are limit value but limit value are not mean to be drawn\n        if (!axisConfig.labels.drawLimitVal && (curCategoryValue === min || curCategoryValue === max)) {\n          continue;\n        }\n        textId = 'Label' + (id || i);\n        mapArr.push(textId);\n\n        axisAttrObj = axis.components.labels[i].config.props.label.attr;\n        css = axis.components.labels[i].config.props.label.css;\n\n        textElemCheck = axis.getGraphicalElement(textId);\n        textElement = animationManager.setAnimation({\n          css,\n          el: textElemCheck || 'text',\n          attr: axisAttrObj,\n          container: axisContainer,\n          component: axis,\n          label: 'polarLabel'\n        });\n\n        // Attach/remove tooltip\n        if (axisConfig.showTooltip && curCategory.tooltext) {\n          toolTipController.enableToolTip(textElement, curCategory.tooltext);\n        } else {\n          toolTipController.disableToolTip(textElement);\n        }\n\n        textElement.data(EVENTARGS, {\n          link: curCategory.link || curCategory.labellink || style.labelLink,\n          text: axisAttrObj.text,\n          index: counter\n        });\n        if (!textElemCheck) {\n          axis.addGraphicalElement(textId, textElement);\n          // Attach event handler to category label\n          textElement.on('fc-click', raiseEvent('datalabelclick'))\n            .hover(raiseEvent('dataLabelRollOver'), raiseEvent('dataLabelRollOut'));\n        }\n\n        counter += 1;\n      }\n\n      axisConfig.labelMap = axisConfig.labelMap || [];\n      removeElementsArr = diff(axisConfig.labelMap, mapArr);\n    } else {\n      removeElementsArr = mapArr;\n    }\n    axisConfig.labelMap = mapArr;\n    removeElements(removeElementsArr);\n  }\n\n  /**\n   * translation wil be for radar\n   * @return {number} value 0\n   */\n  getTranslation () {\n    if (this) return 0;\n  }\n\n  /**\n   * returns the reference info\n   * @return {Array} array of object\n  */\n  getReferenceInfo () {\n    return this.config.referenceInfo;\n  }\n\n  /**\n   * Sets the visible range of the axis. Also sets axis's reference values and re-calculates PVR.\n   * @param  {number} minValue The minimum value of the area to be visible\n   * @param  {number} maxValue The maximum value of the area to be visible\n   * @return {boolean} Whether the visible range of the axis was successfully set or not\n   */\n  setVisibleConfig (minValue, maxValue) {\n    let axis = this,\n      axisConfig = axis.config,\n      scale = axis.getScale(),\n      domain;\n\n    if (minValue >= maxValue ||\n      minValue < axisConfig.axisRange.min ||\n      maxValue > axisConfig.axisRange.max) {\n      return false;\n    }\n\n    domain = scale.setDomain([minValue, maxValue]).getDomain();\n    axisConfig.visibleMin = domain[0];\n    axisConfig.visibleMax = domain[1];\n\n    axis.clearReferenceInfo();\n\n    axis._parseReferenceVisuals();\n\n    axis.fireEvent('visiblerangeset', { minValue, maxValue });\n    axis.asyncDraw();\n\n    return true;\n  }\n\n  /**\n   * will call api for parsing reference visuals\n  */\n  _parseReferenceVisuals () {\n    this.config.drawPlotlines && this._parseCategoryPlotLine();\n  }\n\n  /**\n   * will clear the reference visuals\n  */\n  clearReferenceInfo () {\n    let axisConfig = this.config;\n    axisConfig.referenceInfo = [];\n  }\n  _setAxisRange (data) {\n    var min = data.min,\n      max = data.max,\n      axisConfig = this.config,\n      axisRange = axisConfig.axisRange,\n      divGap = data.divGap,\n      step;\n\n    if (min > max) {\n      return;\n    }\n\n    step = (max - min) / (axisConfig.categoryNumDivLines + 1);\n\n    this.getScale().setDomain([min, max]);\n    axisConfig.ticks = range(min, max, step).concat(max);\n    axisConfig._allTicks = axisConfig.ticks.slice();\n    axisRange.min = min;\n    axisRange.max = max;\n    axisRange.tickInterval = divGap || step;\n\n    this.setVisibleConfig(axisRange.min, axisRange.max);\n  }\n}\n\nPolar.prototype.setTickValues = setTickValues;\nPolar.prototype.shiftLabels = shiftLabels;\nPolar.prototype._createContainer = _createContainer;\nPolar.prototype.setAxisPadding = setAxisPadding;\nPolar.prototype.getPixel = getPixel;\nPolar.prototype.getLabel = getLabel;\n\nexport default Polar;\n","import fadeInAtAxis from './polar-axis.animation';\nexport default {\n  'initial.axis.polar': function () {\n    return {\n      'path.appearing': fadeInAtAxis,\n      'text.appearing': fadeInAtAxis\n    };\n  }\n};\n","import polarCanvas from '../_internal/components/canvases/polar-canvas';\nimport axisRefVisualPolar from '@fusioncharts/core/src/axis-ref-visuals/axis-ref-polar-component';\n// import axisRefVisual from '../components/axis-ref-visuals-polar';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n\n/**\n * polarCanvas factory creates polarCanvas for radar chart\n *\n * @export\n * @param {any} chart chartAPI\n */\nexport default function (chart) {\n  let pCanvas;\n  componentFactory(chart, polarCanvas, 'canvas', chart.config.showVolumeChart ? 2 : 1);\n  pCanvas = chart.getChildren('canvas');\n  for (let i = 0, len = pCanvas.length; i < len; i++) {\n    pCanvas[i].configure();\n    componentFactory(pCanvas[i], axisRefVisualPolar, 'axisRefVisualPolar');\n  }\n}\n","import Canvas from '@fusioncharts/charts/src/_internal/components/canvases/canvas';\nimport { polarToCartesian } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport { pluckNumber, pluck, convertColor } from '@fusioncharts/core/src/lib';\n\nclass PolarCanvas extends Canvas {\n  /**\n   * Returns name of component\n   *\n   * @return {any}\n   * @memberof polarCanvas\n   */\n  getName () {\n    return 'polarCanvas';\n  }\n\n  /**\n   * Returns type of component\n   *\n   * @return {any}\n   * @memberof polarCanvas\n   */\n  getType () {\n    return 'canvas';\n  }\n\n  configureAttributes () {\n    super.configureAttributes();\n    let canvas = this,\n      canvasConfig = canvas.config,\n      chart = canvas.getFromEnv('chart'),\n      JSONData = chart.getFromEnv('dataSource'),\n      FCChartObj = JSONData.chart,\n      colorM = chart.getFromEnv('color-manager');\n\n    canvasConfig.radarBorderColor = convertColor(pluck(FCChartObj.radarbordercolor,\n      colorM.getColor('divLineColor')),\n    pluckNumber(FCChartObj.radarborderalpha, 100));\n    canvasConfig.radarFillColor = convertColor(pluck(FCChartObj.radarfillcolor,\n      colorM.getColor('altHGridColor')),\n    pluckNumber(FCChartObj.radarfillalpha, colorM.getColor('altHGridAlpha')));\n    canvasConfig.radarBorderThickness = pluckNumber(FCChartObj.radarborderthickness, 2);\n    canvasConfig.showRadarBorder = pluckNumber(FCChartObj.showradarborder, 1);\n  }\n\n  /**\n   * Draws group and canvas\n   *\n   * @memberof polarCanvas\n   */\n  draw () {\n    this.createGroup();\n    this.drawCanvas();\n  }\n\n  /**\n   * Draws the radar border and background\n   *\n   * @memberof polarCanvas\n   */\n  drawCanvas () {\n    let canvas = this,\n      canvasConfig = this.config,\n      chart = canvas.getFromEnv('chart'),\n      chartConfig = chart.config,\n      axis = chart.getChildren('xAxis')[0],\n      animationManager = chart.getFromEnv('animationManager'),\n      radarBorderContainerDummy = canvas.getContainer('radarBorderContainer'),\n      radarBorderContainer,\n      canvasGroup = canvas.getContainer('canvasGroup'),\n      axisConfig = axis.config,\n      radarBorderAttrObj = {\n        stroke: canvasConfig.radarBorderColor,\n        fill: canvasConfig.radarFillColor,\n        'stroke-width': canvasConfig.radarBorderThickness,\n        path: []\n      },\n      i,\n      category = axisConfig.tickValues.tickValue,\n      min,\n      max,\n      theta,\n      axisScale = axis.getScale(),\n      radiusXY,\n      radius,\n      radBorderDummy = canvas.getGraphicalElement('radarBorder'),\n      radarBorder,\n      centerX = axisConfig.axisDimention.centerX,\n      centerY = axisConfig.axisDimention.centerY;\n\n    radius = pluckNumber(axisConfig.radius, 0);\n    min = 0;\n    max = category ? category.length - 1 : 0;\n\n    canvasConfig.canvasLeft = canvasConfig.canvasLeft || chartConfig.canvasLeft;\n    canvasConfig.canvasTop = canvasConfig.canvasTop || chartConfig.canvasTop;\n    canvasConfig.canvasWidth = canvasConfig.canvasWidth || chartConfig.canvasWidth;\n    canvasConfig.canvasHeight = canvasConfig.canvasHeight || chartConfig.canvasHeight;\n\n    if (canvasConfig.showRadarBorder !== 0) {\n      radarBorderAttrObj.path.push('M');\n      for (i = min; i <= max; i++) {\n        theta = axisScale.getRangeValue(i);\n        radiusXY = polarToCartesian(radius, theta);\n        radiusXY.x += centerX;\n        radiusXY.y += centerY;\n        radarBorderAttrObj.path.push(radiusXY.x, radiusXY.y, 'L');\n      }\n      radarBorderAttrObj.path.pop();\n      radarBorderAttrObj.path.push('Z');\n    }\n\n    radarBorderContainer = animationManager.setAnimation({\n      el: radarBorderContainerDummy || 'group',\n      attr: {\n        name: 'radarBorderContainer'\n      },\n      container: canvasGroup,\n      component: canvas,\n      label: 'group'\n    });\n\n    if (!radarBorderContainerDummy) {\n      canvas.addContainer('radarBorderContainer', radarBorderContainer);\n    }\n    // Create/Reuse rabBorder0\n    radarBorder = animationManager.setAnimation({\n      el: radBorderDummy || 'path',\n      attr: radarBorderAttrObj,\n      container: radarBorderContainer,\n      component: axis,\n      label: 'path'\n    });\n\n    if (!radBorderDummy) {\n      canvas.addGraphicalElement('radarBorder', radarBorder);\n    }\n    // axis.config.radarBorder = radarBorder;\n  }\n}\n\nexport default PolarCanvas;\n","import AxisRefComponent from './axis-ref-component';\nimport { getCoordinates } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport { pluckNumber } from '../lib';\nimport { addDep } from '../dependency-manager';\nimport axisRefPolarAnimation from './axis-ref-polar.animation';\n\nconst M = 'M',\n  Z = 'Z',\n  L = 'L',\n  getRadius = (axis, point) => {\n    let scale = axis.getScale(),\n      range = axis.config.axisRange;\n\n    return Math.abs(scale.getRangeValue(point) - scale.getRangeValue(range.min));\n  };\naddDep({\n  name: 'axisRefPolarAnimation',\n  type: 'animationRule',\n  extension: axisRefPolarAnimation\n});\nclass AxisRefPolarVisual extends AxisRefComponent {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'axisRefVisuals';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'axisRefVisualsPolar';\n  }\n  /**\n   * Decides the type of line to draw\n   *\n   * @param {any} lineInfo\n   * @param {any} axis\n   * @memberof AxisRefPolarVisual\n   */\n  createLine (lineInfo, axis) {\n    let axisRef = this;\n    if (axis.getName() === 'polarCategory') {\n      return axisRef.createNormalLine(lineInfo, axis);\n    } else if (axis.getName() === 'numeric') {\n      return axisRef.createRadialLine(lineInfo, axis);\n    }\n  }\n\n  /**\n   * Creates radial line\n   *\n   * @param {any} lineInfo\n   * @param {any} axis\n   * @returns {any}\n   * @memberof AxisRefPolarVisual\n   */\n  createRadialLine (lineInfo, axis) {\n    let axisRef = this,\n      xAxis = axisRef.getFromEnv('xAxis')[0],\n      xAxisConfig = xAxis.config,\n      category = xAxisConfig.tickValues.tickValue,\n      yAxis = axis,\n      axisRefConfig = axisRef.config,\n      containersArr = axisRefConfig.containers,\n      container = containersArr[lineInfo.layer],\n      animationManager = axisRef.getFromEnv('animationManager'),\n      toolTipController = axisRef.getFromEnv('toolTipController'),\n      i,\n      key,\n      min,\n      max,\n      radius,\n      lineAttr = lineInfo.attr,\n      pathAr = [M],\n      coordinate,\n      compId = yAxis.getId(),\n      eleId = lineInfo.id || lineInfo.from,\n      lineEleId = compId + '_' + eleId,\n      handlers = lineInfo.handlers,\n      element = axisRef.getGraphicalElement(lineEleId);\n\n    radius = getRadius(yAxis, lineInfo.from);\n    min = 0;\n    max = category ? category.length - 1 : 0;\n\n    for (i = min; i <= max; i++) {\n      coordinate = getCoordinates({\n        radius: radius,\n        theta: i\n      }, xAxis);\n      pathAr.push(coordinate.x, coordinate.y, L);\n    }\n    pathAr.pop();\n    pathAr.push(Z);\n\n    lineAttr.path = pathAr;\n\n    element = axisRef.addGraphicalElement(lineEleId, animationManager.setAnimation({\n      container,\n      el: element || 'path',\n      attr: lineAttr,\n      component: axisRef,\n      label: 'path'\n    }));\n\n    if (lineInfo.toolText) {\n      toolTipController.enableToolTip(element, lineInfo.toolText);\n    } else {\n      toolTipController.disableToolTip(element);\n    }\n\n    for (key in handlers) {\n      if (handlers.hasOwnProperty(key)) {\n        element.on(key, handlers[key].bind(axis));\n      }\n    }\n    return [lineEleId];\n  }\n\n  /**\n   * Draws normal line\n   *\n   * @param {any} lineInfo\n   * @param {any} axis\n   * @memberof AxisRefPolarVisual\n   */\n  createNormalLine (lineInfo, axis) {\n    let axisRef = this,\n      axisRefConfig = axisRef.config,\n      axisConfig = axis.config,\n      radius = pluckNumber(axisConfig.radius, 0),\n      pathAr = [M],\n      containersArr = axisRefConfig.containers,\n      container = containersArr[lineInfo.layer],\n      animationManager = axisRef.getFromEnv('animationManager'),\n      toolTipController = axisRef.getFromEnv('toolTipController'),\n      coordinate,\n      key,\n      centerX = axisConfig.axisDimention.centerX,\n      centerY = axisConfig.axisDimention.centerY,\n      compId = axis.getId(),\n      eleId = lineInfo.id || lineInfo.from,\n      lineEleId = compId + '_' + eleId,\n      handlers = lineInfo.handlers,\n      element = axisRef.getGraphicalElement(lineEleId);\n\n    pathAr.push(centerX, centerY, L);\n    coordinate = getCoordinates({\n      radius: radius,\n      theta: lineInfo.from\n    }, axis);\n\n    pathAr.push(coordinate.x, coordinate.y);\n    lineInfo.attr.path = pathAr;\n\n    element = axisRef.addGraphicalElement(lineEleId, animationManager.setAnimation({\n      container,\n      el: element || 'path',\n      attr: lineInfo.attr,\n      component: axisRef,\n      label: 'path'\n    }));\n\n    if (lineInfo.toolText) {\n      toolTipController.enableToolTip(element, lineInfo.toolText);\n    } else {\n      toolTipController.disableToolTip(element);\n    }\n\n    for (key in handlers) {\n      if (handlers.hasOwnProperty(key)) {\n        element.on(key, handlers[key].bind(axis));\n      }\n    }\n    return [lineEleId];\n  }\n  // eslint-disable-next-line\n  createBand () {\n    // super.createBand(x, y);\n    return [];\n  }\n}\n\nexport default AxisRefPolarVisual;\n","import fadeInAtAxis from '../axis/polar-axis.animation';\nexport default {\n  'initial.axis.axisRefVisualsPolar': function () {\n    return {\n      'path.appearing': fadeInAtAxis,\n      'text.appearing': fadeInAtAxis\n    };\n  }\n};\n","import Chord from '@fusioncharts/powercharts/src/chart/chord';\nexport default Chord;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport CommonAPI from '@fusioncharts/charts/src/chart/_internal/commonchartapi';\nimport arrayHasContent from '@fusioncharts/utils/src/type/array-has-content';\nimport isObject from '@fusioncharts/utils/src/type/is-object';\nimport legendItemFactory from '@fusioncharts/charts/src/factories/chord-legend';\nimport nodelinkManagerFactor from '../../factories/node-link-manager';\nimport LinearScale from '@fusioncharts/utils/src/scales/linear';\nimport {\n  parseUnsafeString,\n  pluck,\n  convertColor,\n  getDarkColor,\n  pluckNumber,\n  UNDEF,\n  NORMAL,\n  pluckFontSize,\n  BOLD,\n  hashify,\n  BLANKSTRING\n} from '@fusioncharts/core/src/lib';\nimport equal from '@fusioncharts/utils/src/string/equal';\nimport safeMax from '@fusioncharts/utils/src/array/safe-max';\nimport NodeLinkManager from '../../dataset/chord/node-link-manager';\nimport { _manageLegendSpace } from '@fusioncharts/charts/src/chart/_internal/legend-spacemanager';\n\nconst CHART_STR = 'Chord',\n  POST = 'post',\n  PRE = 'pre',\n  DEFAULT_PALETTE_COLOR = [\n    '1E77B4',\n    'FF7F0E',\n    '2BA02C',\n    'D62728',\n    '9466BD',\n    '8C564B',\n    'E376C2',\n    '7F7F7F',\n    'BCBD22',\n    '17BECF'\n  ],\n  DEACTIVE_COLOR = '#c4c4c4',\n  DEFAULT_BG_COLOR = 'FFFFFF,FFFFFF',\n  TANGENTIAL = 'tangential',\n  OUTSIDE = 'outside',\n  INSIDE = 'inside',\n  DEF_FONT_FAMILY = 'Verdana,sans',\n  ITALIC = 'italic',\n  NODE_LABEL_COLOR = '#5F5F5F',\n  LABEL_POSITIONS = [TANGENTIAL, OUTSIDE, INSIDE],\n  isValidLink = obj => isObject(obj) &&\n    parseUnsafeString(obj.from) &&\n    parseUnsafeString(obj.to),\n  isValidNode = (obj, nodeMap) => isObject(obj) && parseUnsafeString(obj.label) && nodeMap[obj.label];\n\n/**\n * Creates radar class\n * @class\n */\nclass Chord extends CommonAPI {\n  constructor (id) {\n    super(id);\n    const chart = this;\n    chart.deregisterFactory('canvas');\n    chart.registerFactory('legend', legendItemFactory);\n    chart.registerFactory('nodelinkManager', nodelinkManagerFactor);\n    chart.defaultPaletteOptions = {\n      // Store colors now\n      paletteColors:\n        [\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR\n        ],\n      bgColor: [\n        DEFAULT_BG_COLOR,\n        DEFAULT_BG_COLOR,\n        DEFAULT_BG_COLOR,\n        DEFAULT_BG_COLOR,\n        DEFAULT_BG_COLOR\n      ]\n    };\n  }\n\n  /**\n   * Sets the default configuration\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    const config = this.config;\n    // for skipping drawing of canvas\n    config.skipCanvasDrawing = true;\n    config.friendlyName = CHART_STR;\n    config.nodes = {};\n    config.mode = POST;\n    config.isPost = true;\n    config.nodeSpacing = 2;\n    config.minNodeSize = 0.01;\n    config.startingAngle = 0;\n    config.links = {};\n    config.linksOrder = [];\n    config.nodesOrder = [];\n    config.totalAngle = 360;\n    config.clockwise = 1;\n    config.nodeLabelGap = 10;\n    config.nodeLabelPosition = 10;\n    config.nodeThickness = 12;\n    // config.total = 0;\n    config.nodeLinkPadding = 3;\n    config.linkAlpha = 70;\n    config.linkBorderAlpha = 100;\n    config.linkBorderThickness = 1;\n    config.nodeHoverAlpha = 100;\n    config.linkHoverAlpha = 100;\n    config.nodeHoverColor = UNDEF;\n    config.linkHoverColor = UNDEF;\n    config.showNodeLabels = 1;\n    config.showNodeBorder = 1;\n    config.showLinkBorder = 1;\n    config.nodeBorderColor = UNDEF;\n    config.nodeBorderThickness = 1;\n    config.nodeBorderDashed = 0;\n    config.nodeBorderDashedLen = 2;\n    config.nodeBorderDashedGap = 1;\n    config.nodeBorderAlpha = 100;\n    config.showLinkValueOnHover = 1;\n    config.nodeAlpha = 70;\n    config.nodeLabelPosition = TANGENTIAL;\n    config.nodeLabelFont = DEF_FONT_FAMILY;\n    config.nodeLabelFontSize = 12;\n    config.nodeLabelFontBold = NORMAL;\n    config.nodeLabelFontItalic = NORMAL;\n    config.highlightEffect = 1;\n    config.enableToggle = 1;\n    config.chordradius = 100;\n    config.nodeLabelColor = NODE_LABEL_COLOR;\n    config.unfocussedAlpha = 35;\n    config.deactiveNodeColor = DEACTIVE_COLOR;\n    config.sortOrder = UNDEF;\n    config.tooltipsepchar = BLANKSTRING;\n    config.linkColorByDominance = 1;\n    config.useEllipsesOnOverflow = 1;\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    let chart = this,\n      config = chart.config,\n      { nodes, links } = config,\n      nodesArr = config.nodesOrder,\n      linksArr = config.linksOrder,\n      connectors = config.connectors = dataObj.links,\n      len = connectors.length,\n      numberFormatter = chart.getFromEnv('number-formatter'),\n      chartAttrs = dataObj.chart,\n      colorM = chart.getFromEnv('color-manager'),\n      i;\n\n    config.mode = chartAttrs.mode === PRE ? PRE : POST;\n    config.isPost = equal(config.mode, POST);\n\n    // Parse chart attributes\n    config.minNodeSize = pluckNumber(chartAttrs.minnodesize, config.minNodeSize);\n    config.startingAngle = pluckNumber(chartAttrs.startingangle, config.startingAngle);\n    config.totalAngle = pluckNumber(chartAttrs.totalangle, config.totalAngle);\n    config.nodeLabelGap = pluckNumber(chartAttrs.nodelabelpadding, config.nodeLabelGap);\n    config.nodeThickness = pluckNumber(chartAttrs.nodethickness, config.nodeThickness);\n    config.nodeSpacing = pluckNumber(chartAttrs.nodespacing, config.nodeSpacing);\n    config.clockwise = pluckNumber(chartAttrs.clockwise, config.clockwise);\n    config.nodeLinkPadding = pluckNumber(chartAttrs.nodelinkpadding, config.nodeLinkPadding);\n    config.linkAlpha = pluckNumber(chartAttrs.linkalpha, config.linkAlpha);\n    config.linkBorderAlpha = pluckNumber(chartAttrs.linkborderalpha, config.linkBorderAlpha);\n    config.linkBorderThickness = pluckNumber(chartAttrs.linkborderthickness, config.linkBorderThickness);\n    config.nodeHoverAlpha = pluckNumber(chartAttrs.nodehoveralpha, config.nodeHoverAlpha);\n    config.linkHoverAlpha = pluckNumber(chartAttrs.linkhoveralpha, config.linkHoverAlpha);\n    config.showLinkValueOnHover = pluckNumber(chartAttrs.showlinkvalueonhover, config.showLinkValueOnHover);\n    // config.nodeHoverColor = pluck(chartAttrs.nodehovercolor, config.nodeHoverColor);\n    // config.linkHoverColor = pluck(chartAttrs.linkhovercolor, config.linkHoverColor);\n    config.showNodeLabels = pluckNumber(chartAttrs.shownodelabels, config.showNodeLabels);\n    config.showNodeBorder = pluckNumber(chartAttrs.shownodeborder, config.showNodeBorder);\n    config.showLinkBorder = pluckNumber(chartAttrs.showlinkborder, config.showLinkBorder);\n    config.nodeBorderColor = pluck(chartAttrs.nodebordercolor, config.nodeBorderColor);\n    config.nodeBorderThickness = pluckNumber(chartAttrs.nodeborderthickness, config.nodeBorderThickness);\n    config.nodeBorderDashed = pluckNumber(chartAttrs.nodeborderdashed, config.nodeBorderDashed);\n    config.nodeBorderDashedLen = pluckNumber(chartAttrs.nodeborderdashedlen, config.nodeBorderDashedLen);\n    config.nodeBorderDashedGap = pluckNumber(chartAttrs.nodeborderdashedgap, config.nodeBorderDashedGap);\n    config.nodeBorderAlpha = pluckNumber(chartAttrs.nodeborderalpha, config.nodeBorderAlpha);\n    config.nodeAlpha = pluckNumber(chartAttrs.nodealpha, config.nodeAlpha);\n    config.nodeLabelPosition = LABEL_POSITIONS.includes(chartAttrs.nodelabelposition) ? chartAttrs.nodelabelposition : config.nodeLabelPosition;\n    config.nodeLabelFont = pluck(chartAttrs.nodelabelfont, chartAttrs.basefont, config.nodeLabelFont);\n    config.nodeLabelFontSize = pluckFontSize(chartAttrs.nodelabelfontsize,\n      this.computeFontSize(chartAttrs.basefontsize), config.nodeLabelFontSize);\n    config.nodeLabelFontBold = pluckNumber(chartAttrs.nodelabelfontbold, 0) ? BOLD : NORMAL;\n    config.nodeLabelColor = pluck(chartAttrs.nodelabelcolor, chartAttrs.basefontcolor, config.nodeLabelColor);\n    config.nodeLabelFontItalic = pluckNumber(chartAttrs.nodelabelfontitalic, 0) ? ITALIC : NORMAL;\n    config.highlightEffect = pluckNumber(chartAttrs.highlighteffect, config.highlightEffect);\n    config.enableToggle = pluckNumber(chartAttrs.enabletoggle, config.enableToggle);\n    config.chordradius = Math.max(pluckNumber(chartAttrs.chordradius, config.chordradius), 0);\n    config.unfocussedAlpha = pluckNumber(chartAttrs.unfocussedalpha, config.unfocussedAlpha);\n    config.deactiveNodeColor = pluck(chartAttrs.deactivenodecolor, config.deactiveNodeColor);\n    config.sortOrder = pluck(chartAttrs.sortorder, config.sortOrder);\n    config.linkColorByDominance = pluckNumber(chartAttrs.linkcolorbydominance, config.linkColorByDominance);\n    config.textOutline = pluckNumber(chartAttrs.textoutline, 0);\n    config.useEllipsesOnOverflow = pluckNumber(chartAttrs.useellipsesonoverflow, config.useEllipsesOnOverflow);\n    config.datalabelStyle = {\n      'font-size': config.nodeLabelFontSize,\n      'font-family': config.nodeLabelFont,\n      'font-weight': config.nodeLabelFontBold,\n      'font-style': config.nodeLabelFontItalic\n    };\n\n    // when labels are kept inside the there is no node label gap\n    if (config.nodeLabelPosition === INSIDE) {\n      config.nodeLabelGap = 0;\n    }\n\n    // creating valid nodes link\n    for (i = 0; i < len; ++i) {\n      if (isValidLink(connectors[i])) {\n        let connector = connectors[i],\n          { from, to, value, tooltext } = connector,\n          sanitisedValue = safeMax([numberFormatter.getCleanValue(value), 0], Number),\n          key,\n          link;\n        from = parseUnsafeString(from);\n        to = parseUnsafeString(to);\n        key = [from, to].sort().toString();\n        if (!nodes[from]) {\n          nodes[from] = {\n            index: nodesArr.push(from) - 1,\n            total: 0,\n            adjustedTotal: 0,\n            nodeCovered: 0,\n            label: from,\n            linkedLinks: [],\n            scale: new LinearScale(),\n            active: true,\n            nodeLabelGap: config.nodeLabelGap,\n            unfocussed: false,\n            hovered: false,\n            toolTipSepChar: config.tooltipsepchar,\n            showToolTip: config.showToolTip\n          };\n        }\n        if (!nodes[to]) {\n          nodes[to] = {\n            index: nodesArr.push(to) - 1,\n            total: 0,\n            adjustedTotal: 0,\n            nodeCovered: 0,\n            label: to,\n            linkedLinks: [],\n            scale: new LinearScale(),\n            active: true,\n            nodeLabelGap: config.nodeLabelGap,\n            unfocussed: false,\n            hovered: false,\n            toolTipSepChar: config.tooltipsepchar,\n            showToolTip: config.showToolTip\n          };\n        }\n        if (!links[key]) {\n          link = links[key] = {\n            key,\n            points: [],\n            dominantNode: [],\n            subservientNode: [],\n            subservientFlowDataValue: [],\n            dominantFlowDataValue: [],\n            dominantNodeColor: [],\n            subservientNodeColor: [],\n            index: linksArr.push(key) - 1,\n            linkedNodes: config.isPost ? [to, from] : [from, to],\n            tooltip: {},\n            visible: true,\n            tooltext: tooltext,\n            unfocussed: false,\n            hovered: false,\n            focussedState: {},\n            unfocussedState: {},\n            normalState: {},\n            sanitisedValue: 0,\n            toolTipSepChar: config.tooltipsepchar,\n            showToolTip: config.showToolTip\n          };\n          nodes[from].linkedLinks.push(key);\n          nodes[to].linkedLinks.push(key);\n          link.alpha = pluckNumber(connector.alpha, config.linkAlpha);\n          link.hoverAlpha = pluckNumber(connector.hoveralpha, config.linkHoverAlpha);\n          link.borderAlpha = pluckNumber(connector.borderalpha, config.linkBorderAlpha);\n          link.tooltext = pluck(connector.tooltext, config.linktooltext, UNDEF);\n          link.showBorder = config.showLinkBorder;\n          link.borderThickness = config.linkBorderThickness;\n          link.unfocussedAlpha = pluckNumber(connector.unfocussedAlpha, config.unfocussedAlpha);\n          link.style = config.datalabelStyle;\n        } else {\n          link = links[key];\n        }\n\n        nodes[config.isPost ? to : from].total += sanitisedValue;\n        // config.total += sanitisedValue;\n        link.tooltip[`${from} to ${to}`] = {\n          value: numberFormatter.dataLabels(sanitisedValue)\n        };\n        link.showLinkValueOnHover = config.showLinkValueOnHover;\n        link[config.isPost ? to : from] = sanitisedValue;\n        links[key].sanitisedValue += sanitisedValue;\n      }\n    }\n\n    for (const key in links) {\n      if (links.hasOwnProperty(key) && links[key].sanitisedValue === 0) {\n        delete links[key];\n        config.linksOrder = linksArr = linksArr.filter(link => link !== key);\n        key.split(',').forEach(label => {\n          nodes[label].linkedLinks =\n            nodes[label].linkedLinks.filter(linkedLink => linkedLink !== key);\n        });\n      }\n    }\n\n    // copying all the node level configurations in valid nodes\n    if (arrayHasContent(dataObj.nodes)) {\n      dataObj.nodes.forEach(node => {\n        if (isValidNode(node, nodes)) {\n          let label = parseUnsafeString(node.label);\n          nodes[label] = Object.assign({}, node, nodes[label]);\n        }\n      });\n    }\n\n    // require good name and value\n    if (config.sortOrder === 'ascending') {\n      nodesArr.sort((key1, key2) => nodes[key1].total - nodes[key2].total);\n    } else if (config.sortOrder === 'descending') {\n      nodesArr.sort((key1, key2) => nodes[key2].total - nodes[key1].total);\n    }\n\n    // Parse node cosmetics\n    nodesArr.forEach((label, index) => {\n      let node = nodes[label],\n        resolvedStrokeWidth = (config.showNodeBorder ? config.nodeBorderThickness : 0) || 0;\n      node.index = index;\n      node.label = parseUnsafeString(node.label);\n      node.alpha = pluckNumber(node.alpha, config.nodeAlpha);\n      node.borderAlpha = pluckNumber(node.borderalpha, config.nodeBorderAlpha);\n      node.hoverAlpha = pluckNumber(node.hoveralpha, config.nodeHoverAlpha);\n      node.borderDashedLen = pluckNumber(node.borderdashedlen, config.nodeBorderDashedLen);\n      node.borderDashedGap = pluckNumber(node.borderdashedgap, config.nodeBorderDashedGap);\n      node.borderDashed = pluckNumber(node.borderdashed, config.nodeBorderDashed) ? [node.borderDashedLen, node.borderDashedGap] : 'none';\n\n      node.rawColor = pluck(node.color, colorM.getPlotColor(index));\n      node.unfocussedAlpha = pluckNumber(node.unfocussedalpha, config.unfocussedAlpha);\n      node.borderColor = pluck(node.bordercolor, config.nodeBorderColor, getDarkColor(node.rawColor, 80));\n      node.tooltext = pluck(node.tooltext, chartAttrs.plottooltext, UNDEF);\n\n      node.color = hashify(node.rawColor);\n      node.labelPosition = pluck(node.labelposition, config.nodeLabelPosition);\n      node.nodeLabelGap = config.nodeLabelGap;\n      // Export error when textPaths are used\n      if (pluckNumber(chartAttrs.exportenabled) && (node.labelPosition === OUTSIDE || node.labelPosition === INSIDE)) {\n        node.showLabel = 0;\n      } else {\n        node.showLabel = pluckNumber(node.showlabel, config.showNodeLabels);\n      }\n      node.showBorder = config.showNodeBorder;\n      node.labelColor = pluck(node.labelcolor, config.nodeLabelColor);\n      node.style = config.datalabelStyle;\n\n      node.focussedState = {\n        fill: convertColor(node.rawColor, node.hoverAlpha),\n        stroke: convertColor(node.borderColor, node.borderAlpha),\n        'stroke-width': resolvedStrokeWidth,\n        'stroke-dasharray': node.borderDashed\n      };\n      node.normalState = {\n        fill: convertColor(node.rawColor, node.alpha),\n        stroke: convertColor(node.borderColor, node.borderAlpha),\n        'stroke-width': resolvedStrokeWidth,\n        'stroke-dasharray': node.borderDashed\n      };\n      node.unfocussedState = {\n        fill: convertColor(node.rawColor, node.unfocussedAlpha),\n        stroke: convertColor(node.borderColor, node.unfocussedAlpha),\n        'stroke-width': resolvedStrokeWidth,\n        'stroke-dasharray': node.borderDashed\n      };\n      node.deactiveState = {\n        fill: config.deactiveNodeColor,\n        stroke: config.deactiveNodeColor,\n        'stroke-width': resolvedStrokeWidth,\n        'stroke-dasharray': node.borderDashed\n      };\n      node.linkedLinks.forEach(key => {\n        const startsWithRegex = new RegExp(`^${node.label}`),\n          tooltip = links[key].tooltip;\n        for (let toolKey in tooltip) {\n          if (tooltip.hasOwnProperty(toolKey) && startsWithRegex.test(toolKey)) {\n            tooltip[toolKey].color = node.color;\n          }\n        }\n      });\n    });\n    linksArr.forEach(key => {\n      let link = links[key],\n        [from, to] = link.linkedNodes;\n\n      if (from === to) {\n        link.dominantNode.push(from);\n        link.subservientNode.push(from);\n        link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n        link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n        link.dominantNodeColor.push(nodes[from].color);\n        link.subservientNodeColor.push(nodes[from].color);\n        // for equal contributing nodes\n      } if (link[to] === link[from]) {\n        link.dominantNode.push(from, to);\n        link.subservientNode.push(to, from);\n        link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[to]));\n        link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n        link.dominantNodeColor.push(nodes[from].color, nodes[to].color);\n        link.subservientNodeColor.push(nodes[to].color, nodes[from].color);\n      } else {\n        if (config.isPost) {\n          if ((link[to] || 0) > (link[from] || 0)) {\n            config.linkColorByDominance ? link.dominantNode.push(to) : link.dominantNode.push(from);\n            config.linkColorByDominance ? link.subservientNode.push(from) : link.subservientNode.push(to);\n            config.linkColorByDominance ? link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[to])) : link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n            config.linkColorByDominance ? link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[from])) : link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[to]));\n            config.linkColorByDominance ? link.dominantNodeColor.push(nodes[to].color) : link.dominantNodeColor.push(nodes[from].color);\n            config.linkColorByDominance ? link.subservientNodeColor.push(nodes[from].color) : link.subservientNodeColor.push(nodes[to].color);\n          } else {\n            config.linkColorByDominance ? link.dominantNode.push(from) : link.dominantNode.push(to);\n            config.linkColorByDominance ? link.subservientNode.push(to) : link.subservientNode.push(from);\n            config.linkColorByDominance ? link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from])) : link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[to]));\n            config.linkColorByDominance ? link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[to])) : link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n            config.linkColorByDominance ? link.dominantNodeColor.push(nodes[from].color) : link.dominantNodeColor.push(nodes[to].color);\n            config.linkColorByDominance ? link.subservientNodeColor.push(nodes[to].color) : link.subservientNodeColor.push(nodes[from].color);\n          }\n        } else {\n          if ((link[to] || 0) > (link[from] || 0)) {\n            config.linkColorByDominance ? link.dominantNode.push(from) : link.dominantNode.push(to);\n            config.linkColorByDominance ? link.subservientNode.push(to) : link.subservientNode.push(from);\n            config.linkColorByDominance ? link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from])) : link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[to]));\n            config.linkColorByDominance ? link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[to])) : link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n            config.linkColorByDominance ? link.dominantNodeColor.push(nodes[from].color) : link.dominantNodeColor.push(nodes[to].color);\n            config.linkColorByDominance ? link.subservientNodeColor.push(nodes[to].color) : link.subservientNodeColor.push(nodes[from].color);\n          } else {\n            config.linkColorByDominance ? link.dominantNode.push(to) : link.dominantNode.push(from);\n            config.linkColorByDominance ? link.subservientNode.push(from) : link.subservientNode.push(to);\n            config.linkColorByDominance ? link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[to])) : link.dominantFlowDataValue.push(numberFormatter.dataLabels(link[from]));\n            config.linkColorByDominance ? link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[from])) : link.subservientFlowDataValue.push(numberFormatter.dataLabels(link[to]));\n            config.linkColorByDominance ? link.dominantNodeColor.push(nodes[to].color) : link.dominantNodeColor.push(nodes[from].color);\n            config.linkColorByDominance ? link.subservientNodeColor.push(nodes[from].color) : link.subservientNodeColor.push(nodes[to].color);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  static getName () {\n    return 'Chord';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Chord';\n  }\n\n  /**\n   * This method return the dataset definations for this charts\n   * @return {string} dataset defination\n   */\n  getDSdef () {\n    return NodeLinkManager;\n  }\n\n  /**\n   * function to calculate and allote space for legend\n   */\n  _manageLegendSpace () {\n    _manageLegendSpace.call(this);\n  }\n\n  _spaceManager () {\n    let chart = this,\n      config = chart.config,\n      height,\n      width,\n      cx,\n      cy,\n      nodesLinkManager = chart.getChildren('node-link-manager')[0],\n      maxNodeDim,\n      maxRadius,\n      minRadius,\n      maxSpace;\n\n    config.showLegend && chart._manageLegendSpace();\n    chart._manageChartMenuBar(config.availableHeight * 0.6);\n    chart.allocateDimensionOfChartMenuBar();\n    chart.config.showLegend && chart.getChildren('legend') && chart.getChildren('legend')[0].postSpaceManager();\n\n    height = config.canvasHeight;\n    width = config.canvasWidth;\n    cx = config.canvasLeft + width / 2;\n    cy = config.canvasTop + height / 2;\n    maxRadius = Math.min(height, width) / 2;\n    minRadius = maxRadius * 0.3;\n    maxSpace = maxRadius - minRadius - config.nodeLabelGap;\n\n    maxNodeDim = nodesLinkManager._manageSpace({\n      maxSpace\n    });\n\n    chart.config.cx = cx;\n    chart.config.cy = cy;\n\n    const nodeOuterRadius = Math.max((maxRadius - maxNodeDim.width - config.nodeLabelGap) * config.chordradius / 100, minRadius),\n      nodeInnerRadius = nodeOuterRadius - config.nodeThickness,\n      ribbonRadius = nodeInnerRadius - config.nodeLinkPadding;\n\n    config.ribbonRadius = ribbonRadius;\n\n    nodesLinkManager.setDimension({ nodeOuterRadius, nodeInnerRadius, ribbonRadius });\n    nodesLinkManager.setTranslation(cx, cy);\n  }\n  /**\n   * Function to check if the chart has the proper data or not\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidData () {\n    const chartInstance = this.getFromEnv('chartInstance');\n\n    // Checking if the chart has proper data\n    if (!arrayHasContent(this.getFromEnv('dataSource').links)) {\n      chartInstance.__state.dataReady = false;\n      chartInstance.jsVars.hasNativeMessage = true;\n      chartInstance.jsVars.drawCount += 1;\n\n      return true;\n    }\n    return !this;\n  }\n\n  _checkInvalidSpecificData () {\n    // temp code\n    return !this;\n  }\n}\nexport default Chord;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport LegendClass from '../_internal/components/legend/discrete';\n\nexport default function (chart) {\n  let legend,\n    count = chart.config.showLegend ? 1 : 0;\n\n  componentFactory(chart, LegendClass, 'legend', count, [{}]);\n\n  legend = chart.getChildren('legend');\n  if (legend && legend[0] && !legend[0].getState('removed')) {\n    chart.addToEnv('legend', legend[0]);\n  } else {\n    chart.deleteFromEnv('legend');\n  }\n}\n","import { componentFactory } from '@fusioncharts/core/src/lib/index.js';\nimport NodeLinkManager from '../dataset/chord/node-link-manager.js';\nexport default function (chart) {\n  let config = chart.config;\n  componentFactory(chart, NodeLinkManager, 'node-link-manager', 1, [{\n    nodes: config.nodes,\n    links: config.links,\n    nodesOrder: config.nodesOrder,\n    linksOrder: config.linksOrder,\n    nodeLabelGap: config.nodeLabelGap,\n    nodeLinkPadding: config.nodeLinkPadding,\n    showLegend: config.showLegend,\n    totalAngle: config.totalAngle,\n    nodeSpacing: config.nodeSpacing,\n    isPost: config.isPost,\n    matrix: config.matrix,\n    startingAngle: config.startingAngle,\n    minNodeSize: config.minNodeSize,\n    highlightEffect: config.highlightEffect,\n    enableToggle: config.enableToggle,\n    datalabelStyle: config.datalabelStyle\n    // total: config.total\n  }]);\n  config.showLegend && chart.getChildren('node-link-manager')[0]._addLegend();\n}\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport nodeFactory from '../../factories/chord-node-factory';\nimport linkFactory from '../../factories/chord-link-factory';\nimport { convertColor, toPrecision, pluckNumber } from '@fusioncharts/core/src/lib';\n\nconst comparator = (a, b) => a - b;\n\nclass NodeLinkManager extends SmartRenderer {\n  constructor (id) {\n    super(id);\n    this.registerFactory('chord-node-factory', nodeFactory);\n    this.registerFactory('chord-link-factory', linkFactory);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.total = 0;\n    config.adjustedTotal = 0;\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    Object.assign(this.config, dataObj);\n    let manager = this,\n      config = manager.config,\n      total,\n      { totalAngle, startingAngle, nodesOrder, nodes, linksOrder, links } = config;\n\n    totalAngle -= (config.nodeSpacing * nodesOrder.length);\n\n    total = config.total = nodesOrder.reduce((acc, label) => acc + nodes[label].total, 0);\n\n    config.adjustedTotal = nodesOrder.reduce((acc, label) => {\n      let node = nodes[label];\n      if (node.total / (total || 1) < config.minNodeSize) {\n        node.adjustedTotal = (total || 1) * config.minNodeSize;\n      } else {\n        node.adjustedTotal = node.total;\n      }\n      return acc + node.adjustedTotal;\n    }, 0);\n\n    config.interactiveLegend = pluckNumber(manager.getFromEnv('chart-attrib').interactivelegend, 1);\n\n    const angleRatio = totalAngle / config.adjustedTotal;\n\n    nodesOrder.forEach(label => {\n      let node = nodes[label];\n      node.startingAngle = startingAngle;\n      node.arcAngle = node.adjustedTotal * angleRatio;\n      node.endingAngle = startingAngle + node.arcAngle;\n      node.scale.setRange([node.startingAngle, node.endingAngle])\n        .setDomain([0, node.adjustedTotal]);\n      startingAngle = node.endingAngle + config.nodeSpacing;\n    });\n\n    linksOrder.forEach(key => {\n      if (links[key].visible) {\n        let link = links[key],\n          from = config.isPost ? link.linkedNodes[1] : link.linkedNodes[0],\n          to = config.isPost ? link.linkedNodes[0] : link.linkedNodes[1],\n          firstNode = nodes[from],\n          secondNode = nodes[to],\n          firstScale = firstNode.scale,\n          secondScale = secondNode.scale,\n          p1 = firstScale.getRangeValue(firstNode.nodeCovered),\n          p2 = firstScale.getRangeValue(firstNode.nodeCovered += (link[from] || 0)),\n          p3,\n          p4;\n        if (link.points.length) {\n          link.points.length = 0;\n        }\n        if (from === to) {\n          p3 = p1;\n          p4 = p2;\n        } else {\n          p3 = secondScale.getRangeValue(secondNode.nodeCovered);\n          p4 = secondScale.getRangeValue(secondNode.nodeCovered += (link[to] || 0));\n        }\n        link.points.push(p1, p2, p3, p4);\n      }\n    });\n\n    // Parse link cosmetics\n    linksOrder.forEach((key) => {\n      let link = links[key],\n        dominantNode = link.dominantNode;\n      link.angles = link.points.slice(0).sort(comparator);\n\n      if (dominantNode.length > 1 && nodes[dominantNode[0]].rawColor !== nodes[dominantNode[1]].rawColor) {\n        const linkArray = nodes[dominantNode[0]].index > nodes[dominantNode[1]].index\n          ? [nodes[dominantNode[1]], nodes[dominantNode[0]]]\n          : [nodes[dominantNode[0]], nodes[dominantNode[1]]];\n        link.rawColor = [linkArray[0].rawColor, linkArray[1].rawColor];\n      } else {\n        link.normalState.fill = convertColor(nodes[dominantNode[0]].rawColor, link.alpha);\n        link.normalState.stroke = convertColor(nodes[dominantNode[0]].rawColor, link.borderAlpha);\n        link.focussedState.fill = convertColor(nodes[dominantNode[0]].rawColor, link.hoverAlpha);\n        link.focussedState.stroke = link.focussedState.fill;\n        link.unfocussedState.fill = convertColor(nodes[dominantNode[0]].rawColor, link.unfocussedAlpha);\n        link.unfocussedState.stroke = link.unfocussedState.fill;\n      }\n    });\n  }\n\n  setDimension (dim) {\n    const manager = this,\n      config = manager.config;\n\n    Object.assign(config, dim);\n\n    manager.getChildren('node') && manager.getChildren('node').forEach(node =>\n      !node.getState('removed') && node.setDimension({\n        outerRadius: config.nodeOuterRadius,\n        innerRadius: config.nodeInnerRadius\n      })\n    );\n    manager.getChildren('ribbon') && manager.getChildren('ribbon').forEach(link =>\n      !link.getState('removed') && link.setDimension({\n        radius: config.ribbonRadius\n      })\n    );\n  }\n\n  _manageSpace (spaceArguments) {\n    const manager = this,\n      widths = manager.getChildren('node').map(node => {\n        return node._manageSpace(spaceArguments);\n      }),\n      maxWidth = Math.max(...widths);\n    return {\n      width: maxWidth,\n      height: maxWidth\n    };\n  }\n\n  _createContainer () {\n    const manager = this,\n      config = manager.config;\n    manager.addGraphicalElement({\n      el: 'group',\n      container: {\n        id: 'plotGroup',\n        isParent: true\n      },\n      component: manager,\n      label: 'link-container',\n      id: 'link-container',\n      attr: {\n        name: 'link-container',\n        transform: config.translate\n      }\n    });\n\n    manager.addGraphicalElement({\n      el: 'group',\n      container: {\n        id: 'plotGroup',\n        isParent: true\n      },\n      component: manager,\n      label: 'node-container',\n      id: 'node-container',\n      attr: {\n        name: 'node-container',\n        transform: config.translate,\n        ...config.datalabelStyle\n      }\n    });\n  }\n\n  draw () {\n    this._createContainer();\n  }\n\n  getName () {\n    return 'node-link-manager';\n  }\n\n  getType () {\n    return 'node-link-manager';\n  }\n\n  _addLegend () {\n    let manager = this,\n      config = manager.config,\n      { nodes, nodesOrder } = config,\n      legend = manager.getFromEnv('legend'),\n      legendItem,\n      legendItemId,\n      legendItemMap = config.legendItemMap || (config.legendItemMap = {}),\n      curLegendItems = new Set();\n\n    Object.keys(legendItemMap).forEach(key => curLegendItems.add(legendItemMap[key]));\n    nodesOrder.forEach(label => {\n      let node = nodes[label];\n      legendItemId = legendItemMap[label];\n      legendItem = legend.getItem(legendItemId);\n      if (!legendItem) {\n        legendItemId = legend.createItem();\n        legendItem = legend.getItem(legendItemId);\n        legendItemMap[label] = legendItemId;\n        manager.addExtEventListener('fc-click', function () {\n          if (manager.config.interactiveLegend) {\n            let clickedNode = manager.config.nodes[label],\n              item = legend.getItem(legendItemMap[label]);\n            manager.nodeClicked(clickedNode.label, item);\n          }\n        }, legendItem);\n        manager.addExtEventListener('fc-mouseover', function () {\n          if (manager.config.interactiveLegend) {\n            manager.nodeHoverIn(label);\n          }\n        }, legendItem);\n        manager.addExtEventListener('fc-mouseout', function () {\n          if (manager.config.interactiveLegend) {\n            manager.nodeHoverOut(label);\n          }\n        }, legendItem);\n      } else {\n        legendItem.removeLegendState('hidden');\n        curLegendItems['delete'](legendItemId);\n      }\n\n      legendItem.configure({\n        enabled: true,\n        label: label\n      });\n\n      legendItem.setStateCosmetics('default', {\n        symbol: {\n          rawFillColor: node.color,\n          rawStrokeColor: node.color,\n          fill: node.color,\n          stroke: node.color\n        }\n      });\n    });\n\n    curLegendItems.forEach(item => {\n      legend.disposeItem(item);\n    });\n  }\n\n  nodeClicked (clickedNodeLabel, legendItem) {\n    if (this.config.enableToggle) {\n      let config = this.config,\n        { nodes, nodesOrder, links } = config,\n        clickedNode = nodes[clickedNodeLabel],\n        linkedLinks = clickedNode.linkedLinks,\n        isActive = clickedNode.active;\n\n      if (clickedNode.active) {\n        legendItem && legendItem.setLegendState('hidden');\n      } else {\n        legendItem && legendItem.removeLegendState('hidden');\n      }\n\n      clickedNode.active = !isActive;\n      linkedLinks.forEach(key => {\n        let link = links[key],\n          from = config.isPost ? link.linkedNodes[1] : link.linkedNodes[0],\n          to = config.isPost ? link.linkedNodes[0] : link.linkedNodes[1],\n          fromNode = nodes[from],\n          toNode = nodes[to],\n          isVisisble = link.visible;\n        link.visible = fromNode.active && toNode.active;\n        if (link.visible !== isVisisble) {\n          if (link.visible) {\n            fromNode.total = toPrecision(fromNode.total + (link[from] || 0), 4);\n            if (to !== from) {\n              toNode.total = toPrecision(toNode.total + (link[to] || 0), 4);\n            }\n          } else {\n            fromNode.total = toPrecision(fromNode.total - (link[from] || 0), 4);\n            if (to !== from) {\n              toNode.total = toPrecision(toNode.total - (link[to] || 0), 4);\n            }\n          }\n        }\n      });\n      nodesOrder.forEach(label => (nodes[label].nodeCovered = 0));\n      if (isActive) {\n        this.nodeHoverOut(clickedNodeLabel, false);\n      } else {\n        this.nodeHoverIn(clickedNodeLabel, false);\n      }\n      this.setData({}, true);\n      this.setDimension();\n    }\n  }\n\n  linkHoverIn (linkKey, registerDraw = true) {\n    if (this.config.highlightEffect) {\n      let manager = this,\n        config = manager.config,\n        { links, nodes, nodesOrder, linksOrder } = config,\n        hoveredLink = links[linkKey],\n        hoveredNodes = hoveredLink.linkedNodes;\n\n      nodesOrder.forEach(label => {\n        let node = nodes[label],\n          child = manager.getChild(label);\n        if (!child || child.getState('removed')) {\n          return;\n        }\n        if (hoveredNodes.includes(label)) {\n          node.hovered = true;\n          node.unfocussed = false;\n        } else {\n          node.hovered = false;\n          node.unfocussed = true;\n        }\n        registerDraw && child.setData({\n          hovered: node.hovered,\n          unfocussed: node.unfocussed\n        }, true);\n      });\n      linksOrder.forEach(key => {\n        let link = links[key],\n          child = manager.getChild(key);\n        if (!child || child.getState('removed')) {\n          return;\n        }\n        if (key === linkKey) {\n          link.hovered = true;\n          link.unfocussed = false;\n        } else {\n          link.hovered = false;\n          link.unfocussed = true;\n        }\n        registerDraw && child.setData({\n          hovered: link.hovered,\n          unfocussed: link.unfocussed\n        }, true);\n      });\n      registerDraw && this.setDimension();\n    }\n  }\n  resetEffect (registerDraw = true) {\n    let manager = this,\n      config = manager.config,\n      { links, nodes, nodesOrder, linksOrder } = config;\n\n    nodesOrder.forEach(label => {\n      let node = nodes[label],\n        child = manager.getChild(label);\n      if (!child || child.getState('removed')) {\n        return;\n      }\n      node.hovered = false;\n      node.unfocussed = false;\n      registerDraw && child.setData({\n        hovered: node.hovered,\n        unfocussed: node.unfocussed\n      }, true);\n    });\n    linksOrder.forEach(key => {\n      let link = links[key],\n        child = manager.getChild(key);\n      if (!child || child.getState('removed')) {\n        return;\n      }\n      link.hovered = false;\n      link.unfocussed = false;\n      registerDraw && child.setData({\n        hovered: link.hovered,\n        unfocussed: link.unfocussed\n      }, true);\n    });\n    this.setDimension();\n  }\n  linkHoverOut (linkKey, registerDraw = true) {\n    if (this.config.highlightEffect) {\n      this.resetEffect(registerDraw);\n    }\n  }\n  nodeHoverIn (labelKey, registerDraw = true) {\n    if (this.config.highlightEffect) {\n      let manager = this,\n        config = manager.config,\n        { links, nodes, nodesOrder, linksOrder } = config,\n        hoveredNode = nodes[labelKey],\n        hoveredLinks = hoveredNode.linkedLinks,\n        affectedNodes = hoveredLinks.map(key => links[key].linkedNodes[0] === labelKey\n          ? links[key].linkedNodes[1]\n          : links[key].linkedNodes[0]);\n      affectedNodes.push(labelKey);\n\n      nodesOrder.forEach(label => {\n        let node = nodes[label],\n          child = manager.getChild(label);\n        if (!child || child.getState('removed')) {\n          return;\n        }\n        if (affectedNodes.includes(label)) {\n          node.hovered = true;\n          node.unfocussed = false;\n        } else {\n          node.hovered = false;\n          node.unfocussed = true;\n        }\n        registerDraw && hoveredNode.active && child.setData({\n          hovered: node.hovered,\n          unfocussed: node.unfocussed\n        }, true);\n      });\n      linksOrder.forEach(key => {\n        let link = links[key],\n          child = manager.getChild(key);\n        if (!child || child.getState('removed')) {\n          return;\n        }\n        if (hoveredLinks.includes(key)) {\n          link.hovered = true;\n          link.unfocussed = false;\n        } else {\n          link.hovered = false;\n          link.unfocussed = true;\n        }\n        registerDraw && hoveredNode.active && child.setData({\n          hovered: link.hovered,\n          unfocussed: link.unfocussed\n        }, true);\n      });\n      registerDraw && hoveredNode.active && this.setDimension();\n    }\n  }\n  nodeHoverOut (labelKey, registerDraw = true) {\n    if (this.config.highlightEffect) {\n      this.resetEffect(registerDraw);\n    }\n  }\n}\n\nexport default NodeLinkManager;\n","import Node from '../dataset/chord/node.js';\n\n/**\n * function to instatiate node and get attached to manager\n * @param {Object} manager manager API\n */\nexport default function (manager) {\n  const config = manager.config;\n\n  config.nodesOrder.forEach(label => {\n    manager.attachChild(Node, 'node', label)\n      .configure(config.nodes[label]);\n  });\n}\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport { polarToCartesian, deg2Rad, rad2Deg } from '@fusioncharts/utils/src/scale-utils/polar-util';\nimport { normaliseAngle, M, A, L, Z, getArcLength, getTextRotationByQuadrant, isAngleInLeftHemisphere, getCartesianDistance, isAngleInTopHemisphere, SMALLSQUARE, MEDIUMSQUARE } from '../../chart/chord/utils';\nimport { getSuggestiveRotation, isIpad, convertColor, POINTER, BLANKSTRING, MIDDLESTR, TEXTANCHOR, setLineHeight, toPrecision, isIE11, UNDEF, parseTooltext } from '@fusioncharts/core/src/lib';\nimport { getQuadrant, getCleanAngle } from '@fusioncharts/charts/src/dataset/pie2d/pie-label-utils';\n\nconst nodeGenerator = (_startAngle, _endAngle, arc, outerRadius, innerRadius) => {\n    let startAngle = normaliseAngle(_startAngle),\n      endAngle = normaliseAngle(_endAngle),\n      { x: x1, y: y1 } = polarToCartesian(outerRadius, startAngle, false),\n      { x: x2, y: y2 } = polarToCartesian(outerRadius, endAngle, false),\n      { x: x3, y: y3 } = polarToCartesian(innerRadius, startAngle, false),\n      { x: x4, y: y4 } = polarToCartesian(innerRadius, endAngle, false);\n\n    x1 = toPrecision(x1, 4);\n    y1 = toPrecision(y1, 4);\n    x2 = toPrecision(x2, 4);\n    y2 = toPrecision(y2, 4);\n    x3 = toPrecision(x3, 4);\n    y3 = toPrecision(y3, 4);\n    x4 = toPrecision(x4, 4);\n    y4 = toPrecision(y4, 4);\n\n    return [\n      M, x1, y1,\n      A, outerRadius, outerRadius, 0, arc > 180 ? 1 : 0, 1, x2, y2,\n      L, x4, y4,\n      A, innerRadius, innerRadius, 0, arc > 180 ? 1 : 0, 0, x3, y3,\n      Z\n    ];\n  },\n  labelPathGenerator = (_startAngle, _endAngle, arc, radius) => {\n    const { x: x1, y: y1 } = polarToCartesian(\n        radius,\n        normaliseAngle(_startAngle),\n        false\n      ),\n      { x: x2, y: y2 } = polarToCartesian(\n        radius,\n        normaliseAngle(_endAngle),\n        false\n      );\n\n    return `M ${x1} ${y1} A ${radius} ${radius} ${0} ${arc > 180 ? 1 : 0} ${\n      _startAngle > _endAngle ? 0 : 1\n    } ${x2} ${y2}`;\n  },\n  RED = '#ff0000',\n  LABEL_POSITION_TANGENTIAL = 'tangential',\n  LABEL_POSITION_OUTSIDE = 'outside',\n  LABEL_POSITION_INSIDE = 'inside',\n  START = 'start',\n  PADDING = 4,\n  clickFn = function (e) {\n    const node = this,\n      manager = node.getLinkedParent(),\n      legend = node.getFromEnv('legend'),\n      chart = node.getFromEnv('chart'),\n      legendItem = legend ? legend.getItem(manager.config.legendItemMap[node.config.label]) : null;\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    manager.nodeClicked(node.config.label, legendItem);\n    chart.plotEventHandler(null, e, 'dataplotclick', eventArgs);// event args need to be passed\n  },\n  END = 'end',\n  mouseOverFn = function (e) {\n    const node = this,\n      chart = node.getFromEnv('chart');\n    this.getLinkedParent().nodeHoverIn(this.config.label);\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    chart.plotEventHandler(null, e, 'DataPlotRollOver', eventArgs);\n  },\n  mouseOutFn = function (e) {\n    const node = this,\n      chart = node.getFromEnv('chart');\n    this.getLinkedParent().nodeHoverOut(this.config.label);\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    chart.plotEventHandler(null, e, 'DataPlotRollOut', eventArgs);\n  },\n  setEventArgs = function (eventArgs, node) {\n    // RED-8927: Support for plot click,label click and link click  events for Chord Diagram\n    // sets the Arguments for mouse click/over/out events.\n    let manager = node.getLinkedParent();\n    eventArgs.label = node.config.label;\n    eventArgs.color = node.config.color;\n    eventArgs.alpha = node.config.alpha;\n    eventArgs.links = {};\n    eventArgs.value = node.config.total;\n    eventArgs.displayValue = node.config.formattedValue;\n    eventArgs.nodeValue = node.config.nodevalue;\n    eventArgs.nodeDataValue = node.config.nodedatavalue;\n    eventArgs.plotFillColor = node.config.plotfillcolor;\n    eventArgs.toolText = node.config.tooltext;\n    var i;\n    // RED-8927: for loop is used to get link values for the current node.\n\n    for (i = 0; i < node.config.linkedLinks.length; i++) {\n      let j = node.config.linkedLinks[i],\n        obj = manager.config.links[j],\n        arrValues = [],\n        currentnodelabel = eventArgs.label,\n        currentnodevalue = {},\n        linkednodelabel,\n        linkednodevalue = {};\n      currentnodevalue[currentnodelabel] = obj[currentnodelabel];\n      linkednodelabel = (j.replace(currentnodelabel, '')).replace(',', '');\n      linkednodevalue[linkednodelabel] = obj[linkednodelabel];\n      arrValues.push(currentnodevalue);\n      if (linkednodelabel !== currentnodelabel && !(obj[linkednodelabel] === UNDEF)) { arrValues.push(linkednodevalue); }\n      eventArgs.links[j] = arrValues;\n    }\n  },\n  getTooltext = (config, node, chartConfig) => {\n    let uniChar = isIpad ? SMALLSQUARE : MEDIUMSQUARE,\n      macroIndices = [3, 133, 134, 143, 144, 145],\n      basefontsize = node.computeFontSize(\n        chartConfig.style.inCanfontSizeWithUnit),\n      manager = node.getLinkedParent(),\n      drawCustomLegendIcon = chartConfig && chartConfig.drawcustomlegendicon,\n      legend = node.getFromEnv('legend'),\n      pathArr,\n      newPathArr = [],\n      i,\n      j,\n      symbolBBox,\n      legendItemSymbol,\n      plotToolText,\n      pathStart = [],\n      finalPath,\n      legendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? legend.getItem(manager.config.legendItemMap[node.config.label]) : null,\n      graphicalElement = legendItem && legendItem.getGraphicalElement(),\n      parserConfig,\n      toolText;\n    finalPath = BLANKSTRING;\n    if (legendItem) {\n      legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol;\n      pathArr = legendItemSymbol && legendItemSymbol.attrs.path.split(/(?=[LMCA])/);\n      symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox();\n      if (pathArr && pathArr.length) {\n        for (i = 0; i < pathArr.length; i++) {\n          pathStart.push(pathArr[i][0]);\n          pathArr[i] = pathArr[i].substring(1, pathArr[i].length);\n          if (i === (pathArr.length - 1)) {\n            pathArr[i] = pathArr[i].substring(0, pathArr[i].length - 1);\n          }\n          newPathArr[i] = pathArr[i].split(',');\n        }\n      }\n      if (newPathArr && newPathArr.length) {\n        for (i = 0; i < newPathArr.length; i++) {\n          if (newPathArr[i].length) {\n            for (j = 0; j < newPathArr[i].length; j++) {\n              newPathArr[i][j] = Number(newPathArr[i][j]);\n              if (pathStart[i] !== 'A') {\n                if (j === 0) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 1) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              } else if (pathStart[i] === 'A') {\n                if (j === 5) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 6) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              }\n            }\n          }\n          finalPath += pathStart[i] + newPathArr[i].toString();\n        }\n      }\n      finalPath = finalPath + 'Z';\n    }\n    parserConfig = {\n      label: config.label,\n      value: config.total,\n      nodeValue: config.total,\n      nodeDataValue: config.formattedValue,\n      plotFillColor: config.color,\n      plotFillAlpha: config.alpha,\n      plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n      stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n      stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n    </svg>` : `<span style='color: ${config.color};'>${uniChar}&nbsp;</span>`\n    };\n\n    toolText = parseTooltext(config.tooltext, macroIndices,\n      parserConfig, {\n        label: config.label,\n        value: config.formattedValue,\n        nodeValue: config.total,\n        nodeDataValue: config.formattedValue,\n        plotFillColor: config.color,\n        plotFillAlpha: config.alpha,\n        plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n        stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n        stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n      </svg>` : `<span style='color: ${config.color};'>${uniChar}&nbsp;</span>`\n      }\n    );\n\n    plotToolText = parseTooltext(config.tooltext, macroIndices,\n      parserConfig, {\n        label: config.label,\n        value: config.formattedValue,\n        nodeValue: config.total,\n        nodeDataValue: config.formattedValue,\n        plotFillColor: config.color,\n        plotFillAlpha: config.alpha,\n        plotIdentifier: legendItem ? `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n        stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n        stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n      </svg>` : `<span style='color: ${config.color};'>${uniChar}&nbsp;</span>`\n      }\n    );\n\n    config.setToolText = toolText;\n    config.setPlotTooltext = config.setToolText ? config.setToolText : plotToolText;\n\n    if (!config.tooltext) {\n      return (\n        `<div style='padding: 2px; vertical-align: middle; font-size: ${basefontsize}px;'>\n          <span style='color: ${config.color};'>\n              ${uniChar}\n          </span>\n          ${config.label + config.toolTipSepChar}\n          &nbsp;\n          ${config.formattedValue}\n        </div>`\n      );\n    }\n    return (\n      `<div style='padding: 2px; vertical-align: middle; font-size: ${basefontsize}px;'>\n        <span style='color: ${config.color};'>\n            ${uniChar}\n        </span>\n        ${config.setPlotTooltext}\n      </div>`\n    );\n  };\n\nclass Node extends SmartRenderer {\n  constructor (id) {\n    super(id);\n    this.addEventListener('fc-click', clickFn);\n    // this.addEventListener('fc-click', dataPlotClickfn);\n    this.addEventListener('fc-mouseover', mouseOverFn);\n    this.addEventListener('fc-mouseout', mouseOutFn);\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    const config = this.config;\n    config.styles = {\n      fill: RED,\n      stroke: RED,\n      'fill-alpha': 0.7\n    };\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    Object.assign(this.config, dataObj);\n    const node = this;\n    node.config.formattedValue = node.getFromEnv('number-formatter').dataLabels(node.config.total);\n    node.config.formattedNodeDataValue = node.getFromEnv('number-formatter').dataLabels(node.config.nodedatavalue);\n  }\n\n  setDimension (dim) {\n    Object.assign(this.config, dim);\n  }\n\n  allocatePosition () {\n    let node = this,\n      config = node.config,\n      label = config.label,\n      { canvasHeight, canvasWidth, cx, cy, style } = node.getFromEnv('chartConfig'),\n      slope,\n      labelOrientation = config.labelPosition,\n      applicableRadius = config.outerRadius + config.nodeLabelGap,\n      smartLabel = node.getFromEnv('smartLabel'),\n      startingAngle = normaliseAngle(config.startingAngle),\n      endingAngle = normaliseAngle(config.endingAngle),\n      labelAttrs = {},\n      smartLabelOutput,\n      fontSize,\n      lineHeight,\n      labelCatersianPosition;\n\n    // Setting font size & line height for when the chart is resized\n    config.style['font-size'] = fontSize = this.computeFontSize(style.inCanfontSizeWithUnit);\n    lineHeight = setLineHeight({ fontSize: fontSize }).replace(/px/ig, BLANKSTRING);\n    smartLabel.setStyle(config.style);\n    smartLabel.useEllipsesOnOverflow(node.getFromEnv('chartConfig').useEllipsesOnOverflow);\n    /*\n      * RED-8797\n      * SVG cartesian system is not same as general cartesian system\n      * But since slope is calculated down, it must be corrected as per\n      * general cartesian system.\n      * Followed by that if-else conditions are also matched with general\n      * cartesian system.\n      * Note: CASE 0, 1, 2, 3 still map to SVG cartesian system.\n    */\n    switch (labelOrientation) {\n      case LABEL_POSITION_TANGENTIAL: {\n        let labelAngleCenter = ((startingAngle + endingAngle) / 2) % 360,\n          x2, y2,\n          spaceRemaining = 0;\n\n        labelCatersianPosition = polarToCartesian(applicableRadius, labelAngleCenter, false);\n        const quadrant = getQuadrant(deg2Rad(labelAngleCenter));\n        switch (quadrant) {\n          case 0:\n            x2 = canvasWidth / 2;\n            y2 = canvasHeight / 2;\n            slope = Math.tan(deg2Rad(360 - labelAngleCenter));\n            if (Math.abs(x2 * slope) <= y2) {\n              // intersects with right line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx + x2, cy - x2 * slope);\n            } else {\n              // intersects with bottom line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx - (y2 / slope), cy + y2);\n            }\n            break;\n\n          case 1:\n            x2 = (-1 * canvasWidth / 2);\n            y2 = (canvasHeight / 2);\n            slope = Math.tan(deg2Rad(180 + labelAngleCenter));\n\n            if (Math.abs(x2 * slope) <= Math.abs(y2)) {\n              // intersects with left line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx + x2, cy + x2 * slope);\n            } else {\n              // intersects with bottom line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx + (y2 / slope), cy + y2);\n            }\n            break;\n\n          case 2:\n            x2 = (-1 * canvasWidth / 2);\n            y2 = -1 * (canvasHeight / 2);\n            slope = Math.tan(deg2Rad(360 - labelAngleCenter));\n\n            if (Math.abs(x2 * slope) <= Math.abs(y2)) {\n              // intersects with left line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx + x2, cy - x2 * slope);\n            } else {\n              // intersects with top line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx - (y2 / slope), cy + y2);\n            }\n            break;\n\n          case 3:\n            x2 = canvasWidth / 2;\n            y2 = -1 * (canvasHeight / 2);\n            slope = Math.tan(deg2Rad(-1 * labelAngleCenter));\n\n            if (Math.abs(x2 * slope) <= Math.abs(y2)) {\n              // intersects with right line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx + x2, cy - x2 * slope);\n            } else {\n              // intersects with top line\n              spaceRemaining = getCartesianDistance(labelCatersianPosition.x + cx, labelCatersianPosition.y + cy, cx - (y2 / slope), cy + y2);\n            }\n            break;\n\n          default: ;\n        }\n\n        smartLabelOutput = smartLabel.getSmartText(label, spaceRemaining, lineHeight);\n        labelAttrs.transform = getSuggestiveRotation(\n          getTextRotationByQuadrant(labelAngleCenter),\n          labelCatersianPosition.x, labelCatersianPosition.y);\n\n        if (isAngleInLeftHemisphere(labelAngleCenter)) {\n          labelAttrs['text-anchor'] = END;\n        }\n\n        labelAttrs.x = labelCatersianPosition.x;\n        labelAttrs.y = labelCatersianPosition.y;\n        break;\n      }\n      case LABEL_POSITION_OUTSIDE: {\n        let labelAngleCenterDeg = ((startingAngle + endingAngle) / 2) % 360,\n          labelAngleCenterRad = deg2Rad(labelAngleCenterDeg),\n          labelAngleCenterCleanRad = getCleanAngle(labelAngleCenterRad),\n          labelAngleCenterCleanDeg = rad2Deg(labelAngleCenterCleanRad),\n          isLabelCenterInTopHemisphere = isAngleInTopHemisphere(labelAngleCenterCleanDeg),\n          arcLength = getArcLength(\n            applicableRadius,\n            startingAngle,\n            endingAngle\n          ),\n          textPathStartAngle = isLabelCenterInTopHemisphere\n            ? config.startingAngle\n            : config.endingAngle,\n          textPathEndAngle = isLabelCenterInTopHemisphere\n            ? config.endingAngle\n            : config.startingAngle;\n        smartLabelOutput = smartLabel.getSmartText(label, arcLength - PADDING, lineHeight);\n        // dy attribute of tspan not supported in IE, so path calculation changed\n        if (isIE11) {\n          if (!isLabelCenterInTopHemisphere) {\n            applicableRadius += smartLabelOutput.height * 0.7;\n          }\n        }\n\n        labelAttrs.textpath = {\n          path: labelPathGenerator(\n            textPathStartAngle,\n            textPathEndAngle,\n            config.arcAngle,\n            applicableRadius\n          ),\n          startOffset: '50%'\n        };\n\n        labelAttrs[TEXTANCHOR] = MIDDLESTR;\n        labelAttrs['vertical-align'] = isLabelCenterInTopHemisphere\n          ? 'top'\n          : 'bottom';\n\n        labelAttrs.transform = null;\n        labelAttrs.x = 0;\n        labelAttrs.y = 0;\n        break;\n      }\n      case LABEL_POSITION_INSIDE:\n      default: {\n        let labelAngleCenterDeg = ((startingAngle + endingAngle) / 2) % 360,\n          labelAngleCenterRad = deg2Rad(labelAngleCenterDeg),\n          labelAngleCenterCleanRad = getCleanAngle(labelAngleCenterRad),\n          labelAngleCenterCleanDeg = rad2Deg(labelAngleCenterCleanRad),\n          isLabelCenterInTopHemisphere = isAngleInTopHemisphere(labelAngleCenterCleanDeg),\n          middleRadius = (config.outerRadius + config.innerRadius) / 2,\n          arcLength = getArcLength(\n            middleRadius,\n            startingAngle,\n            endingAngle\n          ),\n          textPathStartAngle = isLabelCenterInTopHemisphere\n            ? config.startingAngle\n            : config.endingAngle,\n          textPathEndAngle = isLabelCenterInTopHemisphere\n            ? config.endingAngle\n            : config.startingAngle;\n\n        smartLabelOutput = smartLabel.getSmartText(label, arcLength - PADDING, lineHeight);\n        // IE doesn't support dy attribute of tspan, so path calculation changed\n        if (isIE11) {\n          if (isLabelCenterInTopHemisphere) {\n            middleRadius -= smartLabelOutput.height * 0.3;\n          } else {\n            middleRadius += smartLabelOutput.height * 0.3;\n          }\n        }\n        labelAttrs.textpath = {\n          path: labelPathGenerator(\n            textPathStartAngle,\n            textPathEndAngle,\n            config.arcAngle,\n            middleRadius\n          ),\n          startOffset: '50%'\n        };\n\n        labelAttrs[TEXTANCHOR] = MIDDLESTR;\n        labelAttrs['vertical-align'] = MIDDLESTR;\n\n        labelAttrs.transform = null;\n        labelAttrs.x = 0;\n        labelAttrs.y = 0;\n        break;\n      }\n    }\n\n    labelAttrs.fill = convertColor(config.labelColor, 100);\n    labelAttrs.text = smartLabelOutput.text;\n    labelAttrs.cursor = POINTER;\n    labelAttrs['text-anchor'] = labelAttrs['text-anchor'] || START;\n    node.config.labelAttrs = labelAttrs;\n    node.config.path = nodeGenerator(config.startingAngle, config.endingAngle, config.arcAngle,\n      config.outerRadius, config.innerRadius);\n    node.config.focussedState.path = node.config.path;\n    node.config.normalState.path = node.config.path;\n    node.config.unfocussedState.path = node.config.path;\n    node.config.deactiveState.path = node.config.path;\n  }\n\n  draw () {\n    const node = this,\n      config = node.config,\n      chartConfig = node.getFromEnv('chartConfig'),\n      tooltext = config.showToolTip ? getTooltext(config, this, chartConfig) : BLANKSTRING;\n    let nodeAttr;\n\n    if (node.config.active) {\n      nodeAttr = config.hovered ? config.focussedState : config.unfocussed ? config.unfocussedState : config.normalState;\n    } else {\n      nodeAttr = config.deactiveState;\n    }\n\n    nodeAttr.cursor = POINTER;\n\n    node.addGraphicalElement({\n      el: 'group',\n      container: {\n        id: 'node-container',\n        isParent: true\n      },\n      tooltext,\n      component: node,\n      label: 'text-path-container',\n      id: 'text-path-container',\n      attr: {\n        name: 'text-path-container'\n      }\n    });\n\n    node.addGraphicalElement({\n      el: 'path',\n      label: 'node',\n      tooltext,\n      container: {\n        id: 'text-path-container'\n      },\n      attr: nodeAttr,\n      component: node\n    }, true);\n\n    if (config.showLabel) {\n      node.addGraphicalElement({\n        el: 'text',\n        label: 'node-label',\n        container: {\n          id: 'text-path-container'\n        },\n        attr: config.labelAttrs,\n        outlineText: !!chartConfig.textOutline,\n        css: {},\n        tooltext,\n        component: node\n      }, true);\n    }\n  }\n\n  _manageSpace (spaceArguments) {\n    const node = this,\n      config = node.config,\n      smartLabel = node.getFromEnv('smartLabel');\n\n    let oriSize,\n      smartText,\n      spaceRequired;\n\n    smartLabel.setStyle(config.style);\n    oriSize = smartLabel.getOriSize(config.label);\n\n    if (!config.showLabel) {\n      return 0;\n    }\n\n    if (config.labelPosition === LABEL_POSITION_TANGENTIAL) {\n      if (oriSize.width > spaceArguments.maxSpace) {\n        smartText = smartLabel.getSmartText(config.label, spaceArguments.maxSpace, oriSize.height);\n        spaceRequired = smartText.width;\n      } else {\n        spaceRequired = oriSize.width;\n      }\n    } else if (config.labelPosition === LABEL_POSITION_OUTSIDE) {\n      spaceRequired = oriSize.height;\n    } else {\n      spaceRequired = 0;\n    }\n\n    return spaceRequired;\n  }\n\n  getName () {\n    return 'node';\n  }\n\n  getType () {\n    return 'dataset';\n  }\n}\n\nexport default Node;\n","\nconst NOMRALIZE_CONSTANT = 90,\n  M = 'M',\n  A = 'A',\n  L = 'L',\n  Z = 'Z',\n  C = 'C',\n  PI = Math.PI,\n  SIN = Math.sin,\n  COS = Math.cos,\n  PI2 = PI * 2,\n  HALF_PI = PI / 2,\n  SMALLSQUARE = '&#9632;',\n  MEDIUMSQUARE = '&#9724;';\n\nfunction normaliseAngle (angle) {\n  return angle - NOMRALIZE_CONSTANT;\n}\n\nfunction isAngleInLeftHemisphere (_rotationAngle) {\n  return Math.abs(_rotationAngle) > 90 && Math.abs(_rotationAngle) < 270;\n}\n\nfunction isAngleInTopHemisphere (_angle) {\n  return Math.abs(_angle) > 180 && Math.abs(_angle) < 360;\n}\n\nfunction getCartesianDistance (x1, y1, x2, y2) {\n  return Math.sqrt(\n    ((\n      x2 - x1) * (x2 - x1)\n    ) +\n    ((\n      y2 - y1) * (y2 - y1)\n    ));\n}\n\nfunction getArcLength (_radius, _startAngle, _endAngle) {\n  return PI2 * _radius * (Math.abs(_endAngle - _startAngle)) / 360;\n}\n\n/**\n * Text is rotated according to which quadrant of the circle it is\n * currently placed in\n */\nfunction getTextRotationByQuadrant (_angle) {\n  let rotationAngle = _angle;\n  if (isAngleInLeftHemisphere(rotationAngle)) {\n    rotationAngle = (rotationAngle - 180);\n  }\n\n  return rotationAngle;\n}\n\nexport {\n  M,\n  A,\n  L,\n  Z,\n  C,\n  PI,\n  SIN,\n  COS,\n  PI2,\n  HALF_PI,\n  SMALLSQUARE,\n  MEDIUMSQUARE,\n  normaliseAngle,\n  getArcLength,\n  getTextRotationByQuadrant,\n  isAngleInLeftHemisphere,\n  isAngleInTopHemisphere,\n  getCartesianDistance\n};\n","import Ribbon from '../dataset/chord/ribbon';\n\n/**\n * function to instatiate ribbon and get attached to manager\n * @param {Object} manager manager API\n */\nexport default function (manager) {\n  let links = manager.config.links;\n  for (let key in links) {\n    if (links.hasOwnProperty(key)) {\n      if (links[key].visible) {\n        manager.attachChild(Ribbon, 'ribbon', key).configure(links[key]);\n      }\n    }\n  }\n}\n","import { SmartRenderer } from '@fusioncharts/core/src/component-interface';\nimport { deg2Rad, polarToCartesian } from '@fusioncharts/utils/src/scale-utils/polar-util.js';\nimport { toRaphaelColor, isIpad, BLANKSTRING, toPrecision, rgbaToHex, parseTooltext } from '@fusioncharts/core/src/lib';\nimport { M, A, C, HALF_PI, PI, PI2, SMALLSQUARE, MEDIUMSQUARE } from '../../chart/chord/utils';\n\nconst normalizeAngles = radians => radians - HALF_PI,\n  ribbonGenerator = (points, radius, startAngle) => {\n    const corners = points.map((p, i) => {\n      let angle = deg2Rad(p),\n        { x, y } = polarToCartesian(radius, normalizeAngles(deg2Rad(startAngle)) + angle),\n        curveFactor = 0.6,\n        distance = Math.abs(deg2Rad(points[3 - i]) - angle),\n        nextPointDist = Math.abs(deg2Rad(points[(i + 1) % 4]) - angle);\n      if (distance > PI) {\n        distance = PI2 - distance;\n      }\n      if (distance * radius < radius) {\n        curveFactor *= distance;\n      }\n\n      x = toPrecision(x, 4);\n      y = toPrecision(y, 4);\n\n      return {\n        x: x,\n        y: y,\n        cpX: (1 - curveFactor) * x,\n        cpY: (1 - curveFactor) * y,\n        arc: nextPointDist\n      };\n    });\n    return [\n      M,\n      corners[0].x, corners[0].y,\n      A, radius, radius, 0, corners[0].arc > PI ? 1 : 0, 1, corners[1].x, corners[1].y,\n      C, corners[1].cpX, corners[1].cpY, corners[2].cpX, corners[2].cpY, corners[2].x, corners[2].y,\n      A, radius, radius, 0, corners[2].arc > PI ? 1 : 0, 1, corners[3].x, corners[3].y,\n      C, corners[3].cpX, corners[3].cpY, corners[0].cpX, corners[0].cpY, corners[0].x, corners[0].y\n    ].join(` `);\n  },\n  mouseOverFn = function () {\n    const node = this,\n      chart = node.getFromEnv('chart');\n    this.getLinkedParent().linkHoverIn(this.config.key);\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    chart.fireChartInstanceEvent('linkRollOver', eventArgs);\n  },\n  mouseOutFn = function () {\n    const node = this,\n      chart = node.getFromEnv('chart');\n    this.getLinkedParent().linkHoverOut(this.config.key);\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    chart.fireChartInstanceEvent('linkRollOut', eventArgs);\n  },\n  mouseClickFn = function () {\n    const node = this,\n      chart = node.getFromEnv('chart');\n    let eventArgs = {};\n    setEventArgs(eventArgs, node);\n    chart.fireChartInstanceEvent('linkClick', eventArgs);\n  },\n  setEventArgs = function (eventArgs, node) {\n    // RED-8927: Support for plot click,label click and link click  events for Chord Diagram\n    // sets the Arguments for mouse click/over/out events.\n    eventArgs.dominantFlowValue = node.config[node.config.dominantNode[0]];\n    let i;\n    // RED-8927stores the index of subservient node.\n    for (i = 0; i < node.config.linkedNodes.length; i++) {\n      if (node.config.linkedNodes[i] !== node.config.dominantNode[0]) {\n        break;\n      }\n    }\n\n    eventArgs.subservientFlowValue = node.config[node.config.linkedNodes[i]];\n    eventArgs.linkedNodes = node.config.linkedNodes;\n    if (eventArgs.dominantFlowValue === eventArgs.subservientFlowValue) {\n      eventArgs.color = node.config.rawColor || rgbaToHex(node.config.normalState.fill);\n    } else {\n      eventArgs.color = rgbaToHex(node.config.normalState.fill);\n    }\n    eventArgs.alpha = node.config.alpha;\n  },\n  getUniqueNodes = (nodeArr) => {\n    let resultingNodes = [];\n    if (nodeArr.length === 0) {\n      return [];\n    } else if (nodeArr.length === 1) {\n      return ([nodeArr[0]]);\n    }\n    resultingNodes = nodeArr.filter((c, index) => {\n      return nodeArr.indexOf(c) === index;\n    });\n    return (resultingNodes);\n  },\n  getDominantFlowValue = (_config, _nodeArr) => {\n    let i,\n      config = _config,\n      nodeArr = _nodeArr,\n      resultValues = [];\n    if (!nodeArr.length) {\n      return [];\n    }\n    if (nodeArr.length === 1) {\n      return config[nodeArr[0]];\n    }\n    for (i = 0; i < nodeArr.length; i++) {\n      resultValues.push(config[nodeArr[i]]);\n    }\n    return resultValues;\n  },\n  getPlotIdentifier = (colorArr, uniChar, legendItem, finalPath) => {\n    let body = BLANKSTRING,\n      graphicalElement,\n      symbolBBox,\n      i;\n    if (finalPath !== '' && legendItem && legendItem.length) {\n      if (legendItem.length === 1) {\n        graphicalElement = legendItem[0].getGraphicalElement();\n        symbolBBox = graphicalElement.legendItemSymbol.node.getBBox();\n        return (`<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n        stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n        stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n      </svg>`);\n      }\n      for (i = 0; i < legendItem.length; i++) {\n        graphicalElement = legendItem[i].getGraphicalElement();\n        symbolBBox = graphicalElement.legendItemSymbol.node.getBBox();\n        body += `<svg height= ${symbolBBox.height} width = ${symbolBBox.width} overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n          <path d= ${finalPath} fill = ${graphicalElement.legendItemSymbol.node.getAttribute('fill')} stroke = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke')}\n          stroke-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-opacity')} fill-opacity = ${graphicalElement.legendItemSymbol.node.getAttribute('fill-opacity')} \n          stroke-width = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-width')} stroke-linecap = ${graphicalElement.legendItemSymbol.node.getAttribute('stroke-linecap')}></path>\n        </svg>`;\n      }\n    } else if (colorArr.length) {\n      for (i = 0; i < colorArr.length; i++) {\n        body += `\n            <span style='color: ${colorArr[i]};'>\n              ${uniChar}\n            </span>`;\n      }\n    }\n    return body;\n  },\n  getLegendItems = (legend, manager, dominantNodes) => {\n    let legendItems = [],\n      i;\n    if (dominantNodes && dominantNodes.length) {\n      if (dominantNodes.length === 1) {\n        return ([legend.getItem(manager.config.legendItemMap[dominantNodes[0]])]);\n      }\n      for (i = 0; i < dominantNodes.length; i++) {\n        legendItems.push(legend.getItem(manager.config.legendItemMap[dominantNodes[i]]));\n      }\n    }\n    return legendItems;\n  },\n  getTooltext = (config, chartConfig, basefontsize, ribbon) => {\n    let uniChar = isIpad ? SMALLSQUARE : MEDIUMSQUARE,\n      key,\n      body = BLANKSTRING,\n      drawCustomLegendIcon = chartConfig && chartConfig.drawcustomlegendicon,\n      macroIndices = [135, 136, 137, 138, 139, 140, 146, 147],\n      manager = ribbon.getLinkedParent(),\n      legend = ribbon.getFromEnv('legend'),\n      pathArr,\n      newPathArr = [],\n      graphicalElement,\n      legendItemSymbol,\n      i,\n      j,\n      symbolBBox,\n      pathStart = [],\n      finalPath,\n      dominantLegendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? getLegendItems(legend, manager, getUniqueNodes(config.dominantNode)) : null,\n      subservientLegendItem = (drawCustomLegendIcon && legend && legend.config && legend.config.isActive) ? getLegendItems(legend, manager, getUniqueNodes(config.subservientNode)) : null,\n      parserConfig,\n      linkToolText;\n    finalPath = BLANKSTRING;\n    if (dominantLegendItem && dominantLegendItem.length) {\n      graphicalElement = dominantLegendItem && dominantLegendItem[0] && dominantLegendItem[0].getGraphicalElement();\n      legendItemSymbol = graphicalElement && graphicalElement.legendItemSymbol;\n      pathArr = legendItemSymbol && legendItemSymbol.attrs.path.split(/(?=[LMCA])/);\n      symbolBBox = legendItemSymbol && legendItemSymbol.node.getBBox();\n      if (pathArr && pathArr.length) {\n        for (i = 0; i < pathArr.length; i++) {\n          pathStart.push(pathArr[i][0]);\n          pathArr[i] = pathArr[i].substring(1, pathArr[i].length);\n          if (i === (pathArr.length - 1)) {\n            pathArr[i] = pathArr[i].substring(0, pathArr[i].length - 1);\n          }\n          newPathArr[i] = pathArr[i].split(',');\n        }\n      }\n      if (newPathArr && newPathArr.length) {\n        for (i = 0; i < newPathArr.length; i++) {\n          if (newPathArr[i].length) {\n            for (j = 0; j < newPathArr[i].length; j++) {\n              newPathArr[i][j] = Number(newPathArr[i][j]);\n              if (pathStart[i] !== 'A') {\n                if (j === 0) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 1) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              } else if (pathStart[i] === 'A') {\n                if (j === 5) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.x);\n                } else if (j === 6) {\n                  newPathArr[i][j] = newPathArr[i][j] - (symbolBBox.y);\n                }\n              }\n            }\n          }\n          finalPath += pathStart[i] + newPathArr[i].toString();\n        }\n      }\n      finalPath = finalPath + 'Z';\n    }\n    parserConfig = {\n      toolText: config.tooltext,\n      dominantNode: getUniqueNodes(config.dominantNode),\n      subservientNode: getUniqueNodes(config.subservientNode),\n      dominantFlowDataValue: getUniqueNodes(config.dominantFlowDataValue),\n      subservientFlowDataValue: getUniqueNodes(config.subservientFlowDataValue)\n    };\n    ;\n    parserConfig.dominantFlowValue = getDominantFlowValue(config, parserConfig.dominantNode);\n    parserConfig.subservientFlowValue = getDominantFlowValue(config, parserConfig.subservientNode);\n    parserConfig.dominantPlotIdentifier = getPlotIdentifier(getUniqueNodes(config.dominantNodeColor), uniChar, dominantLegendItem, finalPath);\n    parserConfig.subservientPlotIdentifier = getPlotIdentifier(getUniqueNodes(config.subservientNodeColor), uniChar, subservientLegendItem, finalPath);\n\n    linkToolText = parseTooltext(config.tooltext, macroIndices,\n      parserConfig, config);\n    config.setLinkToolText = linkToolText;\n\n    for (key in config.tooltip) {\n      if (config.tooltip.hasOwnProperty(key)) {\n        body += `\n          <span style='color: ${config.tooltip[key].color};'>\n            ${uniChar}\n          </span>\n          ${key + config.toolTipSepChar}\n          ${config.showLinkValueOnHover ? ` &nbsp;` : ''}\n          ${config.showLinkValueOnHover ? config.tooltip[key].value : ''}\n        <br>`;\n      }\n    }\n\n    if (!config.tooltext) {\n      return (\n        `<div style='padding: 2px; vertical-align: middle; font-size: ${basefontsize}px;'>\n          ${body}\n        </div>`\n      );\n    }\n    return (\n      `<div style='padding: 2px; vertical-align: middle; font-size: ${basefontsize}px;'>\n        ${config.setLinkToolText}\n      </div>`\n    );\n  };\nclass Ribbon extends SmartRenderer {\n  constructor (id) {\n    super(id);\n    this.addEventListener('fc-mouseover', mouseOverFn);\n    this.addEventListener('fc-mouseout', mouseOutFn);\n    this.addEventListener('fc-click', mouseClickFn);\n  }\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    Object.assign(this.config, dataObj);\n  }\n\n  setDimension (dim) {\n    this.config.radius = dim.radius;\n  }\n\n  allocatePosition () {\n    let config = this.config;\n    config.path = ribbonGenerator(config.points, config.radius, 0);\n    config.ribbonAttrs = config.hovered ? config.focussedState : config.unfocussed ? config.unfocussedState : config.normalState;\n    config.ribbonAttrs.path = config.path;\n    config.ribbonAttrs['stroke-width'] = (config.showBorder ? config.borderThickness : 0) || 0;\n  }\n\n  draw () {\n    const ribbon = this,\n      chartConfig = ribbon.getFromEnv('chart').config,\n      height = chartConfig.canvasHeight,\n      width = chartConfig.canvasWidth,\n      cx = chartConfig.canvasLeft + width / 2,\n      cy = chartConfig.canvasTop + height / 2,\n      chartWidth = chartConfig.width,\n      chartHeight = chartConfig.height,\n      ribbonRadius = chartConfig.ribbonRadius,\n      config = ribbon.config,\n      angles = config.angles,\n      tooltext = config.showToolTip ? getTooltext(config, chartConfig, chartConfig.style.baseFontSize, ribbon) : BLANKSTRING,\n      { x: x1, y: y1 } = polarToCartesian(ribbonRadius, normalizeAngles(deg2Rad(angles[0]))),\n      { x: x2, y: y2 } = polarToCartesian(ribbonRadius, normalizeAngles(deg2Rad(angles[3])));\n    if (config.dominantNode.length > 1 && config.rawColor) {\n      config.ribbonAttrs.fill = toRaphaelColor({\n        color: `${config.rawColor[0]},${config.rawColor[1]}`,\n        alpha: config.hovered ? config.hoverAlpha : config.unfocussed ? config.unfocussedAlpha : config.alpha,\n        x1: (x1 + cx) / chartWidth,\n        y1: (y1 + cy) / chartHeight,\n        x2: (x2 + cx) / chartWidth,\n        y2: (y2 + cy) / chartHeight\n      });\n      config.ribbonAttrs.stroke = toRaphaelColor({\n        color: `${config.rawColor[0]},${config.rawColor[1]}`,\n        alpha: config.hovered ? config.hoveredAlpha : config.unfocussed ? config.unfocussedAlpha : config.borderAlpha,\n        x1: (x1 + cx) / chartWidth,\n        y1: (y1 + cy) / chartHeight,\n        x2: (x2 + cx) / chartWidth,\n        y2: (y2 + cy) / chartHeight\n      });\n    }\n    ribbon.addGraphicalElement({\n      el: 'path',\n      label: 'ribbon',\n      tooltext,\n      attr: config.ribbonAttrs,\n      container: {\n        id: 'link-container',\n        isParent: true\n      },\n      component: ribbon\n    });\n  }\n\n  getName () {\n    return 'ribbon';\n  }\n\n  getType () {\n    return 'dataset';\n  }\n}\n\nexport default Ribbon;\n","import Dragarea from '@fusioncharts/powercharts/src/chart/dragarea';\nexport default Dragarea;\n","import Multicanvascrosslinemanager from '@fusioncharts/features/src/multicanvas-crossline-manager';\nexport default Multicanvascrosslinemanager;\n","import Spline from '../viz/spline';\nimport Logmscolumn2d from '../viz/logmscolumn2d';\nimport Logmsline from '../viz/logmsline';\nimport LogStackedColumn2d from '../viz/logstackedcolumn2d';\nimport Splinearea from '../viz/splinearea';\nimport Msspline from '../viz/msspline';\nimport MSSplineDy from '../viz/mssplinedy';\nimport Mssplinearea from '../viz/mssplinearea';\nimport Errorbar2d from '../viz/errorbar2d';\nimport Errorline from '../viz/errorline';\nimport Errorscatter from '../viz/errorscatter';\nimport Inversemsarea from '../viz/inversemsarea';\nimport Inversemscolumn2d from '../viz/inversemscolumn2d';\nimport Inversemsline from '../viz/inversemsline';\nimport Dragcolumn2d from '../viz/dragcolumn2d';\nimport Dragline from '../viz/dragline';\nimport Kagi from '../viz/kagi';\nimport WaterFall2D from '../viz/waterfall2d';\nimport SelectScatter from '../viz/selectscatter';\nimport MultilevelPie from '../viz/multilevelpie';\nimport Sunburst from '../viz/sunburst';\nimport MultiAxisLine from '../viz/multiaxisline';\nimport MSStepLine from '../viz/msstepline';\nimport DragNode from '../viz/dragnode';\nimport CandleStick from '../viz/candlestick';\nimport BoxAndWhisker2D from '../viz/boxandwhisker2d';\nimport Sankey from '../viz/sankey';\nimport HeatMap from '../viz/heatmap';\nimport Radar from '../viz/radar';\nimport Chord from '../viz/chord';\n// import TreeMap from '../viz/treemap';\nimport DragArea from '../viz/dragarea';\nimport CrossLine from '../features/crossline';\nimport MultiCanvasCrossLine from '../features/multicanvas-crossline-manager';\n\nexport {\n  Spline,\n  Logmscolumn2d,\n  LogStackedColumn2d,\n  Logmsline,\n  Splinearea,\n  MSSplineDy,\n  Msspline,\n  Mssplinearea,\n  Errorbar2d,\n  Errorline,\n  Errorscatter,\n  Inversemsarea,\n  Inversemscolumn2d,\n  Inversemsline,\n  Dragcolumn2d,\n  Dragline,\n  Kagi,\n  WaterFall2D,\n  SelectScatter,\n  MultilevelPie,\n  Sunburst,\n  MultiAxisLine,\n  MSStepLine,\n  DragNode,\n  CandleStick,\n  BoxAndWhisker2D,\n  Sankey,\n  HeatMap,\n  Radar,\n  // TreeMap,\n  DragArea,\n  Chord\n};\n\nexport default {\n  name: 'powercharts',\n  type: 'package',\n  requiresFusionCharts: true,\n  extension: FusionCharts => {\n    FusionCharts.addDep(CrossLine);\n    FusionCharts.addDep(MultiCanvasCrossLine);\n\n    FusionCharts.addDep(Spline);\n    FusionCharts.addDep(Logmscolumn2d);\n    FusionCharts.addDep(LogStackedColumn2d);\n    FusionCharts.addDep(Logmsline);\n    FusionCharts.addDep(Splinearea);\n    FusionCharts.addDep(MSSplineDy);\n    FusionCharts.addDep(Msspline);\n    FusionCharts.addDep(Mssplinearea);\n    FusionCharts.addDep(Errorbar2d);\n    FusionCharts.addDep(Errorline);\n    FusionCharts.addDep(Errorscatter);\n    FusionCharts.addDep(Inversemsarea);\n    FusionCharts.addDep(Inversemscolumn2d);\n    FusionCharts.addDep(Inversemsline);\n    FusionCharts.addDep(Dragcolumn2d);\n    FusionCharts.addDep(Dragline);\n    FusionCharts.addDep(Kagi);\n    FusionCharts.addDep(WaterFall2D);\n    FusionCharts.addDep(SelectScatter);\n    FusionCharts.addDep(MultilevelPie);\n    FusionCharts.addDep(Sunburst);\n    FusionCharts.addDep(MultiAxisLine);\n    FusionCharts.addDep(MSStepLine);\n    FusionCharts.addDep(DragNode);\n    FusionCharts.addDep(CandleStick);\n    FusionCharts.addDep(BoxAndWhisker2D);\n    FusionCharts.addDep(Sankey);\n    FusionCharts.addDep(HeatMap);\n    FusionCharts.addDep(Radar);\n    FusionCharts.addDep(Chord);\n    // FusionCharts.addDep(TreeMap);\n    FusionCharts.addDep(DragArea);\n  }\n};\n","import Logmscolumn2d from '@fusioncharts/powercharts/src/chart/logmscolumn2d';\nexport default Logmscolumn2d;\n","import MSLog from '../_internal/mslog';\nimport MultiSeriesManager from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\n\nconst COLUMN = 'column';\nclass LogMSColumn2d extends MSLog {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'LogMSColumn2d';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'LogMSColumn2d';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = COLUMN;\n    config.enablemousetracking = true;\n  }\n  getDSGroupdef () {\n    return MultiSeriesManager;\n  }\n  getDSdef () {\n    return ColumnDataset;\n  }\n}\nexport default LogMSColumn2d;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport logAxisFactory from '../../factories/log-axis';\nimport { pluckNumber, pluck, chartPaletteStr, pluckFontSizeMaintainUnit } from '@fusioncharts/core/src/lib';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\n\nclass MsLog extends MSCartesian {\n  constructor () {\n    super();\n    this.registerFactory('axis', logAxisFactory, ['canvas']);\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MsLog';\n  }\n\n  _feedAxesRawData () {\n    var iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      xAxisConf,\n      yAxisConf;\n\n    xAxisConf = iapi.getSpecificxAxisConf();\n    yAxisConf = iapi.getSpecificyAxisConf();\n\n    if (yAxisConf.base === '1') {\n      yAxisConf.base = 10;\n      yAxisConf.logBase = 10;\n    }\n    yAxisConf.minorDivlinecolor = pluck(chartAttrs.minordivlinecolor, yAxisConf.divLineColor);\n    yAxisConf.minorDivLineThickness = pluck(chartAttrs.minordivlinethickness, 1);\n    yAxisConf.minorDivLineAlpha = pluck(chartAttrs.minordivlinealpha,\n      yAxisConf.divLineAlpha / 2);\n    xAxisConf.vtrendlines = dataObj.vtrendlines;\n    yAxisConf.trendlines = dataObj.trendlines;\n\n    return {\n      yAxisConf: [yAxisConf],\n      xAxisConf: [xAxisConf]\n    };\n  }\n\n  /**\n   * Returns x-axis configuration for chart.\n   * @return {Object} configurations of x-axis.\n   */\n  getSpecificxAxisConf () {\n    var iapi = this,\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      xAxisConf = iapi.getBasexAxisConf();\n\n    xAxisConf.showZeroPlane = chartAttrs.showvzeroplane;\n    xAxisConf.zeroPlaneThickness = chartAttrs.vzeroplanethickness;\n    xAxisConf.zeroPlaneAlpha = chartAttrs.vzeroplanealpha;\n    xAxisConf.showAxisLine = pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines, chartAttrs.drawAxisLines, 0);\n    xAxisConf.axisLineColor = pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, '#000000');\n    xAxisConf.isReverse = false;\n    xAxisConf.showAlternateGridColor = pluckNumber(chartAttrs.showalternatevgridcolor, 0);\n    xAxisConf.numDivLines = chartAttrs.numvdivlines;\n    xAxisConf.maxLabelHeight = chartAttrs.maxlabelheight;\n    xAxisConf.axisName = chartAttrs.xaxisname;\n    xAxisConf.setAdaptiveMin = chartAttrs.setadaptivexmin;\n    xAxisConf.showLimits = chartAttrs.showvlimits;\n    xAxisConf.showDivLineValues = pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues);\n\n    return xAxisConf;\n  }\n\n  /**\n   * Returns y-axis configuration for chart.\n   * @return {Object} configurations of y-axis.\n   */\n  getSpecificyAxisConf () {\n    var iapi = this,\n      chartAttrs = iapi.getFromEnv('chart-attrib'),\n      palleteString = iapi.config.is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      invertYAxis = !!pluckNumber(chartAttrs.invertyaxis, 0), // eslint-disable-line good-practices/no-single-usage-variable\n      colorM = iapi.getFromEnv('color-manager'),\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    return {\n      isVertical: true,\n      isReverse: !invertYAxis,\n      isOpposit: isEqualString(chartAttrs.yaxisposition, 'right'),\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, 'Verdana,sans'),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.yaxisnamepadding,\n      axisValuePadding: chartAttrs.yaxisvaluespadding,\n      axisNameFont: chartAttrs.yaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.yaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.yaxisnamefontsize,\n      axisNameFontColor: chartAttrs.yaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.yaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.yaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.yaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.yaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.yaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.yaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.yaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.yaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.yaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.yaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.yaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.yaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.yaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.yaxisnameborderdashgap,\n      axisNameWidth: chartAttrs.yaxisnamewidth,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      rotateAxisName: pluckNumber(chartAttrs.rotateyaxisname, 1),\n      axisName: chartAttrs.yaxisname,\n      divLineColor: pluck(chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.divlinealpha, colorM.getColor('divLineAlpha')),\n      divLineThickness: pluckNumber(chartAttrs.divlinethickness, 2),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatehgridcolor, 1),\n      alternateGridColor: pluck(chartAttrs.alternatehgridcolor, colorM.getColor('altHGridColor')),\n      alternateGridAlpha: pluck(chartAttrs.alternatehgridalpha, colorM.getColor('altHGridAlpha')),\n      numDivLines: chartAttrs.numdivlines,\n      axisMinValue: chartAttrs.yaxisminvalue,\n      axisMaxValue: chartAttrs.yaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptiveymin,\n      adjustDiv: chartAttrs.adjustdiv,\n      labelStep: chartAttrs.yaxisvaluesstep,\n      showAxisValues: pluckNumber(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue),\n      showLimits: pluckNumber(chartAttrs.showyaxislimits, chartAttrs.showlimits, iapi.showLimits),\n      showDivLineValues: pluckNumber(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue),\n      showZeroPlane: chartAttrs.showzeroplane,\n      zeroPlaneColor: chartAttrs.zeroplanecolor,\n      zeroPlaneThickness: chartAttrs.zeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.zeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showyaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n      base: chartAttrs.base,\n      logBase: chartAttrs.logbase,\n      axisLineColor: pluck(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, '#000000'),\n      showMinorDivLineValues: pluckNumber(chartAttrs.showminordivlinevalues, 0),\n      numMinorDivLines: chartAttrs.numminordivlines,\n      labelFont: chartAttrs.yaxisvaluefont,\n      labelFontSize: this.computeFontSize(chartAttrs.yaxisvaluefontsize),\n      labelFontSizeWithUnit: chartAttrs.yaxisvaluefontsize,\n      labelFontColor: chartAttrs.yaxisvaluefontcolor,\n      labelAlpha: chartAttrs.yaxisvaluealpha,\n      labelFontBold: chartAttrs.yaxisvaluefontbold,\n      labelFontItalic: chartAttrs.yaxisvaluefontitalic,\n      labelBdrColor: chartAttrs.yaxisvaluebordercolor,\n      labelBdrAlpha: chartAttrs.yaxisvalueborderalpha,\n      labelBgAlpha: chartAttrs.yaxisvaluebgalpha,\n      labelLink: chartAttrs.yaxisvaluelink,\n      labelBgColor: chartAttrs.yaxisvaluebgcolor,\n      labelBdrThickness: chartAttrs.yaxisvalueborderthickness,\n      labelBdrPadding: chartAttrs.yaxisvalueborderpadding,\n      labelBdrRadius: chartAttrs.yaxisvalueborderradius,\n      labelBdrDashed: chartAttrs.yaxisvalueborderdashed,\n      labelBdrDashLen: chartAttrs.yaxisvalueborderdashlen,\n      labelBdrDashGap: chartAttrs.yaxisvalueborderdashgap\n    };\n  }\n}\nexport default MsLog;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\n// import CartesianAxis from '../axis/cartesian';\nimport LogAxis from '@fusioncharts/core/src/axis/log';\nimport CategoryAxis from '@fusioncharts/core/src/axis/category';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n    zoomObj = {\n      zoomable: true,\n      pannable: true\n    },\n    config = chart._feedAxesRawData(),\n    yAxis,\n    xAxis,\n    redraw = () => axisRefVisualCartesian.asyncDraw();\n\n  componentFactory(chart, LogAxis, 'yAxis', 1, config.yAxisConf);\n  componentFactory(chart, CategoryAxis, 'xAxis', 1, config.xAxisConf);\n\n  yAxis = chart.getChildren('yAxis')[0];\n  xAxis = chart.getChildren('xAxis')[0];\n  yAxis.setLinkedItem('canvas', canvas);\n  xAxis.setLinkedItem('canvas', canvas);\n  axisRefVisualCartesian.setLinkedItem(yAxis.getId(), yAxis);\n  axisRefVisualCartesian.setLinkedItem(xAxis.getId(), xAxis);\n\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, xAxis);\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, yAxis);\n\n  canvas.attachAxis(xAxis, false, chart.zoomX ? zoomObj : {});\n  canvas.attachAxis(yAxis, true, chart.zoomY ? zoomObj : {});\n\n  chart._setCategories();\n}\n","import ScaleLog from '@fusioncharts/utils/src/scales/log';\nimport diff from '@fusioncharts/utils/src/scale-utils/array/diff';\nimport extent from '@fusioncharts/utils/src/array/extent';\nimport CartesianAxis from './cartesian';\nimport {\n  UNDEF,\n  pluckNumber,\n  pluck,\n  preDefStr,\n  getSuggestiveRotation,\n  convertColor\n} from '../lib';\nimport { getTrendLineLimits } from './common-api';\n\nvar validate = function (param) {\n    if (param === null || param === UNDEF || param === '' || isNaN(param)) {\n    // Variable is not specified - so return false.\n      return false;\n    }\n    // Variable is specified - so return true.\n    return true;\n  },\n  queryOptions = { wrtVisible: true },\n  POSITION_START = preDefStr.POSITION_START,\n  POSITION_TOP = preDefStr.POSITION_TOP,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  POSITION_END = preDefStr.POSITION_END,\n  LABEL_ID = '_label',\n  BLANKSTRING = '',\n  EVENTARGS = 'eventArgs',\n  NOSTRING = 'none',\n  POINTER = 'pointer',\n  logTicksMerge = function (majorTickArr = [], minorTickArr = []) {\n    if (majorTickArr.length === 0) return [];\n    let majorArrlen = majorTickArr.length,\n      minorArrLen = minorTickArr.length,\n      k = majorArrlen - 1,\n      l = minorArrLen - 1,\n      mergedArr = [majorTickArr[k]];\n    k--;\n    while (k >= 0) {\n      if (minorTickArr[l] > majorTickArr[k]) {\n        mergedArr.push(minorTickArr[l]);\n        l--;\n      } else {\n        mergedArr.push(majorTickArr[k]);\n        k--;\n      }\n    }\n    return mergedArr;\n  };\nclass LogAxis extends CartesianAxis {\n  constructor () {\n    super();\n    this.config.scale = new ScaleLog();\n    this.config.labelMap = [];\n  }\n\n  /**\n   * Sets the default configuration of the axis\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.base = 10;\n    config.showMinorDivLineValues = 1;\n    config.numMinorDivLines = UNDEF;\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'log';\n  }\n\n  /**\n   * Prepare the axis attributes for use by the chart drawing. It applies some log specific\n   * values to the axis' configuration.\n   * @param  {Object}  rawAttr The raw attributes to be set\n   */\n  configureAttributes (rawAttr) {\n    var axis = this,\n      axisConfig = axis.config,\n      numberFormatter = axis.getFromEnv('number-formatter'),\n      colorM = axis.getFromEnv('color-manager'),\n      axisAttr;\n\n    super.configureAttributes(rawAttr);\n    axisAttr = axisConfig.rawAttr;\n\n    axisConfig.minorDivlinecolor = convertColor(pluck(axisAttr.minorDivlinecolor,\n      colorM.getColor('divLineColor')),\n    pluckNumber(axisAttr.minorDivLineAlpha, colorM.getColor('divLineAlpha') / 2));\n    axisConfig.axisMinValue = numberFormatter.getCleanValue(axisAttr.axisMinValue);\n    axisConfig.axisMaxValue = numberFormatter.getCleanValue(axisAttr.axisMaxValue);\n    axisConfig.minorTicks = [];\n\n    if (axisConfig.axisMinValue <= 0) {\n      axisConfig.axisMinValue = UNDEF;\n    }\n\n    if (axisConfig.axisMaxValue <= 0) {\n      axisConfig.axisMaxValue = UNDEF;\n    }\n    axis.getScale().setBase(axisConfig.base);\n    axisConfig.minorDivLineThickness = pluckNumber(axisAttr.minorDivLineThickness, 1);\n    axisConfig.band.isDraw = 0;\n  }\n\n  generateTicks () {\n    let ticks = this.getScale().ticks();\n    this.config._allTicks = ticks.slice();\n    return ticks;\n  }\n\n  /**\n   * Generates minor ticks between every majot tick visible in the current visible range\n   */\n  generateMinorTicks () {\n    return this.getScale()\n      .minorTicks(this.config.numMinorDivLines);\n  }\n\n  _setAxisRange ({ min = 0.1, max = 1 }) {\n    var scale = this.getScale().setDomain([min, max]).nice(),\n      axisConfig = this.config,\n      axisRange = axisConfig.axisRange;\n\n    axisConfig.ticks = this.generateTicks();\n    axisConfig.minorTicks = this.generateMinorTicks();\n\n    // eslint-disable-next-line\n    [min, max] = scale.getDomain();\n    axisRange.max = max;\n    axisRange.min = min;\n\n    this.setVisibleConfig(min, max);\n  }\n\n  setDataLimit (_max, _min) {\n    var axis = this,\n      max = _max,\n      min = _min,\n      axisConfig = axis.config,\n      AxisMaxValue = axisConfig.axisMaxValue,\n      AxisMinValue = axisConfig.axisMinValue,\n      trendMin,\n      trendMax;\n\n    if (validate(AxisMinValue) && Number(AxisMinValue) <= min) {\n      min = AxisMinValue;\n    }\n    if (validate(AxisMaxValue) && Number(AxisMaxValue) >= max) {\n      max = AxisMaxValue;\n    }\n\n    if (min === 0) {\n      min = 1;\n    }\n    if (max === 0) {\n      max = axisConfig.base;\n    }\n\n    [trendMin, trendMax] = axis.getTrendLineLimits();\n\n    [min, max] = extent([trendMin, trendMax, min, max], a => Number(a));\n\n    this._setAxisRange({min, max});\n  }\n\n  _parseLabel () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      chartConfig = chart.config,\n      axisRange = axisConfig.axisRange,\n      isOpposit = axisConfig.isOpposit,\n      increment,\n      labels = axisConfig.labels,\n      style = labels.style,\n      i,\n      isVertical = axisConfig.isVertical,\n      max = axisRange.max,\n      min = axisRange.min,\n      canvasBottom = chartConfig.canvasBottom,\n      canvasLeft = chartConfig.canvasLeft,\n      canvasRight = chartConfig.canvasRight,\n      canvasTop = chartConfig.canvasTop,\n      axisPadding = axisConfig.labelPadding,\n      numberFormatter = axis.getFromEnv('number-formatter'),\n      axisValueMaxH = axisConfig.labelMaxH,\n      axisValueMaxW = axisConfig.labelMaxW,\n      axisStartPosition = axisConfig.axisStartPosition,\n      text,\n      getLimit,\n      labelRotation,\n      labelLineHeight,\n      numberFormatterFn,\n      addCategoryPadding,\n      axisAttrObj,\n      allTicks,\n      ticksLen,\n      tickVal,\n      tickInPx,\n      prevPos,\n      labelMaxProp,\n      labelArr,\n      axisComp = axis.components,\n      minorTicks = axisConfig.minorTicks,\n      checkForLimit;\n\n    if (style.lineHeight) {\n      labelLineHeight = style.lineHeight;\n      if (labelLineHeight.indexOf('px') !== -1) {\n        labelLineHeight = labelLineHeight.replace('px', '');\n        labelLineHeight = parseFloat(labelLineHeight);\n      }\n    }\n    // checking if labels are to be drawn user can decide or can be decided by axis placeAxis function\n    if (axisConfig.labels.isDraw) {\n      checkForLimit = axis.getZoom() !== 1;\n\n      labelArr = axisComp.labels;\n\n      // initialize the increment by taking account the label step\n      axisConfig.labels.step ? increment = axisRange.tickInterval * axisConfig.labels.step\n        : increment = axisRange.tickInterval;\n      labelRotation = axisConfig.labels.rotation;\n      // intelligently calculate the loop max and loop min from the visual active dataset\n      // get the visible configuration means the value between the dataset is visible\n      getLimit = this.getVisibleConfig();\n\n      axisComp.labelIndexArr = [];\n\n      axisConfig.allTicks = allTicks = logTicksMerge(axisConfig.ticks, axisConfig.minorTicks);\n\n      labelMaxProp = isVertical ? axisValueMaxH : axisValueMaxW;\n\n      ticksLen = allTicks.length;\n      for (i = 0; i < ticksLen; i++) {\n        tickVal = allTicks[i];\n        tickInPx = axis.getPixel(tickVal, queryOptions);\n        // if minor div and minor value is set to display none\n        if (minorTicks.indexOf(tickVal) >= 0 && !axisConfig.showMinorDivLineValues) {\n          continue;\n        }\n        // check for overlap\n        if (prevPos) {\n          if (tickInPx > prevPos - labelMaxProp &&\n                            tickInPx < prevPos + labelMaxProp) {\n            continue;\n          }\n        }\n        // if value is not between the visual limit increment it and continue\n        if (checkForLimit && (tickVal < getLimit.minValue || tickVal > getLimit.maxValue)) {\n          continue;\n        }\n        // if values are not limit value and label drawing is off other\n        // than limit increment it and continue\n        if (!axisConfig.labels.drawNormalVal && !(axisConfig.labels.drawLimitVal &&\n                        (tickVal === min || tickVal === max))) {\n          continue;\n        }\n        if (!axisConfig.labels.drawNormalVal && !(tickVal === min || tickVal === max)) {\n          continue;\n        }\n        // if value are limit value but limit value are not mean to be drawn\n        if (!axisConfig.labels.drawLimitVal && (tickVal === min || tickVal === max)) {\n          continue;\n        }\n        // if value is zero and show zero plane is off\n        if (axisConfig.showZeroPlaneValue === 0 && axisConfig.showZeroPlane === 0 && tickVal === 0) {\n          continue;\n        }\n        // For overlapping of 0 and other value give priority to zero value\n        if (axisConfig.showZeroPlane === 1 && axisConfig.showZeroPlaneValue === 1 &&\n                            ((tickVal < 0 && (tickVal + increment) > 0) ||\n                                (tickVal > 0 && (tickVal - increment) < 0))) {\n          if (isVertical) {\n            if ((tickInPx + axisValueMaxH) >=\n                                axis.getPixel(0, queryOptions) && axis.getPixel(0, queryOptions) >=\n                                (tickInPx - axisValueMaxH)) {\n              continue;\n            }\n          } else {\n            if ((tickInPx + axisValueMaxW) >=\n                                axis.getPixel(0, queryOptions) && axis.getPixel(0, queryOptions) >=\n                                (tickInPx - axisValueMaxW)) {\n              continue;\n            }\n          }\n        }\n        // Common style attribute for both axis\n        axisAttrObj = {\n          fill: style.color,\n          'font-size': style.fontSize,\n          'cursor': style.labelLink ? POINTER : ''\n        };\n        // make the attribute ready to use\n        // y-axis\n        if (isVertical) {\n          if (axisConfig.numberFormatterFn) {\n            numberFormatterFn = numberFormatter[axisConfig.numberFormatterFn];\n          } else if (axisConfig.isPercent) {\n            numberFormatterFn = numberFormatter.percentValue;\n          } else {\n            numberFormatterFn = numberFormatter.yAxis;\n          }\n          text = '' + numberFormatterFn.call(numberFormatter, tickVal);\n          // @temp\n          addCategoryPadding = axisConfig.hasCategory\n            ? axisConfig.categories.category[i].labelPadding || 0 : 0;\n          axisAttrObj['text-anchor'] = isOpposit ? POSITION_START : POSITION_END;\n          axisAttrObj.text = text;\n          axisAttrObj.x = isOpposit ? (axisStartPosition || canvasRight) + axisPadding\n            : (axisStartPosition || canvasLeft) - axisPadding;\n          axisAttrObj.y = addCategoryPadding ? tickInPx + addCategoryPadding\n            : tickInPx;\n          prevPos = axisAttrObj.y;\n          // x-axis\n        } else {\n          if (axisConfig.numberFormatterFn) {\n            numberFormatterFn = numberFormatter[axisConfig.numberFormatterFn];\n          } else if (axisConfig.isPercent) {\n            numberFormatterFn = numberFormatter.percentValue;\n          } else {\n            numberFormatterFn = numberFormatter.xAxis;\n          }\n          text = '' + numberFormatterFn.call(numberFormatter, tickVal);\n          // @temp\n          addCategoryPadding = axisConfig.hasCategory\n            ? Number(axisConfig.categories.category[i].labelPadding) || 0 : 0;\n          axisAttrObj.text = text;\n          axisAttrObj.x = tickInPx;\n          axisAttrObj.y = isOpposit ? (axisStartPosition || canvasTop) - axisPadding\n            : (axisStartPosition || canvasBottom) + axisPadding;\n          if (addCategoryPadding) {\n            axisAttrObj.y += addCategoryPadding;\n          }\n          if (labelRotation) {\n            axisAttrObj['text-anchor'] = isOpposit ? POSITION_START : POSITION_END;\n            axisAttrObj['vertical-align'] = 'middle';\n          } else {\n            axisAttrObj['vertical-align'] = isOpposit ? POSITION_BOTTOM : POSITION_TOP;\n          }\n          prevPos = axisAttrObj.x;\n        }\n\n        // If labels shift is applicable (Specially for 3D) then apply the changes\n        if (labels.shiftX) {\n          axisAttrObj.x += labels.shiftX;\n        }\n        if (labels.shiftY) {\n          axisAttrObj.y += labels.shiftY;\n        }\n        axisAttrObj.transform = getSuggestiveRotation(labelRotation,\n          axisAttrObj.x, axisAttrObj.y);\n        // check if extra label element is present don't draw it just use it by changing the attributes\n        axisComp.labelIndexArr.push(i);\n        labelArr[i] = labelArr[i] ||\n          {\n            config: {\n              props: {\n                label: {\n                }\n              }\n            }\n          };\n        if (typeof tickVal === 'undefined') {\n          axisAttrObj['text-bound'] = [];\n        } else {\n          axisAttrObj['text-bound'] = [pluck(style.backgroundColor, BLANKSTRING),\n            pluck(style.borderColor, BLANKSTRING),\n            pluck(style.borderThickness, BLANKSTRING),\n            pluck(style.borderPadding, 0),\n            pluck(style.borderRadius, 0),\n            pluck(style.borderDash, NOSTRING)];\n        }\n        labelArr[i].config.props.label.attr = axisAttrObj;\n        labelArr[i].config.props.label.css = text.css;\n        labelArr[i].config.value = tickVal;\n      }\n    }\n  }\n  _drawLabel () {\n    var axis = this,\n      axisConfig = axis.config,\n      animationManager = axis.getFromEnv('animationManager'),\n      chart = axis.getFromEnv('chart'),\n      labels = axisConfig.labels,\n      style = labels.style,\n      i,\n      j,\n      axisContainer = axisConfig.axisContainer,\n      id,\n      mapArr = [],\n      removeElementsArr,\n      removeElem,\n      textElement,\n      axisComp = axis.components,\n      labelIndexArr = axisComp.labelIndexArr,\n      css = {\n        fontFamily: style.fontFamily,\n        fontSize: style.fontSize,\n        fontWeight: style.fontWeight,\n        fontStyle: style.fontStyle,\n        lineHeight: style.lineHeight\n      },\n      labelArrLen,\n      ticksVal,\n      labelArr,\n      raiseEvent = function (event) {\n        return function (data) {\n          var ele = this;\n          chart.plotEventHandler(ele, data, event);\n        };\n      },\n      removeElements = arrOfId => {\n        for (i = 0; i < arrOfId.length; ++i) {\n          removeElem = axis.getGraphicalElement(arrOfId[i]);\n          removeElem && axis.removeGraphicalElement(removeElem);\n        }\n      };\n\n    // checking if labels are to be drawn user can decide or can be decided by axis placeAxis function\n    if (axisConfig.labels.isDraw) {\n      labelArr = axisComp.labels;\n\n      axisContainer.css(css);\n\n      labelArrLen = labelIndexArr.length;\n      for (j = 0; j < labelArrLen; j++) {\n        i = labelIndexArr[j];\n        ticksVal = labelArr[i].config.value;\n\n        id = ticksVal + LABEL_ID;\n        textElement = axis.getGraphicalElement(id);\n        mapArr.push(id);\n        textElement = this.addGraphicalElement(id, animationManager.setAnimation({\n          container: axisContainer,\n          el: textElement || 'text',\n          attr: labelArr[i].config.props.label.attr,\n          data: {\n            value: ticksVal\n          },\n          component: this,\n          label: 'text',\n          css: labelArr[i].config.props.label.css\n        }));\n        textElement.on('fc-click', raiseEvent('dataLabelClick'))\n          .hover(raiseEvent('dataLabelRollOver'), raiseEvent('dataLabelRollOut'));\n\n        textElement.data(EVENTARGS, {\n          link: style.labelLink,\n          text: labelArr[i].config.props.label.attr.text,\n          index: i\n        });\n      }\n      removeElementsArr = diff(axisConfig.labelMap, mapArr);\n    } else {\n      removeElementsArr = axisConfig.labelMap;\n    }\n    axisConfig.labelMap = mapArr;\n    removeElements(removeElementsArr);\n  }\n\n  _getVMaxLabelDimention () {\n    var axis = this,\n      axisConfig = axis.config,\n      chart = axis.getFromEnv('chart'),\n      smartLabel = axis.getFromEnv('smartLabel'),\n      numberFormatter = axis.getFromEnv('number-formatter'),\n      labelStyle = axisConfig.labels.style,\n      maxTextSize = 0,\n      divArr,\n      divArrLen,\n      maxTextDim,\n      i,\n      text,\n      dimention,\n      numberFormatterFn,\n      curDiv;\n\n    smartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n    smartLabel.setStyle({\n      fontSize: labelStyle.fontSize,\n      fontFamily: labelStyle.fontFamily,\n      lineHeight: labelStyle.lineHeight,\n      fontWeight: labelStyle.fontWeight\n    });\n\n    if (axisConfig.isPercent) {\n      numberFormatterFn = numberFormatter.percentValue;\n    } else {\n      numberFormatterFn = numberFormatter.xAxis;\n    }\n\n    axisConfig.allTicks = divArr = logTicksMerge(axisConfig.ticks, axisConfig.minorTicks);\n    divArrLen = divArr.length;\n\n    for (i = 0; i < divArrLen; i++) {\n      curDiv = divArr[i];\n      text = '' + numberFormatterFn.call(numberFormatter, curDiv);\n\n      dimention = smartLabel.getOriSize(text);\n      axis.components.labels[i] = {\n        config: {\n          width: dimention.width,\n          height: dimention.height,\n          props: {\n            label: {\n            }\n          }\n        }\n      };\n      if (text.length > maxTextSize) {\n        maxTextDim = dimention;\n        maxTextSize = text.length;\n      }\n    }\n    return maxTextDim;\n  }\n  _getHMaxLabelDimention () {\n    // since there is no difference between vertival and horizontal label dimentions api in log axis yet\n    return this._getVMaxLabelDimention();\n  }\n  getCleanValue (_num) {\n    var axis = this,\n      num = _num,\n      value = null;\n    num = Math.abs(num);\n    if (num > 0) {\n      value = axis.getFromEnv('number-formatter').getCleanValue(num);\n    }\n    return value;\n  }\n}\n\nLogAxis.prototype.getTrendLineLimits = getTrendLineLimits;\n\nexport default LogAxis;\n","import Logmsline from '@fusioncharts/powercharts/src/chart/logmsline';\nexport default Logmsline;\n","import MSLog from '../_internal/mslog';\nimport LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\n\nlet LINE = 'line';\n\nclass LogMSLine extends MSLog {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'LogMSLine';\n  }\n\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'LogMSLine';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = LINE;\n    config.zeroplanethickness = 1;\n    config.enablemousetracking = true;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n    _setDefaultConfig.call(this);\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n  getDSdef () {\n    return LineDataset;\n  }\n}\nexport default LogMSLine;\n","import Logstackedcolumn2d from '@fusioncharts/powercharts/src/chart/logstackedcolumn2d';\nexport default Logstackedcolumn2d;\n","import LogMSColumn2d from '../logmscolumn2d';\nimport StackManager from '@fusioncharts/charts/src/dataset/groups/cartesian-stack';\n\nclass LogStackedColumn2d extends LogMSColumn2d {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'LogStackedColumn2d';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'LogStackedColumn2d';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.isstacked = true;\n  }\n  getDSGroupdef () {\n    return StackManager;\n  }\n}\nexport default LogStackedColumn2d;\n","import Errorbar2d from '@fusioncharts/powercharts/src/chart/errorbar2d';\nexport default Errorbar2d;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport MultiSeriesManager from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\nimport ErrorBar2DDataset from '../../dataset/errorbar2d';\n\nconst ERRORBAR_2D = 'errorbar2d';\nclass ErrorBar2D extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ErrorBar2D';\n  }\n\n  constructor () {\n    super();\n    this.showValues = 0;\n    this.isErrorChart = true;\n    // this.fireGroupEvent = true;\n    this.eiMethods = { };\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ErrorBar2D';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.hasLegend = true;\n    config.defaultDatasetType = ERRORBAR_2D;\n    config.enablemousetracking = true;\n  }\n  getDSGroupdef () {\n    return MultiSeriesManager;\n  }\n  getDSdef () {\n    return ErrorBar2DDataset;\n  }\n}\nexport default ErrorBar2D;\n","import { preDefStr, parseTooltext, pluck, getValidValue, pluckNumber, getFirstValue, HUNDREDSTRING,\n  parseUnsafeString, convertColor, getFirstAlpha, getFirstColor } from '@fusioncharts/core/src/lib';\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport errorbarAnimation from './index.animation';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_AAAAAA = colorStrings.AAAAAA,\n  ROUND = preDefStr.ROUND,\n  MOUSEOVER = 'mouseOver',\n  MOUSEOUT = 'mouseOut',\n  PERCENTAGESTRING = preDefStr.PERCENTAGESTRING,\n  pStr = preDefStr.pStr,\n  sStr = preDefStr.sStr,\n  BLANKSTRING = '',\n  UNDEF,\n  removePlots,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  COMMASPACE = ', ',\n  // showHoverEffectStr = preDefStr.showHoverEffectStr,\n  // SETROLLOVERATTR = preDefStr.setRolloverAttrStr,\n  // SETROLLOUTATTR = preDefStr.setRolloutAttrStr,\n  DEFAULT_CURSOR = 'default',\n\n  POINTER = 'pointer',\n  EVENTARGS = 'eventArgs',\n  GROUPID = 'groupId',\n  M = 'M',\n  H = 'H',\n  V = 'V',\n  _getHoveredPlot,\n  _firePlotEvent,\n  _checkPointerOverPlot,\n  _checkPointerOverErrorBar,\n  _rolloverResponseSetter = function (chart, data, event, dataset) {\n    var dataGraphics = data.graphics,\n      elem = dataGraphics && dataGraphics.element,\n      animationManager = chart.getFromEnv('animationManager');\n\n    if (!data.errorBarHovered && elem && elem.getData().showHoverEffect !== 0) {\n      animationManager.setAnimationState(MOUSEOVER);\n      animationManager.setAnimation({\n        el: elem,\n        label: 'rect',\n        component: dataset,\n        attr: elem.getData().setRolloverAttr,\n        doNotRemove: true\n      });\n    }\n    elem && chart.plotEventHandler(elem, event, ROLLOVER);\n  },\n  _rolloutResponseSetter = function (chart, data, event, dataset) {\n    var dataGraphics = data.graphics,\n      elem = dataGraphics && dataGraphics.element,\n      animationManager = chart.getFromEnv('animationManager');\n\n    if (!data.errorBarHovered && elem && elem.getData().showHoverEffect !== 0) {\n      animationManager.setAnimationState(MOUSEOUT);\n      animationManager.setAnimation({\n        el: elem,\n        label: 'rect',\n        component: dataset,\n        attr: elem.getData().setRolloutAttr,\n        doNotRemove: true\n      });\n    }\n    elem && chart.plotEventHandler(elem, event, ROLLOUT);\n  };\naddDep({\n  name: 'errorbar2DColumnAnimation',\n  type: 'animationRule',\n  extension: errorbarAnimation.column\n});\naddDep({\n  name: 'errorbar2DErrorAnimation',\n  type: 'animationRule',\n  extension: errorbarAnimation.error\n});\nclass ErrorBar2DDataset extends ColumnDataset {\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.drawCallBackFn = (state) => {\n      return function () {\n        if (state === 'disappearing') {\n          this.hide();\n        } else {\n          this.show();\n        }\n      };\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'errorBar2D';\n  }\n  /*\n   * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n   * This function is called once from the init() function of the Column class.\n   */\n  ErrorValueConfigure () {\n    var dataSet = this,\n      conf = dataSet.config,\n      // fcJSON = dataSet.fcJSON,\n      JSONData = conf.JSONData,\n      setDataArr = JSONData.data,\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      setData,\n      dataObj,\n      config,\n      dataStore = dataSet.components.data,\n      toolText,\n      seriesNameInTooltip = pluckNumber(chartAttr.seriesnameintooltip, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      seriesname,\n      tooltipSepChar = parseUnsafeString(pluck(chartAttr.tooltipsepchar, COMMASPACE)),\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      errorInPercent,\n      macroIndices,\n      parserConfig,\n      toolTipValue,\n      errorBarAlpha,\n      setErrorValue,\n      setPositiveErrorValue,\n      setNegativeErrorValue,\n      formatedVal,\n      setTooltext,\n      errorBarShadow,\n      maxValue = -Infinity,\n      minValue = Infinity,\n      parentYAxis,\n      setValue,\n      errorValue,\n      maxErrorValue,\n      catLen = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      len = Math.min(catLen, setDataArr && setDataArr.length), // eslint-disable-line good-practices/no-single-usage-variable\n      minErrorValue,\n      halfErrorBar,\n      positiveErrorValue,\n      negativeErrorValue,\n      cumulativeValueOnErrorBar,\n      positiveCumulativeErrorTooltext,\n      negativeCumulativeErrorTooltext,\n      getTooltext = function (setToolText) {\n        var tooltext;\n\n        if (!conf.showTooltip) {\n          tooltext = false;\n        } else {\n          if (formatedVal === null) {\n            tooltext = false;\n          } else if (setToolText !== UNDEF) {\n            macroIndices = [1, 2, 3, 4, 5, 6, 7, 99, 100, 101, 102, 120, 121, 131, 132];\n            parserConfig = {\n              yaxisName: parseUnsafeString(chartAttr.yaxisname),\n              xaxisName: parseUnsafeString(chartAttr.xaxisname),\n              formattedValue: config.toolTipValue,\n              errorValue: setErrorValue,\n              errorDataValue: config.errorToolTipValue,\n              errorPercentValue: config.errorPercentValue,\n              errorPercentDataValue: config.errorPercentValue,\n              positiveErrorValue: setPositiveErrorValue,\n              negativeErrorValue: setNegativeErrorValue,\n              positiveErrorDataValue: config.positiveErrorToolTipValue,\n              negativeErrorDataValue: config.negativeErrorToolTipValue,\n              label: config.label\n            };\n            tooltext = parseTooltext(setToolText, macroIndices,\n              parserConfig, setData, chartAttr, JSONData);\n          } else {\n            if (seriesNameInTooltip) {\n              seriesname = getFirstValue(JSONData && JSONData.seriesname);\n            }\n            tooltext = seriesname ? seriesname + tooltipSepChar : BLANKSTRING;\n            tooltext += config.label ? config.label + tooltipSepChar : BLANKSTRING;\n          }\n        }\n        return tooltext;\n      },\n      positiveErrorToolText,\n      negativeErrorToolText,\n      i;\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.errorInPercent = errorInPercent = pluckNumber(JSONData.errorinpercent, chartAttr.errorinpercent);// eslint-disable-line good-practices/no-single-usage-variable\n    conf.showValues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 0);\n    conf.errorBarShadow = errorBarShadow = pluckNumber(chartAttr.errorbarshadow, chartAttr.showshadow, 1);// eslint-disable-line good-practices/no-single-usage-variable\n    conf.ignoreEmptyDatasets = pluckNumber(JSONData.ignoreemptydatasets, 0);\n    halfErrorBar = pluckNumber(chartAttr.halferrorbar, 1);// eslint-disable-line good-practices/no-single-usage-variable\n    conf.notHalfErrorBar = !pluckNumber(chartAttr.halferrorbar, 1);\n\n    errorBarAlpha = getFirstAlpha(pluck(\n      JSONData.errorbaralpha, chartAttr.errorbaralpha, conf.plotfillalpha));\n    conf.errorBarWidthPercent = pluckNumber(\n      JSONData.errorbarwidthpercent, chartAttr.errorbarwidthpercent, 70);\n    conf.errorBarColor = convertColor(getFirstColor(\n      pluck(JSONData.errorbarcolor, chartAttr.errorbarcolor,\n        COLOR_AAAAAA)), errorBarAlpha);\n    conf.errorBarThickness = pluckNumber(\n      JSONData.errorbarthickness, chartAttr.errorbarthickness, 1);\n    conf.shadowOpacity = errorBarShadow ? (errorBarAlpha / 250) : 0;\n    conf.parentYAxis =\n      parentYAxis = pluck(JSONData.parentyaxis && JSONData.parentyaxis.toLowerCase(), pStr) === sStr ? 1 : 0;\n    conf.cumulativeValueOnErrorBar = pluckNumber(JSONData.cumulativevalueonerrorbar, chartAttr.cumulativevalueonerrorbar, 1);\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      if (!dataObj) {\n        continue;\n      }\n      setData = setDataArr && setDataArr[i];\n      config = dataObj && dataObj.config;\n      positiveErrorToolText = UNDEF;\n      negativeErrorToolText = UNDEF;\n\n      if (pluckNumber(setData.value) === UNDEF) {\n        continue;\n      }\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n      setValue = config.setValue;\n      config.setErrorValue = setErrorValue = numberFormatter.getCleanValue(setData.errorvalue);\n      config.errorInPercent = pluckNumber(setData.errorinpercent, errorInPercent, 0);\n      setPositiveErrorValue = numberFormatter.getCleanValue(pluckNumber(setData.positiveerrorvalue, setErrorValue));\n      setNegativeErrorValue = numberFormatter.getCleanValue(pluckNumber(setData.negativeerrorvalue, setErrorValue));\n\n      config.errorInPercent &&\n                (config.setErrorValue = setErrorValue = pluckNumber(((setErrorValue / 100) * setValue).toFixed(2)));\n\n      config.cumulativeValueOnErrorBar =\n                    pluckNumber(setData.cumulativevalueonerrorbar, conf.cumulativeValueOnErrorBar, 1);\n\n      config.positiveErrorValue =\n                    numberFormatter.getCleanValue(pluckNumber(setData.positiveerrorvalue, setData.errorvalue));\n\n      (config.errorInPercent && config.positiveErrorValue) &&\n                (config.positiveErrorValue = pluckNumber(((config.positiveErrorValue / 100) *\n                    setValue).toFixed(2)));\n      config.positiveCumulativeErrorValue = setValue +\n                    pluckNumber(config.positiveErrorValue, config.setErrorValue);\n\n      config.negativeErrorValue =\n                    numberFormatter.getCleanValue(pluckNumber(setData.negativeerrorvalue, setData.errorvalue));\n\n      (config.errorInPercent && config.negativeErrorValue) &&\n                (config.negativeErrorValue = pluckNumber(((config.negativeErrorValue / 100) *\n                    setValue).toFixed(2)));\n\n      config.negativeCumulativeErrorValue = setValue -\n                    pluckNumber(config.negativeErrorValue, config.setErrorValue);\n\n      config.errorToolTipValue = numberFormatter.dataLabels(setErrorValue, parentYAxis);\n\n      config.negativeErrorToolTipValue =\n                    numberFormatter.dataLabels(config.negativeErrorValue, parentYAxis);\n\n      config.negativeCumulativeErrorTooltipValue =\n                    numberFormatter.dataLabels(config.negativeCumulativeErrorValue, parentYAxis);\n\n      config.positiveErrorToolTipValue =\n                    numberFormatter.dataLabels(config.positiveErrorValue, parentYAxis);\n\n      config.positiveCumulativeErrorTooltipValue =\n                    numberFormatter.dataLabels(config.positiveCumulativeErrorValue, parentYAxis);\n\n      config.errorPercentValue =\n        (Math.round(((setErrorValue / setValue) * HUNDREDSTRING) * HUNDREDSTRING) / HUNDREDSTRING) + PERCENTAGESTRING;\n\n      cumulativeValueOnErrorBar = config.cumulativeValueOnErrorBar;\n\n      config.notHalfErrorBar = conf.notHalfErrorBar;\n      config.halfErrorBar = halfErrorBar;\n\n      config.showValue = pluckNumber(setData.showvalue, conf.showValues);\n      config.hasErrorValue = pluckNumber(setData.errorvalue) !== UNDEF ? 1 : 0;\n\n      errorValue = config.errorValue = setErrorValue;\n\n      toolTipValue = config.errorToolTipValue;\n\n      formatedVal = toolTipValue;\n\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext,\n        formatedVal), false));\n\n      toolText = getTooltext(setTooltext);\n\n      positiveErrorToolText = negativeErrorToolText = UNDEF;\n\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext,\n        config.positiveErrorToolTipValue), false));\n\n      (setTooltext && config.positiveErrorToolTipValue) &&\n                    (positiveErrorToolText = getTooltext(setTooltext));\n\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext,\n        config.negativeErrorToolTipValue), false));\n\n      (setTooltext && config.negativeErrorToolTipValue) &&\n                    (negativeErrorToolText = getTooltext(setTooltext));\n\n      if (cumulativeValueOnErrorBar) {\n        setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext,\n          config.positiveCumulativeErrorTooltipValue), false));\n\n        (setTooltext && config.positiveCumulativeErrorTooltipValue) &&\n                        (positiveCumulativeErrorTooltext = getTooltext(setTooltext));\n\n        setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext,\n          config.negativeCumulativeErrorTooltipValue), false));\n\n        (setTooltext && config.negativeCumulativeErrorTooltipValue) &&\n                        (negativeCumulativeErrorTooltext = getTooltext(setTooltext));\n      }\n\n      positiveErrorValue = config.positiveErrorValue;\n\n      negativeErrorValue = config.negativeErrorValue;\n\n      if (setData.positiveerrorvalue || setData.negativeerrorvalue) {\n        config.halfErrorBar = 0;\n        config.notHalfErrorBar = true;\n      }\n\n      maxErrorValue = setValue + (positiveErrorValue !== null ? positiveErrorValue : setErrorValue);\n      minErrorValue = setValue - (config.halfErrorBar ? 0 : ((negativeErrorValue < 0 && setValue < 0) ? 0\n        : (negativeErrorValue !== null ? negativeErrorValue : setErrorValue)));\n\n      maxValue = Math.max(maxValue, maxErrorValue, minErrorValue);\n      minValue = Math.min(minValue, maxErrorValue, minErrorValue);\n\n      config.errorValueArr = [];\n      (config.positiveErrorValue === null) && (config.positiveErrorValue = UNDEF);\n      errorValue = -config.positiveErrorValue;\n      config.errorValueArr.push({\n        errorValue: errorValue,\n        tooltext: cumulativeValueOnErrorBar ? positiveCumulativeErrorTooltext\n          : (positiveErrorToolText || toolText),\n        errorEdgeBar: true\n      });\n\n      config.errorValueArr.push({\n        errorValue: errorValue,\n        tooltext: positiveErrorToolText || toolText\n      });\n\n      if (config.notHalfErrorBar) {\n        errorValue = config.negativeErrorValue;\n        config.errorValueArr.push({\n          errorValue: errorValue,\n          tooltext: cumulativeValueOnErrorBar ? negativeCumulativeErrorTooltext\n            : (negativeErrorToolText || toolText),\n          errorEdgeBar: true\n        });\n        config.errorValueArr.push({\n          errorValue: errorValue,\n          tooltext: negativeErrorToolText || toolText\n        });\n      }\n      config.toolText = getTooltext(config.setTooltext);\n    }\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n  }\n  drawErrorValue () {\n    var dataSet = this,\n      conf = dataSet.config,\n      attr,\n      i,\n      k,\n      visible = dataSet.getState('visible'),\n      yAxis = dataSet.getFromEnv('yAxis'),\n      errorBarThickness = conf.errorBarThickness,\n      errorBarColor = conf.errorBarColor,\n\n      setLink,\n      xPos,\n      yPos,\n\n      dataObj,\n      setValue,\n      config,\n      animState,\n      scrollMaxVal = conf.scrollMaxVal, // eslint-disable-line good-practices/no-single-usage-variable\n      crispY,\n      crispX,\n      errorPath,\n      errorValPos,\n      errorValuePosFactor,\n      errorValueArr,\n      errorValueObj,\n      errorValue,\n      errorStartPos,\n      errorLen,\n      errorBarWidth,\n      halfErrorBarW,\n      groupId,\n      errorLineElem,\n      isNegative,\n      barXpos,\n      barYpos,\n      barWidth,\n      barHeight,\n      errorStartValue,\n      trackerConfig,\n      trackerTolerance,\n      errorTrackerConfig,\n      animationManager = dataSet.getFromEnv('animationManager');\n\n    // Loop through each data points\n    for (i = conf.scrollMinVal; i < scrollMaxVal; i++) {\n      dataObj = dataSet.components.data[i];\n      if (!dataObj) {\n        continue;\n      }\n      trackerConfig = dataObj.trackerConfig;\n      errorTrackerConfig = dataObj.errorTrackerConfig = {};\n      errorTrackerConfig.errorTrackerArr = [];\n      config = dataObj && dataObj.config;\n      setValue = config && config.setValue;\n      // If plot value is found \"null\", continue the loop to next iteration.\n      if (dataObj === UNDEF) {\n        continue;\n      } else if (dataObj && ((setValue === UNDEF || setValue === null) || (config.errorValue === BLANKSTRING ||\n        config.errorValue === UNDEF || (config.errorValue === null && config.positiveErrorValue === null &&\n        config.negativeErrorValue === null)))) {\n        // hide error bars\n        errorLen = dataObj.graphics.error && dataObj.graphics.error.length;\n        for (k = 0; k < errorLen; k++) {\n          if (dataObj.graphics.error && dataObj.graphics.error[k]) {\n            animationManager.setAnimation({\n              el: dataObj.graphics.error[k],\n              label: 'path',\n              callback: dataSet.drawCallBackFn('disappearing')\n            });\n            dataObj.graphics.error[k].shadow({ opacity: 0 });\n          }\n        }\n        continue;\n      }\n\n      dataObj.errorBar && (delete dataObj.errorBar);\n\n      errorValueArr = config.errorValueArr;\n      errorTrackerConfig.errorLen = errorLen = errorValueArr.length;\n\n      !dataObj.graphics.error && (dataObj.graphics.error = []);\n\n      groupId = dataSet.getJSONIndex() + '_' + i;\n\n      setLink = config.setLink;\n\n      isNegative = (setValue < 0);\n\n      barXpos = dataObj._xPos;\n      barYpos = dataObj._yPos;\n      barWidth = dataObj._width;\n      barHeight = dataObj._height;\n\n      yPos = isNegative ? (barYpos + barHeight) : barYpos;\n      xPos = barXpos + (barWidth / 2);\n\n      dataObj.errorBar || (dataObj.errorBar = []);\n\n      // Loop through errorValue array\n      while (errorLen--) {\n        errorLineElem = null;\n\n        errorTrackerConfig.errorTrackerArr[errorLen] = {};\n\n        errorValueObj = errorValueArr[errorLen];\n        errorTrackerConfig.errorTrackerArr[errorLen].tooltext = errorValueObj.tooltext;\n        errorStartValue = errorValueObj.errorStartValue;\n        errorStartPos = !isNaN(errorStartValue)\n          ? yAxis.getPixel(errorStartValue) : yPos;\n        errorValue = errorValueObj.errorValue;\n        if (errorValue === null || isNaN(errorValue)) {\n          if (dataObj.graphics.error && dataObj.graphics.error[errorLen]) {\n            animationManager.setAnimation({\n              el: dataObj.graphics.error[errorLen],\n              label: 'path',\n              doNotRemove: true,\n              callback: dataSet.drawCallBackFn('disappearing')\n            }).shadow({ opacity: 0 });\n          }\n\n          continue;\n        }\n        errorBarWidth = barWidth * (conf.errorBarWidthPercent / 100);\n        halfErrorBarW = errorBarWidth / 2;\n\n        errorValuePosFactor = visible ? -1 : 0;\n        // Vertical Error drawing\n        errorValPos = yAxis.getPixel(yAxis.getValue(!isNaN(errorStartValue) ? errorStartPos : barYpos) +\n          (errorValue * errorValuePosFactor), { wrtVisible: true });\n        (isNegative) && (errorValPos = errorValPos + barHeight);\n        crispY = errorValPos;\n        crispX = xPos;\n        errorBarThickness = pluckNumber(errorValueObj.errorBarThickness, errorBarThickness);\n        trackerTolerance = errorBarThickness > 5 ? (errorBarThickness / 2) : 2.5;\n        crispY = Math.round(errorValPos) +\n                            (errorBarThickness % 2 / 2);\n        crispX = Math.round(xPos) +\n                            (errorBarThickness % 2 / 2);\n        dataObj.errorBar[errorLen] || (dataObj.errorBar[errorLen] = []);\n        if (errorValueObj.errorEdgeBar) {\n          errorPath = [\n            M, crispX - halfErrorBarW, crispY,\n            H, (crispX + halfErrorBarW)\n          ];\n          dataObj.errorBar[errorLen][1] = {\n            _xPos: crispX - halfErrorBarW - trackerTolerance,\n            _yPos: crispY - trackerTolerance,\n            _height: 2 * trackerTolerance,\n            _width: 2 * (halfErrorBarW + trackerTolerance),\n            _toolText: errorValueObj.tooltext\n          };\n        } else {\n          errorPath = [\n            M, crispX, errorStartPos,\n            V, crispY\n          ];\n          dataObj.errorBar[errorLen][0] = {\n            _xPos: crispX - trackerTolerance,\n            _yPos: crispY < errorStartPos ? crispY : errorStartPos,\n            _height: Math.abs(errorStartPos - crispY),\n            _width: 2 * trackerTolerance,\n            _toolText: errorValueObj.tooltext\n          };\n        }\n        errorBarColor = pluck(errorValueObj.errorBarColor, errorBarColor);\n        attr = {\n          path: errorPath,\n          stroke: errorBarColor,\n          'stroke-width': errorBarThickness,\n          'cursor': setLink ? POINTER : BLANKSTRING,\n          'stroke-linecap': ROUND\n        };\n        animState = !dataObj.graphics.error[errorLen] && visible ? 'appearing' : visible ? 'updating' : 'disappearing';\n        errorLineElem = dataObj.graphics.error[errorLen] = animationManager.setAnimation({\n          el: dataObj.graphics.error[errorLen] || 'path',\n          container: dataSet.getContainer('errorPlotGroup'),\n          component: dataSet,\n          attr: attr,\n          label: 'path',\n          state: animState,\n          callback: dataSet.drawCallBackFn(animState)\n        }).shadow({ opacity: conf.shadowOpacity }, dataSet.getContainer('errorShadowGroup'));\n\n        dataSet.getFromEnv('chartConfig').enablemousetracking && errorLineElem\n          .data(GROUPID, groupId)\n          .data(EVENTARGS, trackerConfig.eventArgs);\n      }\n\n      if (!config.notHalfErrorBar) {\n        for (k = 2; k < 4; k++) {\n          dataObj.graphics.error && dataObj.graphics.error[k] && animationManager.setAnimation({\n            el: dataObj.graphics.error[k],\n            label: 'path',\n            doNotRemove: true,\n            callback: dataSet.drawCallBackFn('disappearing')\n          }).shadow({ opacity: 0 });\n        }\n      }\n    }\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {String} eventType name of the event\n   * @param {number} plotIndex index of the plot where this event has been occured\n   * @param {Event} originalEvent reference of the original mouse event\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      data = dataset.components.data[plotIndex],\n      setElement = data.graphics.element,\n      labelElement = data.graphics.label,\n      errorBarHovered = data.errorBarHovered,\n      setLink = data.config.setLink;\n\n    if (setElement) {\n      switch (eventType) {\n        case 'fc-mouseover' :\n          dataset._decideTooltipType(plotIndex, e);\n          _rolloverResponseSetter(chart, data, e, this);\n          if (setLink) {\n            setElement.css({ 'cursor': POINTER });\n            // labelElement is undefined in dataset graphics so checking for labelElement added\n            labelElement && (labelElement.css({ 'cursor': POINTER }));\n          }\n          break;\n        case 'fc-mouseout' :\n          dataset.getFromEnv('toolTipController').hide(dataset.config.currentToolTip);\n          _rolloutResponseSetter(chart, data, e, this);\n          if (setLink) {\n            setElement.css({ 'cursor': DEFAULT_CURSOR });\n            // labelElement is undefined in dataset graphics so checking for labelElement added\n            labelElement && (labelElement.css({ 'cursor': DEFAULT_CURSOR }));\n          }\n          break;\n        case 'fc-click' :\n          chart.plotEventHandler(setElement, e);\n          break;\n        case 'fc-mousemove' :\n          dataset._decideTooltipType(plotIndex, e);\n          if (errorBarHovered && !data._isRollover) {\n            setElement.showHoverEffect !== 0 && setElement.attr(setElement.getData().setRolloutAttr);\n            data._isRollover = true;\n            data._isRollout = false;\n          } else if (!errorBarHovered && !data._isRollout) {\n            setElement.showHoverEffect !== 0 &&\n                                 setElement.attr(setElement.getData().setRolloverAttr);\n            data._isRollover = false;\n            data._isRollout = true;\n          }\n      }\n    }\n  }\n  // Helper function of _checkPointerOverPlot().\n  _checkPointerOverErrorBar (pX, chartX, chartY) {\n    var dataStore = this.components.data,\n      pointObj = dataStore[pX],\n      hovered,\n      errorBarArr,\n      errorBarCompArr,\n      len,\n      errorBarCompLen,\n      toolText,\n      xPos,\n      yPos,\n      height,\n      width;\n\n    if (!pointObj) {\n      return;\n    }\n\n    errorBarArr = pointObj.errorBar;\n\n    if (!errorBarArr) {\n      return;\n    }\n\n    len = errorBarArr && errorBarArr.length;\n    while (len--) {\n      errorBarCompArr = errorBarArr[len];\n      errorBarCompLen = errorBarCompArr && errorBarCompArr.length;\n      while (errorBarCompLen--) {\n        if (!(errorBarCompArr[errorBarCompLen] && errorBarCompArr[errorBarCompLen]._xPos)) {\n          continue;\n        }\n        xPos = errorBarCompArr[errorBarCompLen]._xPos;\n        yPos = errorBarCompArr[errorBarCompLen]._yPos;\n        height = errorBarCompArr[errorBarCompLen]._height;\n        width = errorBarCompArr[errorBarCompLen]._width;\n        toolText = errorBarCompArr[errorBarCompLen]._toolText;\n\n        hovered = chartX >= xPos && chartX <= xPos + width &&\n                        chartY >= yPos && chartY <= yPos + height;\n\n        if (hovered) {\n          return {\n            pointIndex: pX,\n            hovered: hovered,\n            pointObj: dataStore[pX],\n            toolText: toolText\n          };\n        }\n      }\n    }\n  }\n  // Helper function of _getHoverPlot()\n  _checkPointerOverPlot (pX, chartX, chartY) {\n    var dataSet = this,\n      data = dataSet.components.data[pX],\n      config = data && data.config,\n      tooltipValueAtEnd,\n      hoverInfo;\n\n    if (!data) {\n      return;\n    }\n    tooltipValueAtEnd = (!dataSet.config.JSONData.plottooltext && !dataSet.getFromEnv('chart-attrib').plottooltext) ? config.toolTipValue : BLANKSTRING; // eslint-disable-line good-practices/no-single-usage-variable\n    hoverInfo = dataSet._checkPointerOverErrorBar(pX, chartX, chartY);\n    if (hoverInfo) {\n      data.errorBarHovered = true;\n      config.finalTooltext = hoverInfo.toolText;\n    } else {\n      hoverInfo = dataSet._checkPointerOverColumn(pX, chartX, chartY);\n      data.errorBarHovered = false;\n\n      hoverInfo && (config.finalTooltext = (config.toolText !== false) &&\n                                            (config.toolText + tooltipValueAtEnd));\n    }\n\n    return hoverInfo;\n  }\n  /**\n         * Function that retunr the nearest plot details\n         * @param {number} x x-axis position of the mouse cordinate\n         * @param {number} y y-axis position of the mouse cordinate\n         * @return {object} return an object with details of nearest polt and whether it is hovered or not\n         */\n  _getHoveredPlot (chartX, chartY) {\n    var dataset = this,\n      x,\n      pX;\n\n    x = dataset.getFromEnv('xAxis').getValue(chartX);\n    pX = Math.round(x);\n\n    // Checking for overlap between two cosecutive column plots along x-axis\n    return (pX - x > 0 ? dataset._checkPointerOverPlot(pX, chartX, chartY) ||\n                dataset._checkPointerOverPlot(pX - 1, chartX, chartY)\n      : dataset._checkPointerOverPlot(pX + 1, chartX, chartY) ||\n                        dataset._checkPointerOverPlot(pX, chartX, chartY));\n  }\n  // Function to remove a data from a dataset during real time update.\n  removePlots () {\n    var dataSet = this,\n      components = dataSet.components,\n      removeDataArr = components.removeDataArr,\n      pool = components.pool || (components.pool = {\n        element: [],\n        hotElement: [],\n        label: []\n      }),\n      len = removeDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removeData,\n      graphics,\n      i,\n      k;\n\n    for (i = 0; i < len; i++) {\n      removeData = removeDataArr[0];\n      removeDataArr.splice(0, 1);\n      // In case of non existing data plot continue;\n      if (!removeData || !removeData.graphics) {\n        continue;\n      }\n\n      graphics = removeData.graphics;\n\n      graphics.element && graphics.element.hide() && graphics.element.shadow({ opacity: 0 });\n      for (k = 0; k < 4; k++) {\n        if (graphics.error && graphics.error[k]) {\n          dataSet.getFromEnv('animationManager').setAnimation({\n            el: graphics.error[k],\n            label: 'path'\n          });\n        }\n      }\n\n      // Storing the graphic elements for reuse.\n      removeData.graphics.element && (pool.element = pool.element.concat(removeData.graphics.element));\n      removeData.graphics.hotElement && (pool.hotElement = pool.hotElement.concat(removeData.graphics\n        .hotElement));\n      removeData.graphics.label && (pool.label = pool.label.concat(removeData.graphics.label));\n    }\n    components.pool = pool;\n  }\n}\nremovePlots = ErrorBar2DDataset.prototype.removePlots;\n_getHoveredPlot = ErrorBar2DDataset.prototype._getHoveredPlot;\n_firePlotEvent = ErrorBar2DDataset.prototype._firePlotEvent;\n_checkPointerOverPlot = ErrorBar2DDataset.prototype._checkPointerOverPlot;\n_checkPointerOverErrorBar = ErrorBar2DDataset.prototype._checkPointerOverErrorBar;\nexport { _getHoveredPlot, removePlots, _rolloverResponseSetter, _rolloutResponseSetter, _firePlotEvent, _checkPointerOverErrorBar,\n  _checkPointerOverPlot };\nexport default ErrorBar2DDataset;\n","import columnAnimation from '@fusioncharts/charts/src/dataset/column/index.animation';\nexport default {\n  column: { 'initial.dataset.errorBar2D': columnAnimation['initial.dataset.column'] },\n  error: {\n    'initial.dataset.errorBar2D': function () {\n      return {\n        'path.appearing': [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          slot: 'final'\n        }]\n      };\n    }\n  }\n};\n","import Errorline from '@fusioncharts/powercharts/src/chart/errorline';\nexport default Errorline;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\nimport ErrorLineDataset from '../../dataset/errorline';\n\nconst ERRORLINE = 'errorline';\nclass ErrorLine extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ErrorLine';\n  }\n\n  constructor () {\n    super();\n    this.useErrorGroup = true;\n    this.isErrorChart = true;\n    this.hasAnchor = true;\n    // this.fireGroupEvent = true;\n    this.defaultPlotShadow = 1;\n    this.axisPaddingLeft = 0;\n    this.axisPaddingRight = 0;\n    this.canvasPaddingModifiers = ['anchor', 'errorbar'];\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ErrorLine';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = ERRORLINE;\n    _setDefaultConfig.call(this);\n    this.zeroplanethickness = 1;\n    this.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.defaultcrosslinethickness = 1;\n    config.enablemousetracking = true;\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n  getDSdef () {\n    return ErrorLineDataset;\n  }\n}\nexport default ErrorLine;\n","import { preDefStr, parseTooltext, pluck, getValidValue, pluckNumber, getFirstValue, isIE, HUNDREDSTRING, hasTouch,\n  TOUCH_THRESHOLD_PIXELS, CLICK_THRESHOLD_PIXELS, parseUnsafeString, convertColor, getFirstColor,\n  getFirstAlpha } from '@fusioncharts/core/src/lib';\nimport { _getHoveredPlot, _firePlotEvent, _checkPointerOverErrorBar,\n  removePlots } from '../errorbar2d';\nimport LINEDataset from '@fusioncharts/charts/src/dataset/line';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport errorlineErrorAnimation from './error.animation';\nimport errorlineLineAnimation from './line.animation';\n\nlet colorStrings = preDefStr.colors,\n  COLOR_AAAAAA = colorStrings.AAAAAA,\n\n  // errorBarStr = preDefStr.errorBarStr,\n  // errorShadowStr = preDefStr.errorShadowStr,\n  ROUND = preDefStr.ROUND,\n  PERCENTAGESTRING = preDefStr.PERCENTAGESTRING,\n  BLANKSTRING = '',\n  UNDEF,\n  COMMASPACE = ', ',\n  POINTER = 'pointer',\n\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')', // invisible but clickable\n\n  M = 'M',\n  H = 'H',\n  V = 'V',\n  math = Math,\n  mathRound = math.round,\n  mathMin = math.min,\n  mathMax = math.max,\n  mathAbs = math.abs,\n  HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS : CLICK_THRESHOLD_PIXELS;\naddDep({\n  name: 'errorlineErrorAnimation',\n  type: 'animationRule',\n  extension: errorlineErrorAnimation\n});\naddDep({\n  name: 'errorlineLineAnimation',\n  type: 'animationRule',\n  extension: errorlineLineAnimation\n});\nclass ErrorLineDataset extends LINEDataset {\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.drawCallbackFn = (state) => {\n      return function () {\n        if (state === 'disappearing') {\n          this.hide();\n        }\n      };\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'errorLine';\n  }\n  /*\n   * Parses all the attributes for dataset level and set level\n   * Called from init function of area class and line class\n   * Both line and area attributes configuration is done here\n   */\n\n  ErrorValueConfigure () {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      conf = dataSet.config,\n      parentYAxis = conf.parentYAxis,\n      JSONData = conf.JSONData,\n      setDataArr = JSONData.data,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      len = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      setData,\n      dataObj,\n      config,\n      dataStore = dataSet.components.data,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      toolTipValue,\n      errorBarAlpha,\n      errorBarThickness,\n      setErrorValue,\n      formatedVal,\n      setTooltext,\n      setNegativeErrorValue,\n      setPositiveErrorValue,\n      positiveCumulativeErrorTooltext,\n      negativeCumulativeErrorTooltext,\n      positiveErrorToolText,\n      negativeErrorToolText,\n      errorBarShadow,\n      lineThickness = conf.linethickness,\n      maxValue = -Infinity,\n      minValue = Infinity,\n      maxErrorValue,\n      minErrorValue,\n      setValue,\n      errorValue,\n      cumulativeValueOnErrorBar,\n      tooltipSepChar = pluck(chartAttr.tooltipsepchar, COMMASPACE),\n      macroIndices,\n      parserConfig,\n      seriesname,\n      errorInPercent,\n      errorToolText,\n      seriesNameInTooltip = pluckNumber(chartAttr.seriesnameintooltip, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      getTooltext = function (setToolText) {\n        var toolText;\n\n        if (!chart.config.showtooltip) {\n          toolText = false;\n        } else {\n          if (formatedVal === null) {\n            toolText = false;\n          } else if (setToolText !== UNDEF) {\n            macroIndices = [1, 2, 3, 4, 5, 6, 7, 99, 100, 101, 102, 120, 121, 131, 132];\n            parserConfig = {\n              yaxisName: parseUnsafeString(chartAttr.yaxisname),\n              xaxisName: parseUnsafeString(chartAttr.xaxisname),\n              formattedValue: config.toolTipValue,\n              errorValue: setErrorValue,\n              errorDataValue: config.errorToolTipValue,\n              errorPercentValue: config.errorPercentValue,\n              errorPercentDataValue: config.errorPercentValue,\n              positiveErrorValue: setPositiveErrorValue,\n              negativeErrorValue: setNegativeErrorValue,\n              positiveErrorDataValue: config.positiveErrorToolTipValue,\n              negativeErrorDataValue: config.negativeErrorToolTipValue,\n              label: config.label\n            };\n            toolText = parseTooltext(setToolText, macroIndices,\n              parserConfig, setData, chartAttr, JSONData);\n          } else {\n            if (seriesNameInTooltip) {\n              seriesname = getFirstValue(JSONData && JSONData.seriesname);\n            }\n            toolText = seriesname ? seriesname + tooltipSepChar : BLANKSTRING;\n            toolText += config.label ? config.label + tooltipSepChar : BLANKSTRING;\n          }\n        }\n        return toolText;\n      },\n      i;\n\n    conf.errorBarShadow = errorBarShadow = pluckNumber(chartAttr.errorbarshadow, chartAttr.showshadow, 1); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.ignoreEmptyDatasets = pluckNumber(JSONData.ignoreemptydatasets, 0);\n    // halfErrorBar = pluckNumber(chartAttr.halferrorbar, 1);\n    conf.notHalfErrorBar = !pluckNumber(chartAttr.halferrorbar, 1);\n\n    errorBarAlpha = getFirstAlpha(pluck(\n      JSONData.errorbaralpha, chartAttr.errorbaralpha, conf.alpha));\n    conf.errorBarWidth = pluckNumber(JSONData.errorbarwidth,\n      chartAttr.errorbarwidth, 5);\n    conf.errorBarColor = convertColor(getFirstColor(\n      pluck(JSONData.errorbarcolor, chartAttr.errorbarcolor,\n        COLOR_AAAAAA)), errorBarAlpha);\n    errorBarThickness = pluckNumber(\n      JSONData.errorbarthickness, chartAttr.errorbarthickness, 1);\n    conf.errorBarThickness = errorBarThickness > lineThickness ? lineThickness\n      : errorBarThickness;\n    conf.shadowOpacity = errorBarShadow ? (errorBarAlpha / 250) : 0;\n\n    conf.errorInPercent = errorInPercent = pluckNumber(JSONData.errorinpercent, chartAttr.errorinpercent); // eslint-disable-line good-practices/no-single-usage-variable\n\n    conf.cumulativeValueOnErrorBar =\n                pluckNumber(JSONData.cumulativevalueonerrorbar, chartAttr.cumulativevalueonerrorbar, 1);\n\n    for (i = 0; i < len; i++) {\n      setData = setDataArr && setDataArr[i];\n\n      if (!setDataArr || !setData) {\n        continue;\n      }\n\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n\n      setValue = config.setValue;\n\n      config.notHalfErrorBar = conf.notHalfErrorBar;\n      setErrorValue = numberFormatter.getCleanValue(setData.errorvalue);\n      config.errorToolTipValue = numberFormatter.dataLabels(setErrorValue, parentYAxis);\n      setPositiveErrorValue = numberFormatter.getCleanValue(pluckNumber(setData.positiveerrorvalue, setErrorValue));\n      setNegativeErrorValue = numberFormatter.getCleanValue(pluckNumber(setData.negativeerrorvalue, setErrorValue));\n      // errorPercentValue = (mathRound(((setErrorValue / setValue) * HUNDREDSTRING) * HUNDREDSTRING) /\n      //               HUNDREDSTRING) + PERCENTAGESTRING;\n      config.setErrorValue = config.errorValue = errorValue = setErrorValue;\n      config.hasErrorValue = pluckNumber(setData.errorvalue) !== UNDEF ? 1 : 0;\n\n      toolTipValue = config.errorToolTipValue;\n\n      formatedVal = toolTipValue;\n\n      // Parsing tooltext against various configurations provided by the user.\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext, formatedVal), false));\n\n      errorToolText = getTooltext(setTooltext);\n\n      config.errorInPercent = pluckNumber(setData.errorinpercent, errorInPercent, 0);\n\n      config.errorInPercent &&\n                (config.setErrorValue = setErrorValue = pluckNumber(((setErrorValue / 100) * setValue).toFixed(2)));\n\n      config.cumulativeValueOnErrorBar = cumulativeValueOnErrorBar =\n                    pluckNumber(setData.cumulativevalueonerrorbar, conf.cumulativeValueOnErrorBar, 1);\n\n      config.positiveErrorValue =\n                    numberFormatter.getCleanValue(pluckNumber(setData.positiveerrorvalue, setData.errorvalue));\n\n      (config.errorInPercent && config.positiveErrorValue) &&\n                (config.positiveErrorValue = pluckNumber(((config.positiveErrorValue / 100) *\n                    setValue).toFixed(2)));\n\n      config.positiveCumulativeErrorValue = setValue +\n                    pluckNumber(config.positiveErrorValue, config.setErrorValue);\n\n      config.negativeErrorValue =\n                    numberFormatter.getCleanValue(pluckNumber(setData.negativeerrorvalue, setData.errorvalue));\n\n      (config.errorInPercent && config.negativeErrorValue) &&\n                (config.negativeErrorValue = pluckNumber(((config.negativeErrorValue / 100) *\n                    setValue).toFixed(2)));\n\n      config.negativeCumulativeErrorValue = setValue -\n                    pluckNumber(config.negativeErrorValue, config.setErrorValue);\n\n      config.errorToolTipValue = numberFormatter.dataLabels(setErrorValue, parentYAxis);\n\n      config.negativeErrorToolTipValue =\n                    numberFormatter.dataLabels(config.negativeErrorValue, parentYAxis);\n\n      config.negativeCumulativeErrorTooltipValue =\n                    numberFormatter.dataLabels(config.negativeCumulativeErrorValue, parentYAxis);\n\n      config.positiveErrorToolTipValue =\n                    numberFormatter.dataLabels(config.positiveErrorValue, parentYAxis);\n\n      config.positiveCumulativeErrorTooltipValue =\n                    numberFormatter.dataLabels(config.positiveCumulativeErrorValue, parentYAxis);\n\n      config.errorPercentValue = (mathRound(((setErrorValue / setValue) * HUNDREDSTRING) * HUNDREDSTRING) /\n                    HUNDREDSTRING) + PERCENTAGESTRING;\n\n      positiveErrorToolText = negativeErrorToolText = UNDEF;\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext,\n        config.positiveErrorToolTipValue), false));\n\n      (setTooltext && config.positiveErrorToolTipValue) &&\n                    (positiveErrorToolText = getTooltext(setTooltext));\n\n      setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext,\n        config.negativeErrorToolTipValue), false));\n\n      (setTooltext && config.negativeErrorToolTipValue) &&\n                    (negativeErrorToolText = getTooltext(setTooltext));\n\n      if (setData.positiveerrorvalue || setData.negativeerrorvalue) {\n        config.halfErrorBar = 0;\n        config.notHalfErrorBar = true;\n      }\n\n      if (cumulativeValueOnErrorBar) {\n        setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext,\n          config.positiveCumulativeErrorTooltipValue), false));\n\n        (setTooltext && config.positiveCumulativeErrorTooltipValue) &&\n                        (positiveCumulativeErrorTooltext = getTooltext(setTooltext));\n\n        setTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext,\n          config.negativeCumulativeErrorTooltipValue), false));\n\n        (setTooltext && config.negativeCumulativeErrorTooltipValue) &&\n                        (negativeCumulativeErrorTooltext = getTooltext(setTooltext));\n      }\n      maxErrorValue = setValue + (config.positiveErrorValue !== null\n        ? config.positiveErrorValue : setErrorValue);\n      minErrorValue = setValue - (config.halfErrorBar ? 0 : ((config.negativeErrorValue < 0 && setValue < 0) ? 0\n        : (config.negativeErrorValue !== null ? config.negativeErrorValue : setErrorValue)));\n\n      maxValue = mathMax(maxValue, maxErrorValue, minErrorValue);\n      minValue = mathMin(minValue, maxErrorValue, minErrorValue);\n\n      if (setErrorValue === null) {\n        setErrorValue = UNDEF;\n      }\n\n      config.errorValueArr = [];\n      (config.positiveErrorValue === null) && (config.positiveErrorValue = UNDEF);\n      errorValue = -config.positiveErrorValue;\n      config.errorValueArr.push({\n        errorValue: errorValue,\n        tooltext: cumulativeValueOnErrorBar ? positiveCumulativeErrorTooltext\n          : positiveErrorToolText || errorToolText,\n        errorEdgeBar: true\n      });\n\n      config.errorValueArr.push({\n        errorValue: errorValue,\n        tooltext: positiveErrorToolText || errorToolText\n      });\n\n      if (config.notHalfErrorBar) {\n        errorValue = config.negativeErrorValue;\n        config.errorValueArr.push({\n          errorValue: errorValue,\n          tooltext: cumulativeValueOnErrorBar ? negativeCumulativeErrorTooltext\n            : negativeErrorToolText || errorToolText,\n          errorEdgeBar: true\n        });\n        config.errorValueArr.push({\n          errorValue: errorValue,\n          tooltext: negativeErrorToolText || errorToolText\n        });\n      }\n\n      config.toolText = getTooltext(config.setTooltext); // toolText;\n    }\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n  }\n  /*\n         * Initialization of line dataset\n         * @param {Object} chart - chart object of fusioncharts\n         * @param {number} datasetIndex - index of line dataset\n         * @param {boolean} isLineSet - Whether it is a lineset or a dataset\n         * Called from draw graph of line\n         */\n  /*\n   * Makes a dataset visible when clicked on its respective legend\n   * Fired every time a deactivated legend is clicked\n   */\n  _show () {\n    var dataSet = this,\n      chart = dataSet.chart,\n      container = dataSet.graphics && dataSet.graphics.container,\n      dataLabelContainer = dataSet.graphics && dataSet.graphics.dataLabelContainer, // eslint-disable-line good-practices/no-single-usage-variable\n      errorGroupContainer = dataSet.graphics && dataSet.graphics.errorGroupContainer,\n      errorShadowContainer = dataSet.graphics && dataSet.graphics.errorShadowContainer;\n\n    chart._chartAnimation();\n    container.lineGroup.show();\n    container.anchorGroup.show();\n    container.anchorShadowGroup.show();\n    container.lineShadowGroup.show();\n    dataLabelContainer.show();\n    dataSet.setState('visible', true);\n    errorGroupContainer && errorGroupContainer.show();\n    errorShadowContainer && errorShadowContainer.show();\n    dataSet._conatinerHidden = false;\n\n    chart._setAxisLimits();\n    dataSet.yAxis.draw();\n    // Calling the draw function for redrawing the dataset\n    chart._drawDataset();\n  }\n\n  /*\n   * Hides when clicked on its respective legend\n   * Fired every time an activated legend is clicked\n   */\n  _hide () {\n    var dataSet = this,\n      chart = dataSet.chart;\n\n    chart._chartAnimation();\n    dataSet.setState('visible', false);\n\n    chart._setAxisLimits();\n    dataSet.yAxis.draw();\n    chart._drawDataset();\n  }\n\n  draw () {\n    super.draw();\n    this.drawErrorValue();\n  }\n  drawErrorValue () {\n    var dataSet = this,\n      conf = dataSet.config,\n      // parentContainer = chart.graphics.datasetGroup,\n      len = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      attr,\n      i,\n      j,\n      k,\n      state,\n      visible = dataSet.getState('visible'),\n      yAxis = dataSet.getFromEnv('yAxis'),\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      // animObj = animationObj.animObj,\n      // dummyObj = animationObj.dummyObj,\n      // animationDuration = animationObj.duration,\n\n      errorBarThickness = conf.errorBarThickness,\n      setLink,\n      xPos,\n      yPos,\n      dataObj,\n      setValue,\n      // groupId,\n      config,\n      // eventArgs,\n      crispY,\n      crispX,\n      errorPath,\n      errorValPos,\n      errorValuePosFactor,\n      errorValueArr,\n      errorValueObj,\n      errorValue,\n      errorStartPos,\n      errorLen,\n      halfErrorBarW,\n      errorLineElem,\n      plotXpos,\n      trackerTolerance = errorBarThickness > 5 ? (errorBarThickness / 2) : 2.5,\n      plotYpos,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      errorTrackerConfig;\n\n    // Loop through each data points\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n      setValue = config && config.setValue;\n\n      // If plot value is found \"null\", continue the loop to next iteration.\n      if (dataObj === UNDEF || setValue === UNDEF || setValue === null) {\n        if (dataObj && dataObj.graphics.error) {\n          for (j = 0; j < dataObj.graphics.error.length; j++) {\n            dataObj.graphics.error && dataObj.graphics.error[j] && animationManager.setAnimation({\n              el: dataObj.graphics.error[j] || 'path',\n              label: 'path',\n              component: dataSet,\n              doNotRemove: true,\n              callback: dataSet.drawCallbackFn('disappearing')\n            }).shadow({ opacity: 0 });\n          }\n        }\n        continue;\n      }\n      errorTrackerConfig = dataObj.errorTrackerConfig = {};\n      errorTrackerConfig.errorTrackerArr = [];\n\n      errorValueArr = config.errorValueArr;\n      errorTrackerConfig.errorLen = errorLen = errorValueArr.length;\n\n      !dataObj.graphics.error && (dataObj.graphics.error = []);\n      !dataObj.graphics.errorTracker && (dataObj.graphics.errorTracker = []);\n\n      if ((config.errorValue === BLANKSTRING || config.errorValue === UNDEF ||\n                    (config.errorValue === null && config.positiveErrorValue === null &&\n                    config.negativeErrorValue === null))) {\n        for (k = 0; k < errorLen; k++) {\n          dataObj.graphics.error && dataObj.graphics.error[k] && animationManager.setAnimation({\n            el: dataObj.graphics.error[k] || 'path',\n            label: 'path',\n            component: dataSet,\n            callback: dataSet.drawCallbackFn('disappearing')\n          }).shadow({ opacity: 0 });\n        }\n        continue;\n      }\n      setLink = config.setLink;\n\n      plotXpos = dataObj._xPos;\n      plotYpos = dataObj._yPos;\n\n      yPos = plotYpos;\n      xPos = plotXpos;\n\n      dataObj.errorBar && (delete dataObj.errorBar);\n      dataObj.errorBar = [];\n\n      // Loop through errorValue array\n      while (errorLen--) {\n        errorLineElem = null;\n        errorTrackerConfig.errorTrackerArr[errorLen] = {};\n        errorValueObj = errorValueArr[errorLen];\n        errorTrackerConfig.errorTrackerArr[errorLen].tooltext = errorValueObj.tooltext;\n        errorStartPos = yPos;\n        errorValue = errorValueObj.errorValue;\n        if (errorValue === null || isNaN(errorValue)) {\n          if (dataObj.graphics.error && dataObj.graphics.error[errorLen]) {\n            dataObj.graphics.error[errorLen].hide();\n            dataObj.graphics.error[errorLen].shadow({ opacity: 0 });\n          }\n          continue;\n        }\n        halfErrorBarW = conf.errorBarWidth / 2;\n\n        errorValuePosFactor = (!visible) ? 0 : 1;\n        // Vertical Error drawing\n        errorValPos = plotYpos +\n                        ((yAxis.getPixel(0) - yAxis.getPixel(1)) * errorValue * errorValuePosFactor);\n        crispY = errorValPos;\n        crispX = xPos;\n        crispY = mathRound(errorValPos) +\n                            (errorBarThickness % 2 / 2);\n        crispX = mathRound(xPos) +\n                            (errorBarThickness % 2 / 2);\n\n        dataObj.errorBar[errorLen] || (dataObj.errorBar[errorLen] = []);\n        if (!errorValueObj.errorEdgeBar) {\n          errorPath = [\n            M, crispX, errorStartPos,\n            V, crispY\n          ];\n          dataObj.errorBar[errorLen][0] = {\n            _xPos: crispX - trackerTolerance,\n            _yPos: crispY < errorStartPos ? crispY : errorStartPos,\n            _height: mathAbs(errorStartPos - crispY),\n            _width: 2 * trackerTolerance,\n            _toolText: errorValueObj.tooltext\n          };\n        } else {\n          errorPath = [\n            M, crispX - halfErrorBarW, crispY,\n            H, (crispX + halfErrorBarW)\n          ];\n          dataObj.errorBar[errorLen][1] = {\n            _xPos: crispX - halfErrorBarW - trackerTolerance,\n            _yPos: crispY - trackerTolerance,\n            _height: 2 * trackerTolerance,\n            _width: 2 * (halfErrorBarW + trackerTolerance),\n            _toolText: errorValueObj.tooltext\n          };\n        }\n\n        attr = {\n          path: errorPath,\n          stroke: conf.errorBarColor,\n          'stroke-width': errorBarThickness,\n          'cursor': setLink ? POINTER : BLANKSTRING,\n          'stroke-linecap': ROUND\n        };\n        state = !dataObj.graphics.error[errorLen] && visible ? 'appearing' : visible ? 'updating' : 'disappearing';\n        errorLineElem = dataObj.graphics.error[errorLen] = animationManager.setAnimation({\n          el: dataObj.graphics.error[errorLen] || 'path',\n          state: state,\n          attr: attr,\n          label: 'path',\n          component: dataSet,\n          container: dataSet.getContainer('errorPlotGroup'),\n          callback: dataSet.drawCallbackFn(state)\n        });\n        state !== 'disappearing' && errorLineElem.show();\n\n        errorLineElem && errorLineElem\n          .shadow({ opacity: conf.shadowOpacity }, dataSet.getContainer('errorShadowGroup'));\n\n        errorTrackerConfig.errorTrackerArr[errorLen].attr = {\n          path: errorPath,\n          stroke: TRACKER_FILL,\n          'stroke-width': (errorBarThickness < HTP) ? HTP : errorBarThickness,\n          'cursor': setLink ? POINTER : BLANKSTRING\n        };\n      }\n      if (!config.notHalfErrorBar) {\n        for (k = 2; k < 4; k++) {\n          dataObj.graphics.error && dataObj.graphics.error[k] && animationManager.setAnimation({\n            el: dataObj.graphics.error[k] || 'path',\n            label: 'path',\n            component: dataSet,\n            doNotRemove: true,\n            callback: dataSet.drawCallbackFn('disappearing')\n          }).shadow({ opacity: 0 });\n        }\n      }\n    }\n  }\n  _firePlotEvent (eventType, plotIndex, e) {\n    _firePlotEvent.call(this, eventType, plotIndex, e);\n  }\n  _checkPointerOverErrorBar (pX, chartX, chartY) {\n    return _checkPointerOverErrorBar.call(this, pX, chartX, chartY);\n  }\n  // Helper function of _getHoverPlot()\n  _checkPointerOverPlot (pX, chartX, chartY) {\n    var dataSet = this,\n      data = dataSet.components.data[pX],\n      config = data && data.config,\n      hoverInfo;\n    if (!data) {\n      return;\n    }\n\n    hoverInfo = dataSet.isWithinShape(data, pX, chartX, chartY);\n\n    if (hoverInfo) {\n      data.errorBarHovered = false;\n      config.finalTooltext = (config.toolText !== false) && config.toolText;\n    } else {\n      hoverInfo = dataSet._checkPointerOverErrorBar(pX, chartX, chartY);\n      if (hoverInfo) {\n        data.errorBarHovered = true;\n        config.finalTooltext = hoverInfo.toolText;\n      }\n    }\n\n    return hoverInfo;\n  }\n  _getHoveredPlot (chartX, chartY) {\n    return _getHoveredPlot.call(this, chartX, chartY);\n  }\n  /*\n   * This functions calculate the space required for a dataset and return that to the chart\n   *\n   */\n  getCanvasPadding () {\n    var dataset = this,\n      halfErrorBarW = dataset.config.errorBarWidth * 0.5,\n      chart = dataset.getFromEnv('chart'),\n      dataLabelStyle = chart.config.dataLabelStyle,\n      data = (dataset.components && dataset.components.data) || [],\n      firstData = data[0],\n      lastData = data[data.length - 1],\n      dataConf,\n      label,\n      dataAnchorConf,\n      labelDim = {},\n      padding,\n      labelSpace,\n      showValue,\n      SmartLabel = chart.getFromEnv('smartLabel'),\n      retrunDimension = {\n        paddingLeft: 0,\n        paddingRight: 0\n      };\n\n    // @todo also calculate the space for the labels\n\n    if (firstData) {\n      dataConf = firstData.config;\n      showValue = dataConf.showValue;\n      dataAnchorConf = (dataConf && dataConf.anchorProps) || {};\n      if (showValue) {\n        label = dataConf.displayValue;\n        SmartLabel.useEllipsesOnOverflow(chart.config.useEllipsesWhenOverflow);\n        SmartLabel.setStyle(dataLabelStyle);\n        labelDim = SmartLabel.getOriSize(label);\n      }\n      if (dataConf.setValue) {\n        padding = mathMax(pluckNumber(dataAnchorConf.radius, 0), halfErrorBarW) +\n                    pluckNumber(dataAnchorConf.borderThickness, 0);\n        labelSpace = (labelDim.width || 0) / 2;\n      }\n\n      retrunDimension.paddingLeft = mathMax(padding, labelSpace);\n    }\n\n    if (lastData) {\n      dataConf = lastData.config;\n      showValue = dataConf.showValue;\n      dataAnchorConf = (dataConf && dataConf.anchorProps) || {};\n      if (showValue) {\n        label = dataConf.displayValue;\n        SmartLabel.setStyle(dataLabelStyle);\n        labelDim = SmartLabel.getOriSize(label);\n      }\n      if (dataConf.setValue) {\n        padding = mathMax(pluckNumber(dataAnchorConf.radius, 0), halfErrorBarW) +\n                        pluckNumber(dataAnchorConf.borderThickness, 0);\n        labelSpace = (labelDim.width || 0) / 2;\n      }\n\n      retrunDimension.paddingRight = mathMax(padding, labelSpace);\n    }\n\n    return retrunDimension;\n  }\n  /**\n * method to remove data from the dataset during update\n */\n  removePlots () {\n    removePlots.call(this);\n  }\n}\nexport default ErrorLineDataset;\n","export default {\n  'initial.dataset.errorLine': function () {\n    return {\n      'path.appearing': () => {\n        return [{\n          initialAttr: {\n            opacity: 0\n          },\n          finalAttr: {\n            opacity: 1\n          },\n          startEnd: {\n            start: 0.5,\n            end: 1\n          },\n          slot: 'plot'\n        }];\n      },\n      '*': null\n    };\n  }\n};\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\nexport default {\n  '*.dataset.errorLine': lineAnimation['*.dataset.line']\n};\n","import Errorscatter from '@fusioncharts/powercharts/src/chart/errorscatter';\nexport default Errorscatter;\n","import ScatterBase from '@fusioncharts/charts/src/chart/_internal/scatterbase';\nimport ErrorScatterDataset from '../../dataset/errorscatter';\n\nconst ERRORSCATTER = 'errorscatter';\nclass ErrorScatter extends ScatterBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'ErrorScatter';\n  }\n\n  constructor () {\n    super();\n    this.isXY = true;\n    this.defaultZeroPlaneHighlighted = false;\n    this.useErrorGroup = true;\n    this.isErrorChart = true;\n    this.hasAnchor = true;\n    // this.fireGroupEvent = true;\n    this.initAnimation = true;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'ErrorScatter';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = ERRORSCATTER;\n    config.enablemousetracking = true;\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n  getDSdef () {\n    return ErrorScatterDataset;\n  }\n}\nexport default ErrorScatter;\n","import ScatterDataset from '@fusioncharts/charts/src/dataset/scatter';\nimport { preDefStr, parseTooltext, pluck, getValidValue, pluckNumber,\n  HUNDREDSTRING, getFirstValue, convertColor, getFirstColor, getFirstAlpha,\n  parseUnsafeString } from '@fusioncharts/core/src/lib';\nimport KdTree from '@fusioncharts/charts/src/dataset/_internal/kdtree';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport errorscatterAnimation from './line.animation';\nimport errorscatterErrorAnimation from './error.animation';\nvar colorStrings = preDefStr.colors,\n  COLOR_AAAAAA = colorStrings.AAAAAA,\n  ROUND = preDefStr.ROUND,\n  PERCENTAGESTRING = preDefStr.PERCENTAGESTRING,\n  BLANK = '',\n  UNDEF,\n  COMMASPACE = ', ',\n  POINTER = 'pointer',\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n  OPTIONAL = 'optional',\n  // TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')', // invisible but clickable\n  M = 'M',\n  H = 'H',\n  V = 'V';\nconst DISAPPEARING = 'disappearing',\n  APPEARING = 'appearing',\n  UPDATING = 'updating';\n// HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS : CLICK_THRESHOLD_PIXELS,\naddDep({\n  name: 'errorscatterAnimation',\n  type: 'animationRule',\n  extension: errorscatterAnimation\n});\naddDep({\n  name: 'errorscatterErrorAnimation',\n  type: 'animationRule',\n  extension: errorscatterErrorAnimation\n});\nclass ErrorScatter extends ScatterDataset {\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.drawCallbackFn = (state) => {\n      return function () {\n        if (state === 'disappearing') {\n          this.hide();\n        }\n      };\n    };\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.removeCallbackFn = function () {\n      this.hide();\n      this.shadow({ opacity: 0 });\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'errorScatter';\n  }\n  ErrorValueConfigure () {\n    var dataSet = this,\n      conf = dataSet.config,\n      JSONData = conf.JSONData,\n      categories = dataSet.getFromEnv('dataSource').categories && dataSet.getFromEnv('dataSource').categories[0].category,\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      setDataArr = JSONData.data,\n      setDataLen = (setDataArr && setDataArr.length) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      setData,\n      dataObj,\n      config,\n      dataStore = dataSet.components.data,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      errorBarAlpha,\n      errorBarThickness,\n      errorBarShadow,\n      errorBarWidth,\n      errorBarColor,\n      halfHorizontalErrorBar,\n      halfVerticalErrorBar,\n      horizontalErrorBarAlpha,\n      verticalErrorBarAlpha,\n      horizontalErrorBarColor,\n      verticalErrorBarColor,\n      horizontalErrorBarThickness,\n      verticalErrorBarThickness,\n      hErrorValue,\n      vErrorValue,\n      hErrorToolTipValue,\n      vErrorToolTipValue,\n      tooltipSepChar = pluck(chartAttr.tooltipsepchar, COMMASPACE),\n      yAxisName = parseUnsafeString(chartAttr.yaxisname),\n      xAxisName = parseUnsafeString(chartAttr.xaxisname),\n\n      parentYAxis = conf.parentYAxis,\n      setValue,\n      formatedVal,\n      toolText,\n      horizontalErrorPercent,\n      verticalErrorPercent,\n      macroIndices,\n      parserConfig,\n      seriesname,\n      infMin = -Infinity,\n      infMax = +Infinity,\n      maxErrorValue,\n      minErrorValue,\n      horizontal,\n      vertical,\n      vPositiveErrorValue,\n      hNegativeErrorValue,\n      hPositiveErrorValue,\n      hPositiveSetTooltext,\n      hPositiveErrorToolTipValue,\n      hCPErrorToolText,\n      hCPErrorToolTipValue,\n      hNegativeErrorToolTipValue,\n      hCNErrorToolTipValue,\n      vPositiveErrorToolTipValue,\n      hNegativeSetTooltext,\n      vCPErrorToolTipValue,\n      vNegativeErrorValue,\n      vCNErrorToolText,\n      vCNErrorToolTipValue,\n      vPositiveSetTooltext,\n      hCNErrorToolText,\n      vCPErrorToolText,\n      cumulativeValueOnErrorBar,\n      vNegativeSetTooltext,\n      vNegativeErrorToolTipValue,\n      yMax = infMin,\n      yMin = infMax,\n      xMin = infMax,\n      xMax = infMin,\n      getTooltext = function (setTooltext, errorValue) {\n        var tooltext;\n\n        if (!conf.showTooltip) {\n          tooltext = false;\n        } else {\n          if (formatedVal === null) {\n            tooltext = false;\n          } else if (setTooltext !== UNDEF) {\n            macroIndices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130];\n            parserConfig = {\n              yaxisName: yAxisName,\n              xaxisName: xAxisName,\n              yDataValue: formatedVal,\n              xDataValue: config.label,\n              formattedValue: config.toolTipValue,\n              horizontalErrorValue: hErrorValue,\n              horizontalErrorDataValue: hErrorToolTipValue,\n              verticalErrorValue: vErrorValue,\n              verticalErrorDataValue: vErrorToolTipValue,\n              horizontalErrorPercentValue: horizontalErrorPercent,\n              verticalErrorPercentValue: verticalErrorPercent,\n              label: config.label,\n              // positiveErrorValue: hPositiveErrorToolTipValue,\n              // negativeErrorValue: hNegativeErrorToolTipValue,\n              horizontalPositiveErrorValue: config.useHorizontalErrorBar ? hPositiveErrorValue : UNDEF,\n              horizontalPositiveErrorDataValue: config.useHorizontalErrorBar ? hPositiveErrorToolTipValue : UNDEF,\n              horizontalNegativeErrorValue: halfHorizontalErrorBar ? UNDEF : hNegativeErrorValue,\n              horizontalNegativeErrorDataValue: halfHorizontalErrorBar ? UNDEF : hNegativeErrorToolTipValue,\n              verticalPositiveErrorValue: config.useVerticalErrorBar ? vPositiveErrorValue : UNDEF,\n              verticalPositiveErrorDataValue: config.useVerticalErrorBar ? vPositiveErrorToolTipValue : UNDEF,\n              verticalNegativeErrorValue: halfVerticalErrorBar ? UNDEF : vNegativeErrorValue,\n              verticalNegativeErrorDataValue: halfVerticalErrorBar ? UNDEF : vNegativeErrorToolTipValue,\n              errorValue: errorValue,\n              errorDataValue: errorValue,\n              errorPercentValue: config.errorPercentValue,\n              errorPercentDataValue: config.errorPercentValue\n            };\n            tooltext = parseTooltext(setTooltext, macroIndices,\n              parserConfig, setData, chartAttr, JSONData);\n          } else {\n            if (formatedVal === null) {\n              tooltext = false;\n            } else {\n              if (conf.seriesNameInTooltip) {\n                seriesname = getFirstValue(JSONData && JSONData.seriesname);\n              }\n              tooltext = seriesname ? seriesname + tooltipSepChar : BLANK;\n              tooltext += setValue.x ? numberFormatter.xAxis(setValue.x) + tooltipSepChar : BLANK;\n              tooltext += config.toolTipValue;\n            }\n          }\n        }\n        return tooltext;\n      },\n      i;\n\n    conf.errorBarShadow = errorBarShadow = pluckNumber(chartAttr.errorbarshadow, chartAttr.showshadow, 0);\n    conf.ignoreEmptyDatasets = pluckNumber(JSONData.ignoreemptydatasets, 0);\n    conf.notHalfErrorBar = !pluckNumber(chartAttr.halferrorbar, 1);\n\n    conf.errorBarAlpha = getFirstAlpha(pluck(\n      JSONData.errorbaralpha, chartAttr.errorbaralpha));\n    conf.errorBarWidth = errorBarWidth = pluckNumber(JSONData.errorbarwidth,\n      chartAttr.errorbarwidth, 5);\n    conf.errorBarColor = errorBarColor = convertColor(getFirstColor(\n      pluck(JSONData.errorbarcolor, chartAttr.errorbarcolor,\n        COLOR_AAAAAA)), errorBarAlpha);\n    conf.errorBarThickness = errorBarThickness = pluckNumber(\n      JSONData.errorbarthickness, chartAttr.errorbarthickness, 1);\n    conf.shadowOpacity = errorBarShadow ? (errorBarAlpha / 250) : 0;\n\n    conf.halfHorizontalErrorBar = halfHorizontalErrorBar = pluckNumber(chartAttr.halfhorizontalerrorbar, 1); // eslint-disable-line good-practices/no-single-usage-variable\n    conf.halfVerticalErrorBar = halfVerticalErrorBar = pluckNumber(chartAttr.halfverticalerrorbar, 1); // eslint-disable-line good-practices/no-single-usage-variable\n\n    (conf.initAnimation === UNDEF) && (conf.initAnimation = dataSet.getFromEnv('chart').initAnimation);\n\n    horizontalErrorBarAlpha =\n                    pluck(JSONData.horizontalerrorbaralpha,\n                      JSONData.errorbaralpha,\n                      chartAttr.horizontalerrorbaralpha, errorBarAlpha);\n\n    verticalErrorBarAlpha = pluckNumber(\n      JSONData.verticalerrorbaralpha, JSONData.errorbaralpha,\n      chartAttr.verticalerrorbaralpha, errorBarAlpha);\n\n    horizontalErrorBarColor = convertColor(pluck(\n      JSONData.horizontalerrorbarcolor, JSONData.errorbarcolor,\n      chartAttr.horizontalerrorbarcolor, errorBarColor),\n    horizontalErrorBarAlpha\n    );\n\n    verticalErrorBarColor = convertColor(pluck(\n      JSONData.verticalerrorbarcolor, JSONData.errorbarcolor,\n      chartAttr.verticalerrorbarcolor, errorBarColor),\n    verticalErrorBarAlpha\n    );\n\n    horizontalErrorBarThickness = pluckNumber(\n      JSONData.horizontalerrorbarthickness,\n      JSONData.errorbarthickness,\n      chartAttr.horizontalerrorbarthickness,\n      errorBarThickness);\n\n    verticalErrorBarThickness = pluckNumber(\n      JSONData.verticalerrorbarthickness,\n      JSONData.errorbarthickness,\n      chartAttr.verticalerrorbarthickness,\n      errorBarThickness);\n\n    conf.horizontalErrorBarWidth = pluckNumber(\n      JSONData.horizontalerrorbarwidth,\n      chartAttr.horizontalerrorbarwidth,\n      errorBarWidth);\n\n    conf.verticalErrorBarWidth = pluckNumber(\n      JSONData.verticalerrorbarwidth,\n      chartAttr.verticalerrorbarwidth,\n      errorBarWidth);\n\n    conf.cumulativeValueOnErrorBar =\n                pluckNumber(JSONData.cumulativevalueonerrorbar, chartAttr.cumulativevalueonerrorbar, 1);\n\n    for (i = 0; i < setDataLen; i++) {\n      if (!setDataArr) {\n        continue;\n      }\n\n      setData = setDataArr && setDataArr[i];\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n\n      // setErrorValue = numberFormatter.getCleanValue(setData.errorvalue);\n\n      setValue = config.setValue;\n      config.errorValue = setData.errorvalue;\n\n      config.cumulativeValueOnErrorBar = cumulativeValueOnErrorBar =\n                    pluckNumber(setData.cumulativevalueonerrorbar, conf.cumulativeValueOnErrorBar, 1);\n\n      config.hErrorValue = hErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.horizontalerrorvalue, setData.errorvalue));\n      hErrorToolTipValue = numberFormatter.xAxis(hErrorValue);\n\n      config.vErrorValue = vErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.verticalerrorvalue, setData.errorvalue));\n      vErrorToolTipValue = numberFormatter.dataLabels(vErrorValue);\n\n      config.hPositiveErrorValue = hPositiveErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.horizontalpositiveerrorvalue, setData.positiveerrorvalue, hErrorValue));\n      config.hNegativeErrorValue = hNegativeErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.horizontalnegativeerrorvalue, setData.negativeerrorvalue, hErrorValue));\n\n      config.vPositiveErrorValue = vPositiveErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.verticalpositiveerrorvalue, setData.positiveerrorvalue, vErrorValue));\n      config.vNegativeErrorValue = vNegativeErrorValue = numberFormatter.getCleanValue(\n        pluck(setData.verticalnegativeerrorvalue, setData.negativeerrorvalue, vErrorValue));\n\n      horizontalErrorPercent = (Math.round(((hErrorValue / setValue.x) * HUNDREDSTRING) * HUNDREDSTRING) /\n        HUNDREDSTRING) + PERCENTAGESTRING;\n\n      verticalErrorPercent = (Math.round(((vErrorValue / setValue.y) * HUNDREDSTRING) * HUNDREDSTRING) /\n        HUNDREDSTRING) + PERCENTAGESTRING;\n\n      hPositiveErrorToolTipValue =\n                    numberFormatter.dataLabels(hPositiveErrorValue, parentYAxis);\n\n      hPositiveSetTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext, hPositiveErrorToolTipValue), false));\n\n      hNegativeErrorToolTipValue =\n                    numberFormatter.dataLabels(hNegativeErrorValue, parentYAxis);\n\n      hNegativeSetTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext, hNegativeErrorToolTipValue), false));\n\n      vPositiveErrorToolTipValue =\n                    numberFormatter.dataLabels(vPositiveErrorValue, parentYAxis);\n\n      vPositiveSetTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext, vPositiveErrorToolTipValue), false));\n\n      vNegativeErrorToolTipValue =\n                    numberFormatter.dataLabels(vNegativeErrorValue, parentYAxis);\n\n      vNegativeSetTooltext = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n        JSONData.errorplottooltext, chartAttr.errorplottooltext, vNegativeErrorToolTipValue), false));\n      hCPErrorToolText = hCNErrorToolText = vCPErrorToolText = vCNErrorToolText = UNDEF;\n      if (cumulativeValueOnErrorBar) {\n        hCPErrorToolTipValue =\n                        numberFormatter.dataLabels(setValue.x + hPositiveErrorValue, parentYAxis);\n        hCPErrorToolText = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext, hCPErrorToolTipValue), false));\n\n        hCNErrorToolTipValue =\n                        numberFormatter.dataLabels(setValue.x - hNegativeErrorValue, parentYAxis);\n        hCNErrorToolText = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext, hCNErrorToolTipValue), false));\n\n        vCPErrorToolTipValue =\n                        numberFormatter.dataLabels(setValue.y + vPositiveErrorValue, parentYAxis);\n        vCPErrorToolText = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext, vCPErrorToolTipValue), false));\n\n        vCNErrorToolTipValue =\n                        numberFormatter.dataLabels(setValue.y - vNegativeErrorValue, parentYAxis);\n        vCNErrorToolText = getValidValue(parseUnsafeString(pluck(setData.errorplottooltext,\n          JSONData.errorplottooltext, chartAttr.errorplottooltext, vCNErrorToolTipValue), false));\n      }\n\n      categories && categories[i] && (config.label =\n                    getValidValue(parseUnsafeString(pluck(categories[i].tooltext, categories[i].label))));\n\n      if (setData.horizontalpositiveerrorvalue || setData.positiveerrorvalue ||\n                    setData.horizontalnegativeerrorvalue || setData.negativeerrorvalue) {\n        config.halfHorizontalErrorBar = halfHorizontalErrorBar = 0;\n      } else {\n        config.halfHorizontalErrorBar = halfHorizontalErrorBar = conf.halfHorizontalErrorBar;\n      }\n\n      if (setData.verticalpositiveerrorvalue || setData.positiveerrorvalue ||\n                    setData.verticalnegativeerrorvalue || setData.negativeerrorvalue) {\n        config.halfVerticalErrorBar = halfVerticalErrorBar = 0;\n      } else {\n        config.halfVerticalErrorBar = halfVerticalErrorBar = conf.halfVerticalErrorBar;\n      }\n\n      if (setValue.x !== null) {\n        maxErrorValue = setValue.x + Number(hPositiveErrorValue);\n        minErrorValue = setValue.x - (halfHorizontalErrorBar ? 0 : Number(hNegativeErrorValue));\n\n        xMax = Math.max(xMax, maxErrorValue, minErrorValue);\n        xMin = Math.min(xMin, maxErrorValue, minErrorValue);\n      }\n\n      if (setValue.y !== null) {\n        maxErrorValue = setValue.y + Number(vPositiveErrorValue);\n        minErrorValue = setValue.y - (halfVerticalErrorBar ? 0 : Number(vNegativeErrorValue));\n\n        yMax = Math.max(yMax, maxErrorValue, minErrorValue);\n        yMin = Math.min(yMin, maxErrorValue, minErrorValue);\n      }\n\n      config.useHorizontalErrorBar = pluckNumber(setData.usehorizontalerrorbar,\n        JSONData.usehorizontalerrorbar, chartAttr.usehorizontalerrorbar, 0);\n\n      config.useVerticalErrorBar = pluckNumber(setData.useverticalerrorbar,\n        JSONData.useverticalerrorbar, chartAttr.useverticalerrorbar, 1);\n\n      config.errorValueConf = {};\n      // horizontal error bar related segments\n      horizontal = config.errorValueConf.horizontal = {};\n      // this segments are mandatory as this part will show regardless show half error value is true or false\n      horizontal.mandatory = {};\n      // marker is one of the segment of error bar which denotes the error value\n      horizontal.mandatory.marker = {\n        errorValue: -(hPositiveErrorValue === null ? UNDEF : hPositiveErrorValue),\n        tooltext: getTooltext(hPositiveSetTooltext, hPositiveErrorToolTipValue),\n        errorBarColor: horizontalErrorBarColor,\n        isHorizontal: true,\n        errorBarThickness: horizontalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (horizontalErrorBarAlpha / 250) : 0\n      };\n      // limit denotes the error value or cummulative value of the error bar thats why we are calling it limit\n      // as it conveys that the end of error bar\n      horizontal.mandatory.limit = {\n        errorValue: -(hPositiveErrorValue === null ? UNDEF : hPositiveErrorValue),\n        tooltext: cumulativeValueOnErrorBar ? getTooltext(hCPErrorToolText, hCPErrorToolTipValue)\n          : getTooltext(hPositiveSetTooltext, hPositiveErrorToolTipValue),\n        errorBarColor: horizontalErrorBarColor,\n        isHorizontal: true,\n        errorBarThickness: horizontalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (horizontalErrorBarAlpha / 250) : 0,\n        errorEdgeBar: true\n      };\n      // this segments are option as this part will show only show half error value is true\n      horizontal.optional = {};\n      // marker is one of the segment of error bar which denotes the error value\n      horizontal.optional.marker = {\n        errorValue: hNegativeErrorValue,\n        tooltext: getTooltext(hNegativeSetTooltext, hNegativeErrorToolTipValue),\n        errorBarColor: horizontalErrorBarColor,\n        isHorizontal: true,\n        errorBarThickness: horizontalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (horizontalErrorBarAlpha / 250) : 0\n      };\n      // limit denotes the error value or cummulative value of the error bar thats why we are calling it limit\n      // as it conveys that the end of error bar\n      horizontal.optional.limit = {\n        errorValue: hNegativeErrorValue,\n        tooltext: cumulativeValueOnErrorBar ? getTooltext(hCNErrorToolText, hCNErrorToolTipValue)\n          : getTooltext(hNegativeSetTooltext, hNegativeErrorToolTipValue),\n        errorBarColor: horizontalErrorBarColor,\n        isHorizontal: true,\n        errorBarThickness: horizontalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (horizontalErrorBarAlpha / 250) : 0,\n        errorEdgeBar: true\n      };\n      // vertical error bar related segments\n      vertical = config.errorValueConf.vertical = {};\n      // this segments are mandatory as this part will show regardless show half error value is true or false\n      vertical.mandatory = {};\n      // marker is one of the segment of error bar which denotes the error value\n      vertical.mandatory.marker = {\n        errorValue: -(vPositiveErrorValue === null ? UNDEF : vPositiveErrorValue),\n        tooltext: getTooltext(vPositiveSetTooltext, vPositiveErrorToolTipValue),\n        errorBarColor: verticalErrorBarColor,\n        errorBarThickness: verticalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (verticalErrorBarAlpha / 250) : 0\n      };\n      // limit denotes the error value or cummulative value of the error bar thats why we are calling it limit\n      // as it conveys that the end of error bar\n      vertical.mandatory.limit = {\n        errorValue: -(vPositiveErrorValue === null ? UNDEF : vPositiveErrorValue),\n        tooltext: cumulativeValueOnErrorBar ? getTooltext(vCPErrorToolText, vCPErrorToolTipValue)\n          : getTooltext(vPositiveSetTooltext, vPositiveErrorToolTipValue),\n        errorBarColor: verticalErrorBarColor,\n        errorBarThickness: verticalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (verticalErrorBarAlpha / 250) : 0,\n        errorEdgeBar: true\n      };\n      // this segments are option as this part will show only show half error value is true\n      vertical.optional = {};\n      // marker is one of the segment of error bar which denotes the error value\n      vertical.optional.marker = {\n        errorValue: vNegativeErrorValue,\n        tooltext: getTooltext(vNegativeSetTooltext, vNegativeErrorToolTipValue),\n        errorBarColor: verticalErrorBarColor,\n        errorBarThickness: verticalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (verticalErrorBarAlpha / 250) : 0\n      };\n      // limit denotes the error value or cummulative value of the error bar thats why we are calling it limit\n      // as it conveys that the end of error bar\n      vertical.optional.limit = {\n        errorValue: vNegativeErrorValue,\n        tooltext: cumulativeValueOnErrorBar ? getTooltext(vCNErrorToolText, vCNErrorToolTipValue)\n          : getTooltext(vNegativeSetTooltext, vNegativeErrorToolTipValue),\n        errorBarColor: verticalErrorBarColor,\n        errorBarThickness: verticalErrorBarThickness,\n        shadowOpacity: errorBarShadow ? (verticalErrorBarAlpha / 250) : 0,\n        errorEdgeBar: true\n      };\n\n      setValue = config.setValue;\n\n      // errorPercentValue = (Math.round(((setErrorValue / setValue) * HUNDREDSTRING) * HUNDREDSTRING) /\n      //               HUNDREDSTRING) + PERCENTAGESTRING;\n\n      formatedVal = config.formatedVal;\n\n      // Initial tooltext parsing\n      if (!conf.showTooltip) {\n        toolText = false;\n      } else if (config.setTooltext !== UNDEF) {\n        macroIndices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130];\n        parserConfig = {\n          yaxisName: yAxisName,\n          xaxisName: xAxisName,\n          yDataValue: formatedVal,\n          xDataValue: config.label,\n          formattedValue: config.toolTipValue,\n          horizontalErrorValue: hErrorValue,\n          horizontalErrorDataValue: hErrorToolTipValue,\n          verticalErrorValue: vErrorValue,\n          verticalErrorDataValue: vErrorToolTipValue,\n          horizontalErrorPercentValue: horizontalErrorPercent,\n          verticalErrorPercentValue: verticalErrorPercent,\n          label: config.label,\n          // positiveErrorValue: hPositiveErrorToolTipValue,\n          // negativeErrorValue: hNegativeErrorToolTipValue,\n          horizontalPositiveErrorValue: config.useHorizontalErrorBar ? hPositiveErrorValue : UNDEF,\n          horizontalPositiveErrorDataValue: config.useHorizontalErrorBar ? hPositiveErrorToolTipValue : UNDEF,\n          horizontalNegativeErrorValue: halfHorizontalErrorBar ? UNDEF : hNegativeErrorValue,\n          horizontalNegativeErrorDataValue: halfHorizontalErrorBar ? UNDEF : hNegativeErrorToolTipValue,\n          verticalPositiveErrorValue: config.useVerticalErrorBar ? vPositiveErrorValue : UNDEF,\n          verticalPositiveErrorDataValue: config.useVerticalErrorBar ? vPositiveErrorToolTipValue : UNDEF,\n          verticalNegativeErrorValue: halfVerticalErrorBar ? UNDEF : vNegativeErrorValue,\n          verticalNegativeErrorDataValue: halfVerticalErrorBar ? UNDEF : vNegativeErrorToolTipValue,\n          errorValue: config.errorValue,\n          errorDataValue: numberFormatter.dataLabels(config.errorValue, conf.parentYAxis)\n        };\n        toolText = parseTooltext(config.setTooltext, macroIndices, parserConfig, setData, chartAttr,\n          JSONData);\n      } else {\n        // determine the default tooltext then.\n        if (formatedVal === null) {\n          toolText = false;\n        } else {\n          if (conf.seriesNameInTooltip) {\n            seriesname = getFirstValue(JSONData && JSONData.seriesname);\n          }\n          toolText = seriesname ? seriesname + tooltipSepChar : BLANK;\n          toolText += setValue.x ? numberFormatter.xAxis(setValue.x) + tooltipSepChar : BLANK;\n          toolText += config.toolTipValue;\n        }\n      }\n      config.toolText = toolText;\n    }\n\n    conf.xMax = xMax;\n    conf.xMin = xMin;\n    conf.yMin = yMin;\n    conf.yMax = yMax;\n  }\n\n  drawErrorValue () {\n    var dataSet = this,\n      conf = dataSet.config,\n      setDataArr = dataSet.config.JSONData.data,\n      dataSetLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      attr,\n      i,\n      errorGraphicsString,\n      visible = dataSet.getState('visible'),\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      graphics,\n      // yAxisPVR = yAxis.getPVR(),\n      // xAxisPVR = xAxis.getPVR(),\n      isHorizontal,\n      errorBarThickness,\n      errorBarWidth,\n      errorBarColor,\n      setLink,\n      xPos,\n      yPos,\n      useCrispErrorPath = 1,\n      dataObj,\n      setValue,\n      animState,\n      config,\n      notRequiredHEB,\n      notRequiredVEB,\n      isHalfHorizontalErrorBar,\n      isHalfVertictalErrorBar,\n      crispY,\n      crispX,\n      errorPath,\n      errorValPos,\n      errorValuePosFactor,\n      subType,\n      errorBar,\n      subErrorBar,\n      segment,\n      segmentType,\n      currErrorTracker,\n      errorValue,\n      errorStartPos,\n      halfErrorBarW,\n      errorLineElem,\n      plotXpos,\n      plotYpos,\n      errorBarSegmentLen,\n      errorBarSegmentStartPos,\n      l,\n      k,\n      errorValueConf,\n      errorBarType,\n      trackerTolerance,\n      keys,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      searchDataArr = [],\n      errorTrackerConfig;\n\n    // Loop through each data points\n    for (i = 0; i < dataSetLen; i++) {\n      dataObj = dataStore[i];\n      errorTrackerConfig = dataObj.errorTrackerConfig = {};\n      errorTrackerConfig.errorTrackerArr = [];\n      config = dataObj && dataObj.config;\n      setValue = config && config.setValue;\n\n      errorValueConf = config.errorValueConf;\n\n      // If plot value is found \"null\", continue the loop to next iteration.\n      if (dataObj === UNDEF || setValue === UNDEF || setValue === null || !errorValueConf) {\n        continue;\n      }\n      keys = Object.keys(graphics = dataObj.graphics);\n      if (config.vErrorValue === null &&\n                    config.vPositiveErrorValue === null && config.vNegativeErrorValue === null) {\n        for (k = 0; k < keys.length; k++) {\n          if (keys[k].match(/error-horizontal-/)) {\n            animationManager.setAnimation({\n              el: graphics[keys[k]],\n              state: 'disappearing',\n              callback: dataSet.drawCallbackFn('disappearing')\n            });\n            graphics[keys[k]].shadow({ opacity: 0 });\n          }\n        }\n      }\n\n      if (config.hErrorValue === null &&\n                    config.hPositiveErrorValue === null && config.vPositiveErrorValue === null) {\n        for (k = 0; k < keys.length; k++) {\n          if (keys[k].match(/error-vertical-/)) {\n            animationManager.setAnimation({\n              el: graphics[keys[k]],\n              state: 'disappearing',\n              callback: dataSet.drawCallbackFn('disappearing')\n            });\n            graphics[keys[k]].shadow({ opacity: 0 });\n          }\n        }\n      }\n\n      if (config.hErrorValue === null && config.vErrorValue === null && config.hPositiveErrorValue &&\n                    config.hNegativeErrorValue && config.vPositiveErrorValue && config.vNegativeErrorValue) {\n        continue;\n      }\n\n      setLink = config.setLink;\n\n      plotXpos = dataObj._xPos;\n      plotYpos = dataObj._yPos;\n\n      yPos = plotYpos;\n      xPos = plotXpos;\n      // errorBarType := horizontal / vertical\n      for (errorBarType in errorValueConf) {\n        if (!errorValueConf.hasOwnProperty(errorBarType)) {\n          continue;\n        }\n        errorBar = errorValueConf[errorBarType];\n        // subType := mandatory / optional\n        for (subType in errorBar) {\n          if (!errorBar.hasOwnProperty(subType)) {\n            continue;\n          }\n          subErrorBar = errorBar[subType];\n          // segmentType := marker / limit\n          for (segmentType in subErrorBar) {\n            if (!subErrorBar.hasOwnProperty(segmentType)) {\n              continue;\n            }\n            animState = UNDEF;\n            segment = subErrorBar[segmentType];\n            attr = {};\n            currErrorTracker = errorTrackerConfig.errorTrackerArr[0] = {};\n            errorLineElem = null;\n\n            currErrorTracker.tooltext = segment.tooltext;\n            errorStartPos = yPos;\n            errorValue = segment.errorValue;\n\n            notRequiredHEB = !config.useHorizontalErrorBar && errorBarType === HORIZONTAL;\n            notRequiredVEB = !config.useVerticalErrorBar && errorBarType === VERTICAL;\n            isHalfHorizontalErrorBar = config.halfHorizontalErrorBar && errorBarType === HORIZONTAL && subType === OPTIONAL;\n            isHalfVertictalErrorBar = config.halfVerticalErrorBar && errorBarType === VERTICAL && subType === OPTIONAL;\n            if (notRequiredHEB || notRequiredVEB || isHalfHorizontalErrorBar || isHalfVertictalErrorBar) {\n              animState = DISAPPEARING;\n            } else if (errorValue === null || errorValue === UNDEF || isNaN(errorValue)) {\n              animState = DISAPPEARING;\n            } else {\n              errorBarColor = segment.errorBarColor;\n              isHorizontal = segment.isHorizontal;\n              errorBarThickness = segment.errorBarThickness;\n\n              errorBarWidth = isHorizontal ? conf.horizontalErrorBarWidth : conf.verticalErrorBarWidth;\n\n              halfErrorBarW = (!visible) ? 0 : (errorBarWidth / 2);\n\n              errorValuePosFactor = (!visible) ? 0 : -1;\n\n              trackerTolerance = errorBarThickness > 5 ? (errorBarThickness) / 2 + 0.5 : 5.5 / 2;\n\n              if (isHorizontal) {\n                errorValPos = dataSet.getFromEnv('xAxis').getPixel(dataObj.config._x + (errorValue * errorValuePosFactor));\n                crispY = errorValPos;\n                crispX = xPos;\n\n                if (useCrispErrorPath) {\n                  crispY = Math.round(errorStartPos) + (errorBarThickness % 2 / 2);\n                  crispX = Math.round(errorValPos) + (errorBarThickness % 2 / 2);\n                }\n\n                if (segment.errorEdgeBar) {\n                  errorPath = [\n                    M, crispX, crispY - halfErrorBarW,\n                    V, (crispY + halfErrorBarW)\n                  ];\n\n                  errorBarSegmentLen = 2 * halfErrorBarW;\n                  errorBarSegmentStartPos = crispY - halfErrorBarW;\n                  for (l = trackerTolerance; l < errorBarSegmentLen; l += (2 * trackerTolerance)) {\n                    searchDataArr.push({\n                      x: crispX,\n                      y: errorBarSegmentStartPos + l,\n                      r: trackerTolerance,\n                      index: i,\n                      data: dataObj,\n                      toolText: segment.tooltext,\n                      barType: 'h'\n                    });\n                  }\n                } else {\n                  errorPath = [\n                    M, xPos, crispY,\n                    H, crispX\n                  ];\n\n                  errorBarSegmentLen = Math.abs(xPos - crispX);\n                  errorBarSegmentStartPos = xPos > crispX ? crispX : xPos;\n                  for (l = trackerTolerance; l < errorBarSegmentLen; l += (2 * trackerTolerance)) {\n                    searchDataArr.push({\n                      x: errorBarSegmentStartPos + l,\n                      y: crispY,\n                      r: trackerTolerance,\n                      index: i,\n                      data: dataObj,\n                      toolText: segment.tooltext,\n                      barType: 'h'\n                    });\n                  }\n                }\n              } else {\n                // Vertical Error drawing\n                errorValPos = dataSet.getFromEnv('yAxis').getPixel(dataObj.config._y + (errorValue * errorValuePosFactor));\n                crispY = errorValPos;\n                crispX = xPos;\n                if (useCrispErrorPath) {\n                  crispY = Math.round(errorValPos) + (errorBarThickness % 2 / 2);\n                  crispX = Math.round(xPos) + (errorBarThickness % 2 / 2);\n                }\n\n                if (segment.errorEdgeBar) {\n                  errorPath = [\n                    M, crispX - halfErrorBarW, crispY,\n                    H, (crispX + halfErrorBarW)\n                  ];\n\n                  errorBarSegmentLen = 2 * halfErrorBarW;\n                  errorBarSegmentStartPos = crispX - halfErrorBarW;\n                  for (l = trackerTolerance; l <= errorBarSegmentLen; l += (2 * trackerTolerance)) {\n                    searchDataArr.push({\n                      x: errorBarSegmentStartPos + l,\n                      y: crispY,\n                      r: trackerTolerance,\n                      index: i,\n                      data: dataObj,\n                      toolText: segment.tooltext,\n                      barType: 'v'\n                    });\n                  }\n                } else {\n                  errorPath = [\n                    M, crispX, errorStartPos,\n                    V, crispY\n                  ];\n\n                  errorBarSegmentLen = Math.abs(errorStartPos - crispY);\n                  errorBarSegmentStartPos = errorStartPos > crispY ? crispY : errorStartPos;\n                  for (l = trackerTolerance; l <= errorBarSegmentLen; l += (2 * trackerTolerance)) {\n                    searchDataArr.push({\n                      x: crispX,\n                      y: errorBarSegmentStartPos + l,\n                      r: trackerTolerance,\n                      index: i,\n                      data: dataObj,\n                      toolText: segment.tooltext,\n                      barType: 'v'\n                    });\n                  }\n                }\n              }\n              attr = {\n                path: errorPath,\n                'stroke-width': visible ? errorBarThickness : 0,\n                stroke: errorBarColor,\n                'cursor': setLink ? POINTER : BLANK,\n                'stroke-linecap': ROUND\n              };\n            }\n            errorGraphicsString = ['error', errorBarType, subType, segmentType].join('-');\n            if (!animState) {\n              if (graphics[errorGraphicsString]) {\n                animState = UPDATING;\n              } else {\n                animState = APPEARING;\n              }\n            }\n            if (!graphics[errorGraphicsString] && animState === 'disappearing') {\n              continue;\n            }\n            errorLineElem = graphics[errorGraphicsString] = animationManager.setAnimation({\n              el: graphics[errorGraphicsString] || 'path',\n              container: dataSet.getContainer('errorPlotGroup'),\n              component: dataSet,\n              attr: attr,\n              state: animState,\n              label: 'path',\n              callback: dataSet.drawCallbackFn(animState)\n            });\n            (animState !== 'disappearing') && errorLineElem.show();\n            // @todo has to validate how it works\n            // why we need to set opacity while it is follower to main element\n            errorLineElem.shadow({ opacity: animState === 'disappearing' ? 0 : conf.shadowOpacity }, dataSet.getContainer('errorShadowGroup'));\n          }\n        }\n      }\n    }\n    searchDataArr.length && (this.config.dataTreeB = new KdTree().buildKdTree(searchDataArr));\n    conf.initAnimation = false;\n  }\n\n  /*\n         * Using kdtree algo for searching\n        */\n  _getHoveredPlot (x, y) {\n    var res,\n      res1,\n      tooltext,\n      errorBarToolText,\n      hoverEffects,\n      element;\n\n    res = this.config.dataTree.getNeighbour({\n      x: x,\n      y: y\n    }, true);\n\n    // searching neighbour from Kdtree with basic search flag on\n    if (res) {\n      tooltext = res.data.config.toolText;\n      res.data.config.finalTooltext = tooltext;\n      hoverEffects = res.data.config.hoverEffects;\n      element = res.data.graphics.element;\n      element.data('hoverEnabled', hoverEffects.enabled);\n      hoverEffects.enabled && element.attr(element.getData().setRolloverAttr);\n      return {\n        pointIndex: res.index,\n        hovered: true,\n        pointObj: res.data\n      };\n    }\n    res1 = this.config.dataTreeB && this.config.dataTreeB.getNeighbour({\n      x: x,\n      y: y\n    }, true);\n    if (res1) {\n      if (res1.barType === 'h') {\n        errorBarToolText = res1.toolText;\n      } else if (res1.barType === 'v') {\n        errorBarToolText = res1.toolText;\n      }\n      res1.data.config.finalTooltext = errorBarToolText;\n      element = res1.data.graphics.element;\n      element.data('hoverEnabled', false);\n      element.attr(element.getData().setRolloutAttr);\n      return {\n        pointIndex: res1.index,\n        hovered: true,\n        pointObj: res1.data\n      };\n    }\n  }\n  // Function to remove a data from a dataset during real time update.\n  removePlots () {\n    var dataSet = this,\n      components = dataSet.components,\n      removeDataArr = components.removeDataArr,\n      pool = components.pool || (components.pool = {\n        element: [],\n        hotElement: [],\n        label: []\n      }),\n      len = removeDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removeData,\n      graphics,\n      i,\n      key;\n\n    for (i = 0; i < len; i++) {\n      removeData = removeDataArr[0];\n      removeDataArr.splice(0, 1);\n      // In case of non existing data plot continue;\n      if (!removeData || !removeData.graphics) {\n        continue;\n      }\n\n      graphics = removeData.graphics;\n\n      for (key in graphics) {\n        if (graphics.hasOwnProperty(key)) {\n          dataSet.getFromEnv('animationManager').setAnimation({\n            el: graphics[key],\n            component: dataSet,\n            attr: {},\n            state: 'disappering',\n            callback: dataSet.removeCallbackFn\n          });\n        }\n      }\n\n      // Storing the graphic elements for reuse.\n      removeData.graphics.element && (pool.element = pool.element.concat(removeData.graphics.element));\n      removeData.graphics.label && (pool.label = pool.label.concat(removeData.graphics.label));\n    }\n    components.pool = pool;\n  }\n}\nexport default ErrorScatter;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  'initial.dataset.errorScatter': lineAnimation['initial.dataset.line']\n};\n","import errorAnimation from '../errorline/line.animation';\n\nexport default {\n  'initial.dataset.errorScatter': errorAnimation['initial.dataset.errorLine']\n};\n","import Inversemsarea from '@fusioncharts/powercharts/src/chart/inversemsarea';\nexport default Inversemsarea;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport AreaDataset from '@fusioncharts/charts/src/dataset/area';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\n\nconst AREA = 'area';\nclass InverseMSArea extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'InverseMSArea';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'InverseMSArea';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = AREA;\n    config.isInverse = true;\n    config.zeroplanethickness = 2;\n    config.zeroplanealpha = 80;\n    config.showzeroplaneontop = 1;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n    _setDefaultConfig.call(this);\n  }\n  getDSdef () {\n    return AreaDataset;\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n}\nexport default InverseMSArea;\n","import Inversemscolumn2d from '@fusioncharts/powercharts/src/chart/inversemscolumn2d';\nexport default Inversemscolumn2d;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport MultiSeriesManager from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\nlet COLUMN = 'column';\n\nclass InverseMSColumn2d extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'InverseMSColumn2d';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'InverseMSColumn2d';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = COLUMN;\n    config.isInverse = true;\n    config.enablemousetracking = true;\n  }\n  getDSdef () {\n    return ColumnDataset;\n  }\n  getDSGroupdef () {\n    return MultiSeriesManager;\n  }\n}\nexport default InverseMSColumn2d;\n","import Inversemsline from '@fusioncharts/powercharts/src/chart/inversemsline';\nexport default Inversemsline;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\nlet LINE = 'line';\nclass InverseMSLine extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'InverseMSLine';\n  }\n\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'InverseMSLine';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n\n    config.defaultDatasetType = LINE;\n    config.isInverse = true;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 4;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n    _setDefaultConfig.call(this);\n  }\n  getDSdef () {\n    return LineDataset;\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n}\nexport default InverseMSLine;\n","import Dragcolumn2d from '@fusioncharts/powercharts/src/chart/dragcolumn2d';\nexport default Dragcolumn2d;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport DragBase from '../_internal/dragbase';\nimport DragColumnDataset from '../../dataset/dragcolumn';\nimport DragColumnMultiseriesGroup from '../../dataset/groups/dragcolumn-multiseries';\nimport LimitUpdaterFactory from '../../factories/limit-updater';\nimport dragtrackerFactory from '../../factories/drag-tracker';\n\n/**\n * API class of dragcolumn inheriting from column class\n */\nclass DragColumn extends DragBase {\n  /**\n   * constructor to register limit updater\n   */\n  constructor () {\n    super();\n    this.registerFactory('limitUpdater', LimitUpdaterFactory, ['axis']);\n    this.registerFactory('dragTracker', dragtrackerFactory, ['canvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'DragColumn2D';\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'DragColumn2D';\n  }\n\n  /**\n   * This method return the dataset-group definations for this charts\n   * @return {Object}       Multiseries Dragcolumn group definition\n   */\n  getDSGroupdef () {\n    return DragColumnMultiseriesGroup;\n  }\n\n  /**\n   * Function to parse chart specific configurations.\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.isDrag = true;\n  }\n  /**\n   * Function to return the dataset liked with the current API\n   * @return {Object} The DragColumnDataset class\n   */\n  getDSdef () {\n    return DragColumnDataset;\n  }\n}\nexport default DragColumn;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport {\n  getMouseCoordinate,\n  getValidValue,\n  pluck,\n  pluckNumber,\n  preDefStr,\n  MOUSEOUT,\n  MOUSEMOVE,\n  ZEROSTRING,\n  extend2,\n  BLANKSTRING,\n  _manageInteractiveSpace\n} from '@fusioncharts/core/src/lib';\nimport safeMax from '@fusioncharts/utils/src/array/safe-max';\nimport safeMin from '@fusioncharts/utils/src/array/safe-min';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport MSColumn2D from '@fusioncharts/charts/src/chart/mscolumn2d';\nimport _getData from '@fusioncharts/core/src/_internal/misc/fetch-data';\nimport { getDepsByType } from '@fusioncharts/core/src/dependency-manager';\nimport { submitData } from './editable-charts';\n\nlet UNDEF,\n  transcoders = getDepsByType('transcoder'),\n  UNDERSCORE = preDefStr.UNDERSCORE,\n  BLANK = BLANKSTRING,\n  count = 0,\n  updateDataLimit = function (e) {\n    let iapi = e.sender.apiInstance,\n      canvas = iapi.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      vCanvas = canvas.getChildren('vCanvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      iapiConf = iapi.config,\n      dataLimit,\n      data = e.data,\n      endValue = data && data.endValue,\n      startValue = data && data.startValue;\n    if (endValue > iapiConf.yMax || endValue < iapiConf.yMin || startValue === iapiConf.yMin || startValue === iapiConf.yMax) {\n      dataLimit = vCanvas.getDataLimits();\n      iapiConf.yMax = dataLimit.max;\n      iapiConf.yMin = dataLimit.min;\n    }\n  },\n  /**\n   * sanitise the format given by the user\n   * @param {string} str value to be sanitised\n   * @return {string} a string in lower case\n   */\n  sanitiseFormatStr = str => str.toString().toLowerCase();\n\n/**\n * API class of dragcolumn inheriting from column class\n */\nclass DragBase extends MSColumn2D {\n  /**\n   * constructor to define the ei methods\n   */\n  constructor () {\n    super();\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.getDataWithId = function () {\n      var chartInstance = this,\n        dataObj = chartInstance.apiInstance && chartInstance.apiInstance.getJSONData(),\n        returnObj = [\n          [BLANK]\n        ],\n        datasets = dataObj.dataset,\n        catArr = (dataObj.categories && dataObj.categories[0] &&\n                dataObj.categories[0].category),\n        i = (datasets && datasets.length) || 0,\n        vLinePassed = 0,\n        setArr,\n        catName,\n        catObj,\n        set,\n        DS,\n        item,\n        dsID,\n        id,\n        j,\n        ln;\n\n      while (i--) {\n        DS = datasets[i];\n        if (DS) {\n          returnObj[0][i + 1] = DS.id || DS.seriesname;\n          dsID = DS.id || (i + 1);\n          set = DS.data;\n          ln = (set && set.length) || 0;\n          for (j = 0; j < ln; j += 1) {\n            item = j + 1;\n            if (!returnObj[item]) {\n              catObj = (catArr && catArr[j + vLinePassed]) || {};\n              while (catObj.vline) {\n                vLinePassed += 1;\n                catObj = catArr[j + vLinePassed] || {};\n              }\n              catName = catObj.label || catObj.name || BLANK;\n              returnObj[item] = [catName];\n            }\n            setArr = returnObj[item];\n            id = set[j].id || (item + UNDERSCORE + dsID);\n            setArr[i + 1] = [id, Number(set[j].value)];\n          }\n        }\n      }\n\n      return returnObj;\n    };\n    /**\n     * Data of the chart in format user wants or in a 2d array\n     * @param {string} [format] in which the data will be returned\n     * @return {string | Object} chart data\n     */\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.getData = function (format) {\n      var chartInstance = this,\n        jsonData = chartInstance.apiInstance && chartInstance.apiInstance.getJSONData(),\n        returnData,\n        datasets = jsonData.dataset,\n        len = (datasets && datasets.length) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n        i = 0,\n        transcoderObjSource,\n        sanitisedFormat;\n\n      // When a format is provided\n      if (format) {\n        sanitisedFormat = sanitiseFormatStr(format);\n        // no transcoding needed for json\n        if (/^json$/ig.test(sanitisedFormat)) {\n          returnData = jsonData;\n        } else {\n          transcoderObjSource = transcoders[sanitisedFormat]();\n          returnData = transcoderObjSource.fromJSON(jsonData, chartInstance).data;\n        }\n      } else {\n        returnData = _getData.call(chartInstance.apiInstance);\n        returnData.unshift([BLANK]);\n        while (i < len) {\n          returnData[0][i + 1] = datasets[i++].seriesname;\n        }\n      }\n      return returnData;\n    };\n    /**\n     * Function to set the upper limit of the chart\n     * @param {number} limit new upper limit for the chart\n     * @param {Function} callback is the function which gets the return value in its paramter if\n     * @return {number} value of the returned function\n     */\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.setUpperLimit = function (limit, callback) {\n      var iapi = this.apiInstance,\n        output;\n\n      if (callback) {\n        iapi.addJob(`setUpperLimitId${count++}`, function () {\n          output = iapi.changeUpperLimits(limit); // eslint-disable-line good-practices/no-single-usage-variable\n          if (typeof callback === 'function') {\n            callback(output);\n          }\n        }, priorityList.postRender);\n      } else {\n        return iapi.changeUpperLimits(limit);\n      }\n    };\n    /**\n     * Function to set the lower limit of the chart\n     * @param {number} limit new lower limit for the chart\n     * @param {Function} callback is the function which gets the return value in its paramter if\n     * @return {number} value of the returned function\n     */\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.setLowerLimit = function (limit, callback) {\n      var iapi = this.apiInstance,\n        output;\n\n      if (callback) {\n        iapi.addJob(`setLowerLimitId${count++}`, function () {\n          output = iapi.changeLowerLimits(limit); // eslint-disable-line good-practices/no-single-usage-variable\n          if (typeof callback === 'function') {\n            callback(output);\n          }\n        }, priorityList.postRender);\n      } else {\n        return iapi.changeLowerLimits(limit);\n      }\n    };\n    /**\n     * Function to get the lower limit of the chart\n     * @param {Function} callback is the function which gets the return value in its paramter if\n     * @return {number} lower limit value\n     */\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.getLowerLimit = function (callback) {\n      var iapi = this.apiInstance,\n        yAxis = iapi.getChildren('yAxis')[0];\n\n      if (yAxis) {\n        if (callback) {\n          iapi.addJob(`getLowerLimitId${count++}`, function () {\n            if (typeof callback === 'function') {\n              callback(yAxis.config.axisRange.min);\n            }\n          }, priorityList.postRender);\n        } else {\n          return yAxis.config.axisRange.min;\n        }\n      }\n    };\n    /**\n     * Function to get the upper limit of the chart\n     * @param {Function} callback is the function which gets the return value in its paramter if\n     * @return {number} upper limit value\n     */\n    // eslint-disable-next-line good-practices/no-function-dependency\n    this.eiMethods.getUpperLimit = function (callback) {\n      var iapi = this.apiInstance,\n        yAxis = iapi.getChildren('yAxis')[0];\n\n      if (yAxis) {\n        if (callback) {\n          iapi.addJob(`getUpperLimitId${count++}`, function () {\n            if (typeof callback === 'function') {\n              callback(yAxis.config.axisRange.max);\n            }\n          }, priorityList.postRender);\n        } else {\n          return yAxis.config.axisRange.max;\n        }\n      }\n    };\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'DragBase';\n  }\n\n  configureAttributes (dataObj) {\n    super.configureAttributes(dataObj);\n    this.getName() !== 'DragNode' &&\n      this.getFromEnv('chartInstance').addEventListener('dataplotdragend', updateDataLimit);\n  }\n\n  mouseoutHandler (e, _lastDatasetIndex, _lastPointIndex) {\n    let chart = this,\n      datasets = chart.config.datasetOrder || chart.getDatasets(),\n      mouseTracker = chart.getChildren('mouseTracker')[0];\n    // check if the data plot exists. else hide all existing tooltips.\n    if (datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex].components.data[_lastPointIndex]) {\n      datasets[_lastDatasetIndex]._firePlotEvent(MOUSEOUT, _lastPointIndex, e);\n    } else {\n      chart.getFromEnv('toolTipController').hideAll();\n    }\n    // delete stored last ds details\n    delete mouseTracker._lastDatasetIndex;\n    delete mouseTracker._lastPointIndex;\n  }\n\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'DragBase';\n  }\n\n  /**\n   * Function which determines on which particular data of a dataset the mouse pointer is hovered\n   * @param {Object} e A wrapper over the original event\n   * @param  {Object} data The Data Object\n   */\n  _mouseEvtHandler (e, data) {\n    var chart = this,\n      mouseTracker = data.mouseTracker,\n      datasets = chart.config.datasetOrder || chart.getDatasets(),\n      coordinate = getMouseCoordinate(chart.getFromEnv('chart-container'), e.originalEvent, chart),\n      dataset,\n      hoveredInfo,\n      pointFound = false,\n      i = datasets.length,\n      j,\n      l,\n      derivedEvensInfo,\n      _lastDatasetIndex = mouseTracker._lastDatasetIndex,\n      _lastPointIndex = mouseTracker._lastPointIndex,\n      dragStart,\n      eventType;\n\n    (_lastPointIndex !== UNDEF) && datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex].components.data[_lastPointIndex] &&\n        (dragStart = datasets[_lastDatasetIndex].components.data[_lastPointIndex].config.dragStart);\n    if (!dragStart) {\n    // @todo we have to implement this for charts with more than one canvas like candle stick\n      while (i-- && !pointFound) {\n        dataset = datasets[i];\n        if (dataset && dataset.getState('visible')) {\n          hoveredInfo = dataset._getHoveredPlot && dataset._getHoveredPlot(coordinate.chartX, coordinate.chartY);\n          if (hoveredInfo && hoveredInfo.hovered) {\n            pointFound = true;\n            hoveredInfo.datasetIndex = i;\n            derivedEvensInfo = mouseTracker.getMouseEvents(e, hoveredInfo.datasetIndex,\n              hoveredInfo.pointIndex);\n          }\n        }\n      }\n    }\n\n    // for drag event\n    if (dragStart && _lastDatasetIndex !== UNDEF) {\n      eventType = (e.type === MOUSEOUT) ? MOUSEMOVE : e.type;\n      datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex]._firePlotEvent &&\n              datasets[_lastDatasetIndex]._firePlotEvent(eventType, _lastPointIndex, e);\n    }\n    // @todo instead of sending event names, create a event object of that type and send it\n    // fire out on last hovered plot\n    if (!dragStart && (!pointFound || (derivedEvensInfo && derivedEvensInfo.fireOut)) &&\n                _lastDatasetIndex !== UNDEF) {\n      if (datasets[_lastDatasetIndex] && datasets[_lastDatasetIndex]._firePlotEvent) {\n        // when mouseout is fired and there aren't any events that need to be fired over the current plot,\n        // call mouseouthamndler through settimeout.\n        if (derivedEvensInfo && !derivedEvensInfo.events.length) {\n          mouseTracker.mouseoutTimer = setTimeout(function () {\n            chart.mouseoutHandler(e, _lastDatasetIndex, _lastPointIndex);\n          }, 20);\n        } else {\n          chart.mouseoutHandler(e, _lastDatasetIndex, _lastPointIndex);\n          clearTimeout(mouseTracker.mouseoutTimer);\n        }\n      }\n    }\n    // fire remaining events\n    if (pointFound) {\n      l = derivedEvensInfo.events && derivedEvensInfo.events.length;\n      // Update only when events for current plot are present.\n      // Reason: When cursor is present in territory of line/area plot but not directly over it, then\n      // the fireOut of current plot was happening instead of the actual last plot.\n      if (l) {\n      // store the index of the hovered DS and plot\n        mouseTracker._lastDatasetIndex = hoveredInfo.datasetIndex;\n        _lastPointIndex = mouseTracker._lastPointIndex = hoveredInfo.pointIndex;\n      }\n      for (j = 0; j < l; j += 1) {\n        dataset && dataset._firePlotEvent && dataset._firePlotEvent(derivedEvensInfo.events[j],\n          _lastPointIndex, e);\n      }\n    }\n  }\n\n  /**\n   * Configure function calls the parent configure function and adds eventListener to needed children\n   * @param {Object} dataObj contains json data of the chart\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    var chart = this,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      chartConfig;\n    chartConfig = chart.config;\n    chartConfig.formAction = getValidValue(chartAttr.formaction);\n\n    if (chartAttr.submitdataasxml === ZEROSTRING && !chartAttr.formdataformat) {\n      chartAttr.formdataformat = transcoders.csv().format;\n    }\n\n    chartConfig.formDataFormat = pluck(chartAttr.formdataformat,\n      transcoders.xml().format);\n    chartConfig.formTarget = pluck(chartAttr.formtarget, '_self');\n    chartConfig.formMethod = pluck(chartAttr.formmethod, 'POST');\n    chartConfig.submitFormAsAjax = pluckNumber(chartAttr.submitformusingajax, 1);\n    chartConfig.restoreBtnTitle = pluck(\n      chartAttr.restoretext,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE restorebtntitle parsing after two releases from 3.13.0\n      chartAttr.restorebtntitle,\n      'Restore'\n    );\n    chartConfig.submitBtnTitle = pluck(\n      chartAttr.submittext,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE formbtntitle parsing after two releases from 3.13.0\n      chartAttr.formbtntitle,\n      'Submit'\n    );\n\n    // Form Button\n    chartConfig.showFormBtn = pluckNumber(\n      chartAttr.enablesubmit,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE showformbtn parsing after two releases from 3.13.0\n      chartAttr.showformbtn,\n      1\n    ) && chartConfig.formAction;\n    chartConfig.showRestoreBtn = pluckNumber(\n      chartAttr.enablerestore,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE showrestorebtn parsing after two releases from 3.13.0\n      chartAttr.showrestorebtn,\n      1\n    );\n    chartConfig.formBtnTitle = pluck(chartAttr.formbtntitle, 'Submit');\n    chartConfig.formBtnStyle = {\n      fontSize: chartConfig.style.outCanfontSize,\n      fontFamily: chartConfig.style.outCanfontFamily,\n      fontWeight: 'bold'\n    };\n    chartConfig.restoreBtnWidth = pluckNumber(chartAttr.restorebtnwidth, 0);\n    chartConfig.allowAxisChange = pluckNumber(chartAttr.allowaxischange, 1);\n    if (chartAttr.toolbary || chartAttr.toolbarx) {\n      chartConfig.spaceHardCoded = true;\n    } else {\n      delete chartConfig.spaceHardCoded;\n    }\n    chartConfig.drawTrendRegion = pluckNumber(chartAttr.drawcrossline, 0);\n  }\n\n  /**\n   * Function to store the initial axis value\n   * @param {Number} min is minimum data limit\n   * @param {Number} max is maximum data limit\n   */\n  _storeIntialLimit (min, max) {\n    this.config.axisInitialLimit = { min, max };\n  }\n\n  /**\n   * Over-writing mscartesian createToolBoxMenu function\n   */\n  attachMenuButtons () {\n    super.attachMenuButtons();\n    this.addConfigureOptions();\n  }\n  /**\n   * Function for adding menu otions to be shown in the drop-down menu\n   */\n  addConfigureOptions () {\n    var chart = this,\n      toolbar = chart.getFromEnv('toolbar'),\n      hamburgerMenu = toolbar.getChild(`hamburgerMenu-${toolbar.getId()}-${chart.getId()}-0`), // eslint-disable-line good-practices/no-single-usage-variable\n      chartConf = chart.config,\n      restore,\n      submit,\n      configureTools = [\n        {\n          name: 'Increase Upper Limit',\n          handler: function () {\n            var axisRange = chart.getChildren('yAxis')[0].getLimit();\n            chart.changeUpperLimits(axisRange.max + axisRange.tickInterval);\n          },\n          action: 'click'\n        },\n        {\n          name: 'Increase Lower Limit',\n          handler: function () {\n            var axisRange = chart.getChildren('yAxis')[0].getLimit();\n            chart.changeLowerLimits(axisRange.min + axisRange.tickInterval);\n          },\n          action: 'click'\n        },\n        {\n          name: 'Decrease Upper Limit',\n          handler: function () {\n            var axisRange = chart.getChildren('yAxis')[0].getLimit();\n            chart.changeUpperLimits(axisRange.max - axisRange.tickInterval);\n          },\n          action: 'click'\n        },\n        {\n          name: 'Decrease Lower Limit',\n          handler: function () {\n            var axisRange = chart.getChildren('yAxis')[0].getLimit();\n            chart.changeLowerLimits(axisRange.min - axisRange.tickInterval);\n          },\n          action: 'click'\n        }\n      ];\n\n    if (chartConf.showFormBtn) {\n      submit = {\n        name: chartConf.submitBtnTitle,\n        handler: function () {\n          submitData.call(chart);\n        },\n        action: 'click'\n      };\n      configureTools.push(submit);\n    }\n\n    if (chartConf.showRestoreBtn) {\n      restore = {\n        name: chartConf.restoreBtnTitle,\n        handler: function () {\n          chart.restoreData();\n        },\n        action: 'click'\n      };\n      configureTools.push(restore);\n    }\n\n    if (chartConf.allowAxisChange) {\n      hamburgerMenu.appendInMenu(configureTools);\n    }\n  }\n\n  /**\n   * Function to restore all the data to the original json Data\n   */\n  restoreData () {\n    var chart = this,\n      yAxis = chart.getChildren('yAxis')[0],\n      chartAttr = chart.getFromEnv('chart-attrib'),\n      axisInitialLimit = chart.config.axisInitialLimit;\n    // eslint-disable-next-line good-practices/no-function-dependency\n    chart.iterateComponents((child) => {\n      let data;\n      // eslint-disable-next-line good-practices/no-single-usage-variable\n      if ((data = child.getChildren('dataset'))) {\n        data.forEach(function (dataset) {\n          dataset.restore();\n        });\n      }\n    });\n    yAxis.resetStoredLimits();\n    yAxis.setAxisConfig({\n      axisMaxValue: chartAttr.yaxismaxvalue,\n      axisMinValue: chartAttr.yaxisminvalue\n    });\n    yAxis.setDataLimit(axisInitialLimit.max, axisInitialLimit.min);\n    chart.fireChartInstanceEvent('dataRestored', {});\n    chart._manageInteractiveSpace();\n  }\n\n  /**\n   * Function to change the lowerLimit of the axis using the drop down menu item\n   * @param {number} lowerLimit The limit to which lower limit of the axis has to be extended\n   * @return {boolean} if axis limit is changed\n   */\n  changeLowerLimits (lowerLimit) {\n    var chart = this,\n      yAxis = chart.getChildren('yAxis')[0],\n      axisRange = yAxis.getLimit(),\n      min = axisRange.min,\n      config = chart.config,\n      minValue = safeMin([config.yMin, yAxis.getTrendLineLimits()[0]]), // eslint-disable-line good-practices/no-single-usage-variable\n      limitchanged = false,\n      max = axisRange.max;\n    chart.getFromEnv('animationManager').setAnimationState('update');\n    if ((lowerLimit !== UNDEF) && lowerLimit < minValue && lowerLimit !== axisRange.min && config.allowAxisChange) {\n      min = lowerLimit;\n      limitchanged = true;\n    }\n\n    if (limitchanged) {\n      yAxis.resetStoredLimits();\n      yAxis.setAxisConfig({\n        axisMaxValue: max,\n        axisMinValue: min,\n        showLowerLimit: true\n      });\n      yAxis.setDataLimit(max, min);\n      chart._manageInteractiveSpace();\n    }\n    return limitchanged;\n  }\n\n  /**\n   * Function to change the upperLimit of the axis using the drop down menu item\n   * @param {number} upperLimit The limit to which upper limit of the axis has to be extended\n   * @return {boolean} if axis limit is changed\n   */\n  changeUpperLimits (upperLimit) {\n    var chart = this,\n      // components = chart.components,\n      yAxis = chart.getChildren('yAxis')[0],\n      axisRange = yAxis.getLimit(),\n      min = axisRange.min,\n      config = chart.config,\n      maxValue = safeMax([config.yMax, yAxis.getTrendLineLimits()[1]]), // eslint-disable-line good-practices/no-single-usage-variable\n      limitchanged = false,\n      max;\n\n    chart.getFromEnv('animationManager').setAnimationState('update');\n\n    if ((upperLimit !== UNDEF) && upperLimit > maxValue && upperLimit !== axisRange.max && config.allowAxisChange) {\n      max = upperLimit;\n      limitchanged = true;\n    }\n\n    if (limitchanged) {\n      yAxis.resetStoredLimits();\n      yAxis.setAxisConfig({\n        axisMaxValue: max,\n        axisMinValue: min,\n        showUpperLimit: true\n      });\n      yAxis.setDataLimit(max, min);\n      chart._manageInteractiveSpace();\n    }\n    return limitchanged;\n  }\n\n  /**\n   * Function to get the jsonData\n   * @return {Object} the jsonData\n   */\n  getJSONData () {\n    var chart = this,\n      canvas = chart.getChildren('canvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      vCanvas = canvas.getChildren('vCanvas')[0], // eslint-disable-line good-practices/no-single-usage-variable\n      rawObj = chart.getFromEnv('dataSource'), // eslint-disable-line good-practices/no-single-usage-variable\n      groupManager,\n      datasetsArr = [],\n      dataset,\n      datasets,\n      dataObj,\n      i,\n      len,\n      jsonObj;\n\n    vCanvas.iterateComponents(component => {\n      if (component.getType() === 'group') {\n        groupManager = component;\n      }\n    });\n\n    if (groupManager) {\n      datasetsArr = groupManager.getJSONData && groupManager.getJSONData();\n    } else {\n      datasets = chart.getDatasets();\n      len = datasets.length;\n      for (i = 0; i < len; i++) {\n        dataset = datasets[i];\n        dataObj = {\n          'seriesname': dataset.config.seriesname,\n          'data': dataset.getJSONData().data\n        };\n        datasetsArr.push(dataObj);\n      }\n    }\n\n    jsonObj = extend2({}, rawObj);\n    jsonObj.dataset = datasetsArr;\n    return jsonObj;\n  }\n}\nDragBase.prototype._manageInteractiveSpace = _manageInteractiveSpace;\nexport default DragBase;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Ajax from '@fusioncharts/core/src/ajax';\nimport { getDepsByType } from '@fusioncharts/core/src/dependency-manager';\nimport { xssEncode } from '@fusioncharts/core/src/lib';\n\nlet UNDEF,\n  transcoders = getDepsByType('transcoder');\n\n/**\n * Call back function when submit button is pressed.\n */\nfunction submitData () {\n  var chart = this,\n    // iapi = chart.apiInstance,\n    ajaxObj = new Ajax(),\n    chartConf = chart.config,\n    json = transcoders.json(),\n    csv = (transcoders.csv && transcoders.csv()) || 'csv',\n    xml = transcoders.xml(),\n    url = chartConf.formAction,\n    chartInstance = chart.getFromEnv('chartInstance'),\n    requestType,\n    data,\n    paramObj,\n    tempSpan,\n    formEle;\n\n  if (chartConf.formDataFormat === json.format) {\n    requestType = json.format;\n    if (chart.getJSONData) {\n      data = JSON.stringify(chart.getJSONData());\n    }\n    if (chart.getCollatedData) {\n      data = JSON.stringify(chart.getCollatedData());\n    }\n  } else if (chartConf.formDataFormat && chartConf.formDataFormat === csv.format) {\n    requestType = csv.format;\n    data = chart.getCSVString && chart.getCSVString();\n    if (data === UNDEF || data === '') {\n      if (chart.getJSONData) {\n        data = csv.fromJSON(chart.getJSONData()).data;\n      }\n      if (chart.getCollatedData) {\n        data = csv.fromJSON(chart.getCollatedData()).data;\n      }\n    }\n  } else {\n    requestType = xml.format;\n    if (chart.getCollatedData) {\n      data = xml.fromJSON(chart.getCollatedData()).data;\n    }\n    if (chart.getJSONData) {\n      data = xml.fromJSON(chart.getJSONData()).data;\n    }\n  }\n\n  // cancel data submit function added in event options\n  /**\n    * For interative charts like `Select Scatter`, `DragNode`, `Dragable Column2D ` and etc., data\n    * points value can be selected for `Scatter Chart` and values can be changed for dragable charts by\n    * clicking and dragging the data points whose data point values can be sent to an URL by ajax POST.\n    * This is the first event raised when `Submit` button is clicked where the current chart data is\n    * about to be sent to the set URL.\n    *\n    * @event FusionCharts#beforeDataSubmit\n    * @group chart-powercharts\n    *\n    * @param {string} data - Contains the XML string with complete chart data at it's current state.\n    *\n    */\n  chart.fireChartInstanceEvent('beforeDataSubmit', {\n    data: data\n  }, UNDEF, function () {\n    // After the collation is done, we have to submit the data using\n    // ajax or form submit method.\n    if (!chartConf.submitFormAsAjax) {\n      // Create a hidden form with data inside it.\n      tempSpan = window.document.createElement('span');\n      tempSpan.innerHTML = '<form style=\"display:none\" action=\"' +\n        url + '\" method=\"' + chartConf.formMethod + '\" target=\"' + chartConf.formTarget +\n        '\"> <input type=\"hidden\" name=\"strXML\" value=\"' +\n        xssEncode(data) + '\"><input type=\"hidden\" name=\"dataFormat\" value=\"' +\n        requestType.toUpperCase() + '\" /></form>';\n\n      formEle = tempSpan.removeChild(tempSpan.firstChild);\n\n      // Append the form to body and then submit it.\n      window.document.body.appendChild(formEle);\n      formEle.submit && formEle.submit();\n      // cleanup\n      formEle.parentNode.removeChild(formEle);\n      tempSpan = formEle = null;\n    } else {\n      // eslint-disable-next-line\n      ajaxObj.onError = function (response, wrapper, ajaxData, url) {\n      /**\n        * For interative charts like `Select Scatter`, `DragNode`, `Dragable Column2D ` and etc.,\n        * data points value can be selected for `Scatter Chart` and values can be changed for\n        * dragable charts by clicking and dragging the data points whose data point values can be\n        * sent to an URL by ajax POST. This event is raised if there is an ajax error in sending\n        * the chart XML data.\n        *\n        * @event FusionCharts#dataSubmitError\n        * @group chart-powercharts\n        *\n        * @param {string} data - Contains the XML string with complete chart data.\n        * @param {number} httpStatus - Tells the status code of the ajax POST request\n        * @param {string} statusText - Contains the ajax error message.\n        * @param {string} url - URL to which the data is sent as ajax POST request.\n        * @param {object} xhrObject - XMLHttpRequest object which takes care of sending the XML\n        * chart data. In case of error, this object won't be defined.\n        */\n        chart.fireChartInstanceEvent('dataSubmitError', {\n          xhrObject: wrapper.xmlhttp,\n          url: url,\n          statusText: response,\n          httpStatus: (wrapper.xmlhttp && wrapper.xmlhttp.status)\n            ? wrapper.xmlhttp.status : -1,\n          data: data\n        }, [chartInstance.id, response, wrapper.xmlhttp && wrapper.xmlhttp.status]);\n      };\n      // eslint-disable-next-line\n      ajaxObj.onSuccess = function (response, wrapper, ajaxData, url) {\n      /**\n        * For interative charts like `Select Scatter`, `DragNode`, `Dragable Column2D ` and etc.,\n        * data points value can be selected for `Scatter Chart` and values can be changed for\n        * dragable charts by clicking and dragging the data points whose data point values can be\n        * sent to an URL by ajax POST. This event is raised when the ajax POST request is\n        * successfully completed.\n        *\n        * @event FusionCharts#dataSubmitted\n        * @group chart-powercharts\n        *\n        * @param {string} data - Contains the XML string with complete chart data.\n        * @param {string} reponse - Contains the reponse returned by the web server to which the\n        * HTTP POST request was submitted.\n        * @param {string} url - URL to which the data is sent as HTTP POST request.\n        * @param {object} xhrObject - XMLHttpRequest object which takes care of sending the XML\n        * chart data\n        */\n        chart.fireChartInstanceEvent('dataSubmitted', {\n          xhrObject: ajaxObj,\n          response: response,\n          url: url,\n          data: data\n        }, [chartInstance.id, response]);\n      };\n\n      paramObj = {};\n      paramObj['str' + requestType.toUpperCase()] = data;\n\n      if (ajaxObj.open) {\n        ajaxObj.abort();\n      }\n      ajaxObj.post(url, paramObj);\n    }\n  }, function () {\n    /**\n      * For interative charts like `Select Scatter`, `DragNode`, `Dragable Column2D ` and etc.,\n      * data points value can be selected for `Scatter Chart` and values can be changed for\n      * dragable charts by clicking and dragging the data points whose data point values can be\n      * sent to an URL by ajax POST. This event is raised when `preventDefault()` method is called\n      * from the `eventObject` of FusionCharts#beforeDataSubmit event.\n      *\n      * @event FusionCharts#dataSubmitCancelled\n      * @group chart-powercharts\n      *\n      * @param {string} data - Contains the XML string with complete chart data.\n      * @param {number} httpStatus - Tells the status code of the ajax POST request\n      * @param {string} statusText - Contains the ajax error message.\n      * @param {string} url - URL to which the data is sent as ajax POST request.\n      * @param {object} xhrObject - XMLHttpRequest object which takes care of sending the XML\n      * chart data. In case of error, this object won't be defined.\n      * @example\n      * FusionCharts.addEventListener('beforeDataSubmit', function(eventObject, parameterObject) {\n      *  eventObject.preventDefault();\n      * }\n      */\n    chart.fireChartInstanceEvent('dataSubmitCancelled', {\n      data: data\n    });\n  });\n}\n\nexport { submitData };\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport ColumnDataset from '@fusioncharts/charts/src/dataset/column';\nimport { hasSVG, getMouseCoordinate, pluck, pluckNumber, getValidValue, parseUnsafeString,\n  mathAbs, preDefStr, parseTooltext, snapPoint } from '@fusioncharts/core/src/lib';\nimport dragColumnAnimation from './index.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\n\nlet SETROLLOVERATTR = preDefStr.setRolloverAttrStr,\n  SETROLLOUTATTR = preDefStr.setRolloutAttrStr,\n  ROLLOUT = 'DataPlotRollOut',\n  ROLLOVER = 'DataPlotRollOver',\n  MOUSEOVER = 'mouseOver',\n  MOUSEOUT = 'mouseOut',\n  DEFAULT = 'default',\n  DATAPLOTCLICK = preDefStr.DATAPLOTCLICK,\n  dragMouseAttr = (hasSVG && 'ns-resize') || 'n-resize',\n  _getJSONData,\n  _restore,\n  UNDEF,\n  updateDataValue = function (event, chart) {\n    let element = this,\n      yAxis = chart.getChildren('yAxis')[0],\n      container = chart.getFromEnv('chart-container'),\n      eventArgs = element.data('eventArgs'),\n      mouseCoordinate;\n\n    mouseCoordinate = getMouseCoordinate(container, event, chart);\n    eventArgs.value = yAxis.getValue(mouseCoordinate.chartY);\n\n    element.data('eventArgs', eventArgs);\n  };\naddDep({\n  name: 'dragColumnAnimation',\n  type: 'animationRule',\n  extension: dragColumnAnimation\n});\n\n/**\n * dataset class of dragcolumn inheriting from column class\n */\nclass DragColumnDataset extends ColumnDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragColumn';\n  }\n  /**\n    * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n    * This function is called once from the init() function of the Column class.\n    * @param  {Object} datasetJSON JSON for dataset configurations\n    */\n  configureAttributes (datasetJSON) {\n    var dataset = this,\n      conf = dataset.config,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      JSONData = conf.JSONData;\n\n    conf.allowDrag = pluckNumber(JSONData.allowdrag, 1);\n    conf.allowNegDrag = pluckNumber(JSONData.allownegativedrag, 1);\n    conf.allowAxisChange = pluckNumber(chartAttr.allowaxischange, 1);\n    conf.snapToDivOnly = pluckNumber(chartAttr.snaptodivonly, 0);\n    conf.snapToDiv = conf.snapToDivOnly ? 1 : pluckNumber(chartAttr.snaptodiv, 1);\n    conf.doNotSnap = pluckNumber(chartAttr.donotsnap, 0);\n    conf.snapToDivRelaxation = pluckNumber(chartAttr.snaptodivrelaxation, 10);\n    if (conf.doNotSnap) {\n      conf.snapToDiv = conf.snapToDivOnly = 0;\n    }\n    super.configureAttributes(datasetJSON);\n  }\n  /**\n   * method to configure a particular data plot object\n   * @param {number} i index of the data object to be configured\n   * @param {Object} setData particular plot information in of i'th index in input json\n   */\n  _plotConfigure (i, setData) {\n    let conf = this.config,\n      dataStore = this.components.data,\n      dataObj,\n      config;\n    super._plotConfigure(i, setData);\n    dataObj = dataStore[i];\n    config = dataObj.config;\n    config.allowDrag = pluckNumber(setData.allowdrag, conf.allowDrag);\n    config.allowNegDrag = pluckNumber(setData.allownegativedrag, conf.allowNegDrag);\n  }\n\n  /**\n  * Function called when drag is triggered over the datasets\n  * @param {String} action dragstart/dragmove/dragend action\n  * @param {*} oriEvent The original mouse event\n  * @param {*} index the index of the data over which drag is triggered\n  * @param {*} coordinateData the mouse-coordinate wrt to the chart container\n  */\n  drag (action, oriEvent, index, coordinateData) {\n    var dataset = this,\n      coordinate = coordinateData,\n      datasetConf = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = chart.config,\n      canvasTop = chartConfig.canvasTop,\n      canvasBottom = chartConfig.canvasBottom,\n      setElement,\n      config,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      NumberFormatter = dataset.getFromEnv('number-formatter'),\n      dataStore = dataset.components.data,\n      yActual,\n      value,\n      formattedVal,\n      allowNegDrag,\n      yPos,\n      angle,\n      height,\n      rolloverdata,\n      lowerDragBoundary,\n      chartY,\n      fill,\n      rolloutedata,\n      canvas = dataset.getFromEnv('paper').canvas,\n      style = canvas.style,\n      yAxis = dataset.getFromEnv('yAxis'),\n      yBasePos = yAxis.yBasePos,\n      plotIndex,\n      eventArgs,\n      eventArgsArr,\n      yaxisName = chartConfig.yaxisname,\n      xaxisName = chartConfig.xaxisname,\n      parserConfig = {\n        xaxisName,\n        yaxisName\n      },\n      ticks = yAxis.getTicks(),\n      data,\n      tolerance = chartConfig.dragTolerance + 1,\n      setTooltext,\n      toolText,\n      allowDrag,\n      pointerMouseAttr = DEFAULT,\n      macroIndices = [1, 2, 3, 4, 5, 6, 7],\n      JSONData = datasetConf.JSONData,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      useplotgradientcolor = chartConfig.useplotgradientcolor,\n      useroundedges = chartConfig.useroundedges,\n      chartContainer = dataset.getFromEnv('chart-container'),\n      snapToDivRelaxation = mathAbs(yAxis.getValue(yAxis.getPixel(0) - datasetConf.snapToDivRelaxation)),\n      snapPixel = datasetConf.snapToDivOnly\n        ? (mathAbs(ticks[1] - ticks[0]) * 0.5) : snapToDivRelaxation;\n\n    coordinate = coordinate || getMouseCoordinate(chartContainer, oriEvent, chart);\n\n    switch (action) {\n      case 'dragstart':\n        data = dataStore[index];\n        config = data.config;\n        setElement = data.graphics.element;\n        yPos = data._yPos;\n        height = data._height;\n        yActual = (config.setValue < 0) ? (yPos + height) : yPos;\n        allowDrag = config.allowDrag;\n        chartY = coordinate.chartY;\n        if (allowDrag && chartY >= yActual - tolerance &&\n          chartY <= yActual + tolerance) {\n          // set drag flag\n          config.dragStart = true;\n          config._pointerDy = 0;\n          config._dragStartY = chartY;\n          // difference on actualY and chartY\n          config._dragBuffer = yActual - chartY;\n\n          data.startValue = config.setValue;\n          data.name = datasetConf.seriesname;\n          data.datasetIndex = datasetConf.index;\n          data.dragged = true;\n        } else {\n          config.dragStart = false;\n        }\n        break;\n\n      case 'dragmove':\n        data = dataStore[index];\n        config = data.config;\n        if (config.dragStart) {\n          setElement = data.graphics.element;\n          plotIndex = config.plotIndex;\n          allowNegDrag = config.allowNegDrag;\n          lowerDragBoundary = allowNegDrag ? canvasBottom : yBasePos;\n          chartY = coordinate.chartY;\n          config._rollOverResponseSetterFire = false;\n          style.cursor = dragMouseAttr;\n          // counter on drag move\n          config._pointerDy++;\n          // calculate chartY with _dragBuffer\n          chartY += config._dragBuffer;\n          // update chartY on canvas edge crossing\n          if (chartY < canvasTop) {\n            chartY = canvasTop;\n          } else if (chartY > lowerDragBoundary) {\n            chartY = lowerDragBoundary;\n          }\n          // calculate yPos\n          yPos = yBasePos < chartY ? yBasePos : chartY;\n          // calculate height\n          height = mathAbs(yBasePos - chartY);\n          data._yPos = yPos;\n          data._height = height;\n          yActual = (yPos >= yBasePos) ? (yPos + height) : yPos;\n          config._y = value = config.setValue = yAxis.getValue(yActual);\n          formattedVal = NumberFormatter.dataLabels(value);\n          config.toolTipValue = formattedVal;\n          config.displayValue = pluck(config.setDisplayValue, formattedVal);\n          if (useplotgradientcolor && !useroundedges) {\n            config.colorArr[0].FCcolor.angle = angle = yPos < yBasePos ? 90 : 270;\n          }\n\n          setElement.attr({\n            y: data._yPos,\n            height: data._height\n          });\n\n          dataset.parseLabelAttributes(data);\n          dataset.drawLabel(plotIndex, plotIndex + 1);\n          data.graphics.element = setElement;\n          toolTipController.hide(datasetConf.currentToolTip);\n\n          // fire dataplotDragStart event\n          if (config._pointerDy === 1) {\n            eventArgs = {\n              index: index,\n              dataIndex: index,\n              datasetIndex: data.datasetIndex,\n              startValue: data.startValue,\n              datasetName: data.name,\n              color: config.originalPlotColor,\n              gradientColor: datasetConf.plotgradientcolor,\n              alpha: config.plotFillAlpha,\n              borderColor: datasetConf.plotbordercolor,\n              borderAlpha: config.plotBorderAlpha,\n              borderThickness: chartConfig.plotborderthickness,\n              borderDashed: config.dashed,\n              hoverColor: config.hoverColor,\n              hoverAlpha: config.hoverAlpha,\n              borderHoverColor: config.hoverBorderColor,\n              borderHoverAlpha: config.hoverBorderAlpha\n            };\n            chart.fireChartInstanceEvent('dataplotDragStart', eventArgs);\n          }\n        }\n        break;\n      case 'dragend':\n        let plotHeight;\n        data = dataStore[index];\n        config = data.config;\n        plotHeight = data._height;\n        if (config.dragStart) {\n          yPos = data._yPos;\n          setElement = data.graphics.element;\n          setTooltext = getValidValue(parseUnsafeString(pluck(data.tooltext,\n            JSONData.plottooltext, chartAttr.plottooltext), false));\n          chartY = coordinate.chartY;\n          dataset.setMaxMin(data);\n          // chart._setDataLimits();\n          if (config.givenPlotShowValue === 0) {\n            config.showValue = 0;\n          } else if (config.givenPlotShowValue === 1) {\n            config.showValue = 1;\n          } else if (config.givenPlotShowValue !== 1 && datasetConf.showValues) {\n            if (Math.sqrt(plotHeight * plotHeight) < config.minplotheightforvalue) {\n              config.showValue = 0;\n            } else {\n              config.showValue = 1;\n            }\n          }\n          if (datasetConf.snapToDiv || datasetConf.snapToDivOnly) {\n            config.setValue = snapPoint({ snapPixel, datasetConf }, ticks, data);\n            chartY = yAxis.getPixel(config.setValue);\n            yPos = yBasePos < chartY ? yBasePos : chartY;\n            // calculate height\n            height = mathAbs(yBasePos - chartY);\n            data._yPos = yPos;\n            data._height = height;\n            setElement.attr({\n              y: yPos,\n              height: height\n            });\n            formattedVal = NumberFormatter.dataLabels(config.setValue);\n            config.toolTipValue = formattedVal;\n            config.displayValue = pluck(config.setDisplayValue, formattedVal);\n            dataset.parseLabelAttributes(data);\n            dataset.drawLabel(plotIndex, plotIndex + 1);\n          }\n\n          eventArgs = {\n            index: index,\n            dataIndex: index,\n            datasetIndex: data.datasetIndex,\n            startValue: data.startValue,\n            endValue: config.setValue,\n            datasetName: data.name,\n            color: config.originalPlotColor,\n            gradientColor: datasetConf.plotgradientcolor,\n            alpha: config.plotFillAlpha,\n            borderColor: datasetConf.plotbordercolor,\n            borderAlpha: config.plotBorderAlpha,\n            borderThickness: chartConfig.plotborderthickness,\n            borderDashed: config.dashed,\n            hoverColor: config.hoverColor,\n            hoverAlpha: config.hoverAlpha,\n            borderHoverColor: config.hoverBorderColor,\n            borderHoverAlpha: config.hoverBorderAlpha,\n            id: config.id\n          };\n          eventArgsArr = [\n            chart.getFromEnv('chartInstance').id,\n            eventArgs.dataIndex,\n            eventArgs.datasetIndex,\n            eventArgs.datasetName,\n            eventArgs.startValue,\n            eventArgs.endValue\n          ];\n\n          // Update dataValue\n          updateDataValue.call(setElement, oriEvent, chart);\n          if (config._pointerDy) {\n            chart.fireChartInstanceEvent('dataplotDragEnd', eventArgs);\n\n            // Fire the ChartUpdated event\n            chart.fireChartInstanceEvent('chartupdated', eventArgs, eventArgsArr);\n          }\n          if (useplotgradientcolor && !useroundedges) {\n            angle = yPos >= yBasePos ? 90 : 270;\n            if ((rolloverdata = setElement.data(SETROLLOVERATTR)) && rolloverdata.fill) {\n              fill = rolloverdata.fill;\n              fill = fill.split('-');\n              fill[0] = angle;\n              rolloverdata.fill = fill.join('-');\n            }\n            if ((rolloutedata = setElement.data(SETROLLOUTATTR)) && rolloutedata.fill) {\n              fill = rolloutedata.fill;\n              fill = fill.split('-');\n              fill[0] = angle;\n              rolloutedata.fill = fill.join('-');\n            }\n          }\n          // difference on actualY and chartY\n          config._dragBuffer = 0;\n          // counter on drag move\n          config._pointerDy = 0;\n          if (setTooltext !== UNDEF) {\n            parserConfig.formattedValue = config.toolTipValue;\n            parserConfig.label = config.label;\n            toolText = parseTooltext(setTooltext, macroIndices,\n              parserConfig, { value: config.toolTipValue }, UNDEF, JSONData);\n            config.setTooltext = toolText;\n            setTooltext = toolText;\n            config.toolText = toolText;\n          }\n          toolText = config.finalTooltext = config.toolText !== false ? (config.toolText +\n            (setTooltext ? '' : config.toolTipValue)) : '';\n          if (!(chartY >= yActual - tolerance &&\n                  chartY <= yActual + tolerance)) {\n            style.cursor = pointerMouseAttr;\n          }\n          config.dragStart = false;\n        }\n    }\n  }\n\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType name of the event\n   * @param {number} plotIndex index of the plot where this event has been occured\n   * @param {Event} e reference of the original mouse event\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      datasetConf = dataset.config,\n      currentToolTip = datasetConf.currentToolTip,\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      drawTrendRegion = chartConfig.drawTrendRegion,\n      // chartComp = chart.components,\n      paper = dataset.getFromEnv('paper'),\n      canvas = paper.canvas,\n      style = canvas.style,\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      data = dataset.components.data[plotIndex],\n      config = data.config,\n      setElement = data.graphics.element,\n      toolText = config.finalTooltext || config.toolText,\n      // tip = lib.toolTip,\n      originalEvent = e.originalEvent,\n      pointerMouseAttr = DEFAULT,\n      tolerance,\n      coordinate = getMouseCoordinate(dataset.getFromEnv('chart-container'), originalEvent, chart),\n      chartY = coordinate.chartY,\n      yPos = data._yPos,\n      height = data._height,\n      yAxis = dataset.getFromEnv('yAxis'),\n      yBasePos = yAxis.yBasePos,\n      allowDrag = config.allowDrag,\n      yActual,\n      colTop = yPos,\n      colBottom = yPos + height;\n\n    tolerance = chartConfig.dragTolerance + 1;\n\n    yActual = (yPos >= yBasePos) ? (yPos + height) : yPos;\n    if (setElement) {\n      switch (eventType) {\n        case 'fc-mouseover' :\n          if (chartY <= colBottom - tolerance && chartY >= colTop + tolerance && !drawTrendRegion && toolText) {\n            if (currentToolTip) {\n              toolTipController.draw(originalEvent, toolText, currentToolTip);\n            } else {\n              currentToolTip = datasetConf.currentToolTip = toolTipController.draw(originalEvent, toolText);\n            }\n          }\n\n          // fire _rollOverResponseSetter if its not already fired and\n          // cursor position is on column body\n          if (!config._rollOverResponseSetterFire && chartY <= colBottom && chartY >= colTop) {\n            DragColumnDataset._rolloverResponseSetter(chart, setElement, e, this);\n            // set flag true as _rollOverResponseSetter is fired\n            config._rollOverResponseSetterFire = true;\n          }\n          break;\n\n        case 'fc-mouseout' :\n          style.cursor = pointerMouseAttr;\n          // fire _rolloutResponseSetter if _rolloverResponseSetter is fired\n          config._rollOverResponseSetterFire &&\n          DragColumnDataset._rolloutResponseSetter(chart, setElement, e, this);\n          // set flag false as _rolloutResponseSetter is fired\n          config._rollOverResponseSetterFire = false;\n          toolTipController.hide(datasetConf.currentToolTip);\n          break;\n\n        case 'fc-click' :\n          chart.plotEventHandler(setElement, e, DATAPLOTCLICK);\n          break;\n\n        case 'fc-mousemove' :\n          if (!config.dragStart) {\n            yActual = (config.setValue < 0) ? (yPos + height) : yPos;\n            if (allowDrag && chartY >= yActual - tolerance && chartY <= yActual + tolerance) {\n              style.cursor = dragMouseAttr;\n              toolTipController.hide(datasetConf.currentToolTip);\n            } else {\n              style.cursor = pointerMouseAttr;\n              if (config._rollOverResponseSetterFire && !drawTrendRegion && toolText) {\n                if (currentToolTip) {\n                  toolTipController.draw(originalEvent, toolText, currentToolTip);\n                } else {\n                  currentToolTip = datasetConf.currentToolTip = toolTipController.draw(originalEvent, toolText);\n                }\n              }\n            }\n            // fire _rollOverResponseSetter if its not already fired and\n            // cursor position is on column body\n            if (!config._rollOverResponseSetterFire && chartY <= colBottom && chartY >= colTop) {\n              DragColumnDataset._rolloverResponseSetter(chart, setElement, e);\n              config._rollOverResponseSetterFire = true;\n            } else if (config._rollOverResponseSetterFire &&\n              !(chartY <= colBottom && chartY >= colTop)) {\n              toolTipController.hide(datasetConf.currentToolTip);\n              config._rollOverResponseSetterFire = false;\n              DragColumnDataset._rolloutResponseSetter(chart, setElement, e, this);\n            }\n          }\n          break;\n      }\n    }\n  }\n\n  /**\n   * Function called as a callback when mouse pointer hovers over a graphic element\n   * @param {Object} chart The chart object\n   * @param {Object} elem The graphic element for which the function is called\n   * @param {Object} event The event against which the function is called.\n   * @param {Component} dataset - dataset component\n   */\n  static _rolloverResponseSetter (chart, elem, event, dataset) {\n    let elData = elem && elem.getData(),\n      animationManager = chart.getFromEnv('animationManager');\n    // Check whether the plot is in dragged state or not if\n    // drag then dont fire rolloverevent\n    if (elem && elData.showHoverEffect !== 0 && elData.draged !== true && elem) {\n      animationManager.setAnimationState(MOUSEOVER);\n      animationManager.setAnimation({\n        el: elem,\n        label: 'rect',\n        component: dataset,\n        attr: elem.getData().setRolloverAttr\n      });\n      chart.plotEventHandler(elem, event, ROLLOVER);\n    }\n  }\n\n  /**\n   * Function called as a callback when mouse pointer hovers out a graphic element\n   * @param {Object} chart The chart object\n   * @param {Object} elem The graphic element for which the function is called\n   * @param {Object} event The event against which the function is called.\n   * @param {Component} dataset - dataset component\n   */\n  static _rolloutResponseSetter (chart, elem, event, dataset) {\n    let elData = elem && elem.getData(),\n      animationManager = chart.getFromEnv('animationManager');\n    // Check whether the plot is in draggedstate or not if drag then dont fire rolloutevent\n    if (elem && elData.showHoverEffect !== 0 && elData.draged !== true) {\n      animationManager.setAnimationState(MOUSEOUT);\n      animationManager.setAnimation({\n        el: elem,\n        label: 'rect',\n        component: dataset,\n        attr: elem.getData().setRolloutAttr\n      });\n      chart.plotEventHandler(elem, event, ROLLOUT);\n    }\n  }\n\n  /**\n   * Fucntion to get the updated values of data when they are dragged.\n   * @return {Object} The corresponding data Array of the dataset containing the values of all the sets.\n   */\n  getJSONData () {\n    var dataset = this,\n      JSONData = dataset.config.JSONData.data,\n      dataStore = dataset.components.data,\n      dataArr = [],\n      obj = {},\n      updatedDataObj,\n      dataObj,\n      prop,\n      len,\n      i;\n\n    for (i = 0, len = JSONData.length; i < len; i++) {\n      dataObj = JSONData[i];\n      updatedDataObj = dataStore[i];\n      obj = {};\n      for (prop in dataObj) {\n        if (prop === 'value') {\n          obj[prop] = updatedDataObj.config.setValue;\n        } else {\n          obj[prop] = dataObj[prop];\n        }\n      }\n      dataArr.push(obj);\n    }\n    return {\n      data: dataArr\n    };\n  }\n\n  /**\n   * Function to restore the values of the dataset to its original\n   */\n  restore () {\n    var dataset = this;\n    dataset.setData(dataset.config.JSONData, true);\n  }\n}\n_getJSONData = DragColumnDataset.prototype.getJSONData;\n_restore = DragColumnDataset.prototype.restore;\nexport default DragColumnDataset;\nexport { _getJSONData, _restore, updateDataValue };\n","import columnAnimation from '@fusioncharts/charts/src/dataset/column/index.animation';\nexport default {\n  'initial.dataset.dragColumn': columnAnimation['initial.dataset.column']\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ColumnMultiSeriesgroup from '@fusioncharts/charts/src/dataset/groups/column-multiseries';\nimport { extend2 } from '@fusioncharts/core/src/lib';\n\n/**\n * Group for drag column, area and line charts.\n */\nclass DragColumnMultiseriesGroup extends ColumnMultiSeriesgroup {\n  /**\n  * Function to get the jsonData from the datasets\n  * @return {Object} data from the dataset\n  */\n  getJSONData () {\n    var manager = this,\n      datasets = manager.getChildren('dataset'),\n      jsonData = [],\n      dataset,\n      datasetObj,\n      rawDataset,\n      i,\n      len = datasets.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i++) {\n      dataset = datasets[i];\n      rawDataset = extend2({}, manager.getFromEnv('dataSource').dataset[i]);\n      // Here the actual data is deleted and modified data is fetched from each datasets\n      delete rawDataset.data;\n      datasetObj = dataset.getJSONData();\n      jsonData.push(extend2(rawDataset, datasetObj));\n    }\n    return jsonData;\n  }\n}\n\nexport default DragColumnMultiseriesGroup;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport LimitUpdater from '@fusioncharts/core/src/axis/limit-updater';\nexport default function (chart) {\n  let numericAxis = chart.getChildren('yAxis')[0],\n    limitUpdaterArr,\n    limitUpdater;\n  componentFactory(numericAxis, LimitUpdater, 'limitUpdater', chart.config.allowAxisChange ? 1 : 0);\n  limitUpdaterArr = numericAxis.getChildren('limitUpdater');\n  limitUpdater = limitUpdaterArr && limitUpdaterArr[0];\n  limitUpdater && limitUpdater.configure();\n}\n","import { ComponentInterface } from '../component-interface';\nimport domEvtHandler from '../dom-event';\nimport { createElement, hashify, extend2, isIE, hasSVG, rgbaToHex, hasTouch } from '../lib';\n\nconst ENTER_CODE = 13,\n  ESCAPE_CODE = 27;\n\nlet linkedAxis;\n\nfunction getCharCode (e) {\n  return (typeof e.which === 'number') ? e.which : e.keyCode;\n}\n\nfunction onMouseUp (e) {\n  var ele = e.target;\n  if (ele.justFocussed) {\n    ele.justFocussed = false;\n    if (!hasTouch) {\n      ele.select();\n    }\n  }\n}\n\nfunction doAxisUpdate (value, oldvalue, isMax) {\n  var success = false,\n    axisParent = this.config.linkedAxis.getLinkedParent();\n  // do not update if value has not changed\n  if (value === oldvalue + '') {\n    return;\n  }\n\n  if (isMax) {\n    success = axisParent.changeUpperLimits && axisParent.changeUpperLimits(Number(value));\n  } else {\n    success = axisParent.changeLowerLimits && axisParent.changeLowerLimits(Number(value));\n  }\n\n  // if (!success && showRangeError) {\n  //   chart.showMessage('Sorry! Not enough range gap to modify axis limit to ' +\n  //     (Number(value) || '0') +\n  //     '.<br />Please modify the data values to be within range.<br />&nbsp;<br />' +\n  //     '(click anywhere on the chart to close this message)', true);\n  // }\n\n  return success;\n}\n\nfunction onFocus (e) {\n  var ele = e.target,\n    styleObj = {\n      opacity: 1,\n      filter: 'alpha(opacity=100)', // IE opacity\n      color: rgbaToHex(ele.axisLabel.attr('fill'))\n    },\n    item;\n\n  for (item in styleObj) {\n    ele.style[item] = styleObj[item];\n  }\n\n  ele.value = ele.dataValue;\n\n  ele.justFocussed = true;\n  // for IE\n  ele.hasFocus = true;\n  ele.axisLabel && ele.axisLabel.hide();\n  // if (!chart.graphics.hiddenAxisLabels) {\n  //   chart.graphics.hiddenAxisLabels = [];\n  // }\n  // chart.graphics.hiddenAxisLabels.push(ele.axisLabel);\n}\n\nfunction onBlur (e) {\n  var ele = e.target,\n    newValue = ele.value,\n    oldValue = ele.oldValue,\n    isMaxLabel = ele.isMaxLabel;\n    // success = doAxisUpdate(newValue, oldValue, isMaxLabel);\n\n  doAxisUpdate.call(this, newValue, oldValue, isMaxLabel);\n  // if (success !== true) {\n  ele.style.opacity = 0;\n  ele.style.filter = 'alpha(opacity=0)';\n  // IE opacity\n  ele.axisLabel && ele.axisLabel.show();\n  // }\n\n  if (isIE) {\n    // To call the actual blur on the element in case of IE\n    document.getElementsByTagName('body')[0].focus &&\n    document.getElementsByTagName('body')[0].focus();\n  }\n\n  ele.justFocussed = false;\n  ele.hasFocus = false;\n}\n\nfunction onKeyUp (e) {\n  var ele = e.target,\n    keyCode = getCharCode(e.originalEvent),\n    newValue = ele.value,\n    oldValue = ele.oldValue,\n    isMaxLabel = ele.isMaxLabel,\n    success;\n\n  if (keyCode === ENTER_CODE) {\n    success = doAxisUpdate.call(this, newValue, oldValue, isMaxLabel);\n    if (success === false) {\n      ele.style.color = '#dd0000';\n    } else {\n      domEvtHandler.fire(ele, 'blur', e);\n    }\n  } else if (keyCode === ESCAPE_CODE) {\n    ele.value = oldValue;\n    domEvtHandler.fire(ele, 'blur', e);\n  }\n}\n\nfunction defaultHandler (inputElement) {\n  return function (e) {\n    if (inputElement.parentNode) {\n      domEvtHandler.fire(inputElement, 'blur', e);\n    }\n  };\n}\n\nfunction defaultIEHandler (inputElement) {\n  return function (e) {\n    if (e.target !== inputElement && inputElement.hasFocus) {\n      domEvtHandler.fire(inputElement, 'blur', e);\n    }\n  };\n}\n\nfunction destroyHandler (inputElement, defaultAction) {\n  domEvtHandler.unlisten(this.config.linkedAxis.getLinkedParent(), 'defaultprevented', defaultAction);\n  inputElement.parentNode.removeChild(inputElement);\n}\n\nfunction destroyIEHandler (inputElement, defaultAction) {\n  return function () {\n    domEvtHandler.unlisten(linkedAxis.getLinkedParent().getLinkedItem('container'), 'mousedown', defaultAction);\n    inputElement.parentNode.removeChild(inputElement);\n  };\n}\n\nclass LimitUpdater extends ComponentInterface {\n  configureAttributes () {\n    this.config.linkedAxis = this.getLinkedParent();\n    linkedAxis = this.config.linkedAxis;\n    this.config.onKeyUp = onKeyUp.bind(this);\n    this.config.onBlur = onBlur.bind(this);\n    this.config.onFocus = onFocus.bind(this);\n    this.config.onMouseUp = onMouseUp.bind(this);\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'helper';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'limitUpdater';\n  }\n\n  draw () {\n    // draw this component;\n    let limitUpdater = this,\n      chartConf = limitUpdater.getFromEnv('chartConfig'),\n      axis = limitUpdater.config.linkedAxis,\n      extremeLabels = axis.getAxisConfig('extremeLabels'),\n      axisLimits = axis.getLimit(),\n      chartContainer = limitUpdater.getFromEnv('chart-container'),\n      chartCanvasStyle = limitUpdater.getFromEnv('style').inCanvasStyle,\n      inputStyle = extend2({\n        outline: 'none', // prevent chrome outlining\n        '-webkit-appearance': 'none', // disable ios background\n        filter: 'alpha(opacity=0)', // IE opacity\n        position: 'absolute',\n        background: 'transparent',\n        border: '1px solid #cccccc',\n        textAlign: 'right',\n        top: 0,\n        left: 0,\n        width: 50,\n        zIndex: 20,\n        opacity: 0,\n        borderRadius: 0,\n        display: 'block'\n      }, chartCanvasStyle),\n      labelObj = {\n        max: {\n          element: extremeLabels.lastLabel.graphic,\n          value: axisLimits.max\n        },\n        min: {\n          element: extremeLabels.firstLabel.graphic,\n          value: axisLimits.min\n        }\n      },\n      inputElement,\n      inputElementName,\n      labelElement,\n      key,\n      styleKey,\n      labelBox,\n      isMaxLabel,\n      labelValue,\n      closedDefaultHandler,\n      inputWidth,\n      inputLeft,\n      closedDefaultIEHandler;\n\n    inputStyle.color = hashify(inputStyle.color);\n    inputStyle.fontSize = `${inputStyle.fontSize}px`;\n\n    for (key in labelObj) {\n      if (labelObj.hasOwnProperty(key)) {\n        labelElement = labelObj[key].element;\n        labelBox = labelElement && labelElement.getBBox();\n        labelValue = labelObj[key].value;\n        isMaxLabel = (key === 'max');\n\n        inputElementName = `${key}Input`;\n        inputElement = limitUpdater.getGraphicalElement(inputElementName);\n        if (!(labelBox && labelElement)) {\n          if (inputElement) {\n            inputElement.style.display = 'none';\n          }\n          continue;\n        }\n        if (!inputElement) {\n          inputElement = limitUpdater.addGraphicalElement(inputElementName, createElement('input', {\n            type: 'text',\n            value: labelValue,\n            id: `fc-updater-${key}`\n          }, chartContainer));\n        }\n\n        // Add events to make the textboxes visible on focus and hide when not.\n        domEvtHandler.listen(inputElement, ['focus', 'mouseup', 'blur', 'keyup'], [this.config.onFocus, this.config.onMouseUp, this.config.onBlur, this.config.onKeyUp]);\n\n        if (hasSVG) {\n          domEvtHandler.listen(chartContainer, 'defaultprevented', closedDefaultHandler = defaultHandler(inputElement));\n          // cleanup handlers\n          domEvtHandler.listen(chartContainer, 'destroy', destroyHandler.bind(this, inputElement, closedDefaultHandler));\n        } else {\n          domEvtHandler.listen(chartContainer, 'mousedown', closedDefaultIEHandler = defaultIEHandler(inputElement));\n          // cleanup handlers\n          domEvtHandler.listen(chartContainer, 'destroy', destroyIEHandler(inputElement, closedDefaultIEHandler));\n        }\n\n        inputWidth = labelBox.x + labelBox.width - chartConf.marginLeft;\n        inputLeft = chartConf.marginLeft;\n\n        inputStyle.top = `${labelBox.y}px`;\n        inputStyle.left = `${inputLeft}px`;\n        inputStyle.width = `${inputWidth}px`;\n\n        for (styleKey in inputStyle) {\n          if (inputStyle.hasOwnProperty(styleKey)) {\n            inputElement.style[styleKey] = inputStyle[styleKey];\n          }\n        }\n\n        inputElement.dataValue = labelValue;\n        inputElement.value = labelValue;\n        inputElement.oldValue = labelValue;\n        inputElement.name = labelValue || '';\n        inputElement.axisLabel = labelElement;\n        inputElement.isMaxLabel = isMaxLabel;\n      }\n    }\n  }\n\n  /**\n   * Generalised function for removing an entire instance of a component\n   */\n  removingDraw () {\n    let graphics = this.getGraphicalElement(),\n      key,\n      element;\n    for (key in graphics) {\n      if (graphics.hasOwnProperty(key)) {\n        element = graphics[key];\n        element && element.parentNode && element.parentNode.removeChild(element);\n        delete graphics[key];\n      }\n    }\n  }\n}\n\nexport default LimitUpdater;\n","import DragTracker from '../chart/_internal/drag-tracker';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\nexport default function (chart) {\n  componentFactory(chart, DragTracker, 'dragTracker');\n  chart.getChildren('dragTracker')[0].addEvents();\n}\n","import { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { getMouseCoordinate } from '@fusioncharts/core/src/lib';\n\nlet dragstart = function (dragTracker) {\n    return function (oriEvent) {\n      let chart = dragTracker.getFromEnv('chart'),\n        config = dragTracker.config,\n        datasets = chart.config.datasetOrder || chart.getDatasets(),\n        coordinate = getMouseCoordinate(chart.getFromEnv('chart-container'), oriEvent, chart),\n        pointFound,\n        hoveredInfo,\n        i = datasets.length,\n        dataset;\n\n      while (i-- && !pointFound) {\n        dataset = datasets[i];\n        if (dataset && dataset.getState('visible')) {\n          hoveredInfo = dataset._getHoveredPlot && dataset._getHoveredPlot(coordinate.chartX, coordinate.chartY);\n          if (hoveredInfo && hoveredInfo.hovered) {\n            pointFound = true;\n            config.dragStart = true;\n            config.hoveredInfo = hoveredInfo;\n            config.hoveredDS = dataset;\n            dataset.drag('dragstart', oriEvent, hoveredInfo.pointIndex, coordinate);\n          }\n        }\n      }\n    };\n  },\n  dragmove = function (dragTracker) {\n    return function (oriEvent) {\n      let config = dragTracker.config;\n      config.dragStart && config.hoveredDS.drag('dragmove', oriEvent, config.hoveredInfo.pointIndex);\n    };\n  },\n  dragend = function (dragTracker) {\n    return function (oriEvent) {\n      let config = dragTracker.config;\n      config.dragStart && config.hoveredDS.drag('dragend', oriEvent, config.hoveredInfo.pointIndex);\n      config.dragStart = false;\n    };\n  },\n  eventList = ['fc-dragstart', 'fc-dragmove', 'fc-dragend'];\n\n/**\n * This class manages the drag-interaction over draggable charts\n */\nclass DragTracker extends ComponentInterface {\n  constructor () {\n    super();\n    this.config.eventCb = {\n      'fc-dragstart': dragstart(this),\n      'fc-dragmove': dragmove(this),\n      'fc-dragend': dragend(this)\n    };\n  }\n\n  /**\n   * Function to add events on the canvas for drag\n   */\n  addEvents () {\n    var dragTracker = this,\n      allCanvas = dragTracker.getFromEnv('chart').getChildren('canvas'); // eslint-disable-line good-practices/no-single-usage-variable\n    dragTracker.removeEvents();\n    allCanvas.forEach(canvas => {\n      eventList.forEach(events => {\n        canvas.addEventListener(events, dragTracker.config.eventCb[events]);\n      });\n    });\n  }\n\n  /**\n   * Function to remove drag events on the canvas\n   */\n  removeEvents () {\n    var dragTracker = this,\n      allCanvas = dragTracker.getFromEnv('chart').getChildren('canvas'); // eslint-disable-line good-practices/no-single-usage-variable\n\n    allCanvas.forEach(canvas => {\n      eventList.forEach(events => {\n        canvas.removeEventListener(events, dragTracker.config.eventCb[events]);\n      });\n    });\n  }\n\n  /**\n   * This method is used to remove all event listeners attached by MouseTracker to the chart.\n   */\n  _dispose () {\n    this.removeEvents();\n    super._dispose();\n  }\n}\n\nexport default DragTracker;\n","import Dragline from '@fusioncharts/powercharts/src/chart/dragline';\nexport default Dragline;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport DragLineDataset from '../../dataset/dragline';\nimport DragArea from '../dragarea';\n/**\n * API class of dragcolumn inheriting from area class\n */\nclass DragLine extends DragArea {\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'DragLine';\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'DragLine';\n  }\n\n  /**\n   * Function to parse chart specific configurations. It first calls the __setDefaultConfig of areabase class.\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    var config = this.config;\n    config.isDrag = true;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n  }\n  /**\n   * Function to return the dataset liked with the current API\n   * @return {Object} The DragLineDataset class\n   */\n  getDSdef () {\n    return DragLineDataset;\n  }\n}\nexport default DragLine;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport { __firePlotEvent, configurer, _updateImage, _drag } from '../dragarea';\nimport { pluckNumber } from '@fusioncharts/core/src/lib';\nimport { _restore, _getJSONData } from '../dragcolumn';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport draglineAnimation from './index.animation';\n\naddDep({\n  name: 'dragLineAnimation',\n  type: 'animationRule',\n  extension: draglineAnimation\n});\n/**\n * dataset class of dragcolumn inheriting from column class\n */\nclass DragLineDataset extends LineDataset {\n  /**\n   * Using fireplotevent of dragarea.\n   */\n  _firePlotEvent () {\n    __firePlotEvent.apply(this, arguments);\n  }\n\n  /**\n   * Function to update image while dragging.\n   * @param {Object} dataObj The object by which the dataset is to be updated.\n   */\n  updateImage (dataObj) {\n    _updateImage.call(this, dataObj);\n  }\n\n  /**\n   * Function to manage drag over the datasets\n   */\n  drag () {\n    _drag.apply(this, arguments);\n  }\n\n  /**\n   * Calling the configureAttributes of drag area.\n   */\n  configureAttributes () {\n    configurer.apply(this, arguments);\n  }\n  /**\n   * method to configure a particular data plot object\n   * @param {number} i index of the data object to be configured\n   * @param {Object} setData particular plot information in of i'th index in input json\n   */\n  _plotConfigure (i, setData) {\n    let conf = this.config,\n      dataStore = this.components.data,\n      dataObj,\n      config;\n    super._plotConfigure(i, setData);\n    dataObj = dataStore[i];\n    config = dataObj.config;\n    config.allowDrag = pluckNumber(setData.allowdrag, conf.allowDrag);\n    config.allowNegDrag = pluckNumber(setData.allownegativedrag, conf.allowNegDrag);\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragLine';\n  }\n  /**\n   * Function to restore the values of the dataset to its original\n   */\n  restore () {\n    _restore.call(this);\n  }\n\n  /**\n   * Fucntion to get the updated values of data when they are dragged.\n   * @return {Object} The corresponding data Array of the dataset containing the values of all the sets.\n   */\n  getJSONData () {\n    return _getJSONData.call(this);\n  }\n}\nexport default DragLineDataset;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport AreaDataset from '@fusioncharts/charts/src/dataset/area';\nimport {\n  hasSVG, getMouseCoordinate, mathAbs, pluck, pluckNumber, getValidValue, parseUnsafeString,\n  parseTooltext, polyPathToPath, snapPoint\n} from '@fusioncharts/core/src/lib';\nimport { _restore, _getJSONData, updateDataValue } from '../dragcolumn';\nimport dragAreaAnimation from './index.animation';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\n\nlet SETROLLOVERATTR = 'setRolloverAttr',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  ROLLOUT = 'DataPlotRollOut',\n  ROLLOVER = 'DataPlotRollOver',\n  DRAGLINE = 'dragLine',\n  DRAGAREA = 'dragArea',\n  DATAPLOTCLICK = 'dataplotclick',\n  DEFAULT = 'default',\n  dragMouseAttr = (hasSVG && 'ns-resize') || 'n-resize',\n  mathMin = Math.min,\n  mathMax = Math.max,\n  isVML = false,\n  _updateImage,\n  _configure,\n  __firePlotEvent,\n  _drag,\n  UNDEF;\n\naddDep({\n  name: 'dragAreaAnimation',\n  type: 'animationRule',\n  extension: dragAreaAnimation\n});\n/**\n * dataset class of dragcolumn inheriting from column class\n */\nclass DragAreaDataset extends AreaDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'dragArea';\n  }\n  /**\n  * Function for parsing all the attributes and value given by the user at chart,dataset and set level.\n  * This function is called once from the init() function of the Column class.\n  * @param  {Object} datasetJSON JSON for dataset configurations\n  */\n  configureAttributes (datasetJSON) {\n    var dataset = this,\n      conf = dataset.config,\n      chartAttr = dataset.getFromEnv('chart-attrib'),\n      JSONData = conf.JSONData;\n\n    conf.allowDrag = pluckNumber(JSONData.allowdrag, 1);\n    conf.allowNegDrag = pluckNumber(JSONData.allownegativedrag, 1);\n    conf.allowAxisChange = pluckNumber(chartAttr.allowaxischange, 1);\n    conf.snapToDivOnly = pluckNumber(chartAttr.snaptodivonly, 0);\n    conf.doNotSnap = pluckNumber(chartAttr.donotsnap, 0);\n    conf.snapToDiv = pluckNumber(chartAttr.snaptodiv, 1);\n    conf.snapToDivRelaxation = pluckNumber(chartAttr.snaptodivrelaxation, 10);\n    if (conf.doNotSnap) {\n      conf.snapToDiv = conf.snapToDivOnly = 0;\n    }\n    super.configureAttributes(datasetJSON);\n  }\n  /**\n   * method to configure a particular data plot object\n   * @param {number} i index of the data object to be configured\n   * @param {Object} setData particular plot information in of i'th index in input json\n   */\n  _plotConfigure (i, setData) {\n    let conf = this.config,\n      dataObj,\n      config;\n    super._plotConfigure(i, setData);\n    dataObj = this.components.data[i]; // eslint-disable-line good-practices/no-single-usage-variable\n    config = dataObj.config;\n    config.allowDrag = pluckNumber(setData.allowdrag, conf.allowDrag);\n    config.allowNegDrag = pluckNumber(setData.allownegativedrag, conf.allowNegDrag);\n  }\n\n  /**\n   * Function to update image while dragging.\n   * @param {Object} dataObj The object by which the dataset is to be updated.\n   */\n  static updateImage (dataObj) {\n    var graphics = dataObj.graphics,\n      image = graphics.image || graphics.element,\n      config = dataObj.config,\n      anchorProps = config.anchorProps,\n      hoverEffects = config.hoverEffects,\n      imgRef = image && image.data('imgRef'),\n      scale = anchorProps.imageScale,\n      imgH = imgRef.height * scale * 0.01,\n      imgW = imgRef.width * scale * 0.01,\n      x = dataObj._xPos,\n      y = dataObj._yPos,\n      hoverScale = hoverEffects.imageHoverScale,\n      hotW = (imgRef.width * hoverScale * 0.01), // eslint-disable-line good-practices/no-single-usage-variable\n      hotH = (imgRef.height * hoverScale * 0.01), // eslint-disable-line good-practices/no-single-usage-variable\n      markerRadius = anchorProps.radius = anchorProps.isAnchorRadius // eslint-disable-line good-practices/no-single-usage-variable\n        ? anchorProps.radius : mathMin(imgW, imgH) / 2,\n      imagePadding = anchorProps.imagePadding,\n      rolloutClipRadius = markerRadius - imagePadding - anchorProps.borderThickness * 0.5,\n      rolloverClipRadius = hoverEffects.radius -\n        imagePadding - hoverEffects.anchorBorderThickness * 0.5,\n      symbol = anchorProps.symbol[1],\n      imageRollOverPath = polyPathToPath([symbol || 2, x, y, // eslint-disable-line good-practices/no-single-usage-variable\n        rolloverClipRadius > 0 ? rolloverClipRadius : 0, hoverEffects.startAngle, hoverEffects.dip]),\n      setRolloverAttr,\n      imageRolloutPath = polyPathToPath([symbol || 2, x, y, // eslint-disable-line good-practices/no-single-usage-variable\n        rolloutClipRadius > 0 ? rolloutClipRadius : 0, anchorProps.startAngle, 0]),\n      setRolloutAttr = {\n        x: x - imgRef.width * scale * 0.005,\n        y: y - imgRef.height * scale * 0.005,\n        width: imgW,\n        height: imgH,\n        alpha: 100\n      };\n\n    if (!isVML) {\n      setRolloutAttr['clip-path'] = imageRolloutPath;\n    }\n    setRolloverAttr = {\n      x: x - imgRef.width * hoverScale * 0.005,\n      y: y - imgRef.height * hoverScale * 0.005,\n      width: hotW,\n      height: hotH,\n      alpha: 100\n    };\n\n    if (!isVML) {\n      setRolloverAttr['clip-path'] = imageRollOverPath;\n    }\n    image.attr(setRolloutAttr);\n    image.data(SETROLLOVERATTR, setRolloverAttr);\n    image.data(SETROLLOUTATTR, setRolloutAttr);\n  }\n\n  /**\n  * Function called when drag is triggered over the datasets\n  * @param {String} action dragstart/dragmove/dragend action\n  * @param {*} oriEvent The original mouse event\n  * @param {*} index the index of the data over which drag is triggered\n  * @param {*} coordinateData the mouse-coordinate wrt to the chart container\n  */\n  drag (action, oriEvent, index, coordinateData) {\n    let dataset = this,\n      coordinate = coordinateData,\n      datasetConf = dataset.config,\n      datasetIndex = datasetConf.index,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = chart.config,\n      canvasTop = chartConfig.canvasTop,\n      plotItem,\n      element,\n      config,\n      dataStore = dataset.components.data,\n      value,\n      formattedVal,\n      yPos,\n      rolloverdata,\n      lowerDragBoundary,\n      chartY,\n      canvas = dataset.getFromEnv('paper').canvas, // eslint-disable-line good-practices/no-single-usage-variable\n      style = canvas.style,\n      yAxis = dataset.getFromEnv('yAxis'),\n      ticks = yAxis.getTicks(),\n      snapToDivRelaxation = mathAbs(yAxis.getValue(yAxis.getPixel(0) - datasetConf.snapToDivRelaxation)),\n      snapPixel = datasetConf.snapToDivOnly\n        ? (mathAbs(ticks[1] - ticks[0]) * 0.5) : snapToDivRelaxation,\n      plotIndex,\n      eventArgs,\n      parserConfig = {\n        xaxisName: chartConfig.xaxisname,\n        yaxisName: chartConfig.yaxisname\n      },\n      anchorProps,\n      datasetGraphics = dataset.getGraphicalElement(), // eslint-disable-line good-practices/no-single-usage-variable\n      mainLineElement = datasetGraphics.lineElement,\n      chartX,\n      tolerance = chartConfig.dragTolerance + 1,\n      setTooltext,\n      toolText,\n      allowDrag,\n      xPos,\n      rolloutdata,\n      image,\n      startIndex,\n      endIndex,\n      allowNegDrag,\n      pathArr,\n      anchorElement,\n      anchorImageUrl,\n      isHoverEnabled,\n      hoverEffects,\n      anchorStartAngle,\n      eventArgsArr,\n      hoverEnabled,\n      datasetName = dataset.getName(),\n      isDragLine = (datasetName === DRAGLINE) || (datasetName === DRAGAREA), // eslint-disable-line good-practices/no-single-usage-variable\n      pointerMouseAttr = DEFAULT,\n      macroIndices = [1, 2, 3, 4, 5, 6, 7], // eslint-disable-line good-practices/no-single-usage-variable\n      JSONData = datasetConf.JSONData,\n      chartContainer = dataset.getFromEnv('chart-container');\n\n    coordinate = coordinate || getMouseCoordinate(chartContainer, oriEvent, chart);\n\n    switch (action) {\n      case 'dragstart':\n        plotItem = dataStore[index];\n        config = plotItem.config;\n        yPos = plotItem._yPos;\n        xPos = plotItem._xPos;\n        allowDrag = config.allowDrag;\n        chartY = coordinate.chartY;\n        chartX = coordinate.chartX;\n        if (allowDrag &&\n          chartY >= yPos - tolerance && chartY <= yPos + tolerance &&\n          chartX <= xPos + tolerance && chartX >= xPos - tolerance) {\n          config.dragStart = true;\n          config._pointerDy = 0;\n          config._dragStartY = chartY;\n          config._dragBuffer = yPos - chartY;\n          plotItem.dragged = true;\n\n          plotItem.startValue = config.setValue;\n          plotItem.name = datasetConf.seriesname;\n          plotItem.datasetIndex = datasetConf.index;\n          anchorProps = config.anchorProps;\n          hoverEffects = config.hoverEffects;\n          eventArgs = {\n            index: plotIndex + 1,\n            dataIndex: plotIndex + 1,\n            datasetIndex: plotItem.datasetIndex,\n            startValue: plotItem.startValue,\n            datasetName: plotItem.name,\n            color: config.color,\n            alpha: config.alpha,\n            anchorBgColor: anchorProps.bgColor,\n            anchorBgAlpha: anchorProps.anchorBgAlpha,\n            anchorAlpha: anchorProps.anchorAlpha,\n            anchorBorderColor: anchorProps.borderColor,\n            anchorBorderThickness: anchorProps.borderThickness,\n            anchorRadius: anchorProps.radius,\n            anchorSides: anchorProps.sides,\n            anchorStartAngle: anchorProps.startAngle,\n            anchorHoverColor: hoverEffects.anchorColor,\n            anchorHoverAlpha: hoverEffects.anchorAlpha,\n            anchorHoverSides: hoverEffects.anchorSides,\n            dashed: config.dashed,\n            valuePosition: config.valuePosition,\n            id: config.id\n          };\n          config.dragStart = true;\n        } else {\n          config.dragStart = false;\n        }\n        break;\n\n      case 'dragmove':\n        plotItem = dataStore[index];\n        config = plotItem.config;\n        if (config.dragStart) {\n          chartY = coordinate.chartY;\n          config.allowDrag && (style.cursor = dragMouseAttr);\n          element = plotItem.graphics.element;\n          config._pointerDy++;\n          image = plotItem.graphics.image;\n          xPos = plotItem._xPos;\n          anchorElement = element;\n          chartY += config._dragBuffer;\n          allowNegDrag = config.allowNegDrag;\n          lowerDragBoundary = allowNegDrag ? chartConfig.canvasBottom : yAxis.yBasePos;\n          anchorProps = config.anchorProps;\n          anchorStartAngle = anchorProps.startAngle || 90;\n          hoverEffects = config.hoverEffects;\n          isHoverEnabled = config.hoverEffects && config.hoverEffects.enabled;\n          anchorImageUrl = anchorProps.imageUrl;\n          if (chartY < canvasTop) {\n            chartY = canvasTop;\n          } else if (chartY > lowerDragBoundary) {\n            chartY = lowerDragBoundary;\n          }\n          plotItem._yPos = yPos = chartY;\n          config._y = value = config.setValue = yAxis.getValue(yPos);\n          config._Py = yAxis.getPixel(config._y);\n          formattedVal = dataset.getFromEnv('number-formatter').dataLabels(value);\n          config.toolTipValue = formattedVal;\n          config.displayValue = formattedVal;\n\n          dataset.parseLabelAttributes(plotItem, plotIndex);\n          dataset.drawLabel(plotIndex, plotIndex + 1);\n          plotItem.graphics.element = element;\n          dataset.getFromEnv('toolTipController').hide(datasetConf.currentToolTip);\n\n          if (isVML && anchorImageUrl) {\n            image = anchorElement;\n          } else {\n            if (isHoverEnabled && (rolloverdata = anchorElement.data(SETROLLOVERATTR))) {\n              rolloverdata.path = polyPathToPath([hoverEffects.anchorSides || 2, xPos, yPos, hoverEffects.anchorRadius, hoverEffects.startAngle, hoverEffects.dip]);\n            }\n            if (isHoverEnabled && (rolloutdata = anchorElement.data(SETROLLOUTATTR))) {\n              rolloutdata.path = polyPathToPath([anchorProps.symbol[1] || 2, xPos, yPos, anchorProps.radius, anchorProps.startAngle, config.dip || 0]);\n            }\n\n            anchorElement && anchorElement.attr(rolloutdata || {\n              path: polyPathToPath([anchorProps.symbol[1] || 2, xPos, yPos,\n                anchorProps.radius, anchorStartAngle, 0])\n            });\n          }\n\n          if (image) {\n            DragAreaDataset.updateImage(plotItem);\n          }\n\n          if (isDragLine) {\n            dataset.drawCommonElements();\n          }\n\n          if (mainLineElement) {\n            datasetConf = dataset.config;\n            startIndex = config.pathStartIndex;\n            endIndex = config.pathEndIndex;\n            pathArr = config.lastPath;\n            pathArr = dataset.getLinePath(dataStore, {\n              begin: startIndex,\n              end: endIndex\n            });\n            mainLineElement.attr({\n              path: pathArr.getPathArr()\n            });\n          }\n\n          if (config._pointerDy === 1) {\n            eventArgs = {\n              index: index,\n              dataIndex: index,\n              datasetIndex: datasetIndex,\n              startValue: plotItem.startValue,\n              datasetName: plotItem.name,\n              color: config.color,\n              alpha: config.alpha,\n              anchorBgColor: anchorProps.bgColor,\n              anchorBgAlpha: anchorProps.anchorBgAlpha,\n              anchorAlpha: anchorProps.anchorAlpha,\n              anchorBorderColor: anchorProps.borderColor,\n              anchorBorderThickness: anchorProps.borderThickness,\n              anchorRadius: anchorProps.radius,\n              anchorSides: anchorProps.sides,\n              anchorStartAngle: anchorProps.startAngle,\n              anchorHoverColor: hoverEffects.anchorColor,\n              anchorHoverAlpha: hoverEffects.anchorAlpha,\n              anchorHoverSides: hoverEffects.anchorSides,\n              dashed: config.dashed,\n              valuePosition: config.valuePosition,\n              id: config.id\n            };\n            chart.fireChartInstanceEvent('dataplotDragStart', eventArgs);\n          }\n        }\n        break;\n\n      case 'dragend':\n        plotItem = dataStore[index];\n        config = plotItem.config;\n        if (config.dragStart) {\n          dataset.setMaxMin(plotItem);\n          if (datasetConf.snapToDiv || datasetConf.snapToDivOnly) {\n            element = plotItem.graphics.element;\n            image = plotItem.graphics.image;\n            xPos = plotItem._xPos;\n            anchorElement = element;\n            anchorProps = config.anchorProps;\n            anchorStartAngle = anchorProps.startAngle || 90;\n            hoverEffects = config.hoverEffects;\n            isHoverEnabled = config.hoverEffects && config.hoverEffects.enabled;\n            anchorImageUrl = anchorProps.imageUrl;\n            config.setValue = snapPoint({ snapPixel, datasetConf }, ticks, plotItem);\n            chartY = yAxis.getPixel(config.setValue);\n            plotItem._yPos = yPos = chartY;\n            config._y = value = config.setValue;\n            config._Py = yAxis.getPixel(config._y);\n            formattedVal = dataset.getFromEnv('number-formatter').dataLabels(value);\n            config.toolTipValue = formattedVal;\n            config.displayValue = formattedVal;\n            dataset.parseLabelAttributes(plotItem, plotIndex);\n            dataset.drawLabel(plotIndex, plotIndex + 1);\n            plotItem.graphics.element = element;\n            // toolTipController.hide(datasetConf.currentToolTip);\n            if (isVML && anchorImageUrl) {\n              image = anchorElement;\n            } else {\n              if (isHoverEnabled && (rolloverdata = anchorElement.data(SETROLLOVERATTR))) {\n                rolloverdata.path = polyPathToPath([hoverEffects.anchorSides || 2, xPos, yPos, hoverEffects.anchorRadius, hoverEffects.startAngle, hoverEffects.dip]);\n              }\n              if (isHoverEnabled && (rolloutdata = anchorElement.data(SETROLLOUTATTR))) {\n                rolloutdata.path = polyPathToPath([anchorProps.symbol[1] || 2, xPos, yPos, anchorProps.radius, anchorProps.startAngle, config.dip || 0]);\n              }\n\n              anchorElement && anchorElement.attr(rolloutdata || {\n                path: polyPathToPath([anchorProps.symbol[1] || 2, xPos, yPos,\n                  anchorProps.radius, anchorStartAngle, 0])\n              });\n            }\n            if (image) {\n              DragAreaDataset.updateImage(plotItem);\n            }\n\n            if (isDragLine) {\n              dataset.drawCommonElements();\n            }\n            if (mainLineElement) {\n              datasetConf = dataset.config;\n              startIndex = config.pathStartIndex;\n              endIndex = config.pathEndIndex;\n              pathArr = config.lastPath;\n              pathArr = dataset.getLinePath(dataStore, {\n                begin: startIndex,\n                end: endIndex\n              });\n              mainLineElement.attr({\n                path: pathArr.getPathArr()\n              });\n            }\n          }\n          eventArgs = {\n            index: index,\n            dataIndex: index,\n            datasetIndex: datasetIndex,\n            startValue: plotItem.startValue,\n            endValue: config.setValue,\n            datasetName: plotItem.name,\n            color: config.color,\n            alpha: config.alpha,\n            anchorBgColor: anchorProps.bgColor,\n            anchorBgAlpha: anchorProps.anchorBgAlpha,\n            anchorAlpha: anchorProps.anchorAlpha,\n            anchorBorderColor: anchorProps.borderColor,\n            anchorBorderThickness: anchorProps.borderThickness,\n            anchorRadius: anchorProps.radius,\n            anchorSides: anchorProps.sides,\n            anchorStartAngle: anchorProps.startAngle,\n            anchorHoverColor: hoverEffects.anchorColor,\n            anchorHoverAlpha: hoverEffects.anchorAlpha,\n            anchorHoverSides: hoverEffects.anchorSides,\n            dashed: config.dashed,\n            valuePosition: config.valuePosition,\n            id: config.id\n          };\n          eventArgsArr = [\n            chart.getFromEnv('chartInstance').id,\n            eventArgs.dataIndex,\n            eventArgs.datasetIndex,\n            eventArgs.datasetName,\n            eventArgs.startValue,\n            eventArgs.endValue\n          ];\n\n          element && updateDataValue.call(element, oriEvent, chart); // Update dataValue\n          if (config._pointerDy) {\n            hoverEnabled && dataset._hoverPlotAnchor(plotItem, ROLLOUT);\n            chart.fireChartInstanceEvent('dataplotDragEnd', eventArgs);\n            // Fire the ChartUpdated event\n            chart.fireChartInstanceEvent('chartupdated', eventArgs, eventArgsArr);\n          }\n\n          setTooltext = getValidValue(parseUnsafeString(pluck(plotItem.tooltext,\n            JSONData.plottooltext, dataset.getFromEnv('chart-attrib').plottooltext), false));\n\n          if (setTooltext !== UNDEF) {\n            parserConfig.formattedValue = config.toolTipValue;\n            parserConfig.label = config.label;\n            toolText = parseTooltext(setTooltext, macroIndices,\n              parserConfig, { value: config.toolTipValue }, UNDEF, JSONData);\n            config.setTooltext = toolText;\n            setTooltext = toolText;\n            config.toolText = toolText;\n          }\n          toolText = config.finalTooltext = config.toolText !== false ? (\n            (setTooltext ||\n              config.toolText.substring(0, config.toolText.indexOf(config.formatedVal)) +\n              config.toolTipValue)) : '';\n\n          if (!(chartY >= yPos - tolerance && chartY <= yPos + tolerance &&\n            chartX <= xPos + tolerance && chartX >= xPos - tolerance)) {\n            style.cursor = pointerMouseAttr;\n          }\n          config._dragBuffer = 0;\n          config._pointerDy = 0;\n          config.dragStart = false;\n        }\n        break;\n      default: break;\n    }\n  }\n  /**\n   * This method handles all mouse events of an dataset.\n   * @param {string} eventType name of the event\n   * @param {number} plotIndex index of the plot where this event has been occured\n   * @param {Event} e reference of the original mouse event\n   */\n  _firePlotEvent (eventType, plotIndex, e) {\n    var dataset = this,\n      dataSetConf = dataset.config,\n      chart = dataset.getFromEnv('chart'),\n      chartConfig = dataset.getFromEnv('chartConfig'),\n      drawTrendRegion = chartConfig.drawTrendRegion,\n      // chartComp = chart.components,\n      paper = dataset.getFromEnv('paper'),\n      toolTipController = dataset.getFromEnv('toolTipController'),\n      canvas = paper.canvas,\n      style = canvas.style,\n      datasetComp = dataset.components,\n      plotItem = datasetComp.data[plotIndex],\n      currentToolTip = dataSetConf.currentToolTip,\n      originalEvent = e.originalEvent,\n      pointerMouseAttr = DEFAULT,\n      tolerance,\n      coordinate,\n      chartY,\n      chartX,\n      yPos,\n      xPos,\n      element,\n      hoverEnabled,\n      toolText,\n      eventArgs,\n      config,\n      changedTouch,\n      anchorProps;\n\n    if (eventType === 'touchend') {\n      changedTouch = originalEvent.changedTouches[0];\n      originalEvent.pageX = changedTouch && changedTouch.pageX;\n      originalEvent.pageY = changedTouch && changedTouch.pageY;\n    }\n    coordinate = getMouseCoordinate(chart.getFromEnv('chart-container'), originalEvent, chart);\n    chartY = coordinate.chartY;\n    chartX = coordinate.chartX;\n\n    if (plotItem) {\n      element = plotItem.graphics.element;\n      config = plotItem.config;\n      anchorProps = config.anchorProps;\n      toolText = config.finalTooltext;\n      hoverEnabled = config.hoverEffects.enabled;\n      eventArgs = config.eventArgs;\n      yPos = plotItem._yPos;\n      xPos = plotItem._xPos;\n      config.dragTolerance = config.dragTolerance < anchorProps.markerRadius\n        ? anchorProps.markerRadius + 0.5 : config.dragTolerance;\n      tolerance = mathMax(config.dragTolerance, config.hoverEffects.anchorRadius || 0) + 1;\n\n      switch (eventType) {\n        case 'fc-mouseover':\n          if (config.allowDrag) {\n            style.cursor = dragMouseAttr;\n          }\n          if (!config.dragStart && toolText && !config.dragStart && !drawTrendRegion) {\n            if (currentToolTip) {\n              toolTipController.draw(originalEvent, toolText, currentToolTip);\n            } else {\n              currentToolTip = dataSetConf.currentToolTip = toolTipController.draw(originalEvent, toolText);\n            }\n          }\n          if (!config.dragStart) {\n            hoverEnabled && dataset._hoverPlotAnchor(plotItem, ROLLOVER);\n            element && chart.plotEventHandler(element, e, ROLLOVER, eventArgs);\n          }\n          break;\n\n        case 'fc-mouseout':\n          style.cursor = pointerMouseAttr;\n\n          hoverEnabled && dataset._hoverPlotAnchor(plotItem, ROLLOUT);\n          element && chart.plotEventHandler(element, e, ROLLOUT, eventArgs);\n          toolTipController.hide(dataSetConf.currentToolTip);\n          break;\n\n        case 'fc-mousemove':\n          if (!config.dragStart && toolText &&\n            chartY >= yPos - tolerance && chartY <= yPos + tolerance &&\n            chartX <= xPos + tolerance && chartX >= xPos - tolerance) {\n            config.allowDrag && (style.cursor = dragMouseAttr);\n            if (currentToolTip) {\n              toolTipController.draw(originalEvent, toolText, currentToolTip);\n            } else {\n              currentToolTip = dataSetConf.currentToolTip = toolTipController.draw(originalEvent, toolText);\n            }\n          } else {\n            toolTipController.hide(dataSetConf.currentToolTip);\n          }\n\n          break;\n\n        case 'fc-click':\n          element && chart.plotEventHandler(element, e, DATAPLOTCLICK, eventArgs);\n          break;\n        default: break;\n      }\n    }\n  }\n\n  /**\n   * Function to restore the values of the dataset to its original\n   */\n  restore () {\n    _restore.call(this);\n  }\n\n  /**\n   * Fucntion to get the updated values of data when they are dragged.\n   * @return {Object} The corresponding data Array of the dataset containing the values of all the sets.\n   */\n  getJSONData () {\n    return _getJSONData.call(this);\n  }\n}\n_updateImage = DragAreaDataset.prototype.updateImage;\n__firePlotEvent = DragAreaDataset.prototype._firePlotEvent;\n_configure = DragAreaDataset.prototype.configureAttributes;\n_drag = DragAreaDataset.prototype.drag;\n\nexport { __firePlotEvent, _configure as configurer, _updateImage, _drag };\nexport default DragAreaDataset;\n","import areaAnimationRules from '@fusioncharts/charts/src/dataset/area/index.animation';\n\nexport default {\n  '*.dataset.dragArea': areaAnimationRules['*.dataset.area']\n};\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  '*.dataset.dragLine': lineAnimation['*.dataset.line']\n};\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\n\nimport DragColumn from '../dragcolumn2d';\nimport DragAreaDataset from '../../dataset/dragarea';\nimport { HUNDREDSTRING } from '@fusioncharts/core/src/lib';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\n/**\n * API class of dragcolumn inheriting from area class\n */\nclass DragArea extends DragColumn {\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'DragArea';\n  }\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'DragArea';\n  }\n\n  // eslint-disable-next-line\n  getDSGroupdef () {}\n  /**\n   * Function to parse chart specific configurations. It first calls the __setDefaultConfig of areabase class.\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    var chart = this,\n      config = chart.config;\n    _setDefaultConfig.call(chart);\n    config.isDrag = true;\n    config.anchoralpha = HUNDREDSTRING;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n  }\n  /**\n   * Function to return the dataset liked with the current API\n   * @return {Object} The DragAreaDataset class\n   */\n  getDSdef () {\n    return DragAreaDataset;\n  }\n}\nexport default DragArea;\n","import Kagi from '@fusioncharts/powercharts/src/chart/kagi';\nexport default Kagi;\n","import WaterFall2D from '../waterfall2d';\nimport KagiDataset from '../../dataset/kagi';\nimport {\n  pluckNumber,\n  pluck,\n  toPrecision\n} from '@fusioncharts/core/src/lib';\nlet UNDEF,\n  HUNDREDSTRING = '100',\n  SEVENTYSTRING = '70',\n  KAGI = 'kagi';\n\nclass Kagi extends WaterFall2D {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Kagi';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Kagi';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.singleseries = true;\n    config.hasLegend = false;\n    config.defaultDatasetType = KAGI;\n    config.setAdaptiveMin = true;\n    config.anchorborderthickness = 1;\n    config.anchorimageurl = UNDEF;\n    config.anchorimagepadding = 1;\n    config.anchorsides = 1;\n    config.anchoralpha = UNDEF;\n    config.anchorbgalpha = HUNDREDSTRING;\n    config.anchorimagealpha = HUNDREDSTRING;\n    config.anchorimagescale = 100;\n    config.anchorstartangle = 90;\n    config.anchorshadow = 0;\n    config.anchorbgcolor = UNDEF;\n    config.anchorbordercolor = UNDEF;\n    config.anchorradius = 3;\n    config.showvalues = 1;\n    config.plotfillalpha = SEVENTYSTRING;\n    config.linedashlen = 5;\n    config.linedashgap = 4;\n    config.linedashed = UNDEF;\n    config.linealpha = HUNDREDSTRING;\n    config.linethickness = 2;\n    config.drawfullareaborder = 1;\n    config.connectnulldata = 0;\n    config.zeroplanethickness = 1;\n    config.enablemousetracking = true;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n  }\n\n  _getDataset () {\n    var dataSetArr = [];\n\n    this.iterateComponents((child) => {\n      if ((child.getType && child.getType() === 'dataset')) {\n        dataSetArr.push(child);\n      }\n    });\n    return dataSetArr;\n  }\n\n  _postSpaceManagement () {\n    var iapi = this,\n      config = iapi.config,\n      xAxis = iapi.getChildren('xAxis')[0],\n      yAxis = iapi.getChildren('yAxis')[0],\n      canvas = iapi.getChildren('canvas')[0],\n      canvasConfig = canvas.config,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      canvasPadding = pluckNumber(canvasConfig.canvasPadding, 15),\n      canvasPaddingTop = canvasConfig.canvasPaddingTop,\n      canvasPaddingBottom = canvasConfig.canvasPaddingBottom, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasPaddingLeft = canvasConfig.canvasPaddingLeft, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasPaddingRight = canvasConfig.canvasPaddingRight, // eslint-disable-line good-practices/no-single-usage-variable\n      chartAttrs = iapi.getFromEnv('dataSource').chart, // eslint-disable-line good-practices/no-single-usage-variable\n      series = iapi._getDataset()[0].config,\n      shiftCount = series && series.shiftCount,\n      min = pluckNumber(xAxis.getAxisConfig('axisMinValue'), 0), // eslint-disable-line good-practices/no-single-usage-variable\n      max = pluckNumber(xAxis.getAxisConfig('axisMaxValue'), shiftCount - 1),\n      // plot area will not be less then 10 px\n      // leftPixelPad = mathMin(pluckNumber(chartAttrs.canvaspadding, 0), (canvasWidth / 2) - 10),\n      // rightPixelPad = leftPixelPad,\n      // The maximum horizontal shift in percentage of the\n      // available canvas width\n      maxHShiftPercent = pluckNumber(chartAttrs.maxhshiftpercent, 10),\n      effectiveCanvasWidth = iapi.config.canvasWidth - canvasPadding * 2,\n      shift = config.shift || 0,\n      xShiftLength;\n\n    yAxis && yAxis.setAxisDimention({\n      x: yAxis.config.isOpposit\n        ? config.canvasRight + canvasBorderWidth : config.canvasLeft - canvasBorderWidth,\n      y: config.canvasTop + canvasPaddingTop,\n      opposite: yAxis.config.isOpposit\n        ? config.canvasLeft - canvasBorderWidth : config.canvasRight + canvasBorderWidth,\n      axisLength: config.canvasHeight - canvasPaddingTop - canvasPaddingBottom\n    });\n\n    iapi._setPosition();\n    if (series) {\n      // maxHShiftPercent can not be < 0\n      maxHShiftPercent = maxHShiftPercent <= 0\n        ? 10 : maxHShiftPercent;\n      xShiftLength = series.xShiftLength =\n                  Math.min(effectiveCanvasWidth / shiftCount,\n                    maxHShiftPercent * effectiveCanvasWidth / 100);\n      // leftPixelPad = canvasPadding + xShiftLength / 2;\n      // canvasWidth - ((xShiftLength *\n      // // handling single value rendering issue in Kagi\n      // mathMax((shiftCount - 1), 1)) + leftPixelPad);\n      // Fix for Kagi chart single value rendering issue\n      // If there is a single value, we use xAxis max value\n      // as 1 not as 0\n      max = Math.max(max, 1);\n    }\n\n    // function for adjusting value padding depending upon data and axis labels.\n    canvas.setCanvasPadding();\n    xAxis && xAxis.setAxisConfig({\n      'canvasPaddingLeft': Math.max(canvasPaddingLeft, canvasPadding) + (xShiftLength / 2),\n      'canvasPaddingRight': Math.max(canvasPaddingRight, canvasPadding) + (xShiftLength / 2)\n    });\n    xAxis && xAxis.setAxisDimention({\n      x: iapi.config.canvasLeft + canvasPadding + (xShiftLength / 2),\n      axisLength: xShiftLength * (max - min),\n      y: xAxis.config.isOpposit\n        ? config.canvasTop - canvasBorderWidth\n        : config.canvasBottom + shift + canvasBorderWidth,\n      opposite: xAxis.config.isOpposit\n        ? config.canvasBottom + shift + canvasBorderWidth\n        : config.canvasTop - canvasBorderWidth\n    });\n\n    iapi.allocateDimensionOfChartMenuBar();\n  }\n\n  _setPosition () {\n    var i,\n      point,\n      yValue,\n      isRally,\n      lastHigh,\n      lastLow,\n      isRallyInitialised,\n      lastPoint,\n      iapi = this,\n      dataObj = iapi.getFromEnv('dataSource'),\n      dataSet = iapi._getDataset()[0],\n      categories = dataObj.data || (dataSet && dataSet[0] && dataSet[0].data),\n      setDataArr = dataSet.components.data,\n      dataSetLen = setDataArr && setDataArr.length,\n      yAxis = iapi.getChildren('yAxis')[0],\n      xValue = 0,\n      plotX = xValue, // eslint-disable-line good-practices/no-single-usage-variable\n      catArr = [];\n    // create plot elements\n    for (i = 0; i < dataSetLen; i++) {\n      point = setDataArr[i].config;\n      yValue = point.setValue;\n\n      dataObj = setDataArr[i];\n\n      // Creating the data object if not created\n      if (!dataObj) {\n        dataObj = setDataArr[i] = {\n          graphics: {}\n        };\n      }\n      if (!point.isDefined) {\n        yValue = point.plotValue;\n      }\n\n      // Getting appropiate value for the current plot point.\n      yValue = pluck(point.plotValue, yValue);\n\n      // Set the y position.\n      point.plotY = toPrecision(yAxis.getPixel(point.setValue), 2);\n\n      // Store value textbox y position.\n      point.graphY = yValue && toPrecision(yAxis.getPixel(yValue), 2);\n\n      // Abscissa of the point on the kagi line.\n      point.plotX = plotX;\n      // If there is a horizontal shift, then abscissa of the kagi\n      // line and as such all points on it shifts to the right by a\n      // slab more.\n      if (point.isShift) {\n        xValue += 1;\n        plotX = xValue;\n        categories && catArr.push(categories[i]);\n      } else if (i === (dataSetLen - 1)) {\n        categories && catArr.push(categories[i]);\n      }\n\n      if (i) {\n        lastPoint = setDataArr[i - 1].config;\n\n        // Getting the previously bundled up properties in local\n        // variables.\n        isRally = point && point.objParams && point.objParams.isRally;\n        lastHigh = point && point.objParams && point.objParams.lastHigh;\n        lastLow = point && point.objParams && point.objParams.lastLow;\n        isRallyInitialised = point && point.objParams &&\n                      point.objParams.isRallyInitialised;\n\n        // To find if there is a change in trend towards the current\n        // plot.\n        if (lastPoint && isRallyInitialised &&\n                      lastPoint.isRally !== point.isRally) {\n          // Setting in this.data for the plot, to be used for.\n          // Setting the color/thickness the graph segments.\n          point.isChanged = true;\n\n          // To get the pixel position of the transtion point and\n          // storing in data point for the plot.\n          point.ty = toPrecision(yAxis.getPixel((isRally\n            ? lastHigh : lastLow)), 2);\n        } else {\n          // Setting in this.data for the plot.\n          point.isChanged = false;\n        }\n      }\n    }\n    // end of previous translation\n  }\n\n  getDSdef () {\n    return KagiDataset;\n  }\n}\nexport default Kagi;\n","import SSCartesian from '@fusioncharts/charts/src/chart/_internal/sscartesian';\nimport WaterFall2DDataset from '../../dataset/waterfall2d';\n\nconst WATERFALL_2D = 'Waterfall2D';\nclass WaterFall2D extends SSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'WaterFall2D';\n  }\n\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'WaterFall2D';\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.singleseries = true;\n    config.hasLegend = false;\n    config.defaultDatasetType = WATERFALL_2D;\n    config.enablemousetracking = true;\n  }\n\n  getDSdef () {\n    return WaterFall2DDataset;\n  }\n}\nexport default WaterFall2D;\n","import {\n  pluckNumber,\n  pluck,\n  parseTooltext,\n  parseUnsafeString,\n  getDashStyle,\n  getDefinedColor,\n  getValidValue,\n  toRaphaelColor,\n  getCrispValue,\n  getFirstValue,\n  hashify,\n  convertColor, getLightColor, getColumnColor\n} from '@fusioncharts/core/src/lib';\n\nimport ColumnDataset, { PATTERN_TYPES } from '@fusioncharts/charts/src/dataset/column';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport waterFall2DAnimation from './index.animation';\n\nlet HUNDREDSTRING = '100',\n  PLOTBORDERCOLOR = 'plotBorderColor',\n  PLOTGRADIENTCOLOR = 'plotGradientColor',\n  COMMA = ',',\n  BLANK = '',\n  SHOWSHADOW = 'showShadow',\n  NONE = 'none',\n  MAX_MITER_LINEJOIN = 2,\n  M = 'M',\n  H = 'H',\n  UNDEF;\naddDep({\n  name: 'waterFall2DAnimation',\n  type: 'animationRule',\n  extension: waterFall2DAnimation\n});\nclass WaterFall2DDataset extends ColumnDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'waterFall2D';\n  }\n  configure (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    var catData,\n      catObj,\n      dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      // logic = chart.logic,\n      conf = dataSet.config,\n      // fcJSON = dataSet.fcJSON,\n      JSONData = dataSet.config.JSONData,\n      setDataArr = JSONData.data,\n      setDataLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      catLen = dataSet.getFromEnv('xAxis').getTicksLen(), // eslint-disable-line good-practices/no-single-usage-variable\n      len = Math.min(catLen, setDataLen),\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      colorM = dataSet.getFromEnv('color-manager'),\n      showplotborder,\n      plotColor = colorM.getPlotColor(dataSet.index || dataSet.positionIndex),\n      plotBorderDash = pluckNumber(JSONData.dashed, chartAttr.plotborderdashed, 0),\n      chartConfig = chart.config,\n      usePlotGradientColor = chartConfig.useplotgradientcolor, // eslint-disable-line good-practices/no-single-usage-variable\n      showTooltip = pluckNumber(chartAttr.showtooltip, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      tooltipSepChar = parseUnsafeString(pluck(chartAttr.tooltipsepchar, ', ')), // eslint-disable-line good-practices/no-single-usage-variable\n      formatedVal,\n      parserConfig,\n      setTooltext,\n      // seriesname,\n      macroIndices,\n      // tempPlotfillAngle,\n      toolText,\n      plotDashLen,\n      plotDashGap,\n      plotBorderThickness,\n      isRoundEdges,\n      showHoverEffect,\n      plotfillAngle,\n      plotFillAlpha,\n      plotFillRatio,\n      plotgradientcolor,\n      plotBorderAlpha,\n      plotBorderColor,\n      plotBorderDashStyle,\n      initailPlotBorderDashStyle,\n      setData,\n      setValue,\n      dataObj,\n      config,\n      // label,\n      colorArr,\n      hoverColor,\n      hoverAlpha,\n      hoverGradientColor,\n      hoverRatio,\n      hoverAngle,\n      hoverBorderColor,\n      hoverBorderAlpha,\n      hoverBorderThickness,\n      hoverBorderDashed,\n      hoverBorderDashGap,\n      hoverBorderDashLen,\n      hoverDashStyle,\n      hoverColorArr,\n      dataStore = dataSet.components.data,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      toolTipValue,\n      setDisplayValue,\n      // isBar = chart.isBar,\n      // is3D = chart.config.is3D,\n      // isStacked = chart.isStacked,\n      isBar = false,\n      is3D = false,\n      isStacked = false,\n      stack100Percent,\n      enableAnimation,\n      parentYAxis,\n      setDataDashed,\n      setDataPlotDashLen,\n      setDataPlotDashGap,\n      i,\n      reflowData = /* logic.chartInstance.jsVars._reflowData */ {},\n      reflowDataObj = reflowData.dataObj || (reflowData.dataObj = {}),\n      reflowChartObj = reflowDataObj.chart || (reflowDataObj.chart = {}),\n\n      // fcJSON = dataSet.fcJSON,\n      // isSingleSeries = chart.config.singleseries,\n      lineThickness = pluck(chartAttr.connectorthickness, 1), // eslint-disable-line good-practices/no-single-usage-variable\n      showSum,\n      dataLabel,\n      showLabel,\n      itemValue,\n      maxValue = -Infinity,\n      minValue = Infinity,\n      seriesSum = 0,\n      total = 0,\n      lastComTotal = 0,\n      issum,\n      zLine,\n      setColor,\n      cumulative,\n      sumObj,\n      countPoint,\n      plotfillangle;\n\n    conf.minAbsNonZeroValue = Infinity;\n    conf.minAbsNonZeroData = {};\n    dataSet.setState('visible',\n      pluckNumber(JSONData.visible, !Number(JSONData.initiallyhidden), 1) === 1);\n    // dataplot border width. Managing for 3D too\n    showplotborder = conf.showplotborder = pluckNumber(chartAttr.showplotborder, is3D ? 0 : 1);\n    // waterfall2D chart doesn't show the plotborder by default until we set showplotborder true\n    conf.plotBorderThickness = plotBorderThickness = showplotborder ? (is3D ? 1 : pluckNumber(\n      chartAttr.plotborderthickness, 1)) : 0;\n    // whether to use round edges or not in the waterfall2D\n    conf.isRoundEdges = isRoundEdges = pluckNumber(chartAttr.useroundedges, 0);\n    // dataplot border alpha\n    conf.plotBorderAlpha = plotBorderAlpha = showplotborder ? pluck(chartAttr.plotborderalpha,\n      plotFillAlpha, HUNDREDSTRING) : 0;\n    // dataplot border color\n    conf.plotbordercolor = plotBorderColor = pluck(chartAttr.plotbordercolor,\n      is3D ? '#ffffff' : colorM.getColor(PLOTBORDERCOLOR).split(COMMA)[0]);\n    // GradientColor of the plot fill\n    conf.plotgradientcolor = plotgradientcolor = usePlotGradientColor ? getDefinedColor(\n      chartAttr.plotgradientcolor, colorM.getColor(PLOTGRADIENTCOLOR)) : BLANK;\n    conf.plotDashLen = plotDashLen = pluckNumber(chartAttr.plotborderdashlen, 6);\n    conf.showTextOutline = pluckNumber(chartAttr.textoutline, 0);\n    conf.plotDashGap = plotDashGap = pluckNumber(chartAttr.plotborderdashgap, 3);\n    // use3DLighting to show gredient color effect in waterfall2D charts\n    conf.use3DLighting = pluckNumber(chartAttr.use3dlighting, 1);\n    conf.showSum = showSum = pluckNumber(chartAttr.showsumatend, 1);\n    conf.plotColor = plotColor = pluck(JSONData.color, plotColor);\n    // defaultAngle depend upon item value\n    conf.plotfillAngle = plotfillAngle = pluckNumber(360 - chartAttr.plotfillangle, 90);\n    conf.showShadow = (isRoundEdges || is3D) ? pluckNumber(chartAttr.showshadow, 1)\n      : pluckNumber(chartAttr.showshadow, colorM.getColor(SHOWSHADOW));\n    conf.usePattern = pluckNumber(chartConfig.usePattern, 0);\n    conf.patternType = PATTERN_TYPES.includes(JSONData.patterntype)\n      ? JSONData.patterntype\n      : chartConfig.patternType;\n    conf.patternDensity = pluckNumber(JSONData.patterndensity, chartConfig.patternDensity);\n    conf.patternAlpha = pluckNumber(JSONData.patternalpha, chartConfig.patternAlpha);\n    conf.patternBgColor = pluck(JSONData.patternbgcolor, conf.patternBgColor);\n    conf.showHoverEffect = showHoverEffect = pluckNumber(chartAttr.plothovereffect,\n      chartAttr.showhovereffect, UNDEF);\n\n    conf.usePattern && (conf.showHoverEffect = showHoverEffect = 0);\n\n    // todo start - **Needs to remove them if not required in waterfall2D*****************\n    conf.plotFillAlpha = plotFillAlpha = pluck(JSONData.alpha, chartAttr.plotfillalpha, HUNDREDSTRING);\n    conf.plotRadius = pluckNumber(chartAttr.useRoundEdges, conf.isRoundEdges ? 1 : 0);\n    conf.plotFillRatio = plotFillRatio = pluck(JSONData.ratio, chartAttr.plotfillratio);\n    conf.dashed = plotBorderDash;\n    conf.plotBorderDashStyle = initailPlotBorderDashStyle = plotBorderDash // eslint-disable-line good-practices/no-single-usage-variable\n      ? getDashStyle(plotDashLen, plotDashGap) : 'none';\n    conf.showValues = pluckNumber(JSONData.showvalues, chartAttr.showvalues, 1);\n    conf.valuePadding = pluckNumber(chartAttr.valuepadding, 2);\n    conf.enableAnimation = enableAnimation = pluckNumber(chartAttr.animation,\n      chartAttr.defaultanimation, 1);\n    conf.animation = !enableAnimation ? false : {\n      duration: pluckNumber(chartAttr.animationduration, 1) * 1000\n    };\n    reflowChartObj.transposeAnimation = conf.transposeAnimation =\n                pluckNumber(chartAttr.transposeanimation, reflowChartObj.transposeAnimation, enableAnimation);\n    conf.transposeAnimDuration = pluckNumber(chartAttr.transposeanimduration, 0.2) * 1000;\n\n    conf.showTooltip = pluckNumber(chartAttr.showtooltip, 1);\n    conf.stack100Percent = stack100Percent =\n                pluckNumber(chart.stack100percent, chartAttr.stack100percent, 0);\n    conf.definedGroupPadding = Math.max(pluckNumber(chartAttr.plotspacepercent), 0);\n    conf.plotSpacePercent = Math.max(pluckNumber(chartAttr.plotspacepercent, 20) % 100, 0);\n    conf.maxColWidth = pluckNumber(isBar ? chartAttr.maxbarheight : chartAttr.maxcolwidth, 50);\n    conf.showPercentValues = pluckNumber(chartAttr.showpercentvalues, (isStacked && stack100Percent)\n      ? 1 : 0);\n    conf.showPercentInToolTip = pluckNumber(chartAttr.showpercentintooltip,\n      (isStacked && stack100Percent) ? 1 : 0);\n    conf.plotPaddingPercent = pluckNumber(chartAttr.plotpaddingpercent);\n    conf.rotateValues = pluckNumber(chartAttr.rotatevalues) ? 270 : 0;\n    conf.placeValuesInside = pluckNumber(chartAttr.placevaluesinside, 0);\n    /* conf.zeroPlaneColor = chart.options.chart.zeroPlaneColor;\n    conf.zeroPlaneBorderColor = chart.options.chart.zeroPlaneBorderColor;\n    conf.zeroPlaneShowBorder = chart.options.chart.zeroPlaneShowBorder; */\n    conf.parentYAxis = parentYAxis = pluck(JSONData.parentyaxis && JSONData.parentyaxis.toLowerCase(), // eslint-disable-line good-practices/no-single-usage-variable\n      'p') === 's' ? 1 : 0;\n    // todo end ***************\n    conf.defaultPadding = {\n      left: 0.5,\n      right: 0.5\n    };\n\n    dataSet.setState('dirty', true);\n\n    if (!dataStore) {\n      dataStore = dataSet.components.data = [];\n    }\n    // storing the configurations for z-line.\n    conf.zLine = zLine = {\n      step: true,\n      data: [],\n      dashStyle: chartAttr.connectordashed === '1' ? getDashStyle(\n        pluckNumber(chartAttr.connectordashlen, 2), pluckNumber(\n          chartAttr.connectordashgap, 2)) : NONE,\n      useForwardSteps: true,\n      color: convertColor(pluck(chartAttr.connectorcolor, '000000'), pluck(chartAttr.connectoralpha,\n        100)),\n      lineWidth: lineThickness\n    };\n    // calculate sum\n    for (i = 0; i < len; i += 1) {\n      // individual set level data\n      setData = setDataArr[i];\n      itemValue = numberFormatter.getCleanValue(setData.value);\n      issum = pluckNumber(setData.issum, 0);\n      // If its vline then don't calculate\n      if (setData.vline || issum) {\n        delete setData._value;\n        continue;\n      }\n      seriesSum += itemValue;\n      setData._value = itemValue;\n    }\n    // Is we have to show sum at end then create a dummy set for total\n    if (showSum) {\n      // converts the truty value of showSum to Boolean TRUE flag.\n      showSum = true;\n      len += 1;\n      sumObj = {\n        label: getFirstValue(chartAttr.sumlabel, 'Total'),\n        // todo remove _value if not required.\n        _value: seriesSum,\n        value: seriesSum,\n        issum: 1,\n        cumulative: 1\n      };\n    }\n    // Iterate through all level data\n    // Managing the data value labels and other cosmetics inside this loop\n    for (i = 0, countPoint = 0; i < len; i += 1) {\n      // individual data obj\n      setData = setDataArr[i];\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (!dataObj) {\n        dataObj = dataStore[i] = {\n          graphics: {}\n        };\n      }\n\n      if (!dataObj.config) {\n        config = dataStore[i].config = {};\n      }\n      if (!setData && showSum) {\n        setData = setDataArr[i] = sumObj;\n      }\n      plotColor = pluck(setData.color, colorM.getPlotColor(i));\n      // Managing vLines in between <set> elements\n      // If its vline\n      // we call the grid manager addVline function, that creates vline\n      // and we stop execution here and continue the loop to next data\n      if (dataObj.vline) {\n        // todo need to validate with axis module and add vline.\n        continue;\n      }\n      // get the valid value\n      // parsePointValue check the its a value value of not and return\n      // the valid value\n      itemValue = setData._value;\n      delete setData._value;\n      config.issum = (issum = pluckNumber(setData.issum, 0));\n      cumulative = (config.isCumulative = pluckNumber(setData.cumulative, 1));\n      if (issum) {\n        itemValue = cumulative ? total : (total === lastComTotal ? total : (total - lastComTotal));\n        config.lastComTotal = lastComTotal;\n        lastComTotal = total;\n        zLine.data.push({\n          y: null,\n          x: countPoint - 0.5\n        });\n      } else {\n        total += itemValue;\n      }\n\n      config.valuePadding = pluckNumber(setData.valuepadding, conf.valuePadding);\n\n      maxValue = Math.max(maxValue, total);\n      minValue = Math.min(minValue, total);\n      if (itemValue !== 0 && conf.minAbsNonZeroValue > Math.abs(itemValue)) {\n        conf.minAbsNonZeroValue = Math.abs(itemValue);\n        conf.minAbsNonZeroData = config;\n      }\n      // store the cumulative total\n      config.total = total;\n      // we check showLabel in individual data\n      // if its set to 0 than we do not show the particular label\n      showLabel = config.showLabel = pluckNumber(setData.showlabel, chartAttr.showlabels, 1);\n      // Label of the data\n      // getFirstValue returns the first defined value in arguments\n      // we check if showLabel is not set to 0 in data\n      // then we take the label given in data, it can be given using label as well as name too\n      // we give priority to label if label is not there, we check the name attribute\n      dataLabel = config.dataLabel = parseUnsafeString(!showLabel ? BLANK : getFirstValue(setData.label,\n        setData.name));\n\n      // <set> cosmetics\n      // Color of the particular data\n      if (itemValue > 0) {\n        setColor = pluck(setData.color, chartAttr.positivecolor, plotColor);\n        if (showHoverEffect !== 0) {\n          hoverColor = pluck(setData.positivehovercolor, chartAttr.positivehovercolor,\n            chartAttr.plotfillhovercolor, chartAttr.columnhovercolor, setColor);\n        }\n      } else {\n        setColor = pluck(setData.color, chartAttr.negativecolor, plotColor);\n        if (showHoverEffect !== 0) {\n          hoverColor = pluck(setData.negativehovercolor, chartAttr.negativehovercolor,\n            chartAttr.plotfillhovercolor, chartAttr.columnhovercolor, setColor);\n        }\n      }\n      // Setting the angle for plot fill for negative data\n      if (itemValue < 0) {\n        plotfillangle = 360 - plotfillAngle;\n      } else {\n        plotfillangle = plotfillAngle;\n      }\n      plotFillAlpha = pluck(setData.alpha, conf.plotFillAlpha);\n      config.dashed = setDataDashed = pluckNumber(setData.dashed, conf.dashed);\n      setDataPlotDashLen = pluckNumber(setData.dashlen, plotDashLen);\n      setDataPlotDashGap = plotDashGap = pluckNumber(setData.dashgap, plotDashGap);\n\n      config.plotFillAlpha = plotFillAlpha;\n      config.plotBorderAlpha = plotBorderAlpha;\n      config.showValue = pluckNumber(setData.showvalue, conf.showValues);\n      // todo clean the variables\n      config.setValue = setValue = itemValue;\n      config.setLink = pluck(setData.link);\n      config.toolTipValue = toolTipValue = numberFormatter.dataLabels(setValue, parentYAxis);\n      config.setDisplayValue = setDisplayValue = getValidValue(parseUnsafeString(setData.displayvalue));\n      config.displayValue = pluck(setDisplayValue, toolTipValue);\n\n      config.plotBorderDashStyle = plotBorderDashStyle = setDataDashed === 1\n        ? getDashStyle(setDataPlotDashLen, setDataPlotDashGap)\n        : (setDataDashed === 0 ? 'none' : initailPlotBorderDashStyle);\n\n      config.shadow = {\n        opacity: conf.showShadow ? plotFillAlpha / 100 : 0\n      };\n\n      config.dataLabelStyle = dataSet._configureDataLabelStyle(setData);\n\n      config.patternType = PATTERN_TYPES.includes(setData.patterntype)\n        ? setData.patterntype\n        : conf.patternType;\n      config.patternAngle = pluckNumber(setData.patternangle, JSONData.patternangle,\n        chartAttr.patternangle, config.patternType === PATTERN_TYPES[0] ? 40 : 0);\n      config.patternDensity = pluckNumber(setData.patterndensity, conf.patternDensity);\n      config.patternSize = pluckNumber(setData.patternsize, JSONData.patternsize,\n        config.patternType === PATTERN_TYPES[0] ? 2 : 4);\n      config.patternAlpha = pluckNumber(setData.patternalpha, conf.patternAlpha);\n      config.patternBgColor = pluck(setData.patternbgcolor, conf.patternBgColor);\n\n      // Setting the color Array to be applied to the bar/column.\n      config.colorArr = colorArr = getColumnColor(\n        setColor + COMMA + plotgradientcolor.replace(/,+?$/, ''), plotFillAlpha, plotFillRatio,\n        plotfillangle, isRoundEdges, plotBorderColor,\n        // todo remove the toString() by plucking string only.\n        plotBorderAlpha.toString(),\n        // todo remove this dirty checks and set the flag value as required.\n        (isBar ? 1 : 0), (!!is3D));\n\n      // Parsing the hover effects only if showhovereffect is not 0.\n      if (showHoverEffect !== 0) {\n        // Alpha of the data\n        hoverAlpha = pluck(setData.alpha, setData.hoveralpha, JSONData.hoveralpha,\n          chartAttr.plotfillhoveralpha, chartAttr.columnhoveralpha, plotFillAlpha);\n        hoverGradientColor = pluck(setData.hovergradientcolor,\n          JSONData.hovergradientcolor, chartAttr.plothovergradientcolor, plotgradientcolor);\n        !hoverGradientColor && (hoverGradientColor = '');\n        // Fill ratio of the data\n        hoverRatio = pluck(setData.hoverratio, JSONData.hoverratio, setData.ratio,\n          chartAttr.plothoverratio, plotFillRatio);\n        hoverAngle = pluckNumber(360 - setData.hoverangle,\n          360 - JSONData.hoverangle, 360 - chartAttr.plothoverangle, plotfillangle);\n        hoverBorderColor = pluck(setData.borderhovercolor,\n          JSONData.borderhovercolor, chartAttr.plotborderhovercolor, plotBorderColor);\n        hoverBorderAlpha = pluck(setData.borderhoveralpha,\n          JSONData.borderhoveralpha, chartAttr.plotborderhoveralpha, plotBorderAlpha, plotFillAlpha);\n        hoverBorderThickness = pluckNumber(setData.borderhoverthickness,\n          JSONData.borderhoverthickness, chartAttr.plotborderhoverthickness, plotBorderThickness);\n        hoverBorderDashed = pluckNumber(setData.borderhoverdashed,\n          JSONData.borderhoverdashed, chartAttr.plotborderhoverdashed);\n        hoverBorderDashGap = pluckNumber(setData.borderhoverdashgap,\n          JSONData.borderhoverdashgap, chartAttr.plotborderhoverdashgap, plotDashLen);\n        hoverBorderDashLen = pluckNumber(setData.borderhoverdashlen,\n          JSONData.borderhoverdashlen, chartAttr.plotborderhoverdashlen, plotDashGap);\n        hoverDashStyle = hoverBorderDashed\n          ? getDashStyle(hoverBorderDashLen, hoverBorderDashGap)\n          : plotBorderDashStyle;\n\n        /* If no hover effects are explicitly defined and\n                     * showHoverEffect is not 0 then hoverColor is set.\n                     */\n        if (showHoverEffect === 1 && hoverColor === plotColor) {\n          hoverColor = getLightColor(hoverColor, 70);\n        }\n        config.hoverColor = hoverColor;\n        config.hoverAlpha = hoverAlpha;\n        config.hoverBorderColor = hoverBorderColor;\n        config.hoverBorderAlpha = hoverBorderAlpha;\n        // setting the hover color array which is always applied except when showHoverEffect is not 0.\n        hoverColorArr = getColumnColor(\n          hoverColor + ',' + hoverGradientColor,\n          hoverAlpha,\n          hoverRatio,\n          hoverAngle,\n          isRoundEdges,\n          hoverBorderColor,\n          hoverBorderAlpha.toString(),\n          (isBar ? 1 : 0),\n          (!!is3D)\n        );\n\n        config.setRolloutAttr = {\n          fill: !is3D ? toRaphaelColor(colorArr[0])\n            : [toRaphaelColor(colorArr[0]), !conf.use3DLighting],\n          stroke: showplotborder && toRaphaelColor(colorArr[1]),\n          'stroke-width': plotBorderThickness,\n          'stroke-dasharray': plotBorderDashStyle\n        };\n        config.setRolloverAttr = {\n          fill: !is3D ? toRaphaelColor(hoverColorArr[0])\n            : [toRaphaelColor(hoverColorArr[0]), !conf.use3DLighting],\n          stroke: showplotborder && toRaphaelColor(hoverColorArr[1]),\n          'stroke-width': hoverBorderThickness,\n          'stroke-dasharray': hoverDashStyle\n        };\n      }\n      /*\n                todo: Was in the old architechture and need to be validated and included in the new architechture.\n                // Used to set alpha of the shadow\n                    pointShadow = {\n                        opacity: setAlpha / 100,\n                        inverted: isBar\n                    };\n                // get per-point dash-style\n                    pointDashStyle = setBorderDashed ?\n                        getDashStyle(setBorderDashLen, setBorderDashGap, setBorderWidth) :\n                        DASH_DEF;\n                */\n      // todo removing this category tooltext. Needs a validation.\n      // label = getValidValue(parseUnsafeString(pluck (categories[i].tooltext, categories[i].label)));\n\n      formatedVal = config.toolTipValue;\n\n      // Parsing tooltext against various configurations provided by the user.\n      config.origToolText = setTooltext = getValidValue(parseUnsafeString(pluck(setData.tooltext, JSONData.plottooltext,\n        chartAttr.plottooltext), false));\n      // create the tooltext\n      if (!showTooltip) {\n        toolText = false;\n      } else if (setTooltext !== UNDEF) {\n        macroIndices = [1, 2, 3, 5, 6, 7, 20, 21, 24, 25];\n        parserConfig = {\n          formattedValue: formatedVal,\n          label: dataLabel,\n          yaxisName: parseUnsafeString(chartAttr.yaxisname),\n          xaxisName: parseUnsafeString(chartAttr.xaxisname),\n          cumulativeValue: total,\n          cumulativeDataValue: numberFormatter.dataLabels(total),\n          sum: numberFormatter.dataLabels(seriesSum),\n          unformattedSum: seriesSum\n        };\n        toolText = parseTooltext(setTooltext, macroIndices, parserConfig, setData, chartAttr, JSONData);\n      } else { // determine the dispalay value then\n        toolText = formatedVal === null ? false\n          : (dataLabel !== BLANK) ? dataLabel + tooltipSepChar : '';\n      }\n      // create the displayvalue\n      // if (!config.showValue) {\n      //   displayValue = BLANK;\n      // } else if (setDisplayValue !== UNDEF) {\n      //   displayValue = setDisplayValue;\n      // } else { // determine the dispalay value then\n      //   displayValue = formatedVal;\n      // }\n      zLine.data.push({\n        y: (itemValue === null) ? null : total,\n        x: countPoint\n      });\n      countPoint += 1;\n\n      config.originalPlotColor = hashify(plotColor);\n\n      config.toolText = toolText;\n      config.setTooltext = toolText;\n\n      config._x = i;\n      config._y = setValue;\n\n      // if (!config.issum) {\n      //   config._y = dataStore[i - 1] && dataStore[i - 1].config.total;\n      // } else if (!config.isCumulative) {\n      //   config._y = config.lastComTotal;\n      // }\n    }\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n    conf.connectNullData = pluckNumber(chartAttr.connectnulldata, 0);\n    conf.showConnectors = pluckNumber(chartAttr.showconnectors, 1);\n    // reconfiguring the category object for the axis module\n    catData = JSONData.catData;\n    for (i = 0; i < catData.length; i += 1) {\n      catObj = catData[i];\n      setDataArr.splice(catObj.index, 0, catObj.data);\n    }\n    dataSet.getFromEnv('xAxis').setTickValues(setDataArr);\n    // No real time max min calculations are required during resize.\n    dataSet.config.maxminFlag = false;\n  }\n\n  // Create pixel coordinates for the plots\n  createCoordinates () {\n    var dataSet = this,\n      isBar = dataSet.getFromEnv('chart').isBar,\n      yAxis = dataSet.getFromEnv('yAxis'),\n      xAxis = dataSet.getFromEnv('xAxis'),\n      yBase = yAxis.getAxisBase(), // eslint-disable-line good-practices/no-single-usage-variable\n      yBasePos = yAxis.getPixel(yBase), // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      config,\n      previousY,\n      i,\n      Px,\n      Py,\n      Pb,\n      yVal,\n      chartConfig = dataSet.getFromEnv('chartConfig'),\n      xDepth = chartConfig.xDepth || 0,\n      yDepth = chartConfig.yDepth || 0,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      groupManager = dataSet.groupManager,\n      stackConf = groupManager && groupManager.stackConf,\n      dataStore = dataSet.components.data;\n\n    !isBar && (xDepth = -xDepth);\n    isBar && (yDepth = -yDepth);\n\n    for (i = 0; i < len; i++) {\n      dataObj = dataStore[i];\n      config = dataObj && dataObj.config;\n\n      if (dataObj === UNDEF) {\n        continue;\n      }\n      yVal = config._y;\n      if (!config.issum) {\n        previousY = dataStore[i - 1] && dataStore[i - 1].config.total;\n        previousY && (yVal += previousY);\n      } else if (!config.isCumulative) {\n        previousY = config.lastComTotal;\n        yVal += config.lastComTotal;\n      } else {\n        previousY = null;\n      }\n\n      Px = xAxis.getPixel((stackConf && stackConf[i].x) || config._x) + xDepth;\n      Py = yAxis.getPixel(yVal) + yDepth;\n      Pb = (previousY ? yAxis.getPixel(previousY) : yBasePos) + yDepth;\n      if (xAxis.config.isVertical) {\n        config._Px = Py;\n        config._Py = Px;\n        config._Pby = Px;\n        config._Pbx = Pb;\n      } else {\n        config._Px = Px;\n        config._Py = Py;\n        config._Pby = Pb;\n        config._Pbx = Px;\n      }\n    }\n  }\n\n  getDataLimits () {\n    var dataSet = this,\n      dataStore = dataSet.components.data,\n      conf = dataSet.config,\n      i,\n      config,\n      len = dataStore.length, // eslint-disable-line good-practices/no-single-usage-variable\n      setValue,\n      maxValue = -Infinity,\n      minValue = +Infinity;\n\n    for (i = 0; i < len; i++) {\n      if (!dataStore[i]) {\n        continue;\n      }\n      config = dataStore[i].config;\n      setValue = config.total;\n      if (setValue !== UNDEF) {\n        maxValue = Math.max(maxValue, setValue);\n        minValue = Math.min(minValue, setValue);\n      }\n    }\n\n    conf.maxValue = maxValue;\n    conf.minValue = minValue;\n    return {\n      max: conf.maxValue,\n      min: conf.minValue\n    };\n  }\n\n  drawPlots (anim) {\n    var dataSet = this;\n    super.drawPlots(anim);\n    if (dataSet.config.showConnectors) {\n      dataSet.drawLine();\n    } else {\n      dataSet.getContainer('commonElemsGroup').hide();\n    }\n  }\n\n  drawLine () {\n    var dataSet = this,\n      conf = dataSet.config,\n      i,\n      yPos,\n      xPos,\n      yAxis = dataSet.getFromEnv('yAxis'),\n      yBase = yAxis.getAxisBase(), // eslint-disable-line good-practices/no-single-usage-variable\n      yBasePos = yAxis.getPixel(yBase), // eslint-disable-line good-practices/no-single-usage-variable\n      lineContainer = dataSet.getContainer('commonElemsGroup'),\n      groupNetHalfWidth = dataSet.getFromEnv('columnWidth') / 2,\n      zLineConf = conf.zLine,\n      data = zLineConf.data,\n      set,\n      y,\n      x,\n      ln = data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      seriesLineWidth = zLineConf.lineWidth,\n      lastXPos,\n      zLineDummy = dataSet._graphics.zLine,\n      zLine,\n      lastYPos = null,\n      linePath = [],\n      lastMoveCommand = [];\n\n    yAxis.yBasePos = yBasePos;\n    lineContainer.toFront().show();\n\n    for (i = 0; i < ln; i += 1) {\n      set = data[i];\n      y = set.y;\n      if (y === null) {\n        lastMoveCommand.length = 0;\n        if (conf.connectNullData === 0) {\n          lastYPos = null;\n        }\n      } else {\n        x = pluckNumber(set.x, i);\n        // Multi series related management.\n        yPos = yAxis.getPixel(y);\n        xPos = dataSet.getFromEnv('xAxis').getPixel(x);\n        // crisp line positions\n        xPos = getCrispValue(xPos, seriesLineWidth, seriesLineWidth).position;\n        yPos = getCrispValue(yPos, seriesLineWidth, seriesLineWidth).position;\n\n        if (lastYPos !== null) {\n          if (lastMoveCommand.length) {\n            linePath = linePath.concat(lastMoveCommand);\n            lastMoveCommand.length = 0;\n          }\n          linePath.push(M, lastXPos, lastYPos, 'm', -groupNetHalfWidth, 0, H, xPos, 'h',\n            groupNetHalfWidth, 'm', 0, yPos - lastYPos);\n        } else {\n          lastMoveCommand.push(M, xPos, yPos);\n        }\n\n        lastXPos = xPos;\n        lastYPos = yPos;\n      }\n    }\n    // If zLine is not present, create it\n    zLine = dataSet.getFromEnv('animationManager').setAnimation({ // eslint-disable-line good-practices/no-single-usage-variable\n      el: zLineDummy || 'path',\n      attr: {\n        path: linePath,\n        'stroke-linecap': 'round',\n        'stroke-opacity': 1,\n        'stroke-dasharray': zLineConf.dashStyle,\n        'stroke': zLineConf.color,\n        'stroke-linejoin': seriesLineWidth >= MAX_MITER_LINEJOIN ? 'round' : 'miter',\n        'stroke-width': seriesLineWidth\n      },\n      container: lineContainer,\n      component: dataSet,\n      label: 'path'\n    });\n\n    // If zline is not present previously, add to _graphics of dataset\n    if (!zLineDummy) {\n      dataSet.addGraphicalElement('zLine', zLine);\n    }\n  }\n}\nexport default WaterFall2DDataset;\n","import columnAnimation from '@fusioncharts/charts/src/dataset/column/index.animation';\n\nexport default {\n  'initial.dataset.waterFall2D': columnAnimation['initial.dataset.column']\n};\n","import LineDataset from '@fusioncharts/charts/src/dataset/line';\nimport {\n  pluck,\n  pluckNumber,\n  toRaphaelColor,\n  getDashStyle,\n  hasTouch,\n  TOUCH_THRESHOLD_PIXELS,\n  CLICK_THRESHOLD_PIXELS,\n  stubFN,\n  fcEach,\n  BLANKSTRING,\n  polyPathToPath\n} from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport kagiAnimation from './index.animation';\nlet POSITION_TOP = 'top',\n  POSITION_BOTTOM = 'bottom',\n  POSITION_MIDDLE = 'middle',\n  POSITION_RIGHT = 'right',\n  ROUND = 'round',\n  UNDEF,\n  EVENTARGS = 'eventArgs',\n  SETROLLOVERATTR = 'setRolloverAttr',\n  SETROLLOUTATTR = 'setRolloutAttr',\n  defined = function (obj) {\n    return obj !== UNDEF && obj !== null;\n  },\n  M = 'M',\n  H = 'H',\n  V = 'V',\n  GUTTER_4 = 4,\n  GUTTER_2 = 2,\n  CENTER = 'center',\n  HTP = hasTouch ? TOUCH_THRESHOLD_PIXELS\n    : CLICK_THRESHOLD_PIXELS,\n  NONE = 'none';\naddDep({\n  name: 'kagiAnimation',\n  type: 'animationRule',\n  extension: kagiAnimation\n});\nclass KagiDataset extends LineDataset {\n  constructor () {\n    super();\n    this.manageSpace = stubFN;\n    this.drawCommonElements = stubFN;\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'kagi';\n  }\n  _parseShadowOptions () {\n    var dataSet = this,\n      chartAttr = dataSet.getFromEnv('chart').getFromEnv('dataSource').chart; // eslint-disable-line good-practices/no-single-usage-variable\n    return {\n      opacity: pluckNumber(chartAttr.showshadow, 1) ? dataSet.config.alpha / 100 : 0\n    };\n  }\n  configureAttributes (datasetJSON) {\n    super.configureAttributes(datasetJSON);\n    var dataSetComponents,\n      datasetObj = this,\n      removeDataArr,\n      chart = datasetObj.getFromEnv('chart'), // eslint-disable-line good-practices/no-single-usage-variable\n      temp = 0,\n      data,\n      catArr = [],\n      series,\n      JSONData,\n      FCChartObj,\n      isRallyInitialised,\n      shiftCounter,\n      reversalValue,\n      reversalPercentage,\n      rallyDashLen,\n      rallyDashGap,\n      declineDashLen,\n      declineDashGap,\n      lastPlotValue,\n      setShowLabel,\n      length,\n      index,\n      fcIndex,\n      fcDataObj,\n      lastShift,\n      prevDataObj,\n      plotValue,\n      dataObj,\n      nextDataValue,\n      valueDifference,\n      dataValue,\n      isRally,\n      lastLow,\n      lastHigh,\n      isMovingUp,\n      isShift,\n      checkValue,\n      t,\n      count = 0,\n      vAlign,\n      // canvasPadding,\n      align;\n\n    dataSetComponents = datasetObj.components;\n    data = dataSetComponents.data;\n    series = datasetObj.config;\n    JSONData = datasetObj.config.JSONData.data;\n    FCChartObj = chart.getFromEnv('dataSource').chart;\n    removeDataArr = dataSetComponents.removeDataArr || (dataSetComponents.removeDataArr = []); // eslint-disable-line good-practices/no-single-usage-variable\n    // First vertical point for shift is yet to be obtained\n    isRallyInitialised = false;\n    // Initialised to one to avoid zero dividing the width of the canvas\n    // (as the case may be) to get the xShiftLength\n    shiftCounter = 0; // eslint-disable-line good-practices/no-single-usage-variable\n    // The value which determines whether to make a horizontal shift\n    // to deal with the next point\n    reversalValue = pluckNumber(FCChartObj.reversalvalue, -1);\n    // The percentage of the range of values, which determines whether\n    // to make a horizontal shift to deal with the next point\n    reversalPercentage = pluckNumber(FCChartObj.reversalpercentage, 5); // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (index = 0; index < data.length; index += 1) {\n      data[index].config.__nullCount = count;\n      if (data[index].config.setValue === null) {\n        removeDataArr.push(data.splice(index, 1)[0]);\n        count++;\n        index -= 1;\n      }\n    }\n    if (data.length) {\n      // Color of line denoting rally\n      series.rallyColor = pluck(FCChartObj.rallycolor, 'FF0000');\n      series.rallyAlpha = pluckNumber(FCChartObj.rallyalpha,\n        FCChartObj.linealpha, 100);\n      // color of line denoting decline\n      series.declineColor = pluck(FCChartObj.declinecolor, '0000FF');\n      series.declineAlpha = pluckNumber(FCChartObj.declinealpha,\n        FCChartObj.linealpha, 100);\n      // Default canvasPadding is 15.\n      series.canvasPadding = pluckNumber(FCChartObj.canvaspadding, 15);\n      // The maximum horizontal shift in percentage of the\n      // available canvas width\n      series.maxHShiftPercent = pluckNumber(FCChartObj.maxhshiftpercent, 10);\n      // effectiveCanvasWidth = canvasWidth - canvasPadding * 2;\n      // Thickness of line denoting rally\n      series.rallyThickness = pluckNumber(FCChartObj.rallythickness,\n        FCChartObj.linethickness, 2);\n      // length of the dash\n      rallyDashLen = pluckNumber(FCChartObj.rallydashlen,\n        FCChartObj.linedashlen, 5);\n      // distance between dash\n      rallyDashGap = pluckNumber(FCChartObj.rallydashgap,\n        FCChartObj.linedashgap, 4);\n\n      // Thickness of line denoting decline\n      series.declineThickness = pluckNumber(FCChartObj.declinethickness,\n        FCChartObj.linethickness, 2);\n      // length of the dash\n      declineDashLen = pluckNumber(FCChartObj.declinedashlen,\n        FCChartObj.linedashlen, 5);\n      // distance between dash\n      declineDashGap = pluckNumber(FCChartObj.declinedashgap,\n        FCChartObj.linedashgap, 4);\n\n      series.lineDashed = {\n        'true': pluckNumber(FCChartObj.rallydashed,\n          FCChartObj.linedashed, 0),\n        'false': pluckNumber(FCChartObj.declinedashed,\n          FCChartObj.linedashed, 0)\n      };\n\n      // Storing dashStyle in series to be use while drawing graph and\n      series.rallyDashed = pluckNumber(FCChartObj.rallydashed,\n        FCChartObj.linedashed, 0) ? getDashStyle(rallyDashLen, rallyDashGap) : NONE;\n      series.declineDashed = pluckNumber(FCChartObj.declinedashed,\n        FCChartObj.linedashed, 0) ? getDashStyle(declineDashLen, declineDashGap) : NONE;\n\n      // canvasPadding to be use by Kagi chart Drawing\n      series.canvasPadding = pluckNumber(FCChartObj.canvaspadding,\n        this.canvasPadding, 15);\n\n      // setting the reversal value\n      reversalValue = (reversalValue > 0)\n        ? reversalValue : reversalPercentage * (series.maxValue - series.minValue) / 100;\n\n      // Initialised by the first data value\n      lastPlotValue = data[0].config.setValue;\n      // Local function to set anchor and value visibility of\n      // unwanted points, after the first point is found to draw\n      // vertical kagi line\n      setShowLabel = function (id, _isRally) {\n        // Initial data value\n        var dataXValue, r = 1,\n          data1Value = data[0].config.setValue;\n        // Looping to check for unwanted points\n        while (r < id) {\n          // Value of point under check\n          dataXValue = data[r].config.setValue;\n          // If current trend is rally\n          if (_isRally) {\n            if (dataXValue <= data1Value) {\n              data[r].config.isDefined = false;\n            }\n            // Else current trend is decline\n          } else {\n            if (dataXValue >= data1Value) {\n              data[r].config.isDefined = false;\n            }\n          }\n          r += 1;\n        }\n        // Setting alignment of value for the first data\n        data[0].config.vAlign = (_isRally) ? POSITION_BOTTOM\n          : POSITION_TOP;\n        data[0].config.align = CENTER;\n      };\n\n      length = JSONData.length;\n      // iterating to set values of properties in data for each respective\n      // point (main algorithm of KagiChart)\n      // loop counter starts from 2 since data for plot 1 is unique\n      for (index = 0, fcIndex = 0; fcIndex < length; fcIndex += 1, index += 1) {\n        fcDataObj = JSONData[fcIndex];\n        // Calculation of vLine based on hShift.\n        if (fcDataObj && fcDataObj.vline) {\n          continue;\n        }\n        dataObj = data[index] && data[index].config;\n        // lastFcDataObj = JSONData[fcIndex];\n        // Special handling for vLines\n        if (lastShift) {\n          lastShift = false;\n          // vLinePosition += 0.5;\n        }\n        dataObj && (dataObj.isDefined = true);\n        if (index && dataObj) {\n          dataObj.isShift = UNDEF;\n\n          prevDataObj = data[index - 1].config;\n          dataObj.vAlign = POSITION_MIDDLE;\n          dataObj.align = POSITION_RIGHT;\n          dataObj.showLabel = false;\n          // initialised to null each time\n          plotValue = null;\n          // data value of plot under current loop\n          dataValue = dataObj.setValue;\n          // data value of previous plot\n          // lastDataValue = data[i-1].y;\n          // data value of next plot\n          nextDataValue = data[index + 1] && data[index + 1].config.setValue;\n          valueDifference = Math.abs(lastPlotValue - dataValue);\n\n          // if current plot is yet render the trend,then care is taken\n          // to make few initial assumptions as algorithm starts with it\n          if (!isRallyInitialised) {\n            // if current plot is higher than the last plotted one\n            // (first data) by significant amount\n            if (dataValue > lastPlotValue && valueDifference > reversalValue) {\n              // is assumed to be true\n              isRally = true;\n              // value of last low point of swing (assumed)\n              lastLow = lastPlotValue;\n              // none assumed\n              lastHigh = null;\n              // kagi rising\n              isMovingUp = true;\n              // first vertical point for shift is obtained\n              isRallyInitialised = true;\n              // call of local function to set visibility false for\n              // anchors and values of unwanted points\n              setShowLabel(index, isRally);\n              // if current plot is lower than the last plotted one\n              // (first data) by significant amount\n            } else if (dataValue < lastPlotValue && valueDifference > reversalValue) {\n              // is assumed to be false\n              isRally = false;\n              // none assumed\n              lastLow = null;\n              // value of last high point of swing (assumed)\n              lastHigh = lastPlotValue;\n              // kagi falling\n              isMovingUp = false;\n              // first vertical point for shift is obtained\n              isRallyInitialised = true;\n              // call of local function to set visibility false for\n              // anchors and values of unwanted points\n              setShowLabel(index, isRally);\n              // else, point under loop is not significant to\n              // draw the first vertical kagi line to\n            } else {\n              // is set to null\n              isRally = null;\n              // vertical shifting direction is set to null\n              isMovingUp = null;\n              // first vertical point for shift is yet to be obtained\n              isRallyInitialised = false;\n            }\n            // trend property for plot 1 is set\n            if (defined(prevDataObj)) {\n              prevDataObj.isRally = isRally;\n            }\n            if (isRally !== null) {\n              // to get the initial horizontal line in trend color\n              // (in case data[1].value = data[2].value=... so on or not)\n              data[0].config.isRally = isRally;\n            }\n            // else, for plot 3 and above, only trend is evaluated\n          } else {\n            // setting trends by concept of Kagi Chart\n            if (dataValue < lastLow && isRally) {\n              isRally = false;\n            } else if (dataValue > lastHigh && !isRally) {\n              isRally = true;\n            }\n            // else isRally remains unchanged\n          }\n\n          // Setting in data for the plot\n          dataObj.isRally = isRally;\n          // To check for having horizontal shift or not,\n          // we need to use the pertinent value\n          if ((isMovingUp && dataValue < lastPlotValue) ||\n                            (!isMovingUp && dataValue > lastPlotValue)) {\n            plotValue = lastPlotValue;\n          }\n          // To find if there is a horizontal shift associated\n          // with this plot\n          checkValue = (plotValue) || dataValue;\n          valueDifference = Math.abs(checkValue - nextDataValue);\n          // if the line is static till now\n          if (isMovingUp === null) {\n            isShift = null;\n            // if the line is rising\n          } else if (isMovingUp) {\n            isShift = (checkValue > nextDataValue && valueDifference >= reversalValue);\n            // else if the line is falling\n          } else {\n            isShift = (checkValue < nextDataValue && valueDifference >= reversalValue);\n          }\n\n          // To get the last extremes preceding the current point\n          // and setting the vertical/horizontal\n          // alignment of the value to be shown for it.\n          if (prevDataObj && prevDataObj.isShift) {\n            if (isMovingUp) {\n              lastLow = lastPlotValue;\n              vAlign = POSITION_BOTTOM;\n            } else if (!isMovingUp) {\n              lastHigh = lastPlotValue;\n              vAlign = POSITION_TOP;\n            }\n            align = CENTER;\n            // looping to get the actual plot corresponding to the\n            // maxima/minima and setting label properties for the same\n            for (t = index; t > 1; t -= 1) {\n              if (data[t].y === lastPlotValue) {\n                data[t].vAlign = vAlign;\n                data[t].align = align;\n                data[t].showLabel = true;\n                // extreme obtained and thus stop looping\n                break;\n              }\n            }\n          }\n          // if there is a horizontal shift, then\n          if (isShift) {\n            // updating counter to have to total number of horizontal\n            // shifts in the total plot.This is vital for calculation\n            // of the length of each horizontal shifts.\n            shiftCounter += 1;\n            // vLinePosition += 0.5;\n            lastShift = true;\n            // updating the flag by reversing the boolean\n            // value of the flag itself\n            isMovingUp = !isMovingUp;\n            // setting in data for the plot, to be used for\n            // drawing the graph\n            dataObj.isShift = true;\n            // updating last plotting value\n            lastPlotValue = checkValue;\n            catArr.push(JSONData[index + dataObj.__nullCount]);\n            temp = datasetObj._appendCategory(temp, index, catArr, 0);\n          } else if ((isMovingUp && dataValue > lastPlotValue) ||\n                            (!isMovingUp && dataValue < lastPlotValue)) {\n            // updating last plotting value\n            lastPlotValue = dataValue;\n            // if cuurent data value is to be skipped for plotting\n          } else {\n            // setting the value to be plotted\n            // (virtually drawing pen stays still due to this)\n            plotValue = lastPlotValue;\n          }\n          // plotValue assigned is either defined or set to null\n          dataObj.plotValue = plotValue;\n          // few local variables are bundled together in an object to be\n          // used later-on to work around a Catch-22 problem\n          dataObj.objParams = {\n            isRally: isRally,\n            lastHigh: lastHigh,\n            lastLow: lastLow,\n            isRallyInitialised: isRallyInitialised\n          };\n        }\n      }\n      // insert if any remaining categories to be appended.\n      datasetObj._appendCategory(temp, index, catArr, 1);\n      // insert the categories before setting the final category.\n      catArr.push(fcDataObj);\n      datasetObj.getFromEnv('xAxis').setTickValues(catArr);\n      series.shiftCount = shiftCounter + 1;\n    }\n  }\n  _appendCategory (tempData, index, catArr, lineposition) {\n    var i,\n      catObj,\n      temp = tempData,\n      catData,\n      refIndex,\n      catOnlyData = this.config.JSONData.catData;\n    if (temp < catOnlyData.length) {\n      for (i = temp; i < catOnlyData.length; i += 1, temp = i) {\n        catObj = catOnlyData[i];\n        catData = catObj.data;\n        refIndex = catObj.index - (i + 1);\n        if (refIndex < index) {\n          catData.lineposition = pluckNumber(catData.lineposition, lineposition);\n        } else if (refIndex > index) {\n          break;\n        }\n        catArr.push(catData);\n      }\n    }\n    return temp;\n  }\n  _getHoveredPlot (chartXVal, chartYVal) {\n    var dataset = this,\n      chartX = chartXVal,\n      chartY = chartYVal,\n      xAxis = dataset.getFromEnv('xAxis'),\n      conf = dataset.config,\n      trackIndex = conf.trackIndex, // eslint-disable-line good-practices/no-single-usage-variable\n      dataStore = dataset.components.data,\n      len = dataStore.length,\n      i,\n      j,\n      index,\n      returnValue,\n      xMin,\n      xMax,\n      pointObjs;\n\n    // getting new chart XY accordint to Translation of axis\n    chartX += xAxis.getTranslation();\n\n    xMin = Math.floor(Math.max(xAxis.getValue(chartX - conf.maxRadius), 0)); // eslint-disable-line good-practices/no-single-usage-variable\n    xMax = Math.ceil(Math.min(xAxis.getValue(chartX + conf.maxRadius), len - 1)); // eslint-disable-line good-practices/no-single-usage-variable\n\n    for (j = xMax; j >= xMin; j--) {\n      pointObjs = trackIndex[j];\n      len = pointObjs && pointObjs.length;\n      // search point objects under current value\n      for (i = len; i >= 0; i--) {\n        index = pointObjs[i];\n        returnValue = dataset.isWithinShape(dataStore[index], index, chartX, chartY);\n        if (returnValue) {\n          return returnValue;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns the clip path for kagi\n   *\n   * @param {any} type type of clip-rect\n   * @memberof KagiDataset\n   */\n  getClip (type) {\n    let canvasConfig = this.getFromEnv('chart').getChildren('canvas')[0].config,\n      clipRect = [\n        canvasConfig.canvasLeft,\n        canvasConfig.canvasTop,\n        0,\n        canvasConfig.canvasTop + canvasConfig.canvasHeight\n      ];\n\n    clipRect[2] += type === 'init' ? 0 : canvasConfig.canvasLeft + canvasConfig.canvasWidth;\n    return clipRect;\n  }\n\n  /**\n   * Parses the plot attributes\n   *\n   * @param {any} pointData\n   * @param {any} index\n   * @memberof KagiDataset\n   */\n  parsePlotAttributes (pointData, index) {\n    let i = index,\n      point = pointData,\n      trackerConfig,\n      dataSet = this,\n      xPos,\n      yPos,\n      eventArgs,\n      dataObj,\n      setRolloutAttr,\n      setRolloverAttr,\n      anchorRadius,\n      hoverEffects,\n      anchorProps = {},\n      symbol,\n      config,\n      visible = dataSet.getState('visible'),\n      attr;\n\n    point = point.config;\n    dataObj = dataSet.components.data[i];\n    config = dataObj.config;\n    trackerConfig = point.trackerConfig = {}; // eslint-disable-line good-practices/no-single-usage-variable\n    hoverEffects = config.hoverEffects;\n    xPos = (dataObj._xPos = dataSet.getFromEnv('xAxis').getPixel(point.plotX));\n    yPos = (dataObj._yPos = point.plotY);\n\n    dataObj._index = point.plotX;\n    anchorProps = config.anchorProps;\n    symbol = anchorProps.symbol; // eslint-disable-line good-practices/no-single-usage-variable\n    point.finalTooltext = point.toolText;\n\n    if (yPos !== UNDEF && !isNaN(yPos) && point.isDefined) {\n      // Storing the event arguments\n      eventArgs = point.eventArgs = point.eventArgs || {};\n\n      // Storing the event arguments\n      Object.assign(eventArgs, {\n        index: i,\n        link: config.setLink,\n        value: config.setValue,\n        displayValue: config.displayValue,\n        categoryLabel: config.label,\n        toolText: point.finalTooltext,\n        id: dataSet.config.userID,\n        datasetIndex: 0,\n        datasetName: dataSet.config.JSONData.seriesname,\n        visible,\n        color: config.color,\n        alpha: config.alpha,\n        anchorBgColor: anchorProps.bgColor,\n        anchorBgAlpha: anchorProps.anchorBgAlpha,\n        anchorAlpha: anchorProps.anchorAlpha,\n        anchorBorderColor: anchorProps.borderColor,\n        anchorBorderThickness: anchorProps.borderThickness,\n        anchorRadius: anchorProps.radius,\n        anchorSides: anchorProps.sides,\n        anchorStartAngle: anchorProps.startAngle,\n        anchorHoverColor: hoverEffects.anchorColor,\n        anchorHoverAlpha: hoverEffects.anchorAlpha,\n        anchorHoverSides: hoverEffects.anchorSides,\n        dashed: config.dashed,\n        valuePosition: config.valuePosition\n      });\n\n      // Hover consmetics\n      setRolloutAttr = setRolloverAttr = {};\n\n      if (anchorProps.imageUrl) {\n        config.anchorImageLoaded = false;\n      }\n      attr = {\n        path: polyPathToPath([symbol[1] || 2, xPos, yPos, anchorProps.radius,\n          anchorProps.startAngle, 0]),\n        fill: toRaphaelColor({\n          color: anchorProps.bgColor,\n          alpha: anchorProps.bgAlpha\n        }),\n        stroke: toRaphaelColor({\n          color: anchorProps.borderColor,\n          alpha: anchorProps.borderAlpha\n        }),\n        'stroke-width': anchorProps.borderThickness,\n        visibility: !anchorProps.radius ? 'hidden' : visible\n      };\n      anchorRadius = Math.max(anchorProps.radius,\n        (hoverEffects && hoverEffects.anchorRadius) || 0, HTP) + anchorProps.borderThickness / 2;\n\n      trackerConfig.trackerRadius = anchorRadius;\n\n      // Parsing cosmectics to be applied when element is hovered on.\n      if (hoverEffects.enabled) {\n        setRolloverAttr = {\n          path: polyPathToPath([hoverEffects.anchorSides || 2,\n            xPos, yPos,\n            hoverEffects.anchorRadius,\n            hoverEffects.startAngle,\n            hoverEffects.dip\n          ]),\n          fill: toRaphaelColor({\n            color: hoverEffects.anchorColor,\n            alpha: hoverEffects.anchorBgAlpha\n          }),\n          stroke: toRaphaelColor({\n            color: hoverEffects.anchorBorderColor,\n            alpha: hoverEffects.anchorBorderAlpha\n          }),\n          'stroke-width': hoverEffects.anchorBorderThickness\n        };\n        setRolloutAttr = {\n          path: polyPathToPath([anchorProps.sides, xPos, yPos,\n            anchorProps.radius, anchorProps.startAngle, 0\n          ]),\n          fill: toRaphaelColor({\n            color: anchorProps.bgColor,\n            alpha: anchorProps.bgAlpha\n          }),\n          stroke: toRaphaelColor({\n            color: anchorProps.borderColor,\n            alpha: anchorProps.borderAlpha\n          }),\n          'stroke-width': anchorProps.borderThickness\n        };\n        // set hover effect on each data set\n        hoverEffects.attrs = {\n          'hoverEnabled': hoverEffects.enabled,\n          'anchorRadius': anchorProps.radius,\n          'anchorHoverRadius': hoverEffects.anchorRadius\n        };\n\n        hoverEffects.attrs[SETROLLOVERATTR] = setRolloverAttr;\n        hoverEffects.attrs[SETROLLOUTATTR] = setRolloutAttr;\n\n        anchorProps.isAnchorHoverRadius = hoverEffects.attrs.anchorRadius;\n      }\n    }\n\n    point.props = {\n      element: {\n        attr: attr\n      }\n    };\n  }\n\n  /**\n   * Parses label attributes and position\n   *\n   * @param {any} dataObj\n   * @param {any} index\n   * @memberof KagiDataset\n   */\n  parseLabelAttributes (dataObj, index) {\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      style = chart.config.dataLabelStyle,\n      displayValue = BLANKSTRING,\n      rotateValues = chartConfig.rotatevalues ? 270 : 0,\n      canvasTop = chartConfig.canvasTop,\n      canvasHeight = chartConfig.canvasHeight, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasBottom = canvasTop + canvasHeight,\n      valuePadding,\n      bBoxObj,\n      graphic,\n      textHeight,\n      origTextHeight,\n      textY,\n      textX,\n      yAdjust,\n      nextPoint = {}, // eslint-disable-line good-practices/no-single-usage-variable\n      prevPoint = {},\n      config,\n      decidingDimention,\n      xPos,\n      yPos,\n      value,\n      anchorRadius,\n      i = index,\n      plotLabelStyle,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      setValue,\n      attr;\n\n    config = dataObj && dataObj.config;\n    setValue = config && config.setValue;\n\n    if (dataObj === UNDEF || setValue === UNDEF || setValue === null || config.labelSkip === true) {\n      config && (delete config.labelSkip);\n      return;\n    }\n\n    if (index > 0) {\n      prevPoint = {\n        x: dataSet.components.data[i - 1]._xPos,\n        y: dataSet.components.data[i - 1]._yPos\n      };\n    }\n\n    if (index < len - 1) {\n      nextPoint = {\n        x: dataSet.components.data[i + 1]._xPos,\n        y: dataSet.components.data[i + 1]._yPos\n      };\n    }\n\n    graphic = dataObj.graphics;\n    yPos = dataObj._yPos || dataObj.config._Py;\n    xPos = dataObj._xPos || dataObj.config._Px; // eslint-disable-line good-practices/no-single-usage-variable\n    anchorRadius = graphic.element ? (graphic.image && // eslint-disable-line good-practices/no-single-usage-variable\n                  graphic.element.attr('height') * 0.5) || config.anchorProps.radius - 3 : 0;\n\n    valuePadding = config.valuePadding + GUTTER_2 + anchorRadius;\n\n    displayValue = config.displayValue;\n    // Drawing label only if displayvalue is defined and not blank and setValue is not null\n    if (defined(displayValue) && displayValue !== '' && value !== null && config.showValue) {\n      plotLabelStyle = config.dataLabelStyle;\n      attr = {\n        text: displayValue,\n        fill: plotLabelStyle.color,\n        'text-bound': [plotLabelStyle.backgroundColor, plotLabelStyle.borderColor,\n          style.borderThickness, style.borderPadding,\n          style.borderRadius, style.borderDash\n        ]\n      };\n\n      bBoxObj = dataSet.getFromEnv('smartLabel').getOriSize(displayValue);\n\n      if (rotateValues) {\n        // If rotated values we use the width of\n        // the text as height\n\n        config._state = {\n          // If label is already rotated then we take the width as labelWidth\n          labelWidth: bBoxObj.height,\n          labelHeight: bBoxObj.width\n        };\n        config._rotated = true;\n      } else {\n        config._state = {\n          // If label is already rotated then we take the height as labelWidth\n          labelWidth: bBoxObj.width,\n          labelHeight: bBoxObj.height\n        };\n        config._rotated = false;\n      }\n\n      // Calculating the total text height\n      textHeight = origTextHeight = (rotateValues ? bBoxObj.width\n        : bBoxObj.height);\n      textHeight += valuePadding;\n      yAdjust = (origTextHeight * 0.5) + valuePadding;\n      textY = yPos;\n      textX = xPos;\n      textHeight = textHeight + GUTTER_4;\n      decidingDimention = Number(rotateValues) >= 1 ? bBoxObj.height : bBoxObj.width;\n      config._valueBelowPoint = 0;\n\n      // Positioning of data labels\n      if (nextPoint.y > textY) {\n        // nextPoint is below than current point\n        if (prevPoint.y < textY) {\n          // place aside anchor if not enough space is available in bottom\n          textX -= (valuePadding + 3 + decidingDimention * 0.5);\n        } else {\n          // previous point is below current point\n          if (yPos - textHeight < canvasTop) {\n            // place aside anchor if not enough space is available on top\n            textX -= (valuePadding + 3 + decidingDimention * 0.5);\n            textY = canvasTop + textHeight / 2;\n          } else {\n            // else place vertically above anchor\n            textY -= yAdjust;\n          }\n        }\n      } else {\n        // nextpoint is above the current point\n        if (prevPoint.y > textY) {\n          // place aside anchor if not enough space is available in bottom\n          textX -= (valuePadding + 3 + decidingDimention * 0.5);\n        } else {\n          // previous point is above current point\n          if (yPos + textHeight > canvasBottom) {\n            // place aside anchor if not enough space is available in bottom\n            textX -= (valuePadding + 3 + decidingDimention * 0.5);\n            textY = canvasBottom - textHeight / 2;\n          } else {\n            // else place vertically below anchor\n            textY += yAdjust + GUTTER_2;\n            config._valueBelowPoint = 1;\n          }\n        }\n      }\n\n      attr.x = textX;\n      attr.y = textY;\n    }\n\n    config.props = config.props || {};\n    config.props.label = {\n      attr: attr\n    };\n  }\n  /**\n   * Parses anchor position and cosmetics during post space management\n   *\n   * @returns {any}\n   * @memberof KagiDataset\n   */\n  allocatePosition () {\n    let i,\n      dataSet = this,\n      conf = dataSet.config,\n      setDataArr = dataSet.components.data,\n      dataSetLen = setDataArr && setDataArr.length, // eslint-disable-line good-practices/no-single-usage-variable\n      xAxis = dataSet.getFromEnv('xAxis'),\n      setValue,\n      dataStore = dataSet.components.data,\n      dataObj,\n      xAxisZeroPos = xAxis.getPixel(0),\n      xAxisFirstPos = xAxis.getPixel(1), // eslint-disable-line good-practices/no-single-usage-variable\n      pointDistance = xAxisFirstPos - xAxisZeroPos,\n      thickness = {\n        'true': conf.rallyThickness,\n        'false': conf.declineThickness\n      },\n      rallyPath,\n      declinePath,\n      xValue = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      plotX = xAxis.getPixel(xValue),\n      isRally = setDataArr[0] && !!setDataArr[0].isRally,\n      nextPointIsRally,\n      startX = xAxisZeroPos - (pointDistance / 2),\n      plotY,\n      crispY,\n      nextPoint,\n      path;\n\n    conf.imagesLoaded = 0;\n    if (!setDataArr.length) {\n      return;\n    }\n\n    rallyPath = conf.rallyPath = [];\n    declinePath = conf.declinePath = [];\n    // Set components.data to blank array if dataStore is not present\n    dataStore = dataSet.components.data = dataStore || [];\n\n    // Special situation for first null data.\n    if (!setDataArr[0].config.setValue) {\n      for (i = 1; i < dataSetLen; i += 1) {\n        setValue = setDataArr[i].config.setValue;\n        if (setValue) {\n          // Get the first valid value.\n          plotY = setDataArr[i].config.plotY;\n          break;\n        }\n      }\n    } else {\n      plotY = setDataArr[0].config.plotY;\n    }\n    isRally = !!setDataArr[0].config.isRally;\n    // drawing starts with an initial half horizontal-shift\n    crispY = Math.round(plotY) + (thickness[isRally] % 2 / 2);\n    if (isRally) {\n      rallyPath.push(M, startX, crispY, H, plotX);\n    } else {\n      declinePath.push(M, startX, crispY, H, plotX);\n    }\n\n    fcEach(setDataArr, function (pointData, ii) {\n      let point = pointData;\n      point = point.config;\n      dataObj = dataStore[ii];\n      setValue = dataObj.config.setValue;\n      // looping to draw the plots\n      nextPoint = (setDataArr[ii + 1] && setDataArr[ii + 1].config) || {};\n      if (nextPoint) {\n        path = [M, plotX, plotY];\n        isRally = point.isRally;\n        // if there is a shift corresponding to this point\n        if (point.isShift) {\n          plotX += pointDistance;\n          plotY = point.graphY;\n          path.push(H, plotX);\n          path[2] = Math.round(path[2]) +\n                            (thickness[isRally] % 2 / 2);\n          path = path.toString();\n          // draw the path\n          if (isRally) {\n            rallyPath.push(path);\n          } else {\n            declinePath.push(path);\n          }\n          path = [M, plotX, plotY];\n        }\n        // if there is a change in trend between the current and\n        // the next points\n        if (nextPoint.isChanged) {\n          plotY = nextPoint.ty;\n          path.push(V, plotY);\n          path[1] = Math.round(path[1]) + (thickness[!!isRally] % 2 / 2);\n          path = path.toString();\n          if (isRally) {\n            rallyPath.push(path);\n          } else {\n            declinePath.push(path);\n          }\n          path = [M, plotX, plotY];\n        }\n\n        nextPointIsRally = nextPoint.isRally;\n        // TODO: If path contains move to and line to at the same point line is not visible in\n        //       native VML brewers need to remove this code when this issue in fixed in core.\n\n        if (nextPoint.graphY !== path[2] && nextPoint.graphY !== UNDEF) {\n          path.push(V, nextPoint.graphY);\n          path[1] = Math.round(path[1]) + (thickness[!!nextPointIsRally] % 2 / 2);\n          path = path.toString();\n          if (nextPointIsRally) {\n            rallyPath.push(path);\n          } else {\n            declinePath.push(path);\n          }\n        }\n        // updating value\n        nextPoint.graphY && (plotY = nextPoint.graphY);\n      }\n      dataSet.parsePlotAttributes(dataObj, ii);\n    });\n\n    for (i = 0; i < setDataArr.length; i++) {\n      dataSet.parseLabelAttributes(dataStore[i], i);\n    }\n  }\n  /**\n   * Draw the plots of kagi chart\n   *\n   * @memberof KagiDataset\n   */\n  drawPlots () {\n    let graphics,\n      dataSet = this,\n      datasetGraphics = dataSet.getGraphicalElement(),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      conf = dataSet.config,\n      // temp hardcoded.\n      trackIndex = conf.trackIndex = {},\n      setDataArr = dataSet.components.data,\n      yPos,\n      setElement,\n      dataStore = dataSet.components.data, // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj,\n      hoverEffects,\n      shadow = conf.shadow,\n      anchorProps = {},\n      config,\n      rallyThickness = conf.rallyThickness,\n      declineThickness = conf.declineThickness,\n      rallyAttr = {\n        stroke: toRaphaelColor({\n          color: conf.rallyColor,\n          alpha: conf.rallyAlpha\n        }),\n        'stroke-linecap': ROUND,\n        'stroke-linejoin': ROUND,\n        'stroke-width': rallyThickness,\n        'stroke-dasharray': conf.rallyDashed\n      },\n      declineAttr = {\n        stroke: toRaphaelColor({\n          color: conf.declineColor,\n          alpha: conf.declineAlpha\n        }),\n        'stroke-linecap': ROUND,\n        'stroke-linejoin': ROUND,\n        'stroke-width': declineThickness,\n        'stroke-dasharray': conf.declineDashed\n      },\n      rallyElemDummy = datasetGraphics.rallyElem,\n      rallyElem,\n      declineElemDummy = datasetGraphics.declineElem,\n      declineElem,\n      attr,\n      commonElemGroup = dataSet.getContainer('commonElemsGroup'),\n      plotGroup = dataSet.getContainer('plotGroup'), // eslint-disable-line good-practices/no-single-usage-variable\n      shadowGroup = dataSet.getContainer('shadowGroup'),\n      imageElement;\n\n    // save the world if no valid data is there.\n    if (!setDataArr.length) {\n      rallyElem && rallyElem.hide();\n      declineElem && declineElem.hide();\n      return;\n    }\n    rallyElem && rallyElem.show();\n    declineElem && declineElem.show();\n\n    fcEach(setDataArr, function (pointData, i) {\n      let point = pointData;\n      point = point.config;\n      dataObj = dataStore[i];\n      config = dataObj.config;\n      graphics = dataObj.graphics;\n      imageElement = graphics.image;\n      hoverEffects = config.hoverEffects;\n      yPos = dataObj._yPos;\n\n      if (!trackIndex[point.plotX]) {\n        trackIndex[point.plotX] = [];\n      }\n      trackIndex[point.plotX].push(i);\n      dataObj._index = point.plotX;\n      anchorProps = config.anchorProps;\n\n      if (yPos !== UNDEF && !isNaN(yPos) && point.isDefined) {\n        if (anchorProps.imageUrl) {\n          dataSet.drawAnchorImage(dataObj);\n        } else {\n          imageElement && imageElement.hide();\n          setElement = graphics.element;\n          attr = point.props.element.attr;\n\n          // create/reuse setElement\n          setElement = graphics.element = animationManager.setAnimation({\n            el: setElement || 'path',\n            attr: attr,\n            container: plotGroup,\n            component: dataSet,\n            label: 'anchor'\n          });\n          // Set properties to the data of element\n          setElement.show()\n            .shadow(anchorProps.shadow, shadowGroup)\n            .data('anchorRadius', anchorProps.radius)\n            .data('anchorHoverRadius', hoverEffects.anchorRadius)\n            .data('hoverEnabled', hoverEffects.enabled)\n            .data(EVENTARGS, point.eventArgs);\n        }\n\n        // Parsing cosmectics to be applied when element is hovered on.\n        if (hoverEffects.enabled) {\n          setElement && setElement\n            .data('anchorRadius', anchorProps.radius)\n            .data('anchorHoverRadius', hoverEffects.anchorRadius)\n            .data('hoverEnabled', hoverEffects.enabled)\n            .data(SETROLLOVERATTR, hoverEffects.attrs[SETROLLOVERATTR])\n            .data(SETROLLOUTATTR, hoverEffects.attrs[SETROLLOUTATTR])\n            .data(EVENTARGS, point.eventArgs);\n        }\n      } else {\n        graphics.element && graphics.element.hide();\n        imageElement && imageElement.hide();\n      }\n    });\n\n    // Create/reuse rally element\n    rallyAttr.path = conf.rallyPath;\n    rallyElem = animationManager.setAnimation({\n      el: rallyElemDummy || 'path',\n      attr: rallyAttr,\n      container: commonElemGroup,\n      component: dataSet,\n      label: 'line'\n    });\n    rallyElem\n      .shadow(rallyThickness && shadow, shadowGroup);\n    if (!rallyElemDummy) {\n      dataSet.addGraphicalElement('rallyElem', rallyElem);\n    }\n\n    // create/reuse decline element\n    declineAttr.path = conf.declinePath;\n    declineElem = animationManager.setAnimation({\n      el: declineElemDummy || 'path',\n      attr: declineAttr,\n      container: commonElemGroup,\n      component: dataSet,\n      label: 'line'\n    });\n    declineElem\n      .shadow(declineThickness && shadow, shadowGroup);\n    if (!declineElemDummy) {\n      dataSet.addGraphicalElement('declineElem', declineElem);\n    }\n  }\n}\nexport default KagiDataset;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\nexport default {\n  '*.dataset.kagi': lineAnimation['*.dataset.line']\n};\n","import Waterfall2d from '@fusioncharts/powercharts/src/chart/waterfall2d';\nexport default Waterfall2d;\n","import Selectscatter from '@fusioncharts/powercharts/src/chart/selectscatter';\nexport default Selectscatter;\n","import {\n  getValidValue,\n  toRaphaelColor,\n  isIE,\n  extend2,\n  pluck,\n  pluckNumber,\n  hasSVG\n} from '@fusioncharts/core/src/lib';\nimport ScatterBase from '@fusioncharts/charts/src/chart/_internal/scatterbase';\nimport SelectScatterDataset from '../../dataset/selectscatter';\nimport { getDep } from '@fusioncharts/core/src/dependency-manager';\nimport { submitData } from '../_internal/editable-charts';\nimport raphaelShapesButton from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.button';\n\nlet Raphael = getDep('redraphael', 'plugin'),\n  UNDEF,\n  COMMA = ',',\n  configStr = 'config',\n  TRACKER_FILL = 'rgba(192,192,192,' + (isIE ? 0.002 : 0.000001) + ')',\n  VISIBLE = 'visible',\n  HIDDEN = 'hidden',\n  ROUND = 'round',\n  POINTER = 'pointer',\n  SELECTSCATTER = 'selectScatter',\n  resizeInnerSymbolColor = '#999999',\n  resizeOuterSymbolColor = '#777777',\n  NULLSTR = 'null',\n  closeButtonRadius = 6,\n  trackerRadius = 12,\n  deg2rad = Math.PI / 180,\n  checkObjectLength = (item) => {\n    return Object.keys(item).length;\n  },\n  getArcPath = function (endX, endY, rX, rY, isClockWise, isLargeArc) {\n    return ['A', rX, rY, 0, isLargeArc, isClockWise, endX, endY];\n  },\n  M = 'M',\n  L = 'L',\n  Z = 'Z',\n  t = 't';\n\n// Resolve dependency to draw button shape\nraphaelShapesButton(Raphael);\n\nfunction createSelectionBox (event) {\n  var chart = event.chart,\n    paper = chart.getFromEnv('paper'),\n    chartConfig = chart.config,\n    yAxis = chart.getChildren('yAxis')[0],\n    xAxis = chart.getChildren('xAxis')[0],\n    x = event.selectionLeft,\n    y = event.selectionTop,\n    width = event.selectionWidth,\n    height = event.selectionHeight,\n    x2 = x + width,\n    y2 = y + height,\n    TRACKER_WIDTH = 12,\n    TRACKER_HALF_WIDTH = TRACKER_WIDTH * 0.5,\n    cornerSymbolRadius = 15,\n    isSmall = width > cornerSymbolRadius &&\n                height > cornerSymbolRadius,\n    selectEleObj = {\n      resizeEleRadius: cornerSymbolRadius,\n      canvasTop: chartConfig.canvasTop,\n      canvasRight: chartConfig.canvasLeft + chartConfig.canvasWidth,\n      canvasLeft: chartConfig.canvasLeft,\n      canvasBottom: chartConfig.canvasTop + chartConfig.canvasHeight\n    },\n    selectEleArr = chartConfig._selectEleArr || (chartConfig._selectEleArr = []),\n    selectBoxG;\n\n  // var TRACKER_FILL = 'rgba(255,0,0,0.3)';\n\n  selectEleObj.index = selectEleArr.length;\n  selectEleObj.id = 'SELECT_' + selectEleObj.index;\n\n  selectEleObj.selectBoxG = selectBoxG = paper.group('selection-box',\n    chart.getChildContainer('trackerGroup')).toFront();\n\n  // Drawing the main box element\n  selectEleObj.selectBoxTracker = paper.rect(x, y, width, height, selectBoxG)\n    .attr({\n      'stroke-width': 1,\n      stroke: toRaphaelColor(chartConfig.selectBorderColor),\n      fill: chartConfig.selectFillColor\n    })\n    .css({\n      cursor: 'move'\n    });\n  selectEleObj.selectBoxTracker.node._isTrackerElem = true;\n\n  selectEleObj.selectBoxTracker.data(configStr, {\n    position: 6, // MOVE\n    selectEleObj: selectEleObj,\n    chart: chart,\n    xChange: true,\n    yChange: true\n  });\n\n  // Draw top tracker element\n  selectEleObj.topTracker = paper.rect(x, y -\n            TRACKER_HALF_WIDTH, width, TRACKER_WIDTH, selectBoxG)\n    .attr({\n      'stroke-width': 0,\n      fill: TRACKER_FILL\n    })\n    .css('cursor', (hasSVG && 'ns-resize') || 'n-resize');\n  selectEleObj.topTracker.node._isTrackerElem = true;\n  selectEleObj.topTracker.data(configStr, {\n    position: 1, // TOP\n    selectEleObj: selectEleObj,\n    yChange: true,\n    chart: chart\n  });\n\n  // Draw right tracker element\n  selectEleObj.rightTracker = paper.rect(x + width -\n            TRACKER_HALF_WIDTH, y, TRACKER_WIDTH, height, selectBoxG)\n    .attr({\n      'stroke-width': 0,\n      fill: TRACKER_FILL\n    })\n    .css('cursor', (hasSVG && 'ew-resize') || 'w-resize');\n  selectEleObj.rightTracker.node._isTrackerElem = true;\n  selectEleObj.rightTracker.data(configStr, {\n    position: 2, // RIGHT\n    chart: chart,\n    selectEleObj: selectEleObj,\n    xChange: true\n  });\n\n  // Draw bottom tracker element\n  selectEleObj.bottomTracker = paper.rect(x, y + height -\n            TRACKER_HALF_WIDTH, width, TRACKER_WIDTH, selectBoxG)\n    .attr({\n      'stroke-width': 0,\n      fill: TRACKER_FILL\n    })\n    .css('cursor', (hasSVG && 'ns-resize') || 'n-resize');\n  selectEleObj.bottomTracker.node._isTrackerElem = true;\n  selectEleObj.bottomTracker.data(configStr, {\n    position: 3, // BOTTOM\n    chart: chart,\n    selectEleObj: selectEleObj,\n    yChange: true\n  });\n\n  // Draw left tracker element\n  selectEleObj.leftTracker = paper.rect(x - TRACKER_HALF_WIDTH, y,\n    TRACKER_WIDTH, height, selectBoxG)\n    .attr({\n      'stroke-width': 0,\n      fill: TRACKER_FILL\n    })\n    .css('cursor', (hasSVG && 'ew-resize') || 'e-resize');\n  selectEleObj.leftTracker.node._isTrackerElem = true;\n  selectEleObj.leftTracker.data(configStr, {\n    position: 4, // LEFT\n    chart: chart,\n    selectEleObj: selectEleObj,\n    xChange: true\n  });\n\n  selectEleObj.cornerInnerSymbol = paper.symbol('resizeIcon', 0, 0,\n    cornerSymbolRadius, selectBoxG)\n    .attr({\n      transform: t + x2 + COMMA + y2,\n      'stroke-width': 1,\n      visibility: isSmall ? VISIBLE : HIDDEN,\n      stroke: resizeInnerSymbolColor\n    });\n  selectEleObj.cornerInnerSymbol.node._isTrackerElem = true;\n\n  selectEleObj.cornerOuterSymbol = paper.symbol('resizeIcon', 0, 0, -cornerSymbolRadius * 0.8, selectBoxG)\n    .attr({\n      transform: t + x2 + COMMA + y2,\n      strokeWidth: 1,\n      visibility: !isSmall ? VISIBLE : HIDDEN,\n      stroke: resizeOuterSymbolColor\n    });\n  selectEleObj.cornerOuterSymbol.node._isTrackerElem = true;\n\n  selectEleObj.resizeTracker = paper.circle(x2, y2, trackerRadius, selectBoxG)\n    .attr({\n      'stroke-width': 1,\n      stroke: TRACKER_FILL,\n      fill: TRACKER_FILL\n    })\n    .css('cursor', (hasSVG && 'nwse-resize') || 'nw-resize');\n  selectEleObj.resizeTracker.node._isTrackerElem = true;\n  selectEleObj.resizeTracker.data(configStr, {\n    position: 5, // Corner\n    chart: chart,\n    selectEleObj: selectEleObj,\n    yChange: true,\n    xChange: true\n  });\n\n  selectEleObj.closeButton = paper.symbol('closeIcon', 0, 0, closeButtonRadius, selectBoxG)\n    .attr({\n      transform: 't' + x2 + COMMA + y,\n      'stroke-width': 2,\n      stroke: chartConfig.selectionCancelButtonBorderColor,\n      fill: chartConfig.selectionCancelButtonFillColor,\n      'stroke-linecap': ROUND,\n      'stroke-linejoin': ROUND\n    })\n    .css({\n      cursor: POINTER,\n      _cursor: 'hand'\n    })\n    .on('fc-click', function () { // Delete the selection\n      chart.deleteSelection(this, chart);\n    });\n  selectEleObj.closeButton.node._isTrackerElem = true;\n  selectEleObj.closeButton.data(configStr, {\n    chart: chart,\n    index: selectEleObj.index\n  });\n\n  // Previously wrong calculations were done. Fixed it.\n  selectEleObj.startX = xAxis.getValue(x);\n  selectEleObj.startY = yAxis.getValue(y);\n  selectEleObj.endX = xAxis.getValue(x2);\n  selectEleObj.endY = yAxis.getValue(y2);\n  selectEleObj.isVisible = true;\n\n  selectEleArr.push(selectEleObj);\n  chart.bindDragEvent(selectEleObj);\n}\n\nfunction deleteSelection (ele, chart) {\n  var index = ele.data(configStr).index, // eslint-disable-line good-practices/no-single-usage-variable\n    selectEleArr = chart.config._selectEleArr,\n    selectEleObj,\n    selectEleItem,\n    xAxis = chart.getChildren('xAxis')[0],\n    yAxis = chart.getChildren('yAxis')[0],\n    items,\n    bBox,\n    eventArgs;\n  selectEleObj = selectEleArr.find(function (item) {\n    return item.index === index;\n  });\n  bBox = selectEleObj.selectBoxTracker.getBBox();\n  eventArgs = { // eslint-disable-line good-practices/no-single-usage-variable\n    selectionLeft: bBox.x,\n    selectionTop: bBox.y,\n    selectionWidth: bBox.width,\n    selectionHeight: bBox.height,\n    startXValue: xAxis.getValue(bBox.x, 1),\n    startYValue: yAxis.getValue(bBox.y, 1),\n    endXValue: xAxis.getValue(bBox.x + bBox.width, 1),\n    endYValue: yAxis.getValue(bBox.y + bBox.height, 1),\n    data: chart.getCollatedData(),\n    id: selectEleObj.id\n  };\n\n  for (items in selectEleObj) {\n    if (selectEleObj.hasOwnProperty(items)) {\n      selectEleItem = selectEleObj[items];\n      selectEleItem.remove && selectEleItem.remove();\n      delete selectEleObj[items];\n    }\n  }\n  // splice out the last removed slection box\n  selectEleArr = selectEleArr.filter(checkObjectLength);\n  /**\n   * This event is raised when the selection of a SelectScatter chart is removed. This happens when one\n   * clicks the close button on a selection that one has made on the chart.\n   *\n   * @event FusionCharts#selectionRemoved\n   * @group chart-powercharts:selectscatter\n   *\n   * @param {Object} data - This returns the subset of data that was selected.\n   */\n  chart.fireChartInstanceEvent('selectionRemoved', eventArgs);\n}\n\nRaphael.addSymbol({\n  resizeIcon: function (xVal, yVal, rad) {\n    var\n      radius = rad,\n      x = xVal,\n      y = yVal,\n      LINE_GAP = pluckNumber(radius, 15) / 3,\n      LINE_DIS = 3,\n      paths = [],\n      i;\n\n    if (LINE_GAP < 0) {\n      LINE_GAP = -LINE_GAP;\n      radius = -radius;\n      x += radius - LINE_GAP / 2;\n      y += radius - LINE_GAP / 2;\n    }\n\n    for (i = 3; i > 0; i -= 1) {\n      paths.push(M, x - LINE_GAP * i, y - LINE_DIS,\n        L, x - LINE_DIS, y - LINE_GAP * i);\n    }\n    return paths;\n  },\n  closeIcon: function (x, y, r) {\n    var\n      icoX = x,\n      icoY = y,\n      rad = r * 1.3,\n      startAngle = 43 * deg2rad,\n      // to prevent cos and sin of start and end from becoming\n      // equal on 360 arcs\n      endAngle = 48 * deg2rad,\n      startX = icoX + rad * Math.cos(startAngle), // eslint-disable-line good-practices/no-single-usage-variable\n      startY = icoY + rad * Math.sin(startAngle), // eslint-disable-line good-practices/no-single-usage-variable\n      endX = icoX + rad * Math.cos(endAngle), // eslint-disable-line good-practices/no-single-usage-variable\n      endY = icoY + rad * Math.sin(endAngle), // eslint-disable-line good-practices/no-single-usage-variable\n      paths,\n      r1 = 0.71 * (r - 2), // (r - 2) * 0.5,\n      r2 = 0.71 * (r - 2), // (r - 2) * 0.87,\n\n      arcPath = getArcPath(endX, endY, rad, rad, 0, 1); // eslint-disable-line good-practices/no-single-usage-variable\n\n    paths = [M, startX, startY];\n    paths = paths.concat(arcPath);\n    paths = paths.concat([\n      M, x + r1, y - r2,\n      L, x - r1, y + r2,\n      M, x - r1, y - r2,\n      L, x + r1, y + r2\n    ]);\n\n    return paths;\n  },\n  configureIcon: function (x, y, rVal) {\n    var k = 0.5,\n      r = rVal - 1,\n      l = 0.25,\n      r1 = r * 0.71,\n      r2 = (r + 2) * 0.71,\n      x1 = x - r,\n      y1 = y - r,\n      x2 = x + r,\n      y2 = y + r,\n      x3 = x + k,\n      y3 = y + k,\n      x4 = x - k,\n      y4 = y - k,\n\n      x5 = x1 - 2,\n      y5 = y1 - 2,\n      x6 = x2 + 2,\n      y6 = y2 + 2,\n      x7 = x + r1,\n      y7 = y + r1,\n      x8 = x - r1,\n      y8 = y - r1,\n      x9 = x + r2,\n      y9 = y + r2,\n      x10 = x - r2,\n      y10 = y - r2,\n      paths;\n    // eslint-disable-next-line good-practices/no-single-usage-variable\n    paths = [M, x1, y3, L, x5, y3, x5, y4, x1, y4,\n      x8 - l, y8 + l, x10 - l, y10 + l, x10 + l, y10 - l, x8 + l, y8 - l,\n      x4, y1, x4, y5, x3, y5, x3, y1,\n      x7 - l, y8 - l, x9 - l, y10 - l, x9 + l, y10 + l, x7 + l, y8 + l,\n      x2, y4, x6, y4, x6, y3, x2, y3,\n      x7 + l, y7 - l, x9 + l, y9 - l, x9 - l, y9 + l, x7 - l, y7 + l,\n      x3, y2, x3, y6, x4, y6, x4, y2,\n      x8 + l, y7 + l, x10 + l, y9 + l, x10 - l, y9 - l, x8 - l, y7 - l, Z\n    ];\n    return paths;\n  },\n  axisIcon: function (x, y, rVal) {\n    var\n      r = rVal - 1,\n      r1 = r * 0.33,\n      r2 = r / 2,\n      x1 = x - r,\n      y1 = y - r,\n      x2 = x + r2,\n      y2 = y + r,\n      x3 = x - r2,\n      y3 = y + r1,\n      y4 = y - r1,\n      paths;\n    // eslint-disable-next-line good-practices/no-single-usage-variable\n    paths = [M, x1, y1, L, x2, y1, x2, y2, x1, y2, M, x3, y3, L, x2, y3,\n      M, x3, y4, L, x2, y4\n    ];\n    return paths;\n  },\n  loggerIcon: function (xVal, yVal, rVal) {\n    var\n      r = rVal - 1,\n      y = yVal - r,\n      x = xVal - r,\n      r2 = r * 2, // eslint-disable-line good-practices/no-single-usage-variable\n      x1 = x + r2,\n      x2 = x + 2,\n      x3 = x1 - 2,\n      y1 = y + 2,\n      y2 = y1 + r,\n      y3 = y2 + 2,\n      paths;\n    // eslint-disable-next-line good-practices/no-single-usage-variable\n    paths = [M, x, y, L, x1, y, x1, y1, x3, y1, x3, y2, x1, y2, x1, y3,\n      x, y3, x, y2, x2, y2, x2, y1, x, y1, x, y\n    ];\n    return paths;\n  }\n});\n\nclass SelectScatter extends ScatterBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'SelectScatter';\n  }\n\n  /**\n   * Parse the chart attributes and store in chart's config\n   * @param {Object} dataObj User input json\n   */\n  parseChartAttr (dataObj) {\n    super.parseChartAttr(dataObj);\n    this.config.formBtnTitle = pluck(\n      dataObj.chart.submittext,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE formbtntitle parsing after two releases from 3.13.0\n      dataObj.chart.formbtntitle,\n      'Submit'\n    );\n    this.config.restoreBtnTitle = pluck(\n      dataObj.chart.restoretext,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE restorebtntitle parsing after two releases from 3.13.0\n      dataObj.chart.restorebtntitle,\n      'Restore'\n    );\n  }\n\n  constructor () {\n    super();\n    this.isXY = true;\n\n    this.defaultZeroPlaneHighlighted = false;\n    this.eiMethods = {\n      // eslint-disable-next-line good-practices/no-function-dependency\n      getData: function (format) {\n        var apiInstance = this.apiInstance;\n        return apiInstance && apiInstance.getData(format);\n      },\n      // eslint-disable-next-line good-practices/no-function-dependency\n      restoreData: function () {\n        var apiInstance = this.apiInstance;\n        return apiInstance && apiInstance.restoreData();\n      },\n      // eslint-disable-next-line good-practices/no-function-dependency\n      submitData: function () {\n        var apiInstance = this.apiInstance;\n        return apiInstance && apiInstance.submitData();\n      }\n    };\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'SelectScatter';\n  }\n\n  /**\n   * Configures and parses chart attributes.\n   *\n   * @param {any} dataObj json data\n   * @memberof SelectScatter\n   */\n  configureAttributes (dataObj) {\n    var iapi = this,\n      chartConfig = iapi.getFromEnv('chart').config,\n      chartAttr = iapi.getFromEnv('dataSource').chart || {};\n\n    chartConfig.formAction = getValidValue(chartAttr.formaction);\n    chartConfig.enableSubmit = pluckNumber(\n      chartAttr.enablesubmit,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE showformbtn parsing after two releases from 3.13.0\n      chartAttr.showformbtn,\n      1\n    ) && chartConfig.formAction;\n    chartConfig.enableRestore = pluckNumber(\n      chartAttr.enablerestore,\n      /**\n       * @deprecated since 3.13.0.\n       */\n      // TODO: REMOVE showrestorebtn parsing after two releases from 3.13.0\n      chartAttr.showrestorebtn,\n      1\n    );\n    super.configureAttributes(dataObj);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.hasLegend = true;\n    config.defaultDatasetType = SELECTSCATTER;\n    config.allowreversexaxis = true;\n    config.enablemousetracking = true;\n  }\n\n  attachMenuButtons () {\n    super.attachMenuButtons();\n    var iapi = this,\n      chartConfig = iapi.getFromEnv('chartConfig'),\n      toolbar = iapi.getFromEnv('toolbar'),\n      hamburgerMenu = toolbar.getChild(`hamburgerMenu-${toolbar.getId()}-${iapi.getId()}-0`), // eslint-disable-line good-practices/no-single-usage-variable\n      list = [],\n      tempObj;\n\n    chartConfig.enableRestore && list.push({\n      name: chartConfig.restoreBtnTitle,\n      handler: function () {\n        iapi.restoreData();\n      },\n      action: 'click'\n    });\n\n    if (chartConfig.enableSubmit) {\n      tempObj = {\n        name: chartConfig.formBtnTitle,\n        handler: function () {\n          submitData.call(iapi);\n        },\n        action: 'click'\n      };\n      list.push(tempObj);\n    }\n\n    list.length > 0 && hamburgerMenu.appendInMenu(list);\n  }\n\n  getData (format) {\n    // create a two dimensional array as given in the docs\n    var iapi = this,\n      dataObj = iapi.getCollatedData(),\n      returnObj = [],\n      datasets = dataObj.dataset,\n      length = (datasets && datasets.length) || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      index = 0,\n      dsInd = 0,\n      setLen,\n      set,\n      j;\n\n    // When a format is provided\n    if (format) {\n      // no transcoding needed for json\n      if (/^json$/ig.test(format)) {\n        returnObj = dataObj;\n      } else if (/^csv$/ig.test(format)) {\n        returnObj = iapi.getCSVString();\n      } else {\n        returnObj = global.core.transcodeData(dataObj,\n          'json', format);\n      }\n    } else {\n      // if no format has been specified, return data as 2d array.\n      // while (length--) {\n      for (; index < length; index += 1) {\n        set = datasets[index];\n        if (set) {\n          set = datasets[index] && datasets[index].data;\n          j = setLen = (set && set.length) || 0;\n          j && (returnObj[dsInd] || (returnObj[dsInd] = [getValidValue(datasets[index].id,\n            NULLSTR)]));\n          while (j--) {\n            returnObj[dsInd][j + 1] = getValidValue(set[j].id, NULLSTR);\n          }\n\n          setLen && (dsInd += 1);\n        }\n      }\n    }\n    return returnObj;\n  }\n\n  getCSVString () {\n    var dataObj = this.getData(),\n      i = dataObj.length;\n\n    while (i--) {\n      dataObj[i] = dataObj[i].join(COMMA);\n    }\n\n    return dataObj.join('|');\n  }\n\n  /**\n   * Takes datasource and finds out all the points present in the selection box.\n   * @returns {Object} origChartData - Final data\n   * @memberof SelectScatter\n   */\n  getCollatedData (incomingJSON) {\n    var api = this,\n      dataset = this.getDatasets(), // eslint-disable-line good-practices/no-single-usage-variable\n      selectedArr = api.config._selectEleArr,\n      len = (selectedArr && selectedArr.length) || 0,\n      jsonData = incomingJSON || api.getFromEnv('dataSource'),\n      origChartData = extend2({}, jsonData),\n      origDataSets = origChartData.dataset,\n      xPos,\n      yPos,\n      oriDataArr,\n      selectionBoxObj,\n      lenDS = origDataSets && origDataSets.length,\n      isSelected = false, // eslint-disable-line good-practices/no-single-usage-variable\n      dataIndex,\n      setObj,\n      dataLen,\n      startX,\n      endX,\n      startY,\n      endY,\n      selectedData = [];\n\n    if (!len || !lenDS) {\n      return jsonData;\n    }\n    while (len--) {\n      selectionBoxObj = selectedArr[len];\n      if (!selectionBoxObj) {\n        continue;\n      }\n      startX = selectionBoxObj.startX;\n      endX = selectionBoxObj.endX;\n      startY = selectionBoxObj.startY;\n      endY = selectionBoxObj.endY;\n      dataIndex = lenDS;\n      while (dataIndex--) {\n        if (!dataset[dataIndex].getState('visible')) {\n          continue;\n        }\n        selectedData[dataIndex] || (selectedData[dataIndex] = {\n          data: []\n        });\n        oriDataArr = origDataSets[dataIndex].data;\n        dataLen = oriDataArr && oriDataArr.length;\n        while (dataLen--) {\n          setObj = oriDataArr[dataLen];\n          xPos = setObj.x;\n          yPos = setObj.y;\n          if (xPos > startX && xPos < endX &&\n                          yPos < startY && yPos > endY) {\n            selectedData[dataIndex].data[dataLen] = isSelected = true;\n          }\n        }\n      }\n    }\n\n    while (lenDS--) {\n      oriDataArr = origDataSets[lenDS].data;\n      dataLen = oriDataArr && oriDataArr.length;\n      while (dataLen--) {\n        if (!(selectedData[lenDS] && selectedData[lenDS].data[dataLen])) {\n          oriDataArr.splice(dataLen, 1);\n        }\n      }\n    }\n    return isSelected ? origChartData : jsonData;\n  }\n\n  createSelectionBox (event) {\n    createSelectionBox.call(this, event);\n  }\n\n  _deleteAllSelection () {\n    var chart = this,\n      selectEleArr = chart.config._selectEleArr,\n      selectEleObj,\n      i,\n      ii,\n      selectEleItem,\n      items1;\n\n    if (selectEleArr) {\n      for (i = 0, ii = selectEleArr.length; i < ii; i++) {\n        selectEleObj = selectEleArr[i];\n        for (items1 in selectEleObj) {\n          if (selectEleObj.hasOwnProperty(items1)) {\n            selectEleItem = selectEleObj[items1];\n            selectEleItem.remove && selectEleItem.remove();\n            delete selectEleObj[items1];\n          }\n        }\n      }\n      delete chart.config._selectEleArr;\n    }\n  }\n\n  deleteSelection (ele, chart) {\n    deleteSelection.call(this, ele, chart);\n  }\n\n  bindDragEvent (selectEleObj) {\n    var chart = this,\n      // logic = chart.logic,\n      item;\n    for (item in selectEleObj) {\n      /Tracker/.test(item) && selectEleObj[item].drag(chart.move,\n        chart.start, chart.up);\n    }\n  }\n\n  start () {\n    var ele = this,\n      data = ele.data(configStr), // eslint-disable-line good-practices/no-single-usage-variable\n      selectEleObj = data.selectEleObj,\n\n      topT = selectEleObj.topTracker,\n      rightT = selectEleObj.rightTracker,\n      bottomT = selectEleObj.bottomTracker,\n      leftT = selectEleObj.leftTracker,\n      resizeT = selectEleObj.resizeTracker,\n\n      topTData = topT.data(configStr),\n      rightTData = rightT.data(configStr),\n      bottomTData = bottomT.data(configStr),\n      leftTData = leftT.data(configStr),\n      resizeTData = resizeT.data(configStr),\n      selectTData = selectEleObj.selectBoxTracker.data(configStr),\n      bBox = selectEleObj.selectBoxTracker.getBBox();\n\n    topTData.ox = bBox.x;\n    topTData.oy = bBox.y;\n\n    rightTData.ox = bBox.x2;\n    rightTData.oy = bBox.y;\n\n    bottomTData.ox = bBox.x;\n    bottomTData.oy = bBox.y2;\n\n    leftTData.ox = bBox.x;\n    leftTData.oy = bBox.y;\n\n    topTData.ox = bBox.x;\n    topTData.oy = bBox.y;\n\n    resizeTData.ox = bBox.x2;\n    resizeTData.oy = bBox.y2;\n\n    selectTData.ox = bBox.x;\n    selectTData.oy = bBox.y;\n    selectTData.ow = bBox.width;\n    selectTData.oh = bBox.height;\n    selectTData.ox2 = bBox.x2;\n    selectTData.oy2 = bBox.y2;\n    // on click take the selection box on top.\n    selectEleObj.selectBoxG.toFront();\n\n    topT.hide();\n    rightT.hide();\n    bottomT.hide();\n    leftT.hide();\n    resizeT.hide();\n    ele.show();\n  }\n\n  move (evt) {\n    var ele = this,\n      data = ele.data(configStr),\n      selectEleObj = data.selectEleObj,\n      chart = data.chart,\n      topT = selectEleObj.topTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      rightT = selectEleObj.rightTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      bottomT = selectEleObj.bottomTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      leftT = selectEleObj.leftTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      resizeT = selectEleObj.resizeTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      selectT = selectEleObj.selectBoxTracker,\n      canvasLeft = selectEleObj.canvasLeft, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasRight = selectEleObj.canvasRight, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasTop = selectEleObj.canvasTop, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasBottom = selectEleObj.canvasBottom, // eslint-disable-line good-practices/no-single-usage-variable\n      HALF_T_WID = -6,\n      xAxis = chart.getChildren('xAxis')[0],\n      yAxis = chart.getChildren('yAxis')[0],\n      selectTData = selectT.data(configStr),\n      attrib = {},\n      bBox,\n      dx = evt.data[0],\n      dy = evt.data[1],\n      eventArgs,\n      x,\n      y;\n\n    dx = data.xChange ? dx : 0;\n    dy = data.yChange ? dy : 0;\n\n    x = dx + data.ox;\n    y = dy + data.oy;\n\n    x = Math.min(canvasRight - (data.ow || 0), Math.max(x, canvasLeft));\n    y = Math.min(canvasBottom - (data.oh || 0), Math.max(y, canvasTop));\n\n    switch (data.position) {\n      case 1: // TOP\n        attrib.y = Math.min(selectTData.oy2, y);\n        attrib.height = Math.abs(selectTData.oy2 - y) || 1;\n        topT.attr({\n          y: y + HALF_T_WID\n        });\n        break;\n      case 2: // Right\n        attrib.x = Math.min(selectTData.ox, x);\n        attrib.width = Math.abs(selectTData.ox - x) || 1;\n        rightT.attr({\n          x: x + HALF_T_WID\n        });\n        break;\n      case 3: // Bottom\n        attrib.y = Math.min(selectTData.oy, y);\n        attrib.height = Math.abs(selectTData.oy - y) || 1;\n        bottomT.attr({\n          y: y + HALF_T_WID\n        });\n        break;\n      case 4: // Left\n        attrib.x = Math.min(selectTData.ox2, x);\n        attrib.width = Math.abs(selectTData.ox2 - x) || 1;\n        leftT.attr({\n          x: x + HALF_T_WID\n        });\n        break;\n      case 5: // Corner\n        attrib.x = Math.min(selectTData.ox, x);\n        attrib.width = Math.abs(selectTData.ox - x) || 1;\n        attrib.y = Math.min(selectTData.oy, y);\n        attrib.height = Math.abs(selectTData.oy - y) || 1;\n        resizeT.attr({\n          cx: x,\n          cy: y\n        });\n        break;\n      default:\n        attrib.x = x;\n        attrib.y = y;\n        break;\n    }\n\n    if (!ele.data('dragStarted')) {\n      bBox = selectT.getBBox();\n\n      eventArgs = {\n        selectionLeft: bBox.x,\n        selectionTop: bBox.y,\n        selectionWidth: bBox.width,\n        selectionHeight: bBox.height,\n        startXValue: xAxis.getValue(bBox.x),\n        startYValue: yAxis.getValue(bBox.y),\n        endXValue: xAxis.getValue(bBox.x + bBox.width),\n        endYValue: yAxis.getValue(bBox.y + bBox.height),\n        id: selectEleObj.id\n      };\n\n      chart.fireChartInstanceEvent('BeforeSelectionUpdate', eventArgs);\n      ele.data('dragStarted', 1);\n    }\n\n    selectT.animate(attrib);\n\n    if (selectEleObj.isVisible) {\n      selectEleObj.closeButton.hide();\n      selectEleObj.cornerInnerSymbol.hide();\n      selectEleObj.cornerOuterSymbol.hide();\n      selectEleObj.isVisible = false;\n    }\n  }\n\n  up () {\n    var ele = this,\n      data = ele.data(configStr),\n      selectEleObj = data.selectEleObj,\n      chart = data.chart,\n      xAxis = chart.getChildren('xAxis')[0],\n      yAxis = chart.getChildren('yAxis')[0],\n      topT = selectEleObj.topTracker,\n      rightT = selectEleObj.rightTracker,\n      bottomT = selectEleObj.bottomTracker,\n      leftT = selectEleObj.leftTracker,\n      resizeT = selectEleObj.resizeTracker,\n      selectT = selectEleObj.selectBoxTracker, // eslint-disable-line good-practices/no-single-usage-variable\n      RESIZE_T_RADIUS = 15,\n      HALF_T_WID = -6,\n      bBox,\n      eventArgs;\n\n    // using setTimeout to fix for the issue #RED-476.\n    setTimeout(function () {\n      bBox = selectT.getBBox();\n\n      selectEleObj.startX = xAxis.getValue(bBox.x);\n      selectEleObj.startY = yAxis.getValue(bBox.y);\n      selectEleObj.endX = xAxis.getValue(bBox.x2);\n      selectEleObj.endY = yAxis.getValue(bBox.y2);\n\n      topT.attr({\n        x: bBox.x,\n        y: bBox.y + HALF_T_WID,\n        width: bBox.width\n      });\n      rightT.attr({\n        x: bBox.x2 + HALF_T_WID,\n        y: bBox.y,\n        height: bBox.height\n      });\n      bottomT.attr({\n        x: bBox.x,\n        y: bBox.y2 + HALF_T_WID,\n        width: bBox.width\n      });\n      leftT.attr({\n        x: bBox.x + HALF_T_WID,\n        y: bBox.y,\n        height: bBox.height\n      });\n      resizeT.attr({\n        cx: bBox.x2,\n        cy: bBox.y2\n      });\n\n      selectEleObj.closeButton.transform(t + bBox.x2 + COMMA + bBox.y);\n      selectEleObj.cornerInnerSymbol.transform(t + bBox.x2 + COMMA + bBox.y2);\n      selectEleObj.cornerOuterSymbol.transform(t + bBox.x2 + COMMA + bBox.y2);\n      selectEleObj.closeButton.show();\n      if (bBox.width < RESIZE_T_RADIUS || bBox.height < RESIZE_T_RADIUS) {\n        selectEleObj.cornerInnerSymbol.hide();\n        selectEleObj.cornerOuterSymbol.show();\n      } else {\n        selectEleObj.cornerInnerSymbol.show();\n        selectEleObj.cornerOuterSymbol.hide();\n      }\n      selectEleObj.isVisible = true;\n\n      topT.show();\n      rightT.show();\n      bottomT.show();\n      leftT.show();\n      resizeT.show();\n\n      if (ele.data('dragStarted')) {\n        eventArgs = {\n          selectionLeft: bBox.x,\n          selectionTop: bBox.y,\n          selectionWidth: bBox.width,\n          selectionHeight: bBox.height,\n          startXValue: xAxis.getValue(bBox.x),\n          startYValue: yAxis.getValue(bBox.y),\n          endXValue: xAxis.getValue(bBox.x + bBox.width),\n          endYValue: yAxis.getValue(bBox.y + bBox.height),\n          data: chart.getCollatedData(),\n          id: selectEleObj.id\n        };\n        chart.fireChartInstanceEvent('SelectionUpdated', eventArgs);\n        ele.data('dragStarted', 0);\n      }\n    }, 100);\n  }\n\n  restoreData () {\n    var chart = this,\n      datasets = [],\n      i;\n\n    chart.iterateComponents((child) => {\n      if ((child.getType && child.getType() === 'dataset')) {\n        datasets.push(child);\n      }\n    });\n\n    chart._deleteAllSelection();\n    for (i = 0; i < datasets.length; i++) {\n      datasets[i].asyncDraw();\n    }\n    chart.fireChartInstanceEvent('dataRestored', {});\n    return true;\n  }\n\n  _postSpaceManagement () {\n    super._postSpaceManagement();\n    this._deleteAllSelection();\n  }\n\n  getDSdef () {\n    return SelectScatterDataset;\n  }\n  // This method return the dataset-group definations for this charts\n  getDSGroupdef () {\n    return UNDEF;\n  }\n}\n\nexport default SelectScatter;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport ScatterDataset from '@fusioncharts/charts/src/dataset/scatter';\nimport { preDefStr, extend2, pluck, pluckNumber,\n  ZEROSTRING, bindSelectionEvent, getMouseCoordinate, convertColor } from '@fusioncharts/core/src/lib';\nimport { getDepsByType, addDep } from '@fusioncharts/core/src/dependency-manager';\nimport selectScatterAnimation from './index.animation';\n\nvar COLOR_FFFFFF = 'FFFFFF',\n  XY_STR = 'xy',\n  altHGridColorStr = preDefStr.altHGridColorStr,\n  altHGridAlphaStr = preDefStr.altHGridAlphaStr;\n\naddDep({\n  name: 'selectScatterAnimation',\n  type: 'animationRule',\n  extension: selectScatterAnimation\n});\n/**\n * Creates dataset class of Select scatter\n */\nclass SelectScatterDataset extends ScatterDataset {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'selectScatter';\n  }\n  /**\n   * Configure default settings for datasets\n   * @param {Object} datasetJSON dataset json\n   */\n  configure (datasetJSON) {\n    super.configure(datasetJSON);\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      chartAttr = chart.getFromEnv('dataSource').chart,\n      colorM = dataSet.getFromEnv('color-manager'),\n      borderColor = pluck(chartAttr.selectbordercolor,\n        colorM.getColor('canvasBorderColor')),\n      borderAlpha = pluckNumber(chartAttr.selectborderalpha,\n        colorM.getColor('canvasBorderAlpha'));\n\n    chartConfig.selectBorderColor = // convertColor(borderColor, borderAlpha);\n    {\n      FCcolor: {\n        color: borderColor,\n        alpha: borderAlpha\n      }\n    };\n    chartConfig.selectFillColor = convertColor(\n      pluck(chartAttr.selectfillcolor,\n        colorM.getColor(altHGridColorStr)),\n      pluckNumber(chartAttr.selectfillalpha,\n        colorM.getColor(altHGridAlphaStr)));\n\n    chartConfig.selectionCancelButtonBorderColor = convertColor(pluck(\n      chartAttr.selectioncancelbuttonbordercolor, borderColor),\n    pluckNumber(chartAttr.selectioncancelbuttonborderalpha, borderAlpha));\n    chartConfig.selectionCancelButtonFillColor = convertColor(pluck(\n      chartAttr.selectioncancelbuttonfillcolor, COLOR_FFFFFF),\n    pluckNumber(chartAttr.selectioncancelbuttonfillalpha, 100));\n    chartConfig.connativeZoom = false;\n    chartConfig.zoomType = XY_STR;\n\n    if (chartAttr.submitdataasxml === ZEROSTRING && !chartAttr.formdataformat) {\n      chartAttr.formdataformat = getDepsByType('transcoder').csv && 'csv';\n    }\n    // @ temp will work after transcoder fix\n    // chartConfig.formDataFormat = pluck(chartAttr.formdataformat,\n    //             global.dataFormats.XML);\n    chartConfig.formDataFormat = pluck(chartAttr.formdataformat);\n    chartConfig.formTarget = pluck(chartAttr.formtarget, '_self');\n    chartConfig.formMethod = pluck(chartAttr.formmethod, 'POST');\n    chartConfig.submitFormAsAjax = pluckNumber(chartAttr.submitformusingajax, 1);\n  }\n  /**\n   * Draws plot graphics\n   */\n  draw () {\n    super.draw();\n    var dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      container = chart.getFromEnv('chart-container'),\n      xAxis = dataSet.getFromEnv('xAxis'),\n      yAxis = dataSet.getFromEnv('yAxis');\n\n    bindSelectionEvent(chart, {\n      selectionStart: function (data) {\n        var pos = getMouseCoordinate(container, data.originalEvent, chart), // eslint-disable-line good-practices/no-single-usage-variable\n          eventArgs = extend2({ // eslint-disable-line good-practices/no-single-usage-variable\n            selectionLeft: data.selectionLeft,\n            selectionTop: data.selectionTop,\n            selectionWidth: data.selectionWidth,\n            selectionHeight: data.selectionHeight,\n            startXValue: xAxis.getValue(data.selectionLeft, 1),\n            startYValue: yAxis.getValue(data.selectionTop, 1)\n          }, pos);\n        /**\n         * Raised when user starts to draw a selection box on a `selectScatter` chart.\n         * @event FusionCharts#selectionStart\n         *\n         * @param {number} chartX - The x-coordinate of the mouse with respect to the chart.\n         * @param {number} chartY - The y-coordinate of the mouse with respect to the chart.\n         * @param {number} pageX - The x-coordinate of the mouse with respect to the page.\n         * @param {number} pageY - The y-coordinate of the mouse with respect to the page.\n         * @param {number} startXValue - The value on the canvas x-axis where the selection started.\n         * @param {number} startYValue - The value on the canvas y-axis where the selection started.\n         */\n        data.chart.fireChartInstanceEvent('selectionStart', eventArgs);\n      },\n      selectionEnd: function (data) {\n        var pos = getMouseCoordinate(container, data.originalEvent, chart), // eslint-disable-line good-practices/no-single-usage-variable\n          eventArgs = extend2({ // eslint-disable-line good-practices/no-single-usage-variable\n            selectionLeft: data.selectionLeft,\n            selectionTop: data.selectionTop,\n            selectionWidth: data.selectionWidth,\n            selectionHeight: data.selectionHeight,\n            startXValue: xAxis.getValue(data.selectionLeft, 1),\n            startYValue: yAxis.getValue(data.selectionTop, 1),\n            endXValue: xAxis.getValue(data.selectionLeft + data.selectionWidth, 1),\n            endYValue: yAxis.getValue(data.selectionTop + data.selectionHeight, 1)\n          }, pos);\n\n        /**\n         * Raised when user completes a selection box on a `selectScatter` chart.\n         * @event FusionCharts#selectionEnd\n         *\n         * @param {number} chartX - The x-coordinate of the mouse with respect to the chart.\n         * @param {number} chartY - The y-coordinate of the mouse with respect to the chart.\n         * @param {number} pageX - The x-coordinate of the mouse with respect to the page.\n         * @param {number} pageY - The y-coordinate of the mouse with respect to the page.\n         * @param {number} startXValue - The value on the canvas x-axis where the selection started.\n         * @param {number} startYValue - The value on the canvas y-axis where the selection started.\n         * @param {number} endXValue - The value on the canvas x-axis where the selection ended.\n         * @param {number} endYValue - The value on the canvas y-axis where the selection ended.\n         * @param {number} selectionLeft - The x-coordinate from where selection started with\n         * respect to the chart.\n         * @param {number} selectionTop - The y-coordinate from where selection started with\n         * respect to the chart.\n         * @param {number} selectionWidth - The width of the selection in pixels.\n         * @param {number} selectionHeight - The height of the selection box in pixels.\n         */\n        data.chart.fireChartInstanceEvent('selectionEnd', eventArgs);\n        data.chart.createSelectionBox(data);\n      }\n    });\n  }\n}\n\nexport default SelectScatterDataset;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  '*.dataset.selectScatter': lineAnimation['*.dataset.line']\n};\n","import Multilevelpie from '@fusioncharts/powercharts/src/chart/multilevelpie';\nexport default Multilevelpie;\n","import CommonAPI from '@fusioncharts/charts/src/chart/_internal/commonchartapi';\nimport datasetFactory from '../../factories/mlpie-dataset';\nconst MULTILEVELPIE = 'multiLevelPie';\nclass MultilevelPie extends CommonAPI {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MultilevelPie';\n  }\n\n  constructor () {\n    super();\n    this.defaultPaletteOptions = null;\n    this.registerFactory('dataset', datasetFactory, ['canvas']);\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MultilevelPie';\n  }\n  /**\n   * parse defualt configuration of the chart\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.is3D = false;\n    config.hasLegend = false;\n    config.defaultDatasetType = MULTILEVELPIE;\n    config.valuefontbold = 0;\n    config.skipCanvasDrawing = true;\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let categories = this.getFromEnv('dataSource').category;\n    if (!(categories && categories[0]) || !Array.isArray(categories)) {\n      return true;\n    }\n  }\n\n  _spaceManager () {\n    var availableHeight,\n      iapi = this,\n      config = iapi.config;\n    //* ***** Manage space\n    iapi._allocateSpace((iapi._manageActionBarSpace &&\n              iapi._manageActionBarSpace(config.availableHeight * 0.225)) || {});\n    availableHeight = config.canvasHeight * 0.7; // eslint-disable-line good-practices/no-single-usage-variable\n    // a space manager that manages the space for the tools as well as the captions.\n    iapi._manageChartMenuBar(availableHeight);\n    iapi.allocateDimensionOfChartMenuBar();\n  }\n}\nexport default MultilevelPie;\n","import { datasetFactory } from '@fusioncharts/core/src/lib';\nimport MultiLevelPieDataset from '../dataset/multilevelpie';\n/**\n * function to  create dataset, groupmaneger.\n * assign dataset to group manager.\n **/\nexport default function (chart) {\n  let categories,\n    catLength,\n    length,\n    datasetJSON = {}; // eslint-disable-line good-practices/no-single-usage-variable\n\n  categories = (chart.config.categories = chart.getFromEnv('dataSource').category || []);\n  catLength = categories.length;\n\n  if (!length && catLength) {\n    datasetJSON = categories;\n    length = catLength;\n  }\n  // if the data has no categories in them.\n  if (!catLength) {\n    chart.setChartMessage();\n    return;\n  }\n  datasetFactory(chart, MultiLevelPieDataset, 'dataset', length, [datasetJSON]);\n}\n","import Pie2DDataset from '@fusioncharts/charts/src/dataset/pie2d';\nimport { PATTERN_TYPES } from '@fusioncharts/charts/src/dataset/column';\nimport { COMMASPACE, ZEROSTRING, pluck, pluckNumber,\n  toRaphaelColor, parseUnsafeString, getDashStyle, getValidValue,\n  parseTooltext, getFirstValue, convertColor, TRACKER_FILL, hashify,\n  BLANKSTRING, extend2, getSuggestiveRotation } from '@fusioncharts/core/src/lib';\nimport { addDep, getDep } from '@fusioncharts/core/src/dependency-manager';\nimport multilevelpieAnimation from './index.animation';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport raphaelShapesRingpath from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.ringpath';\n\nlet Raphael = getDep('redraphael', 'plugin'),\n  BLANK = '',\n  NORMALSTRING = 'normal',\n  COLOR_FFFFFF = 'FFFFFF',\n  COLOR_000000 = '000000',\n  HUNDRED_PERCENT = '100%',\n  ZERO_STR = '0',\n  pInt = function (s, mag) {\n    return parseInt(s, mag || 10);\n  },\n  DASH_DEF = 'none',\n  UNDEF,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  POINTER = 'pointer',\n  EVENTARGS = 'eventArgs',\n  PX = 'px',\n  INNERRADIUS = /^[0-9]+\\%?$|^([0-9]+[.][0-9]+)\\%?$/,\n  calculateInnerRadius = function (innerRadius, pieRadius) {\n    let innerRadiusLength = innerRadius && innerRadius.length, // eslint-disable-line good-practices/no-single-usage-variable\n      calculatedInnerRadius;\n    if (!innerRadius) {\n      return 0;\n    }\n    if (innerRadius.charAt(innerRadiusLength - 1) === '%') {\n      // execute when innerRadius is given as percentage\n      calculatedInnerRadius = pluckNumber(pieRadius) * (pluckNumber(innerRadius.split('%')[0]) / 100);\n    } else {\n      // execute when innerRadius is given in pixels.\n      calculatedInnerRadius = pluckNumber(innerRadius);\n    }\n\n    if (calculatedInnerRadius < pieRadius) {\n      return calculatedInnerRadius;\n    } return 0;\n  };\naddDep({\n  name: 'multilevelpieAnimation',\n  type: 'animationRule',\n  extension: multilevelpieAnimation\n});\n\n// Adding required shapes for chart.\nraphaelShapesRingpath(Raphael);\nclass MultiLevelPieDataset extends Pie2DDataset {\n  constructor () {\n    super();\n\n    this.components = {\n      data: []\n    };\n    this.graphics = {\n    };\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'multiLevelPie';\n  }\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.config.JSONData = datasetJSON;\n    var fontBdrColor,\n      dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      dataSetConfig = dataSet.config || (dataSet.config = {}),\n      dataLabels = dataSetConfig.dataLabelOptions || (dataSetConfig.dataLabelOptions = {}),\n      piePlotOptions = dataSetConfig.piePlotOptions,\n      style = chart.config.style,\n      chartAttrs = chart.getFromEnv('dataSource').chart,\n      centerAngle = pluckNumber(-chartAttrs.centerangle, 180),\n      totalAngle = pluckNumber(chartAttrs.totalangle, 360),\n      tranverseToRoot = function (dataInstance, evtType) {\n        let dataObj = dataInstance;\n        while (dataObj.graphics.element) {\n          (dataObj.graphics.element).attr({\n            fill: evtType === 'mouseover' ? dataSetConfig.hoverFillColor : (dataObj.config || this.data('plotItem')).color\n          });\n          dataObj = dataObj.config.parent;\n        }\n      },\n      traverseAllChildren = function (dataObj, evtType) {\n        var k;\n        (dataObj.graphics.element).attr({\n          fill: evtType === 'mouseover' ? dataSetConfig.hoverFillColor : (dataObj.config || this.data('plotItem')).color\n        });\n        for (k = 0; k < (dataObj.components.data && dataObj.components.data.length); k++) {\n          traverseAllChildren.call(this, dataObj.components.data[k], evtType);\n        }\n      },\n      mouseEvtHandler = function (evtType) {\n        if (!dataSetConfig.useHoverColor) {\n          return;\n        }\n        var point = this.data('plotItem'),\n          selfRef = point.selfRef;\n\n        if (!dataSetConfig.highlightParentPieSlices && !dataSetConfig.highlightChildPieSlices) {\n          (selfRef.graphics.element).attr({\n            fill: evtType === 'mouseover' ? dataSetConfig.hoverFillColor : (selfRef.config || point).color\n          });\n        } else if (!dataSetConfig.highlightParentPieSlices && dataSetConfig.highlightChildPieSlices) {\n          traverseAllChildren.call(this, selfRef, evtType);\n        } else if (dataSetConfig.highlightParentPieSlices && !dataSetConfig.highlightChildPieSlices) {\n          tranverseToRoot.call(this, selfRef, evtType);\n        } else if (dataSetConfig.highlightParentPieSlices && dataSetConfig.highlightChildPieSlices) {\n          tranverseToRoot.call(this, selfRef, evtType);\n          traverseAllChildren.call(this, selfRef, evtType);\n        }\n      };\n    dataSetConfig.usePattern = pluckNumber(chartConfig.usePattern, 0);\n    dataSetConfig.patternType = PATTERN_TYPES.includes(datasetJSON.patterntype)\n      ? datasetJSON.patterntype\n      : chartConfig.patternType;\n    dataSetConfig.patternDensity = pluckNumber(datasetJSON.patterndensity, chartConfig.patternDensity);\n    dataSetConfig.patternAlpha = pluckNumber(datasetJSON.patternalpha, chartConfig.patternAlpha);\n    dataSetConfig.patternBgColor = pluck(datasetJSON.patternbgcolor, dataSetConfig.patternBgColor);\n    dataSetConfig.enableAnimation = pluckNumber(chartAttrs.animation,\n      chartAttrs.defaultanimation, 1);\n    dataSetConfig.animation = !dataSetConfig.enableAnimation ? false : {\n      duration: pluckNumber(chartAttrs.animationduration, chartAttrs.moveduration, 1) * 1000\n    };\n    dataSetConfig.showShadow = pluckNumber(chartAttrs.showshadow, 0);\n    dataSetConfig.useHoverColor = Boolean(pluckNumber(chartAttrs.usehovercolor, 1));\n    if (dataSetConfig.usePattern) {\n      dataSetConfig.useHoverColor = 0;\n    }\n    dataSetConfig.showTextOutline = Boolean(pluckNumber(chartAttrs.textoutline, 0));\n    dataSetConfig.hoverFillColor = convertColor(pluck(chartAttrs.hoverfillcolor,\n      'FF5904'), pluckNumber(chartAttrs.hoverfillalpha, 100));\n    fontBdrColor = getFirstValue(chartAttrs.valuebordercolor, BLANK);\n    fontBdrColor = fontBdrColor ? convertColor(\n      fontBdrColor, pluckNumber(chartAttrs.valueborderalpha, chartAttrs.valuebgalpha,\n        chartAttrs.valuealpha, 100)) : BLANK;\n    // create the style object if required.\n    // fix for multilevel pie datavalue cosmetics issue RED-1594\n    !dataLabels.style && (dataLabels.style = {\n      fontFamily: pluck(chartAttrs.valuefont, style.fontFamily),\n      fontSize: pluckNumber(this.computeFontSize(chartAttrs.valuefontsize),\n        pInt(style.fontSize, 10)) + PX,\n      color: convertColor(pluck(chartAttrs.valuefontcolor, style.color),\n        pluckNumber(chartAttrs.valuefontalpha,\n          chartAttrs.valuealpha, 100)),\n      fontWeight: pluckNumber(chartAttrs.valuefontbold) ? 'bold' : NORMALSTRING,\n      fontStyle: pluckNumber(chartAttrs.valuefontitalic) ? 'italic' : NORMALSTRING,\n      backgroundColor: chartAttrs.valuebgcolor\n        ? convertColor(chartAttrs.valuebgcolor,\n          pluckNumber(chartAttrs.valuebgalpha, chartAttrs.valuealpha, 100)) : BLANK,\n      border: fontBdrColor || chartAttrs.valuebgcolor\n        ? (pluckNumber(chartAttrs.valueborderthickness, 1) + 'px solid') : BLANK,\n      borderPadding: pluckNumber(chartAttrs.valueborderpadding, 2),\n      borderThickness: pluckNumber(chartAttrs.valueborderthickness, style.borderThickness, 1),\n      borderRadius: pluckNumber(chartAttrs.valueborderradius, style.borderRadius, 0),\n      borderColor: fontBdrColor,\n      borderDash: pluckNumber(chartAttrs.valueborderdashed, 0)\n        ? getDashStyle(pluckNumber(chartAttrs.valueborderdashlen, 4),\n          pluckNumber(chartAttrs.valueborderdashgap, 2)) : DASH_DEF\n    });\n\n    // stop point slicing\n    !piePlotOptions && (piePlotOptions = (dataSetConfig.piePlotOptions = {}));\n    piePlotOptions.allowPointSelect = false;\n    dataSetConfig.borderAlpha = pluck(chartAttrs.plotborderalpha, chartAttrs.pieborderalpha, 100);\n    dataSetConfig.borderColor = convertColor(pluck(chartAttrs.plotbordercolor,\n      chartAttrs.piebordercolor, COLOR_FFFFFF), chartAttrs.showplotborder !== ZEROSTRING\n      ? pluck(chartAttrs.plotborderalpha, chartAttrs.pieborderalpha, 100) : 0);\n    dataSetConfig.rawborderColor = pluck(chartAttrs.plotbordercolor,\n      chartAttrs.piebordercolor, COLOR_FFFFFF);\n    dataSetConfig.showplotborder = pluckNumber(chartAttrs.showplotborder, 1);\n    dataSetConfig.showTooltip = pluckNumber(chartAttrs.showtooltip, 1);\n\n    dataSetConfig.borderWidth = pluckNumber(chartAttrs.pieborderthickness,\n      chartAttrs.plotborderthickness, 1);\n\n    piePlotOptions.startingAngle = 0; // set the chart's startingAngle as 0 [alwase]\n    piePlotOptions.size = HUNDRED_PERCENT;\n\n    dataSetConfig.highlightParentPieSlices = pluckNumber(chartAttrs.highlightparentpieslices,\n      chartAttrs.highlightparentpienodes, 1);\n    dataSetConfig.highlightChildPieSlices = pluckNumber(chartAttrs.highlightchildpieslices,\n      chartAttrs.highlightchildpienodes, 0);\n\n    dataSetConfig.showLabels = pluckNumber(chartAttrs.showlabels, 1);\n    dataSetConfig.showValues = pluckNumber(chartAttrs.showvalues, 0);\n    dataSetConfig.showValuesInTooltip = pluckNumber(chartAttrs.showvaluesintooltip,\n      chartAttrs.showvalues, 0);\n    dataSetConfig.showPercentValues = pluckNumber(chartAttrs.showpercentvalues,\n      chartAttrs.showpercentagevalues, 0);\n    dataSetConfig.showPercentInTooltip = pluckNumber(chartAttrs.showpercentintooltip, 0);\n    dataSetConfig.toolTipSepChar = pluck(chartAttrs.tooltipsepchar, chartAttrs.hovercapsepchar, COMMASPACE);\n    dataSetConfig.labelSepChar = parseUnsafeString(pluck(chartAttrs.labelsepchar, dataSetConfig.toolTipSepChar));\n    dataSetConfig.tooltext = chartAttrs.plottooltext;\n    dataSetConfig.alpha = pluck(chartAttrs.plotfillalpha, chartAttrs.piefillalpha, 100);\n    dataSetConfig.startAngle = (centerAngle - (totalAngle / 2)) * (Math.PI / 180);\n    dataSetConfig.endtAngle = (centerAngle + (totalAngle / 2)) * (Math.PI / 180);\n    dataSetConfig.initialAngle = dataSetConfig.endtAngle;\n    dataSetConfig.originX = pluckNumber(chartAttrs.originx);\n    dataSetConfig.originY = pluckNumber(chartAttrs.originy);\n\n    dataSetConfig.events = {\n      mouseOver: function () {\n        mouseEvtHandler.call(this, 'mouseover');\n      },\n      mouseOut: function () {\n        mouseEvtHandler.call(this, 'mouseout');\n      }\n    };\n\n    // remove the plotboder\n    chartConfig.plotBorderWidth = 0;\n\n    // get the label rotation, overlap and ellipses attributes if present\n    dataSetConfig.autoRotateLabels = (chartConfig.autorotatelabels) ? pluckNumber(chartConfig.autorotatelabels) : 0;\n    dataSetConfig.useEllipsesWhenOverflow = (chartConfig.useellipseswhenoverflow) ? pluckNumber(chartConfig.useellipseswhenoverflow) : 1;\n    dataSetConfig.skipOverlapLabels = (chartConfig.skipoverlaplabels) ? pluckNumber(chartConfig.skipoverlaplabels) : 0;\n\n    // remove the plotboder\n    chartConfig.plotBorderWidth = 0;\n    dataSetConfig.maxLevel = dataSet.addMSPieCat(dataSet.config.JSONData, 1, dataSet, dataSetConfig.startAngle,\n      dataSetConfig.endtAngle);\n    dataSetConfig.pieRadius = parseInt(chartAttrs.pieradius, 10);\n\n    // dataSetConfig.innerRadius = pluckNumber(Number(pluck(chartAttrs.innerradius, '0%').split('%')[0]), 0);\n    dataSetConfig.innerRadius = ZERO_STR;\n    (INNERRADIUS.test(chartAttrs.innerradius)) && (dataSetConfig.innerRadius = pluck(chartAttrs.innerradius));\n\n    dataLabels.distance = 0;\n    dataLabels.placeLabelsInside = true;\n  }\n  // doHide is a Boolean Flag to hide the element or not.\n  // All the graphical elements in excess are pushed to the graphics pool. They are hidden only after the\n  // entire draw is complete.\n  removalFn (ele, prop) {\n    var dataSet = this,\n      // eslint-disable-next-line good-practices/no-function-dependency\n      hideFN = function () {\n        this.remove();\n      };\n\n    dataSet.getFromEnv('animationManager').setAnimation({\n      el: ele,\n      label: prop === 'element' ? 'ringpath' : 'label',\n      component: dataSet,\n      callback: hideFN\n    });\n  }\n  removeGraphics (obj) {\n    var i,\n      prop,\n      dataSet = this,\n      childData = obj.components && obj.components.data,\n      len,\n      graphics = obj.graphics;\n    if (childData) {\n      len = childData.length;\n      for (i = 0; i < len; i += 1) {\n        dataSet.removeGraphics(childData[i]);\n      }\n    }\n\n    if (obj.graphics) {\n      for (prop in graphics) {\n        if (graphics.hasOwnProperty(prop)) {\n          dataSet.removalFn(obj.graphics[prop], prop);\n        }\n      }\n    }\n  }\n  removeChild (removalStore, doHide, type) {\n    var i,\n      elemObj,\n      dataSet = this;\n    if (removalStore.length) {\n      for (i = 0; i < removalStore.length; i += 1) {\n        elemObj = removalStore[i];\n        if (type) {\n          dataSet.removalFn(elemObj, doHide, type);\n        } else {\n          dataSet.removeGraphics(elemObj, doHide);\n        }\n      }\n    } else {\n      // if the removalStore is in the Object structure.\n      for (i in removalStore) {\n        dataSet.removeChild(removalStore[i], doHide, i);\n      }\n    }\n  }\n  addMSPieCat (catArr, level, parentObj, startAngle, endAngle) {\n    var dataObj,\n      dataObjLen,\n      cat = extend2([], catArr),\n      catObjLen,\n      catLen = cat.length,\n      dataSet = this,\n      data = parentObj.components.data,\n      dataSetConfig = dataSet.config,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      sharePercent,\n      totalValue = 0,\n      catObj,\n      catVal,\n      i,\n      label,\n      labelSepChar = dataSetConfig.labelSepChar,\n      fillalpha,\n      valueStr,\n      pValueStr,\n      toolText,\n      displayValue,\n      rawColor,\n      showLabel,\n      patternType,\n      patternAngle,\n      patternDensity,\n      patternSize,\n      patternAlpha,\n      patternBgColor,\n      showPlotBorder,\n      maxLevel = level,\n      dataLength = data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removalFn = function () {\n        dataSet.removeChild.apply(dataSet, arguments);\n      },\n      catLength = cat.length,\n      totAngle = endAngle - startAngle, // eslint-disable-line good-practices/no-single-usage-variable\n      tempAngle,\n      cumilative = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      preDataOldEndAngle;\n\n    for (i = 0; i < catLen; i += 1) {\n      // store for letter use\n      catObj = cat[i];\n      catObj._userValue = numberFormatter.getCleanValue(catObj.value, true);\n      catObj._value = pluckNumber(catObj._userValue, 1);\n      totalValue += catObj._value;\n    }\n    // Total value can't be zero, since its used in denominator to find ratio.\n    totalValue = totalValue || 1;\n    // add the category\n    sharePercent = totAngle / totalValue; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = catLen - 1; i >= 0; i -= 1) {\n      catObj = cat[i];\n      catVal = sharePercent * catObj._value;\n      label = parseUnsafeString(pluck(catObj.label, catObj.name));\n      valueStr = catObj._userValue !== null\n        ? numberFormatter.dataLabels(catObj._userValue) : BLANK;\n      pValueStr = numberFormatter.percentValue((catObj._value /\n                    totalValue) * 100);\n      // pointIndex = sLevel.length - 1;\n      fillalpha = pluckNumber(catObj.alpha, dataSetConfig.alpha);\n      showLabel = pluckNumber(catObj.showlabel, dataSetConfig.showLabels);\n      showPlotBorder = pluckNumber(dataSetConfig.showplotborder, 1);\n      displayValue = (showLabel === 1) ? label : BLANK;\n\n      if (pluckNumber(catObj.showvalue, dataSetConfig.showValues) === 1) {\n        if (dataSetConfig.showPercentValues) {\n          displayValue += displayValue !== BLANK ? (labelSepChar + pValueStr) : pValueStr;\n        } else if (valueStr !== UNDEF && valueStr !== BLANK) {\n          displayValue += displayValue !== BLANK ? (labelSepChar + valueStr) : valueStr;\n        }\n      }\n      toolText = dataSetConfig.showTooltip ? parseUnsafeString(pluck(catObj.tooltext, catObj.hovertext,\n        dataSetConfig.tooltext), false) : UNDEF;\n      if (toolText === BLANK) {\n        toolText = label;\n        if (dataSetConfig.showValuesInTooltip) {\n          if (dataSetConfig.showPercentInTooltip) {\n            toolText += toolText !== BLANK ? (labelSepChar + pValueStr) : pValueStr;\n          } else if (valueStr !== UNDEF && valueStr !== BLANK) {\n            toolText += toolText !== BLANK ? (labelSepChar + valueStr) : valueStr;\n          }\n        }\n      } else {\n        toolText = parseTooltext(toolText, [1, 2, 3, 14], {\n          percentValue: pValueStr,\n          label: label,\n          formattedValue: valueStr\n        }, catObj);\n      }\n\n      dataObj = data[i];\n      tempAngle = startAngle + cumilative;\n      cumilative += catVal;\n      if (!dataObj) {\n        dataObj = data[i] = {\n          components: {\n            data: []\n          },\n          config: {},\n          graphics: {}\n        };\n      }\n      // store old end angle for newly added element's aimation position\n      if (dataObj.graphics.element) {\n        preDataOldEndAngle = dataObj.config.startAngle + dataObj.config.angleStrech;\n      }\n      patternType = PATTERN_TYPES.includes(catObj.patterntype)\n        ? catObj.patterntype\n        : dataSetConfig.patternType;\n      patternAngle = pluckNumber(catObj.patternangle,\n        dataSet.getFromEnv('chart-attrib').patternangle, patternType === PATTERN_TYPES[0] ? 40 : 0);\n      patternDensity = pluckNumber(catObj.patterndensity, dataSetConfig.patternDensity);\n      patternSize = pluckNumber(catObj.patternsize,\n        patternType === PATTERN_TYPES[0] ? 2 : 4);\n      patternAlpha = pluckNumber(catObj.patternalpha, dataSetConfig.patternAlpha);\n      patternBgColor = pluck(catObj.patternbgcolor, dataSetConfig.patternBgColor);\n      rawColor = catObj.color || dataSet.getFromEnv('color-manager').getPlotColor();\n      dataObj.config = {\n        patternType,\n        patternAngle,\n        patternDensity,\n        patternSize,\n        patternAlpha,\n        patternBgColor,\n        initialAngle: preDataOldEndAngle || (parentObj.config || parentObj.config).initialAngle,\n        startAngle: tempAngle,\n        alpha: fillalpha,\n        angleStrech: catVal,\n        level: level,\n        displayValue: displayValue,\n        showLabel: showLabel,\n        showPlotBorder: showPlotBorder,\n        toolText: toolText,\n        link: getValidValue(catObj.link),\n        rawColor,\n        doNotSlice: true, // added to stop slicing\n        color: convertColor(rawColor, fillalpha),\n        borderAlpha: pluck(catObj.plotborderalpha, dataSetConfig.borderAlpha),\n        borderWidth: pluckNumber(catObj.borderwidth, dataSetConfig.borderWidth),\n        borderColor: pluck(catObj.bordercolor, dataSetConfig.borderColor),\n        rawborderColor: pluck(catObj.bordercolor, dataSetConfig.rawborderColor),\n        dashStyle: pluckNumber(catObj.valueborderdashed, 0)\n          ? getDashStyle(pluckNumber(catObj.borderdashlen, 4),\n            pluckNumber(catObj.borderdashgap, 2)) : DASH_DEF,\n        shadow: {\n          opacity: Math.round(fillalpha > 50 ? fillalpha * fillalpha * fillalpha * 0.0001\n            : fillalpha * fillalpha * 0.01) * 0.01\n        },\n        isSingleTon: !((catLen > 1))\n      };\n      if (dataSetConfig.usePattern) {\n        dataObj.config.borderColor = dataObj.config.color;\n        dataObj.config.rawborderColor = hashify(rawColor);\n      }\n      dataObj.config.parent = parentObj;\n\n      dataObj.config.dataLabelStyle = dataSet._configureDataLabelStyle(catObj);\n\n      if (catObj.category) {\n        maxLevel = Math.max(maxLevel, dataSet.addMSPieCat(catObj.category, level + 1,\n          dataObj, tempAngle, (catVal + tempAngle)));\n        if ((dataObjLen = dataObj.components.data.length) > (catObjLen = catObj.category.length)) {\n          removalFn(dataObj.components.data.splice(dataObjLen - 1, catObjLen));\n        }\n      } else {\n        dataObjLen = dataObj.components.data.length;\n        if (dataObjLen) {\n          // no child category, recursively remove existing childs (dataObj.components.data)\n          removalFn(dataObj.components.data.splice(0, dataObjLen));\n        }\n      }\n    }\n    // remove estra data\n    if (dataLength > catLength) {\n      // recursively remove elements with child\n      removalFn(data.splice(catLength));\n    }\n    return maxLevel;\n  }\n\n  parsePlotAttributes (parentInstance) {\n    var angle,\n      parentObj = parentInstance,\n      _textAttrs,\n      centerDistance,\n      level,\n      dataSet = this,\n      dataSetConfig = dataSet.config || {},\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      seriesDataLabelsStyle = chartConfig.dataLabelStyle,\n      setDataLabelStyle,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasHeight = chartConfig.canvasHeight,\n      cx = pluckNumber(dataSetConfig.originX, chartConfig.canvasLeft + canvasWidth * 0.5),\n      cy = pluckNumber(dataSetConfig.originY, chartConfig.canvasTop + canvasHeight * 0.5),\n      r,\n      r2,\n      color,\n      val,\n      displayValue,\n      setLink,\n      angle1,\n      angle2,\n      i,\n      setGraphics,\n      setConfig,\n      element,\n      pieSize = pluckNumber(dataSetConfig.pieRadius * 2, Math.min(canvasWidth, canvasHeight)),\n      // innerRadius in diameter of inner circle\n      innerRadius = calculateInnerRadius(dataSetConfig.innerRadius, pieSize / 2),\n      pool = dataSet.config.pool || (dataSet.config.pool = {}),\n      // either the user-specified size is chosen or the minimum aspect dimension is choosen\n      // pieSize is diameter of full pie\n      seriesHalfWidth = (pieSize - 2 * innerRadius) / (2 * dataSetConfig.maxLevel);\n    dataSetConfig.innerSize = innerRadius * 2;\n    if (!parentObj) {\n      parentObj = dataSet;\n    }\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.parsePlotAttributes(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    level = setConfig.level;\n    if (level) {\n      r = ((level) * seriesHalfWidth) + innerRadius;\n      r2 = ((level - 1) * seriesHalfWidth) + innerRadius;\n\n      // Save the radius value for later thickness calculation\n      setConfig.outerRadius = r;\n      setConfig.innerRadius = r2;\n\n      setGraphics = parentObj.graphics;\n      val = setConfig.angleStrech;\n      displayValue = setConfig.displayValue;\n      // toolText = setConfig.toolText;\n      setLink = !!setConfig.link;\n      color = setConfig.color;\n\n      angle1 = setConfig.startAngle;\n      angle2 = angle1 + setConfig.angleStrech;\n      element = setGraphics.element;\n      if (pool.element && pool.element.length) {\n        element = setGraphics.element = element || pool.element.shift();\n      }\n      setConfig.plotItem = {\n        chart: chart,\n        link: setConfig.link,\n        value: val,\n        color: color,\n        labelText: displayValue,\n        graphics: {\n          element: element\n        },\n        selfRef: parentObj\n      };\n      setConfig.eventArgs = {\n        alpha: setConfig.alpha,\n        borderAlpha: setConfig.borderAlpha,\n        link: setConfig.link,\n        label: setConfig.displayValue,\n        showLabel: setConfig.showLabel,\n        toolText: setConfig.toolText,\n        color: setConfig.rawColor,\n        borderColor: setConfig.rawborderColor,\n        borderThickness: setConfig.borderWidth,\n        showPlotBorder: setConfig.showPlotBorder\n      };\n      if (dataSetConfig.usePattern) {\n        setConfig.eventArgs.pattern = {\n          patternType: setConfig.patternType,\n          patternColor: setConfig.rawColor,\n          patternBgColor: setConfig.patternBgColor === TRACKER_FILL ? UNDEF : setConfig.patternBgColor\n        };\n        delete setConfig.eventArgs.color;\n      }\n      setConfig.props = {\n        element: {\n          attr: {\n            ringpath: [cx, cy, r, r2, angle1, angle2],\n            'stroke-width': setConfig.borderWidth,\n            'stroke': setConfig.borderColor,\n            fill: toRaphaelColor(setConfig.color),\n            'stroke-dasharray': setConfig.dashStyle,\n            cursor: setLink ? POINTER : BLANKSTRING\n          }\n        }\n      };\n\n      setConfig.props.element.patternAttr = {\n        patternType: setConfig.patternType,\n        patternAngle: setConfig.patternAngle,\n        patternDensity: setConfig.patternDensity,\n        patternSize: setConfig.patternSize,\n        color: setConfig.color,\n        patternAlpha: setConfig.patternAlpha,\n        patternBgColor: setConfig.patternBgColor,\n        alpha: setConfig.alpha,\n        x: cx,\n        y: cy\n      };\n      if ((displayValue !== UNDEF) && (displayValue !== BLANKSTRING)) {\n        angle = (angle1 + angle2) / 2;\n        // for the innermost Concentric circle the center distance is presumed to be zero\n        centerDistance = ((r2 === 0) && setConfig.isSingleTon) ? 0 : r2 + ((r - r2) / 2);\n        if (!(_textAttrs = setConfig._textAttrs)) {\n          _textAttrs = setConfig._textAttrs = {};\n        }\n\n        setDataLabelStyle = setConfig.dataLabelStyle;\n\n        _textAttrs.text = displayValue;\n        _textAttrs.fill = setDataLabelStyle.color || COLOR_000000;\n        _textAttrs.direction = chartConfig.textDirection;\n        _textAttrs.cursor = setLink ? POINTER : BLANKSTRING;\n        _textAttrs.x = cx + (centerDistance * Math.cos(angle));\n        _textAttrs.y = cy + (centerDistance * Math.sin(angle));\n        _textAttrs['line-height'] = seriesDataLabelsStyle.lineHeight;\n        _textAttrs['text-bound'] = [setDataLabelStyle.backgroundColor,\n          setDataLabelStyle.borderColor,\n          seriesDataLabelsStyle.borderThickness,\n          seriesDataLabelsStyle.borderPadding,\n          seriesDataLabelsStyle.borderRadius,\n          seriesDataLabelsStyle.borderDash];\n      }\n    }\n  }\n\n  /**\n   * Parses label attributes and position during post space management\n   *\n   * @param {any} parentObj\n   * @memberof MultiLevelPieDataset\n   */\n  parseLabelAttributes (parentInstance) {\n    var dataSet = this,\n      parentObj = parentInstance,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      displayValue,\n      i,\n      setConfig;\n\n    // dataLabelsLayer.show();\n    !parentObj && (parentObj = dataSet);\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.parseLabelAttributes(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    // plotItem = setConfig.plotItem;\n    displayValue = setConfig.displayValue;\n    if (setConfig.level) {\n      if ((displayValue !== UNDEF) && (displayValue !== BLANKSTRING)) {\n        setConfig.props.label = {\n          attr: setConfig._textAttrs\n        };\n      }\n    }\n  }\n\n  draw (parentInstance) {\n    var dataSet = this,\n      parentObj = parentInstance,\n      dataSetConfig = dataSet.config,\n      chart = dataSet.getFromEnv('chart'),\n      dataSetComponents = dataSet.components,\n      len = dataSetComponents.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      setGraphics,\n      setConfig,\n      element,\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n      events = dataSetConfig.events || {},\n      plotHoverFN = function (e) {\n        var o = this,\n          mouseOver = events.mouseOver,\n          plotItem = o.plotItem || o.data('plotItem'),\n          dataset = plotItem.chart.getDatasets()[0]; // eslint-disable-line good-practices/no-single-usage-variable\n        chart.plotEventHandler(o, e, ROLLOVER);\n        mouseOver && mouseOver.call(o);\n        dataset.fireEvent('datasetrollover', { pValue: plotItem.pValue, value: plotItem.value, displayValue: setConfig.displayValue });\n      },\n      plotMouseOut = function (e) {\n        var o = this,\n          mouseOut = events.mouseOut,\n          plotItem = o.plotItem || o.data('plotItem'),\n          chartAPI = plotItem.chart,\n          dataset = chartAPI.getDatasets()[0]; // eslint-disable-line good-practices/no-single-usage-variable\n        chartAPI.plotEventHandler(o, e, ROLLOUT);\n        mouseOut && mouseOut.call(o);\n        dataset.fireEvent('datasetrollout', { pValue: plotItem.pValue, value: plotItem.value, displayValue: setConfig.displayValue });\n      },\n      // Fired when clicked over the hot elements.\n      clickFunc = function (setDataArr) {\n        var ele = this; // eslint-disable-line good-practices/no-single-usage-variable\n        chart.plotEventHandler(ele, setDataArr);\n      },\n      pool = dataSet.config.pool || (dataSet.config.pool = {}),\n      removeDataArr = dataSetComponents.removeDataArr;\n    // dataSetConfig.innerSize = innerRadius * 2;\n\n    removeDataArr && removeDataArr.length && dataSet.removeElement();\n    if (!parentObj) {\n      parentObj = dataSet;\n      dataLabelsLayer.css(chart.config.dataLabelStyle);\n    }\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.draw(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    if (setConfig.level) {\n      setGraphics = parentObj.graphics;\n      element = setGraphics.element;\n      if (pool.element && pool.element.length) {\n        element = setGraphics.element = element || pool.element.shift();\n      }\n      // Create/reuse element\n      element = setGraphics.element = dataSet.getFromEnv('animationManager').setAnimation({\n        el: setGraphics.element || 'ringpath',\n        attr: setConfig.props.element.attr,\n        container: chart.getChildContainer('plotGroup'),\n        component: dataSet,\n        state: 'appearing',\n        label: 'ringpath'\n      });\n\n      element.addPattern(setConfig.props.element.patternAttr, dataSetConfig.usePattern);\n\n      element.shadow(dataSetConfig.showShadow && !!setConfig.shadow)\n        .data('plotItem', setConfig.plotItem)\n        .data(EVENTARGS, setConfig.eventArgs)\n        .on('fc-mouseover', plotHoverFN)\n        .on('fc-mouseout', plotMouseOut)\n        .on('fc-click', clickFunc);\n      dataSet.getFromEnv('toolTipController').enableToolTip(element, setConfig.toolText);\n\n      if (!i && !dataSetConfig._drawn) {\n        dataSetConfig._drawn = true;\n        dataLabelsLayer.show();\n        dataSet.addJob('labelJob', dataSet.drawLabel.bind(dataSet), priorityList.label);\n      }\n    } else {\n      // If the chart is already drawn, then instead of sheduling the label drawing, directly draw the\n      // labels.\n      dataSetConfig._drawn && dataSet.drawLabel();\n      // at the end of all the tree structure, hide all the pool elements.\n      dataSet.removeChild(dataSet.config.pool, true);\n    }\n  }\n  drawLabel (parentInstance) {\n    var dataSet = this,\n      config = dataSet.config,\n      parentObj = parentInstance,\n      chart = dataSet.getFromEnv('chart'),\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      labelSmartObj,\n      angle,\n      angleStretch,\n      animationManager = dataSet.getFromEnv('animationManager'),\n      chartConfig = chart.config,\n      labelAttrs,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      tooltipOptions = chartConfig.tooltip || {},\n      isTooltip = tooltipOptions && tooltipOptions.enabled !== false, // eslint-disable-line good-practices/no-single-usage-variable\n      toolText,\n      displayValue,\n      tempLabel,\n      i,\n      setGraphics,\n      setConfig,\n      label,\n      events = (config || {}).events || {},\n      labelHoverFN = function (e) {\n        var o = this,\n          mouseOver = events.mouseOver;\n        chart.plotEventHandler(o, e, ROLLOVER);\n        mouseOver && mouseOver.call(o);\n      },\n      labelOutFN = function (e) {\n        var o = this,\n          mouseOut = events.mouseOut;\n        chart.plotEventHandler(o, e, ROLLOUT);\n        mouseOut && mouseOut.call(o);\n      },\n      // Fired when clicked over the hot elements.\n      clickFunc = function (setDataArr) {\n        var ele = this; // eslint-disable-line good-practices/no-single-usage-variable\n        chart.plotEventHandler(ele, setDataArr);\n      },\n      pool = config.pool || (config.pool = {}),\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup');\n\n    dataLabelsLayer.show();\n    !parentObj && (parentObj = dataSet);\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.drawLabel(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    displayValue = setConfig.displayValue;\n    if (setConfig.level) {\n      setGraphics = parentObj.graphics;\n      tempLabel = setGraphics.label;\n      angleStretch = setConfig.angleStrech;\n      // Condition to check if skipOverlapLabels is set to true\n      if ((displayValue !== UNDEF) && (displayValue !== BLANKSTRING) && (!config.skipOverlapLabels || (config.skipOverlapLabels && angleStretch > 0.1))) {\n        label = setGraphics.label;\n        if (pool.label && pool.label.length) {\n          label = setGraphics.label = label || pool.label.shift();\n        }\n        labelAttrs = setConfig.props.label.attr;\n\n        if (config.autoRotateLabels) {\n          // Angle calculation for label rotation\n          angle = ((setConfig.startAngle + angleStretch / 2) * 180 / Math.PI);\n          if (Math.abs(angle) > 90 && Math.abs(angle) < 180) {\n            angle = -(180 - angle);\n          }\n          if (Math.floor(angleStretch * 180 / Math.PI) === 360) {\n            angle = 0;\n          }\n          // Use smart label when autoRotateLabels is set to true\n          smartLabel.useEllipsesOnOverflow(config.useEllipsesWhenOverflow);\n          smartLabel.setStyle(chartConfig.dataLabelStyle);\n          labelSmartObj = smartLabel.getSmartText(displayValue,\n            (setConfig.outerRadius - setConfig.innerRadius - 10), smartLabel._lineHeight);\n          labelAttrs.text = labelSmartObj.text;\n          labelAttrs.transform = getSuggestiveRotation(\n            parseFloat(angle),\n            labelAttrs.x, labelAttrs.y);\n        } else {\n          labelAttrs.transform = getSuggestiveRotation(\n            0,\n            labelAttrs.x, labelAttrs.y);\n        }\n        // Create/Reuse label\n        label = setGraphics.label = animationManager.setAnimation({\n          el: tempLabel || 'text',\n          attr: labelAttrs,\n          container: dataLabelsLayer,\n          component: dataSet,\n          state: 'appearing',\n          label: 'text'\n        });\n        label.outlineText(config.showTextOutline, labelAttrs.fill);\n        if (!tempLabel) {\n          label.on('fc-click', clickFunc)\n            .on('fc-mouseout', labelOutFN)\n            .on('fc-mouseover', labelHoverFN);\n        }\n        label.data('plotItem', setConfig.plotItem)\n          .data(EVENTARGS, setConfig.eventArgs);\n\n        isTooltip && dataSet.getFromEnv('toolTipController').enableToolTip(label, toolText);\n      } else {\n        // In case of extra labels, hide them\n        tempLabel && animationManager.setAnimation({\n          el: tempLabel,\n          component: dataSet,\n          label: 'text'\n        });\n        delete setGraphics.label;\n      }\n    } else {\n      // at the end of all the tree structure, hide all the pool elements.\n      dataSet.removeChild(dataSet.config.pool, true);\n    }\n  }\n}\nexport default MultiLevelPieDataset;\n","export default {\n  'initial.dataset.multiLevelPie': function () {\n    let datasetConf = this.config,\n      ringpath;\n\n    return {\n      'ringpath.appearing': function (inputJSON) {\n        ringpath = inputJSON.attr.ringpath;\n        return [\n          {\n            initialAttr: {\n              ringpath: [ringpath[0], ringpath[1], ringpath[2], ringpath[3],\n                datasetConf.initialAngle, datasetConf.initialAngle]\n            },\n            slot: 'plot'\n          }\n        ];\n      },\n      'text.appearing': () => {\n        return [\n          {\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'final'\n          }\n        ];\n      }\n    };\n  }\n};\n","import Sunburst from '@fusioncharts/powercharts/src/chart/sunburst';\nexport default Sunburst;\n","import datasetFactory from '../../factories/sunburst-dataset';\nimport MultilevelPie from '../multilevelpie';\nimport { pluckNumber, extend2 } from '@fusioncharts/core/src/lib';\n\nconst DEFAULT_PALETTE_COLOR = [\n    '1E77B4',\n    'FF7F0E',\n    '2BA02C',\n    'D62728',\n    '9466BD',\n    '8C564B',\n    'E376C2',\n    '7F7F7F',\n    'BCBD22',\n    '17BECF'\n  ],\n  DEFAULT_BG_COLOR = 'FFFFFF,FFFFFF';\n\nclass Sunburst extends MultilevelPie {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'Sunburst';\n  }\n\n  constructor () {\n    super();\n    this.defaultPaletteOptions = {\n      // Store colors now\n      paletteColors:\n        [\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR,\n          DEFAULT_PALETTE_COLOR\n        ],\n      bgColor: [DEFAULT_BG_COLOR, DEFAULT_BG_COLOR, DEFAULT_BG_COLOR, DEFAULT_BG_COLOR, DEFAULT_BG_COLOR]\n    };\n    this.registerFactory('dataset', datasetFactory, ['canvas']);\n  }\n\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    this.config.allowdrilltonode = 1;\n    this.config.showvaluesintooltip = 1;\n  }\n\n  configureAttributes (dataSource) {\n    super.configureAttributes(dataSource);\n    let chart = this;\n    chart.config.allowdrilltonode = pluckNumber(dataSource.chart.allowdrilltonode, 1);\n\n    if (chart.config.allowdrilltonode) {\n      chart.addToEnv('linkClickFN', function () { return null; });\n    }\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'Sunburst';\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    const parsedDS = this.parseAndSanitizeData();\n    let i = 0;\n\n    if (!parsedDS || !Array.isArray(parsedDS) || parsedDS.length === 0) {\n      return true;\n    }\n\n    for (; i < parsedDS.length; i++) {\n      if (parsedDS[i].category && parsedDS[i].category.length === 0 && !parsedDS[i].value) {\n        return true;\n      }\n    }\n  }\n\n  parseAndSanitizeData () {\n    let categories = [],\n      flatInput = [],\n      tempMap = {},\n      chart = this,\n      dataSource = extend2({}, chart.getFromEnv('dataSource'));\n\n    if (dataSource && dataSource.data && Array.isArray(dataSource.data)) {\n      flatInput = dataSource.data.map(item => {\n        tempMap[item.id] = item;\n        !item.parent && (item.isRootNode = true);\n        !item.categories && (item.category = []);\n        return item;\n      }).filter(item => {\n        if (item.id && (!item.value || !isNaN(+item.value))) {\n          if (!item.parent || (item.parent && tempMap[item.parent])) {\n            return true;\n          }\n        }\n        delete tempMap[item.id];\n        return false;\n      });\n\n      for (let key in tempMap) {\n        if (tempMap.hasOwnProperty(key)) {\n          let item = tempMap[key];\n          if (item.parent) {\n            tempMap[item.parent].category.push(item);\n          }\n          if (item.isRootNode) {\n            categories.push(item);\n          }\n        }\n      }\n\n      chart.addToEnv('parsedDataSource', categories);\n    }\n    return flatInput;\n  }\n}\nexport default Sunburst;\n","import { datasetFactory } from '@fusioncharts/core/src/lib';\nimport SunburstDataset from '../dataset/sunburst';\n\nconst depthFirstVisit = function (arr) {\n  let sumOfVisit = 0;\n  arr.forEach(c => {\n    let givenValue = c.value ? (+c.value) : 0,\n      applicableValue = c.category.length > 0 ? depthFirstVisit(c.category) : givenValue;\n\n    if (applicableValue > givenValue) {\n      c.value = applicableValue;\n    } else {\n      c.value = givenValue;\n      applicableValue = givenValue;\n    }\n\n    sumOfVisit += applicableValue;\n  });\n\n  return sumOfVisit;\n};\n\n/**\n * function to  create dataset, group manager.\n * assign dataset to group manager.\n **/\nexport default (chart) => {\n  let categories = chart.getFromEnv('parsedDataSource') || [],\n    length;\n\n  categories.forEach(function depthFirstVisitRunner (e) {\n    let sum = depthFirstVisit(e.category);\n    !e.value && (e.value = 0);\n    if (sum > (+e.value)) {\n      e.value = sum;\n    }\n  });\n\n  chart.config.categories = categories;\n  length = categories.length;\n\n  // if the data has no categories in them.\n  if (!length) {\n    chart.setChartMessage();\n    return;\n  }\n\n  datasetFactory(chart, SunburstDataset, 'dataset', length, [{\n    inputTree: categories\n  }]);\n};\n","import {\n  COMMASPACE, pluck, pluckNumber,\n  toRaphaelColor, parseUnsafeString, getDashStyle, getValidValue,\n  parseTooltext, getFirstValue, convertColor, getSuggestiveRotation,\n  BLANKSTRING, extend2\n} from '@fusioncharts/core/src/lib';\nimport { addDep, getDep } from '@fusioncharts/core/src/dependency-manager';\nimport sunburstAnimation from './index.animation';\nimport { priorityList } from '@fusioncharts/core/src/schedular';\nimport raphaelShapesRingpath from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.ringpath';\nimport MultiLevelPieDataset from '../multilevelpie';\n\nlet Raphael = getDep('redraphael', 'plugin'),\n  BLANK = '',\n  NORMALSTRING = 'normal',\n  COLOR_FFFFFF = 'FFFFFF',\n  COLOR_000000 = '000000',\n  HUNDRED_PERCENT = '100%',\n  ZERO_STR = '0',\n  FOREST_INNER_RADIUS = '30',\n  pInt = function (s, mag) {\n    return parseInt(s, mag || 10);\n  },\n  DASH_DEF = 'none',\n  UNDEF,\n  ROLLOVER = 'DataPlotRollOver',\n  ROLLOUT = 'DataPlotRollOut',\n  POINTER = 'pointer',\n  EVENTARGS = 'eventArgs',\n  PX = 'px',\n  INNERRADIUS = /^[0-9]+\\%?$|^([0-9]+[.][0-9]+)\\%?$/,\n  calculateInnerRadius = function (innerRadius, pieRadius) {\n    let innerRadiusLength = innerRadius && innerRadius.length, // eslint-disable-line good-practices/no-single-usage-variable\n      calculatedInnerRadius;\n    if (!innerRadius) {\n      return 0;\n    }\n    if (innerRadius.charAt(innerRadiusLength - 1) === '%') {\n      // execute when innerRadius is given as percentage\n      calculatedInnerRadius = pluckNumber(pieRadius) * (pluckNumber(innerRadius.split('%')[0]) / 100);\n    } else {\n      // execute when innerRadius is given in pixels.\n      calculatedInnerRadius = pluckNumber(innerRadius);\n    }\n\n    if (calculatedInnerRadius < pieRadius) {\n      return calculatedInnerRadius;\n    } return 0;\n  };\naddDep({\n  name: 'sunburstAnimation',\n  type: 'animationRule',\n  extension: sunburstAnimation\n});\n\n// Adding required shapes for chart.\nraphaelShapesRingpath(Raphael);\nclass SunburstDataset extends MultiLevelPieDataset {\n  constructor () {\n    super();\n    let dataset = this;\n    dataset.components = {\n      data: []\n    };\n    dataset.graphics = {\n    };\n    dataset.elementClickedFn = function (e) {\n      let ele = this,\n        chart = dataset.getFromEnv('chart'),\n        eventArgs = ele.data(EVENTARGS);\n      chart.plotEventHandler(ele, e);\n      if (chart.config.allowdrilltonode) {\n        dataset.chartDrillDown(eventArgs.nodeId, eventArgs.nodeParentId, eventArgs.childrenCount);\n      }\n    };\n    dataset.drillDownToId = UNDEF;\n    dataset.nodeColorMap = {};\n  }\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'multiLevelPie';\n  }\n  configureAttributes (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n\n    this.config.JSONData = datasetJSON;\n    this.config.inputTree = datasetJSON.inputTree || [];\n    this.config.isDrilledDown = datasetJSON.isDrilledDown;\n\n    var fontBdrColor,\n      dataSet = this,\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      dataSetConfig = dataSet.config || (dataSet.config = {}),\n      dataLabels = dataSetConfig.dataLabelOptions || (dataSetConfig.dataLabelOptions = {}),\n      piePlotOptions = dataSetConfig.piePlotOptions,\n      style = chart.config.style,\n      chartAttrs = chart.getFromEnv('dataSource').chart,\n      centerAngle = pluckNumber(-chartAttrs.centerangle, 180),\n      totalAngle = pluckNumber(chartAttrs.totalangle, 360),\n      tranverseToRoot = function (dataInstance, evtType) {\n        let dataObj = dataInstance;\n        travserseAllElements(dataSet, evtType);\n        while (dataObj.graphics.element) {\n          (dataObj.graphics.element).attr({\n            fill: (evtType === 'mouseover' && dataSetConfig.hoverFillColor)\n              ? convertColor(dataSetConfig.hoverFillColor)\n              : (dataObj.config || this.data('plotItem')).color,\n            'fill-opacity': evtType === 'mouseover' ? dataSetConfig.hoverFillAlpha\n              : (dataObj.config || this.data('plotItem')).alpha\n          });\n          dataObj = dataObj.config.parent;\n        }\n      },\n      travserseAllElements = function (ds, evtType) {\n        let dsArr = ds.components.data;\n        if (dsArr) {\n          for (let i = 0; i < dsArr.length; i++) {\n            if (dsArr[i].graphics && dsArr[i].graphics.element) {\n              dsArr[i].graphics.element.attr({\n                fill: (dsArr[i].config || this.data('plotItem')).color,\n                'fill-opacity': evtType === 'mouseover' ? dataSetConfig.unFocussedAlpha\n                  : (dsArr[i].config || this.data('plotItem')).alpha\n              });\n            }\n          }\n        }\n        if (ds.components && dsArr) {\n          for (let i = 0; i < dsArr.length; i++) {\n            travserseAllElements(dsArr[i], evtType);\n          }\n        }\n      },\n      traverseAllChildren = function (dataObj, evtType) {\n        var k;\n        (dataObj.graphics.element).attr({\n          fill: evtType === 'mouseover' ? dataSetConfig.hoverFillColor\n            : (dataObj.config || this.data('plotItem')).color\n        });\n        for (k = 0; k < (dataObj.components.data && dataObj.components.data.length); k++) {\n          traverseAllChildren.call(this, dataObj.components.data[k], evtType);\n        }\n      },\n      mouseEvtHandler = function (evtType) {\n        if (!dataSetConfig.useHoverColor) {\n          return;\n        }\n        var point = this.data('plotItem'),\n          selfRef = point.selfRef;\n\n        if (!dataSetConfig.highlightParentPieSlices && !dataSetConfig.highlightChildPieSlices) {\n          (selfRef.graphics.element).attr({\n            fill: evtType === 'mouseover' ? dataSetConfig.hoverFillColor : (selfRef.config || point).color\n          });\n        } else if (!dataSetConfig.highlightParentPieSlices && dataSetConfig.highlightChildPieSlices) {\n          traverseAllChildren.call(this, selfRef, evtType);\n        } else if (dataSetConfig.highlightParentPieSlices && !dataSetConfig.highlightChildPieSlices) {\n          tranverseToRoot.call(this, selfRef, evtType);\n        } else if (dataSetConfig.highlightParentPieSlices && dataSetConfig.highlightChildPieSlices) {\n          tranverseToRoot.call(this, selfRef, evtType);\n          traverseAllChildren.call(this, selfRef, evtType);\n        }\n      };\n    dataSetConfig.isSingleRootNode = dataSetConfig.inputTree.length === 1;\n    dataSetConfig.enableAnimation = pluckNumber(chartAttrs.animation,\n      chartAttrs.defaultanimation, 1);\n    dataSetConfig.animation = !dataSetConfig.enableAnimation ? false : {\n      duration: pluckNumber(chartAttrs.animationduration, chartAttrs.moveduration, 1) * 1000\n    };\n    dataSetConfig.showShadow = pluckNumber(chartAttrs.showshadow, 0);\n    dataSetConfig.useHoverColor = Boolean(pluckNumber(chartAttrs.usehovercolor, 1));\n    dataSetConfig.showTextOutline = Boolean(pluckNumber(chartAttrs.textoutline, 0));\n    dataSetConfig.hoverFillAlpha = pluckNumber(chartAttrs.hoverfillalpha, 80);\n    dataSetConfig.hoverFillColor = chartAttrs.hoverfillcolor;\n    dataSetConfig.unFocussedAlpha = pluck(chartAttrs.unfocussedalpha, '0.35');\n    fontBdrColor = getFirstValue(chartAttrs.valuebordercolor, BLANK);\n    fontBdrColor = fontBdrColor ? convertColor(\n      fontBdrColor, pluckNumber(chartAttrs.valueborderalpha, chartAttrs.valuebgalpha,\n        chartAttrs.valuealpha, 100)) : BLANK;\n    // create the style object if required.\n    // fix for multilevel pie datavalue cosmetics issue RED-1594\n    !dataLabels.style && (dataLabels.style = {\n      fontFamily: pluck(chartAttrs.valuefont, style.fontFamily),\n      fontSize: pluckNumber(this.computeFontSize(chartAttrs.valuefontsize),\n        pInt(style.fontSize, 10)) + PX,\n      color: convertColor(pluck(chartAttrs.valuefontcolor, style.color),\n        pluckNumber(chartAttrs.valuefontalpha,\n          chartAttrs.valuealpha, 100)),\n      fontWeight: pluckNumber(chartAttrs.valuefontbold) ? 'bold' : NORMALSTRING,\n      fontStyle: pluckNumber(chartAttrs.valuefontitalic) ? 'italic' : NORMALSTRING,\n      backgroundColor: chartAttrs.valuebgcolor\n        ? convertColor(chartAttrs.valuebgcolor,\n          pluckNumber(chartAttrs.valuebgalpha, chartAttrs.valuealpha, 100)) : BLANK,\n      border: fontBdrColor || chartAttrs.valuebgcolor\n        ? (pluckNumber(chartAttrs.valueborderthickness, 1) + 'px solid') : BLANK,\n      borderPadding: pluckNumber(chartAttrs.valueborderpadding, 2),\n      borderThickness: pluckNumber(chartAttrs.valueborderthickness, style.borderThickness, 1),\n      borderRadius: pluckNumber(chartAttrs.valueborderradius, style.borderRadius, 0),\n      borderColor: fontBdrColor,\n      borderDash: pluckNumber(chartAttrs.valueborderdashed, 0)\n        ? getDashStyle(pluckNumber(chartAttrs.valueborderdashlen, 4),\n          pluckNumber(chartAttrs.valueborderdashgap, 2)) : DASH_DEF\n    });\n\n    // stop point slicing\n    !piePlotOptions && (piePlotOptions = (dataSetConfig.piePlotOptions = {}));\n    piePlotOptions.allowPointSelect = false;\n    dataSetConfig.borderAlpha = pluck(chartAttrs.plotborderalpha, chartAttrs.pieborderalpha, 100);\n    dataSetConfig.borderColor = convertColor(pluck(chartAttrs.plotbordercolor,\n      chartAttrs.piebordercolor, COLOR_FFFFFF), +chartAttrs.showplotborder !== 0\n      ? pluck(chartAttrs.plotborderalpha, chartAttrs.pieborderalpha, 100) : 0);\n    dataSetConfig.rawborderColor = pluck(chartAttrs.plotbordercolor,\n      chartAttrs.piebordercolor, COLOR_FFFFFF);\n    dataSetConfig.showplotborder = pluckNumber(chartAttrs.showplotborder, 1);\n    dataSetConfig.showTooltip = pluckNumber(chartAttrs.showtooltip, 1);\n\n    dataSetConfig.borderWidth = pluckNumber(chartAttrs.pieborderthickness,\n      chartAttrs.plotborderthickness, 1);\n\n    piePlotOptions.startingAngle = 0; // set the chart's startingAngle as 0 [alwase]\n    piePlotOptions.size = HUNDRED_PERCENT;\n\n    dataSetConfig.highlightParentPieSlices = pluckNumber(chartAttrs.highlightparentpieslices,\n      chartAttrs.highlightparentpienodes, 1);\n    dataSetConfig.highlightChildPieSlices = pluckNumber(chartAttrs.highlightchildpieslices,\n      chartAttrs.highlightchildpienodes, 0);\n\n    dataSetConfig.showLabels = pluckNumber(chartAttrs.showlabels, 1);\n    dataSetConfig.showValues = pluckNumber(chartAttrs.showvalues, 0);\n    dataSetConfig.showValuesInTooltip = pluckNumber(chartConfig.showvaluesintooltip,\n      chartAttrs.showvaluesintooltip,\n      chartAttrs.showvalues, 0);\n    dataSetConfig.showPercentValues = pluckNumber(chartAttrs.showpercentvalues,\n      chartAttrs.showpercentagevalues, 0);\n    dataSetConfig.showPercentInTooltip = pluckNumber(chartAttrs.showpercentintooltip, 0);\n    dataSetConfig.toolTipSepChar = pluck(chartAttrs.tooltipsepchar, chartAttrs.hovercapsepchar, COMMASPACE);\n    dataSetConfig.labelSepChar = parseUnsafeString(pluck(chartAttrs.labelsepchar, dataSetConfig.toolTipSepChar));\n    dataSetConfig.tooltext = chartAttrs.plottooltext;\n    dataSetConfig.alpha = pluck(chartAttrs.plotfillalpha, chartAttrs.piefillalpha, 100);\n    dataSetConfig.startAngle = (centerAngle - (totalAngle / 2)) * (Math.PI / 180);\n    dataSetConfig.endtAngle = (centerAngle + (totalAngle / 2)) * (Math.PI / 180);\n    dataSetConfig.initialAngle = dataSetConfig.endtAngle;\n    dataSetConfig.originX = pluckNumber(chartAttrs.originx);\n    dataSetConfig.originY = pluckNumber(chartAttrs.originy);\n\n    dataSetConfig.events = {\n      mouseOver: function () {\n        mouseEvtHandler.call(this, 'mouseover');\n      },\n      mouseOut: function () {\n        mouseEvtHandler.call(this, 'mouseout');\n      }\n    };\n\n    // remove the plotboder\n    chartConfig.plotBorderWidth = 0;\n\n    // remove the plotboder\n    chartConfig.plotBorderWidth = 0;\n    dataSetConfig.maxLevel = dataSet.addMSPieCat(dataSet.config.inputTree, 1, dataSet, dataSetConfig.startAngle,\n      dataSetConfig.endtAngle);\n    dataSetConfig.pieRadius = parseInt(chartAttrs.pieradius, 10);\n\n    // dataSetConfig.innerRadius = pluckNumber(Number(pluck(chartAttrs.innerradius, '0%').split('%')[0]), 0);\n    dataSetConfig.innerRadius = dataSetConfig.isSingleRootNode ? ZERO_STR : FOREST_INNER_RADIUS;\n    (INNERRADIUS.test(chartAttrs.innerradius)) &&\n      (!dataSetConfig.isSingleRootNode ? +(dataSetConfig.innerRadius) < +(chartAttrs.innerradius) &&\n        (dataSetConfig.innerRadius = pluck(chartAttrs.innerradius))\n        : (dataSetConfig.innerRadius = pluck(chartAttrs.innerradius)));\n\n    dataLabels.distance = 0;\n    dataLabels.placeLabelsInside = true;\n  }\n  // doHide is a Boolean Flag to hide the element or not.\n  // All the graphical elements in excess are pushed to the graphics pool. They are hidden only after the\n  // entire draw is complete.\n  removalFn (ele, prop) {\n    var dataSet = this,\n      // eslint-disable-next-line good-practices/no-function-dependency\n      hideFN = function () {\n        this.remove();\n      };\n\n    dataSet.getFromEnv('animationManager').setAnimation({\n      el: ele,\n      label: prop === 'element' ? 'ringpath' : 'label',\n      component: dataSet,\n      callback: hideFN\n    });\n  }\n  removeGraphics (obj) {\n    var i,\n      prop,\n      dataSet = this,\n      childData = obj.components && obj.components.data,\n      len,\n      graphics = obj.graphics;\n    if (childData) {\n      len = childData.length;\n      for (i = 0; i < len; i += 1) {\n        dataSet.removeGraphics(childData[i]);\n      }\n    }\n\n    if (obj.graphics) {\n      for (prop in graphics) {\n        if (graphics.hasOwnProperty(prop)) {\n          dataSet.removalFn(obj.graphics[prop], prop);\n        }\n      }\n    }\n  }\n  removeChild (removalStore, doHide, type) {\n    var i,\n      elemObj,\n      dataSet = this;\n    if (removalStore.length) {\n      for (i = 0; i < removalStore.length; i += 1) {\n        elemObj = removalStore[i];\n        if (type) {\n          dataSet.removalFn(elemObj, doHide, type);\n        } else {\n          dataSet.removeGraphics(elemObj, doHide);\n        }\n      }\n    } else {\n      // if the removalStore is in the Object structure.\n      // eslint-disable-next-line guard-for-in\n      for (i in removalStore) {\n        dataSet.removeChild(removalStore[i], doHide, i);\n      }\n    }\n  }\n  addMSPieCat (catArr, level, parentObj, startAngle, endAngle, totalValueParam = null) {\n    var dataObj,\n      dataObjLen,\n      cat = extend2([], catArr),\n      catObjLen,\n      catLen = cat.length,\n      dataSet = this,\n      data = parentObj.components.data,\n      dataSetConfig = dataSet.config,\n      numberFormatter = dataSet.getFromEnv('number-formatter'),\n      sharePercent,\n      currentLevelValue = 0,\n      totalValue,\n      catObj,\n      catVal,\n      i,\n      label,\n      labelSepChar = dataSetConfig.labelSepChar,\n      fillalpha,\n      valueStr,\n      pValueStr,\n      toolText,\n      displayValue,\n      rawColor,\n      showLabel,\n      showPlotBorder,\n      maxLevel = level,\n      dataLength = data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      removalFn = function () {\n        dataSet.removeChild.apply(dataSet, arguments);\n      },\n      catLength = cat.length,\n      totAngle = endAngle - startAngle, // eslint-disable-line good-practices/no-single-usage-variable\n      tempAngle,\n      cumilative = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      preDataOldEndAngle;\n\n    for (i = 0; i < catLen; i += 1) {\n      // store for later use\n      catObj = cat[i];\n      catObj._userValue = numberFormatter.getCleanValue(catObj.value, true);\n      catObj._value = pluckNumber(catObj._userValue, 1);\n      currentLevelValue += catObj._value;\n    }\n    // Total value can't be zero, since its used in denominator to find ratio.\n    totalValue = totalValueParam || (currentLevelValue || 1);\n    // add the category\n    sharePercent = totAngle / totalValue; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = catLen - 1; i >= 0; i -= 1) {\n      catObj = cat[i];\n      catVal = sharePercent * catObj._value;\n      label = parseUnsafeString(pluck(catObj.label, catObj.name));\n      valueStr = catObj._userValue !== null\n        ? numberFormatter.dataLabels(catObj._userValue) : BLANK;\n      pValueStr = numberFormatter.percentValue((catObj._value /\n        totalValue) * 100);\n      // pointIndex = sLevel.length - 1;\n      fillalpha = pluckNumber(catObj.alpha, dataSetConfig.alpha);\n      showLabel = pluckNumber(catObj.showlabel, dataSetConfig.showLabels);\n      showPlotBorder = pluckNumber(dataSetConfig.showplotborder, 1);\n      displayValue = (showLabel === 1) ? label : BLANK;\n\n      if (pluckNumber(catObj.showvalue, dataSetConfig.showValues) === 1) {\n        if (dataSetConfig.showPercentValues) {\n          displayValue += displayValue !== BLANK ? (labelSepChar + pValueStr) : pValueStr;\n        } else if (valueStr !== UNDEF && valueStr !== BLANK) {\n          displayValue += displayValue !== BLANK ? (labelSepChar + valueStr) : valueStr;\n        }\n      }\n      toolText = dataSetConfig.showTooltip ? parseUnsafeString(pluck(catObj.tooltext, catObj.hovertext,\n        dataSetConfig.tooltext), false) : UNDEF;\n      if (toolText === BLANK) {\n        toolText = label;\n        if (dataSetConfig.showValuesInTooltip) {\n          if (dataSetConfig.showPercentInTooltip) {\n            toolText += toolText !== BLANK ? (labelSepChar + pValueStr) : pValueStr;\n          } else if (valueStr !== UNDEF && valueStr !== BLANK) {\n            toolText += toolText !== BLANK ? (labelSepChar + valueStr) : valueStr;\n          }\n        }\n      } else {\n        toolText = parseTooltext(toolText, [1, 2, 3, 14], {\n          percentValue: pValueStr,\n          label: label,\n          formattedValue: valueStr\n        }, catObj);\n      }\n\n      dataObj = data[i];\n      tempAngle = startAngle + cumilative;\n      cumilative += catVal;\n      if (!dataObj) {\n        dataObj = data[i] = {\n          components: {\n            data: []\n          },\n          config: {},\n          graphics: {}\n        };\n      }\n      // store old end angle for newly added element's aimation position\n      if (dataObj.graphics.element) {\n        preDataOldEndAngle = dataObj.config.startAngle + dataObj.config.angleStrech;\n      }\n      rawColor = catObj.color\n        ? catObj.color\n        : level > (dataSetConfig.isSingleRootNode ? 2 : 1)\n          ? parentObj.config.rawColor\n          : dataSet.config.isDrilledDown && dataSet.nodeColorMap[catObj.id]\n            ? dataSet.nodeColorMap[catObj.id]\n            : dataSet.getFromEnv('color-manager').getPlotColor();\n      dataSet.nodeColorMap[catObj.id] = rawColor;\n      dataObj.config = {\n        initialAngle: preDataOldEndAngle || (parentObj.config || parentObj.config).initialAngle,\n        startAngle: tempAngle,\n        alpha: fillalpha,\n        angleStrech: catVal,\n        level: level,\n        displayValue: displayValue,\n        showLabel: showLabel,\n        showPlotBorder: showPlotBorder,\n        toolText: toolText,\n        link: getValidValue(catObj.link),\n        drillDownToId: catObj.id,\n        drillDownParent: catObj.parent,\n        childrenCount: catObj.category ? catObj.category.length : 0,\n        rawColor,\n        doNotSlice: true, // added to stop slicing\n        color: convertColor(rawColor, fillalpha),\n        borderAlpha: pluck(catObj.plotborderalpha, dataSetConfig.borderAlpha),\n        borderWidth: pluckNumber(catObj.borderwidth, dataSetConfig.borderWidth),\n        borderColor: pluck(catObj.bordercolor, dataSetConfig.borderColor),\n        rawborderColor: pluck(catObj.bordercolor, dataSetConfig.rawborderColor),\n        dashStyle: pluckNumber(catObj.valueborderdashed, 0)\n          ? getDashStyle(pluckNumber(catObj.borderdashlen, 4),\n            pluckNumber(catObj.borderdashgap, 2)) : DASH_DEF,\n        shadow: {\n          opacity: Math.round(fillalpha > 50 ? fillalpha * fillalpha * fillalpha * 0.0001\n            : fillalpha * fillalpha * 0.01) * 0.01\n        },\n        isSingleTon: !((catLen > 1))\n      };\n      dataObj.config.parent = parentObj;\n\n      dataObj.config.dataLabelStyle = dataSet._configureDataLabelStyle(catObj);\n\n      if (catObj.category && catObj.category.length > 0) {\n        maxLevel = Math.max(maxLevel, dataSet.addMSPieCat(catObj.category, level + 1,\n          dataObj, tempAngle, (catVal + tempAngle), catObj._value));\n        if ((dataObjLen = dataObj.components.data.length) > (catObjLen = catObj.category.length)) {\n          removalFn(dataObj.components.data.splice(dataObjLen - 1, catObjLen));\n        }\n      } else {\n        dataObjLen = dataObj.components.data.length;\n        if (dataObjLen) {\n          // no child category, recursively remove existing childs (dataObj.components.data)\n          removalFn(dataObj.components.data.splice(0, dataObjLen));\n        }\n      }\n    }\n    // remove extra data\n    if (dataLength > catLength) {\n      // recursively remove elements with child\n      removalFn(data.splice(catLength));\n    }\n    return maxLevel;\n  }\n\n  chartDrillDown (drillDownToId, parentId, childrenCount) {\n    const dataset = this,\n      chart = dataset.getFromEnv('chart'),\n      tree = chart.getFromEnv('parsedDataSource'),\n      stack = [...tree],\n      toolTipController = dataset.getFromEnv('toolTipController');\n\n    let idToSearch = dataset.drillDownToId === drillDownToId ? parentId : drillDownToId,\n      searchedItem = null;\n\n    if (childrenCount > 0) {\n      if (idToSearch) {\n        while (stack.length > 0) {\n          var top = stack.pop();\n          if (top.id !== idToSearch) {\n            stack.push(...top.category);\n          } else {\n            searchedItem = top;\n          }\n        }\n      } else {\n        dataset.setData({\n          isDrilledDown: true,\n          inputTree: tree\n        }, true);\n        dataset.drillDownToId = UNDEF;\n        toolTipController.hideAll();\n        return;\n      }\n\n      if (searchedItem.length > 0 || searchedItem.category.length > 0) {\n        dataset.drillDownToId = idToSearch;\n        dataset.setData({\n          isDrilledDown: true,\n          inputTree: [searchedItem]\n        }, true);\n        toolTipController.hideAll();\n      }\n    }\n  }\n\n  parsePlotAttributes (parentInstance) {\n    var angle,\n      parentObj = parentInstance,\n      _textAttrs,\n      centerDistance,\n      level,\n      dataSet = this,\n      dataSetConfig = dataSet.config || {},\n      chart = dataSet.getFromEnv('chart'),\n      chartConfig = chart.config,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      seriesDataLabelsStyle = chartConfig.dataLabelStyle,\n      setDataLabelStyle,\n      canvasWidth = chartConfig.canvasWidth,\n      canvasHeight = chartConfig.canvasHeight,\n      cx = pluckNumber(dataSetConfig.originX, chartConfig.canvasLeft + canvasWidth * 0.5),\n      cy = pluckNumber(dataSetConfig.originY, chartConfig.canvasTop + canvasHeight * 0.5),\n      r,\n      r2,\n      color,\n      val,\n      displayValue,\n      clickablePath,\n      angle1,\n      angle2,\n      i,\n      setGraphics,\n      setConfig,\n      element,\n      pieSize = pluckNumber(dataSetConfig.pieRadius * 2, Math.min(canvasWidth, canvasHeight)),\n      // innerRadius in diameter of inner circle\n      innerRadius = calculateInnerRadius(dataSetConfig.innerRadius, pieSize / 2),\n      pool = dataSet.config.pool || (dataSet.config.pool = {}),\n      // either the user-specified size is chosen or the minimum aspect dimension is choosen\n      // pieSize is diameter of full pie\n      seriesHalfWidth = (pieSize - 2 * innerRadius) / (2 * dataSetConfig.maxLevel);\n    dataSetConfig.innerSize = innerRadius * 2;\n    if (!parentObj) {\n      parentObj = dataSet;\n    }\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.parsePlotAttributes(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    level = setConfig.level;\n    if (level) {\n      r = ((level) * seriesHalfWidth) + innerRadius;\n      r2 = ((level - 1) * seriesHalfWidth) + innerRadius;\n\n      setConfig.outerRadius = r;\n      setConfig.innerRadius = r2;\n\n      setGraphics = parentObj.graphics;\n      val = setConfig.angleStrech;\n      displayValue = setConfig.displayValue;\n      // toolText = setConfig.toolText;\n      clickablePath = (!!chart.config.allowdrilltonode && setConfig.childrenCount > 0) || !!setConfig.link;\n      color = setConfig.color;\n\n      angle1 = setConfig.startAngle;\n      angle2 = angle1 + setConfig.angleStrech;\n      element = setGraphics.element;\n      if (pool.element && pool.element.length) {\n        element = setGraphics.element = element || pool.element.shift();\n      }\n      setConfig.plotItem = {\n        chart: chart,\n        link: setConfig.link,\n        value: val,\n        color: color,\n        labelText: displayValue,\n        graphics: {\n          element: element\n        },\n        selfRef: parentObj\n      };\n      setConfig.eventArgs = {\n        alpha: setConfig.alpha,\n        borderAlpha: setConfig.borderAlpha,\n        link: setConfig.link,\n        label: setConfig.displayValue,\n        showLabel: setConfig.showLabel,\n        toolText: setConfig.toolText,\n        color: setConfig.rawColor,\n        borderColor: setConfig.rawborderColor,\n        borderThickness: setConfig.borderWidth,\n        showPlotBorder: setConfig.showPlotBorder,\n        nodeId: setConfig.drillDownToId,\n        nodeParentId: setConfig.drillDownParent,\n        childrenCount: setConfig.childrenCount\n      };\n      setConfig.props = {\n        element: {\n          attr: {\n            ringpath: [cx, cy, r, r2, angle1, angle2],\n            'stroke-width': setConfig.borderWidth,\n            'stroke': setConfig.borderColor,\n            fill: toRaphaelColor(setConfig.color),\n            'stroke-dasharray': setConfig.dashStyle,\n            cursor: clickablePath ? POINTER : 'initial'\n          }\n        }\n      };\n      if ((displayValue !== UNDEF) && (displayValue !== BLANKSTRING)) {\n        angle = (angle1 + angle2) / 2;\n        // for the innermost Concentric circle the center distance is presumed to be zero\n        centerDistance = ((r2 === 0) && setConfig.isSingleTon) ? 0 : r2 + ((r - r2) / 2);\n        if (!(_textAttrs = setConfig._textAttrs)) {\n          _textAttrs = setConfig._textAttrs = {};\n        }\n\n        setDataLabelStyle = setConfig.dataLabelStyle;\n\n        _textAttrs.text = displayValue;\n        _textAttrs.fill = setDataLabelStyle.color || COLOR_000000;\n        _textAttrs.direction = chartConfig.textDirection;\n        _textAttrs.cursor = clickablePath ? POINTER : 'initial';\n        _textAttrs.x = cx + (centerDistance * Math.cos(angle));\n        _textAttrs.y = cy + (centerDistance * Math.sin(angle));\n        _textAttrs['line-height'] = seriesDataLabelsStyle.lineHeight;\n        _textAttrs['text-bound'] = [setDataLabelStyle.backgroundColor,\n          setDataLabelStyle.borderColor,\n          seriesDataLabelsStyle.borderThickness,\n          seriesDataLabelsStyle.borderPadding,\n          seriesDataLabelsStyle.borderRadius,\n          seriesDataLabelsStyle.borderDash];\n      }\n    }\n  }\n\n  /**\n   * Parses label attributes and position during post space management\n   *\n   * @param {any} parentObj\n   * @memberof SunburstDataset\n   */\n  parseLabelAttributes (parentInstance) {\n    var dataSet = this,\n      parentObj = parentInstance,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      displayValue,\n      i,\n      setConfig;\n\n    // dataLabelsLayer.show();\n    !parentObj && (parentObj = dataSet);\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.parseLabelAttributes(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    // plotItem = setConfig.plotItem;\n    displayValue = setConfig.displayValue;\n    if (setConfig.level) {\n      if ((displayValue !== UNDEF) && (displayValue !== BLANKSTRING)) {\n        setConfig.props.label = {\n          attr: setConfig._textAttrs\n        };\n      }\n    }\n  }\n\n  draw (parentInstance) {\n    var dataSet = this,\n      parentObj = parentInstance,\n      dataSetConfig = dataSet.config || {},\n      chart = dataSet.getFromEnv('chart'),\n      dataSetComponents = dataSet.components,\n      len = dataSetComponents.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      setGraphics,\n      setConfig,\n      element,\n      elementCheck,\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup'),\n      events = dataSetConfig.events || {},\n      plotHoverFN = function (e) {\n        var o = this,\n          mouseOver = events.mouseOver,\n          plotItem = o.plotItem || o.data('plotItem'),\n          dataset = plotItem.chart.getDatasets()[0]; // eslint-disable-line good-practices/no-single-usage-variable\n        chart.plotEventHandler(o, e, ROLLOVER);\n        mouseOver && mouseOver.call(o);\n        dataset.fireEvent('datasetrollover', { pValue: plotItem.pValue, value: plotItem.value, displayValue: setConfig.displayValue });\n      },\n      plotMouseOut = function (e) {\n        var o = this,\n          mouseOut = events.mouseOut,\n          plotItem = o.plotItem || o.data('plotItem'),\n          chartAPI = plotItem.chart,\n          dataset = chartAPI.getDatasets()[0]; // eslint-disable-line good-practices/no-single-usage-variable\n        chartAPI.plotEventHandler(o, e, ROLLOUT);\n        mouseOut && mouseOut.call(o);\n        dataset.fireEvent('datasetrollout', { pValue: plotItem.pValue, value: plotItem.value, displayValue: setConfig.displayValue });\n      },\n      removeDataArr = dataSetComponents.removeDataArr;\n    // dataSetConfig.innerSize = innerRadius * 2;\n\n    removeDataArr && removeDataArr.length && dataSet.removeElement();\n    if (!parentObj) {\n      parentObj = dataSet;\n      dataLabelsLayer.css(chart.config.dataLabelStyle);\n    }\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.draw(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    if (setConfig.level) {\n      setGraphics = parentObj.graphics;\n      elementCheck = setGraphics.element;\n      // Create/reuse element\n      element = setGraphics.element = dataSet.getFromEnv('animationManager').setAnimation({\n        el: elementCheck || 'ringpath',\n        attr: setConfig.props.element.attr,\n        container: chart.getChildContainer('plotGroup'),\n        component: dataSet,\n        state: 'appearing',\n        label: 'ringpath'\n      });\n\n      if (!elementCheck) {\n        element.on('fc-mouseover', plotHoverFN)\n          .on('fc-mouseout', plotMouseOut);\n      }\n      element.shadow(dataSetConfig.showShadow && !!setConfig.shadow)\n        .data('plotItem', setConfig.plotItem)\n        .data(EVENTARGS, setConfig.eventArgs);\n\n      // On click, the chart is drilled down and drawn again\n      // The event handler callback is attached n number of times\n      // Thus removing old handlers\n      element.off('fc-click', dataSet.elementClickedFn);\n      element.on('fc-click', dataSet.elementClickedFn);\n\n      dataSet.getFromEnv('toolTipController').enableToolTip(element, setConfig.toolText);\n\n      if (!i && !dataSetConfig._drawn) {\n        dataSetConfig._drawn = true;\n        dataLabelsLayer.show();\n        dataSet.addJob('labelJob', dataSet.drawLabel.bind(dataSet), priorityList.label);\n      }\n    } else {\n      // If the chart is already drawn, then instead of sheduling the label drawing, directly draw the\n      // labels.\n      dataSetConfig._drawn && dataSet.drawLabel();\n    }\n  }\n  drawLabel (parentInstance) {\n    var dataSet = this,\n      angle,\n      angleStretch,\n      config = dataSet.config,\n      parentObj = parentInstance,\n      chart = dataSet.getFromEnv('chart'),\n      animationManager = dataSet.getFromEnv('animationManager'),\n      smartLabel = dataSet.getFromEnv('smartLabel'),\n      labelSmartObj,\n      chartConfig = chart.config,\n      labelAttrs,\n      len = dataSet.components.data.length, // eslint-disable-line good-practices/no-single-usage-variable\n      tooltipOptions = chartConfig.tooltip || {},\n      isTooltip = tooltipOptions && tooltipOptions.enabled !== false, // eslint-disable-line good-practices/no-single-usage-variable\n      toolText,\n      displayValue,\n      tempLabel,\n      i,\n      setGraphics,\n      setConfig,\n      label,\n      events = (config || {}).events || {},\n      labelHoverFN = function (e) {\n        var o = this,\n          mouseOver = events.mouseOver;\n        chart.plotEventHandler(o, e, ROLLOVER);\n        mouseOver && mouseOver.call(o);\n      },\n      labelOutFN = function (e) {\n        var o = this,\n          mouseOut = events.mouseOut;\n        chart.plotEventHandler(o, e, ROLLOUT);\n        mouseOut && mouseOut.call(o);\n      },\n      dataLabelsLayer = chart.getChildContainer('datalabelsGroup');\n\n    dataLabelsLayer.show();\n    !parentObj && (parentObj = dataSet);\n    len = parentObj.components.data.length; // eslint-disable-line good-practices/no-single-usage-variable\n    for (i = 0; i < len; i += 1) {\n      dataSet.drawLabel(parentObj.components.data[i]);\n    }\n    setConfig = parentObj.config;\n    angleStretch = setConfig.angleStrech;\n\n    angle = ((setConfig.startAngle + angleStretch / 2) * 180 / Math.PI);\n    if (Math.abs(angle) > 90 && Math.abs(angle) < 270) {\n      angle = -(180 - angle);\n    }\n    if (Math.floor(angleStretch * 180 / Math.PI) === 360) {\n      angle = 0;\n    }\n\n    displayValue = setConfig.displayValue;\n    smartLabel.useEllipsesOnOverflow(true);\n    smartLabel.setStyle(chartConfig.dataLabelStyle);\n    labelSmartObj = smartLabel.getSmartText(displayValue,\n      (setConfig.outerRadius - setConfig.innerRadius - 10), smartLabel._lineHeight);\n    if (setConfig.level) {\n      setGraphics = parentObj.graphics;\n      tempLabel = setGraphics.label;\n      if ((displayValue !== UNDEF) &&\n        (displayValue !== BLANKSTRING) &&\n        angleStretch > 0.1) {\n        label = setGraphics.label;\n        labelAttrs = setConfig.props.label.attr;\n        labelAttrs.text = labelSmartObj.text;\n        labelAttrs.transform = getSuggestiveRotation(\n          parseFloat(angle),\n          labelAttrs.x, labelAttrs.y);\n        // Create/Reuse label\n        label = setGraphics.label = animationManager.setAnimation({\n          el: tempLabel || 'text',\n          attr: labelAttrs,\n          container: dataLabelsLayer,\n          component: dataSet,\n          state: 'appearing',\n          label: 'text'\n        });\n        label.outlineText(config.showTextOutline, labelAttrs.fill);\n        if (!tempLabel) {\n          label.on('fc-mouseout', labelOutFN)\n            .on('fc-mouseover', labelHoverFN);\n\n          // On click, the chart is drilled down and drawn again\n          // The event handler callback is attached n number of times\n          // Thus removing old handlers\n          label.off('fc-click', dataSet.elementClickedFn);\n          label.on('fc-click', dataSet.elementClickedFn);\n        }\n        label.data('plotItem', setConfig.plotItem)\n          .data(EVENTARGS, setConfig.eventArgs);\n\n        isTooltip && dataSet.getFromEnv('toolTipController').enableToolTip(label, toolText);\n      } else {\n        // In case of extra labels, hide them\n        tempLabel && animationManager.setAnimation({\n          el: tempLabel,\n          component: dataSet,\n          label: 'text'\n        });\n        delete setGraphics.label;\n      }\n    }\n  }\n}\nexport default SunburstDataset;\n","export default {\n  'initial.dataset.multiLevelPie': function () {\n    let datasetConf = this.config,\n      ringpath;\n\n    return {\n      'ringpath.appearing': function (inputJSON) {\n        ringpath = inputJSON.attr.ringpath;\n        return [\n          {\n            initialAttr: {\n              ringpath: [ringpath[0], ringpath[1], ringpath[2], ringpath[3],\n                datasetConf.initialAngle, datasetConf.initialAngle]\n            },\n            slot: 'plot'\n          }\n        ];\n      },\n      'text.appearing': () => {\n        return [\n          {\n            initialAttr: {\n              opacity: 0\n            },\n            finalAttr: {\n              opacity: 1\n            },\n            slot: 'final'\n          }\n        ];\n      }\n    };\n  }\n};\n","import Multiaxisline from '@fusioncharts/powercharts/src/chart/multiaxisline';\nexport default Multiaxisline;\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport AreaBase from '@fusioncharts/charts/src/chart/_internal/areabase';\nimport axisFactory from '../../factories/multiaxis-axis';\nimport vCanvasFactory from '../../factories/multiaxis-vcanvas';\nimport datasetFactory from '../../factories/multiaxis-dataset';\nimport { getDep } from '@fusioncharts/core/src/dependency-manager';\nimport raphaelShapesButton from '@fusioncharts/core/src/_internal/redraphael/redraphael-shapes/redraphael-shapes.button';\n\nimport { pluckNumber, extend2, pluck, chartPaletteStr, preDefStr, POSITION_TOP, POSITION_LEFT, POSITION_RIGHT, pluckFontSizeMaintainUnit } from '@fusioncharts/core/src/lib';\nimport isEqualString from '@fusioncharts/utils/src/string/equal';\n\nconst MULTIAXISLINE = 'multiaxisline';\nlet defaultFontStr = preDefStr.defaultFontStr,\n  divLineAlphaStr = preDefStr.divLineAlphaStr,\n  altVGridColorStr = preDefStr.altVGridColorStr,\n  altVGridAlphaStr = preDefStr.altVGridAlphaStr,\n  COLOR_000000 = preDefStr.colors.c000000,\n  POSITION_BOTTOM = preDefStr.POSITION_BOTTOM,\n  divLineAlpha3DStr = preDefStr.divLineAlpha3DStr,\n  Raphael = getDep('redraphael', 'plugin');\n\n// Resolve dependency to draw button shape\nraphaelShapesButton(Raphael);\n\n/**\n * Class for MultiAxisLine chartAPI\n */\nclass MultiAxisLine extends AreaBase {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MultiAxisLine';\n  }\n\n  /**\n   * Constructor function of MultiAxisLine chartAPI\n   */\n  constructor () {\n    super();\n    var iapi = this;\n    iapi.defaultPlotShadow = 1;\n    iapi.axisPaddingLeft = 0;\n    iapi.axisPaddingRight = 0;\n    this.registerFactory('axis', axisFactory, ['canvas']);\n    this.registerFactory('vCanvas', vCanvasFactory, ['axis']);\n    this.registerFactory('dataset', datasetFactory, ['vCanvas']);\n  }\n  /**\n   * This sets default configuration\n   * @memberof MultiAxisLine\n   */\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = MULTIAXISLINE;\n    config.defaultcrosslinethickness = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MultiAxisLine';\n  }\n  /**\n   * function to check if the chart specific data is proper is not\n   * this fn is define for specific chart types\n   * @return {boolean} if JSON data is valid or not\n   */\n  _checkInvalidSpecificData () {\n    let jsonData = this.getFromEnv('dataSource');\n    if (!jsonData.axis || !jsonData.categories) {\n      return true;\n    }\n  }\n\n  /**\n   * Function to configure the axis\n   * @return {Object} configurations of axes\n   */\n  _feedAxesRawData () {\n    var iapi = this,\n      chartConfig = iapi.config,\n      colorM = iapi.getFromEnv('color-manager'),\n      numberFormatter = iapi.getFromEnv('number-formatter'), // eslint-disable-line good-practices/no-single-usage-variable\n      dataObj = iapi.getFromEnv('dataSource'),\n      chartAttrs = dataObj.chart,\n      xAxisConf,\n      yAxisConf,\n      is3D = iapi.config.is3D,\n      palleteString = is3D ? chartPaletteStr.chart3D : chartPaletteStr.chart2D,\n      outCanfontSizeWithUnit = pluckFontSizeMaintainUnit(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10),\n      axes,\n      i,\n      len,\n      isOpposit,\n      axisJson,\n      plotColor,\n      leftAxes,\n      rightAxes,\n      axisHEXColor,\n      gridLineWidth,\n      tickWidth,\n      axisLineThickness,\n      yAxisConfigure = [],\n      setAxisConfig = {},\n      xAxisConfigure = [],\n      j,\n      jlen;\n\n    xAxisConf = { // eslint-disable-line good-practices/no-single-usage-variable\n      isVertical: false,\n      isReverse: false,\n      isOpposit: isEqualString(chartAttrs.xaxisposition, 'top'),\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig, '#$1'),\n      axisNamePadding: chartAttrs.xaxisnamepadding,\n      axisValuePadding: chartAttrs.labelpadding,\n      axisNameFont: chartAttrs.xaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.xaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.xaxisnamefontsize,\n      axisNameFontColor: chartAttrs.xaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.xaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.xaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.xaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.xaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.xaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.xaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.xaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.xaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.xaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.xaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.xaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.xaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.xaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.xaxisnameborderdashgap,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: pluck(chartAttrs.vdivlinecolor, chartAttrs.divlinecolor,\n        colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: pluck(chartAttrs.vdivlinealpha, chartAttrs.divlinealpha,\n        is3D ? colorM.getColor(divLineAlpha3DStr) : colorM.getColor(divLineAlphaStr)),\n      divLineThickness: pluckNumber(chartAttrs.vdivlinethickness, chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean(pluckNumber(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed,\n        chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: pluckNumber(chartAttrs.vdivlinedashlen, chartAttrs.divlinedashlen, 4),\n      divLineDashGap: pluckNumber(chartAttrs.vdivlinedashgap, chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: pluckNumber(chartAttrs.showalternatevgridcolor, 0),\n      alternateGridColor: pluck(chartAttrs.alternatevgridcolor, colorM.getColor(altVGridColorStr)),\n      alternateGridAlpha: pluck(chartAttrs.alternatevgridalpha, colorM.getColor(altVGridAlphaStr)),\n      numDivLines: chartAttrs.numvdivlines,\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      labelBdrColor: chartAttrs.labelbordercolor,\n      labelBdrAlpha: chartAttrs.labelborderalpha,\n      labelLink: chartAttrs.labellink,\n      labelBgColor: chartAttrs.labelbgcolor,\n      labelBgAlpha: chartAttrs.labelbgalpha,\n      labelBdrThickness: chartAttrs.labelborderthickness,\n      labelBdrPadding: chartAttrs.labelborderpadding,\n      labelBdrRadius: chartAttrs.labelborderradius,\n      labelBdrDashed: chartAttrs.labelborderdashed,\n      labelBdrDashLen: chartAttrs.labelborderdashlen,\n      labelBdrDashGap: chartAttrs.labelborderdashgap,\n      maxLabelHeight: chartAttrs.maxlabelheight,\n      axisName: chartAttrs.xaxisname,\n      axisMinValue: chartAttrs.xaxisminvalue,\n      axisMaxValue: chartAttrs.xaxismaxvalue,\n      setAdaptiveMin: chartAttrs.setadaptivexmin,\n      adjustDiv: chartAttrs.adjustvdiv,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: chartAttrs.showlabels,\n      rotateLabels: chartAttrs.rotatelabels,\n      slantLabel: pluckNumber(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: pluckNumber(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: pluckNumber(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      showLimits: chartAttrs.showvlimits,\n      showDivLineValues: pluckNumber(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues),\n      showZeroPlane: chartAttrs.showvzeroplane,\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      zeroPlaneThickness: chartAttrs.vzeroplanethickness,\n      zeroPlaneAlpha: chartAttrs.vzeroplanealpha,\n      showZeroPlaneValue: chartAttrs.showvzeroplanevalue,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: pluckNumber(chartAttrs.showxaxisline, chartAttrs.showaxislines,\n        chartAttrs.drawAxisLines, 0),\n      axisLineThickness: pluckNumber(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: pluckNumber(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: pluck(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, COLOR_000000)\n    };\n    xAxisConfigure.push(xAxisConf);\n    yAxisConf = {\n      outCanfontFamily: pluck(chartAttrs.outcnvbasefont, chartAttrs.basefont, defaultFontStr),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: pluck(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor,\n        colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig, '#$1'),\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      showAlternateGridColor: 0,\n      axisNameFont: chartAttrs.yaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.yaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.yaxisnamefontsize,\n      axisNameFontColor: chartAttrs.yaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.yaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.yaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.yaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.yaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.yaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.yaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.yaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.yaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.yaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.yaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.yaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.yaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.yaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.yaxisnameborderdashgap,\n      labelFont: chartAttrs.yaxisvaluefont,\n      labelFontSize: this.computeFontSize(chartAttrs.yaxisvaluefontsize),\n      labelFontSizeWithUnit: chartAttrs.yaxisvaluefontsize,\n      labelFontColor: chartAttrs.yaxisvaluefontcolor,\n      labelAlpha: chartAttrs.yaxisvaluealpha,\n      labelFontBold: chartAttrs.yaxisvaluefontbold,\n      labelFontItalic: chartAttrs.yaxisvaluefontitalic,\n      labelBdrColor: chartAttrs.yaxisvaluebordercolor,\n      labelBdrAlpha: chartAttrs.yaxisvalueborderalpha,\n      labelLink: chartAttrs.yaxisvaluelink,\n      labelBgColor: chartAttrs.yaxisvaluebgcolor,\n      labelBgAlpha: chartAttrs.yaxisvaluebgalpha,\n      labelBdrThickness: chartAttrs.yaxisvalueborderthickness,\n      labelBdrPadding: chartAttrs.yaxisvalueborderpadding,\n      labelBdrRadius: chartAttrs.yaxisvalueborderradius,\n      labelBdrDashed: chartAttrs.yaxisvalueborderdashed,\n      labelBdrDashLen: chartAttrs.yaxisvalueborderdashlen,\n      labelBdrDashGap: chartAttrs.yaxisvalueborderdashgap\n    };\n\n    leftAxes = {\n      'side': 'l',\n      axesConf: []\n    };\n    rightAxes = {\n      'side': 'r',\n      axesConf: []\n    };\n\n    axes = dataObj.axis || [];\n    for (i = 0, len = axes.length; i < len; i++) { // eslint-disable-line good-practices/no-single-usage-variable\n      setAxisConfig = {};\n      axisJson = axes[i];\n      setAxisConfig.checkBoxChecked = false;\n      for (j = 0, jlen = axisJson.dataset ? axisJson.dataset.length : 0; j < jlen; j += 1) {\n        if (Number(axisJson.dataset[j].visible) !== 0) {\n          setAxisConfig.checkBoxChecked = true;\n        }\n      }\n      // showAxis = pluckNumber(axisJson.showaxis, 1);\n      plotColor = colorM.getPlotColor(i);\n      axisHEXColor = pluck(axisJson.color, chartAttrs.axiscolor,\n        plotColor);\n      gridLineWidth = pluckNumber(axisJson.divlinethickness,\n        chartAttrs.divlinethickness, 1);\n      tickWidth = pluckNumber(axisJson.tickwidth, chartAttrs.axistickwidth, 2);\n      axisLineThickness = pluckNumber(axisJson.axislinethickness, chartAttrs.axislinethickness, 2);\n      isOpposit = !(pluckNumber(axisJson.axisonleft, 1));\n\n      yAxisConf.isVertical = true;\n      yAxisConf.isReverse = true;\n      yAxisConf.isOpposit = isOpposit;\n      // add axis configuration\n      yAxisConf.labelStep = pluckNumber(axisJson.yaxisvaluesstep, axisJson.yaxisvaluestep,\n        chartAttrs.yaxisvaluesstep, chartAttrs.yaxisvaluestep);\n      yAxisConf.axisMaxValue = axisJson.maxvalue;\n      // yAxisConf.tickWidth = tickWidth;\n      yAxisConf.axisMinValue = axisJson.minvalue;\n      yAxisConf.setAdaptiveMin = pluckNumber(axisJson.setadaptiveymin, chartAttrs.setadaptiveymin);\n      yAxisConf.numDivLines = pluckNumber(axisJson.numdivlines, chartAttrs.numdivlines, 4);\n      yAxisConf.adjustDiv = pluckNumber(axisJson.adjustdiv, chartAttrs.adjustdiv);\n      yAxisConf.showAxisValues = pluckNumber(axisJson.showyaxisvalues,\n        axisJson.showyaxisvalue, chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue, 1);\n      yAxisConf.showLimits = pluckNumber(axisJson.showlimits, chartAttrs.showyaxislimits,\n        chartAttrs.showlimits, yAxisConf.showAxisValues);\n      yAxisConf.showDivLineValues = pluckNumber(axisJson.showdivlinevalue,\n        chartAttrs.showdivlinevalues, axisJson.showdivlinevalues,\n        yAxisConf.showAxisValues);\n      yAxisConf.showZeroPlane = pluckNumber(axisJson.showzeroplane, chartAttrs.showzeroplane);\n      yAxisConf.showZeroPlaneValue = pluckNumber(axisJson.showzeroplanevalue,\n        chartAttrs.showzeroplanevalue);\n      yAxisConf.zeroPlaneColor = axisJson.zeroplanecolor;\n      yAxisConf.zeroPlaneThickness = pluckNumber(axisJson.zeroplanethickness, axisJson.divlinethickness,\n        chartConfig.zeroplanethickness, 2);\n      yAxisConf.zeroPlaneAlpha = pluckNumber(axisJson.zeroplanealpha, axisJson.divlinealpha,\n        chartConfig.zeroplanealpha);\n      yAxisConf.showZeroPlaneOnTop = chartConfig.showzeroplaneontop;\n      yAxisConf.divLineColor = pluck(axisJson.divlinecolor, axisHEXColor);\n      yAxisConf.divLineAlpha = pluckNumber(axisJson.divlinealpha, chartAttrs.divlinealpha,\n        colorM.getColor(divLineAlphaStr), 100);\n      yAxisConf.divLineThickness = gridLineWidth;\n      yAxisConf.divLineIsDashed = Boolean(pluckNumber(axisJson.divlinedashed, axisJson.divlineisdashed,\n        chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0));\n      yAxisConf.divLineDashLen = pluckNumber(axisJson.divlinedashlen,\n        chartAttrs.divlinedashlen, 4);\n      yAxisConf.divLineDashGap = pluckNumber(axisJson.divlinedashgap,\n        chartAttrs.divlinedashgap, 2);\n\n      yAxisConf.showAxisLine = 1;\n      yAxisConf.axisLineThickness = axisLineThickness;\n      yAxisConf.axisLineAlpha = 100;\n      yAxisConf.axisLineColor = axisHEXColor;\n      yAxisConf.tickLength = tickWidth;\n      yAxisConf.tickColor = axisHEXColor;\n      yAxisConf.tickAlpha = 100;\n      yAxisConf.tickWidth = axisLineThickness;\n      yAxisConf.axisName = axisJson.title;\n      yAxisConf.rotateAxisName = 1;\n      yAxisConf.axisNameAlignCanvas = true;\n      yAxisConf.drawAxisNameFromBottom = true;\n\n      extend2(setAxisConfig, yAxisConf);\n      numberFormatter.parseMLAxisConf(axisJson, i);\n      if (pluckNumber(axisJson.showaxis) === 0) {\n        extend2(setAxisConfig, {\n          axisIndex: i,\n          drawAxisLineWRTCanvas: false,\n          drawLabels: false,\n          drawPlotlines: false,\n          drawAxisLine: false,\n          drawPlotBands: false,\n          drawAxisName: false,\n          drawTrendLines: false,\n          drawTrendLabels: false,\n          drawTick: false,\n          drawTickMinor: false,\n          showAxis: 0\n        });\n      } else {\n        extend2(setAxisConfig, {\n          axisIndex: i,\n          drawAxisLineWRTCanvas: false,\n          drawLabels: true,\n          drawPlotlines: true,\n          drawAxisLine: true,\n          drawPlotBands: true,\n          drawAxisName: true,\n          drawTrendLines: true,\n          drawTrendLabels: true,\n          drawTick: true,\n          drawTickMinor: true,\n          showAxis: 1\n        });\n      }\n      if (isOpposit) {\n        rightAxes.axesConf.push(setAxisConfig);\n      } else {\n        leftAxes.axesConf.push(setAxisConfig);\n      }\n    }\n    leftAxes.axesConf.length && yAxisConfigure.push(leftAxes);\n    rightAxes.axesConf.length && yAxisConfigure.push(rightAxes);\n    return { xAxisConfigure, yAxisConfigure };\n  }\n  /**\n   * Managing axis and legend space management after the actual space management\n   */\n  _postSpaceManagement () {\n    var iapi = this,\n      legend = iapi.getFromEnv('legend'),\n      legendPos = legend && legend.config && legend.config.legendPos ? legend.config.legendPos.split('-') : []; // eslint-disable-line good-practices/no-single-usage-variable\n\n    iapi.setAxisDimention();\n    // little space is required between legend and axis selector ui\n    // when legend position is right-* or left-*\n    if (legendPos[0] === POSITION_LEFT) {\n      iapi._allocateSpace({ left: 5 });\n    } else if (legendPos[0] === POSITION_RIGHT) {\n      iapi._allocateSpace({ right: 5 });\n    }\n    // eslint-disable-next-line good-practices/no-function-dependency\n    iapi.getChildren('yAxisSelectorUI').forEach(comp => {\n      comp.setAxisDimention();\n    });\n    // function for adjusting value padding depending upon data and axis labels.\n    iapi.getChildren('canvas')[0].setCanvasPadding();\n    iapi.setAxisDimention();\n    iapi.config.showLegend && legend.postSpaceManager();\n\n    iapi.allocateDimensionOfChartMenuBar();\n  }\n  /**\n   * Sets dimension of Axis components\n   */\n  setAxisDimention () {\n    var iapi = this,\n      config = iapi.config,\n      xAxis = iapi.getChildren('xAxis')[0],\n      xDepth = config.xDepth || 0,\n      canvasConfig = iapi.getChildren('canvas')[0].config,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      canvasPadding = canvasConfig.canvasPadding,\n      canvasPaddingLeft = canvasConfig.canvasPaddingLeft,\n      shift = config.shift || 0,\n      canvasPaddingRight = canvasConfig.canvasPaddingRight; // eslint-disable-line good-practices/no-single-usage-variable\n    xAxis && xAxis.setAxisDimention({\n      x: config.canvasLeft + xDepth + Math.max(canvasPaddingLeft, canvasPadding),\n      y: xAxis.config.isOpposit\n        ? config.canvasTop - canvasBorderWidth\n        : config.canvasBottom + shift + canvasBorderWidth,\n      opposite: xAxis.config.isOpposit\n        ? config.canvasBottom + shift + canvasBorderWidth\n        : config.canvasTop - canvasBorderWidth,\n      axisLength: config.canvasWidth - xDepth - Math.max(canvasPaddingLeft, canvasPadding) -\n                              Math.max(canvasPaddingRight, canvasPadding)\n    });\n  }\n\n  /**\n   * Managing the space of all the components of the chart including all the axiss\n   */\n  _spaceManager () {\n    // todo marge _allocateSpace and _spacemanager\n    var spaceForActionBar,\n      actionBarSpace,\n      availableWidth,\n      availableHeight,\n      iapi = this,\n      canvas = iapi.getChildren('canvas')[0],\n      config = iapi.config,\n      // axesArr = config.axesArr,\n      // components = iapi.components,\n      legendPosition = config.legendPosition ? config.legendPosition.split('-') : [],\n      // axis = config.axisDataSetMap,\n      xAxis = iapi.getChildren('xAxis'),\n      // yAxis = iapi.getChildren('yAxis'),\n      axisSelectorUI = iapi.getChildren('yAxisSelectorUI'),\n      yDepth = config.yDepth,\n      legend = iapi.getFromEnv('legend'), // eslint-disable-line good-practices/no-single-usage-variable\n      // axesPadding = config.axesPadding,\n      rightPadding = 0,\n      leftPadding = 0,\n      // length = yAxis.length,\n      length = axisSelectorUI.length || 0, // eslint-disable-line good-practices/no-single-usage-variable\n      // yAxisObj,\n      i,\n      yAxisSpaceUsed,\n      // axesMap,\n      // leftAxes,\n      // rightAxes,\n      allotedSpace,\n      // mappedAxis,\n      chartAttrs = iapi.getFromEnv('dataSource').chart,\n      showBorder = pluckNumber(chartAttrs.showborder, iapi.config.is3D ? 0 : 1), // eslint-disable-line good-practices/no-single-usage-variable\n      canvasBorderWidth = canvas.config.canvasBorderWidth,\n      chartBorderWidth =\n                  config.borderWidth = showBorder ? pluckNumber(chartAttrs.borderthickness, 1) : 0,\n      canvasMarginTop = config.canvasMarginTop,\n      canvasMarginBottom = config.canvasMarginBottom,\n      canvasMarginLeft = config.canvasMarginLeft,\n      canvasMarginRight = config.canvasMarginRight,\n      minCanvasHeight = config.minCanvasHeight,\n      minCanvasWidth = config.minCanvasWidth,\n      height = config.height,\n      width = config.width,\n      diff,\n      heightAdjust = false, // eslint-disable-line good-practices/no-single-usage-variable\n      widthAdjust = false, // eslint-disable-line good-practices/no-single-usage-variable\n      top,\n      bottom,\n      left,\n      right,\n      currentCanvasHeight,\n      currentCanvasWidth,\n      origCanvasTopMargin = config.origCanvasTopMargin,\n      origCanvasBottomMargin = config.origCanvasBottomMargin,\n      origCanvasLeftMargin = config.origCanvasLeftMargin,\n      origCanvasRightMargin = config.origCanvasRightMargin,\n      sum;\n    //* ***** Manage space\n    iapi._allocateSpace({\n      top: chartBorderWidth,\n      bottom: chartBorderWidth,\n      left: chartBorderWidth,\n      right: chartBorderWidth\n    });\n\n    iapi._allocateSpace({\n      left: config.canvasMarginLeft,\n      right: config.canvasMarginRight\n    });\n    //* ***** Manage space\n    if (legendPosition[0] === 'left' || legendPosition[0] === 'right') {\n      allotedSpace = config.canvasWidth * 0.3;\n    } else {\n      allotedSpace = config.canvasHeight * 0.3;\n    }\n    // No space is allocated for legend drawing in single series charts\n    ((config.hasLegend !== false) && xAxis) && config.showLegend && iapi._allocateSpace(legend._manageLegendPosition(allotedSpace));\n\n    // @todo uncomment this code\n    for (i = 0; i < length; i++) {\n      yAxisSpaceUsed = axisSelectorUI[i].placeAxis(config.canvasWidth);\n      rightPadding += yAxisSpaceUsed.rightPadding;\n      leftPadding += yAxisSpaceUsed.leftPadding;\n      iapi._allocateSpace(yAxisSpaceUsed.dimension);\n    }\n    spaceForActionBar = config.availableHeight * 0.225; // eslint-disable-line good-practices/no-single-usage-variable\n    actionBarSpace = (iapi._manageActionBarSpace && iapi._manageActionBarSpace(spaceForActionBar)) || {}; // eslint-disable-line good-practices/no-single-usage-variable\n    iapi._allocateSpace(actionBarSpace);\n\n    availableHeight = (legendPosition[0] === POSITION_TOP || legendPosition[0] === POSITION_BOTTOM) ? config.canvasHeight * 0.6\n      : config.canvasWidth * 0.6;\n    iapi._manageChartMenuBar(availableHeight);\n    availableWidth = config.canvasWidth * 0.7; // eslint-disable-line good-practices/no-single-usage-variable\n    if (availableWidth > (rightPadding + leftPadding)) {\n      iapi._allocateSpace({\n        'left': leftPadding,\n        'right': rightPadding\n      });\n    }\n    availableHeight = config.canvasHeight * 0.6;\n    xAxis[0] && iapi._allocateSpace(xAxis[0].placeAxis(availableHeight));\n    // alocate the space for datasets\n    availableHeight = config.canvasHeight * 0.325;\n    iapi._getDSspace && iapi._allocateSpace(iapi._getDSspace(availableHeight));\n\n    if (yDepth) {\n      iapi._allocateSpace({\n        bottom: yDepth\n      });\n      // shift = xDepth + canvasBasePadding + canvasBaseDepth;\n    }\n\n    iapi._allocateSpace({\n      top: canvasBorderWidth,\n      bottom: canvasBorderWidth,\n      left: canvasBorderWidth,\n      right: canvasBorderWidth\n    });\n    // Allocate space for canvas margin only if the margin is less than the margin entered by the user.\n    top = canvasMarginTop > config.canvasTop ? (canvasMarginTop - config.canvasTop) : 0;\n    bottom = canvasMarginBottom > (height - config.canvasBottom)\n      ? (canvasMarginBottom + config.canvasBottom - height) : 0;\n    left = canvasMarginLeft > config.canvasLeft ? (canvasMarginLeft - config.canvasLeft) : 0;\n    right = canvasMarginRight > (width - config.canvasRight)\n      ? (canvasMarginRight + config.canvasRight - width) : 0;\n\n    iapi._allocateSpace({\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right\n    });\n    // Forcing canvas height to its minimum\n    if (heightAdjust) {\n      sum = origCanvasTopMargin + origCanvasBottomMargin;\n      currentCanvasHeight = config.canvasHeight;\n      if (currentCanvasHeight > minCanvasHeight) {\n        diff = currentCanvasHeight - minCanvasHeight;\n        top = diff * origCanvasTopMargin / sum;\n        bottom = diff * origCanvasBottomMargin / sum;\n      }\n      iapi._allocateSpace({\n        top: top,\n        bottom: bottom\n      });\n    }\n\n    // Forcing canvas width to its minimum\n    if (widthAdjust) {\n      sum = origCanvasLeftMargin + origCanvasRightMargin;\n      currentCanvasWidth = config.canvasWidth;\n      if (currentCanvasWidth > minCanvasWidth) {\n        diff = currentCanvasWidth - minCanvasWidth;\n        left = diff * origCanvasLeftMargin / sum;\n        right = diff * origCanvasRightMargin / sum;\n      }\n      iapi._allocateSpace({\n        left: left,\n        right: right\n      });\n    }\n\n    config.actualCanvasMarginTop = top;\n    config.actualCanvasMarginLeft = left;\n    config.actualCanvasMarginRight = right;\n    config.actualCanvasMarginBottom = bottom;\n\n    canvas.setDimension({\n      top: config.canvasTop,\n      left: config.canvasLeft,\n      width: config.canvasWidth,\n      height: config.canvasHeight\n    });\n  }\n\n  /**\n   * Function to parse some additional parameters of the chart\n   * @param  {Object} dataObj contains json data of the chart\n   */\n  configure (dataObj) {\n    super.configure(dataObj);\n    var iapi = this,\n      conf = iapi.config,\n      chartAttr = iapi.getFromEnv('dataSource').chart;\n\n    conf.axesPadding = 5;\n    conf.allowAxisShift = pluckNumber(chartAttr.allowaxisshift, 1);\n    conf.allowSelection = pluckNumber(chartAttr.allowselection, 1);\n    conf.checkBoxColor = pluck(chartAttr.checkboxcolor, '#2196f3');\n    conf.axisConfigured = true;\n  }\n}\nexport default MultiAxisLine;\n","import { componentFactory } from '@fusioncharts/core/src/lib';\nimport CategoryAxis from '@fusioncharts/core/src/axis/category';\nimport AxisSelectorUI from '../_internal/components/axis-selector-ui';\n/**\n * function to instatiate axis and get attached to canvas\n * @param {Object} chart chart API\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n    configure,\n    xAxis,\n    redraw = () => axisRefVisualCartesian.asyncDraw(); // eslint-disable-line good-practices/no-single-usage-variable\n  configure = chart._feedAxesRawData();\n  AxisSelectorUI.resetAxisCount();\n  componentFactory(chart, AxisSelectorUI, 'yAxisSelectorUI', configure.yAxisConfigure &&\n    configure.yAxisConfigure.length, configure.yAxisConfigure);\n  componentFactory(chart, CategoryAxis, 'xAxis', 1, configure.xAxisConfigure);\n  xAxis = chart.getChildren('xAxis')[0];\n  xAxis.setLinkedItem('canvas', canvas);\n  axisRefVisualCartesian.setLinkedItem(xAxis.getId(), xAxis);\n  axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, xAxis);\n  canvas.attachAxis(xAxis, false);\n  canvas.setPrimaryAxis('xAxis', xAxis);\n  chart._setCategories();\n}\n","import { ComponentInterface } from '@fusioncharts/core/src/component-interface';\nimport { componentFactory, TRACKER_FILL } from '@fusioncharts/core/src/lib';\nimport NumericAxis from '@fusioncharts/core/src/axis/numeric';\nimport CheckBox from '@fusioncharts/core/src/toolbox/tools/checkbox';\n\nconst checkboxTopPadding = 4;\nlet removeInfo = function (_existingAxes, _axisMapById) {\n    let key,\n      _info,\n      i;\n    for (i = _existingAxes.length - 1; i > -1; i--) {\n      key = _existingAxes[i];\n      _info = _axisMapById.get(key);\n      _info.checkbox && _info.checkbox.remove();\n      _info.axis && _info.axis.remove();\n      _axisMapById['delete'](key);\n    }\n  },\n  swap = (a, b, map) => {\n    let e1 = [a, map.get(a)], // eslint-disable-line good-practices/no-single-usage-variable\n      e2 = [b, map.get(b)], // eslint-disable-line good-practices/no-single-usage-variable\n      mapArray = Array.from(map.entries()), // eslint-disable-line good-practices/no-single-usage-variable\n      newMapArray = mapArray.map(([key, value]) => { // eslint-disable-line good-practices/no-single-usage-variable\n        if (key === a) {\n          return e2;\n        } else if (key === b) {\n          return e1;\n        }\n        return [key, value];\n      });\n    return new Map(newMapArray);\n  },\n  factoryAxis = function (parent) {\n    let axesConf = parent.config.axesConf,\n      axes,\n      axisMapById,\n      activeAxis,\n      existingInfo,\n      exsitingAxisMapById = parent.config.axisMapById,\n      existingAxes = (exsitingAxisMapById && Array.from(exsitingAxisMapById.keys())) || [],\n      info,\n      firstAxis = true, // eslint-disable-line good-practices/no-single-usage-variable\n      canvas = parent.getFromEnv('chart').getChildren('canvas')[0],\n      axisRefVisualCartesian = canvas.getChildren('axisRefVisualCartesian')[0],\n      redraw = () => axisRefVisualCartesian.asyncDraw(), // eslint-disable-line good-practices/no-single-usage-variable\n      removeId = function (id) {\n        let index = existingAxes.indexOf(id);\n        (index !== -1) && existingAxes.splice(index, 1);\n      };\n\n    componentFactory(parent, NumericAxis, 'yAxis', axesConf.length, axesConf);\n\n    axes = (parent.getChildren('yAxis') || []).slice(0);\n    axisMapById = parent.config.axisMapById = new Map(); // eslint-disable-line good-practices/no-single-usage-variable\n    (parent.config.side === 'l' ? axes.reverse() : axes).forEach((axis) => {\n      if (axis.getState('removed') || axis.config.showaxis === 0) {\n        return;\n      }\n      let axisId = axis.getId();\n      info = {};\n      info.axis = axis;\n      existingInfo = exsitingAxisMapById && exsitingAxisMapById.get(axisId);\n      info.checkbox = existingInfo && existingInfo.checkbox;\n      axisMapById.set(axisId, info);\n      if (axis.config.showaxis === 0) {\n        axis.hide();\n      } else {\n        axis.show();\n      }\n      canvas.attachAxis(axis, true);\n      firstAxis && (parent.config.besideCanvas = axisId);\n      firstAxis = false; // eslint-disable-line good-practices/no-single-usage-variable\n      if (!axisCount) {\n        activeAxis = axis;\n      }\n      axis.setLinkedItem('canvas', canvas);\n      axisRefVisualCartesian.setLinkedItem(axis.getId(), axis);\n      axisRefVisualCartesian.addExtEventListener('visiblerangeset', redraw, axis);\n      axisCount++;\n      removeId(axisId);\n    });\n    activeAxis && canvas.setPrimaryAxis('yAxis', activeAxis);\n    removeInfo(existingAxes, exsitingAxisMapById);\n  },\n  axisCount = 0;\n/**\n * This module handles the customized UI for axis in multiaxis charts\n */\nclass AxisSelectorUI extends ComponentInterface {\n  /**\n   * constructor fn\n   */\n  constructor () {\n    super();\n    this.registerFactory('axis', factoryAxis);\n  }\n  /**\n   * reset axis count\n   */\n  static resetAxisCount () {\n    axisCount = 0;\n  }\n  /**\n   * function to configure this component by given configuration\n   * @param {Object} conf configuration object\n   */\n  configureAttributes (conf = {}) {\n    let config = this.config;\n    config.axesConf = (conf.axesConf || []);\n    config.checkboxesConf = conf.checkboxesConf || [];\n    config.side = conf.side;\n  }\n  /**\n   * function to allocate and calculate total required space\n   * @param {Number} avlWidth avialable width to allocated\n   */\n  placeAxis (avlWidth) {\n    let axisSelectorUI = this,\n      availableWidth = avlWidth,\n      side = axisSelectorUI.config.side, // eslint-disable-line good-practices/no-single-usage-variable\n      axisMapById = axisSelectorUI.getAxesDetails(), // eslint-disable-line good-practices/no-single-usage-variable\n      axesPadding = axisSelectorUI.getFromEnv('chartConfig').axesPadding,\n      rightPadding = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      leftPadding = 0, // eslint-disable-line good-practices/no-single-usage-variable\n      dim,\n      dimension = {\n        right: 0,\n        left: 0\n      };\n\n    axisMapById.forEach((info) => {\n      let value = (info.value || (info.value = {})),\n        axis = info.axis;\n      if (axis.getState('removed') || axis.config.showaxis === 0) {\n        return;\n      }\n      dim = axis.placeAxis(availableWidth * 0.7);\n      if (side === 'r') {\n        availableWidth -= (value.width = dim.right);\n        dimension.right += dim.right;\n        rightPadding += axesPadding;\n      } else {\n        availableWidth -= (value.width = dim.left);\n        dimension.left += dim.left;\n        leftPadding += axesPadding;\n      }\n    });\n\n    return { dimension, rightPadding, leftPadding };\n  }\n  /**\n   * calculate post space management related calculation\n   */\n  setAxisDimention () {\n    let axisSelectorUI = this,\n      conf = axisSelectorUI.config,\n      axisMapById = axisSelectorUI.getAxesDetails(), // eslint-disable-line good-practices/no-single-usage-variable\n      axesPadding = axisSelectorUI.getFromEnv('chartConfig').axesPadding,\n      canvasConfig = axisSelectorUI.getFromEnv('chart').getChildren('canvas')[0].config,\n      canvasBorderWidth = canvasConfig.canvasBorderWidth,\n      canvasPaddingTop = canvasConfig.canvasPaddingTop,\n      canvasPaddingBottom = canvasConfig.canvasPaddingBottom, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasLeft = canvasConfig.canvasLeft,\n      canvasTop = canvasConfig.canvasTop, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasHeight = canvasConfig.canvasHeight, // eslint-disable-line good-practices/no-single-usage-variable\n      canvasRight = canvasLeft + canvasConfig.canvasWidth,\n      isRight = conf.side === 'r', // eslint-disable-line good-practices/no-single-usage-variable\n      oppositePos = conf.side === 'r' ? (canvasLeft - canvasBorderWidth) : (canvasRight + canvasBorderWidth), // eslint-disable-line good-practices/no-single-usage-variable\n      padding = 0;\n\n    axisMapById.forEach((info) => {\n      let value = (info.value || (info.value = {})),\n        axis = info.axis;\n      if (axis.config.showaxis === 0 || axis.getState('removed')) {\n        return;\n      }\n\n      if (isRight) {\n        value.x = canvasRight + canvasBorderWidth + padding + axesPadding;\n      } else {\n        value.x = canvasLeft - canvasBorderWidth - padding - axesPadding;\n      }\n      value.y = canvasTop + canvasPaddingTop;\n      value.height = canvasHeight - canvasPaddingTop - canvasPaddingBottom;\n      value.opposite = oppositePos;\n      padding += value.width + axesPadding;\n\n      axis.setAxisDimention({\n        x: value.x,\n        y: value.y,\n        opposite: value.opposite,\n        axisLength: value.height\n      });\n    });\n  }\n  /**\n   * function to draw hot elements of axes.\n   * It helps to interact with axes\n   */\n  drawHotElements () {\n    let axisSelectorUI = this,\n      conf = axisSelectorUI.config,\n      isRight = conf.side === 'r', // eslint-disable-line good-practices/no-single-usage-variable\n      allowAxisShift = axisSelectorUI.getFromEnv('chartConfig').allowAxisShift, // eslint-disable-line good-practices/no-single-usage-variable\n      chart = axisSelectorUI.getFromEnv('chart'),\n      axisMapById = conf.axisMapById, // eslint-disable-line good-practices/no-single-usage-variable\n      axisHotElements = axisSelectorUI.getGraphicalElement('axisHotElement') || [],\n      k,\n      length,\n      counter = -1,\n      attr = {\n        cursor: 'col-resize',\n        stroke: TRACKER_FILL,\n        fill: TRACKER_FILL,\n        visibility: true\n      };\n\n    if (allowAxisShift) {\n      axisMapById.forEach((info, key) => {\n        let hotElement,\n          value = info.value;\n        attr.x = value.x + (isRight ? 0 : -value.width);\n        attr.y = value.y;\n        attr.width = value.width;\n        attr.height = value.height;\n        // Creating the hot element if not created\n        if (!(hotElement = axisHotElements[++counter])) {\n          hotElement = axisSelectorUI.addGraphicalElement('axisHotElement', axisSelectorUI.getFromEnv('paper').rect(chart.getChildContainer('trackerGroup')), true);\n          hotElement.on('fc-click', axisSelectorUI._resuffelAxis);\n        }\n        hotElement.attr(attr).data('axisDetails', {\n          axisSelectorUI: axisSelectorUI,\n          canvas: chart.getChildren('canvas')[0],\n          axisId: key\n        });\n      });\n    }\n\n    for (k = counter + 1, length = axisHotElements.length; k < length; k++) { // eslint-disable-line good-practices/no-single-usage-variable\n      axisSelectorUI.removeGraphicalElement(axisHotElements[k]);\n    }\n  }\n  /**\n   * function to draw checkboxes\n   */\n  drawCheckBoxes () {\n    let axisSelectorUI = this,\n      conf = axisSelectorUI.config,\n      // chartId = axisSelectorUI.getFromEnv('chartInstance').id,\n      chartConfig = axisSelectorUI.getFromEnv('chartConfig'),\n      // chart = axisSelectorUI.getFromEnv('chart'),\n      // checkBoxContainer = chart.getChildContainer('buttonGroup'),\n      // toolBoxAPI = axisSelectorUI.getFromEnv('toolBoxAPI'),\n      // tb = axisSelectorUI.getFromEnv('toolbox'),\n      // CheckboxSymbol = toolBoxAPI.CheckboxSymbol,\n      isRight = conf.side === 'r', // eslint-disable-line good-practices/no-single-usage-variable\n      axisMapById = conf.axisMapById;\n\n    if (chartConfig.allowSelection) {\n      axisMapById.forEach((info, key) => {\n        let value = info.value,\n          currCheckBox = info.checkbox,\n          axisConfig = info.axis.config,\n          checkboxClickHandler = function () {\n            let tool = this;\n\n            tool.toggle();\n            axisSelectorUI._dolegendInteraction.call(tool, key, tool.getFromEnv('chart'));\n            axisConfig.checkBoxChecked = !axisConfig.checkBoxChecked;\n          },\n          // state = 'updating',\n          padding = isRight ? info.axis.getAxisConfig('axisNamePadding') : -value.width; // eslint-disable-line good-practices/no-single-usage-variable\n\n        if (!currCheckBox) {\n          currCheckBox = info.checkbox = new CheckBox();\n          axisSelectorUI.attachChild(currCheckBox, 'checkbox', true);\n          currCheckBox.configure({\n            isChecked: true,\n            text: '',\n            stroke: chartConfig.checkBoxColor,\n            symbolStroke: chartConfig.checkBoxColor,\n            strokeWidth: 1,\n            symbolStrokeWidth: 1,\n            containerInfo: {\n              id: 'buttonGroup',\n              label: 'group',\n              isParent: true\n            }\n          });\n          currCheckBox.addEventListener('fc-click', checkboxClickHandler);\n        }\n        currCheckBox.setDimension({\n          x: value.x + padding,\n          y: value.y + value.height + checkboxTopPadding\n        });\n      });\n    } else {\n      axisMapById.forEach((info, key) => {\n        info.checkbox && info.checkbox.remove();\n        delete info.checkbox;\n      });\n    }\n  }\n  _createLayers () {\n    let axisSelectorUI = this,\n      parentLayer = axisSelectorUI.getFromEnv('chart').getChildContainer('selectorGroup');\n    axisSelectorUI.createContainer('axisBottomGroup', { name: 'axis-bottom-group' }, parentLayer);\n    axisSelectorUI.createContainer('axisTopGroup', { name: 'axis-top-group' }, parentLayer);\n    axisSelectorUI.createContainer('buttonGroup', { name: 'buttons' }, parentLayer);\n  }\n\n  createContainer (containerName, attr, container) {\n    return this.addChildContainer(containerName, this.getFromEnv('animationManager').setAnimation({\n      container,\n      attr,\n      el: this.getChildContainer(containerName) || 'group',\n      component: this,\n      label: 'group'\n    }));\n  }\n  /**\n   * function to handle draw job\n   */\n  draw () {\n    this._createLayers();\n    this.drawHotElements();\n    this.drawCheckBoxes();\n  }\n  /**\n   * Function to swap axis on click\n   */\n  _resuffelAxis () {\n    var data = this.data('axisDetails'),\n      axisSelectorUI = data.axisSelectorUI,\n      conf = axisSelectorUI.config,\n      canvas = data.canvas,\n      axisId = data.axisId,\n      axesDetails = axisSelectorUI.getAxesDetails();\n    if (conf.besideCanvas !== axisId) {\n      axesDetails = axisSelectorUI.config.axisMapById = swap(conf.besideCanvas, axisId, axesDetails);\n    }\n    conf.besideCanvas = axisId;\n    canvas.setPrimaryAxis('yAxis', axesDetails.get(axisId).axis);\n    axisSelectorUI.setAxisDimention();\n\n    axisSelectorUI.asyncDraw();\n    canvas.getChildren('axisRefVisualCartesian')[0].asyncDraw();\n  }\n  /**\n   * Function to manipulate legends on checkbox click\n   * @param {number} axisIndex The index of the axis against which the checkbox is clicked\n   * @param {Object} chart the chart object\n   */\n  _dolegendInteraction (axisId, chart) {\n    var checkbox = this,\n      datasets = [],\n      // legend = iapi.getChildren('legend'),\n      obj,\n      dataset;\n\n    chart.iterateComponents((child) => {\n      if ((child.getType() === 'dataset')) {\n        datasets.push(child);\n      }\n    });\n\n    for (obj in datasets) {\n      if (datasets.hasOwnProperty(obj)) {\n        dataset = datasets[obj];\n        if (dataset.getFromEnv('yAxis').getId() === axisId) {\n          if (!dataset.getState('visible') && checkbox.config.checked) {\n            dataset.config.legendInteractivity = true;\n            dataset.show();\n          } else if (dataset.getState('visible') && !checkbox.config.checked) {\n            dataset.config.legendInteractivity = true;\n            dataset.hide();\n          }\n        }\n      }\n    }\n    // legend.drawLegend();\n  }\n  /**\n   * Function to change the state of the checkbox when legend is clicked\n   * @param {Object} e The evet object\n   */\n  manipulateCheckBox (e) {\n    var data = e.data,\n      clickedDS = data.dataset,\n      axisId = clickedDS.getFromEnv('yAxis').getId(), // eslint-disable-line good-practices/no-single-usage-variable\n      vCanvas = clickedDS.getLinkedParent(), // eslint-disable-line good-practices/no-single-usage-variable\n      allDS = vCanvas.getChildren().dataset,\n      checkboxUncheck = true, // eslint-disable-line good-practices/no-single-usage-variable\n      i,\n      len,\n      dataset,\n      info,\n      axisMapById = this.getAxesDetails(); // eslint-disable-line good-practices/no-single-usage-variable\n\n    if (!(info = axisMapById.get(axisId))) {\n      return;\n    }\n    if (data.state === 'hide') {\n      for (i = 0, len = allDS.length; i < len; i++) {\n        dataset = allDS[i];\n        if (dataset.getState('visible')) {\n          checkboxUncheck = false;\n        }\n      }\n      if (checkboxUncheck) {\n        info.checkbox && info.checkbox.uncheck();\n      }\n    } else {\n      info.checkbox && info.checkbox.check();\n    }\n  }\n  /**\n   * return axis components\n   * @return {Object} axesMap\n   */\n  getAxesDetails () {\n    return this.config.axisMapById;\n  }\n  /**\n   * return type of this component\n   */\n  getType () {\n    return 'customAxisUI';\n  }\n  /**\n   * return name of this component\n   */\n  getName () {\n    return 'multiAxisSelectorUI';\n  }\n  /**\n   * function to return axes attached to this comp.\n   * This API is for external invocation whre the axes\n   * is required from the outside components.\n   * @return {Array} - axes\n   */\n  getAxes () {\n    // eslint-disable-next-line good-practices/no-function-dependency\n    return Array.from(this.config.axisMapById.values()).map(elem => elem.axis);\n  }\n}\nexport default AxisSelectorUI;\n","import VirtualCanvas from '@fusioncharts/charts/src/_internal/components/canvases/vcanvas';\nimport { componentFactory } from '@fusioncharts/core/src/lib';\n/**\n * Function to create virtual canvas, additionally axis data is added to the env of virtual canvas\n */\nexport default function (chart) {\n  let canvas = chart.getChildren('canvas')[0],\n    axisSelectorUI = chart.getChildren('yAxisSelectorUI'), // eslint-disable-line good-practices/no-single-usage-variable\n    axisY = chart.getFromEnv('dataSource').axis, // eslint-disable-line good-practices/no-single-usage-variable\n    vCanvas,\n    axes,\n    xAxis = [],\n    yAxis = [],\n    vC,\n    i,\n    k,\n    j;\n\n  axes = chart.getChildren('xAxis');\n  for (k = 0; k < (axes && axes.length); k++) {\n    if (!axes[k].getState('removed')) {\n      xAxis.push(axes[k]);\n    }\n  }\n  axisSelectorUI.forEach(comp => {\n    axes = comp.getChildren('yAxis');\n    for (k = 0; k < (axes && axes.length); k++) {\n      if (!axes[k].getState('removed')) {\n        yAxis.push(axes[k]);\n      }\n    }\n  });\n\n  componentFactory(canvas, VirtualCanvas, 'vCanvas', xAxis.length * yAxis.length);\n  vCanvas = canvas.getChildren('vCanvas');\n  for (i = 0, k = 0; i < (xAxis && xAxis.length); i++) {\n    for (j = 0; j < (yAxis && yAxis.length); j++, k++) {\n      vC = vCanvas[k];\n      vC.configure();\n      vC.xAxis(xAxis[i])\n        .yAxis(yAxis[j])\n        .canvas(canvas);\n      vC.addToEnv('axisData', axisY[k]);\n      vC.addToEnv('vCanvas', vCanvas[k]);\n    }\n  }\n}\n","import { datasetFactory } from '@fusioncharts/core/src/lib';\nimport MultiAxisDataset from '../dataset/multiaxisline';\n\n/**\n * Function to create the datasets\n */\nexport default function (chart) {\n  let datasetsJSON,\n    length,\n    indices,\n    vC,\n    children = chart.getChildren(),\n    yAxisSelectorUI = children.yAxisSelectorUI, // eslint-disable-line good-practices/no-single-usage-variable\n    canvas = children.canvas[0], // eslint-disable-line good-practices/no-single-usage-variable\n    numLen = (length + '').length,\n    vCanvas = canvas.getChildren('vCanvas'),\n    visibilityChangedHandler = function (e) {\n      yAxisSelectorUI.forEach(comp => {\n        comp.manipulateCheckBox(e);\n      });\n    },\n    addDatasetVisibilityChangedEventListener = (dataset) => {\n      dataset.addEventListener('datasetVisibilityChanged', visibilityChangedHandler);\n    };\n\n  for (let i = 0, len = vCanvas.length; i < len; i++) {\n    vC = vCanvas[i];\n    if (vC.getState('removed')) {\n      continue;\n    }\n    datasetsJSON = vC.getFromEnv('axisData').dataset;\n    // vC.addToEnv('axisData', axis);\n    if (datasetsJSON) {\n      length = datasetsJSON.length;\n      // for each dataset its datasetindex is a fractional number where the whole part is the index of its parent axis\n      // and the fractional part is its index in that axis\n      indices = Array(length).fill(vC.getFromEnv('yAxis').config.axisIndex).map((n, j) => { // eslint-disable-line\n        return n + (j + 1) * (1 / Math.pow(10, numLen));\n      });\n      datasetFactory(vC, MultiAxisDataset, 'dataset', length, datasetsJSON, indices);\n      children = vC.getChildren('dataset');\n      // Adding event listeners to each dataset\n      children.forEach(addDatasetVisibilityChangedEventListener);\n    }\n  }\n}\n","/* eslint require-jsdoc: 'error', valid-jsdoc: [\"error\", { \"requireReturn\": false }] */\nimport Line from '@fusioncharts/charts/src/dataset/line';\nimport { pluck, pluckNumber, HUNDREDSTRING, getDashStyle } from '@fusioncharts/core/src/lib';\nimport { addDep } from '@fusioncharts/core/src/dependency-manager';\nimport multiaxisAnimation from './index.animation';\naddDep({\n  name: 'multiAxislineAnimation',\n  type: 'animationRule',\n  extension: multiaxisAnimation\n});\n/**\n * Class for MultiAxisLine chartAPI\n */\nclass MultiAxisDataset extends Line {\n  /**\n   * Sets the type of the component\n   * @return {string} type\n   */\n  getType () {\n    return 'dataset';\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'multiaxisline';\n  }\n  /**\n   * Function to configure the data given by the user at the dataset level\n   * @param {Object} datasetJSON JSON for dataset configurations\n   * @return {boolean} False if no datasetJSON is present\n   */\n  configure (datasetJSON) {\n    if (!datasetJSON) {\n      return false;\n    }\n    this.trimData(datasetJSON);\n    this.config.JSONData = datasetJSON;\n    super.configure(datasetJSON);\n  }\n  /**\n   * Function to parse the data given by the user at the dataset level\n   */\n  parseAttributes () {\n    var dataSet = this,\n      jsonData = dataSet.config.JSONData,\n      dataSetConfig = dataSet.config,\n      chartAttr = dataSet.getFromEnv('chart-attrib'),\n      axis = dataSet.getFromEnv('axisData'),\n      lineDashStyle,\n      lineDashed;\n\n    super.parseAttributes();\n\n    dataSetConfig.linethickness = pluckNumber(jsonData.linethickness, axis.linethickness,\n      chartAttr.linethickness, 2);\n    dataSetConfig.lineDashLen = pluckNumber(jsonData.linedashlen, axis.linedashlen,\n      chartAttr.linedashlen, 5);\n    dataSetConfig.lineDashGap = pluckNumber(jsonData.linedashgap, axis.linedashgap,\n      chartAttr.linedashgap, 4);\n    dataSetConfig.alpha = pluckNumber(jsonData.alpha, axis.linealpha,\n      chartAttr.linealpha, HUNDREDSTRING);\n    dataSetConfig.linecolor = pluck(jsonData.color, axis.linecolor, axis.color, chartAttr.linecolor,\n      dataSetConfig.plotColor);\n\n    dataSetConfig.legendSymbolColor = dataSet.getName() === 'line' ? dataSetConfig.lineColor\n      : dataSetConfig.plotFillColor;\n    lineDashed = pluckNumber(jsonData.dashed, axis.linedashed, chartAttr.linedashed);// eslint-disable-line good-practices/no-single-usage-variable\n    lineDashStyle = getDashStyle(dataSetConfig.lineDashLen, dataSetConfig.lineDashGap);// eslint-disable-line good-practices/no-single-usage-variable\n    dataSetConfig.anchorbordercolor = pluck(jsonData.anchorbordercolor, jsonData.color, axis.color,\n      chartAttr.anchorbordercolor, dataSetConfig.lineColor, dataSetConfig.plotColor);\n    dataSetConfig.lineDashStyle = lineDashed\n      ? lineDashStyle : 'none';\n  }\n}\nexport default MultiAxisDataset;\n","import lineAnimation from '@fusioncharts/charts/src/dataset/line/index.animation';\n\nexport default {\n  '*.dataset.multiaxisline': lineAnimation['*.dataset.line']\n};\n","import Msstepline from '@fusioncharts/powercharts/src/chart/msstepline';\nexport default Msstepline;\n","import MSCartesian from '@fusioncharts/charts/src/chart/_internal/mscartesian';\nimport { _setDefaultConfig } from '@fusioncharts/charts/src/chart/_internal/areabase';\nimport MSStepLineDataset from '../../dataset/msstepline';\n\nconst MSSTEPLINE = 'msstepline';\nclass MSStepLine extends MSCartesian {\n  /**\n   * Provides the name of the chart extension\n   *\n   * @static\n   * @return {string} The name of the chart extension\n   */\n  static getName () {\n    return 'MSStepLine';\n  }\n\n  constructor () {\n    super();\n    this.defaultPlotShadow = 1;\n  }\n  /**\n   * Sets the name of the component\n   * @return {string} name\n   */\n  getName () {\n    return 'MSStepLine';\n  }\n  __setDefaultConfig () {\n    super.__setDefaultConfig();\n    let config = this.config;\n    config.defaultDatasetType = MSSTEPLINE;\n    config.drawverticaljoins = 1;\n    config.useforwardsteps = 1;\n    config.zeroplanethickness = 1;\n    config.zeroplanealpha = 40;\n    config.showzeroplaneontop = 0;\n    config.enablemousetracking = true;\n    config.defaultcrosslinethickness = 1;\n    _setDefaultConfig.call(this);\n  }\n  getDSGroupdef () {\n    // this fn overrides\n  }\n  getDSdef () {\n    return MSStepLineDataset;\n  }\n}\nexport default MSStepLine;\n"],"sourceRoot":""}